; ModuleID = '../../third_party/blink/renderer/modules/manifest/manifest_parser.cc'
source_filename = "../../third_party/blink/renderer/modules/manifest/manifest_parser.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::ManifestParser" = type { %"class.WTF::String", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::FeatureContext"*, i8, %"class.mojo::StructPtr", %"class.WTF::Vector.136" }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.2" }
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.blink::mojom::blink::Manifest"* }
%"class.blink::mojom::blink::Manifest" = type <{ %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", i32, [4 x i8], %"class.WTF::Vector", i32, [4 x i8], %"class.WTF::Vector.5", %"class.WTF::Vector.5", %"class.WTF::Vector.27", %"class.mojo::StructPtr.39", %"class.WTF::Vector.70", %"class.WTF::Vector.84", %"class.WTF::Vector.96", %"class.mojo::StructPtr.109", %"class.WTF::Vector.116", i8, i8, [2 x i8], i32, i8, [3 x i8], i32, %"class.WTF::String", %"class.blink::KURL", i32, i8, [3 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i32*, i32, i32 }
%"class.WTF::Vector.5" = type { %"class.WTF::VectorBuffer.6" }
%"class.WTF::VectorBuffer.6" = type { %"class.WTF::VectorBufferBase.7" }
%"class.WTF::VectorBufferBase.7" = type { %"class.mojo::StructPtr.8"*, i32, i32 }
%"class.mojo::StructPtr.8" = type { %"class.std::__1::unique_ptr.9" }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.blink::mojom::blink::ManifestImageResource"* }
%"class.blink::mojom::blink::ManifestImageResource" = type { %"class.blink::KURL", %"class.WTF::String", %"class.WTF::Vector.12", %"class.WTF::Vector.17" }
%"class.WTF::Vector.12" = type { %"class.WTF::VectorBuffer.13" }
%"class.WTF::VectorBuffer.13" = type { %"class.WTF::VectorBufferBase.14" }
%"class.WTF::VectorBufferBase.14" = type { %"class.gfx::Size"*, i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.WTF::Vector.17" = type { %"class.WTF::VectorBuffer.18" }
%"class.WTF::VectorBuffer.18" = type { %"class.WTF::VectorBufferBase.19" }
%"class.WTF::VectorBufferBase.19" = type { i32*, i32, i32 }
%"class.WTF::Vector.27" = type { %"class.WTF::VectorBuffer.28" }
%"class.WTF::VectorBuffer.28" = type { %"class.WTF::VectorBufferBase.29" }
%"class.WTF::VectorBufferBase.29" = type { %"class.mojo::StructPtr.30"*, i32, i32 }
%"class.mojo::StructPtr.30" = type { %"class.std::__1::unique_ptr.31" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.blink::mojom::blink::ManifestShortcutItem"* }
%"class.blink::mojom::blink::ManifestShortcutItem" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.blink::KURL", %"class.WTF::Vector.5" }
%"class.mojo::StructPtr.39" = type { %"class.std::__1::unique_ptr.40" }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"class.blink::mojom::blink::ManifestShareTarget"* }
%"class.blink::mojom::blink::ManifestShareTarget" = type { %"class.blink::KURL", i32, i32, %"class.mojo::StructPtr.43" }
%"class.mojo::StructPtr.43" = type { %"class.std::__1::unique_ptr.44" }
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::mojom::blink::ManifestShareTargetParams"* }
%"class.blink::mojom::blink::ManifestShareTargetParams" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.WTF::Vector.47" }
%"class.WTF::Vector.47" = type { %"class.WTF::VectorBuffer.48" }
%"class.WTF::VectorBuffer.48" = type { %"class.WTF::VectorBufferBase.49" }
%"class.WTF::VectorBufferBase.49" = type { %"class.mojo::StructPtr.50"*, i32, i32 }
%"class.mojo::StructPtr.50" = type { %"class.std::__1::unique_ptr.51" }
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.blink::mojom::blink::ManifestFileFilter"* }
%"class.blink::mojom::blink::ManifestFileFilter" = type { %"class.WTF::String", %"class.WTF::Vector.54" }
%"class.WTF::Vector.54" = type { %"class.WTF::VectorBuffer.55" }
%"class.WTF::VectorBuffer.55" = type { %"class.WTF::VectorBufferBase.56" }
%"class.WTF::VectorBufferBase.56" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.70" = type { %"class.WTF::VectorBuffer.71" }
%"class.WTF::VectorBuffer.71" = type { %"class.WTF::VectorBufferBase.72" }
%"class.WTF::VectorBufferBase.72" = type { %"class.mojo::StructPtr.73"*, i32, i32 }
%"class.mojo::StructPtr.73" = type { %"class.std::__1::unique_ptr.74" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::mojom::blink::ManifestFileHandler"* }
%"class.blink::mojom::blink::ManifestFileHandler" = type { %"class.blink::KURL", %"class.WTF::String", %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::String", %"class.WTF::Vector.54" }
%"class.WTF::Vector.84" = type { %"class.WTF::VectorBuffer.85" }
%"class.WTF::VectorBuffer.85" = type { %"class.WTF::VectorBufferBase.86" }
%"class.WTF::VectorBufferBase.86" = type { %"class.mojo::StructPtr.87"*, i32, i32 }
%"class.mojo::StructPtr.87" = type { %"class.std::__1::unique_ptr.88" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.blink::mojom::blink::ManifestProtocolHandler"* }
%"class.blink::mojom::blink::ManifestProtocolHandler" = type { %"class.WTF::String", %"class.blink::KURL" }
%"class.WTF::Vector.96" = type { %"class.WTF::VectorBuffer.97" }
%"class.WTF::VectorBuffer.97" = type { %"class.WTF::VectorBufferBase.98" }
%"class.WTF::VectorBufferBase.98" = type { %"class.mojo::StructPtr.99"*, i32, i32 }
%"class.mojo::StructPtr.99" = type { %"class.std::__1::unique_ptr.100" }
%"class.std::__1::unique_ptr.100" = type { %"class.std::__1::__compressed_pair.101" }
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.blink::mojom::blink::ManifestUrlHandler"* }
%"class.blink::mojom::blink::ManifestUrlHandler" = type <{ %class.scoped_refptr.103, i8, [7 x i8] }>
%class.scoped_refptr.103 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.141", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.103 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.141" = type { %"class.absl::optional_internal::optional_data.142" }
%"class.absl::optional_internal::optional_data.142" = type { %"class.absl::optional_internal::optional_data_base.143" }
%"class.absl::optional_internal::optional_data_base.143" = type { %"class.absl::optional_internal::optional_data_dtor_base.144" }
%"class.absl::optional_internal::optional_data_dtor_base.144" = type { i8, %union.anon.145 }
%union.anon.145 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.mojo::StructPtr.109" = type { %"class.std::__1::unique_ptr.110" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::mojom::blink::ManifestNoteTaking"* }
%"class.blink::mojom::blink::ManifestNoteTaking" = type { %"class.blink::KURL" }
%"class.WTF::Vector.116" = type { %"class.WTF::VectorBuffer.117" }
%"class.WTF::VectorBuffer.117" = type { %"class.WTF::VectorBufferBase.118" }
%"class.WTF::VectorBufferBase.118" = type { %"class.mojo::StructPtr.119"*, i32, i32 }
%"class.mojo::StructPtr.119" = type { %"class.std::__1::unique_ptr.120" }
%"class.std::__1::unique_ptr.120" = type { %"class.std::__1::__compressed_pair.121" }
%"class.std::__1::__compressed_pair.121" = type { %"struct.std::__1::__compressed_pair_elem.122" }
%"struct.std::__1::__compressed_pair_elem.122" = type { %"class.blink::mojom::blink::ManifestRelatedApplication"* }
%"class.blink::mojom::blink::ManifestRelatedApplication" = type { %"class.WTF::String", %"class.absl::optional.123", %"class.WTF::String" }
%"class.absl::optional.123" = type { %"class.absl::optional_internal::optional_data.124" }
%"class.absl::optional_internal::optional_data.124" = type { %"class.absl::optional_internal::optional_data_base.125" }
%"class.absl::optional_internal::optional_data_base.125" = type { %"class.absl::optional_internal::optional_data_dtor_base.126" }
%"class.absl::optional_internal::optional_data_dtor_base.126" = type { i8, %union.anon.127 }
%union.anon.127 = type { %"class.blink::KURL" }
%"class.WTF::Vector.136" = type { %"class.WTF::VectorBuffer.137" }
%"class.WTF::VectorBuffer.137" = type { %"class.WTF::VectorBufferBase.138" }
%"class.WTF::VectorBufferBase.138" = type { %"class.mojo::InlinedStructPtr"*, i32, i32 }
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::ManifestError", i32, [4 x i8] }
%"class.blink::mojom::blink::ManifestError" = type <{ %"class.WTF::String", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.blink::FeatureContext" = type { i32 (...)** }
%"struct.blink::JSONParseError" = type { i32, i32, i32, %"class.WTF::String" }
%"class.absl::optional.163" = type { %"class.absl::optional_internal::optional_data.164" }
%"class.absl::optional_internal::optional_data.164" = type { %"class.absl::optional_internal::optional_data_base.165" }
%"class.absl::optional_internal::optional_data_base.165" = type { %"class.absl::optional_internal::optional_data_dtor_base.166" }
%"class.absl::optional_internal::optional_data_dtor_base.166" = type { i8, %union.anon.167 }
%union.anon.167 = type { %"class.mojo::StructPtr.39" }
%"class.blink::JSONValue" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::JSONObject" = type { %"class.blink::JSONValue.base", [4 x i8], %"class.WTF::HashMap.155", %"class.WTF::Vector.54" }
%"class.blink::JSONValue.base" = type <{ i32 (...)**, i32 }>
%"class.WTF::HashMap.155" = type { %"class.WTF::HashTable.156" }
%"class.WTF::HashTable.156" = type <{ %"struct.WTF::KeyValuePair.159"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.159" = type opaque
%"class.absl::optional.179" = type { %"class.absl::optional_internal::optional_data.180" }
%"class.absl::optional_internal::optional_data.180" = type { %"class.absl::optional_internal::optional_data_base.181" }
%"class.absl::optional_internal::optional_data_base.181" = type { %"class.absl::optional_internal::optional_data_dtor_base.182" }
%"class.absl::optional_internal::optional_data_dtor_base.182" = type { i8, %union.anon.183 }
%union.anon.183 = type { %"class.WTF::String" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.189 }
%union.anon.189 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::JSONArray" = type { %"class.blink::JSONValue.base", %"class.WTF::Vector.191" }
%"class.WTF::Vector.191" = type { %"class.WTF::VectorBuffer.192" }
%"class.WTF::VectorBuffer.192" = type { %"class.WTF::VectorBufferBase.193" }
%"class.WTF::VectorBufferBase.193" = type { %"class.std::__1::unique_ptr.146"*, i32, i32 }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::JSONValue"* }
%"class.absl::optional.216" = type { %"class.absl::optional_internal::optional_data.217" }
%"class.absl::optional_internal::optional_data.217" = type { %"class.absl::optional_internal::optional_data_base.218" }
%"class.absl::optional_internal::optional_data_base.218" = type { %"class.absl::optional_internal::optional_data_dtor_base.219" }
%"class.absl::optional_internal::optional_data_dtor_base.219" = type { i8, %union.anon.220 }
%union.anon.220 = type { %"class.mojo::StructPtr.73" }
%"class.absl::optional.221" = type { %"class.absl::optional_internal::optional_data.222" }
%"class.absl::optional_internal::optional_data.222" = type { %"class.absl::optional_internal::optional_data_base.223" }
%"class.absl::optional_internal::optional_data_base.223" = type { %"class.absl::optional_internal::optional_data_dtor_base.224" }
%"class.absl::optional_internal::optional_data_dtor_base.224" = type { i8, %union.anon.225 }
%union.anon.225 = type { %"class.mojo::StructPtr.87" }
%"class.WTF::StringAppend.185" = type { %"class.WTF::StringAppend.177", %"class.WTF::String" }
%"class.WTF::StringAppend.177" = type { %"class.WTF::StringAppend.178", i8* }
%"class.WTF::StringAppend.178" = type { i8*, %"class.WTF::String" }
%"class.WTF::IntegerToStringConverter" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend.184" = type { %"class.WTF::StringAppend.185", i8* }
%"class.absl::optional.226" = type { %"class.absl::optional_internal::optional_data.227" }
%"class.absl::optional_internal::optional_data.227" = type { %"class.absl::optional_internal::optional_data_base.228" }
%"class.absl::optional_internal::optional_data_base.228" = type { %"class.absl::optional_internal::optional_data_dtor_base.229" }
%"class.absl::optional_internal::optional_data_dtor_base.229" = type { i8, %union.anon.230 }
%union.anon.230 = type { %"class.mojo::StructPtr.99" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.177", i8* }
%"class.WTF::StringTypeAdapter.276" = type <{ i8*, i32, [4 x i8] }>
%"class.blink::Color" = type { i32 }
%"class.WTF::StringAppend.186" = type { %"class.WTF::StringAppend.184", i8* }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.gfx::Size"*, %"class.gfx::Size"*, %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"class.gfx::Size"* }
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.absl::optional.201" = type { %"class.absl::optional_internal::optional_data.202" }
%"class.absl::optional_internal::optional_data.202" = type { %"class.absl::optional_internal::optional_data_base.203" }
%"class.absl::optional_internal::optional_data_base.203" = type { %"class.absl::optional_internal::optional_data_dtor_base.204" }
%"class.absl::optional_internal::optional_data_dtor_base.204" = type { i8, %union.anon.205 }
%union.anon.205 = type { %"class.WTF::Vector.17" }
%"struct.std::__1::pair" = type { %"class.WTF::String", %"class.blink::JSONValue"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::StringTypeAdapter.278" = type { %"class.WTF::StringTypeAdapter.279" }
%"class.WTF::StringTypeAdapter.279" = type { %"class.WTF::StringView" }

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_EcvS3_Ev = comdat any

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm11EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN5blink5mojom5blink13ManifestErrorEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16InlinedStructPtrIN5blink5mojom5blink13ManifestErrorEEEEEmm = comdat any

$_ZNSt3__14swapIN5blink5mojom5blink13ManifestErrorEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EC2ES7_S2_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_E6lengthEv = comdat any

$_ZN3WTF6VectorIN5blink5mojom11DisplayModeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5mojom11DisplayModeEEEmm = comdat any

$_ZN3WTF6VectorIN3gfx4SizeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN3gfx4SizeEEEmm = comdat any

$_ZN3WTF6VectorIN5blink5mojom29ManifestImageResource_PurposeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5mojom29ManifestImageResource_PurposeEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink20ManifestShortcutItemEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink20ManifestShortcutItemEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink20ManifestShortcutItemEEEEEmm = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink18ManifestFileFilterEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink18ManifestFileFilterEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink18ManifestFileFilterEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink19ManifestFileHandlerEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink19ManifestFileHandlerEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink19ManifestFileHandlerEEEEEmm = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorIS1_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E6insertINS_17HashMapTranslatorISD_S8_S4_EERS1_S5_EENS_18HashTableAddResultISE_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorIS1_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorIS1_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E8RehashToEPS6_jSF_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorIS1_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E16LookupForWritingERKS1_ = comdat any

$_ZN3WTF5MoverINS_12KeyValuePairINS_6StringENS_6VectorIS2_Lj0ENS_18PartitionAllocatorEEEEES4_NS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IS5_EEEELb1EE4MoveEOS6_RS6_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink23ManifestProtocolHandlerEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink23ManifestProtocolHandlerEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink23ManifestProtocolHandlerEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink18ManifestUrlHandlerEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink18ManifestUrlHandlerEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink18ManifestUrlHandlerEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink26ManifestRelatedApplicationEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

$_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink26ManifestRelatedApplicationEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink26ManifestRelatedApplicationEEEEEmm = comdat any

$_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN5blink5mojom5blink13ManifestErrorEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_ = comdat any

@.str = private unnamed_addr constant [42 x i8] c"root element must be a valid JSON object.\00", align 1
@_ZN5blink8features28kWebAppEnableIsolatedStorageE = external global %"struct.base::Feature", align 8
@.str.1 = private unnamed_addr constant [11 x i8] c"property '\00", align 1
@.str.2 = private unnamed_addr constant [17 x i8] c"' ignored, type \00", align 1
@.str.3 = private unnamed_addr constant [18 x i8] c"boolean expected.\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"string expected.\00", align 1
@.str.5 = private unnamed_addr constant [7 x i8] c"' of '\00", align 1
@.str.6 = private unnamed_addr constant [15 x i8] c"' not present.\00", align 1
@.str.7 = private unnamed_addr constant [33 x i8] c"' ignored, type string expected.\00", align 1
@.str.8 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.9 = private unnamed_addr constant [22 x i8] c"' is an empty string.\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"' ignored, '\00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"' is not a \00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"valid color.\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"' ignored, URL is invalid.\00", align 1
@.str.14 = private unnamed_addr constant [46 x i8] c"' ignored, should be same origin as document.\00", align 1
@.str.15 = private unnamed_addr constant [51 x i8] c"' ignored, should be within scope of the manifest.\00", align 1
@.str.16 = private unnamed_addr constant [5 x i8] c"name\00", align 1
@.str.17 = private unnamed_addr constant [11 x i8] c"short_name\00", align 1
@.str.18 = private unnamed_addr constant [12 x i8] c"description\00", align 1
@.str.19 = private unnamed_addr constant [10 x i8] c"start_url\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"scope\00", align 1
@.str.21 = private unnamed_addr constant [73 x i8] c"property 'scope' ignored. Start url should be within scope of scope URL.\00", align 1
@.str.22 = private unnamed_addr constant [8 x i8] c"display\00", align 1
@.str.23 = private unnamed_addr constant [33 x i8] c"unknown 'display' value ignored.\00", align 1
@.str.24 = private unnamed_addr constant [38 x i8] c"inapplicable 'display' value ignored.\00", align 1
@.str.25 = private unnamed_addr constant [17 x i8] c"display_override\00", align 1
@.str.26 = private unnamed_addr constant [58 x i8] c"property 'display_override' ignored, type array expected.\00", align 1
@.str.27 = private unnamed_addr constant [12 x i8] c"orientation\00", align 1
@.str.28 = private unnamed_addr constant [37 x i8] c"unknown 'orientation' value ignored.\00", align 1
@.str.29 = private unnamed_addr constant [4 x i8] c"src\00", align 1
@.str.30 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"sizes\00", align 1
@.str.32 = private unnamed_addr constant [31 x i8] c"found icon with no valid size.\00", align 1
@.str.33 = private unnamed_addr constant [8 x i8] c"purpose\00", align 1
@.str.34 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.36 = private unnamed_addr constant [11 x i8] c"monochrome\00", align 1
@.str.37 = private unnamed_addr constant [9 x i8] c"maskable\00", align 1
@.str.38 = private unnamed_addr constant [47 x i8] c"found icon with no valid purpose; ignoring it.\00", align 1
@.str.39 = private unnamed_addr constant [74 x i8] c"found icon with one or more invalid purposes; those purposes are ignored.\00", align 1
@.str.40 = private unnamed_addr constant [6 x i8] c"icons\00", align 1
@.str.41 = private unnamed_addr constant [12 x i8] c"screenshots\00", align 1
@.str.42 = private unnamed_addr constant [32 x i8] c"' ignored, type array expected.\00", align 1
@.str.43 = private unnamed_addr constant [9 x i8] c"shortcut\00", align 1
@.str.44 = private unnamed_addr constant [4 x i8] c"url\00", align 1
@.str.45 = private unnamed_addr constant [42 x i8] c"property 'url' of 'shortcut' not present.\00", align 1
@.str.46 = private unnamed_addr constant [10 x i8] c"shortcuts\00", align 1
@.str.47 = private unnamed_addr constant [51 x i8] c"property 'shortcuts' ignored, type array expected.\00", align 1
@.str.48 = private unnamed_addr constant [25 x i8] c"property 'name' missing.\00", align 1
@.str.49 = private unnamed_addr constant [47 x i8] c"property 'name' ignored, type string expected.\00", align 1
@.str.50 = private unnamed_addr constant [7 x i8] c"accept\00", align 1
@.str.51 = private unnamed_addr constant [58 x i8] c"property 'accept' ignored, type array or string expected.\00", align 1
@.str.52 = private unnamed_addr constant [55 x i8] c"'accept' entry ignored, expected to be of type string.\00", align 1
@.str.53 = private unnamed_addr constant [61 x i8] c"property 'files' ignored, type array or FileFilter expected.\00", align 1
@.str.54 = private unnamed_addr constant [52 x i8] c"files must be a sequence of non-empty file entries.\00", align 1
@.str.55 = private unnamed_addr constant [7 x i8] c"method\00", align 1
@.str.56 = private unnamed_addr constant [74 x i8] c"Method should be set to either GET or POST. It currently defaults to GET.\00", align 1
@.str.57 = private unnamed_addr constant [4 x i8] c"GET\00", align 1
@.str.58 = private unnamed_addr constant [5 x i8] c"POST\00", align 1
@.str.59 = private unnamed_addr constant [8 x i8] c"enctype\00", align 1
@.str.60 = private unnamed_addr constant [149 x i8] c"Enctype should be set to either application/x-www-form-urlencoded or multipart/form-data. It currently defaults to application/x-www-form-urlencoded\00", align 1
@.str.61 = private unnamed_addr constant [34 x i8] c"application/x-www-form-urlencoded\00", align 1
@.str.62 = private unnamed_addr constant [20 x i8] c"multipart/form-data\00", align 1
@.str.63 = private unnamed_addr constant [5 x i8] c"text\00", align 1
@.str.64 = private unnamed_addr constant [6 x i8] c"title\00", align 1
@.str.65 = private unnamed_addr constant [6 x i8] c"files\00", align 1
@.str.66 = private unnamed_addr constant [13 x i8] c"share_target\00", align 1
@.str.67 = private unnamed_addr constant [7 x i8] c"action\00", align 1
@.str.68 = private unnamed_addr constant [63 x i8] c"property 'share_target' ignored. Property 'action' is invalid.\00", align 1
@.str.69 = private unnamed_addr constant [7 x i8] c"params\00", align 1
@.str.70 = private unnamed_addr constant [77 x i8] c"property 'share_target' ignored. Property 'params' type dictionary expected.\00", align 1
@.str.71 = private unnamed_addr constant [50 x i8] c"invalid method. Allowed methods are:GET and POST.\00", align 1
@.str.72 = private unnamed_addr constant [97 x i8] c"invalid enctype. Allowed enctypes are:application/x-www-form-urlencoded and multipart/form-data.\00", align 1
@.str.73 = private unnamed_addr constant [83 x i8] c"invalid enctype for GET method. Only application/x-www-form-urlencoded is allowed.\00", align 1
@.str.74 = private unnamed_addr constant [56 x i8] c"files are only supported with multipart/form-data POST.\00", align 1
@.str.75 = private unnamed_addr constant [32 x i8] c"invalid mime type inside files.\00", align 1
@.str.76 = private unnamed_addr constant [14 x i8] c"file_handlers\00", align 1
@.str.77 = private unnamed_addr constant [55 x i8] c"property 'file_handlers' ignored, type array expected.\00", align 1
@.str.78 = private unnamed_addr constant [43 x i8] c"FileHandler ignored, type object expected.\00", align 1
@.str.79 = private unnamed_addr constant [51 x i8] c"FileHandler ignored. Property 'action' is invalid.\00", align 1
@.str.80 = private unnamed_addr constant [51 x i8] c"FileHandler ignored. Property 'accept' is invalid.\00", align 1
@.str.81 = private unnamed_addr constant [64 x i8] c"property 'accept' file extension ignored, type string expected.\00", align 1
@.str.82 = private unnamed_addr constant [83 x i8] c"property 'accept' type ignored. File extensions must be type array or type string.\00", align 1
@.str.83 = private unnamed_addr constant [2 x i8] c".\00", align 1
@.str.84 = private unnamed_addr constant [65 x i8] c"property 'accept' file extension ignored, must start with a '.'.\00", align 1
@_ZN5blink8features29kWebAppEnableProtocolHandlersE = external global %"struct.base::Feature", align 8
@.str.85 = private unnamed_addr constant [18 x i8] c"protocol_handlers\00", align 1
@.str.86 = private unnamed_addr constant [59 x i8] c"property 'protocol_handlers' ignored, type array expected.\00", align 1
@.str.87 = private unnamed_addr constant [55 x i8] c"protocol_handlers entry ignored, type object expected.\00", align 1
@.str.88 = private unnamed_addr constant [9 x i8] c"protocol\00", align 1
@.str.89 = private unnamed_addr constant [74 x i8] c"protocol_handlers entry ignored, required property 'protocol' is missing.\00", align 1
@.str.90 = private unnamed_addr constant [74 x i8] c"protocol_handlers entry ignored, required property 'protocol' is invalid.\00", align 1
@.str.91 = private unnamed_addr constant [69 x i8] c"protocol_handlers entry ignored, required property 'url' is missing.\00", align 1
@_ZZN5blink14ManifestParser20ParseProtocolHandlerEPKNS_10JSONObjectEE6kToken = internal constant [3 x i8] c"%s\00", align 1
@.str.92 = private unnamed_addr constant [69 x i8] c"protocol_handlers entry ignored, required property 'url' is invalid.\00", align 1
@_ZN5blink8features24kWebAppEnableUrlHandlersE = external global %"struct.base::Feature", align 8
@.str.93 = private unnamed_addr constant [13 x i8] c"url_handlers\00", align 1
@.str.94 = private unnamed_addr constant [54 x i8] c"property 'url_handlers' ignored, type array expected.\00", align 1
@.str.95 = private unnamed_addr constant [44 x i8] c"property 'url_handlers' contains more than \00", align 1
@.str.96 = private unnamed_addr constant [33 x i8] c" valid elements, only the first \00", align 1
@.str.97 = private unnamed_addr constant [13 x i8] c" are parsed.\00", align 1
@.str.98 = private unnamed_addr constant [50 x i8] c"url_handlers entry ignored, type object expected.\00", align 1
@.str.99 = private unnamed_addr constant [7 x i8] c"origin\00", align 1
@.str.100 = private unnamed_addr constant [67 x i8] c"url_handlers entry ignored, required property 'origin' is missing.\00", align 1
@.str.101 = private unnamed_addr constant [67 x i8] c"url_handlers entry ignored, required property 'origin' is invalid.\00", align 1
@.str.102 = private unnamed_addr constant [74 x i8] c"url_handlers entry ignored, 'origin' exceeds maximum character length of \00", align 1
@.str.103 = private unnamed_addr constant [3 x i8] c" .\00", align 1
@_ZN3url12kHttpsSchemeE = external constant [0 x i8], align 1
@.str.104 = private unnamed_addr constant [82 x i8] c"url_handlers entry ignored, required property 'origin' must use the https scheme.\00", align 1
@_ZN5blink12_GLOBAL__N_125kUrlHandlerWildcardPrefixE = internal constant [5 x i8] c"%2A.\00", align 1
@.str.105 = private unnamed_addr constant [77 x i8] c"url_handlers entry ignored, domain of required property 'origin' is invalid.\00", align 1
@.str.106 = private unnamed_addr constant [13 x i8] c"new_note_url\00", align 1
@_ZN5blink8features17kWebAppNoteTakingE = external global %"struct.base::Feature", align 8
@.str.107 = private unnamed_addr constant [12 x i8] c"note_taking\00", align 1
@.str.108 = private unnamed_addr constant [54 x i8] c"property 'note_taking' ignored, type object expected.\00", align 1
@.str.109 = private unnamed_addr constant [9 x i8] c"platform\00", align 1
@.str.110 = private unnamed_addr constant [3 x i8] c"id\00", align 1
@.str.111 = private unnamed_addr constant [21 x i8] c"related_applications\00", align 1
@.str.112 = private unnamed_addr constant [62 x i8] c"property 'related_applications' ignored, type array expected.\00", align 1
@.str.113 = private unnamed_addr constant [61 x i8] c"'platform' is a required field, related application ignored.\00", align 1
@.str.114 = private unnamed_addr constant [63 x i8] c"one of 'url' or 'id' is required, related application ignored.\00", align 1
@.str.115 = private unnamed_addr constant [28 x i8] c"prefer_related_applications\00", align 1
@.str.116 = private unnamed_addr constant [12 x i8] c"theme_color\00", align 1
@.str.117 = private unnamed_addr constant [17 x i8] c"background_color\00", align 1
@.str.118 = private unnamed_addr constant [14 x i8] c"gcm_sender_id\00", align 1
@_ZN5blink8features26kWebAppEnableLinkCapturingE = external global %"struct.base::Feature", align 8
@.str.119 = private unnamed_addr constant [14 x i8] c"capture_links\00", align 1
@.str.120 = private unnamed_addr constant [22 x i8] c"capture_links value '\00", align 1
@.str.121 = private unnamed_addr constant [26 x i8] c"' ignored, unknown value.\00", align 1
@.str.122 = private unnamed_addr constant [28 x i8] c"' ignored, string expected.\00", align 1
@.str.123 = private unnamed_addr constant [76 x i8] c"property 'capture_links' ignored, type string or array of strings expected.\00", align 1
@.str.124 = private unnamed_addr constant [17 x i8] c"isolated_storage\00", align 1
@.str.125 = private unnamed_addr constant [2 x i8] c"/\00", align 1
@.str.126 = private unnamed_addr constant [56 x i8] c"Isolated storage is only supported with a scope of \22/\22.\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.127 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.128 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16InlinedStructPtrIN5blink5mojom5blink13ManifestErrorEEEEEPKcv = private unnamed_addr constant [106 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::InlinedStructPtr<blink::mojom::blink::ManifestError>]\00", align 1
@.str.129 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.130 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.131 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5mojom11DisplayModeEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::mojom::DisplayMode]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN3gfx4SizeEEEPKcv = private unnamed_addr constant [57 x i8] c"const char *WTF::GetStringWithTypeName() [T = gfx::Size]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5mojom29ManifestImageResource_PurposeEEEPKcv = private unnamed_addr constant [91 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::mojom::ManifestImageResource_Purpose]\00", align 1
@_ZN3WTF19kASCIICaseFoldTableE = external local_unnamed_addr constant [256 x i8], align 16
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEEEEPKcv = private unnamed_addr constant [107 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<blink::mojom::blink::ManifestImageResource>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink20ManifestShortcutItemEEEEEPKcv = private unnamed_addr constant [106 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<blink::mojom::blink::ManifestShortcutItem>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink18ManifestFileFilterEEEEEPKcv = private unnamed_addr constant [104 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<blink::mojom::blink::ManifestFileFilter>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink19ManifestFileHandlerEEEEEPKcv = private unnamed_addr constant [105 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<blink::mojom::blink::ManifestFileHandler>]\00", align 1
@.str.134 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.135 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringENS_6VectorIS2_Lj0ENS_18PartitionAllocatorEEEEEEEPKcv = private unnamed_addr constant [133 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, WTF::Vector<WTF::String, 0, WTF::PartitionAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink23ManifestProtocolHandlerEEEEEPKcv = private unnamed_addr constant [109 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<blink::mojom::blink::ManifestProtocolHandler>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink18ManifestUrlHandlerEEEEEPKcv = private unnamed_addr constant [104 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<blink::mojom::blink::ManifestUrlHandler>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink26ManifestRelatedApplicationEEEEEPKcv = private unnamed_addr constant [112 x i8] c"const char *WTF::GetStringWithTypeName() [T = mojo::StructPtr<blink::mojom::blink::ManifestRelatedApplication>]\00", align 1

@_ZN5blink14ManifestParserC1ERKN3WTF6StringERKNS_4KURLES7_PKNS_14FeatureContextE = hidden unnamed_addr alias void (%"class.blink::ManifestParser"*, %"class.WTF::String"*, %"class.blink::KURL"*, %"class.blink::KURL"*, %"class.blink::FeatureContext"*), void (%"class.blink::ManifestParser"*, %"class.WTF::String"*, %"class.blink::KURL"*, %"class.blink::KURL"*, %"class.blink::FeatureContext"*)* @_ZN5blink14ManifestParserC2ERKN3WTF6StringERKNS_4KURLES7_PKNS_14FeatureContextE
@_ZN5blink14ManifestParserD1Ev = hidden unnamed_addr alias void (%"class.blink::ManifestParser"*), void (%"class.blink::ManifestParser"*)* @_ZN5blink14ManifestParserD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParserC2ERKN3WTF6StringERKNS_4KURLES7_PKNS_14FeatureContextE(%"class.blink::ManifestParser"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112), %"class.blink::FeatureContext"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"** %8, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %9, label %27, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %27

15:                                               ; preds = %10
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = zext i32 %17 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #14
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !2

24:                                               ; preds = %15
  tail call void @llvm.trap() #14
  unreachable

25:                                               ; preds = %15
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %16, align 4
  br label %27

27:                                               ; preds = %5, %10, %25
  %28 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 1
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %28, %"class.blink::KURL"* dereferenceable(112) %2) #14
  %29 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 2
  tail call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %29, %"class.blink::KURL"* dereferenceable(112) %3) #14
  %30 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 3
  store %"class.blink::FeatureContext"* %4, %"class.blink::FeatureContext"** %30, align 8
  %31 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 4
  store i8 0, i8* %31, align 8
  %32 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 5
  %33 = bitcast %"class.mojo::StructPtr"* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false)
  ret void
}

declare void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParserD2Ev(%"class.blink::ManifestParser"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 6
  %3 = getelementptr inbounds %"class.WTF::Vector.136", %"class.WTF::Vector.136"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %3, align 8
  %5 = icmp eq %"class.mojo::InlinedStructPtr"* %4, null
  br i1 %5, label %24, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %"class.mojo::InlinedStructPtr"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %22, label %11, !prof !2

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %4, i64 %12
  br label %14

14:                                               ; preds = %14, %11
  %15 = phi %"class.mojo::InlinedStructPtr"* [ %17, %14 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %15, i64 0, i32 0
  tail call void @_ZN5blink5mojom5blink13ManifestErrorD1Ev(%"class.blink::mojom::blink::ManifestError"* %16) #14
  %17 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %15, i64 1
  %18 = icmp eq %"class.mojo::InlinedStructPtr"* %17, %13
  br i1 %18, label %19, label %14

19:                                               ; preds = %14
  store i32 0, i32* %8, align 4
  %20 = bitcast %"class.WTF::Vector.136"* %2 to i8**
  %21 = load i8*, i8** %20, align 8
  br label %22

22:                                               ; preds = %19, %6
  %23 = phi i8* [ %21, %19 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %23) #14
  store %"class.mojo::InlinedStructPtr"* null, %"class.mojo::InlinedStructPtr"** %3, align 8
  br label %24

24:                                               ; preds = %1, %22
  %25 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %25, align 8
  store %"class.blink::mojom::blink::Manifest"* null, %"class.blink::mojom::blink::Manifest"** %25, align 8
  %27 = icmp eq %"class.blink::mojom::blink::Manifest"* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  tail call void @_ZN5blink5mojom5blink8ManifestD1Ev(%"class.blink::mojom::blink::Manifest"* nonnull %26) #14
  %29 = bitcast %"class.blink::mojom::blink::Manifest"* %26 to i8*
  tail call void @_ZdlPv(i8* %29) #15
  br label %30

30:                                               ; preds = %24, %28
  %31 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 2
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %31) #14
  %32 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 1
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %32) #14
  %33 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #14
  br label %49

49:                                               ; preds = %30, %45, %48
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser5ParseEv(%"class.blink::ManifestParser"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"struct.blink::JSONParseError", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.blink::KURL", align 8
  %11 = alloca %"class.blink::KURL", align 8
  %12 = alloca %"class.WTF::Vector", align 8
  %13 = alloca %"class.WTF::Vector.5", align 8
  %14 = alloca %"class.WTF::Vector.5", align 8
  %15 = alloca %"class.absl::optional.163", align 8
  %16 = alloca %"class.WTF::Vector.70", align 8
  %17 = alloca %"class.WTF::Vector.84", align 8
  %18 = alloca %"class.WTF::Vector.96", align 8
  %19 = alloca %"class.mojo::StructPtr.109", align 8
  %20 = alloca %"class.WTF::Vector.116", align 8
  %21 = alloca %"class.WTF::Vector.27", align 8
  %22 = bitcast %"struct.blink::JSONParseError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 16, i1 false)
  %23 = getelementptr inbounds %"struct.blink::JSONParseError", %"struct.blink::JSONParseError"* %8, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 0
  %25 = call %"class.blink::JSONValue"* @_ZN5blink9ParseJSONERKN3WTF6StringEPNS_14JSONParseErrorE(%"class.WTF::String"* dereferenceable(8) %24, %"struct.blink::JSONParseError"* nonnull %8) #14
  %26 = call i8* @_Znwm(i64 440) #15, !noalias !4
  %27 = bitcast i8* %26 to %"class.blink::mojom::blink::Manifest"*
  call void @_ZN5blink5mojom5blink8ManifestC1Ev(%"class.blink::mojom::blink::Manifest"* nonnull %27) #14, !noalias !4
  %28 = ptrtoint i8* %26 to i64
  %29 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 5
  %30 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %29, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  store %"class.blink::mojom::blink::Manifest"* null, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %32 = icmp eq %"class.blink::mojom::blink::Manifest"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %1
  %34 = bitcast %"class.mojo::StructPtr"* %29 to i64*
  store i64 %28, i64* %34, align 8
  br label %42

35:                                               ; preds = %1
  call void @_ZN5blink5mojom5blink8ManifestD1Ev(%"class.blink::mojom::blink::Manifest"* nonnull %31) #14
  %36 = bitcast %"class.blink::mojom::blink::Manifest"* %31 to i8*
  call void @_ZdlPv(i8* %36) #15
  %37 = bitcast %"class.mojo::StructPtr"* %29 to i64*
  %38 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  store i64 %28, i64* %37, align 8
  %39 = icmp eq %"class.blink::mojom::blink::Manifest"* %38, null
  br i1 %39, label %42, label %40

40:                                               ; preds = %35
  call void @_ZN5blink5mojom5blink8ManifestD1Ev(%"class.blink::mojom::blink::Manifest"* nonnull %38) #14
  %41 = bitcast %"class.blink::mojom::blink::Manifest"* %38 to i8*
  call void @_ZdlPv(i8* %41) #15
  br label %42

42:                                               ; preds = %33, %35, %40
  %43 = icmp eq %"class.blink::JSONValue"* %25, null
  br i1 %43, label %698, label %44

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %25, i64 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = icmp eq i32 %46, 5
  %48 = bitcast %"class.blink::JSONValue"* %25 to %"class.blink::JSONObject"*
  br i1 %47, label %73, label %49

49:                                               ; preds = %44
  %50 = bitcast %"class.blink::JSONValue"* %25 to void (%"class.blink::JSONValue"*)***
  %51 = load void (%"class.blink::JSONValue"*)**, void (%"class.blink::JSONValue"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %51, i64 1
  %53 = load void (%"class.blink::JSONValue"*)*, void (%"class.blink::JSONValue"*)** %52, align 8
  call void %53(%"class.blink::JSONValue"* nonnull %25) #14
  %54 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i64 41) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %9, i1 zeroext true, i32 0, i32 0)
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %49
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #14
  br label %71

71:                                               ; preds = %70, %67, %49
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #14
  call void @_ZN5blink15ManifestUmaUtil11ParseFailedEv() #14
  %72 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 4
  store i8 1, i8* %72, align 8
  br label %705

73:                                               ; preds = %44
  %74 = call %"class.WTF::StringImpl"* @_ZN5blink14ManifestParser9ParseNameEPKNS_10JSONObjectE(%"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* nonnull %48)
  %75 = ptrtoint %"class.WTF::StringImpl"* %74 to i64
  %76 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %77 = bitcast %"class.blink::mojom::blink::Manifest"* %76 to i64*
  %78 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %76, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  store i64 %75, i64* %77, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #14
  br label %94

94:                                               ; preds = %93, %90, %73
  %95 = call %"class.WTF::StringImpl"* @_ZN5blink14ManifestParser14ParseShortNameEPKNS_10JSONObjectE(%"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* nonnull %48)
  %96 = ptrtoint %"class.WTF::StringImpl"* %95 to i64
  %97 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %98 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %97, i64 0, i32 1
  %99 = bitcast %"class.WTF::String"* %98 to i64*
  %100 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %98, i64 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  store i64 %96, i64* %99, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %94
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #14
  br label %116

116:                                              ; preds = %115, %112, %94
  %117 = call %"class.WTF::StringImpl"* @_ZN5blink14ManifestParser16ParseDescriptionEPKNS_10JSONObjectE(%"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* nonnull %48)
  %118 = ptrtoint %"class.WTF::StringImpl"* %117 to i64
  %119 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %120 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %119, i64 0, i32 2
  %121 = bitcast %"class.WTF::String"* %120 to i64*
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %120, i64 0, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  store i64 %118, i64* %121, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %116
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #14
  br label %138

138:                                              ; preds = %137, %134, %116
  %139 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %139) #14
  %140 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140) #14, !noalias !7
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0), i64 9) #14, !noalias !7
  %141 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 1
  call void @_ZN5blink14ManifestParser8ParseURLEPKNS_10JSONObjectERKN3WTF6StringERKNS_4KURLENS0_20ParseURLRestrictionsE(%"class.blink::KURL"* nonnull sret %10, %"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* nonnull %48, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.blink::KURL"* dereferenceable(112) %141, i32 1) #14
  %142 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8, !noalias !7
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %138
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #14
  br label %158

158:                                              ; preds = %138, %154, %157
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140) #14, !noalias !7
  %159 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %160 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %159, i64 0, i32 3
  %161 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %160, %"class.blink::KURL"* nonnull dereferenceable(112) %10) #14
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %10) #14
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %139) #14
  %162 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %162) #14
  %163 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %164 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %163, i64 0, i32 3
  call void @_ZN5blink14ManifestParser10ParseScopeEPKNS_10JSONObjectERKNS_4KURLE(%"class.blink::KURL"* nonnull sret %11, %"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* nonnull %48, %"class.blink::KURL"* dereferenceable(112) %164)
  %165 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %166 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %165, i64 0, i32 26
  %167 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %166, %"class.blink::KURL"* nonnull dereferenceable(112) %11) #14
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %11) #14
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %162) #14
  %168 = call i32 @_ZN5blink14ManifestParser12ParseDisplayEPKNS_10JSONObjectE(%"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* nonnull %48)
  %169 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %170 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %169, i64 0, i32 4
  store i32 %168, i32* %170, align 8
  %171 = bitcast %"class.WTF::Vector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %171) #14
  call void @_ZN5blink14ManifestParser20ParseDisplayOverrideEPKNS_10JSONObjectE(%"class.WTF::Vector"* nonnull sret %12, %"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* nonnull %48)
  %172 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %173 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %172, i64 0, i32 6
  %174 = bitcast %"class.WTF::Vector"* %12 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = bitcast %"class.WTF::Vector"* %173 to i64*
  %177 = load i64, i64* %176, align 8
  store atomic i64 %177, i64* %174 monotonic, align 8
  store atomic i64 %175, i64* %176 monotonic, align 8
  %178 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %172, i64 0, i32 6, i32 0, i32 0, i32 1
  %179 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %12, i64 0, i32 0, i32 0, i32 1
  %180 = load i32, i32* %178, align 4
  %181 = load i32, i32* %179, align 8
  store i32 %181, i32* %178, align 4
  store i32 %180, i32* %179, align 8
  %182 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %172, i64 0, i32 6, i32 0, i32 0, i32 2
  %183 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %12, i64 0, i32 0, i32 0, i32 2
  %184 = load i32, i32* %182, align 4
  %185 = load i32, i32* %183, align 4
  store i32 %185, i32* %182, align 4
  store i32 %184, i32* %183, align 4
  %186 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %12, i64 0, i32 0, i32 0, i32 0
  %187 = icmp eq i64 %177, 0
  %188 = inttoptr i64 %177 to i8*
  br i1 %187, label %193, label %189, !prof !3

189:                                              ; preds = %158
  %190 = icmp eq i32 %184, 0
  br i1 %190, label %192, label %191, !prof !2

191:                                              ; preds = %189
  store i32 0, i32* %183, align 4
  br label %192

192:                                              ; preds = %191, %189
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %188) #14
  store i32* null, i32** %186, align 8
  br label %193

193:                                              ; preds = %158, %192
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %171) #14
  %194 = call i32 @_ZN5blink14ManifestParser16ParseOrientationEPKNS_10JSONObjectE(%"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* nonnull %48)
  %195 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %196 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %195, i64 0, i32 7
  store i32 %194, i32* %196, align 8
  %197 = bitcast %"class.WTF::Vector.5"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %197) #14
  %198 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %198) #14, !noalias !10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0), i64 5) #14, !noalias !10
  call void @_ZN5blink14ManifestParser18ParseImageResourceERKN3WTF6StringEPKNS_10JSONObjectE(%"class.WTF::Vector.5"* nonnull sret %13, %"class.blink::ManifestParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::JSONObject"* nonnull %48) #14
  %199 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %200 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %199, align 8, !noalias !10
  %201 = icmp eq %"class.WTF::StringImpl"* %200, null
  br i1 %201, label %215, label %202

202:                                              ; preds = %193
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %204 = load atomic i32, i32* %203 monotonic, align 4
  %205 = and i32 %204, 2
  %206 = icmp eq i32 %205, 0
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %200, i64 0, i32 0
  %208 = load i32, i32* %207, align 4
  br i1 %206, label %209, label %211

209:                                              ; preds = %202
  %210 = add i32 %208, -1
  store i32 %210, i32* %207, align 4
  br label %211

211:                                              ; preds = %209, %202
  %212 = phi i32 [ %210, %209 ], [ %208, %202 ]
  %213 = icmp eq i32 %212, 0
  br i1 %213, label %214, label %215

214:                                              ; preds = %211
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %200) #14
  br label %215

215:                                              ; preds = %193, %211, %214
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %198) #14, !noalias !10
  %216 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %217 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %216, i64 0, i32 9
  %218 = bitcast %"class.WTF::Vector.5"* %13 to i64*
  %219 = load i64, i64* %218, align 8
  %220 = bitcast %"class.WTF::Vector.5"* %217 to i64*
  %221 = load i64, i64* %220, align 8
  store atomic i64 %221, i64* %218 monotonic, align 8
  store atomic i64 %219, i64* %220 monotonic, align 8
  %222 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %216, i64 0, i32 9, i32 0, i32 0, i32 1
  %223 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %13, i64 0, i32 0, i32 0, i32 1
  %224 = load i32, i32* %222, align 4
  %225 = load i32, i32* %223, align 8
  store i32 %225, i32* %222, align 4
  store i32 %224, i32* %223, align 8
  %226 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %216, i64 0, i32 9, i32 0, i32 0, i32 2
  %227 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %13, i64 0, i32 0, i32 0, i32 2
  %228 = load i32, i32* %226, align 4
  %229 = load i32, i32* %227, align 4
  store i32 %229, i32* %226, align 4
  store i32 %228, i32* %227, align 4
  %230 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %13, i64 0, i32 0, i32 0, i32 0
  %231 = inttoptr i64 %221 to %"class.mojo::StructPtr.8"*
  %232 = icmp eq i64 %221, 0
  br i1 %232, label %254, label %233, !prof !3

233:                                              ; preds = %215
  %234 = inttoptr i64 %221 to i8*
  %235 = icmp eq i32 %228, 0
  br i1 %235, label %252, label %236, !prof !2

236:                                              ; preds = %233
  %237 = zext i32 %228 to i64
  %238 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %231, i64 %237
  br label %239

239:                                              ; preds = %246, %236
  %240 = phi %"class.mojo::StructPtr.8"* [ %247, %246 ], [ %231, %236 ]
  %241 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %240, i64 0, i32 0, i32 0, i32 0, i32 0
  %242 = load %"class.blink::mojom::blink::ManifestImageResource"*, %"class.blink::mojom::blink::ManifestImageResource"** %241, align 8
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %241, align 8
  %243 = icmp eq %"class.blink::mojom::blink::ManifestImageResource"* %242, null
  br i1 %243, label %246, label %244

244:                                              ; preds = %239
  call void @_ZN5blink5mojom5blink21ManifestImageResourceD1Ev(%"class.blink::mojom::blink::ManifestImageResource"* nonnull %242) #14
  %245 = getelementptr inbounds %"class.blink::mojom::blink::ManifestImageResource", %"class.blink::mojom::blink::ManifestImageResource"* %242, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %245) #15
  br label %246

246:                                              ; preds = %244, %239
  %247 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %240, i64 1
  %248 = icmp eq %"class.mojo::StructPtr.8"* %247, %238
  br i1 %248, label %249, label %239

249:                                              ; preds = %246
  store i32 0, i32* %227, align 4
  %250 = bitcast %"class.WTF::Vector.5"* %13 to i8**
  %251 = load i8*, i8** %250, align 8
  br label %252

252:                                              ; preds = %249, %233
  %253 = phi i8* [ %251, %249 ], [ %234, %233 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %253) #14
  store %"class.mojo::StructPtr.8"* null, %"class.mojo::StructPtr.8"** %230, align 8
  br label %254

254:                                              ; preds = %215, %252
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %197) #14
  %255 = bitcast %"class.WTF::Vector.5"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %255) #14
  %256 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %256) #14, !noalias !13
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.41, i64 0, i64 0), i64 11) #14, !noalias !13
  call void @_ZN5blink14ManifestParser18ParseImageResourceERKN3WTF6StringEPKNS_10JSONObjectE(%"class.WTF::Vector.5"* nonnull sret %14, %"class.blink::ManifestParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.blink::JSONObject"* nonnull %48) #14
  %257 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %257, align 8, !noalias !13
  %259 = icmp eq %"class.WTF::StringImpl"* %258, null
  br i1 %259, label %273, label %260

260:                                              ; preds = %254
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %262 = load atomic i32, i32* %261 monotonic, align 4
  %263 = and i32 %262, 2
  %264 = icmp eq i32 %263, 0
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %258, i64 0, i32 0
  %266 = load i32, i32* %265, align 4
  br i1 %264, label %267, label %269

267:                                              ; preds = %260
  %268 = add i32 %266, -1
  store i32 %268, i32* %265, align 4
  br label %269

269:                                              ; preds = %267, %260
  %270 = phi i32 [ %268, %267 ], [ %266, %260 ]
  %271 = icmp eq i32 %270, 0
  br i1 %271, label %272, label %273

272:                                              ; preds = %269
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %258) #14
  br label %273

273:                                              ; preds = %254, %269, %272
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %256) #14, !noalias !13
  %274 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %275 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %274, i64 0, i32 10
  %276 = bitcast %"class.WTF::Vector.5"* %14 to i64*
  %277 = load i64, i64* %276, align 8
  %278 = bitcast %"class.WTF::Vector.5"* %275 to i64*
  %279 = load i64, i64* %278, align 8
  store atomic i64 %279, i64* %276 monotonic, align 8
  store atomic i64 %277, i64* %278 monotonic, align 8
  %280 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %274, i64 0, i32 10, i32 0, i32 0, i32 1
  %281 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %14, i64 0, i32 0, i32 0, i32 1
  %282 = load i32, i32* %280, align 4
  %283 = load i32, i32* %281, align 8
  store i32 %283, i32* %280, align 4
  store i32 %282, i32* %281, align 8
  %284 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %274, i64 0, i32 10, i32 0, i32 0, i32 2
  %285 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %14, i64 0, i32 0, i32 0, i32 2
  %286 = load i32, i32* %284, align 4
  %287 = load i32, i32* %285, align 4
  store i32 %287, i32* %284, align 4
  store i32 %286, i32* %285, align 4
  %288 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %14, i64 0, i32 0, i32 0, i32 0
  %289 = inttoptr i64 %279 to %"class.mojo::StructPtr.8"*
  %290 = icmp eq i64 %279, 0
  br i1 %290, label %312, label %291, !prof !3

291:                                              ; preds = %273
  %292 = inttoptr i64 %279 to i8*
  %293 = icmp eq i32 %286, 0
  br i1 %293, label %310, label %294, !prof !2

294:                                              ; preds = %291
  %295 = zext i32 %286 to i64
  %296 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %289, i64 %295
  br label %297

297:                                              ; preds = %304, %294
  %298 = phi %"class.mojo::StructPtr.8"* [ %305, %304 ], [ %289, %294 ]
  %299 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %298, i64 0, i32 0, i32 0, i32 0, i32 0
  %300 = load %"class.blink::mojom::blink::ManifestImageResource"*, %"class.blink::mojom::blink::ManifestImageResource"** %299, align 8
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %299, align 8
  %301 = icmp eq %"class.blink::mojom::blink::ManifestImageResource"* %300, null
  br i1 %301, label %304, label %302

302:                                              ; preds = %297
  call void @_ZN5blink5mojom5blink21ManifestImageResourceD1Ev(%"class.blink::mojom::blink::ManifestImageResource"* nonnull %300) #14
  %303 = getelementptr inbounds %"class.blink::mojom::blink::ManifestImageResource", %"class.blink::mojom::blink::ManifestImageResource"* %300, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %303) #15
  br label %304

304:                                              ; preds = %302, %297
  %305 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %298, i64 1
  %306 = icmp eq %"class.mojo::StructPtr.8"* %305, %296
  br i1 %306, label %307, label %297

307:                                              ; preds = %304
  store i32 0, i32* %285, align 4
  %308 = bitcast %"class.WTF::Vector.5"* %14 to i8**
  %309 = load i8*, i8** %308, align 8
  br label %310

310:                                              ; preds = %307, %291
  %311 = phi i8* [ %309, %307 ], [ %292, %291 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %311) #14
  store %"class.mojo::StructPtr.8"* null, %"class.mojo::StructPtr.8"** %288, align 8
  br label %312

312:                                              ; preds = %273, %310
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %255) #14
  %313 = getelementptr inbounds %"class.absl::optional.163", %"class.absl::optional.163"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %313) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %313, i8 -86, i64 16, i1 false)
  call void @_ZN5blink14ManifestParser16ParseShareTargetEPKNS_10JSONObjectE(%"class.absl::optional.163"* nonnull sret %15, %"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* nonnull %48)
  %314 = load i8, i8* %313, align 8, !range !16
  %315 = icmp eq i8 %314, 0
  br i1 %315, label %334, label %316

316:                                              ; preds = %312
  %317 = getelementptr inbounds %"class.absl::optional.163", %"class.absl::optional.163"* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %318 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %319 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %318, i64 0, i32 12
  %320 = getelementptr inbounds %"class.mojo::StructPtr.39", %"class.mojo::StructPtr.39"* %319, i64 0, i32 0, i32 0, i32 0, i32 0
  %321 = load %"class.blink::mojom::blink::ManifestShareTarget"*, %"class.blink::mojom::blink::ManifestShareTarget"** %320, align 8
  store %"class.blink::mojom::blink::ManifestShareTarget"* null, %"class.blink::mojom::blink::ManifestShareTarget"** %320, align 8
  %322 = icmp eq %"class.blink::mojom::blink::ManifestShareTarget"* %321, null
  br i1 %322, label %323, label %325

323:                                              ; preds = %316
  %324 = bitcast %"class.mojo::StructPtr.39"* %319 to i64*
  br label %329

325:                                              ; preds = %316
  call void @_ZN5blink5mojom5blink19ManifestShareTargetD1Ev(%"class.blink::mojom::blink::ManifestShareTarget"* nonnull %321) #14
  %326 = getelementptr inbounds %"class.blink::mojom::blink::ManifestShareTarget", %"class.blink::mojom::blink::ManifestShareTarget"* %321, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %326) #15
  %327 = bitcast %"class.mojo::StructPtr.39"* %319 to i64*
  %328 = load i64, i64* %327, align 8
  br label %329

329:                                              ; preds = %323, %325
  %330 = phi i64* [ %324, %323 ], [ %327, %325 ]
  %331 = phi i64 [ 0, %323 ], [ %328, %325 ]
  %332 = bitcast %"class.mojo::StructPtr.39"* %317 to i64*
  %333 = load i64, i64* %332, align 8
  store i64 %333, i64* %330, align 8
  store i64 %331, i64* %332, align 8
  br label %334

334:                                              ; preds = %312, %329
  %335 = bitcast %"class.WTF::Vector.70"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %335) #14
  call void @_ZN5blink14ManifestParser17ParseFileHandlersEPKNS_10JSONObjectE(%"class.WTF::Vector.70"* nonnull sret %16, %"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* nonnull %48)
  %336 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %337 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %336, i64 0, i32 13
  %338 = bitcast %"class.WTF::Vector.70"* %16 to i64*
  %339 = load i64, i64* %338, align 8
  %340 = bitcast %"class.WTF::Vector.70"* %337 to i64*
  %341 = load i64, i64* %340, align 8
  store atomic i64 %341, i64* %338 monotonic, align 8
  store atomic i64 %339, i64* %340 monotonic, align 8
  %342 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %336, i64 0, i32 13, i32 0, i32 0, i32 1
  %343 = getelementptr inbounds %"class.WTF::Vector.70", %"class.WTF::Vector.70"* %16, i64 0, i32 0, i32 0, i32 1
  %344 = load i32, i32* %342, align 4
  %345 = load i32, i32* %343, align 8
  store i32 %345, i32* %342, align 4
  store i32 %344, i32* %343, align 8
  %346 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %336, i64 0, i32 13, i32 0, i32 0, i32 2
  %347 = getelementptr inbounds %"class.WTF::Vector.70", %"class.WTF::Vector.70"* %16, i64 0, i32 0, i32 0, i32 2
  %348 = load i32, i32* %346, align 4
  %349 = load i32, i32* %347, align 4
  store i32 %349, i32* %346, align 4
  store i32 %348, i32* %347, align 4
  %350 = getelementptr inbounds %"class.WTF::Vector.70", %"class.WTF::Vector.70"* %16, i64 0, i32 0, i32 0, i32 0
  %351 = inttoptr i64 %341 to %"class.mojo::StructPtr.73"*
  %352 = icmp eq i64 %341, 0
  br i1 %352, label %374, label %353, !prof !3

353:                                              ; preds = %334
  %354 = inttoptr i64 %341 to i8*
  %355 = icmp eq i32 %348, 0
  br i1 %355, label %372, label %356, !prof !2

356:                                              ; preds = %353
  %357 = zext i32 %348 to i64
  %358 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %351, i64 %357
  br label %359

359:                                              ; preds = %366, %356
  %360 = phi %"class.mojo::StructPtr.73"* [ %367, %366 ], [ %351, %356 ]
  %361 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %360, i64 0, i32 0, i32 0, i32 0, i32 0
  %362 = load %"class.blink::mojom::blink::ManifestFileHandler"*, %"class.blink::mojom::blink::ManifestFileHandler"** %361, align 8
  store %"class.blink::mojom::blink::ManifestFileHandler"* null, %"class.blink::mojom::blink::ManifestFileHandler"** %361, align 8
  %363 = icmp eq %"class.blink::mojom::blink::ManifestFileHandler"* %362, null
  br i1 %363, label %366, label %364

364:                                              ; preds = %359
  call void @_ZN5blink5mojom5blink19ManifestFileHandlerD1Ev(%"class.blink::mojom::blink::ManifestFileHandler"* nonnull %362) #14
  %365 = getelementptr inbounds %"class.blink::mojom::blink::ManifestFileHandler", %"class.blink::mojom::blink::ManifestFileHandler"* %362, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %365) #15
  br label %366

366:                                              ; preds = %364, %359
  %367 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %360, i64 1
  %368 = icmp eq %"class.mojo::StructPtr.73"* %367, %358
  br i1 %368, label %369, label %359

369:                                              ; preds = %366
  store i32 0, i32* %347, align 4
  %370 = bitcast %"class.WTF::Vector.70"* %16 to i8**
  %371 = load i8*, i8** %370, align 8
  br label %372

372:                                              ; preds = %369, %353
  %373 = phi i8* [ %371, %369 ], [ %354, %353 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %373) #14
  store %"class.mojo::StructPtr.73"* null, %"class.mojo::StructPtr.73"** %350, align 8
  br label %374

374:                                              ; preds = %334, %372
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %335) #14
  %375 = bitcast %"class.WTF::Vector.84"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %375) #14
  call void @_ZN5blink14ManifestParser21ParseProtocolHandlersEPKNS_10JSONObjectE(%"class.WTF::Vector.84"* nonnull sret %17, %"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* nonnull %48)
  %376 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %377 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %376, i64 0, i32 14
  %378 = bitcast %"class.WTF::Vector.84"* %17 to i64*
  %379 = load i64, i64* %378, align 8
  %380 = bitcast %"class.WTF::Vector.84"* %377 to i64*
  %381 = load i64, i64* %380, align 8
  store atomic i64 %381, i64* %378 monotonic, align 8
  store atomic i64 %379, i64* %380 monotonic, align 8
  %382 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %376, i64 0, i32 14, i32 0, i32 0, i32 1
  %383 = getelementptr inbounds %"class.WTF::Vector.84", %"class.WTF::Vector.84"* %17, i64 0, i32 0, i32 0, i32 1
  %384 = load i32, i32* %382, align 4
  %385 = load i32, i32* %383, align 8
  store i32 %385, i32* %382, align 4
  store i32 %384, i32* %383, align 8
  %386 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %376, i64 0, i32 14, i32 0, i32 0, i32 2
  %387 = getelementptr inbounds %"class.WTF::Vector.84", %"class.WTF::Vector.84"* %17, i64 0, i32 0, i32 0, i32 2
  %388 = load i32, i32* %386, align 4
  %389 = load i32, i32* %387, align 4
  store i32 %389, i32* %386, align 4
  store i32 %388, i32* %387, align 4
  %390 = getelementptr inbounds %"class.WTF::Vector.84", %"class.WTF::Vector.84"* %17, i64 0, i32 0, i32 0, i32 0
  %391 = inttoptr i64 %381 to %"class.mojo::StructPtr.87"*
  %392 = icmp eq i64 %381, 0
  br i1 %392, label %414, label %393, !prof !3

393:                                              ; preds = %374
  %394 = inttoptr i64 %381 to i8*
  %395 = icmp eq i32 %388, 0
  br i1 %395, label %412, label %396, !prof !2

396:                                              ; preds = %393
  %397 = zext i32 %388 to i64
  %398 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %391, i64 %397
  br label %399

399:                                              ; preds = %406, %396
  %400 = phi %"class.mojo::StructPtr.87"* [ %407, %406 ], [ %391, %396 ]
  %401 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %400, i64 0, i32 0, i32 0, i32 0, i32 0
  %402 = load %"class.blink::mojom::blink::ManifestProtocolHandler"*, %"class.blink::mojom::blink::ManifestProtocolHandler"** %401, align 8
  store %"class.blink::mojom::blink::ManifestProtocolHandler"* null, %"class.blink::mojom::blink::ManifestProtocolHandler"** %401, align 8
  %403 = icmp eq %"class.blink::mojom::blink::ManifestProtocolHandler"* %402, null
  br i1 %403, label %406, label %404

404:                                              ; preds = %399
  call void @_ZN5blink5mojom5blink23ManifestProtocolHandlerD1Ev(%"class.blink::mojom::blink::ManifestProtocolHandler"* nonnull %402) #14
  %405 = bitcast %"class.blink::mojom::blink::ManifestProtocolHandler"* %402 to i8*
  call void @_ZdlPv(i8* %405) #15
  br label %406

406:                                              ; preds = %404, %399
  %407 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %400, i64 1
  %408 = icmp eq %"class.mojo::StructPtr.87"* %407, %398
  br i1 %408, label %409, label %399

409:                                              ; preds = %406
  store i32 0, i32* %387, align 4
  %410 = bitcast %"class.WTF::Vector.84"* %17 to i8**
  %411 = load i8*, i8** %410, align 8
  br label %412

412:                                              ; preds = %409, %393
  %413 = phi i8* [ %411, %409 ], [ %394, %393 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %413) #14
  store %"class.mojo::StructPtr.87"* null, %"class.mojo::StructPtr.87"** %390, align 8
  br label %414

414:                                              ; preds = %374, %412
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %375) #14
  %415 = bitcast %"class.WTF::Vector.96"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %415) #14
  call void @_ZN5blink14ManifestParser16ParseUrlHandlersEPKNS_10JSONObjectE(%"class.WTF::Vector.96"* nonnull sret %18, %"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* nonnull %48)
  %416 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %417 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %416, i64 0, i32 15
  %418 = bitcast %"class.WTF::Vector.96"* %18 to i64*
  %419 = load i64, i64* %418, align 8
  %420 = bitcast %"class.WTF::Vector.96"* %417 to i64*
  %421 = load i64, i64* %420, align 8
  store atomic i64 %421, i64* %418 monotonic, align 8
  store atomic i64 %419, i64* %420 monotonic, align 8
  %422 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %416, i64 0, i32 15, i32 0, i32 0, i32 1
  %423 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %18, i64 0, i32 0, i32 0, i32 1
  %424 = load i32, i32* %422, align 4
  %425 = load i32, i32* %423, align 8
  store i32 %425, i32* %422, align 4
  store i32 %424, i32* %423, align 8
  %426 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %416, i64 0, i32 15, i32 0, i32 0, i32 2
  %427 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %18, i64 0, i32 0, i32 0, i32 2
  %428 = load i32, i32* %426, align 4
  %429 = load i32, i32* %427, align 4
  store i32 %429, i32* %426, align 4
  store i32 %428, i32* %427, align 4
  %430 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %18, i64 0, i32 0, i32 0, i32 0
  %431 = inttoptr i64 %421 to %"class.mojo::StructPtr.99"*
  %432 = icmp eq i64 %421, 0
  br i1 %432, label %454, label %433, !prof !3

433:                                              ; preds = %414
  %434 = inttoptr i64 %421 to i8*
  %435 = icmp eq i32 %428, 0
  br i1 %435, label %452, label %436, !prof !2

436:                                              ; preds = %433
  %437 = zext i32 %428 to i64
  %438 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %431, i64 %437
  br label %439

439:                                              ; preds = %446, %436
  %440 = phi %"class.mojo::StructPtr.99"* [ %447, %446 ], [ %431, %436 ]
  %441 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %440, i64 0, i32 0, i32 0, i32 0, i32 0
  %442 = load %"class.blink::mojom::blink::ManifestUrlHandler"*, %"class.blink::mojom::blink::ManifestUrlHandler"** %441, align 8
  store %"class.blink::mojom::blink::ManifestUrlHandler"* null, %"class.blink::mojom::blink::ManifestUrlHandler"** %441, align 8
  %443 = icmp eq %"class.blink::mojom::blink::ManifestUrlHandler"* %442, null
  br i1 %443, label %446, label %444

444:                                              ; preds = %439
  call void @_ZN5blink5mojom5blink18ManifestUrlHandlerD1Ev(%"class.blink::mojom::blink::ManifestUrlHandler"* nonnull %442) #14
  %445 = bitcast %"class.blink::mojom::blink::ManifestUrlHandler"* %442 to i8*
  call void @_ZdlPv(i8* %445) #15
  br label %446

446:                                              ; preds = %444, %439
  %447 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %440, i64 1
  %448 = icmp eq %"class.mojo::StructPtr.99"* %447, %438
  br i1 %448, label %449, label %439

449:                                              ; preds = %446
  store i32 0, i32* %427, align 4
  %450 = bitcast %"class.WTF::Vector.96"* %18 to i8**
  %451 = load i8*, i8** %450, align 8
  br label %452

452:                                              ; preds = %449, %433
  %453 = phi i8* [ %451, %449 ], [ %434, %433 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %453) #14
  store %"class.mojo::StructPtr.99"* null, %"class.mojo::StructPtr.99"** %430, align 8
  br label %454

454:                                              ; preds = %414, %452
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %415) #14
  %455 = bitcast %"class.mojo::StructPtr.109"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %455) #14
  call void @_ZN5blink14ManifestParser15ParseNoteTakingEPKNS_10JSONObjectE(%"class.mojo::StructPtr.109"* nonnull sret %19, %"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* nonnull %48)
  %456 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %457 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %456, i64 0, i32 16
  %458 = getelementptr inbounds %"class.mojo::StructPtr.109", %"class.mojo::StructPtr.109"* %457, i64 0, i32 0, i32 0, i32 0, i32 0
  %459 = load %"class.blink::mojom::blink::ManifestNoteTaking"*, %"class.blink::mojom::blink::ManifestNoteTaking"** %458, align 8
  store %"class.blink::mojom::blink::ManifestNoteTaking"* null, %"class.blink::mojom::blink::ManifestNoteTaking"** %458, align 8
  %460 = icmp eq %"class.blink::mojom::blink::ManifestNoteTaking"* %459, null
  br i1 %460, label %461, label %463

461:                                              ; preds = %454
  %462 = bitcast %"class.mojo::StructPtr.109"* %457 to i64*
  br label %467

463:                                              ; preds = %454
  call void @_ZN5blink5mojom5blink18ManifestNoteTakingD1Ev(%"class.blink::mojom::blink::ManifestNoteTaking"* nonnull %459) #14
  %464 = getelementptr inbounds %"class.blink::mojom::blink::ManifestNoteTaking", %"class.blink::mojom::blink::ManifestNoteTaking"* %459, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %464) #15
  %465 = bitcast %"class.mojo::StructPtr.109"* %457 to i64*
  %466 = load i64, i64* %465, align 8
  br label %467

467:                                              ; preds = %461, %463
  %468 = phi i64* [ %462, %461 ], [ %465, %463 ]
  %469 = phi i64 [ 0, %461 ], [ %466, %463 ]
  %470 = bitcast %"class.mojo::StructPtr.109"* %19 to i64*
  %471 = load i64, i64* %470, align 8
  store i64 %471, i64* %468, align 8
  %472 = getelementptr inbounds %"class.mojo::StructPtr.109", %"class.mojo::StructPtr.109"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %473 = inttoptr i64 %469 to %"class.blink::mojom::blink::ManifestNoteTaking"*
  store %"class.blink::mojom::blink::ManifestNoteTaking"* null, %"class.blink::mojom::blink::ManifestNoteTaking"** %472, align 8
  %474 = icmp eq i64 %469, 0
  br i1 %474, label %477, label %475

475:                                              ; preds = %467
  call void @_ZN5blink5mojom5blink18ManifestNoteTakingD1Ev(%"class.blink::mojom::blink::ManifestNoteTaking"* nonnull %473) #14
  %476 = getelementptr inbounds %"class.blink::mojom::blink::ManifestNoteTaking", %"class.blink::mojom::blink::ManifestNoteTaking"* %473, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %476) #15
  br label %477

477:                                              ; preds = %467, %475
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %455) #14
  %478 = bitcast %"class.WTF::Vector.116"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %478) #14
  call void @_ZN5blink14ManifestParser24ParseRelatedApplicationsEPKNS_10JSONObjectE(%"class.WTF::Vector.116"* nonnull sret %20, %"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* nonnull %48)
  %479 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %480 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %479, i64 0, i32 17
  %481 = bitcast %"class.WTF::Vector.116"* %20 to i64*
  %482 = load i64, i64* %481, align 8
  %483 = bitcast %"class.WTF::Vector.116"* %480 to i64*
  %484 = load i64, i64* %483, align 8
  store atomic i64 %484, i64* %481 monotonic, align 8
  store atomic i64 %482, i64* %483 monotonic, align 8
  %485 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %479, i64 0, i32 17, i32 0, i32 0, i32 1
  %486 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %20, i64 0, i32 0, i32 0, i32 1
  %487 = load i32, i32* %485, align 4
  %488 = load i32, i32* %486, align 8
  store i32 %488, i32* %485, align 4
  store i32 %487, i32* %486, align 8
  %489 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %479, i64 0, i32 17, i32 0, i32 0, i32 2
  %490 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %20, i64 0, i32 0, i32 0, i32 2
  %491 = load i32, i32* %489, align 4
  %492 = load i32, i32* %490, align 4
  store i32 %492, i32* %489, align 4
  store i32 %491, i32* %490, align 4
  %493 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %20, i64 0, i32 0, i32 0, i32 0
  %494 = inttoptr i64 %484 to %"class.mojo::StructPtr.119"*
  %495 = icmp eq i64 %484, 0
  br i1 %495, label %517, label %496, !prof !3

496:                                              ; preds = %477
  %497 = inttoptr i64 %484 to i8*
  %498 = icmp eq i32 %491, 0
  br i1 %498, label %515, label %499, !prof !2

499:                                              ; preds = %496
  %500 = zext i32 %491 to i64
  %501 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %494, i64 %500
  br label %502

502:                                              ; preds = %509, %499
  %503 = phi %"class.mojo::StructPtr.119"* [ %510, %509 ], [ %494, %499 ]
  %504 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %503, i64 0, i32 0, i32 0, i32 0, i32 0
  %505 = load %"class.blink::mojom::blink::ManifestRelatedApplication"*, %"class.blink::mojom::blink::ManifestRelatedApplication"** %504, align 8
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %504, align 8
  %506 = icmp eq %"class.blink::mojom::blink::ManifestRelatedApplication"* %505, null
  br i1 %506, label %509, label %507

507:                                              ; preds = %502
  call void @_ZN5blink5mojom5blink26ManifestRelatedApplicationD1Ev(%"class.blink::mojom::blink::ManifestRelatedApplication"* nonnull %505) #14
  %508 = bitcast %"class.blink::mojom::blink::ManifestRelatedApplication"* %505 to i8*
  call void @_ZdlPv(i8* %508) #15
  br label %509

509:                                              ; preds = %507, %502
  %510 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %503, i64 1
  %511 = icmp eq %"class.mojo::StructPtr.119"* %510, %501
  br i1 %511, label %512, label %502

512:                                              ; preds = %509
  store i32 0, i32* %490, align 4
  %513 = bitcast %"class.WTF::Vector.116"* %20 to i8**
  %514 = load i8*, i8** %513, align 8
  br label %515

515:                                              ; preds = %512, %496
  %516 = phi i8* [ %514, %512 ], [ %497, %496 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %516) #14
  store %"class.mojo::StructPtr.119"* null, %"class.mojo::StructPtr.119"** %493, align 8
  br label %517

517:                                              ; preds = %477, %515
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %478) #14
  %518 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %518) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.115, i64 0, i64 0), i64 27) #14
  %519 = call zeroext i1 @_ZN5blink14ManifestParser12ParseBooleanEPKNS_10JSONObjectERKN3WTF6StringEb(%"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* nonnull %48, %"class.WTF::String"* nonnull dereferenceable(8) %2, i1 zeroext false) #14
  %520 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %521 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %520, align 8
  %522 = icmp eq %"class.WTF::StringImpl"* %521, null
  br i1 %522, label %536, label %523

523:                                              ; preds = %517
  %524 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %521, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %525 = load atomic i32, i32* %524 monotonic, align 4
  %526 = and i32 %525, 2
  %527 = icmp eq i32 %526, 0
  %528 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %521, i64 0, i32 0
  %529 = load i32, i32* %528, align 4
  br i1 %527, label %530, label %532

530:                                              ; preds = %523
  %531 = add i32 %529, -1
  store i32 %531, i32* %528, align 4
  br label %532

532:                                              ; preds = %530, %523
  %533 = phi i32 [ %531, %530 ], [ %529, %523 ]
  %534 = icmp eq i32 %533, 0
  br i1 %534, label %535, label %536

535:                                              ; preds = %532
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %521) #14
  br label %536

536:                                              ; preds = %517, %532, %535
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %518) #14
  %537 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %538 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %537, i64 0, i32 18
  %539 = zext i1 %519 to i8
  store i8 %539, i8* %538, align 8
  %540 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %540) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.116, i64 0, i64 0), i64 11) #14
  %541 = call i64 @_ZN5blink14ManifestParser10ParseColorEPKNS_10JSONObjectERKN3WTF6StringE(%"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* nonnull %48, %"class.WTF::String"* nonnull dereferenceable(8) %5) #14
  %542 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %543 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %542, align 8
  %544 = icmp eq %"class.WTF::StringImpl"* %543, null
  br i1 %544, label %558, label %545

545:                                              ; preds = %536
  %546 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %543, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %547 = load atomic i32, i32* %546 monotonic, align 4
  %548 = and i32 %547, 2
  %549 = icmp eq i32 %548, 0
  %550 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %543, i64 0, i32 0
  %551 = load i32, i32* %550, align 4
  br i1 %549, label %552, label %554

552:                                              ; preds = %545
  %553 = add i32 %551, -1
  store i32 %553, i32* %550, align 4
  br label %554

554:                                              ; preds = %552, %545
  %555 = phi i32 [ %553, %552 ], [ %551, %545 ]
  %556 = icmp eq i32 %555, 0
  br i1 %556, label %557, label %558

557:                                              ; preds = %554
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %543) #14
  br label %558

558:                                              ; preds = %536, %554, %557
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %540) #14
  %559 = trunc i64 %541 to i8
  %560 = lshr i64 %541, 32
  %561 = trunc i64 %560 to i32
  %562 = icmp ne i8 %559, 0
  %563 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %564 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %563, i64 0, i32 19
  %565 = zext i1 %562 to i8
  store i8 %565, i8* %564, align 1
  %566 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %567 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %566, i64 0, i32 19
  %568 = load i8, i8* %567, align 1, !range !16
  %569 = icmp eq i8 %568, 0
  br i1 %569, label %575, label %570

570:                                              ; preds = %558
  %571 = icmp eq i8 %559, 0
  br i1 %571, label %572, label %573, !prof !2

572:                                              ; preds = %570
  call void @llvm.trap() #14
  unreachable

573:                                              ; preds = %570
  %574 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %566, i64 0, i32 21
  store i32 %561, i32* %574, align 4
  br label %575

575:                                              ; preds = %558, %573
  %576 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %576) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.117, i64 0, i64 0), i64 16) #14
  %577 = call i64 @_ZN5blink14ManifestParser10ParseColorEPKNS_10JSONObjectERKN3WTF6StringE(%"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* nonnull %48, %"class.WTF::String"* nonnull dereferenceable(8) %6) #14
  %578 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %579 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %578, align 8
  %580 = icmp eq %"class.WTF::StringImpl"* %579, null
  br i1 %580, label %594, label %581

581:                                              ; preds = %575
  %582 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %579, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %583 = load atomic i32, i32* %582 monotonic, align 4
  %584 = and i32 %583, 2
  %585 = icmp eq i32 %584, 0
  %586 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %579, i64 0, i32 0
  %587 = load i32, i32* %586, align 4
  br i1 %585, label %588, label %590

588:                                              ; preds = %581
  %589 = add i32 %587, -1
  store i32 %589, i32* %586, align 4
  br label %590

590:                                              ; preds = %588, %581
  %591 = phi i32 [ %589, %588 ], [ %587, %581 ]
  %592 = icmp eq i32 %591, 0
  br i1 %592, label %593, label %594

593:                                              ; preds = %590
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %579) #14
  br label %594

594:                                              ; preds = %575, %590, %593
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %576) #14
  %595 = trunc i64 %577 to i8
  %596 = lshr i64 %577, 32
  %597 = trunc i64 %596 to i32
  %598 = icmp ne i8 %595, 0
  %599 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %600 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %599, i64 0, i32 22
  %601 = zext i1 %598 to i8
  store i8 %601, i8* %600, align 8
  %602 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %603 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %602, i64 0, i32 22
  %604 = load i8, i8* %603, align 8, !range !16
  %605 = icmp eq i8 %604, 0
  br i1 %605, label %611, label %606

606:                                              ; preds = %594
  %607 = icmp eq i8 %595, 0
  br i1 %607, label %608, label %609, !prof !2

608:                                              ; preds = %606
  call void @llvm.trap() #14
  unreachable

609:                                              ; preds = %606
  %610 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %602, i64 0, i32 24
  store i32 %597, i32* %610, align 4
  br label %611

611:                                              ; preds = %594, %609
  %612 = call %"class.WTF::StringImpl"* @_ZN5blink14ManifestParser16ParseGCMSenderIDEPKNS_10JSONObjectE(%"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* nonnull %48)
  %613 = ptrtoint %"class.WTF::StringImpl"* %612 to i64
  %614 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %615 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %614, i64 0, i32 25
  %616 = bitcast %"class.WTF::String"* %615 to i64*
  %617 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %615, i64 0, i32 0, i32 0
  %618 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %617, align 8
  store i64 %613, i64* %616, align 8
  %619 = icmp eq %"class.WTF::StringImpl"* %618, null
  br i1 %619, label %633, label %620

620:                                              ; preds = %611
  %621 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %618, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %622 = load atomic i32, i32* %621 monotonic, align 4
  %623 = and i32 %622, 2
  %624 = icmp eq i32 %623, 0
  %625 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %618, i64 0, i32 0
  %626 = load i32, i32* %625, align 4
  br i1 %624, label %627, label %629

627:                                              ; preds = %620
  %628 = add i32 %626, -1
  store i32 %628, i32* %625, align 4
  br label %629

629:                                              ; preds = %627, %620
  %630 = phi i32 [ %628, %627 ], [ %626, %620 ]
  %631 = icmp eq i32 %630, 0
  br i1 %631, label %632, label %633

632:                                              ; preds = %629
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %618) #14
  br label %633

633:                                              ; preds = %632, %629, %611
  %634 = bitcast %"class.WTF::Vector.27"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %634) #14
  call void @_ZN5blink14ManifestParser14ParseShortcutsEPKNS_10JSONObjectE(%"class.WTF::Vector.27"* nonnull sret %21, %"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* nonnull %48)
  %635 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %636 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %635, i64 0, i32 11
  %637 = bitcast %"class.WTF::Vector.27"* %21 to i64*
  %638 = load i64, i64* %637, align 8
  %639 = bitcast %"class.WTF::Vector.27"* %636 to i64*
  %640 = load i64, i64* %639, align 8
  store atomic i64 %640, i64* %637 monotonic, align 8
  store atomic i64 %638, i64* %639 monotonic, align 8
  %641 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %635, i64 0, i32 11, i32 0, i32 0, i32 1
  %642 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %21, i64 0, i32 0, i32 0, i32 1
  %643 = load i32, i32* %641, align 4
  %644 = load i32, i32* %642, align 8
  store i32 %644, i32* %641, align 4
  store i32 %643, i32* %642, align 8
  %645 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %635, i64 0, i32 11, i32 0, i32 0, i32 2
  %646 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %21, i64 0, i32 0, i32 0, i32 2
  %647 = load i32, i32* %645, align 4
  %648 = load i32, i32* %646, align 4
  store i32 %648, i32* %645, align 4
  store i32 %647, i32* %646, align 4
  %649 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %21, i64 0, i32 0, i32 0, i32 0
  %650 = inttoptr i64 %640 to %"class.mojo::StructPtr.30"*
  %651 = icmp eq i64 %640, 0
  br i1 %651, label %673, label %652, !prof !3

652:                                              ; preds = %633
  %653 = inttoptr i64 %640 to i8*
  %654 = icmp eq i32 %647, 0
  br i1 %654, label %671, label %655, !prof !2

655:                                              ; preds = %652
  %656 = zext i32 %647 to i64
  %657 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %650, i64 %656
  br label %658

658:                                              ; preds = %665, %655
  %659 = phi %"class.mojo::StructPtr.30"* [ %666, %665 ], [ %650, %655 ]
  %660 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %659, i64 0, i32 0, i32 0, i32 0, i32 0
  %661 = load %"class.blink::mojom::blink::ManifestShortcutItem"*, %"class.blink::mojom::blink::ManifestShortcutItem"** %660, align 8
  store %"class.blink::mojom::blink::ManifestShortcutItem"* null, %"class.blink::mojom::blink::ManifestShortcutItem"** %660, align 8
  %662 = icmp eq %"class.blink::mojom::blink::ManifestShortcutItem"* %661, null
  br i1 %662, label %665, label %663

663:                                              ; preds = %658
  call void @_ZN5blink5mojom5blink20ManifestShortcutItemD1Ev(%"class.blink::mojom::blink::ManifestShortcutItem"* nonnull %661) #14
  %664 = bitcast %"class.blink::mojom::blink::ManifestShortcutItem"* %661 to i8*
  call void @_ZdlPv(i8* %664) #15
  br label %665

665:                                              ; preds = %663, %658
  %666 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %659, i64 1
  %667 = icmp eq %"class.mojo::StructPtr.30"* %666, %657
  br i1 %667, label %668, label %658

668:                                              ; preds = %665
  store i32 0, i32* %646, align 4
  %669 = bitcast %"class.WTF::Vector.27"* %21 to i8**
  %670 = load i8*, i8** %669, align 8
  br label %671

671:                                              ; preds = %668, %652
  %672 = phi i8* [ %670, %668 ], [ %653, %652 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %672) #14
  store %"class.mojo::StructPtr.30"* null, %"class.mojo::StructPtr.30"** %649, align 8
  br label %673

673:                                              ; preds = %633, %671
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %634) #14
  %674 = call i32 @_ZN5blink14ManifestParser17ParseCaptureLinksEPKNS_10JSONObjectE(%"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* nonnull %48)
  %675 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %676 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %675, i64 0, i32 27
  store i32 %674, i32* %676, align 8
  %677 = call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features28kWebAppEnableIsolatedStorageE) #14
  br i1 %677, label %678, label %683

678:                                              ; preds = %673
  %679 = call zeroext i1 @_ZN5blink14ManifestParser20ParseIsolatedStorageEPKNS_10JSONObjectE(%"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* nonnull %48)
  %680 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %30, align 8
  %681 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %680, i64 0, i32 28
  %682 = zext i1 %679 to i8
  store i8 %682, i8* %681, align 4
  br label %683

683:                                              ; preds = %678, %673
  call void @_ZN5blink15ManifestUmaUtil14ParseSucceededERKN4mojo9StructPtrINS_5mojom5blink8ManifestEEE(%"class.mojo::StructPtr"* dereferenceable(8) %29) #14
  %684 = load i8, i8* %313, align 8, !range !16
  %685 = icmp eq i8 %684, 0
  br i1 %685, label %693, label %686

686:                                              ; preds = %683
  %687 = getelementptr inbounds %"class.absl::optional.163", %"class.absl::optional.163"* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %688 = load %"class.blink::mojom::blink::ManifestShareTarget"*, %"class.blink::mojom::blink::ManifestShareTarget"** %687, align 8
  store %"class.blink::mojom::blink::ManifestShareTarget"* null, %"class.blink::mojom::blink::ManifestShareTarget"** %687, align 8
  %689 = icmp eq %"class.blink::mojom::blink::ManifestShareTarget"* %688, null
  br i1 %689, label %692, label %690

690:                                              ; preds = %686
  call void @_ZN5blink5mojom5blink19ManifestShareTargetD1Ev(%"class.blink::mojom::blink::ManifestShareTarget"* nonnull %688) #14
  %691 = getelementptr inbounds %"class.blink::mojom::blink::ManifestShareTarget", %"class.blink::mojom::blink::ManifestShareTarget"* %688, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %691) #15
  br label %692

692:                                              ; preds = %690, %686
  store i8 0, i8* %313, align 8
  br label %693

693:                                              ; preds = %692, %683
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %313) #14
  %694 = bitcast %"class.blink::JSONValue"* %25 to void (%"class.blink::JSONObject"*)***
  %695 = load void (%"class.blink::JSONObject"*)**, void (%"class.blink::JSONObject"*)*** %694, align 8
  %696 = getelementptr inbounds void (%"class.blink::JSONObject"*)*, void (%"class.blink::JSONObject"*)** %695, i64 1
  %697 = load void (%"class.blink::JSONObject"*)*, void (%"class.blink::JSONObject"*)** %696, align 8
  call void %697(%"class.blink::JSONObject"* nonnull %48) #14
  br label %705

698:                                              ; preds = %42
  %699 = getelementptr inbounds %"struct.blink::JSONParseError", %"struct.blink::JSONParseError"* %8, i64 0, i32 3
  %700 = getelementptr inbounds %"struct.blink::JSONParseError", %"struct.blink::JSONParseError"* %8, i64 0, i32 1
  %701 = load i32, i32* %700, align 4
  %702 = getelementptr inbounds %"struct.blink::JSONParseError", %"struct.blink::JSONParseError"* %8, i64 0, i32 2
  %703 = load i32, i32* %702, align 8
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %0, %"class.WTF::String"* dereferenceable(8) %699, i1 zeroext true, i32 %701, i32 %703)
  call void @_ZN5blink15ManifestUmaUtil11ParseFailedEv() #14
  %704 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 4
  store i8 1, i8* %704, align 8
  br label %705

705:                                              ; preds = %698, %693, %71
  %706 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %707 = icmp eq %"class.WTF::StringImpl"* %706, null
  br i1 %707, label %721, label %708

708:                                              ; preds = %705
  %709 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %706, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %710 = load atomic i32, i32* %709 monotonic, align 4
  %711 = and i32 %710, 2
  %712 = icmp eq i32 %711, 0
  %713 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %706, i64 0, i32 0
  %714 = load i32, i32* %713, align 4
  br i1 %712, label %715, label %717

715:                                              ; preds = %708
  %716 = add i32 %714, -1
  store i32 %716, i32* %713, align 4
  br label %717

717:                                              ; preds = %715, %708
  %718 = phi i32 [ %716, %715 ], [ %714, %708 ]
  %719 = icmp eq i32 %718, 0
  br i1 %719, label %720, label %721

720:                                              ; preds = %717
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %706) #14
  br label %721

721:                                              ; preds = %705, %717, %720
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare %"class.blink::JSONValue"* @_ZN5blink9ParseJSONERKN3WTF6StringEPNS_14JSONParseErrorE(%"class.WTF::String"* dereferenceable(8), %"struct.blink::JSONParseError"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32, i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.mojo::InlinedStructPtr", align 8
  %7 = bitcast %"class.mojo::InlinedStructPtr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %6, i64 0, i32 1
  %9 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %6, i64 0, i32 0
  %10 = bitcast %"class.mojo::InlinedStructPtr"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  call void @_ZN5blink5mojom5blink13ManifestErrorC1ERKN3WTF6StringEbjj(%"class.blink::mojom::blink::ManifestError"* nonnull %9, %"class.WTF::String"* dereferenceable(8) %1, i1 zeroext %2, i32 %3, i32 %4) #14
  store i32 1, i32* %8, align 8, !alias.scope !17
  %11 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 6
  %12 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %13, %15
  br i1 %16, label %27, label %17, !prof !2

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.WTF::Vector.136", %"class.WTF::Vector.136"* %11, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %18, align 8
  %20 = zext i32 %13 to i64
  %21 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %19, i64 %20, i32 0
  call void @_ZN5blink5mojom5blink13ManifestErrorC1Ev(%"class.blink::mojom::blink::ManifestError"* %21) #14
  %22 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %19, i64 %20, i32 1
  store i32 0, i32* %22, align 8
  call void @_ZN5blink5mojom5blink13ManifestErrorD1Ev(%"class.blink::mojom::blink::ManifestError"* %21) #14
  call void @_ZN5blink5mojom5blink13ManifestErrorC1Ev(%"class.blink::mojom::blink::ManifestError"* %21) #14
  call void @_ZNSt3__14swapIN5blink5mojom5blink13ManifestErrorEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.blink::mojom::blink::ManifestError"* dereferenceable(24) %21, %"class.blink::mojom::blink::ManifestError"* nonnull dereferenceable(24) %9) #14
  %23 = load i32, i32* %22, align 4
  %24 = load i32, i32* %8, align 8
  store i32 %24, i32* %22, align 4
  store i32 %23, i32* %8, align 8
  %25 = load i32, i32* %12, align 4
  %26 = add i32 %25, 1
  store i32 %26, i32* %12, align 4
  br label %28

27:                                               ; preds = %5
  call void @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN5blink5mojom5blink13ManifestErrorEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.136"* %11, %"class.mojo::InlinedStructPtr"* nonnull dereferenceable(32) %6) #14
  br label %28

28:                                               ; preds = %17, %27
  call void @_ZN5blink5mojom5blink13ManifestErrorD1Ev(%"class.blink::mojom::blink::ManifestError"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %7) #14
  ret void
}

declare void @_ZN5blink15ManifestUmaUtil11ParseFailedEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink14ManifestParser9ParseNameEPKNS_10JSONObjectE(%"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional.179", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 16, i1 false)
  %6 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0), i64 4) #14
  call void @_ZN5blink14ManifestParser11ParseStringEPKNS_10JSONObjectERKN3WTF6StringENS0_8TrimTypeE(%"class.absl::optional.179"* nonnull sret %3, %"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 0)
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #14
  br label %23

23:                                               ; preds = %2, %19, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %24 = load i8, i8* %5, align 8, !range !16
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %116, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %28 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String16RemoveCharactersEPFbDsE(%"class.WTF::String"* %27, i1 (i16)* nonnull @_ZN5blink12_GLOBAL__N_115IsCrLfOrTabCharEDs) #14
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  %30 = load i8, i8* %5, align 8, !range !16
  %31 = icmp eq i8 %30, 0
  %32 = bitcast %"class.WTF::String"* %27 to i64*
  br i1 %31, label %50, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  store i64 %29, i64* %32, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %51, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %46
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #14
  br label %51

50:                                               ; preds = %26
  store i64 %29, i64* %32, align 8
  store i8 1, i8* %5, align 8
  br label %57

51:                                               ; preds = %49, %46, %33
  %52 = load i8, i8* %5, align 8
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %56, label %54, !prof !2

54:                                               ; preds = %51
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  br label %57

56:                                               ; preds = %51
  call void @llvm.trap() #14
  unreachable

57:                                               ; preds = %54, %50
  %58 = phi %"class.WTF::StringImpl"* [ %55, %54 ], [ %28, %50 ]
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %77, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %78

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #14
  br label %77

77:                                               ; preds = %57, %73, %76
  store i8 0, i8* %5, align 8
  br label %116

78:                                               ; preds = %60
  %79 = ptrtoint %"class.WTF::StringImpl"* %58 to i64
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %98

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i33
  %88 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %87, i33 1) #14
  %89 = extractvalue { i33, i1 } %88, 1
  %90 = extractvalue { i33, i1 } %88, 0
  %91 = icmp slt i33 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %93, label %94, !prof !2

93:                                               ; preds = %84
  call void @llvm.trap() #14
  unreachable

94:                                               ; preds = %84
  %95 = trunc i33 %90 to i32
  store i32 %95, i32* %85, align 4
  %96 = load i8, i8* %5, align 8, !range !16
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %116, label %98

98:                                               ; preds = %78, %94
  %99 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #14
  br label %115

115:                                              ; preds = %114, %111, %98
  store i8 0, i8* %5, align 8
  br label %116

116:                                              ; preds = %23, %77, %94, %115
  %117 = phi i64 [ %79, %94 ], [ %79, %115 ], [ 0, %77 ], [ 0, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #14
  %118 = inttoptr i64 %117 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %118
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink14ManifestParser14ParseShortNameEPKNS_10JSONObjectE(%"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional.179", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 16, i1 false)
  %6 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i64 10) #14
  call void @_ZN5blink14ManifestParser11ParseStringEPKNS_10JSONObjectERKN3WTF6StringENS0_8TrimTypeE(%"class.absl::optional.179"* nonnull sret %3, %"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 0)
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #14
  br label %23

23:                                               ; preds = %2, %19, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %24 = load i8, i8* %5, align 8, !range !16
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %116, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %28 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String16RemoveCharactersEPFbDsE(%"class.WTF::String"* %27, i1 (i16)* nonnull @_ZN5blink12_GLOBAL__N_115IsCrLfOrTabCharEDs) #14
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  %30 = load i8, i8* %5, align 8, !range !16
  %31 = icmp eq i8 %30, 0
  %32 = bitcast %"class.WTF::String"* %27 to i64*
  br i1 %31, label %50, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  store i64 %29, i64* %32, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %51, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %46

44:                                               ; preds = %37
  %45 = add i32 %43, -1
  store i32 %45, i32* %42, align 4
  br label %46

46:                                               ; preds = %44, %37
  %47 = phi i32 [ %45, %44 ], [ %43, %37 ]
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %46
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #14
  br label %51

50:                                               ; preds = %26
  store i64 %29, i64* %32, align 8
  store i8 1, i8* %5, align 8
  br label %57

51:                                               ; preds = %49, %46, %33
  %52 = load i8, i8* %5, align 8
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %56, label %54, !prof !2

54:                                               ; preds = %51
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  br label %57

56:                                               ; preds = %51
  call void @llvm.trap() #14
  unreachable

57:                                               ; preds = %54, %50
  %58 = phi %"class.WTF::StringImpl"* [ %55, %54 ], [ %28, %50 ]
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %77, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 1
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %78

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #14
  br label %77

77:                                               ; preds = %57, %73, %76
  store i8 0, i8* %5, align 8
  br label %116

78:                                               ; preds = %60
  %79 = ptrtoint %"class.WTF::StringImpl"* %58 to i64
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %98

84:                                               ; preds = %78
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  %87 = zext i32 %86 to i33
  %88 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %87, i33 1) #14
  %89 = extractvalue { i33, i1 } %88, 1
  %90 = extractvalue { i33, i1 } %88, 0
  %91 = icmp slt i33 %90, 0
  %92 = or i1 %89, %91
  br i1 %92, label %93, label %94, !prof !2

93:                                               ; preds = %84
  call void @llvm.trap() #14
  unreachable

94:                                               ; preds = %84
  %95 = trunc i33 %90 to i32
  store i32 %95, i32* %85, align 4
  %96 = load i8, i8* %5, align 8, !range !16
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %116, label %98

98:                                               ; preds = %78, %94
  %99 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #14
  br label %115

115:                                              ; preds = %114, %111, %98
  store i8 0, i8* %5, align 8
  br label %116

116:                                              ; preds = %23, %77, %94, %115
  %117 = phi i64 [ %79, %94 ], [ %79, %115 ], [ 0, %77 ], [ 0, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #14
  %118 = inttoptr i64 %117 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %118
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink14ManifestParser16ParseDescriptionEPKNS_10JSONObjectE(%"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional.179", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 16, i1 false)
  %6 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i64 0, i64 0), i64 11) #14
  call void @_ZN5blink14ManifestParser11ParseStringEPKNS_10JSONObjectERKN3WTF6StringENS0_8TrimTypeE(%"class.absl::optional.179"* nonnull sret %3, %"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 0)
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #14
  br label %23

23:                                               ; preds = %2, %19, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %24 = load i8, i8* %5, align 8, !range !16
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %65, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #14
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  call void @llvm.trap() #14
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %26
  %48 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #14
  br label %64

64:                                               ; preds = %63, %60, %47
  store i8 0, i8* %5, align 8
  br label %65

65:                                               ; preds = %23, %64
  %66 = phi %"class.WTF::StringImpl"* [ %28, %64 ], [ null, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #14
  ret %"class.WTF::StringImpl"* %66
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser13ParseStartURLEPKNS_10JSONObjectE(%"class.blink::KURL"* noalias sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.19, i64 0, i64 0), i64 9) #14
  %6 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %1, i64 0, i32 1
  call void @_ZN5blink14ManifestParser8ParseURLEPKNS_10JSONObjectERKN3WTF6StringERKNS_4KURLENS0_20ParseURLRestrictionsE(%"class.blink::KURL"* sret %0, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::KURL"* dereferenceable(112) %6, i32 1)
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #14
  br label %23

23:                                               ; preds = %3, %19, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  ret void
}

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser10ParseScopeEPKNS_10JSONObjectERKNS_4KURLE(%"class.blink::KURL"* noalias sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::KURL", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %10) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 112, i1 false)
  %11 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0), i64 5) #14
  %12 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %1, i64 0, i32 1
  call void @_ZN5blink14ManifestParser8ParseURLEPKNS_10JSONObjectERKN3WTF6StringERKNS_4KURLENS0_20ParseURLRestrictionsE(%"class.blink::KURL"* nonnull sret %5, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::KURL"* dereferenceable(112) %12, i32 0)
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #14
  br label %29

29:                                               ; preds = %4, %25, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  %30 = call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* %3) #14
  %31 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %1, i64 0, i32 2
  %32 = select i1 %30, %"class.blink::KURL"* %31, %"class.blink::KURL"* %3
  %33 = call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* nonnull %5) #14
  br i1 %33, label %34, label %54

34:                                               ; preds = %29
  %35 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #14
  %36 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL12BaseAsStringEv(%"class.blink::KURL"* %32) #14
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %7) #14
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #14
  br label %53

53:                                               ; preds = %34, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #14
  br label %95

54:                                               ; preds = %29
  %55 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_116URLIsWithinScopeERKNS_4KURLES3_(%"class.blink::KURL"* dereferenceable(112) %32, %"class.blink::KURL"* nonnull dereferenceable(112) %5)
  br i1 %55, label %94, label %56

56:                                               ; preds = %54
  %57 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @.str.21, i64 0, i64 0), i64 72) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %8, i1 zeroext false, i32 0, i32 0)
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #14
  br label %74

74:                                               ; preds = %56, %70, %73
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #14
  %75 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #14
  %76 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL12BaseAsStringEv(%"class.blink::KURL"* %32) #14
  %77 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"** %77, align 8
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %9) #14
  %78 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %79 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #14
  br label %93

93:                                               ; preds = %74, %89, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #14
  br label %95

94:                                               ; preds = %54
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %0, %"class.blink::KURL"* nonnull dereferenceable(112) %5) #14
  br label %95

95:                                               ; preds = %94, %93, %53
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %10) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink14ManifestParser12ParseDisplayEPKNS_10JSONObjectE(%"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional.179", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.22, i64 0, i64 0), i64 7) #14
  call void @_ZN5blink14ManifestParser11ParseStringEPKNS_10JSONObjectERKN3WTF6StringENS0_8TrimTypeE(%"class.absl::optional.179"* nonnull sret %3, %"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 0)
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #14
  br label %26

26:                                               ; preds = %2, %22, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  %27 = load i8, i8* %8, align 8, !range !16
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %104, label %29

29:                                               ; preds = %26
  %30 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #14
  %31 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.WTF::String"* %31, i32 0) #14
  %32 = call i32 @_ZN5blink21DisplayModeFromStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #14
  %33 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %40

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8*, i8** %38, align 8
  call void @_ZdlPv(i8* %39) #15
  br label %40

40:                                               ; preds = %29, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #14
  %41 = icmp eq i32 %32, 0
  br i1 %41, label %42, label %60

42:                                               ; preds = %40
  %43 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.23, i64 0, i64 0), i64 32) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %6, i1 zeroext false, i32 0, i32 0)
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %80, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %80

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #14
  br label %80

60:                                               ; preds = %40
  %61 = call zeroext i1 @_ZN5blink18IsBasicDisplayModeENS_5mojom11DisplayModeE(i32 %32) #14
  br i1 %61, label %82, label %62

62:                                               ; preds = %60
  %63 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.24, i64 0, i64 0), i64 37) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %7, i1 zeroext false, i32 0, i32 0)
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #14
  br label %80

80:                                               ; preds = %79, %76, %62, %59, %56, %42
  %81 = phi i8* [ %43, %42 ], [ %43, %56 ], [ %43, %59 ], [ %63, %62 ], [ %63, %76 ], [ %63, %79 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #14
  br label %82

82:                                               ; preds = %80, %60
  %83 = phi i32 [ %32, %60 ], [ 0, %80 ]
  %84 = load i8, i8* %8, align 8
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %104, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #14
  br label %103

103:                                              ; preds = %102, %99, %86
  store i8 0, i8* %8, align 8
  br label %104

104:                                              ; preds = %26, %82, %103
  %105 = phi i32 [ %83, %82 ], [ %83, %103 ], [ 0, %26 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #14
  ret i32 %105
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser20ParseDisplayOverrideEPKNS_10JSONObjectE(%"class.WTF::Vector"* noalias sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca i32, align 4
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %13 = bitcast %"class.WTF::Vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 16, i1 false) #14
  %14 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0), i64 16) #14
  %15 = call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #14
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #14
  br label %32

32:                                               ; preds = %3, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14
  %33 = icmp eq %"class.blink::JSONValue"* %15, null
  br i1 %33, label %160, label %34

34:                                               ; preds = %32
  %35 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.25, i64 0, i64 0), i64 16) #14
  %36 = call %"class.blink::JSONArray"* @_ZNK5blink10JSONObject8GetArrayERKN3WTF6StringE(%"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %5) #14
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %53, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  br i1 %44, label %47, label %49

47:                                               ; preds = %40
  %48 = add i32 %46, -1
  store i32 %48, i32* %45, align 4
  br label %49

49:                                               ; preds = %47, %40
  %50 = phi i32 [ %48, %47 ], [ %46, %40 ]
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %53

52:                                               ; preds = %49
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %38) #14
  br label %53

53:                                               ; preds = %34, %49, %52
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #14
  %54 = icmp eq %"class.blink::JSONArray"* %36, null
  br i1 %54, label %69, label %55

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %36, i64 0, i32 1, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %160, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.WTF::String"* %7 to i8*
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %62 = bitcast %"class.WTF::String"* %7 to i64*
  %63 = bitcast i32* %8 to i8*
  %64 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %65 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %1, i64 0, i32 3
  br label %88

69:                                               ; preds = %53
  %70 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.26, i64 0, i64 0), i64 57) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %6, i1 zeroext false, i32 0, i32 0)
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #14
  br label %87

87:                                               ; preds = %69, %83, %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #14
  br label %160

88:                                               ; preds = %59, %156
  %89 = phi i32 [ 0, %59 ], [ %157, %156 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60) #14
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %61, align 8
  %90 = call %"class.blink::JSONValue"* @_ZNK5blink9JSONArray2atEj(%"class.blink::JSONArray"* nonnull %36, i32 %89) #14
  %91 = bitcast %"class.blink::JSONValue"* %90 to i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)***
  %92 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)**, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*** %91, align 8
  %93 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %92, i64 5
  %94 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %93, align 8
  %95 = call zeroext i1 %94(%"class.blink::JSONValue"* %90, %"class.WTF::String"* nonnull %7) #14
  %96 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %7) #14
  %97 = ptrtoint %"class.WTF::StringImpl"* %96 to i64
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  store i64 %97, i64* %62, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #14
  br label %113

113:                                              ; preds = %112, %109, %88
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %63) #14
  store i32 -1431655766, i32* %8, align 4
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %64) #14
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %9, %"class.WTF::String"* nonnull %7, i32 0) #14
  %114 = call i32 @_ZN5blink21DisplayModeFromStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %9) #14
  %115 = load i8, i8* %66, align 1
  %116 = icmp slt i8 %115, 0
  br i1 %116, label %117, label %119

117:                                              ; preds = %113
  %118 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %118) #15
  br label %119

119:                                              ; preds = %113, %117
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %64) #14
  store i32 %114, i32* %8, align 4
  %120 = load %"class.blink::FeatureContext"*, %"class.blink::FeatureContext"** %68, align 8
  %121 = call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase34WebAppWindowControlsOverlayEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %120) #14
  %122 = xor i1 %121, true
  %123 = load i32, i32* %8, align 4
  %124 = icmp eq i32 %123, 5
  %125 = and i1 %124, %122
  br i1 %125, label %126, label %127

126:                                              ; preds = %119
  store i32 0, i32* %8, align 4
  br label %140

127:                                              ; preds = %119
  %128 = icmp eq i32 %123, 0
  br i1 %128, label %140, label %129

129:                                              ; preds = %127
  %130 = load i32, i32* %12, align 4
  %131 = load i32, i32* %11, align 8
  %132 = icmp eq i32 %130, %131
  br i1 %132, label %139, label %133, !prof !2

133:                                              ; preds = %129
  %134 = load i32*, i32** %10, align 8
  %135 = zext i32 %130 to i64
  %136 = getelementptr inbounds i32, i32* %134, i64 %135
  store i32 %123, i32* %136, align 4
  %137 = load i32, i32* %12, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %12, align 4
  br label %140

139:                                              ; preds = %129
  call void @_ZN3WTF6VectorIN5blink5mojom11DisplayModeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector"* %0, i32* nonnull dereferenceable(4) %8) #14
  br label %140

140:                                              ; preds = %139, %133, %126, %127
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %63) #14
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %156, label %143

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %152

150:                                              ; preds = %143
  %151 = add i32 %149, -1
  store i32 %151, i32* %148, align 4
  br label %152

152:                                              ; preds = %150, %143
  %153 = phi i32 [ %151, %150 ], [ %149, %143 ]
  %154 = icmp eq i32 %153, 0
  br i1 %154, label %155, label %156

155:                                              ; preds = %152
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #14
  br label %156

156:                                              ; preds = %140, %152, %155
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60) #14
  %157 = add nuw i32 %89, 1
  %158 = load i32, i32* %56, align 4
  %159 = icmp ult i32 %157, %158
  br i1 %159, label %88, label %160

160:                                              ; preds = %156, %55, %32, %87
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink14ManifestParser16ParseOrientationEPKNS_10JSONObjectE(%"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional.179", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false)
  %8 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i64 0, i64 0), i64 11) #14
  call void @_ZN5blink14ManifestParser11ParseStringEPKNS_10JSONObjectERKN3WTF6StringENS0_8TrimTypeE(%"class.absl::optional.179"* nonnull sret %3, %"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 0)
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #14
  br label %25

25:                                               ; preds = %2, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  %26 = load i8, i8* %7, align 8, !range !16
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %81, label %28

28:                                               ; preds = %25
  %29 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #14
  %30 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.WTF::String"* %30, i32 0) #14
  %31 = call i32 @_ZN5blink38WebScreenOrientationLockTypeFromStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #14
  %32 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %38) #15
  br label %39

39:                                               ; preds = %28, %36
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #14
  %40 = icmp eq i32 %31, 0
  br i1 %40, label %41, label %60

41:                                               ; preds = %39
  %42 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.28, i64 0, i64 0), i64 36) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %6, i1 zeroext false, i32 0, i32 0)
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  br i1 %50, label %53, label %55

53:                                               ; preds = %46
  %54 = add i32 %52, -1
  store i32 %54, i32* %51, align 4
  br label %55

55:                                               ; preds = %53, %46
  %56 = phi i32 [ %54, %53 ], [ %52, %46 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %44) #14
  br label %59

59:                                               ; preds = %41, %55, %58
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #14
  br label %60

60:                                               ; preds = %39, %59
  %61 = load i8, i8* %7, align 8
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %81, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #14
  br label %80

80:                                               ; preds = %79, %76, %63
  store i8 0, i8* %7, align 8
  br label %81

81:                                               ; preds = %25, %60, %80
  %82 = phi i32 [ %31, %60 ], [ %31, %80 ], [ 0, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  ret i32 %82
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser10ParseIconsEPKNS_10JSONObjectE(%"class.WTF::Vector.5"* noalias sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0), i64 5) #14
  call void @_ZN5blink14ManifestParser18ParseImageResourceERKN3WTF6StringEPKNS_10JSONObjectE(%"class.WTF::Vector.5"* sret %0, %"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::JSONObject"* %2)
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #14
  br label %22

22:                                               ; preds = %3, %18, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser16ParseScreenshotsEPKNS_10JSONObjectE(%"class.WTF::Vector.5"* noalias sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.41, i64 0, i64 0), i64 11) #14
  call void @_ZN5blink14ManifestParser18ParseImageResourceERKN3WTF6StringEPKNS_10JSONObjectE(%"class.WTF::Vector.5"* sret %0, %"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::JSONObject"* %2)
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #14
  br label %22

22:                                               ; preds = %3, %18, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser16ParseShareTargetEPKNS_10JSONObjectE(%"class.absl::optional.163"* noalias nocapture sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::KURL", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.mojo::StructPtr.43", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.66, i64 0, i64 0), i64 12) #14
  %19 = call %"class.blink::JSONObject"* @_ZNK5blink10JSONObject13GetJSONObjectERKN3WTF6StringE(%"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %6) #14
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #14
  br label %36

36:                                               ; preds = %3, %32, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #14
  %37 = icmp eq %"class.blink::JSONObject"* %19, null
  br i1 %37, label %38, label %40

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.absl::optional.163", %"class.absl::optional.163"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %39, align 8
  br label %334

40:                                               ; preds = %36
  %41 = call i8* @_Znwm(i64 128) #15, !noalias !20
  %42 = bitcast i8* %41 to %"class.blink::mojom::blink::ManifestShareTarget"*
  call void @_ZN5blink5mojom5blink19ManifestShareTargetC1Ev(%"class.blink::mojom::blink::ManifestShareTarget"* nonnull %42) #14, !noalias !20
  %43 = ptrtoint i8* %41 to i64
  %44 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %44) #14
  %45 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.67, i64 0, i64 0), i64 6) #14
  %46 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %1, i64 0, i32 1
  call void @_ZN5blink14ManifestParser8ParseURLEPKNS_10JSONObjectERKN3WTF6StringERKNS_4KURLENS0_20ParseURLRestrictionsE(%"class.blink::KURL"* nonnull sret %7, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* nonnull %19, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.blink::KURL"* dereferenceable(112) %46, i32 2)
  %47 = bitcast i8* %41 to %"class.blink::KURL"*
  %48 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* nonnull %47, %"class.blink::KURL"* nonnull dereferenceable(112) %7) #14
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %7) #14
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %40
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #14
  br label %65

65:                                               ; preds = %40, %61, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #14
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %44) #14
  %66 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %47) #14
  br i1 %66, label %85, label %67

67:                                               ; preds = %65
  %68 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.68, i64 0, i64 0), i64 62) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %9, i1 zeroext false, i32 0, i32 0)
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %331, label %72

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %331

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #14
  br label %331

85:                                               ; preds = %65
  %86 = call i64 @_ZN5blink14ManifestParser22ParseShareTargetMethodEPKNS_10JSONObjectE(%"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* nonnull %19)
  %87 = trunc i64 %86 to i8
  %88 = lshr i64 %86, 32
  %89 = trunc i64 %88 to i32
  %90 = call i64 @_ZN5blink14ManifestParser23ParseShareTargetEnctypeEPKNS_10JSONObjectE(%"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* nonnull %19)
  %91 = trunc i64 %90 to i8
  %92 = lshr i64 %90, 32
  %93 = trunc i64 %92 to i32
  %94 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.69, i64 0, i64 0), i64 6) #14
  %95 = call %"class.blink::JSONObject"* @_ZNK5blink10JSONObject13GetJSONObjectERKN3WTF6StringE(%"class.blink::JSONObject"* nonnull %19, %"class.WTF::String"* nonnull dereferenceable(8) %10) #14
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %85
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #14
  br label %112

112:                                              ; preds = %85, %108, %111
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #14
  %113 = icmp eq %"class.blink::JSONObject"* %95, null
  br i1 %113, label %114, label %132

114:                                              ; preds = %112
  %115 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.70, i64 0, i64 0), i64 76) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %11, i1 zeroext false, i32 0, i32 0)
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %331, label %119

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %331

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #14
  br label %331

132:                                              ; preds = %112
  %133 = bitcast %"class.mojo::StructPtr.43"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %133) #14
  call void @_ZN5blink14ManifestParser22ParseShareTargetParamsEPKNS_10JSONObjectE(%"class.mojo::StructPtr.43"* nonnull sret %12, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* nonnull %95)
  %134 = getelementptr inbounds i8, i8* %41, i64 120
  %135 = bitcast i8* %134 to %"class.blink::mojom::blink::ManifestShareTargetParams"**
  %136 = load %"class.blink::mojom::blink::ManifestShareTargetParams"*, %"class.blink::mojom::blink::ManifestShareTargetParams"** %135, align 8
  store %"class.blink::mojom::blink::ManifestShareTargetParams"* null, %"class.blink::mojom::blink::ManifestShareTargetParams"** %135, align 8
  %137 = icmp eq %"class.blink::mojom::blink::ManifestShareTargetParams"* %136, null
  br i1 %137, label %138, label %143

138:                                              ; preds = %132
  %139 = bitcast i8* %134 to i64*
  %140 = bitcast %"class.mojo::StructPtr.43"* %12 to i64*
  %141 = load i64, i64* %140, align 8
  store i64 %141, i64* %139, align 8
  %142 = getelementptr inbounds %"class.mojo::StructPtr.43", %"class.mojo::StructPtr.43"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestShareTargetParams"* null, %"class.blink::mojom::blink::ManifestShareTargetParams"** %142, align 8
  br label %154

143:                                              ; preds = %132
  call void @_ZN5blink5mojom5blink25ManifestShareTargetParamsD1Ev(%"class.blink::mojom::blink::ManifestShareTargetParams"* nonnull %136) #14
  %144 = bitcast %"class.blink::mojom::blink::ManifestShareTargetParams"* %136 to i8*
  call void @_ZdlPv(i8* %144) #15
  %145 = bitcast i8* %134 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast %"class.mojo::StructPtr.43"* %12 to i64*
  %148 = load i64, i64* %147, align 8
  store i64 %148, i64* %145, align 8
  %149 = getelementptr inbounds %"class.mojo::StructPtr.43", %"class.mojo::StructPtr.43"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestShareTargetParams"* null, %"class.blink::mojom::blink::ManifestShareTargetParams"** %149, align 8
  %150 = icmp eq i64 %146, 0
  br i1 %150, label %154, label %151

151:                                              ; preds = %143
  %152 = inttoptr i64 %146 to %"class.blink::mojom::blink::ManifestShareTargetParams"*
  call void @_ZN5blink5mojom5blink25ManifestShareTargetParamsD1Ev(%"class.blink::mojom::blink::ManifestShareTargetParams"* nonnull %152) #14
  %153 = inttoptr i64 %146 to i8*
  call void @_ZdlPv(i8* %153) #15
  br label %154

154:                                              ; preds = %138, %143, %151
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %133) #14
  %155 = icmp eq i8 %87, 0
  br i1 %155, label %156, label %174

156:                                              ; preds = %154
  %157 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %157) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.71, i64 0, i64 0), i64 49) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %13, i1 zeroext false, i32 0, i32 0)
  %158 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %331, label %161

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %170

168:                                              ; preds = %161
  %169 = add i32 %167, -1
  store i32 %169, i32* %166, align 4
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %167, %161 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %331

173:                                              ; preds = %170
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %159) #14
  br label %331

174:                                              ; preds = %154
  %175 = getelementptr inbounds i8, i8* %41, i64 112
  %176 = bitcast i8* %175 to i32*
  store i32 %89, i32* %176, align 8
  %177 = icmp eq i8 %91, 0
  br i1 %177, label %178, label %196

178:                                              ; preds = %174
  %179 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %179) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.72, i64 0, i64 0), i64 96) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %14, i1 zeroext false, i32 0, i32 0)
  %180 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %180, align 8
  %182 = icmp eq %"class.WTF::StringImpl"* %181, null
  br i1 %182, label %331, label %183

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = and i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  br i1 %187, label %190, label %192

190:                                              ; preds = %183
  %191 = add i32 %189, -1
  store i32 %191, i32* %188, align 4
  br label %192

192:                                              ; preds = %190, %183
  %193 = phi i32 [ %191, %190 ], [ %189, %183 ]
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %331

195:                                              ; preds = %192
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %181) #14
  br label %331

196:                                              ; preds = %174
  %197 = getelementptr inbounds i8, i8* %41, i64 116
  %198 = bitcast i8* %197 to i32*
  store i32 %93, i32* %198, align 4
  %199 = icmp eq i32 %89, 0
  %200 = icmp eq i32 %93, 1
  %201 = and i1 %200, %199
  br i1 %201, label %202, label %220

202:                                              ; preds = %196
  %203 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %203) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %15, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.73, i64 0, i64 0), i64 82) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %15, i1 zeroext false, i32 0, i32 0)
  %204 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %204, align 8
  %206 = icmp eq %"class.WTF::StringImpl"* %205, null
  br i1 %206, label %331, label %207

207:                                              ; preds = %202
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load atomic i32, i32* %208 monotonic, align 4
  %210 = and i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  br i1 %211, label %214, label %216

214:                                              ; preds = %207
  %215 = add i32 %213, -1
  store i32 %215, i32* %212, align 4
  br label %216

216:                                              ; preds = %214, %207
  %217 = phi i32 [ %215, %214 ], [ %213, %207 ]
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %331

219:                                              ; preds = %216
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %205) #14
  br label %331

220:                                              ; preds = %196
  %221 = load %"class.blink::mojom::blink::ManifestShareTargetParams"*, %"class.blink::mojom::blink::ManifestShareTargetParams"** %135, align 8
  %222 = getelementptr inbounds %"class.blink::mojom::blink::ManifestShareTargetParams", %"class.blink::mojom::blink::ManifestShareTargetParams"* %221, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %223 = load i8, i8* %222, align 8, !range !16
  %224 = icmp eq i8 %223, 0
  br i1 %224, label %327, label %225

225:                                              ; preds = %220
  %226 = icmp eq i32 %89, 1
  %227 = and i1 %200, %226
  br i1 %227, label %246, label %228

228:                                              ; preds = %225
  %229 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %229) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %16, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.74, i64 0, i64 0), i64 55) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %16, i1 zeroext false, i32 0, i32 0)
  %230 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %231 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %230, align 8
  %232 = icmp eq %"class.WTF::StringImpl"* %231, null
  br i1 %232, label %331, label %233

233:                                              ; preds = %228
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %231, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %235 = load atomic i32, i32* %234 monotonic, align 4
  %236 = and i32 %235, 2
  %237 = icmp eq i32 %236, 0
  %238 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %231, i64 0, i32 0
  %239 = load i32, i32* %238, align 4
  br i1 %237, label %240, label %242

240:                                              ; preds = %233
  %241 = add i32 %239, -1
  store i32 %241, i32* %238, align 4
  br label %242

242:                                              ; preds = %240, %233
  %243 = phi i32 [ %241, %240 ], [ %239, %233 ]
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %245, label %331

245:                                              ; preds = %242
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %231) #14
  br label %331

246:                                              ; preds = %225
  %247 = getelementptr inbounds %"class.blink::mojom::blink::ManifestShareTargetParams", %"class.blink::mojom::blink::ManifestShareTargetParams"* %221, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %248 = load %"class.mojo::StructPtr.50"*, %"class.mojo::StructPtr.50"** %247, align 8
  %249 = getelementptr inbounds %"class.blink::mojom::blink::ManifestShareTargetParams", %"class.blink::mojom::blink::ManifestShareTargetParams"* %221, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %250 = load i32, i32* %249, align 4
  %251 = zext i32 %250 to i64
  %252 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %248, i64 %251
  %253 = icmp eq i32 %250, 0
  br i1 %253, label %327, label %254

254:                                              ; preds = %246
  %255 = bitcast %"class.WTF::String"* %5 to i8*
  %256 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %257 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %258 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %259 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %258, i64 0, i32 1, i32 0
  %260 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %261

261:                                              ; preds = %306, %254
  %262 = phi %"class.mojo::StructPtr.50"* [ %248, %254 ], [ %307, %306 ]
  %263 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %262, i64 0, i32 0, i32 0, i32 0, i32 0
  %264 = load %"class.blink::mojom::blink::ManifestFileFilter"*, %"class.blink::mojom::blink::ManifestFileFilter"** %263, align 8
  %265 = getelementptr inbounds %"class.blink::mojom::blink::ManifestFileFilter", %"class.blink::mojom::blink::ManifestFileFilter"* %264, i64 0, i32 1, i32 0, i32 0, i32 0
  %266 = load %"class.WTF::String"*, %"class.WTF::String"** %265, align 8
  %267 = getelementptr inbounds %"class.blink::mojom::blink::ManifestFileFilter", %"class.blink::mojom::blink::ManifestFileFilter"* %264, i64 0, i32 1, i32 0, i32 0, i32 2
  %268 = load i32, i32* %267, align 4
  %269 = zext i32 %268 to i64
  %270 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %266, i64 %269
  %271 = icmp eq i32 %268, 0
  br i1 %271, label %306, label %274

272:                                              ; preds = %304
  %273 = icmp eq %"class.WTF::String"* %305, %270
  br i1 %273, label %306, label %274

274:                                              ; preds = %261, %272
  %275 = phi %"class.WTF::String"* [ %305, %272 ], [ %266, %261 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %255) #14
  %276 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"* %275) #14
  store %"class.WTF::StringImpl"* %276, %"class.WTF::StringImpl"** %256, align 8
  %277 = icmp eq %"class.WTF::StringImpl"* %276, null
  br i1 %277, label %280, label %278

278:                                              ; preds = %274
  %279 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithEDs(%"class.WTF::StringImpl"* nonnull %276, i16 zeroext 46) #14
  br i1 %279, label %287, label %280

280:                                              ; preds = %278, %274
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %257) #14
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %4, %"class.WTF::String"* nonnull %5, i32 0) #14
  %281 = call zeroext i1 @_ZN3net29ParseMimeTypeWithoutParameterERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_S9_(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %4, %"class.std::__1::basic_string"* null, %"class.std::__1::basic_string"* null) #14
  %282 = load i8, i8* %259, align 1
  %283 = icmp slt i8 %282, 0
  br i1 %283, label %284, label %286

284:                                              ; preds = %280
  %285 = load i8*, i8** %260, align 8
  call void @_ZdlPv(i8* %285) #15
  br label %286

286:                                              ; preds = %284, %280
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %257) #14
  br label %287

287:                                              ; preds = %286, %278
  %288 = phi i1 [ %281, %286 ], [ true, %278 ]
  %289 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %256, align 8
  %290 = icmp eq %"class.WTF::StringImpl"* %289, null
  br i1 %290, label %304, label %291

291:                                              ; preds = %287
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = load atomic i32, i32* %292 monotonic, align 4
  %294 = and i32 %293, 2
  %295 = icmp eq i32 %294, 0
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 0
  %297 = load i32, i32* %296, align 4
  br i1 %295, label %298, label %300

298:                                              ; preds = %291
  %299 = add i32 %297, -1
  store i32 %299, i32* %296, align 4
  br label %300

300:                                              ; preds = %298, %291
  %301 = phi i32 [ %299, %298 ], [ %297, %291 ]
  %302 = icmp eq i32 %301, 0
  br i1 %302, label %303, label %304

303:                                              ; preds = %300
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %289) #14
  br label %304

304:                                              ; preds = %303, %300, %287
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %255) #14
  %305 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %275, i64 1
  br i1 %288, label %272, label %309

306:                                              ; preds = %272, %261
  %307 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %262, i64 1
  %308 = icmp eq %"class.mojo::StructPtr.50"* %307, %252
  br i1 %308, label %327, label %261

309:                                              ; preds = %304
  %310 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %310) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %17, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.75, i64 0, i64 0), i64 31) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %17, i1 zeroext false, i32 0, i32 0)
  %311 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %312 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %311, align 8
  %313 = icmp eq %"class.WTF::StringImpl"* %312, null
  br i1 %313, label %331, label %314

314:                                              ; preds = %309
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %316 = load atomic i32, i32* %315 monotonic, align 4
  %317 = and i32 %316, 2
  %318 = icmp eq i32 %317, 0
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %312, i64 0, i32 0
  %320 = load i32, i32* %319, align 4
  br i1 %318, label %321, label %323

321:                                              ; preds = %314
  %322 = add i32 %320, -1
  store i32 %322, i32* %319, align 4
  br label %323

323:                                              ; preds = %321, %314
  %324 = phi i32 [ %322, %321 ], [ %320, %314 ]
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %331

326:                                              ; preds = %323
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %312) #14
  br label %331

327:                                              ; preds = %306, %220, %246
  %328 = getelementptr inbounds %"class.absl::optional.163", %"class.absl::optional.163"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %328, align 8
  %329 = getelementptr inbounds %"class.absl::optional.163", %"class.absl::optional.163"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %330 = bitcast %"class.mojo::StructPtr.39"* %329 to i64*
  store i64 %43, i64* %330, align 8
  br label %334

331:                                              ; preds = %326, %323, %309, %245, %242, %228, %219, %216, %202, %195, %192, %178, %173, %170, %156, %131, %128, %114, %84, %81, %67
  %332 = phi i8* [ %68, %67 ], [ %68, %81 ], [ %68, %84 ], [ %115, %114 ], [ %115, %128 ], [ %115, %131 ], [ %157, %156 ], [ %157, %170 ], [ %157, %173 ], [ %179, %178 ], [ %179, %192 ], [ %179, %195 ], [ %203, %202 ], [ %203, %216 ], [ %203, %219 ], [ %229, %228 ], [ %229, %242 ], [ %229, %245 ], [ %310, %309 ], [ %310, %323 ], [ %310, %326 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %332) #14
  %333 = getelementptr inbounds %"class.absl::optional.163", %"class.absl::optional.163"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %333, align 8
  call void @_ZN5blink5mojom5blink19ManifestShareTargetD1Ev(%"class.blink::mojom::blink::ManifestShareTarget"* nonnull %42) #14
  call void @_ZdlPv(i8* nonnull %41) #15
  br label %334

334:                                              ; preds = %331, %327, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser17ParseFileHandlersEPKNS_10JSONObjectE(%"class.WTF::Vector.70"* noalias sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.absl::optional.216", align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.70", %"class.WTF::Vector.70"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.WTF::Vector.70", %"class.WTF::Vector.70"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::Vector.70", %"class.WTF::Vector.70"* %0, i64 0, i32 0, i32 0, i32 2
  %12 = bitcast %"class.WTF::Vector.70"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #14
  %13 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.76, i64 0, i64 0), i64 13) #14
  %14 = call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #14
  %15 = icmp eq %"class.blink::JSONValue"* %14, null
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %32, label %19

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  br i1 %23, label %26, label %28

26:                                               ; preds = %19
  %27 = add i32 %25, -1
  store i32 %27, i32* %24, align 4
  br label %28

28:                                               ; preds = %26, %19
  %29 = phi i32 [ %27, %26 ], [ %25, %19 ]
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %32

31:                                               ; preds = %28
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #14
  br label %32

32:                                               ; preds = %3, %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #14
  br i1 %15, label %141, label %33

33:                                               ; preds = %32
  %34 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.76, i64 0, i64 0), i64 13) #14
  %35 = call %"class.blink::JSONArray"* @_ZNK5blink10JSONObject8GetArrayERKN3WTF6StringE(%"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %5) #14
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %33
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #14
  br label %52

52:                                               ; preds = %33, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #14
  %53 = icmp eq %"class.blink::JSONArray"* %35, null
  br i1 %53, label %65, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %35, i64 0, i32 1, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %141, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.absl::optional.216", %"class.absl::optional.216"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.absl::optional.216", %"class.absl::optional.216"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %61 = bitcast %"class.mojo::StructPtr.73"* %60 to i64*
  %62 = getelementptr inbounds %"class.absl::optional.216", %"class.absl::optional.216"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.WTF::String"* %7 to i8*
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  br label %84

65:                                               ; preds = %52
  %66 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.77, i64 0, i64 0), i64 54) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %6, i1 zeroext false, i32 0, i32 0)
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #14
  br label %83

83:                                               ; preds = %65, %79, %82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #14
  br label %141

84:                                               ; preds = %58, %137
  %85 = phi i32 [ 0, %58 ], [ %138, %137 ]
  %86 = call %"class.blink::JSONValue"* @_ZNK5blink9JSONArray2atEj(%"class.blink::JSONArray"* nonnull %35, i32 %85) #14
  %87 = icmp eq %"class.blink::JSONValue"* %86, null
  br i1 %87, label %92, label %88

88:                                               ; preds = %84
  %89 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %86, i64 0, i32 1
  %90 = load i32, i32* %89, align 8
  %91 = icmp eq i32 %90, 5
  br i1 %91, label %109, label %92

92:                                               ; preds = %88, %84
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.78, i64 0, i64 0), i64 42) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %7, i1 zeroext false, i32 0, i32 0)
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #14
  br label %108

108:                                              ; preds = %92, %104, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #14
  br label %137

109:                                              ; preds = %88
  %110 = bitcast %"class.blink::JSONValue"* %86 to %"class.blink::JSONObject"*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 -86, i64 16, i1 false)
  call void @_ZN5blink14ManifestParser16ParseFileHandlerEPKNS_10JSONObjectE(%"class.absl::optional.216"* nonnull sret %8, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* nonnull %110)
  %111 = load i8, i8* %59, align 8, !range !16
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %136, label %113

113:                                              ; preds = %109
  %114 = load i32, i32* %11, align 4
  %115 = load i32, i32* %10, align 8
  %116 = icmp eq i32 %114, %115
  br i1 %116, label %126, label %117, !prof !2

117:                                              ; preds = %113
  %118 = load %"class.mojo::StructPtr.73"*, %"class.mojo::StructPtr.73"** %9, align 8
  %119 = zext i32 %114 to i64
  %120 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %118, i64 %119
  %121 = bitcast %"class.mojo::StructPtr.73"* %120 to i64*
  %122 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileHandler"* null, %"class.blink::mojom::blink::ManifestFileHandler"** %122, align 8
  %123 = load i64, i64* %61, align 8
  store i64 %123, i64* %121, align 8
  store i64 0, i64* %61, align 8
  %124 = load i32, i32* %11, align 4
  %125 = add i32 %124, 1
  store i32 %125, i32* %11, align 4
  br label %127

126:                                              ; preds = %113
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink19ManifestFileHandlerEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.70"* %0, %"class.mojo::StructPtr.73"* dereferenceable(8) %60) #14
  br label %127

127:                                              ; preds = %126, %117
  %128 = load i8, i8* %59, align 8
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %136, label %130

130:                                              ; preds = %127
  %131 = load %"class.blink::mojom::blink::ManifestFileHandler"*, %"class.blink::mojom::blink::ManifestFileHandler"** %62, align 8
  store %"class.blink::mojom::blink::ManifestFileHandler"* null, %"class.blink::mojom::blink::ManifestFileHandler"** %62, align 8
  %132 = icmp eq %"class.blink::mojom::blink::ManifestFileHandler"* %131, null
  br i1 %132, label %135, label %133

133:                                              ; preds = %130
  call void @_ZN5blink5mojom5blink19ManifestFileHandlerD1Ev(%"class.blink::mojom::blink::ManifestFileHandler"* nonnull %131) #14
  %134 = getelementptr inbounds %"class.blink::mojom::blink::ManifestFileHandler", %"class.blink::mojom::blink::ManifestFileHandler"* %131, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %134) #15
  br label %135

135:                                              ; preds = %133, %130
  store i8 0, i8* %59, align 8
  br label %136

136:                                              ; preds = %109, %127, %135
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #14
  br label %137

137:                                              ; preds = %136, %108
  %138 = add nuw i32 %85, 1
  %139 = load i32, i32* %55, align 4
  %140 = icmp ult i32 %138, %139
  br i1 %140, label %84, label %141

141:                                              ; preds = %137, %54, %32, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser21ParseProtocolHandlersEPKNS_10JSONObjectE(%"class.WTF::Vector.84"* noalias sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.absl::optional.221", align 8
  %9 = getelementptr inbounds %"class.WTF::Vector.84", %"class.WTF::Vector.84"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.WTF::Vector.84", %"class.WTF::Vector.84"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::Vector.84", %"class.WTF::Vector.84"* %0, i64 0, i32 0, i32 0, i32 2
  %12 = bitcast %"class.WTF::Vector.84"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 16, i1 false) #14
  %13 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features29kWebAppEnableProtocolHandlersE) #14
  br i1 %13, label %18, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %1, i64 0, i32 3
  %16 = load %"class.blink::FeatureContext"*, %"class.blink::FeatureContext"** %15, align 8
  %17 = tail call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase30ParseUrlProtocolHandlerEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %16) #14
  br i1 %17, label %18, label %147

18:                                               ; preds = %14, %3
  %19 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.85, i64 0, i64 0), i64 17) #14
  %20 = call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #14
  %21 = icmp eq %"class.blink::JSONValue"* %20, null
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %18
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #14
  br label %38

38:                                               ; preds = %37, %34, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #14
  br i1 %21, label %147, label %39

39:                                               ; preds = %38
  %40 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.85, i64 0, i64 0), i64 17) #14
  %41 = call %"class.blink::JSONArray"* @_ZNK5blink10JSONObject8GetArrayERKN3WTF6StringE(%"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %5) #14
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #14
  br label %58

58:                                               ; preds = %39, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #14
  %59 = icmp eq %"class.blink::JSONArray"* %41, null
  br i1 %59, label %71, label %60

60:                                               ; preds = %58
  %61 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %41, i64 0, i32 1, i32 0, i32 0, i32 2
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %147, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.absl::optional.221", %"class.absl::optional.221"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.absl::optional.221", %"class.absl::optional.221"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %67 = bitcast %"class.mojo::StructPtr.87"* %66 to i64*
  %68 = getelementptr inbounds %"class.absl::optional.221", %"class.absl::optional.221"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = bitcast %"class.WTF::String"* %7 to i8*
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  br label %90

71:                                               ; preds = %58
  %72 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.86, i64 0, i64 0), i64 58) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %6, i1 zeroext false, i32 0, i32 0)
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #14
  br label %89

89:                                               ; preds = %71, %85, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #14
  br label %147

90:                                               ; preds = %64, %143
  %91 = phi i32 [ 0, %64 ], [ %144, %143 ]
  %92 = call %"class.blink::JSONValue"* @_ZNK5blink9JSONArray2atEj(%"class.blink::JSONArray"* nonnull %41, i32 %91) #14
  %93 = icmp eq %"class.blink::JSONValue"* %92, null
  br i1 %93, label %98, label %94

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %92, i64 0, i32 1
  %96 = load i32, i32* %95, align 8
  %97 = icmp eq i32 %96, 5
  br i1 %97, label %115, label %98

98:                                               ; preds = %94, %90
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.87, i64 0, i64 0), i64 54) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %7, i1 zeroext false, i32 0, i32 0)
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %98
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %110

108:                                              ; preds = %101
  %109 = add i32 %107, -1
  store i32 %109, i32* %106, align 4
  br label %110

110:                                              ; preds = %108, %101
  %111 = phi i32 [ %109, %108 ], [ %107, %101 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %99) #14
  br label %114

114:                                              ; preds = %98, %110, %113
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #14
  br label %143

115:                                              ; preds = %94
  %116 = bitcast %"class.blink::JSONValue"* %92 to %"class.blink::JSONObject"*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 16, i1 false)
  call void @_ZN5blink14ManifestParser20ParseProtocolHandlerEPKNS_10JSONObjectE(%"class.absl::optional.221"* nonnull sret %8, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* nonnull %116)
  %117 = load i8, i8* %65, align 8, !range !16
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %142, label %119

119:                                              ; preds = %115
  %120 = load i32, i32* %11, align 4
  %121 = load i32, i32* %10, align 8
  %122 = icmp eq i32 %120, %121
  br i1 %122, label %132, label %123, !prof !2

123:                                              ; preds = %119
  %124 = load %"class.mojo::StructPtr.87"*, %"class.mojo::StructPtr.87"** %9, align 8
  %125 = zext i32 %120 to i64
  %126 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %124, i64 %125
  %127 = bitcast %"class.mojo::StructPtr.87"* %126 to i64*
  %128 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %126, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestProtocolHandler"* null, %"class.blink::mojom::blink::ManifestProtocolHandler"** %128, align 8
  %129 = load i64, i64* %67, align 8
  store i64 %129, i64* %127, align 8
  store i64 0, i64* %67, align 8
  %130 = load i32, i32* %11, align 4
  %131 = add i32 %130, 1
  store i32 %131, i32* %11, align 4
  br label %133

132:                                              ; preds = %119
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink23ManifestProtocolHandlerEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.84"* %0, %"class.mojo::StructPtr.87"* dereferenceable(8) %66) #14
  br label %133

133:                                              ; preds = %132, %123
  %134 = load i8, i8* %65, align 8
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %142, label %136

136:                                              ; preds = %133
  %137 = load %"class.blink::mojom::blink::ManifestProtocolHandler"*, %"class.blink::mojom::blink::ManifestProtocolHandler"** %68, align 8
  store %"class.blink::mojom::blink::ManifestProtocolHandler"* null, %"class.blink::mojom::blink::ManifestProtocolHandler"** %68, align 8
  %138 = icmp eq %"class.blink::mojom::blink::ManifestProtocolHandler"* %137, null
  br i1 %138, label %141, label %139

139:                                              ; preds = %136
  call void @_ZN5blink5mojom5blink23ManifestProtocolHandlerD1Ev(%"class.blink::mojom::blink::ManifestProtocolHandler"* nonnull %137) #14
  %140 = bitcast %"class.blink::mojom::blink::ManifestProtocolHandler"* %137 to i8*
  call void @_ZdlPv(i8* %140) #15
  br label %141

141:                                              ; preds = %139, %136
  store i8 0, i8* %65, align 8
  br label %142

142:                                              ; preds = %115, %133, %141
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #14
  br label %143

143:                                              ; preds = %142, %114
  %144 = add nuw i32 %91, 1
  %145 = load i32, i32* %61, align 4
  %146 = icmp ult i32 %144, %145
  br i1 %146, label %90, label %147

147:                                              ; preds = %143, %60, %14, %38, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser16ParseUrlHandlersEPKNS_10JSONObjectE(%"class.WTF::Vector.96"* noalias sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringAppend.185", align 8
  %5 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %6 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringAppend.184", align 8
  %12 = alloca %"class.WTF::StringAppend.185", align 8
  %13 = alloca %"class.WTF::StringAppend.177", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.absl::optional.226", align 8
  %16 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 2
  %19 = bitcast %"class.WTF::Vector.96"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 16, i1 false) #14
  %20 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features24kWebAppEnableUrlHandlersE) #14
  br i1 %20, label %25, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %1, i64 0, i32 3
  %23 = load %"class.blink::FeatureContext"*, %"class.blink::FeatureContext"** %22, align 8
  %24 = tail call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase24WebAppUrlHandlingEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %23) #14
  br i1 %24, label %25, label %446

25:                                               ; preds = %21, %3
  %26 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.93, i64 0, i64 0), i64 12) #14
  %27 = call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %7) #14
  %28 = icmp eq %"class.blink::JSONValue"* %27, null
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #14
  br label %45

45:                                               ; preds = %44, %41, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #14
  br i1 %28, label %446, label %46

46:                                               ; preds = %45
  %47 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.93, i64 0, i64 0), i64 12) #14
  %48 = call %"class.blink::JSONArray"* @_ZNK5blink10JSONObject8GetArrayERKN3WTF6StringE(%"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %8) #14
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %51, label %65, label %52

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %61

59:                                               ; preds = %52
  %60 = add i32 %58, -1
  store i32 %60, i32* %57, align 4
  br label %61

61:                                               ; preds = %59, %52
  %62 = phi i32 [ %60, %59 ], [ %58, %52 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #14
  br label %65

65:                                               ; preds = %46, %61, %64
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #14
  %66 = icmp eq %"class.blink::JSONArray"* %48, null
  br i1 %66, label %78, label %67

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %48, i64 0, i32 1, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %446, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.absl::optional.226", %"class.absl::optional.226"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.absl::optional.226", %"class.absl::optional.226"* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %74 = bitcast %"class.mojo::StructPtr.99"* %73 to i64*
  %75 = getelementptr inbounds %"class.absl::optional.226", %"class.absl::optional.226"* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.WTF::String"* %14 to i8*
  %77 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  br label %97

78:                                               ; preds = %65
  %79 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.94, i64 0, i64 0), i64 53) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %9, i1 zeroext false, i32 0, i32 0)
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #14
  br label %96

96:                                               ; preds = %78, %92, %95
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #14
  br label %446

97:                                               ; preds = %71, %442
  %98 = phi i32 [ 0, %71 ], [ %443, %442 ]
  %99 = icmp eq i32 %98, 10
  br i1 %99, label %100, label %390

100:                                              ; preds = %97
  %101 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #14
  %102 = bitcast %"class.WTF::StringAppend.184"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %102) #14
  %103 = bitcast %"class.WTF::StringAppend.185"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %103) #14
  %104 = bitcast %"class.WTF::StringAppend.177"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #14
  %105 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %105) #14
  %106 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 11
  %107 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 2
  %108 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 -86, i64 32, i1 false) #14
  store i8 48, i8* %106, align 1
  %109 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %6, i64 0, i32 0, i64 10
  store i8* %109, i8** %107, align 8
  store i8 49, i8* %109, align 2
  store i32 2, i32* %108, align 8
  %110 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %109, i32 2) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %105) #14
  %111 = icmp eq %"class.WTF::StringImpl"* %110, null
  br i1 %111, label %187, label %112

112:                                              ; preds = %100
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %129

119:                                              ; preds = %112
  %120 = zext i32 %118 to i33
  %121 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %120, i33 1) #14
  %122 = extractvalue { i33, i1 } %121, 1
  %123 = extractvalue { i33, i1 } %121, 0
  %124 = icmp slt i33 %123, 0
  %125 = or i1 %122, %124
  br i1 %125, label %126, label %127, !prof !2

126:                                              ; preds = %119
  call void @llvm.trap() #14
  unreachable

127:                                              ; preds = %119
  %128 = trunc i33 %123 to i32
  store i32 %128, i32* %117, align 4
  br label %129

129:                                              ; preds = %127, %112
  %130 = phi i32 [ %128, %127 ], [ %118, %112 ]
  %131 = load atomic i32, i32* %113 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %144

134:                                              ; preds = %129
  %135 = zext i32 %130 to i33
  %136 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %135, i33 1) #14
  %137 = extractvalue { i33, i1 } %136, 1
  %138 = extractvalue { i33, i1 } %136, 0
  %139 = icmp slt i33 %138, 0
  %140 = or i1 %137, %139
  br i1 %140, label %141, label %142, !prof !2

141:                                              ; preds = %134
  call void @llvm.trap() #14
  unreachable

142:                                              ; preds = %134
  %143 = trunc i33 %138 to i32
  store i32 %143, i32* %117, align 4
  br label %144

144:                                              ; preds = %142, %129
  %145 = phi i32 [ %143, %142 ], [ %130, %129 ]
  %146 = load atomic i32, i32* %113 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %151

149:                                              ; preds = %144
  %150 = add i32 %145, -1
  store i32 %150, i32* %117, align 4
  br label %151

151:                                              ; preds = %149, %144
  %152 = phi i32 [ %150, %149 ], [ %145, %144 ]
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #14
  br label %155

155:                                              ; preds = %151, %154
  %156 = load atomic i32, i32* %113 monotonic, align 4, !noalias !23
  %157 = and i32 %156, 2
  %158 = icmp eq i32 %157, 0
  %159 = load i32, i32* %117, align 4
  br i1 %158, label %160, label %170

160:                                              ; preds = %155
  %161 = zext i32 %159 to i33
  %162 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %161, i33 1) #14
  %163 = extractvalue { i33, i1 } %162, 1
  %164 = extractvalue { i33, i1 } %162, 0
  %165 = icmp slt i33 %164, 0
  %166 = or i1 %163, %165
  br i1 %166, label %167, label %168, !prof !2

167:                                              ; preds = %160
  call void @llvm.trap() #14, !noalias !23
  unreachable

168:                                              ; preds = %160
  %169 = trunc i33 %164 to i32
  store i32 %169, i32* %117, align 4, !noalias !23
  br label %170

170:                                              ; preds = %155, %168
  %171 = phi i32 [ %169, %168 ], [ %159, %155 ]
  %172 = bitcast %"class.WTF::StringAppend.177"* %13 to i64*
  store i64 ptrtoint ([44 x i8]* @.str.95 to i64), i64* %172, align 8, !alias.scope !23
  %173 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %110, %"class.WTF::StringImpl"** %173, align 8, !alias.scope !23
  %174 = load atomic i32, i32* %113 monotonic, align 4, !noalias !23
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %191

177:                                              ; preds = %170
  %178 = zext i32 %171 to i33
  %179 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %178, i33 1) #14
  %180 = extractvalue { i33, i1 } %179, 1
  %181 = extractvalue { i33, i1 } %179, 0
  %182 = icmp slt i33 %181, 0
  %183 = or i1 %180, %182
  br i1 %183, label %184, label %185, !prof !2

184:                                              ; preds = %177
  call void @llvm.trap() #14, !noalias !23
  unreachable

185:                                              ; preds = %177
  %186 = trunc i33 %181 to i32
  store i32 %186, i32* %117, align 4, !noalias !23
  br label %191

187:                                              ; preds = %100
  %188 = bitcast %"class.WTF::StringAppend.177"* %13 to i64*
  store i64 ptrtoint ([44 x i8]* @.str.95 to i64), i64* %188, align 8, !alias.scope !23
  %189 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %189, align 8, !alias.scope !23
  %190 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.96, i64 0, i64 0), i8** %190, align 8, !alias.scope !23
  br label %203

191:                                              ; preds = %185, %170
  %192 = phi i32 [ %186, %185 ], [ %171, %170 ]
  %193 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.96, i64 0, i64 0), i8** %193, align 8, !alias.scope !23
  %194 = load atomic i32, i32* %113 monotonic, align 4, !noalias !23
  %195 = and i32 %194, 2
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %199

197:                                              ; preds = %191
  %198 = add i32 %192, -1
  store i32 %198, i32* %117, align 4, !noalias !23
  br label %199

199:                                              ; preds = %197, %191
  %200 = phi i32 [ %198, %197 ], [ %192, %191 ]
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %199
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #14, !noalias !23
  br label %203

203:                                              ; preds = %187, %199, %202
  %204 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %204) #14
  %205 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 11
  %206 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 2
  %207 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %204, i8 -86, i64 32, i1 false) #14
  store i8 48, i8* %205, align 1
  %208 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 10
  store i8* %208, i8** %206, align 8
  store i8 49, i8* %208, align 2
  store i32 2, i32* %207, align 8
  %209 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %208, i32 2) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %204) #14
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.185"* nonnull sret %12, %"class.WTF::StringAppend.177"* nonnull dereferenceable(24) %13, %"class.WTF::StringImpl"* %209)
  %210 = bitcast %"class.WTF::StringAppend.185"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %210)
  %211 = bitcast %"class.WTF::StringAppend.185"* %12 to i64*
  %212 = load i64, i64* %211, align 8, !noalias !26
  %213 = bitcast %"class.WTF::StringAppend.185"* %4 to i64*
  store i64 %212, i64* %213, align 8, !noalias !26
  %214 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %214, align 8, !noalias !26
  %216 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %215, %"class.WTF::StringImpl"** %216, align 8, !noalias !26
  %217 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %217, label %235, label %218

218:                                              ; preds = %203
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = and i32 %220, 2
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %235

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  %226 = zext i32 %225 to i33
  %227 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %226, i33 1) #14
  %228 = extractvalue { i33, i1 } %227, 1
  %229 = extractvalue { i33, i1 } %227, 0
  %230 = icmp slt i33 %229, 0
  %231 = or i1 %228, %230
  br i1 %231, label %232, label %233, !prof !2

232:                                              ; preds = %223
  call void @llvm.trap() #14
  unreachable

233:                                              ; preds = %223
  %234 = trunc i33 %229 to i32
  store i32 %234, i32* %224, align 4
  br label %235

235:                                              ; preds = %233, %218, %203
  %236 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %4, i64 0, i32 0, i32 1
  %237 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %12, i64 0, i32 0, i32 1
  %238 = bitcast i8** %237 to i64*
  %239 = load i64, i64* %238, align 8, !noalias !26
  %240 = bitcast i8** %236 to i64*
  store i64 %239, i64* %240, align 8, !noalias !26
  %241 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %12, i64 0, i32 1, i32 0, i32 0
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %241, align 8, !noalias !26
  %243 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %4, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %242, %"class.WTF::StringImpl"** %243, align 8, !noalias !26
  %244 = icmp eq %"class.WTF::StringImpl"* %242, null
  br i1 %244, label %262, label %245

245:                                              ; preds = %235
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = load atomic i32, i32* %246 monotonic, align 4
  %248 = and i32 %247, 2
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %262

250:                                              ; preds = %245
  %251 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 0
  %252 = load i32, i32* %251, align 4
  %253 = zext i32 %252 to i33
  %254 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %253, i33 1) #14
  %255 = extractvalue { i33, i1 } %254, 1
  %256 = extractvalue { i33, i1 } %254, 0
  %257 = icmp slt i33 %256, 0
  %258 = or i1 %255, %257
  br i1 %258, label %259, label %260, !prof !2

259:                                              ; preds = %250
  call void @llvm.trap() #14
  unreachable

260:                                              ; preds = %250
  %261 = trunc i33 %256 to i32
  store i32 %261, i32* %251, align 4
  br label %262

262:                                              ; preds = %235, %245, %260
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.184"* nonnull %11, %"class.WTF::StringAppend.185"* nonnull byval(%"class.WTF::StringAppend.185") align 8 %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.97, i64 0, i64 0)) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %210)
  %263 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.184"* nonnull %11)
  %264 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %263, %"class.WTF::StringImpl"** %264, align 8
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %10, i1 zeroext false, i32 0, i32 0)
  %265 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %264, align 8
  %266 = icmp eq %"class.WTF::StringImpl"* %265, null
  br i1 %266, label %280, label %267

267:                                              ; preds = %262
  %268 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %269 = load atomic i32, i32* %268 monotonic, align 4
  %270 = and i32 %269, 2
  %271 = icmp eq i32 %270, 0
  %272 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %265, i64 0, i32 0
  %273 = load i32, i32* %272, align 4
  br i1 %271, label %274, label %276

274:                                              ; preds = %267
  %275 = add i32 %273, -1
  store i32 %275, i32* %272, align 4
  br label %276

276:                                              ; preds = %274, %267
  %277 = phi i32 [ %275, %274 ], [ %273, %267 ]
  %278 = icmp eq i32 %277, 0
  br i1 %278, label %279, label %280

279:                                              ; preds = %276
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %265) #14
  br label %280

280:                                              ; preds = %262, %276, %279
  %281 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %282 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %281, align 8
  %283 = icmp eq %"class.WTF::StringImpl"* %282, null
  br i1 %283, label %297, label %284

284:                                              ; preds = %280
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %286 = load atomic i32, i32* %285 monotonic, align 4
  %287 = and i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 0
  %290 = load i32, i32* %289, align 4
  br i1 %288, label %291, label %293

291:                                              ; preds = %284
  %292 = add i32 %290, -1
  store i32 %292, i32* %289, align 4
  br label %293

293:                                              ; preds = %291, %284
  %294 = phi i32 [ %292, %291 ], [ %290, %284 ]
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %297

296:                                              ; preds = %293
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %282) #14
  br label %297

297:                                              ; preds = %296, %293, %280
  %298 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %299 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %298, align 8
  %300 = icmp eq %"class.WTF::StringImpl"* %299, null
  br i1 %300, label %314, label %301

301:                                              ; preds = %297
  %302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %303 = load atomic i32, i32* %302 monotonic, align 4
  %304 = and i32 %303, 2
  %305 = icmp eq i32 %304, 0
  %306 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %299, i64 0, i32 0
  %307 = load i32, i32* %306, align 4
  br i1 %305, label %308, label %310

308:                                              ; preds = %301
  %309 = add i32 %307, -1
  store i32 %309, i32* %306, align 4
  br label %310

310:                                              ; preds = %308, %301
  %311 = phi i32 [ %309, %308 ], [ %307, %301 ]
  %312 = icmp eq i32 %311, 0
  br i1 %312, label %313, label %314

313:                                              ; preds = %310
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %299) #14
  br label %314

314:                                              ; preds = %297, %310, %313
  %315 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %241, align 8
  %316 = icmp eq %"class.WTF::StringImpl"* %315, null
  br i1 %316, label %330, label %317

317:                                              ; preds = %314
  %318 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %319 = load atomic i32, i32* %318 monotonic, align 4
  %320 = and i32 %319, 2
  %321 = icmp eq i32 %320, 0
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %315, i64 0, i32 0
  %323 = load i32, i32* %322, align 4
  br i1 %321, label %324, label %326

324:                                              ; preds = %317
  %325 = add i32 %323, -1
  store i32 %325, i32* %322, align 4
  br label %326

326:                                              ; preds = %324, %317
  %327 = phi i32 [ %325, %324 ], [ %323, %317 ]
  %328 = icmp eq i32 %327, 0
  br i1 %328, label %329, label %330

329:                                              ; preds = %326
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %315) #14
  br label %330

330:                                              ; preds = %329, %326, %314
  %331 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %214, align 8
  %332 = icmp eq %"class.WTF::StringImpl"* %331, null
  br i1 %332, label %346, label %333

333:                                              ; preds = %330
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %335 = load atomic i32, i32* %334 monotonic, align 4
  %336 = and i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 0
  %339 = load i32, i32* %338, align 4
  br i1 %337, label %340, label %342

340:                                              ; preds = %333
  %341 = add i32 %339, -1
  store i32 %341, i32* %338, align 4
  br label %342

342:                                              ; preds = %340, %333
  %343 = phi i32 [ %341, %340 ], [ %339, %333 ]
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %346

345:                                              ; preds = %342
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %331) #14
  br label %346

346:                                              ; preds = %330, %342, %345
  %347 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  %348 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %347, align 8
  %349 = icmp eq %"class.WTF::StringImpl"* %348, null
  br i1 %349, label %363, label %350

350:                                              ; preds = %346
  %351 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %352 = load atomic i32, i32* %351 monotonic, align 4
  %353 = and i32 %352, 2
  %354 = icmp eq i32 %353, 0
  %355 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %348, i64 0, i32 0
  %356 = load i32, i32* %355, align 4
  br i1 %354, label %357, label %359

357:                                              ; preds = %350
  %358 = add i32 %356, -1
  store i32 %358, i32* %355, align 4
  br label %359

359:                                              ; preds = %357, %350
  %360 = phi i32 [ %358, %357 ], [ %356, %350 ]
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %362, label %363

362:                                              ; preds = %359
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %348) #14
  br label %363

363:                                              ; preds = %346, %359, %362
  br i1 %111, label %389, label %364

364:                                              ; preds = %363
  %365 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %366 = load atomic i32, i32* %365 monotonic, align 4
  %367 = and i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %110, i64 0, i32 0
  %370 = load i32, i32* %369, align 4
  br i1 %368, label %371, label %373

371:                                              ; preds = %364
  %372 = add i32 %370, -1
  store i32 %372, i32* %369, align 4
  br label %373

373:                                              ; preds = %371, %364
  %374 = phi i32 [ %372, %371 ], [ %370, %364 ]
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %376, label %378

376:                                              ; preds = %373
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #14
  %377 = load i32, i32* %369, align 4
  br label %378

378:                                              ; preds = %373, %376
  %379 = phi i32 [ %374, %373 ], [ %377, %376 ]
  %380 = load atomic i32, i32* %365 monotonic, align 4
  %381 = and i32 %380, 2
  %382 = icmp eq i32 %381, 0
  br i1 %382, label %383, label %385

383:                                              ; preds = %378
  %384 = add i32 %379, -1
  store i32 %384, i32* %369, align 4
  br label %385

385:                                              ; preds = %383, %378
  %386 = phi i32 [ %384, %383 ], [ %379, %378 ]
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %388, label %389

388:                                              ; preds = %385
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %110) #14
  br label %389

389:                                              ; preds = %363, %385, %388
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %103) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %102) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #14
  br label %446

390:                                              ; preds = %97
  %391 = call %"class.blink::JSONValue"* @_ZNK5blink9JSONArray2atEj(%"class.blink::JSONArray"* nonnull %48, i32 %98) #14
  %392 = icmp eq %"class.blink::JSONValue"* %391, null
  br i1 %392, label %397, label %393

393:                                              ; preds = %390
  %394 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %391, i64 0, i32 1
  %395 = load i32, i32* %394, align 8
  %396 = icmp eq i32 %395, 5
  br i1 %396, label %414, label %397

397:                                              ; preds = %393, %390
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.98, i64 0, i64 0), i64 49) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %14, i1 zeroext false, i32 0, i32 0)
  %398 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %77, align 8
  %399 = icmp eq %"class.WTF::StringImpl"* %398, null
  br i1 %399, label %413, label %400

400:                                              ; preds = %397
  %401 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %398, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %402 = load atomic i32, i32* %401 monotonic, align 4
  %403 = and i32 %402, 2
  %404 = icmp eq i32 %403, 0
  %405 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %398, i64 0, i32 0
  %406 = load i32, i32* %405, align 4
  br i1 %404, label %407, label %409

407:                                              ; preds = %400
  %408 = add i32 %406, -1
  store i32 %408, i32* %405, align 4
  br label %409

409:                                              ; preds = %407, %400
  %410 = phi i32 [ %408, %407 ], [ %406, %400 ]
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %412, label %413

412:                                              ; preds = %409
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %398) #14
  br label %413

413:                                              ; preds = %397, %409, %412
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #14
  br label %442

414:                                              ; preds = %393
  %415 = bitcast %"class.blink::JSONValue"* %391 to %"class.blink::JSONObject"*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %72) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 16, i1 false)
  call void @_ZN5blink14ManifestParser15ParseUrlHandlerEPKNS_10JSONObjectE(%"class.absl::optional.226"* nonnull sret %15, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* nonnull %415)
  %416 = load i8, i8* %72, align 8, !range !16
  %417 = icmp eq i8 %416, 0
  br i1 %417, label %441, label %418

418:                                              ; preds = %414
  %419 = load i32, i32* %18, align 4
  %420 = load i32, i32* %17, align 8
  %421 = icmp eq i32 %419, %420
  br i1 %421, label %431, label %422, !prof !2

422:                                              ; preds = %418
  %423 = load %"class.mojo::StructPtr.99"*, %"class.mojo::StructPtr.99"** %16, align 8
  %424 = zext i32 %419 to i64
  %425 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %423, i64 %424
  %426 = bitcast %"class.mojo::StructPtr.99"* %425 to i64*
  %427 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %425, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestUrlHandler"* null, %"class.blink::mojom::blink::ManifestUrlHandler"** %427, align 8
  %428 = load i64, i64* %74, align 8
  store i64 %428, i64* %426, align 8
  store i64 0, i64* %74, align 8
  %429 = load i32, i32* %18, align 4
  %430 = add i32 %429, 1
  store i32 %430, i32* %18, align 4
  br label %432

431:                                              ; preds = %418
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink18ManifestUrlHandlerEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.96"* %0, %"class.mojo::StructPtr.99"* dereferenceable(8) %73) #14
  br label %432

432:                                              ; preds = %431, %422
  %433 = load i8, i8* %72, align 8
  %434 = icmp eq i8 %433, 0
  br i1 %434, label %441, label %435

435:                                              ; preds = %432
  %436 = load %"class.blink::mojom::blink::ManifestUrlHandler"*, %"class.blink::mojom::blink::ManifestUrlHandler"** %75, align 8
  store %"class.blink::mojom::blink::ManifestUrlHandler"* null, %"class.blink::mojom::blink::ManifestUrlHandler"** %75, align 8
  %437 = icmp eq %"class.blink::mojom::blink::ManifestUrlHandler"* %436, null
  br i1 %437, label %440, label %438

438:                                              ; preds = %435
  call void @_ZN5blink5mojom5blink18ManifestUrlHandlerD1Ev(%"class.blink::mojom::blink::ManifestUrlHandler"* nonnull %436) #14
  %439 = bitcast %"class.blink::mojom::blink::ManifestUrlHandler"* %436 to i8*
  call void @_ZdlPv(i8* %439) #15
  br label %440

440:                                              ; preds = %438, %435
  store i8 0, i8* %72, align 8
  br label %441

441:                                              ; preds = %414, %432, %440
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %72) #14
  br label %442

442:                                              ; preds = %441, %413
  %443 = add nuw nsw i32 %98, 1
  %444 = load i32, i32* %68, align 4
  %445 = icmp ult i32 %443, %444
  br i1 %445, label %97, label %446

446:                                              ; preds = %442, %67, %21, %45, %389, %96
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser15ParseNoteTakingEPKNS_10JSONObjectE(%"class.mojo::StructPtr.109"* noalias nocapture sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.blink::KURL", align 8
  %8 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features17kWebAppNoteTakingE) #14
  br i1 %8, label %9, label %77

9:                                                ; preds = %3
  %10 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.107, i64 0, i64 0), i64 11) #14
  %11 = call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #14
  %12 = icmp eq %"class.blink::JSONValue"* %11, null
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #14
  br label %29

29:                                               ; preds = %9, %25, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #14
  br i1 %12, label %77, label %30

30:                                               ; preds = %29
  %31 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.107, i64 0, i64 0), i64 11) #14
  %32 = call %"class.blink::JSONObject"* @_ZNK5blink10JSONObject13GetJSONObjectERKN3WTF6StringE(%"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %5) #14
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %49, label %36

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #14
  br label %49

49:                                               ; preds = %30, %45, %48
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #14
  %50 = icmp eq %"class.blink::JSONObject"* %32, null
  br i1 %50, label %51, label %70

51:                                               ; preds = %49
  %52 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.108, i64 0, i64 0), i64 53) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %6, i1 zeroext false, i32 0, i32 0)
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #14
  br label %69

69:                                               ; preds = %51, %65, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #14
  br label %77

70:                                               ; preds = %49
  %71 = call i8* @_Znwm(i64 112) #15, !noalias !29
  %72 = bitcast i8* %71 to %"class.blink::mojom::blink::ManifestNoteTaking"*
  call void @_ZN5blink5mojom5blink18ManifestNoteTakingC1Ev(%"class.blink::mojom::blink::ManifestNoteTaking"* nonnull %72) #14, !noalias !29
  %73 = ptrtoint i8* %71 to i64
  %74 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %74) #14
  call void @_ZN5blink14ManifestParser25ParseNoteTakingNewNoteUrlEPKNS_10JSONObjectE(%"class.blink::KURL"* nonnull sret %7, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* nonnull %32)
  %75 = bitcast i8* %71 to %"class.blink::KURL"*
  %76 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* nonnull %75, %"class.blink::KURL"* nonnull dereferenceable(112) %7) #14
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %74) #14
  br label %77

77:                                               ; preds = %29, %3, %69, %70
  %78 = phi i64 [ 0, %69 ], [ %73, %70 ], [ 0, %3 ], [ 0, %29 ]
  %79 = bitcast %"class.mojo::StructPtr.109"* %0 to i64*
  store i64 %78, i64* %79, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser24ParseRelatedApplicationsEPKNS_10JSONObjectE(%"class.WTF::Vector.116"* noalias sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.mojo::StructPtr.119", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.absl::optional.123", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 2
  %14 = bitcast %"class.WTF::Vector.116"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #14
  %15 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.111, i64 0, i64 0), i64 20) #14
  %16 = call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #14
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #14
  br label %33

33:                                               ; preds = %3, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #14
  %34 = icmp eq %"class.blink::JSONValue"* %16, null
  br i1 %34, label %251, label %35

35:                                               ; preds = %33
  %36 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.111, i64 0, i64 0), i64 20) #14
  %37 = call %"class.blink::JSONArray"* @_ZNK5blink10JSONObject8GetArrayERKN3WTF6StringE(%"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %5) #14
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #14
  br label %54

54:                                               ; preds = %35, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #14
  %55 = icmp eq %"class.blink::JSONArray"* %37, null
  br i1 %55, label %70, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %37, i64 0, i32 1, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %251, label %60

60:                                               ; preds = %56
  %61 = bitcast %"class.mojo::StructPtr.119"* %7 to i8*
  %62 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.mojo::StructPtr.119"* %7 to i64*
  %64 = getelementptr inbounds %"class.absl::optional.123", %"class.absl::optional.123"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = getelementptr inbounds %"class.absl::optional.123", %"class.absl::optional.123"* %9, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %66 = bitcast %"class.WTF::String"* %10 to i8*
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %68 = bitcast %"class.WTF::String"* %8 to i8*
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  br label %89

70:                                               ; preds = %54
  %71 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.112, i64 0, i64 0), i64 61) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %6, i1 zeroext false, i32 0, i32 0)
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #14
  br label %88

88:                                               ; preds = %70, %84, %87
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #14
  br label %251

89:                                               ; preds = %60, %247
  %90 = phi i32 [ 0, %60 ], [ %248, %247 ]
  %91 = call %"class.blink::JSONValue"* @_ZNK5blink9JSONArray2atEj(%"class.blink::JSONArray"* nonnull %37, i32 %90) #14
  %92 = icmp eq %"class.blink::JSONValue"* %91, null
  br i1 %92, label %247, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %91, i64 0, i32 1
  %95 = load i32, i32* %94, align 8
  %96 = icmp eq i32 %95, 5
  %97 = bitcast %"class.blink::JSONValue"* %91 to %"class.blink::JSONObject"*
  br i1 %96, label %98, label %247

98:                                               ; preds = %93
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #14
  %99 = call i8* @_Znwm(i64 136) #15, !noalias !32
  %100 = bitcast i8* %99 to %"class.blink::mojom::blink::ManifestRelatedApplication"*
  call void @_ZN5blink5mojom5blink26ManifestRelatedApplicationC1Ev(%"class.blink::mojom::blink::ManifestRelatedApplication"* nonnull %100) #14, !noalias !32
  %101 = ptrtoint i8* %99 to i64
  store i64 %101, i64* %63, align 8, !alias.scope !32
  %102 = call %"class.WTF::StringImpl"* @_ZN5blink14ManifestParser31ParseRelatedApplicationPlatformEPKNS_10JSONObjectE(%"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* nonnull %97)
  %103 = ptrtoint %"class.WTF::StringImpl"* %102 to i64
  %104 = load %"class.blink::mojom::blink::ManifestRelatedApplication"*, %"class.blink::mojom::blink::ManifestRelatedApplication"** %62, align 8
  %105 = bitcast %"class.blink::mojom::blink::ManifestRelatedApplication"* %104 to i64*
  %106 = getelementptr inbounds %"class.blink::mojom::blink::ManifestRelatedApplication", %"class.blink::mojom::blink::ManifestRelatedApplication"* %104, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  store i64 %103, i64* %105, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %98
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #14
  br label %122

122:                                              ; preds = %121, %118, %98
  %123 = load %"class.blink::mojom::blink::ManifestRelatedApplication"*, %"class.blink::mojom::blink::ManifestRelatedApplication"** %62, align 8
  %124 = getelementptr inbounds %"class.blink::mojom::blink::ManifestRelatedApplication", %"class.blink::mojom::blink::ManifestRelatedApplication"* %123, i64 0, i32 0, i32 0, i32 0
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %126, label %131, label %127

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %148

131:                                              ; preds = %122, %127
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.113, i64 0, i64 0), i64 60) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %8, i1 zeroext false, i32 0, i32 0)
  %132 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %133 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %133, label %147, label %134

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  %139 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %140 = load i32, i32* %139, align 4
  br i1 %138, label %141, label %143

141:                                              ; preds = %134
  %142 = add i32 %140, -1
  store i32 %142, i32* %139, align 4
  br label %143

143:                                              ; preds = %141, %134
  %144 = phi i32 [ %142, %141 ], [ %140, %134 ]
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %146, label %147

146:                                              ; preds = %143
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #14
  br label %147

147:                                              ; preds = %131, %143, %146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68) #14
  br label %241

148:                                              ; preds = %127
  %149 = call %"class.WTF::StringImpl"* @_ZN5blink14ManifestParser25ParseRelatedApplicationIdEPKNS_10JSONObjectE(%"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* nonnull %97)
  %150 = ptrtoint %"class.WTF::StringImpl"* %149 to i64
  %151 = load %"class.blink::mojom::blink::ManifestRelatedApplication"*, %"class.blink::mojom::blink::ManifestRelatedApplication"** %62, align 8
  %152 = getelementptr inbounds %"class.blink::mojom::blink::ManifestRelatedApplication", %"class.blink::mojom::blink::ManifestRelatedApplication"* %151, i64 0, i32 2
  %153 = bitcast %"class.WTF::String"* %152 to i64*
  %154 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %152, i64 0, i32 0, i32 0
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  store i64 %150, i64* %153, align 8
  %156 = icmp eq %"class.WTF::StringImpl"* %155, null
  br i1 %156, label %170, label %157

157:                                              ; preds = %148
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  br i1 %161, label %164, label %166

164:                                              ; preds = %157
  %165 = add i32 %163, -1
  store i32 %165, i32* %162, align 4
  br label %166

166:                                              ; preds = %164, %157
  %167 = phi i32 [ %165, %164 ], [ %163, %157 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %155) #14
  br label %170

170:                                              ; preds = %169, %166, %148
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %64) #14
  call void @_ZN5blink14ManifestParser26ParseRelatedApplicationURLEPKNS_10JSONObjectE(%"class.absl::optional.123"* nonnull sret %9, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* nonnull %97)
  %171 = load %"class.blink::mojom::blink::ManifestRelatedApplication"*, %"class.blink::mojom::blink::ManifestRelatedApplication"** %62, align 8
  %172 = load i8, i8* %64, align 8, !range !16
  %173 = icmp eq i8 %172, 0
  %174 = getelementptr inbounds %"class.blink::mojom::blink::ManifestRelatedApplication", %"class.blink::mojom::blink::ManifestRelatedApplication"* %171, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %175 = load i8, i8* %174, align 8, !range !16
  %176 = icmp eq i8 %175, 0
  br i1 %173, label %184, label %177

177:                                              ; preds = %170
  br i1 %176, label %181, label %178

178:                                              ; preds = %177
  %179 = getelementptr inbounds %"class.blink::mojom::blink::ManifestRelatedApplication", %"class.blink::mojom::blink::ManifestRelatedApplication"* %171, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %180 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %179, %"class.blink::KURL"* dereferenceable(112) %65) #14
  br label %187

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.blink::mojom::blink::ManifestRelatedApplication", %"class.blink::mojom::blink::ManifestRelatedApplication"* %171, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %183 = bitcast i8* %182 to %"class.blink::KURL"*
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %183, %"class.blink::KURL"* dereferenceable(112) %65) #14
  store i8 1, i8* %174, align 8
  br label %187

184:                                              ; preds = %170
  br i1 %176, label %187, label %185

185:                                              ; preds = %184
  %186 = getelementptr inbounds %"class.blink::mojom::blink::ManifestRelatedApplication", %"class.blink::mojom::blink::ManifestRelatedApplication"* %171, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %186) #14
  store i8 0, i8* %174, align 8
  br label %187

187:                                              ; preds = %178, %181, %184, %185
  %188 = load i8, i8* %64, align 8, !range !16
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %191, label %190

190:                                              ; preds = %187
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %65) #14
  store i8 0, i8* %64, align 8
  br label %191

191:                                              ; preds = %187, %190
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %64) #14
  %192 = load %"class.blink::mojom::blink::ManifestRelatedApplication"*, %"class.blink::mojom::blink::ManifestRelatedApplication"** %62, align 8
  %193 = getelementptr inbounds %"class.blink::mojom::blink::ManifestRelatedApplication", %"class.blink::mojom::blink::ManifestRelatedApplication"* %192, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %194 = load i8, i8* %193, align 8, !range !16
  %195 = icmp eq i8 %194, 0
  br i1 %195, label %201, label %196

196:                                              ; preds = %191
  %197 = getelementptr inbounds %"class.blink::mojom::blink::ManifestRelatedApplication", %"class.blink::mojom::blink::ManifestRelatedApplication"* %192, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %198 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %197) #14
  br i1 %198, label %227, label %199

199:                                              ; preds = %196
  %200 = load %"class.blink::mojom::blink::ManifestRelatedApplication"*, %"class.blink::mojom::blink::ManifestRelatedApplication"** %62, align 8
  br label %201

201:                                              ; preds = %199, %191
  %202 = phi %"class.blink::mojom::blink::ManifestRelatedApplication"* [ %200, %199 ], [ %192, %191 ]
  %203 = getelementptr inbounds %"class.blink::mojom::blink::ManifestRelatedApplication", %"class.blink::mojom::blink::ManifestRelatedApplication"* %202, i64 0, i32 2, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %210, label %206

206:                                              ; preds = %201
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 1
  %208 = load i32, i32* %207, align 4
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %227

210:                                              ; preds = %201, %206
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.114, i64 0, i64 0), i64 62) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %10, i1 zeroext false, i32 0, i32 0)
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %226, label %213

213:                                              ; preds = %210
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load atomic i32, i32* %214 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %211, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  br i1 %217, label %220, label %222

220:                                              ; preds = %213
  %221 = add i32 %219, -1
  store i32 %221, i32* %218, align 4
  br label %222

222:                                              ; preds = %220, %213
  %223 = phi i32 [ %221, %220 ], [ %219, %213 ]
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %226

225:                                              ; preds = %222
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %211) #14
  br label %226

226:                                              ; preds = %210, %222, %225
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #14
  br label %241

227:                                              ; preds = %206, %196
  %228 = load i32, i32* %13, align 4
  %229 = load i32, i32* %12, align 8
  %230 = icmp eq i32 %228, %229
  br i1 %230, label %240, label %231, !prof !2

231:                                              ; preds = %227
  %232 = load %"class.mojo::StructPtr.119"*, %"class.mojo::StructPtr.119"** %11, align 8
  %233 = zext i32 %228 to i64
  %234 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %232, i64 %233
  %235 = bitcast %"class.mojo::StructPtr.119"* %234 to i64*
  %236 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %234, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %236, align 8
  %237 = load i64, i64* %63, align 8
  store i64 %237, i64* %235, align 8
  %238 = load i32, i32* %13, align 4
  %239 = add i32 %238, 1
  store i32 %239, i32* %13, align 4
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %62, align 8
  br label %246

240:                                              ; preds = %227
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink26ManifestRelatedApplicationEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.116"* %0, %"class.mojo::StructPtr.119"* nonnull dereferenceable(8) %7) #14
  br label %241

241:                                              ; preds = %240, %226, %147
  %242 = load %"class.blink::mojom::blink::ManifestRelatedApplication"*, %"class.blink::mojom::blink::ManifestRelatedApplication"** %62, align 8
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %62, align 8
  %243 = icmp eq %"class.blink::mojom::blink::ManifestRelatedApplication"* %242, null
  br i1 %243, label %246, label %244

244:                                              ; preds = %241
  %245 = bitcast %"class.blink::mojom::blink::ManifestRelatedApplication"* %242 to i8*
  call void @_ZN5blink5mojom5blink26ManifestRelatedApplicationD1Ev(%"class.blink::mojom::blink::ManifestRelatedApplication"* nonnull %242) #14
  call void @_ZdlPv(i8* %245) #15
  br label %246

246:                                              ; preds = %231, %241, %244
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #14
  br label %247

247:                                              ; preds = %93, %89, %246
  %248 = add nuw i32 %90, 1
  %249 = load i32, i32* %57, align 4
  %250 = icmp ult i32 %248, %249
  br i1 %250, label %89, label %251

251:                                              ; preds = %247, %56, %33, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14ManifestParser30ParsePreferRelatedApplicationsEPKNS_10JSONObjectE(%"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.115, i64 0, i64 0), i64 27) #14
  %5 = call zeroext i1 @_ZN5blink14ManifestParser12ParseBooleanEPKNS_10JSONObjectERKN3WTF6StringEb(%"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %3, i1 zeroext false)
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #14
  br label %22

22:                                               ; preds = %2, %18, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #14
  ret i1 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink14ManifestParser15ParseThemeColorEPKNS_10JSONObjectE(%"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.116, i64 0, i64 0), i64 11) #14
  %5 = call i64 @_ZN5blink14ManifestParser10ParseColorEPKNS_10JSONObjectERKN3WTF6StringE(%"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %3)
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #14
  br label %22

22:                                               ; preds = %2, %18, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #14
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink14ManifestParser20ParseBackgroundColorEPKNS_10JSONObjectE(%"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.117, i64 0, i64 0), i64 16) #14
  %5 = call i64 @_ZN5blink14ManifestParser10ParseColorEPKNS_10JSONObjectERKN3WTF6StringE(%"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %3)
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i32, i32* %10 monotonic, align 4
  %12 = and i32 %11, 2
  %13 = icmp eq i32 %12, 0
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  br i1 %13, label %16, label %18

16:                                               ; preds = %9
  %17 = add i32 %15, -1
  store i32 %17, i32* %14, align 4
  br label %18

18:                                               ; preds = %16, %9
  %19 = phi i32 [ %17, %16 ], [ %15, %9 ]
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %18
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #14
  br label %22

22:                                               ; preds = %2, %18, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #14
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink14ManifestParser16ParseGCMSenderIDEPKNS_10JSONObjectE(%"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional.179", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 16, i1 false)
  %6 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.118, i64 0, i64 0), i64 13) #14
  call void @_ZN5blink14ManifestParser11ParseStringEPKNS_10JSONObjectERKN3WTF6StringENS0_8TrimTypeE(%"class.absl::optional.179"* nonnull sret %3, %"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 0)
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #14
  br label %23

23:                                               ; preds = %2, %19, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %24 = load i8, i8* %5, align 8, !range !16
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %65, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #14
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  call void @llvm.trap() #14
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %26
  %48 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #14
  br label %64

64:                                               ; preds = %63, %60, %47
  store i8 0, i8* %5, align 8
  br label %65

65:                                               ; preds = %23, %64
  %66 = phi %"class.WTF::StringImpl"* [ %28, %64 ], [ null, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #14
  ret %"class.WTF::StringImpl"* %66
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser14ParseShortcutsEPKNS_10JSONObjectE(%"class.WTF::Vector.27"* noalias sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.mojo::StructPtr.30", align 8
  %9 = alloca %"class.blink::KURL", align 8
  %10 = alloca %"class.WTF::Vector.5", align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 2
  %14 = bitcast %"class.WTF::Vector.27"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #14
  %15 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i64 0, i64 0), i64 9) #14
  %16 = call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %5) #14
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %3
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #14
  br label %33

33:                                               ; preds = %3, %29, %32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #14
  %34 = icmp eq %"class.blink::JSONValue"* %16, null
  br i1 %34, label %261, label %35

35:                                               ; preds = %33
  %36 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i64 0, i64 0), i64 9) #14
  %37 = call %"class.blink::JSONArray"* @_ZNK5blink10JSONObject8GetArrayERKN3WTF6StringE(%"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %6) #14
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #14
  br label %54

54:                                               ; preds = %35, %50, %53
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #14
  %55 = icmp eq %"class.blink::JSONArray"* %37, null
  br i1 %55, label %74, label %56

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %37, i64 0, i32 1, i32 0, i32 0, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %261, label %60

60:                                               ; preds = %56
  %61 = bitcast %"class.mojo::StructPtr.30"* %8 to i8*
  %62 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.mojo::StructPtr.30"* %8 to i64*
  %64 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %9, i64 0, i32 0
  %65 = bitcast %"class.WTF::Vector.5"* %10 to i8*
  %66 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %10, i64 0, i32 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %10, i64 0, i32 0, i32 0, i32 1
  %68 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %10, i64 0, i32 0, i32 0, i32 2
  %69 = bitcast %"class.WTF::String"* %4 to i8*
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %71 = bitcast %"class.WTF::Vector.5"* %10 to i64*
  %72 = bitcast %"class.WTF::Vector.5"* %10 to i8**
  %73 = bitcast %"class.WTF::Vector.5"* %10 to i8*
  br label %93

74:                                               ; preds = %54
  %75 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.47, i64 0, i64 0), i64 50) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %7, i1 zeroext false, i32 0, i32 0)
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #14
  br label %92

92:                                               ; preds = %74, %88, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75) #14
  br label %261

93:                                               ; preds = %60, %257
  %94 = phi i32 [ 0, %60 ], [ %258, %257 ]
  %95 = call %"class.blink::JSONValue"* @_ZNK5blink9JSONArray2atEj(%"class.blink::JSONArray"* nonnull %37, i32 %94) #14
  %96 = icmp eq %"class.blink::JSONValue"* %95, null
  br i1 %96, label %257, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %95, i64 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = icmp eq i32 %99, 5
  %101 = bitcast %"class.blink::JSONValue"* %95 to %"class.blink::JSONObject"*
  br i1 %100, label %102, label %257

102:                                              ; preds = %97
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #14
  %103 = call i8* @_Znwm(i64 152) #15, !noalias !35
  %104 = bitcast i8* %103 to %"class.blink::mojom::blink::ManifestShortcutItem"*
  call void @_ZN5blink5mojom5blink20ManifestShortcutItemC1Ev(%"class.blink::mojom::blink::ManifestShortcutItem"* nonnull %104) #14, !noalias !35
  %105 = ptrtoint i8* %103 to i64
  store i64 %105, i64* %63, align 8, !alias.scope !35
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %64) #14
  call void @_ZN5blink14ManifestParser16ParseShortcutUrlEPKNS_10JSONObjectE(%"class.blink::KURL"* nonnull sret %9, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* nonnull %101)
  %106 = load %"class.blink::mojom::blink::ManifestShortcutItem"*, %"class.blink::mojom::blink::ManifestShortcutItem"** %62, align 8
  %107 = getelementptr inbounds %"class.blink::mojom::blink::ManifestShortcutItem", %"class.blink::mojom::blink::ManifestShortcutItem"* %106, i64 0, i32 3
  %108 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %107, %"class.blink::KURL"* nonnull dereferenceable(112) %9) #14
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %64) #14
  %109 = load %"class.blink::mojom::blink::ManifestShortcutItem"*, %"class.blink::mojom::blink::ManifestShortcutItem"** %62, align 8
  %110 = getelementptr inbounds %"class.blink::mojom::blink::ManifestShortcutItem", %"class.blink::mojom::blink::ManifestShortcutItem"* %109, i64 0, i32 3
  %111 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %110) #14
  br i1 %111, label %112, label %251

112:                                              ; preds = %102
  %113 = call %"class.WTF::StringImpl"* @_ZN5blink14ManifestParser17ParseShortcutNameEPKNS_10JSONObjectE(%"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* nonnull %101)
  %114 = ptrtoint %"class.WTF::StringImpl"* %113 to i64
  %115 = load %"class.blink::mojom::blink::ManifestShortcutItem"*, %"class.blink::mojom::blink::ManifestShortcutItem"** %62, align 8
  %116 = bitcast %"class.blink::mojom::blink::ManifestShortcutItem"* %115 to i64*
  %117 = getelementptr inbounds %"class.blink::mojom::blink::ManifestShortcutItem", %"class.blink::mojom::blink::ManifestShortcutItem"* %115, i64 0, i32 0, i32 0, i32 0
  %118 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  store i64 %114, i64* %116, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %118, null
  br i1 %119, label %133, label %120

120:                                              ; preds = %112
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %118, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  br i1 %124, label %127, label %129

127:                                              ; preds = %120
  %128 = add i32 %126, -1
  store i32 %128, i32* %125, align 4
  br label %129

129:                                              ; preds = %127, %120
  %130 = phi i32 [ %128, %127 ], [ %126, %120 ]
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %132, label %133

132:                                              ; preds = %129
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %118) #14
  br label %133

133:                                              ; preds = %112, %129, %132
  %134 = load %"class.blink::mojom::blink::ManifestShortcutItem"*, %"class.blink::mojom::blink::ManifestShortcutItem"** %62, align 8
  %135 = getelementptr inbounds %"class.blink::mojom::blink::ManifestShortcutItem", %"class.blink::mojom::blink::ManifestShortcutItem"* %134, i64 0, i32 0, i32 0, i32 0
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %135, align 8
  %137 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %136, %"class.WTF::StringImpl"* null) #14
  br i1 %137, label %251, label %138

138:                                              ; preds = %133
  %139 = call %"class.WTF::StringImpl"* @_ZN5blink14ManifestParser22ParseShortcutShortNameEPKNS_10JSONObjectE(%"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* nonnull %101)
  %140 = ptrtoint %"class.WTF::StringImpl"* %139 to i64
  %141 = load %"class.blink::mojom::blink::ManifestShortcutItem"*, %"class.blink::mojom::blink::ManifestShortcutItem"** %62, align 8
  %142 = getelementptr inbounds %"class.blink::mojom::blink::ManifestShortcutItem", %"class.blink::mojom::blink::ManifestShortcutItem"* %141, i64 0, i32 1
  %143 = bitcast %"class.WTF::String"* %142 to i64*
  %144 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %142, i64 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  store i64 %140, i64* %143, align 8
  %146 = icmp eq %"class.WTF::StringImpl"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %138
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %149 = load atomic i32, i32* %148 monotonic, align 4
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 0
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %154, label %156

154:                                              ; preds = %147
  %155 = add i32 %153, -1
  store i32 %155, i32* %152, align 4
  br label %156

156:                                              ; preds = %154, %147
  %157 = phi i32 [ %155, %154 ], [ %153, %147 ]
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %159, label %160

159:                                              ; preds = %156
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %145) #14
  br label %160

160:                                              ; preds = %159, %156, %138
  %161 = call %"class.WTF::StringImpl"* @_ZN5blink14ManifestParser24ParseShortcutDescriptionEPKNS_10JSONObjectE(%"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* nonnull %101)
  %162 = ptrtoint %"class.WTF::StringImpl"* %161 to i64
  %163 = load %"class.blink::mojom::blink::ManifestShortcutItem"*, %"class.blink::mojom::blink::ManifestShortcutItem"** %62, align 8
  %164 = getelementptr inbounds %"class.blink::mojom::blink::ManifestShortcutItem", %"class.blink::mojom::blink::ManifestShortcutItem"* %163, i64 0, i32 2
  %165 = bitcast %"class.WTF::String"* %164 to i64*
  %166 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %164, i64 0, i32 0, i32 0
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  store i64 %162, i64* %165, align 8
  %168 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %168, label %182, label %169

169:                                              ; preds = %160
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %175 = load i32, i32* %174, align 4
  br i1 %173, label %176, label %178

176:                                              ; preds = %169
  %177 = add i32 %175, -1
  store i32 %177, i32* %174, align 4
  br label %178

178:                                              ; preds = %176, %169
  %179 = phi i32 [ %177, %176 ], [ %175, %169 ]
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %182

181:                                              ; preds = %178
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #14
  br label %182

182:                                              ; preds = %181, %178, %160
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %73, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #14, !noalias !38
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.40, i64 0, i64 0), i64 5) #14, !noalias !38
  call void @_ZN5blink14ManifestParser18ParseImageResourceERKN3WTF6StringEPKNS_10JSONObjectE(%"class.WTF::Vector.5"* nonnull sret %10, %"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::JSONObject"* nonnull %101) #14
  %183 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8, !noalias !38
  %184 = icmp eq %"class.WTF::StringImpl"* %183, null
  br i1 %184, label %198, label %185

185:                                              ; preds = %182
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load atomic i32, i32* %186 monotonic, align 4
  %188 = and i32 %187, 2
  %189 = icmp eq i32 %188, 0
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %183, i64 0, i32 0
  %191 = load i32, i32* %190, align 4
  br i1 %189, label %192, label %194

192:                                              ; preds = %185
  %193 = add i32 %191, -1
  store i32 %193, i32* %190, align 4
  br label %194

194:                                              ; preds = %192, %185
  %195 = phi i32 [ %193, %192 ], [ %191, %185 ]
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %198

197:                                              ; preds = %194
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %183) #14
  br label %198

198:                                              ; preds = %182, %194, %197
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #14, !noalias !38
  %199 = load i32, i32* %68, align 4
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %212, label %201

201:                                              ; preds = %198
  %202 = load %"class.blink::mojom::blink::ManifestShortcutItem"*, %"class.blink::mojom::blink::ManifestShortcutItem"** %62, align 8
  %203 = getelementptr inbounds %"class.blink::mojom::blink::ManifestShortcutItem", %"class.blink::mojom::blink::ManifestShortcutItem"* %202, i64 0, i32 4
  %204 = load i64, i64* %71, align 8
  %205 = bitcast %"class.WTF::Vector.5"* %203 to i64*
  %206 = load i64, i64* %205, align 8
  store atomic i64 %206, i64* %71 monotonic, align 8
  store atomic i64 %204, i64* %205 monotonic, align 8
  %207 = getelementptr inbounds %"class.blink::mojom::blink::ManifestShortcutItem", %"class.blink::mojom::blink::ManifestShortcutItem"* %202, i64 0, i32 4, i32 0, i32 0, i32 1
  %208 = load i32, i32* %207, align 4
  %209 = load i32, i32* %67, align 8
  store i32 %209, i32* %207, align 4
  store i32 %208, i32* %67, align 8
  %210 = getelementptr inbounds %"class.blink::mojom::blink::ManifestShortcutItem", %"class.blink::mojom::blink::ManifestShortcutItem"* %202, i64 0, i32 4, i32 0, i32 0, i32 2
  %211 = load i32, i32* %210, align 4
  store i32 %199, i32* %210, align 4
  store i32 %211, i32* %68, align 4
  br label %212

212:                                              ; preds = %201, %198
  %213 = load i32, i32* %13, align 4
  %214 = load i32, i32* %12, align 8
  %215 = icmp eq i32 %213, %214
  br i1 %215, label %225, label %216, !prof !2

216:                                              ; preds = %212
  %217 = load %"class.mojo::StructPtr.30"*, %"class.mojo::StructPtr.30"** %11, align 8
  %218 = zext i32 %213 to i64
  %219 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %217, i64 %218
  %220 = bitcast %"class.mojo::StructPtr.30"* %219 to i64*
  %221 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %219, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestShortcutItem"* null, %"class.blink::mojom::blink::ManifestShortcutItem"** %221, align 8
  %222 = load i64, i64* %63, align 8
  store i64 %222, i64* %220, align 8
  store i64 0, i64* %63, align 8
  %223 = load i32, i32* %13, align 4
  %224 = add i32 %223, 1
  store i32 %224, i32* %13, align 4
  br label %226

225:                                              ; preds = %212
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink20ManifestShortcutItemEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.27"* %0, %"class.mojo::StructPtr.30"* nonnull dereferenceable(8) %8) #14
  br label %226

226:                                              ; preds = %216, %225
  %227 = load %"class.mojo::StructPtr.8"*, %"class.mojo::StructPtr.8"** %66, align 8
  %228 = icmp eq %"class.mojo::StructPtr.8"* %227, null
  br i1 %228, label %250, label %229, !prof !3

229:                                              ; preds = %226
  %230 = bitcast %"class.mojo::StructPtr.8"* %227 to i8*
  %231 = load i32, i32* %68, align 4
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %248, label %233, !prof !2

233:                                              ; preds = %229
  %234 = zext i32 %231 to i64
  %235 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %227, i64 %234
  br label %236

236:                                              ; preds = %243, %233
  %237 = phi %"class.mojo::StructPtr.8"* [ %244, %243 ], [ %227, %233 ]
  %238 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %237, i64 0, i32 0, i32 0, i32 0, i32 0
  %239 = load %"class.blink::mojom::blink::ManifestImageResource"*, %"class.blink::mojom::blink::ManifestImageResource"** %238, align 8
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %238, align 8
  %240 = icmp eq %"class.blink::mojom::blink::ManifestImageResource"* %239, null
  br i1 %240, label %243, label %241

241:                                              ; preds = %236
  call void @_ZN5blink5mojom5blink21ManifestImageResourceD1Ev(%"class.blink::mojom::blink::ManifestImageResource"* nonnull %239) #14
  %242 = getelementptr inbounds %"class.blink::mojom::blink::ManifestImageResource", %"class.blink::mojom::blink::ManifestImageResource"* %239, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %242) #15
  br label %243

243:                                              ; preds = %241, %236
  %244 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %237, i64 1
  %245 = icmp eq %"class.mojo::StructPtr.8"* %244, %235
  br i1 %245, label %246, label %236

246:                                              ; preds = %243
  store i32 0, i32* %68, align 4
  %247 = load i8*, i8** %72, align 8
  br label %248

248:                                              ; preds = %246, %229
  %249 = phi i8* [ %247, %246 ], [ %230, %229 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %249) #14
  store %"class.mojo::StructPtr.8"* null, %"class.mojo::StructPtr.8"** %66, align 8
  br label %250

250:                                              ; preds = %226, %248
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #14
  br label %251

251:                                              ; preds = %133, %102, %250
  %252 = load %"class.blink::mojom::blink::ManifestShortcutItem"*, %"class.blink::mojom::blink::ManifestShortcutItem"** %62, align 8
  store %"class.blink::mojom::blink::ManifestShortcutItem"* null, %"class.blink::mojom::blink::ManifestShortcutItem"** %62, align 8
  %253 = icmp eq %"class.blink::mojom::blink::ManifestShortcutItem"* %252, null
  br i1 %253, label %256, label %254

254:                                              ; preds = %251
  call void @_ZN5blink5mojom5blink20ManifestShortcutItemD1Ev(%"class.blink::mojom::blink::ManifestShortcutItem"* nonnull %252) #14
  %255 = bitcast %"class.blink::mojom::blink::ManifestShortcutItem"* %252 to i8*
  call void @_ZdlPv(i8* %255) #15
  br label %256

256:                                              ; preds = %251, %254
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #14
  br label %257

257:                                              ; preds = %97, %93, %256
  %258 = add nuw i32 %94, 1
  %259 = load i32, i32* %57, align 4
  %260 = icmp ult i32 %258, %259
  br i1 %260, label %93, label %261

261:                                              ; preds = %257, %56, %33, %92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink14ManifestParser17ParseCaptureLinksEPKNS_10JSONObjectE(%"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend.177", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::StringAppend.177", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::StringAppend.177", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN5blink8features26kWebAppEnableLinkCapturingE) #14
  br i1 %16, label %21, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 3
  %19 = load %"class.blink::FeatureContext"*, %"class.blink::FeatureContext"** %18, align 8
  %20 = tail call zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase26WebAppLinkCapturingEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"* %19) #14
  br i1 %20, label %21, label %605

21:                                               ; preds = %17, %2
  %22 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #14
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %23, align 8
  %24 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.119, i64 0, i64 0), i64 13) #14
  %25 = call zeroext i1 @_ZNK5blink10JSONObject9GetStringERKN3WTF6StringEPS2_(%"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull %3) #14
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #14
  br label %42

42:                                               ; preds = %21, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #14
  br i1 %25, label %43, label %201

43:                                               ; preds = %42
  %44 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44) #14
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.WTF::String"* nonnull %3, i32 0) #14
  %45 = call i32 @_ZN5blink22CaptureLinksFromStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #14
  %46 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @_ZdlPv(i8* %52) #15
  br label %53

53:                                               ; preds = %43, %50
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44) #14
  %54 = icmp eq i32 %45, 0
  br i1 %54, label %55, label %587

55:                                               ; preds = %53
  %56 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #14
  %57 = bitcast %"class.WTF::StringAppend.177"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %57) #14
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %135, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %77

67:                                               ; preds = %60
  %68 = zext i32 %66 to i33
  %69 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #14
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !2

74:                                               ; preds = %67
  call void @llvm.trap() #14
  unreachable

75:                                               ; preds = %67
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %65, align 4
  br label %77

77:                                               ; preds = %75, %60
  %78 = phi i32 [ %76, %75 ], [ %66, %60 ]
  %79 = load atomic i32, i32* %61 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %92

82:                                               ; preds = %77
  %83 = zext i32 %78 to i33
  %84 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %83, i33 1) #14
  %85 = extractvalue { i33, i1 } %84, 1
  %86 = extractvalue { i33, i1 } %84, 0
  %87 = icmp slt i33 %86, 0
  %88 = or i1 %85, %87
  br i1 %88, label %89, label %90, !prof !2

89:                                               ; preds = %82
  call void @llvm.trap() #14
  unreachable

90:                                               ; preds = %82
  %91 = trunc i33 %86 to i32
  store i32 %91, i32* %65, align 4
  br label %92

92:                                               ; preds = %90, %77
  %93 = phi i32 [ %91, %90 ], [ %78, %77 ]
  %94 = load atomic i32, i32* %61 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %99

97:                                               ; preds = %92
  %98 = add i32 %93, -1
  store i32 %98, i32* %65, align 4
  br label %99

99:                                               ; preds = %97, %92
  %100 = phi i32 [ %98, %97 ], [ %93, %92 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #14
  br label %103

103:                                              ; preds = %99, %102
  %104 = load atomic i32, i32* %61 monotonic, align 4, !noalias !41
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = load i32, i32* %65, align 4
  br i1 %106, label %108, label %118

108:                                              ; preds = %103
  %109 = zext i32 %107 to i33
  %110 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %109, i33 1) #14
  %111 = extractvalue { i33, i1 } %110, 1
  %112 = extractvalue { i33, i1 } %110, 0
  %113 = icmp slt i33 %112, 0
  %114 = or i1 %111, %113
  br i1 %114, label %115, label %116, !prof !2

115:                                              ; preds = %108
  call void @llvm.trap() #14, !noalias !41
  unreachable

116:                                              ; preds = %108
  %117 = trunc i33 %112 to i32
  store i32 %117, i32* %65, align 4, !noalias !41
  br label %118

118:                                              ; preds = %103, %116
  %119 = phi i32 [ %117, %116 ], [ %107, %103 ]
  %120 = bitcast %"class.WTF::StringAppend.177"* %7 to i64*
  store i64 ptrtoint ([22 x i8]* @.str.120 to i64), i64* %120, align 8, !alias.scope !41
  %121 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %121, align 8, !alias.scope !41
  %122 = load atomic i32, i32* %61 monotonic, align 4, !noalias !41
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %139

125:                                              ; preds = %118
  %126 = zext i32 %119 to i33
  %127 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %126, i33 1) #14
  %128 = extractvalue { i33, i1 } %127, 1
  %129 = extractvalue { i33, i1 } %127, 0
  %130 = icmp slt i33 %129, 0
  %131 = or i1 %128, %130
  br i1 %131, label %132, label %133, !prof !2

132:                                              ; preds = %125
  call void @llvm.trap() #14, !noalias !41
  unreachable

133:                                              ; preds = %125
  %134 = trunc i33 %129 to i32
  store i32 %134, i32* %65, align 4, !noalias !41
  br label %139

135:                                              ; preds = %55
  %136 = bitcast %"class.WTF::StringAppend.177"* %7 to i64*
  store i64 ptrtoint ([22 x i8]* @.str.120 to i64), i64* %136, align 8, !alias.scope !41
  %137 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %137, align 8, !alias.scope !41
  %138 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.121, i64 0, i64 0), i8** %138, align 8, !alias.scope !41
  br label %151

139:                                              ; preds = %133, %118
  %140 = phi i32 [ %134, %133 ], [ %119, %118 ]
  %141 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.121, i64 0, i64 0), i8** %141, align 8, !alias.scope !41
  %142 = load atomic i32, i32* %61 monotonic, align 4, !noalias !41
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %147

145:                                              ; preds = %139
  %146 = add i32 %140, -1
  store i32 %146, i32* %65, align 4, !noalias !41
  br label %147

147:                                              ; preds = %145, %139
  %148 = phi i32 [ %146, %145 ], [ %140, %139 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #14, !noalias !41
  br label %151

151:                                              ; preds = %135, %147, %150
  %152 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.177"* nonnull %7)
  %153 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %152, %"class.WTF::StringImpl"** %153, align 8
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %6, i1 zeroext false, i32 0, i32 0)
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %154) #14
  br label %169

169:                                              ; preds = %151, %165, %168
  %170 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %170, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %171) #14
  br label %186

186:                                              ; preds = %169, %182, %185
  br i1 %59, label %200, label %187

187:                                              ; preds = %186
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load atomic i32, i32* %188 monotonic, align 4
  %190 = and i32 %189, 2
  %191 = icmp eq i32 %190, 0
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %193 = load i32, i32* %192, align 4
  br i1 %191, label %194, label %196

194:                                              ; preds = %187
  %195 = add i32 %193, -1
  store i32 %195, i32* %192, align 4
  br label %196

196:                                              ; preds = %194, %187
  %197 = phi i32 [ %195, %194 ], [ %193, %187 ]
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %200

199:                                              ; preds = %196
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #14
  br label %200

200:                                              ; preds = %186, %196, %199
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %57) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #14
  br label %587

201:                                              ; preds = %42
  %202 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.119, i64 0, i64 0), i64 13) #14
  %203 = call %"class.blink::JSONArray"* @_ZNK5blink10JSONObject8GetArrayERKN3WTF6StringE(%"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %8) #14
  %204 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %204, align 8
  %206 = icmp eq %"class.WTF::StringImpl"* %205, null
  br i1 %206, label %220, label %207

207:                                              ; preds = %201
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load atomic i32, i32* %208 monotonic, align 4
  %210 = and i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  br i1 %211, label %214, label %216

214:                                              ; preds = %207
  %215 = add i32 %213, -1
  store i32 %215, i32* %212, align 4
  br label %216

216:                                              ; preds = %214, %207
  %217 = phi i32 [ %215, %214 ], [ %213, %207 ]
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %216
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %205) #14
  br label %220

220:                                              ; preds = %201, %216, %219
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #14
  %221 = icmp eq %"class.blink::JSONArray"* %203, null
  br i1 %221, label %547, label %222

222:                                              ; preds = %220
  %223 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %203, i64 0, i32 1, i32 0, i32 0, i32 2
  %224 = load i32, i32* %223, align 4
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %587, label %226

226:                                              ; preds = %222
  %227 = bitcast %"class.WTF::String"* %9 to i8*
  %228 = bitcast %"class.WTF::StringAppend.177"* %10 to i8*
  %229 = bitcast %"class.WTF::StringAppend.177"* %10 to i64*
  %230 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %231 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %10, i64 0, i32 1
  %232 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %233 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %234 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %235 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %234, i64 0, i32 1, i32 0
  %236 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = bitcast %"class.WTF::String"* %12 to i8*
  %238 = bitcast %"class.WTF::StringAppend.177"* %13 to i8*
  %239 = bitcast %"class.WTF::StringAppend.177"* %13 to i64*
  %240 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  %241 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %13, i64 0, i32 1
  %242 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  br label %243

243:                                              ; preds = %226, %541
  %244 = phi i32 [ 0, %226 ], [ %544, %541 ]
  %245 = call %"class.blink::JSONValue"* @_ZNK5blink9JSONArray2atEj(%"class.blink::JSONArray"* nonnull %203, i32 %244) #14
  %246 = bitcast %"class.blink::JSONValue"* %245 to i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)***
  %247 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)**, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*** %246, align 8
  %248 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %247, i64 5
  %249 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %248, align 8
  %250 = call zeroext i1 %249(%"class.blink::JSONValue"* %245, %"class.WTF::String"* nonnull %3) #14
  br i1 %250, label %398, label %251

251:                                              ; preds = %243
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %227) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %228) #14
  %252 = call %"class.WTF::StringImpl"* @_ZNK5blink9JSONValue12ToJSONStringEv(%"class.blink::JSONValue"* %245) #14
  %253 = icmp eq %"class.WTF::StringImpl"* %252, null
  br i1 %253, label %327, label %254

254:                                              ; preds = %251
  %255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = load atomic i32, i32* %255 monotonic, align 4
  %257 = and i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 0
  %260 = load i32, i32* %259, align 4
  br i1 %258, label %261, label %271

261:                                              ; preds = %254
  %262 = zext i32 %260 to i33
  %263 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %262, i33 1) #14
  %264 = extractvalue { i33, i1 } %263, 1
  %265 = extractvalue { i33, i1 } %263, 0
  %266 = icmp slt i33 %265, 0
  %267 = or i1 %264, %266
  br i1 %267, label %268, label %269, !prof !2

268:                                              ; preds = %261
  call void @llvm.trap() #14
  unreachable

269:                                              ; preds = %261
  %270 = trunc i33 %265 to i32
  store i32 %270, i32* %259, align 4
  br label %271

271:                                              ; preds = %269, %254
  %272 = phi i32 [ %270, %269 ], [ %260, %254 ]
  %273 = load atomic i32, i32* %255 monotonic, align 4
  %274 = and i32 %273, 2
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %286

276:                                              ; preds = %271
  %277 = zext i32 %272 to i33
  %278 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %277, i33 1) #14
  %279 = extractvalue { i33, i1 } %278, 1
  %280 = extractvalue { i33, i1 } %278, 0
  %281 = icmp slt i33 %280, 0
  %282 = or i1 %279, %281
  br i1 %282, label %283, label %284, !prof !2

283:                                              ; preds = %276
  call void @llvm.trap() #14
  unreachable

284:                                              ; preds = %276
  %285 = trunc i33 %280 to i32
  store i32 %285, i32* %259, align 4
  br label %286

286:                                              ; preds = %284, %271
  %287 = phi i32 [ %285, %284 ], [ %272, %271 ]
  %288 = load atomic i32, i32* %255 monotonic, align 4
  %289 = and i32 %288, 2
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %293

291:                                              ; preds = %286
  %292 = add i32 %287, -1
  store i32 %292, i32* %259, align 4
  br label %293

293:                                              ; preds = %291, %286
  %294 = phi i32 [ %292, %291 ], [ %287, %286 ]
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %297

296:                                              ; preds = %293
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %252) #14
  br label %297

297:                                              ; preds = %293, %296
  %298 = load atomic i32, i32* %255 monotonic, align 4, !noalias !44
  %299 = and i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = load i32, i32* %259, align 4
  br i1 %300, label %302, label %312

302:                                              ; preds = %297
  %303 = zext i32 %301 to i33
  %304 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %303, i33 1) #14
  %305 = extractvalue { i33, i1 } %304, 1
  %306 = extractvalue { i33, i1 } %304, 0
  %307 = icmp slt i33 %306, 0
  %308 = or i1 %305, %307
  br i1 %308, label %309, label %310, !prof !2

309:                                              ; preds = %302
  call void @llvm.trap() #14, !noalias !44
  unreachable

310:                                              ; preds = %302
  %311 = trunc i33 %306 to i32
  store i32 %311, i32* %259, align 4, !noalias !44
  br label %312

312:                                              ; preds = %297, %310
  %313 = phi i32 [ %311, %310 ], [ %301, %297 ]
  store i64 ptrtoint ([22 x i8]* @.str.120 to i64), i64* %229, align 8, !alias.scope !44
  store %"class.WTF::StringImpl"* %252, %"class.WTF::StringImpl"** %230, align 8, !alias.scope !44
  %314 = load atomic i32, i32* %255 monotonic, align 4, !noalias !44
  %315 = and i32 %314, 2
  %316 = icmp eq i32 %315, 0
  br i1 %316, label %317, label %328

317:                                              ; preds = %312
  %318 = zext i32 %313 to i33
  %319 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %318, i33 1) #14
  %320 = extractvalue { i33, i1 } %319, 1
  %321 = extractvalue { i33, i1 } %319, 0
  %322 = icmp slt i33 %321, 0
  %323 = or i1 %320, %322
  br i1 %323, label %324, label %325, !prof !2

324:                                              ; preds = %317
  call void @llvm.trap() #14, !noalias !44
  unreachable

325:                                              ; preds = %317
  %326 = trunc i33 %321 to i32
  store i32 %326, i32* %259, align 4, !noalias !44
  br label %328

327:                                              ; preds = %251
  store i64 ptrtoint ([22 x i8]* @.str.120 to i64), i64* %229, align 8, !alias.scope !44
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %230, align 8, !alias.scope !44
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.122, i64 0, i64 0), i8** %231, align 8, !alias.scope !44
  br label %339

328:                                              ; preds = %325, %312
  %329 = phi i32 [ %326, %325 ], [ %313, %312 ]
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.122, i64 0, i64 0), i8** %231, align 8, !alias.scope !44
  %330 = load atomic i32, i32* %255 monotonic, align 4, !noalias !44
  %331 = and i32 %330, 2
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %335

333:                                              ; preds = %328
  %334 = add i32 %329, -1
  store i32 %334, i32* %259, align 4, !noalias !44
  br label %335

335:                                              ; preds = %333, %328
  %336 = phi i32 [ %334, %333 ], [ %329, %328 ]
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %338, label %339

338:                                              ; preds = %335
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %252) #14, !noalias !44
  br label %339

339:                                              ; preds = %327, %335, %338
  %340 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.177"* nonnull %10)
  store %"class.WTF::StringImpl"* %340, %"class.WTF::StringImpl"** %232, align 8
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %9, i1 zeroext false, i32 0, i32 0)
  %341 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %232, align 8
  %342 = icmp eq %"class.WTF::StringImpl"* %341, null
  br i1 %342, label %356, label %343

343:                                              ; preds = %339
  %344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %345 = load atomic i32, i32* %344 monotonic, align 4
  %346 = and i32 %345, 2
  %347 = icmp eq i32 %346, 0
  %348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %341, i64 0, i32 0
  %349 = load i32, i32* %348, align 4
  br i1 %347, label %350, label %352

350:                                              ; preds = %343
  %351 = add i32 %349, -1
  store i32 %351, i32* %348, align 4
  br label %352

352:                                              ; preds = %350, %343
  %353 = phi i32 [ %351, %350 ], [ %349, %343 ]
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %355, label %356

355:                                              ; preds = %352
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %341) #14
  br label %356

356:                                              ; preds = %339, %352, %355
  %357 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %230, align 8
  %358 = icmp eq %"class.WTF::StringImpl"* %357, null
  br i1 %358, label %372, label %359

359:                                              ; preds = %356
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %357, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %361 = load atomic i32, i32* %360 monotonic, align 4
  %362 = and i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %357, i64 0, i32 0
  %365 = load i32, i32* %364, align 4
  br i1 %363, label %366, label %368

366:                                              ; preds = %359
  %367 = add i32 %365, -1
  store i32 %367, i32* %364, align 4
  br label %368

368:                                              ; preds = %366, %359
  %369 = phi i32 [ %367, %366 ], [ %365, %359 ]
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %371, label %372

371:                                              ; preds = %368
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %357) #14
  br label %372

372:                                              ; preds = %356, %368, %371
  br i1 %253, label %541, label %373

373:                                              ; preds = %372
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %375 = load atomic i32, i32* %374 monotonic, align 4
  %376 = and i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 0
  %379 = load i32, i32* %378, align 4
  br i1 %377, label %380, label %382

380:                                              ; preds = %373
  %381 = add i32 %379, -1
  store i32 %381, i32* %378, align 4
  br label %382

382:                                              ; preds = %380, %373
  %383 = phi i32 [ %381, %380 ], [ %379, %373 ]
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %385, label %387

385:                                              ; preds = %382
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %252) #14
  %386 = load i32, i32* %378, align 4
  br label %387

387:                                              ; preds = %382, %385
  %388 = phi i32 [ %383, %382 ], [ %386, %385 ]
  %389 = load atomic i32, i32* %374 monotonic, align 4
  %390 = and i32 %389, 2
  %391 = icmp eq i32 %390, 0
  br i1 %391, label %392, label %394

392:                                              ; preds = %387
  %393 = add i32 %388, -1
  store i32 %393, i32* %378, align 4
  br label %394

394:                                              ; preds = %392, %387
  %395 = phi i32 [ %393, %392 ], [ %388, %387 ]
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %397, label %541

397:                                              ; preds = %394
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %252) #14
  br label %541

398:                                              ; preds = %243
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %233) #14
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %11, %"class.WTF::String"* nonnull %3, i32 0) #14
  %399 = call i32 @_ZN5blink22CaptureLinksFromStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* nonnull dereferenceable(24) %11) #14
  %400 = load i8, i8* %235, align 1
  %401 = icmp slt i8 %400, 0
  br i1 %401, label %402, label %404

402:                                              ; preds = %398
  %403 = load i8*, i8** %236, align 8
  call void @_ZdlPv(i8* %403) #15
  br label %404

404:                                              ; preds = %398, %402
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %233) #14
  %405 = icmp eq i32 %399, 0
  br i1 %405, label %406, label %587

406:                                              ; preds = %404
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %237) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %238) #14
  %407 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %408 = icmp eq %"class.WTF::StringImpl"* %407, null
  br i1 %408, label %482, label %409

409:                                              ; preds = %406
  %410 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %407, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %411 = load atomic i32, i32* %410 monotonic, align 4
  %412 = and i32 %411, 2
  %413 = icmp eq i32 %412, 0
  %414 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %407, i64 0, i32 0
  %415 = load i32, i32* %414, align 4
  br i1 %413, label %416, label %426

416:                                              ; preds = %409
  %417 = zext i32 %415 to i33
  %418 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %417, i33 1) #14
  %419 = extractvalue { i33, i1 } %418, 1
  %420 = extractvalue { i33, i1 } %418, 0
  %421 = icmp slt i33 %420, 0
  %422 = or i1 %419, %421
  br i1 %422, label %423, label %424, !prof !2

423:                                              ; preds = %416
  call void @llvm.trap() #14
  unreachable

424:                                              ; preds = %416
  %425 = trunc i33 %420 to i32
  store i32 %425, i32* %414, align 4
  br label %426

426:                                              ; preds = %424, %409
  %427 = phi i32 [ %425, %424 ], [ %415, %409 ]
  %428 = load atomic i32, i32* %410 monotonic, align 4
  %429 = and i32 %428, 2
  %430 = icmp eq i32 %429, 0
  br i1 %430, label %431, label %441

431:                                              ; preds = %426
  %432 = zext i32 %427 to i33
  %433 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %432, i33 1) #14
  %434 = extractvalue { i33, i1 } %433, 1
  %435 = extractvalue { i33, i1 } %433, 0
  %436 = icmp slt i33 %435, 0
  %437 = or i1 %434, %436
  br i1 %437, label %438, label %439, !prof !2

438:                                              ; preds = %431
  call void @llvm.trap() #14
  unreachable

439:                                              ; preds = %431
  %440 = trunc i33 %435 to i32
  store i32 %440, i32* %414, align 4
  br label %441

441:                                              ; preds = %439, %426
  %442 = phi i32 [ %440, %439 ], [ %427, %426 ]
  %443 = load atomic i32, i32* %410 monotonic, align 4
  %444 = and i32 %443, 2
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %446, label %448

446:                                              ; preds = %441
  %447 = add i32 %442, -1
  store i32 %447, i32* %414, align 4
  br label %448

448:                                              ; preds = %446, %441
  %449 = phi i32 [ %447, %446 ], [ %442, %441 ]
  %450 = icmp eq i32 %449, 0
  br i1 %450, label %451, label %452

451:                                              ; preds = %448
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %407) #14
  br label %452

452:                                              ; preds = %448, %451
  %453 = load atomic i32, i32* %410 monotonic, align 4, !noalias !47
  %454 = and i32 %453, 2
  %455 = icmp eq i32 %454, 0
  %456 = load i32, i32* %414, align 4
  br i1 %455, label %457, label %467

457:                                              ; preds = %452
  %458 = zext i32 %456 to i33
  %459 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %458, i33 1) #14
  %460 = extractvalue { i33, i1 } %459, 1
  %461 = extractvalue { i33, i1 } %459, 0
  %462 = icmp slt i33 %461, 0
  %463 = or i1 %460, %462
  br i1 %463, label %464, label %465, !prof !2

464:                                              ; preds = %457
  call void @llvm.trap() #14, !noalias !47
  unreachable

465:                                              ; preds = %457
  %466 = trunc i33 %461 to i32
  store i32 %466, i32* %414, align 4, !noalias !47
  br label %467

467:                                              ; preds = %452, %465
  %468 = phi i32 [ %466, %465 ], [ %456, %452 ]
  store i64 ptrtoint ([22 x i8]* @.str.120 to i64), i64* %239, align 8, !alias.scope !47
  store %"class.WTF::StringImpl"* %407, %"class.WTF::StringImpl"** %240, align 8, !alias.scope !47
  %469 = load atomic i32, i32* %410 monotonic, align 4, !noalias !47
  %470 = and i32 %469, 2
  %471 = icmp eq i32 %470, 0
  br i1 %471, label %472, label %483

472:                                              ; preds = %467
  %473 = zext i32 %468 to i33
  %474 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %473, i33 1) #14
  %475 = extractvalue { i33, i1 } %474, 1
  %476 = extractvalue { i33, i1 } %474, 0
  %477 = icmp slt i33 %476, 0
  %478 = or i1 %475, %477
  br i1 %478, label %479, label %480, !prof !2

479:                                              ; preds = %472
  call void @llvm.trap() #14, !noalias !47
  unreachable

480:                                              ; preds = %472
  %481 = trunc i33 %476 to i32
  store i32 %481, i32* %414, align 4, !noalias !47
  br label %483

482:                                              ; preds = %406
  store i64 ptrtoint ([22 x i8]* @.str.120 to i64), i64* %239, align 8, !alias.scope !47
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %240, align 8, !alias.scope !47
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.121, i64 0, i64 0), i8** %241, align 8, !alias.scope !47
  br label %494

483:                                              ; preds = %480, %467
  %484 = phi i32 [ %481, %480 ], [ %468, %467 ]
  store i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.121, i64 0, i64 0), i8** %241, align 8, !alias.scope !47
  %485 = load atomic i32, i32* %410 monotonic, align 4, !noalias !47
  %486 = and i32 %485, 2
  %487 = icmp eq i32 %486, 0
  br i1 %487, label %488, label %490

488:                                              ; preds = %483
  %489 = add i32 %484, -1
  store i32 %489, i32* %414, align 4, !noalias !47
  br label %490

490:                                              ; preds = %488, %483
  %491 = phi i32 [ %489, %488 ], [ %484, %483 ]
  %492 = icmp eq i32 %491, 0
  br i1 %492, label %493, label %494

493:                                              ; preds = %490
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %407) #14, !noalias !47
  br label %494

494:                                              ; preds = %482, %490, %493
  %495 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.177"* nonnull %13)
  store %"class.WTF::StringImpl"* %495, %"class.WTF::StringImpl"** %242, align 8
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %12, i1 zeroext false, i32 0, i32 0)
  %496 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %242, align 8
  %497 = icmp eq %"class.WTF::StringImpl"* %496, null
  br i1 %497, label %511, label %498

498:                                              ; preds = %494
  %499 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %500 = load atomic i32, i32* %499 monotonic, align 4
  %501 = and i32 %500, 2
  %502 = icmp eq i32 %501, 0
  %503 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %496, i64 0, i32 0
  %504 = load i32, i32* %503, align 4
  br i1 %502, label %505, label %507

505:                                              ; preds = %498
  %506 = add i32 %504, -1
  store i32 %506, i32* %503, align 4
  br label %507

507:                                              ; preds = %505, %498
  %508 = phi i32 [ %506, %505 ], [ %504, %498 ]
  %509 = icmp eq i32 %508, 0
  br i1 %509, label %510, label %511

510:                                              ; preds = %507
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %496) #14
  br label %511

511:                                              ; preds = %494, %507, %510
  %512 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %240, align 8
  %513 = icmp eq %"class.WTF::StringImpl"* %512, null
  br i1 %513, label %527, label %514

514:                                              ; preds = %511
  %515 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %512, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %516 = load atomic i32, i32* %515 monotonic, align 4
  %517 = and i32 %516, 2
  %518 = icmp eq i32 %517, 0
  %519 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %512, i64 0, i32 0
  %520 = load i32, i32* %519, align 4
  br i1 %518, label %521, label %523

521:                                              ; preds = %514
  %522 = add i32 %520, -1
  store i32 %522, i32* %519, align 4
  br label %523

523:                                              ; preds = %521, %514
  %524 = phi i32 [ %522, %521 ], [ %520, %514 ]
  %525 = icmp eq i32 %524, 0
  br i1 %525, label %526, label %527

526:                                              ; preds = %523
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %512) #14
  br label %527

527:                                              ; preds = %511, %523, %526
  br i1 %408, label %541, label %528

528:                                              ; preds = %527
  %529 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %407, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %530 = load atomic i32, i32* %529 monotonic, align 4
  %531 = and i32 %530, 2
  %532 = icmp eq i32 %531, 0
  %533 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %407, i64 0, i32 0
  %534 = load i32, i32* %533, align 4
  br i1 %532, label %535, label %537

535:                                              ; preds = %528
  %536 = add i32 %534, -1
  store i32 %536, i32* %533, align 4
  br label %537

537:                                              ; preds = %535, %528
  %538 = phi i32 [ %536, %535 ], [ %534, %528 ]
  %539 = icmp eq i32 %538, 0
  br i1 %539, label %540, label %541

540:                                              ; preds = %537
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %407) #14
  br label %541

541:                                              ; preds = %540, %537, %527, %397, %394, %372
  %542 = phi i8* [ %228, %372 ], [ %228, %394 ], [ %228, %397 ], [ %238, %527 ], [ %238, %537 ], [ %238, %540 ]
  %543 = phi i8* [ %227, %372 ], [ %227, %394 ], [ %227, %397 ], [ %237, %527 ], [ %237, %537 ], [ %237, %540 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %542) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %543) #14
  %544 = add nuw i32 %244, 1
  %545 = load i32, i32* %223, align 4
  %546 = icmp ult i32 %544, %545
  br i1 %546, label %243, label %587

547:                                              ; preds = %220
  %548 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %548) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.119, i64 0, i64 0), i64 13) #14
  %549 = call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %14) #14
  %550 = icmp eq %"class.blink::JSONValue"* %549, null
  %551 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %552 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %551, align 8
  %553 = icmp eq %"class.WTF::StringImpl"* %552, null
  br i1 %553, label %567, label %554

554:                                              ; preds = %547
  %555 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %552, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %556 = load atomic i32, i32* %555 monotonic, align 4
  %557 = and i32 %556, 2
  %558 = icmp eq i32 %557, 0
  %559 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %552, i64 0, i32 0
  %560 = load i32, i32* %559, align 4
  br i1 %558, label %561, label %563

561:                                              ; preds = %554
  %562 = add i32 %560, -1
  store i32 %562, i32* %559, align 4
  br label %563

563:                                              ; preds = %561, %554
  %564 = phi i32 [ %562, %561 ], [ %560, %554 ]
  %565 = icmp eq i32 %564, 0
  br i1 %565, label %566, label %567

566:                                              ; preds = %563
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %552) #14
  br label %567

567:                                              ; preds = %547, %563, %566
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %548) #14
  br i1 %550, label %587, label %568

568:                                              ; preds = %567
  %569 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %569) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %15, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @.str.123, i64 0, i64 0), i64 75) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %15, i1 zeroext false, i32 0, i32 0)
  %570 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %571 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %570, align 8
  %572 = icmp eq %"class.WTF::StringImpl"* %571, null
  br i1 %572, label %586, label %573

573:                                              ; preds = %568
  %574 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %571, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %575 = load atomic i32, i32* %574 monotonic, align 4
  %576 = and i32 %575, 2
  %577 = icmp eq i32 %576, 0
  %578 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %571, i64 0, i32 0
  %579 = load i32, i32* %578, align 4
  br i1 %577, label %580, label %582

580:                                              ; preds = %573
  %581 = add i32 %579, -1
  store i32 %581, i32* %578, align 4
  br label %582

582:                                              ; preds = %580, %573
  %583 = phi i32 [ %581, %580 ], [ %579, %573 ]
  %584 = icmp eq i32 %583, 0
  br i1 %584, label %585, label %586

585:                                              ; preds = %582
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %571) #14
  br label %586

586:                                              ; preds = %568, %582, %585
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %569) #14
  br label %587

587:                                              ; preds = %541, %404, %222, %586, %567, %53, %200
  %588 = phi i32 [ 0, %200 ], [ %45, %53 ], [ 0, %567 ], [ 0, %586 ], [ 0, %222 ], [ 0, %541 ], [ %399, %404 ]
  %589 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %590 = icmp eq %"class.WTF::StringImpl"* %589, null
  br i1 %590, label %604, label %591

591:                                              ; preds = %587
  %592 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %589, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %593 = load atomic i32, i32* %592 monotonic, align 4
  %594 = and i32 %593, 2
  %595 = icmp eq i32 %594, 0
  %596 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %589, i64 0, i32 0
  %597 = load i32, i32* %596, align 4
  br i1 %595, label %598, label %600

598:                                              ; preds = %591
  %599 = add i32 %597, -1
  store i32 %599, i32* %596, align 4
  br label %600

600:                                              ; preds = %598, %591
  %601 = phi i32 [ %599, %598 ], [ %597, %591 ]
  %602 = icmp eq i32 %601, 0
  br i1 %602, label %603, label %604

603:                                              ; preds = %600
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %589) #14
  br label %604

604:                                              ; preds = %587, %600, %603
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #14
  br label %605

605:                                              ; preds = %17, %604
  %606 = phi i32 [ %588, %604 ], [ 0, %17 ]
  ret i32 %606
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14ManifestParser20ParseIsolatedStorageEPKNS_10JSONObjectE(%"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.124, i64 0, i64 0), i64 16) #14
  %8 = call zeroext i1 @_ZN5blink14ManifestParser12ParseBooleanEPKNS_10JSONObjectERKN3WTF6StringEb(%"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %5, i1 zeroext false)
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #14
  br label %25

25:                                               ; preds = %2, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  br i1 %8, label %26, label %87

26:                                               ; preds = %25
  %27 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %28 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %28, i64 0, i32 26
  %30 = call %"class.WTF::StringImpl"* @_ZNK5blink4KURL7GetPathEv(%"class.blink::KURL"* %29) #14
  %31 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %32, label %33, label %37

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %34, align 8
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %36 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %35, i64* %36, align 8
  br label %45

37:                                               ; preds = %26
  %38 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %30, %"class.WTF::StringImpl"** %38, align 8
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 1
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %43 = bitcast i8** %42 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %41, %"class.WTF::StringImpl"** %43, align 8
  %44 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %45

45:                                               ; preds = %37, %33
  %46 = phi i64 [ %44, %37 ], [ %35, %33 ]
  %47 = phi i32 [ %40, %37 ], [ 0, %33 ]
  %48 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %47, i32* %48, align 8
  %49 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #14
  %50 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %46, i64* %50, align 8
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.125, i64 0, i64 0), i8** %51, align 8
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 1, i32* %52, align 8
  %53 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  br i1 %32, label %67, label %54

54:                                               ; preds = %45
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #14
  br i1 %53, label %87, label %68

67:                                               ; preds = %63, %45
  br i1 %53, label %87, label %68

68:                                               ; preds = %66, %67
  %69 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str.126, i64 0, i64 0), i64 55) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %6, i1 zeroext false, i32 0, i32 0)
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #14
  br label %86

86:                                               ; preds = %68, %82, %85
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #14
  br label %87

87:                                               ; preds = %66, %67, %25, %86
  %88 = phi i1 [ false, %86 ], [ true, %67 ], [ true, %66 ], [ false, %25 ]
  ret i1 %88
}

declare void @_ZN5blink15ManifestUmaUtil14ParseSucceededERKN4mojo9StructPtrINS_5mojom5blink8ManifestEEE(%"class.mojo::StructPtr"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(8) %"class.mojo::StructPtr"* @_ZNK5blink14ManifestParser8manifestEv(%"class.blink::ManifestParser"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 5
  ret %"class.mojo::StructPtr"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser10TakeErrorsEPN3WTF6VectorIN4mojo16InlinedStructPtrINS_5mojom5blink13ManifestErrorEEELj0ENS1_18PartitionAllocatorEEE(%"class.blink::ManifestParser"* nocapture, %"class.WTF::Vector.136"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.136", %"class.WTF::Vector.136"* %1, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = bitcast %"class.WTF::Vector.136"* %1 to i64*
  br label %27

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::Vector.136", %"class.WTF::Vector.136"* %1, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %23, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.WTF::Vector.136", %"class.WTF::Vector.136"* %1, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %13, align 8
  %15 = zext i32 %10 to i64
  %16 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %14, i64 %15
  br label %17

17:                                               ; preds = %17, %12
  %18 = phi %"class.mojo::InlinedStructPtr"* [ %20, %17 ], [ %14, %12 ]
  %19 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %18, i64 0, i32 0
  tail call void @_ZN5blink5mojom5blink13ManifestErrorD1Ev(%"class.blink::mojom::blink::ManifestError"* %19) #14
  %20 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %18, i64 1
  %21 = icmp eq %"class.mojo::InlinedStructPtr"* %20, %16
  br i1 %21, label %22, label %17

22:                                               ; preds = %17
  store i32 0, i32* %9, align 4
  br label %23

23:                                               ; preds = %22, %8
  %24 = bitcast %"class.WTF::Vector.136"* %1 to i8**
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.WTF::Vector.136"* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %25) #14
  br label %27

27:                                               ; preds = %6, %23
  %28 = phi i64* [ %7, %6 ], [ %26, %23 ]
  %29 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 6
  %30 = bitcast %"class.WTF::Vector.136"* %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = load i64, i64* %28, align 8
  store atomic i64 %32, i64* %30 monotonic, align 8
  store atomic i64 %31, i64* %28 monotonic, align 8
  %33 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 6, i32 0, i32 0, i32 1
  %34 = load i32, i32* %3, align 4
  %35 = load i32, i32* %33, align 4
  store i32 %35, i32* %3, align 4
  store i32 %34, i32* %33, align 4
  %36 = getelementptr inbounds %"class.WTF::Vector.136", %"class.WTF::Vector.136"* %1, i64 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %38 = load i32, i32* %36, align 4
  %39 = load i32, i32* %37, align 4
  store i32 %39, i32* %36, align 4
  store i32 %38, i32* %37, align 4
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink14ManifestParser6failedEv(%"class.blink::ManifestParser"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %0, i64 0, i32 4
  %3 = load i8, i8* %2, align 8, !range !16
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14ManifestParser12ParseBooleanEPKNS_10JSONObjectERKN3WTF6StringEb(%"class.blink::ManifestParser"*, %"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca i8, align 1
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend", align 8
  %8 = tail call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* %1, %"class.WTF::String"* dereferenceable(8) %2) #14
  %9 = icmp eq %"class.blink::JSONValue"* %8, null
  br i1 %9, label %228, label %10

10:                                               ; preds = %4
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #14
  store i8 -86, i8* %5, align 1
  %11 = bitcast %"class.blink::JSONValue"* %8 to i1 (%"class.blink::JSONValue"*, i8*)***
  %12 = load i1 (%"class.blink::JSONValue"*, i8*)**, i1 (%"class.blink::JSONValue"*, i8*)*** %11, align 8
  %13 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, i8*)*, i1 (%"class.blink::JSONValue"*, i8*)** %12, i64 2
  %14 = load i1 (%"class.blink::JSONValue"*, i8*)*, i1 (%"class.blink::JSONValue"*, i8*)** %13, align 8
  %15 = call zeroext i1 %14(%"class.blink::JSONValue"* nonnull %8, i8* nonnull %5) #14
  br i1 %15, label %223, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  %18 = bitcast %"class.WTF::StringAppend"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %138, label %22

22:                                               ; preds = %16
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %39

29:                                               ; preds = %22
  %30 = zext i32 %28 to i33
  %31 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %30, i33 1) #14
  %32 = extractvalue { i33, i1 } %31, 1
  %33 = extractvalue { i33, i1 } %31, 0
  %34 = icmp slt i33 %33, 0
  %35 = or i1 %32, %34
  br i1 %35, label %36, label %37, !prof !2

36:                                               ; preds = %29
  call void @llvm.trap() #14
  unreachable

37:                                               ; preds = %29
  %38 = trunc i33 %33 to i32
  store i32 %38, i32* %27, align 4
  br label %39

39:                                               ; preds = %37, %22
  %40 = phi i32 [ %38, %37 ], [ %28, %22 ]
  %41 = load atomic i32, i32* %23 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %54

44:                                               ; preds = %39
  %45 = zext i32 %40 to i33
  %46 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #14
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !2

51:                                               ; preds = %44
  call void @llvm.trap() #14
  unreachable

52:                                               ; preds = %44
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %27, align 4
  br label %54

54:                                               ; preds = %52, %39
  %55 = phi i32 [ %53, %52 ], [ %40, %39 ]
  %56 = load atomic i32, i32* %23 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = add i32 %55, -1
  store i32 %60, i32* %27, align 4
  br label %61

61:                                               ; preds = %59, %54
  %62 = phi i32 [ %60, %59 ], [ %55, %54 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #14
  br label %65

65:                                               ; preds = %61, %64
  %66 = load atomic i32, i32* %23 monotonic, align 4, !noalias !50
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = load i32, i32* %27, align 4
  br i1 %68, label %70, label %80

70:                                               ; preds = %65
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #14
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #14, !noalias !50
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %27, align 4, !noalias !50
  br label %80

80:                                               ; preds = %65, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %65 ]
  %82 = load atomic i32, i32* %23 monotonic, align 4, !noalias !50
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %95

85:                                               ; preds = %80
  %86 = zext i32 %81 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #14
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %85
  call void @llvm.trap() #14, !noalias !50
  unreachable

93:                                               ; preds = %85
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %27, align 4, !noalias !50
  br label %95

95:                                               ; preds = %93, %80
  %96 = phi i32 [ %94, %93 ], [ %81, %80 ]
  %97 = load atomic i32, i32* %23 monotonic, align 4, !noalias !50
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %95
  %101 = add i32 %96, -1
  store i32 %101, i32* %27, align 4, !noalias !50
  br label %102

102:                                              ; preds = %100, %95
  %103 = phi i32 [ %101, %100 ], [ %96, %95 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #14, !noalias !50
  br label %106

106:                                              ; preds = %105, %102
  %107 = load atomic i32, i32* %23 monotonic, align 4, !noalias !53
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = load i32, i32* %27, align 4
  br i1 %109, label %111, label %121

111:                                              ; preds = %106
  %112 = zext i32 %110 to i33
  %113 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %112, i33 1) #14
  %114 = extractvalue { i33, i1 } %113, 1
  %115 = extractvalue { i33, i1 } %113, 0
  %116 = icmp slt i33 %115, 0
  %117 = or i1 %114, %116
  br i1 %117, label %118, label %119, !prof !2

118:                                              ; preds = %111
  call void @llvm.trap() #14, !noalias !53
  unreachable

119:                                              ; preds = %111
  %120 = trunc i33 %115 to i32
  store i32 %120, i32* %27, align 4, !noalias !53
  br label %121

121:                                              ; preds = %106, %119
  %122 = phi i32 [ %120, %119 ], [ %110, %106 ]
  %123 = bitcast %"class.WTF::StringAppend"* %7 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.1 to i64), i64* %123, align 8, !alias.scope !53
  %124 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %124, align 8, !alias.scope !53
  %125 = load atomic i32, i32* %23 monotonic, align 4, !noalias !53
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  br i1 %127, label %128, label %144

128:                                              ; preds = %121
  %129 = zext i32 %122 to i33
  %130 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %129, i33 1) #14
  %131 = extractvalue { i33, i1 } %130, 1
  %132 = extractvalue { i33, i1 } %130, 0
  %133 = icmp slt i33 %132, 0
  %134 = or i1 %131, %133
  br i1 %134, label %135, label %136, !prof !2

135:                                              ; preds = %128
  call void @llvm.trap() #14, !noalias !53
  unreachable

136:                                              ; preds = %128
  %137 = trunc i33 %132 to i32
  store i32 %137, i32* %27, align 4, !noalias !53
  br label %144

138:                                              ; preds = %16
  %139 = bitcast %"class.WTF::StringAppend"* %7 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.1 to i64), i64* %139, align 8, !alias.scope !53
  %140 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %140, align 8, !alias.scope !53
  %141 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 1
  %142 = bitcast i8** %141 to i64*
  store i64 ptrtoint ([17 x i8]* @.str.2 to i64), i64* %142, align 8, !alias.scope !53
  %143 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8** %143, align 8, !alias.scope !53
  br label %158

144:                                              ; preds = %136, %121
  %145 = phi i32 [ %137, %136 ], [ %122, %121 ]
  %146 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 1
  %147 = bitcast i8** %146 to i64*
  store i64 ptrtoint ([17 x i8]* @.str.2 to i64), i64* %147, align 8, !alias.scope !53
  %148 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.3, i64 0, i64 0), i8** %148, align 8, !alias.scope !53
  %149 = load atomic i32, i32* %23 monotonic, align 4, !noalias !53
  %150 = and i32 %149, 2
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %154

152:                                              ; preds = %144
  %153 = add i32 %145, -1
  store i32 %153, i32* %27, align 4, !noalias !53
  br label %154

154:                                              ; preds = %152, %144
  %155 = phi i32 [ %153, %152 ], [ %145, %144 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #14, !noalias !53
  br label %158

158:                                              ; preds = %138, %154, %157
  %159 = phi i1 [ true, %138 ], [ false, %154 ], [ false, %157 ]
  %160 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %7)
  %161 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %160, %"class.WTF::StringImpl"** %161, align 8
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %6, i1 zeroext false, i32 0, i32 0)
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %158
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #14
  br label %177

177:                                              ; preds = %158, %173, %176
  %178 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %178, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %194, label %181

181:                                              ; preds = %177
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  br i1 %185, label %188, label %190

188:                                              ; preds = %181
  %189 = add i32 %187, -1
  store i32 %189, i32* %186, align 4
  br label %190

190:                                              ; preds = %188, %181
  %191 = phi i32 [ %189, %188 ], [ %187, %181 ]
  %192 = icmp eq i32 %191, 0
  br i1 %192, label %193, label %194

193:                                              ; preds = %190
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #14
  br label %194

194:                                              ; preds = %177, %190, %193
  br i1 %159, label %208, label %195

195:                                              ; preds = %194
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  br i1 %199, label %202, label %204

202:                                              ; preds = %195
  %203 = add i32 %201, -1
  store i32 %203, i32* %200, align 4
  br label %204

204:                                              ; preds = %202, %195
  %205 = phi i32 [ %203, %202 ], [ %201, %195 ]
  %206 = icmp eq i32 %205, 0
  br i1 %206, label %207, label %208

207:                                              ; preds = %204
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #14
  br label %208

208:                                              ; preds = %194, %204, %207
  br i1 %21, label %222, label %209

209:                                              ; preds = %208
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %211 = load atomic i32, i32* %210 monotonic, align 4
  %212 = and i32 %211, 2
  %213 = icmp eq i32 %212, 0
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  br i1 %213, label %216, label %218

216:                                              ; preds = %209
  %217 = add i32 %215, -1
  store i32 %217, i32* %214, align 4
  br label %218

218:                                              ; preds = %216, %209
  %219 = phi i32 [ %217, %216 ], [ %215, %209 ]
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %218
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #14
  br label %222

222:                                              ; preds = %208, %218, %221
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %226

223:                                              ; preds = %10
  %224 = load i8, i8* %5, align 1, !range !16
  %225 = icmp ne i8 %224, 0
  br label %226

226:                                              ; preds = %223, %222
  %227 = phi i1 [ %225, %223 ], [ %3, %222 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #14
  br label %228

228:                                              ; preds = %4, %226
  %229 = phi i1 [ %227, %226 ], [ %3, %4 ]
  ret i1 %229
}

declare %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.276"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #14
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %6, i8* %11) #14
  %12 = bitcast %"class.WTF::StringTypeAdapter.276"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #14
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #14
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %5, i8* %14) #14
  %15 = bitcast %"class.WTF::StringTypeAdapter.276"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false) #14
  %17 = load i8*, i8** %16, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %4, i8* %17) #14
  %18 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %22 = select i1 %20, %"class.WTF::StringImpl"* %21, %"class.WTF::StringImpl"* %19
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 1
  %26 = icmp eq i32 %25, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #14
  br i1 %26, label %69, label %27

27:                                               ; preds = %1
  %28 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %29 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %30 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %29, i8** nonnull dereferenceable(8) %7) #14
  %31 = load i8*, i8** %7, align 8
  %32 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %33 = bitcast %"class.WTF::StringTypeAdapter.276"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 16, i1 false) #14
  %34 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %3, i8* %34) #14
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.177"* %32, i8* %31) #14
  %35 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.177"* %32) #14
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %31, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.276"* nonnull %3, i8* %37) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #14
  %38 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %38, label %111, label %39

39:                                               ; preds = %27
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %56

46:                                               ; preds = %39
  %47 = zext i32 %45 to i33
  %48 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #14
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !2

53:                                               ; preds = %46
  call void @llvm.trap() #14
  unreachable

54:                                               ; preds = %46
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %44, align 4
  br label %56

56:                                               ; preds = %39, %54
  %57 = phi i32 [ %55, %54 ], [ %45, %39 ]
  %58 = ptrtoint %"class.WTF::StringImpl"* %30 to i64
  %59 = load atomic i32, i32* %40 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %65

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %64 = add i32 %57, -1
  store i32 %64, i32* %63, align 4
  br label %65

65:                                               ; preds = %62, %56
  %66 = phi i32 [ %64, %62 ], [ %57, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %111

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #14
  br label %111

69:                                               ; preds = %1
  %70 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #14
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %71 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %72 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %71, i16** nonnull dereferenceable(8) %8) #14
  %73 = load i16*, i16** %8, align 8
  %74 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %75 = bitcast %"class.WTF::StringTypeAdapter.276"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 16, i1 false) #14
  %76 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %2, i8* %76) #14
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.177"* %74, i16* %73) #14
  %77 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.177"* %74) #14
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds i16, i16* %73, i64 %78
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.276"* nonnull %2, i16* %79) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #14
  %80 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %80, label %111, label %81

81:                                               ; preds = %69
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %98

88:                                               ; preds = %81
  %89 = zext i32 %87 to i33
  %90 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %89, i33 1) #14
  %91 = extractvalue { i33, i1 } %90, 1
  %92 = extractvalue { i33, i1 } %90, 0
  %93 = icmp slt i33 %92, 0
  %94 = or i1 %91, %93
  br i1 %94, label %95, label %96, !prof !2

95:                                               ; preds = %88
  call void @llvm.trap() #14
  unreachable

96:                                               ; preds = %88
  %97 = trunc i33 %92 to i32
  store i32 %97, i32* %86, align 4
  br label %98

98:                                               ; preds = %81, %96
  %99 = phi i32 [ %97, %96 ], [ %87, %81 ]
  %100 = ptrtoint %"class.WTF::StringImpl"* %72 to i64
  %101 = load atomic i32, i32* %82 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %98
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %106 = add i32 %99, -1
  store i32 %106, i32* %105, align 4
  br label %107

107:                                              ; preds = %104, %98
  %108 = phi i32 [ %106, %104 ], [ %99, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #14
  br label %111

111:                                              ; preds = %110, %107, %69, %68, %65, %27
  %112 = phi i8* [ %28, %27 ], [ %28, %65 ], [ %28, %68 ], [ %70, %69 ], [ %70, %107 ], [ %70, %110 ]
  %113 = phi i64 [ 0, %27 ], [ %58, %65 ], [ %58, %68 ], [ 0, %69 ], [ %100, %107 ], [ %100, %110 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #14
  %114 = inttoptr i64 %113 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %114
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser11ParseStringEPKNS_10JSONObjectERKN3WTF6StringENS0_8TrimTypeE(%"class.absl::optional.179"* noalias nocapture sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringAppend", align 8
  %9 = tail call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* %2, %"class.WTF::String"* dereferenceable(8) %3) #14
  %10 = icmp eq %"class.blink::JSONValue"* %9, null
  br i1 %10, label %11, label %13

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %12, align 8
  br label %278

13:                                               ; preds = %5
  %14 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #14
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %15, align 8
  %16 = bitcast %"class.blink::JSONValue"* %9 to i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)***
  %17 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)**, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %17, i64 5
  %19 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %18, align 8
  %20 = call zeroext i1 %19(%"class.blink::JSONValue"* nonnull %9, %"class.WTF::String"* nonnull %6) #14
  %21 = xor i1 %20, true
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  %24 = or i1 %23, %21
  br i1 %24, label %25, label %231

25:                                               ; preds = %13
  %26 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #14
  %27 = bitcast %"class.WTF::StringAppend"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %27) #14
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %147, label %31

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %48

38:                                               ; preds = %31
  %39 = zext i32 %37 to i33
  %40 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %39, i33 1) #14
  %41 = extractvalue { i33, i1 } %40, 1
  %42 = extractvalue { i33, i1 } %40, 0
  %43 = icmp slt i33 %42, 0
  %44 = or i1 %41, %43
  br i1 %44, label %45, label %46, !prof !2

45:                                               ; preds = %38
  call void @llvm.trap() #14
  unreachable

46:                                               ; preds = %38
  %47 = trunc i33 %42 to i32
  store i32 %47, i32* %36, align 4
  br label %48

48:                                               ; preds = %46, %31
  %49 = phi i32 [ %47, %46 ], [ %37, %31 ]
  %50 = load atomic i32, i32* %32 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %63

53:                                               ; preds = %48
  %54 = zext i32 %49 to i33
  %55 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %54, i33 1) #14
  %56 = extractvalue { i33, i1 } %55, 1
  %57 = extractvalue { i33, i1 } %55, 0
  %58 = icmp slt i33 %57, 0
  %59 = or i1 %56, %58
  br i1 %59, label %60, label %61, !prof !2

60:                                               ; preds = %53
  call void @llvm.trap() #14
  unreachable

61:                                               ; preds = %53
  %62 = trunc i33 %57 to i32
  store i32 %62, i32* %36, align 4
  br label %63

63:                                               ; preds = %61, %48
  %64 = phi i32 [ %62, %61 ], [ %49, %48 ]
  %65 = load atomic i32, i32* %32 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %63
  %69 = add i32 %64, -1
  store i32 %69, i32* %36, align 4
  br label %70

70:                                               ; preds = %68, %63
  %71 = phi i32 [ %69, %68 ], [ %64, %63 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #14
  br label %74

74:                                               ; preds = %70, %73
  %75 = load atomic i32, i32* %32 monotonic, align 4, !noalias !56
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = load i32, i32* %36, align 4
  br i1 %77, label %79, label %89

79:                                               ; preds = %74
  %80 = zext i32 %78 to i33
  %81 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %80, i33 1) #14
  %82 = extractvalue { i33, i1 } %81, 1
  %83 = extractvalue { i33, i1 } %81, 0
  %84 = icmp slt i33 %83, 0
  %85 = or i1 %82, %84
  br i1 %85, label %86, label %87, !prof !2

86:                                               ; preds = %79
  call void @llvm.trap() #14, !noalias !56
  unreachable

87:                                               ; preds = %79
  %88 = trunc i33 %83 to i32
  store i32 %88, i32* %36, align 4, !noalias !56
  br label %89

89:                                               ; preds = %74, %87
  %90 = phi i32 [ %88, %87 ], [ %78, %74 ]
  %91 = load atomic i32, i32* %32 monotonic, align 4, !noalias !56
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %104

94:                                               ; preds = %89
  %95 = zext i32 %90 to i33
  %96 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #14
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !2

101:                                              ; preds = %94
  call void @llvm.trap() #14, !noalias !56
  unreachable

102:                                              ; preds = %94
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %36, align 4, !noalias !56
  br label %104

104:                                              ; preds = %102, %89
  %105 = phi i32 [ %103, %102 ], [ %90, %89 ]
  %106 = load atomic i32, i32* %32 monotonic, align 4, !noalias !56
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %111

109:                                              ; preds = %104
  %110 = add i32 %105, -1
  store i32 %110, i32* %36, align 4, !noalias !56
  br label %111

111:                                              ; preds = %109, %104
  %112 = phi i32 [ %110, %109 ], [ %105, %104 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #14, !noalias !56
  br label %115

115:                                              ; preds = %114, %111
  %116 = load atomic i32, i32* %32 monotonic, align 4, !noalias !59
  %117 = and i32 %116, 2
  %118 = icmp eq i32 %117, 0
  %119 = load i32, i32* %36, align 4
  br i1 %118, label %120, label %130

120:                                              ; preds = %115
  %121 = zext i32 %119 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #14
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !2

127:                                              ; preds = %120
  call void @llvm.trap() #14, !noalias !59
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %36, align 4, !noalias !59
  br label %130

130:                                              ; preds = %115, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %115 ]
  %132 = bitcast %"class.WTF::StringAppend"* %8 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.1 to i64), i64* %132, align 8, !alias.scope !59
  %133 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %133, align 8, !alias.scope !59
  %134 = load atomic i32, i32* %32 monotonic, align 4, !noalias !59
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %153

137:                                              ; preds = %130
  %138 = zext i32 %131 to i33
  %139 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %138, i33 1) #14
  %140 = extractvalue { i33, i1 } %139, 1
  %141 = extractvalue { i33, i1 } %139, 0
  %142 = icmp slt i33 %141, 0
  %143 = or i1 %140, %142
  br i1 %143, label %144, label %145, !prof !2

144:                                              ; preds = %137
  call void @llvm.trap() #14, !noalias !59
  unreachable

145:                                              ; preds = %137
  %146 = trunc i33 %141 to i32
  store i32 %146, i32* %36, align 4, !noalias !59
  br label %153

147:                                              ; preds = %25
  %148 = bitcast %"class.WTF::StringAppend"* %8 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.1 to i64), i64* %148, align 8, !alias.scope !59
  %149 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %149, align 8, !alias.scope !59
  %150 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 1
  %151 = bitcast i8** %150 to i64*
  store i64 ptrtoint ([17 x i8]* @.str.2 to i64), i64* %151, align 8, !alias.scope !59
  %152 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i8** %152, align 8, !alias.scope !59
  br label %167

153:                                              ; preds = %145, %130
  %154 = phi i32 [ %146, %145 ], [ %131, %130 ]
  %155 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 1
  %156 = bitcast i8** %155 to i64*
  store i64 ptrtoint ([17 x i8]* @.str.2 to i64), i64* %156, align 8, !alias.scope !59
  %157 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0), i8** %157, align 8, !alias.scope !59
  %158 = load atomic i32, i32* %32 monotonic, align 4, !noalias !59
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %163

161:                                              ; preds = %153
  %162 = add i32 %154, -1
  store i32 %162, i32* %36, align 4, !noalias !59
  br label %163

163:                                              ; preds = %161, %153
  %164 = phi i32 [ %162, %161 ], [ %154, %153 ]
  %165 = icmp eq i32 %164, 0
  br i1 %165, label %166, label %167

166:                                              ; preds = %163
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #14, !noalias !59
  br label %167

167:                                              ; preds = %147, %163, %166
  %168 = phi i1 [ true, %147 ], [ false, %163 ], [ false, %166 ]
  %169 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %8)
  %170 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %169, %"class.WTF::StringImpl"** %170, align 8
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %7, i1 zeroext false, i32 0, i32 0)
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %170, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %171) #14
  br label %186

186:                                              ; preds = %167, %182, %185
  %187 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %187, align 8
  %189 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %189, label %203, label %190

190:                                              ; preds = %186
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = and i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 0
  %196 = load i32, i32* %195, align 4
  br i1 %194, label %197, label %199

197:                                              ; preds = %190
  %198 = add i32 %196, -1
  store i32 %198, i32* %195, align 4
  br label %199

199:                                              ; preds = %197, %190
  %200 = phi i32 [ %198, %197 ], [ %196, %190 ]
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %199
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %188) #14
  br label %203

203:                                              ; preds = %186, %199, %202
  br i1 %168, label %217, label %204

204:                                              ; preds = %203
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load atomic i32, i32* %205 monotonic, align 4
  %207 = and i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %210 = load i32, i32* %209, align 4
  br i1 %208, label %211, label %213

211:                                              ; preds = %204
  %212 = add i32 %210, -1
  store i32 %212, i32* %209, align 4
  br label %213

213:                                              ; preds = %211, %204
  %214 = phi i32 [ %212, %211 ], [ %210, %204 ]
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %213
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #14
  br label %217

217:                                              ; preds = %203, %213, %216
  br i1 %30, label %260, label %218

218:                                              ; preds = %217
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = and i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  br i1 %222, label %225, label %227

225:                                              ; preds = %218
  %226 = add i32 %224, -1
  store i32 %226, i32* %223, align 4
  br label %227

227:                                              ; preds = %225, %218
  %228 = phi i32 [ %226, %225 ], [ %224, %218 ]
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %260

230:                                              ; preds = %227
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #14
  br label %260

231:                                              ; preds = %13
  %232 = icmp eq i32 %4, 0
  br i1 %232, label %235, label %233

233:                                              ; preds = %231
  %234 = bitcast %"class.WTF::String"* %6 to i64*
  br label %254

235:                                              ; preds = %231
  %236 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %6) #14
  %237 = ptrtoint %"class.WTF::StringImpl"* %236 to i64
  %238 = bitcast %"class.WTF::String"* %6 to i64*
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  store i64 %237, i64* %238, align 8
  %240 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %240, label %254, label %241

241:                                              ; preds = %235
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 0
  %247 = load i32, i32* %246, align 4
  br i1 %245, label %248, label %250

248:                                              ; preds = %241
  %249 = add i32 %247, -1
  store i32 %249, i32* %246, align 4
  br label %250

250:                                              ; preds = %248, %241
  %251 = phi i32 [ %249, %248 ], [ %247, %241 ]
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %250
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %239) #14
  br label %254

254:                                              ; preds = %233, %253, %250, %235
  %255 = phi i64* [ %234, %233 ], [ %238, %253 ], [ %238, %250 ], [ %238, %235 ]
  %256 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %256, align 8
  %257 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %258 = load i64, i64* %255, align 8
  %259 = bitcast %"class.WTF::String"* %257 to i64*
  store i64 %258, i64* %259, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %15, align 8
  br label %277

260:                                              ; preds = %230, %227, %217
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %27) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #14
  %261 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %261, align 8
  %262 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %263 = icmp eq %"class.WTF::StringImpl"* %262, null
  br i1 %263, label %277, label %264

264:                                              ; preds = %260
  %265 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %266 = load atomic i32, i32* %265 monotonic, align 4
  %267 = and i32 %266, 2
  %268 = icmp eq i32 %267, 0
  %269 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %262, i64 0, i32 0
  %270 = load i32, i32* %269, align 4
  br i1 %268, label %271, label %273

271:                                              ; preds = %264
  %272 = add i32 %270, -1
  store i32 %272, i32* %269, align 4
  br label %273

273:                                              ; preds = %271, %264
  %274 = phi i32 [ %272, %271 ], [ %270, %264 ]
  %275 = icmp eq i32 %274, 0
  br i1 %275, label %276, label %277

276:                                              ; preds = %273
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %262) #14
  br label %277

277:                                              ; preds = %254, %260, %273, %276
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #14
  br label %278

278:                                              ; preds = %277, %11
  ret void
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser20ParseStringForMemberEPKNS_10JSONObjectERKN3WTF6StringES7_bNS0_8TrimTypeE(%"class.absl::optional.179"* noalias nocapture sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.WTF::StringAppend.185", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringAppend.185", align 8
  %12 = alloca %"class.WTF::StringAppend.185", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::StringAppend.184", align 8
  %15 = alloca %"class.WTF::StringAppend.185", align 8
  %16 = alloca %"class.WTF::StringAppend.177", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.WTF::StringAppend.184", align 8
  %20 = alloca %"class.WTF::StringAppend.185", align 8
  %21 = alloca %"class.WTF::StringAppend.177", align 8
  %22 = alloca %"class.WTF::String", align 8
  %23 = alloca %"class.WTF::StringAppend.184", align 8
  %24 = alloca %"class.WTF::StringAppend.185", align 8
  %25 = alloca %"class.WTF::StringAppend.177", align 8
  %26 = tail call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* %2, %"class.WTF::String"* dereferenceable(8) %4) #14
  %27 = icmp eq %"class.blink::JSONValue"* %26, null
  br i1 %27, label %28, label %320

28:                                               ; preds = %7
  br i1 %5, label %29, label %318

29:                                               ; preds = %28
  %30 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #14
  %31 = bitcast %"class.WTF::StringAppend.184"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %31) #14
  %32 = bitcast %"class.WTF::StringAppend.185"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %32) #14
  %33 = bitcast %"class.WTF::StringAppend.177"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #14
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %36, label %112, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load atomic i32, i32* %38 monotonic, align 4
  %40 = and i32 %39, 2
  %41 = icmp eq i32 %40, 0
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  br i1 %41, label %44, label %54

44:                                               ; preds = %37
  %45 = zext i32 %43 to i33
  %46 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %45, i33 1) #14
  %47 = extractvalue { i33, i1 } %46, 1
  %48 = extractvalue { i33, i1 } %46, 0
  %49 = icmp slt i33 %48, 0
  %50 = or i1 %47, %49
  br i1 %50, label %51, label %52, !prof !2

51:                                               ; preds = %44
  tail call void @llvm.trap() #14
  unreachable

52:                                               ; preds = %44
  %53 = trunc i33 %48 to i32
  store i32 %53, i32* %42, align 4
  br label %54

54:                                               ; preds = %52, %37
  %55 = phi i32 [ %53, %52 ], [ %43, %37 ]
  %56 = load atomic i32, i32* %38 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %69

59:                                               ; preds = %54
  %60 = zext i32 %55 to i33
  %61 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #14
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !2

66:                                               ; preds = %59
  tail call void @llvm.trap() #14
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %42, align 4
  br label %69

69:                                               ; preds = %67, %54
  %70 = phi i32 [ %68, %67 ], [ %55, %54 ]
  %71 = load atomic i32, i32* %38 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %76

74:                                               ; preds = %69
  %75 = add i32 %70, -1
  store i32 %75, i32* %42, align 4
  br label %76

76:                                               ; preds = %74, %69
  %77 = phi i32 [ %75, %74 ], [ %70, %69 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #14
  br label %80

80:                                               ; preds = %76, %79
  %81 = load atomic i32, i32* %38 monotonic, align 4, !noalias !62
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = load i32, i32* %42, align 4
  br i1 %83, label %85, label %95

85:                                               ; preds = %80
  %86 = zext i32 %84 to i33
  %87 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #14
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %85
  tail call void @llvm.trap() #14, !noalias !62
  unreachable

93:                                               ; preds = %85
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %42, align 4, !noalias !62
  br label %95

95:                                               ; preds = %80, %93
  %96 = phi i32 [ %94, %93 ], [ %84, %80 ]
  %97 = bitcast %"class.WTF::StringAppend.177"* %16 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.1 to i64), i64* %97, align 8, !alias.scope !62
  %98 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %98, align 8, !alias.scope !62
  %99 = load atomic i32, i32* %38 monotonic, align 4, !noalias !62
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %116

102:                                              ; preds = %95
  %103 = zext i32 %96 to i33
  %104 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %103, i33 1) #14
  %105 = extractvalue { i33, i1 } %104, 1
  %106 = extractvalue { i33, i1 } %104, 0
  %107 = icmp slt i33 %106, 0
  %108 = or i1 %105, %107
  br i1 %108, label %109, label %110, !prof !2

109:                                              ; preds = %102
  tail call void @llvm.trap() #14, !noalias !62
  unreachable

110:                                              ; preds = %102
  %111 = trunc i33 %106 to i32
  store i32 %111, i32* %42, align 4, !noalias !62
  br label %116

112:                                              ; preds = %29
  %113 = bitcast %"class.WTF::StringAppend.177"* %16 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.1 to i64), i64* %113, align 8, !alias.scope !62
  %114 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %114, align 8, !alias.scope !62
  %115 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8** %115, align 8, !alias.scope !62
  br label %128

116:                                              ; preds = %110, %95
  %117 = phi i32 [ %111, %110 ], [ %96, %95 ]
  %118 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8** %118, align 8, !alias.scope !62
  %119 = load atomic i32, i32* %38 monotonic, align 4, !noalias !62
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %124

122:                                              ; preds = %116
  %123 = add i32 %117, -1
  store i32 %123, i32* %42, align 4, !noalias !62
  br label %124

124:                                              ; preds = %122, %116
  %125 = phi i32 [ %123, %122 ], [ %117, %116 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #14, !noalias !62
  br label %128

128:                                              ; preds = %112, %124, %127
  %129 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %129, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %149, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %149

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = zext i32 %139 to i33
  %141 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %140, i33 1) #14
  %142 = extractvalue { i33, i1 } %141, 1
  %143 = extractvalue { i33, i1 } %141, 0
  %144 = icmp slt i33 %143, 0
  %145 = or i1 %142, %144
  br i1 %145, label %146, label %147, !prof !2

146:                                              ; preds = %137
  tail call void @llvm.trap() #14
  unreachable

147:                                              ; preds = %137
  %148 = trunc i33 %143 to i32
  store i32 %148, i32* %138, align 4
  br label %149

149:                                              ; preds = %128, %132, %147
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.185"* nonnull sret %15, %"class.WTF::StringAppend.177"* nonnull dereferenceable(24) %16, %"class.WTF::StringImpl"* %130)
  %150 = bitcast %"class.WTF::StringAppend.185"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %150)
  %151 = bitcast %"class.WTF::StringAppend.185"* %15 to i64*
  %152 = load i64, i64* %151, align 8, !noalias !65
  %153 = bitcast %"class.WTF::StringAppend.185"* %12 to i64*
  store i64 %152, i64* %153, align 8, !noalias !65
  %154 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %15, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8, !noalias !65
  %156 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %155, %"class.WTF::StringImpl"** %156, align 8, !noalias !65
  %157 = icmp eq %"class.WTF::StringImpl"* %155, null
  br i1 %157, label %175, label %158

158:                                              ; preds = %149
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %175

163:                                              ; preds = %158
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 0
  %165 = load i32, i32* %164, align 4
  %166 = zext i32 %165 to i33
  %167 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %166, i33 1) #14
  %168 = extractvalue { i33, i1 } %167, 1
  %169 = extractvalue { i33, i1 } %167, 0
  %170 = icmp slt i33 %169, 0
  %171 = or i1 %168, %170
  br i1 %171, label %172, label %173, !prof !2

172:                                              ; preds = %163
  call void @llvm.trap() #14
  unreachable

173:                                              ; preds = %163
  %174 = trunc i33 %169 to i32
  store i32 %174, i32* %164, align 4
  br label %175

175:                                              ; preds = %173, %158, %149
  %176 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %12, i64 0, i32 0, i32 1
  %177 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %15, i64 0, i32 0, i32 1
  %178 = bitcast i8** %177 to i64*
  %179 = load i64, i64* %178, align 8, !noalias !65
  %180 = bitcast i8** %176 to i64*
  store i64 %179, i64* %180, align 8, !noalias !65
  %181 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %15, i64 0, i32 1, i32 0, i32 0
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8, !noalias !65
  %183 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %12, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %182, %"class.WTF::StringImpl"** %183, align 8, !noalias !65
  %184 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %184, label %202, label %185

185:                                              ; preds = %175
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %187 = load atomic i32, i32* %186 monotonic, align 4
  %188 = and i32 %187, 2
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %202

190:                                              ; preds = %185
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 0
  %192 = load i32, i32* %191, align 4
  %193 = zext i32 %192 to i33
  %194 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %193, i33 1) #14
  %195 = extractvalue { i33, i1 } %194, 1
  %196 = extractvalue { i33, i1 } %194, 0
  %197 = icmp slt i33 %196, 0
  %198 = or i1 %195, %197
  br i1 %198, label %199, label %200, !prof !2

199:                                              ; preds = %190
  call void @llvm.trap() #14
  unreachable

200:                                              ; preds = %190
  %201 = trunc i33 %196 to i32
  store i32 %201, i32* %191, align 4
  br label %202

202:                                              ; preds = %175, %185, %200
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.184"* nonnull %14, %"class.WTF::StringAppend.185"* nonnull byval(%"class.WTF::StringAppend.185") align 8 %12, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.6, i64 0, i64 0)) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %150)
  %203 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.184"* nonnull %14)
  %204 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %203, %"class.WTF::StringImpl"** %204, align 8
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %13, i1 zeroext false, i32 0, i32 0)
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %204, align 8
  %206 = icmp eq %"class.WTF::StringImpl"* %205, null
  br i1 %206, label %220, label %207

207:                                              ; preds = %202
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %209 = load atomic i32, i32* %208 monotonic, align 4
  %210 = and i32 %209, 2
  %211 = icmp eq i32 %210, 0
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 0
  %213 = load i32, i32* %212, align 4
  br i1 %211, label %214, label %216

214:                                              ; preds = %207
  %215 = add i32 %213, -1
  store i32 %215, i32* %212, align 4
  br label %216

216:                                              ; preds = %214, %207
  %217 = phi i32 [ %215, %214 ], [ %213, %207 ]
  %218 = icmp eq i32 %217, 0
  br i1 %218, label %219, label %220

219:                                              ; preds = %216
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %205) #14
  br label %220

220:                                              ; preds = %202, %216, %219
  %221 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %222 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %221, align 8
  %223 = icmp eq %"class.WTF::StringImpl"* %222, null
  br i1 %223, label %237, label %224

224:                                              ; preds = %220
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %226 = load atomic i32, i32* %225 monotonic, align 4
  %227 = and i32 %226, 2
  %228 = icmp eq i32 %227, 0
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %222, i64 0, i32 0
  %230 = load i32, i32* %229, align 4
  br i1 %228, label %231, label %233

231:                                              ; preds = %224
  %232 = add i32 %230, -1
  store i32 %232, i32* %229, align 4
  br label %233

233:                                              ; preds = %231, %224
  %234 = phi i32 [ %232, %231 ], [ %230, %224 ]
  %235 = icmp eq i32 %234, 0
  br i1 %235, label %236, label %237

236:                                              ; preds = %233
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %222) #14
  br label %237

237:                                              ; preds = %236, %233, %220
  %238 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %239 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %238, align 8
  %240 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %240, label %254, label %241

241:                                              ; preds = %237
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 0
  %247 = load i32, i32* %246, align 4
  br i1 %245, label %248, label %250

248:                                              ; preds = %241
  %249 = add i32 %247, -1
  store i32 %249, i32* %246, align 4
  br label %250

250:                                              ; preds = %248, %241
  %251 = phi i32 [ %249, %248 ], [ %247, %241 ]
  %252 = icmp eq i32 %251, 0
  br i1 %252, label %253, label %254

253:                                              ; preds = %250
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %239) #14
  br label %254

254:                                              ; preds = %237, %250, %253
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %181, align 8
  %256 = icmp eq %"class.WTF::StringImpl"* %255, null
  br i1 %256, label %270, label %257

257:                                              ; preds = %254
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = and i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 0
  %263 = load i32, i32* %262, align 4
  br i1 %261, label %264, label %266

264:                                              ; preds = %257
  %265 = add i32 %263, -1
  store i32 %265, i32* %262, align 4
  br label %266

266:                                              ; preds = %264, %257
  %267 = phi i32 [ %265, %264 ], [ %263, %257 ]
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %270

269:                                              ; preds = %266
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %255) #14
  br label %270

270:                                              ; preds = %269, %266, %254
  %271 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %272 = icmp eq %"class.WTF::StringImpl"* %271, null
  br i1 %272, label %286, label %273

273:                                              ; preds = %270
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %271, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %275 = load atomic i32, i32* %274 monotonic, align 4
  %276 = and i32 %275, 2
  %277 = icmp eq i32 %276, 0
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %271, i64 0, i32 0
  %279 = load i32, i32* %278, align 4
  br i1 %277, label %280, label %282

280:                                              ; preds = %273
  %281 = add i32 %279, -1
  store i32 %281, i32* %278, align 4
  br label %282

282:                                              ; preds = %280, %273
  %283 = phi i32 [ %281, %280 ], [ %279, %273 ]
  %284 = icmp eq i32 %283, 0
  br i1 %284, label %285, label %286

285:                                              ; preds = %282
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %271) #14
  br label %286

286:                                              ; preds = %270, %282, %285
  %287 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  %288 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %287, align 8
  %289 = icmp eq %"class.WTF::StringImpl"* %288, null
  br i1 %289, label %303, label %290

290:                                              ; preds = %286
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %288, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %292 = load atomic i32, i32* %291 monotonic, align 4
  %293 = and i32 %292, 2
  %294 = icmp eq i32 %293, 0
  %295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %288, i64 0, i32 0
  %296 = load i32, i32* %295, align 4
  br i1 %294, label %297, label %299

297:                                              ; preds = %290
  %298 = add i32 %296, -1
  store i32 %298, i32* %295, align 4
  br label %299

299:                                              ; preds = %297, %290
  %300 = phi i32 [ %298, %297 ], [ %296, %290 ]
  %301 = icmp eq i32 %300, 0
  br i1 %301, label %302, label %303

302:                                              ; preds = %299
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %288) #14
  br label %303

303:                                              ; preds = %286, %299, %302
  br i1 %36, label %317, label %304

304:                                              ; preds = %303
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %310 = load i32, i32* %309, align 4
  br i1 %308, label %311, label %313

311:                                              ; preds = %304
  %312 = add i32 %310, -1
  store i32 %312, i32* %309, align 4
  br label %313

313:                                              ; preds = %311, %304
  %314 = phi i32 [ %312, %311 ], [ %310, %304 ]
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %313
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #14
  br label %317

317:                                              ; preds = %303, %313, %316
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %32) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %31) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #14
  br label %318

318:                                              ; preds = %317, %28
  %319 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %319, align 8
  br label %978

320:                                              ; preds = %7
  %321 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %321) #14
  %322 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %322, align 8
  %323 = bitcast %"class.blink::JSONValue"* %26 to i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)***
  %324 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)**, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*** %323, align 8
  %325 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %324, i64 5
  %326 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %325, align 8
  %327 = call zeroext i1 %326(%"class.blink::JSONValue"* nonnull %26, %"class.WTF::String"* nonnull %17) #14
  br i1 %327, label %617, label %328

328:                                              ; preds = %320
  %329 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %329) #14
  %330 = bitcast %"class.WTF::StringAppend.184"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %330) #14
  %331 = bitcast %"class.WTF::StringAppend.185"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %331) #14
  %332 = bitcast %"class.WTF::StringAppend.177"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %332) #14
  %333 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %334 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %333, align 8
  %335 = icmp eq %"class.WTF::StringImpl"* %334, null
  br i1 %335, label %411, label %336

336:                                              ; preds = %328
  %337 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %334, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %338 = load atomic i32, i32* %337 monotonic, align 4
  %339 = and i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %334, i64 0, i32 0
  %342 = load i32, i32* %341, align 4
  br i1 %340, label %343, label %353

343:                                              ; preds = %336
  %344 = zext i32 %342 to i33
  %345 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %344, i33 1) #14
  %346 = extractvalue { i33, i1 } %345, 1
  %347 = extractvalue { i33, i1 } %345, 0
  %348 = icmp slt i33 %347, 0
  %349 = or i1 %346, %348
  br i1 %349, label %350, label %351, !prof !2

350:                                              ; preds = %343
  call void @llvm.trap() #14
  unreachable

351:                                              ; preds = %343
  %352 = trunc i33 %347 to i32
  store i32 %352, i32* %341, align 4
  br label %353

353:                                              ; preds = %351, %336
  %354 = phi i32 [ %352, %351 ], [ %342, %336 ]
  %355 = load atomic i32, i32* %337 monotonic, align 4
  %356 = and i32 %355, 2
  %357 = icmp eq i32 %356, 0
  br i1 %357, label %358, label %368

358:                                              ; preds = %353
  %359 = zext i32 %354 to i33
  %360 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %359, i33 1) #14
  %361 = extractvalue { i33, i1 } %360, 1
  %362 = extractvalue { i33, i1 } %360, 0
  %363 = icmp slt i33 %362, 0
  %364 = or i1 %361, %363
  br i1 %364, label %365, label %366, !prof !2

365:                                              ; preds = %358
  call void @llvm.trap() #14
  unreachable

366:                                              ; preds = %358
  %367 = trunc i33 %362 to i32
  store i32 %367, i32* %341, align 4
  br label %368

368:                                              ; preds = %366, %353
  %369 = phi i32 [ %367, %366 ], [ %354, %353 ]
  %370 = load atomic i32, i32* %337 monotonic, align 4
  %371 = and i32 %370, 2
  %372 = icmp eq i32 %371, 0
  br i1 %372, label %373, label %375

373:                                              ; preds = %368
  %374 = add i32 %369, -1
  store i32 %374, i32* %341, align 4
  br label %375

375:                                              ; preds = %373, %368
  %376 = phi i32 [ %374, %373 ], [ %369, %368 ]
  %377 = icmp eq i32 %376, 0
  br i1 %377, label %378, label %379

378:                                              ; preds = %375
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %334) #14
  br label %379

379:                                              ; preds = %375, %378
  %380 = load atomic i32, i32* %337 monotonic, align 4, !noalias !68
  %381 = and i32 %380, 2
  %382 = icmp eq i32 %381, 0
  %383 = load i32, i32* %341, align 4
  br i1 %382, label %384, label %394

384:                                              ; preds = %379
  %385 = zext i32 %383 to i33
  %386 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %385, i33 1) #14
  %387 = extractvalue { i33, i1 } %386, 1
  %388 = extractvalue { i33, i1 } %386, 0
  %389 = icmp slt i33 %388, 0
  %390 = or i1 %387, %389
  br i1 %390, label %391, label %392, !prof !2

391:                                              ; preds = %384
  call void @llvm.trap() #14, !noalias !68
  unreachable

392:                                              ; preds = %384
  %393 = trunc i33 %388 to i32
  store i32 %393, i32* %341, align 4, !noalias !68
  br label %394

394:                                              ; preds = %379, %392
  %395 = phi i32 [ %393, %392 ], [ %383, %379 ]
  %396 = bitcast %"class.WTF::StringAppend.177"* %21 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.1 to i64), i64* %396, align 8, !alias.scope !68
  %397 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %334, %"class.WTF::StringImpl"** %397, align 8, !alias.scope !68
  %398 = load atomic i32, i32* %337 monotonic, align 4, !noalias !68
  %399 = and i32 %398, 2
  %400 = icmp eq i32 %399, 0
  br i1 %400, label %401, label %415

401:                                              ; preds = %394
  %402 = zext i32 %395 to i33
  %403 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %402, i33 1) #14
  %404 = extractvalue { i33, i1 } %403, 1
  %405 = extractvalue { i33, i1 } %403, 0
  %406 = icmp slt i33 %405, 0
  %407 = or i1 %404, %406
  br i1 %407, label %408, label %409, !prof !2

408:                                              ; preds = %401
  call void @llvm.trap() #14, !noalias !68
  unreachable

409:                                              ; preds = %401
  %410 = trunc i33 %405 to i32
  store i32 %410, i32* %341, align 4, !noalias !68
  br label %415

411:                                              ; preds = %328
  %412 = bitcast %"class.WTF::StringAppend.177"* %21 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.1 to i64), i64* %412, align 8, !alias.scope !68
  %413 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %413, align 8, !alias.scope !68
  %414 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8** %414, align 8, !alias.scope !68
  br label %427

415:                                              ; preds = %409, %394
  %416 = phi i32 [ %410, %409 ], [ %395, %394 ]
  %417 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8** %417, align 8, !alias.scope !68
  %418 = load atomic i32, i32* %337 monotonic, align 4, !noalias !68
  %419 = and i32 %418, 2
  %420 = icmp eq i32 %419, 0
  br i1 %420, label %421, label %423

421:                                              ; preds = %415
  %422 = add i32 %416, -1
  store i32 %422, i32* %341, align 4, !noalias !68
  br label %423

423:                                              ; preds = %421, %415
  %424 = phi i32 [ %422, %421 ], [ %416, %415 ]
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %426, label %427

426:                                              ; preds = %423
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %334) #14, !noalias !68
  br label %427

427:                                              ; preds = %411, %423, %426
  %428 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %428, align 8
  %430 = icmp eq %"class.WTF::StringImpl"* %429, null
  br i1 %430, label %448, label %431

431:                                              ; preds = %427
  %432 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %433 = load atomic i32, i32* %432 monotonic, align 4
  %434 = and i32 %433, 2
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %436, label %448

436:                                              ; preds = %431
  %437 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %429, i64 0, i32 0
  %438 = load i32, i32* %437, align 4
  %439 = zext i32 %438 to i33
  %440 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %439, i33 1) #14
  %441 = extractvalue { i33, i1 } %440, 1
  %442 = extractvalue { i33, i1 } %440, 0
  %443 = icmp slt i33 %442, 0
  %444 = or i1 %441, %443
  br i1 %444, label %445, label %446, !prof !2

445:                                              ; preds = %436
  call void @llvm.trap() #14
  unreachable

446:                                              ; preds = %436
  %447 = trunc i33 %442 to i32
  store i32 %447, i32* %437, align 4
  br label %448

448:                                              ; preds = %427, %431, %446
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.185"* nonnull sret %20, %"class.WTF::StringAppend.177"* nonnull dereferenceable(24) %21, %"class.WTF::StringImpl"* %429)
  %449 = bitcast %"class.WTF::StringAppend.185"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %449)
  %450 = bitcast %"class.WTF::StringAppend.185"* %20 to i64*
  %451 = load i64, i64* %450, align 8, !noalias !71
  %452 = bitcast %"class.WTF::StringAppend.185"* %11 to i64*
  store i64 %451, i64* %452, align 8, !noalias !71
  %453 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %20, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %454 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %453, align 8, !noalias !71
  %455 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %11, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %454, %"class.WTF::StringImpl"** %455, align 8, !noalias !71
  %456 = icmp eq %"class.WTF::StringImpl"* %454, null
  br i1 %456, label %474, label %457

457:                                              ; preds = %448
  %458 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %454, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %459 = load atomic i32, i32* %458 monotonic, align 4
  %460 = and i32 %459, 2
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %462, label %474

462:                                              ; preds = %457
  %463 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %454, i64 0, i32 0
  %464 = load i32, i32* %463, align 4
  %465 = zext i32 %464 to i33
  %466 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %465, i33 1) #14
  %467 = extractvalue { i33, i1 } %466, 1
  %468 = extractvalue { i33, i1 } %466, 0
  %469 = icmp slt i33 %468, 0
  %470 = or i1 %467, %469
  br i1 %470, label %471, label %472, !prof !2

471:                                              ; preds = %462
  call void @llvm.trap() #14
  unreachable

472:                                              ; preds = %462
  %473 = trunc i33 %468 to i32
  store i32 %473, i32* %463, align 4
  br label %474

474:                                              ; preds = %472, %457, %448
  %475 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %11, i64 0, i32 0, i32 1
  %476 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %20, i64 0, i32 0, i32 1
  %477 = bitcast i8** %476 to i64*
  %478 = load i64, i64* %477, align 8, !noalias !71
  %479 = bitcast i8** %475 to i64*
  store i64 %478, i64* %479, align 8, !noalias !71
  %480 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %20, i64 0, i32 1, i32 0, i32 0
  %481 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %480, align 8, !noalias !71
  %482 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %11, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %481, %"class.WTF::StringImpl"** %482, align 8, !noalias !71
  %483 = icmp eq %"class.WTF::StringImpl"* %481, null
  br i1 %483, label %501, label %484

484:                                              ; preds = %474
  %485 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %481, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %486 = load atomic i32, i32* %485 monotonic, align 4
  %487 = and i32 %486, 2
  %488 = icmp eq i32 %487, 0
  br i1 %488, label %489, label %501

489:                                              ; preds = %484
  %490 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %481, i64 0, i32 0
  %491 = load i32, i32* %490, align 4
  %492 = zext i32 %491 to i33
  %493 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %492, i33 1) #14
  %494 = extractvalue { i33, i1 } %493, 1
  %495 = extractvalue { i33, i1 } %493, 0
  %496 = icmp slt i33 %495, 0
  %497 = or i1 %494, %496
  br i1 %497, label %498, label %499, !prof !2

498:                                              ; preds = %489
  call void @llvm.trap() #14
  unreachable

499:                                              ; preds = %489
  %500 = trunc i33 %495 to i32
  store i32 %500, i32* %490, align 4
  br label %501

501:                                              ; preds = %474, %484, %499
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.184"* nonnull %19, %"class.WTF::StringAppend.185"* nonnull byval(%"class.WTF::StringAppend.185") align 8 %11, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.7, i64 0, i64 0)) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %449)
  %502 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.184"* nonnull %19)
  %503 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %502, %"class.WTF::StringImpl"** %503, align 8
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %18, i1 zeroext false, i32 0, i32 0)
  %504 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %503, align 8
  %505 = icmp eq %"class.WTF::StringImpl"* %504, null
  br i1 %505, label %519, label %506

506:                                              ; preds = %501
  %507 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %504, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %508 = load atomic i32, i32* %507 monotonic, align 4
  %509 = and i32 %508, 2
  %510 = icmp eq i32 %509, 0
  %511 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %504, i64 0, i32 0
  %512 = load i32, i32* %511, align 4
  br i1 %510, label %513, label %515

513:                                              ; preds = %506
  %514 = add i32 %512, -1
  store i32 %514, i32* %511, align 4
  br label %515

515:                                              ; preds = %513, %506
  %516 = phi i32 [ %514, %513 ], [ %512, %506 ]
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %518, label %519

518:                                              ; preds = %515
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %504) #14
  br label %519

519:                                              ; preds = %501, %515, %518
  %520 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %19, i64 0, i32 0, i32 1, i32 0, i32 0
  %521 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %520, align 8
  %522 = icmp eq %"class.WTF::StringImpl"* %521, null
  br i1 %522, label %536, label %523

523:                                              ; preds = %519
  %524 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %521, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %525 = load atomic i32, i32* %524 monotonic, align 4
  %526 = and i32 %525, 2
  %527 = icmp eq i32 %526, 0
  %528 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %521, i64 0, i32 0
  %529 = load i32, i32* %528, align 4
  br i1 %527, label %530, label %532

530:                                              ; preds = %523
  %531 = add i32 %529, -1
  store i32 %531, i32* %528, align 4
  br label %532

532:                                              ; preds = %530, %523
  %533 = phi i32 [ %531, %530 ], [ %529, %523 ]
  %534 = icmp eq i32 %533, 0
  br i1 %534, label %535, label %536

535:                                              ; preds = %532
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %521) #14
  br label %536

536:                                              ; preds = %535, %532, %519
  %537 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %538 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %537, align 8
  %539 = icmp eq %"class.WTF::StringImpl"* %538, null
  br i1 %539, label %553, label %540

540:                                              ; preds = %536
  %541 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %538, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %542 = load atomic i32, i32* %541 monotonic, align 4
  %543 = and i32 %542, 2
  %544 = icmp eq i32 %543, 0
  %545 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %538, i64 0, i32 0
  %546 = load i32, i32* %545, align 4
  br i1 %544, label %547, label %549

547:                                              ; preds = %540
  %548 = add i32 %546, -1
  store i32 %548, i32* %545, align 4
  br label %549

549:                                              ; preds = %547, %540
  %550 = phi i32 [ %548, %547 ], [ %546, %540 ]
  %551 = icmp eq i32 %550, 0
  br i1 %551, label %552, label %553

552:                                              ; preds = %549
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %538) #14
  br label %553

553:                                              ; preds = %536, %549, %552
  %554 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %480, align 8
  %555 = icmp eq %"class.WTF::StringImpl"* %554, null
  br i1 %555, label %569, label %556

556:                                              ; preds = %553
  %557 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %554, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %558 = load atomic i32, i32* %557 monotonic, align 4
  %559 = and i32 %558, 2
  %560 = icmp eq i32 %559, 0
  %561 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %554, i64 0, i32 0
  %562 = load i32, i32* %561, align 4
  br i1 %560, label %563, label %565

563:                                              ; preds = %556
  %564 = add i32 %562, -1
  store i32 %564, i32* %561, align 4
  br label %565

565:                                              ; preds = %563, %556
  %566 = phi i32 [ %564, %563 ], [ %562, %556 ]
  %567 = icmp eq i32 %566, 0
  br i1 %567, label %568, label %569

568:                                              ; preds = %565
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %554) #14
  br label %569

569:                                              ; preds = %568, %565, %553
  %570 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %453, align 8
  %571 = icmp eq %"class.WTF::StringImpl"* %570, null
  br i1 %571, label %585, label %572

572:                                              ; preds = %569
  %573 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %570, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %574 = load atomic i32, i32* %573 monotonic, align 4
  %575 = and i32 %574, 2
  %576 = icmp eq i32 %575, 0
  %577 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %570, i64 0, i32 0
  %578 = load i32, i32* %577, align 4
  br i1 %576, label %579, label %581

579:                                              ; preds = %572
  %580 = add i32 %578, -1
  store i32 %580, i32* %577, align 4
  br label %581

581:                                              ; preds = %579, %572
  %582 = phi i32 [ %580, %579 ], [ %578, %572 ]
  %583 = icmp eq i32 %582, 0
  br i1 %583, label %584, label %585

584:                                              ; preds = %581
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %570) #14
  br label %585

585:                                              ; preds = %569, %581, %584
  %586 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %21, i64 0, i32 0, i32 1, i32 0, i32 0
  %587 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %586, align 8
  %588 = icmp eq %"class.WTF::StringImpl"* %587, null
  br i1 %588, label %602, label %589

589:                                              ; preds = %585
  %590 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %587, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %591 = load atomic i32, i32* %590 monotonic, align 4
  %592 = and i32 %591, 2
  %593 = icmp eq i32 %592, 0
  %594 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %587, i64 0, i32 0
  %595 = load i32, i32* %594, align 4
  br i1 %593, label %596, label %598

596:                                              ; preds = %589
  %597 = add i32 %595, -1
  store i32 %597, i32* %594, align 4
  br label %598

598:                                              ; preds = %596, %589
  %599 = phi i32 [ %597, %596 ], [ %595, %589 ]
  %600 = icmp eq i32 %599, 0
  br i1 %600, label %601, label %602

601:                                              ; preds = %598
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %587) #14
  br label %602

602:                                              ; preds = %585, %598, %601
  br i1 %335, label %616, label %603

603:                                              ; preds = %602
  %604 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %334, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %605 = load atomic i32, i32* %604 monotonic, align 4
  %606 = and i32 %605, 2
  %607 = icmp eq i32 %606, 0
  %608 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %334, i64 0, i32 0
  %609 = load i32, i32* %608, align 4
  br i1 %607, label %610, label %612

610:                                              ; preds = %603
  %611 = add i32 %609, -1
  store i32 %611, i32* %608, align 4
  br label %612

612:                                              ; preds = %610, %603
  %613 = phi i32 [ %611, %610 ], [ %609, %603 ]
  %614 = icmp eq i32 %613, 0
  br i1 %614, label %615, label %616

615:                                              ; preds = %612
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %334) #14
  br label %616

616:                                              ; preds = %602, %612, %615
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %332) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %331) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %330) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %329) #14
  br label %960

617:                                              ; preds = %320
  %618 = icmp eq i32 %6, 0
  br i1 %618, label %619, label %638

619:                                              ; preds = %617
  %620 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %17) #14
  %621 = ptrtoint %"class.WTF::StringImpl"* %620 to i64
  %622 = bitcast %"class.WTF::String"* %17 to i64*
  %623 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %322, align 8
  store i64 %621, i64* %622, align 8
  %624 = icmp eq %"class.WTF::StringImpl"* %623, null
  br i1 %624, label %640, label %625

625:                                              ; preds = %619
  %626 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %623, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %627 = load atomic i32, i32* %626 monotonic, align 4
  %628 = and i32 %627, 2
  %629 = icmp eq i32 %628, 0
  %630 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %623, i64 0, i32 0
  %631 = load i32, i32* %630, align 4
  br i1 %629, label %632, label %634

632:                                              ; preds = %625
  %633 = add i32 %631, -1
  store i32 %633, i32* %630, align 4
  br label %634

634:                                              ; preds = %632, %625
  %635 = phi i32 [ %633, %632 ], [ %631, %625 ]
  %636 = icmp eq i32 %635, 0
  br i1 %636, label %637, label %638

637:                                              ; preds = %634
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %623) #14
  br label %638

638:                                              ; preds = %617, %637, %634
  %639 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %322, align 8
  br label %640

640:                                              ; preds = %638, %619
  %641 = phi %"class.WTF::StringImpl"* [ %639, %638 ], [ %620, %619 ]
  %642 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %642) #14
  %643 = icmp eq %"class.WTF::StringImpl"* %641, null
  br i1 %643, label %644, label %648

644:                                              ; preds = %640
  %645 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* null, i8** %645, align 8
  %646 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %647 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %646, i64* %647, align 8
  br label %656

648:                                              ; preds = %640
  %649 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 0
  store %"class.WTF::StringImpl"* %641, %"class.WTF::StringImpl"** %649, align 8
  %650 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %641, i64 0, i32 1
  %651 = load i32, i32* %650, align 4
  %652 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %641, i64 1
  %653 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  %654 = bitcast i8** %653 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %652, %"class.WTF::StringImpl"** %654, align 8
  %655 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %656

656:                                              ; preds = %648, %644
  %657 = phi i64 [ %655, %648 ], [ %646, %644 ]
  %658 = phi i32 [ %651, %648 ], [ 0, %644 ]
  %659 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 %658, i32* %659, align 8
  %660 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %660) #14
  %661 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %657, i64* %661, align 8
  %662 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i8** %662, align 8
  %663 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 0, i32* %663, align 8
  %664 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %9, %"class.WTF::StringView"* nonnull dereferenceable(24) %10) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %660) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %642) #14
  br i1 %664, label %665, label %954

665:                                              ; preds = %656
  %666 = bitcast %"class.WTF::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %666) #14
  %667 = bitcast %"class.WTF::StringAppend.184"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %667) #14
  %668 = bitcast %"class.WTF::StringAppend.185"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %668) #14
  %669 = bitcast %"class.WTF::StringAppend.177"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %669) #14
  %670 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %671 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %670, align 8
  %672 = icmp eq %"class.WTF::StringImpl"* %671, null
  br i1 %672, label %748, label %673

673:                                              ; preds = %665
  %674 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %671, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %675 = load atomic i32, i32* %674 monotonic, align 4
  %676 = and i32 %675, 2
  %677 = icmp eq i32 %676, 0
  %678 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %671, i64 0, i32 0
  %679 = load i32, i32* %678, align 4
  br i1 %677, label %680, label %690

680:                                              ; preds = %673
  %681 = zext i32 %679 to i33
  %682 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %681, i33 1) #14
  %683 = extractvalue { i33, i1 } %682, 1
  %684 = extractvalue { i33, i1 } %682, 0
  %685 = icmp slt i33 %684, 0
  %686 = or i1 %683, %685
  br i1 %686, label %687, label %688, !prof !2

687:                                              ; preds = %680
  call void @llvm.trap() #14
  unreachable

688:                                              ; preds = %680
  %689 = trunc i33 %684 to i32
  store i32 %689, i32* %678, align 4
  br label %690

690:                                              ; preds = %688, %673
  %691 = phi i32 [ %689, %688 ], [ %679, %673 ]
  %692 = load atomic i32, i32* %674 monotonic, align 4
  %693 = and i32 %692, 2
  %694 = icmp eq i32 %693, 0
  br i1 %694, label %695, label %705

695:                                              ; preds = %690
  %696 = zext i32 %691 to i33
  %697 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %696, i33 1) #14
  %698 = extractvalue { i33, i1 } %697, 1
  %699 = extractvalue { i33, i1 } %697, 0
  %700 = icmp slt i33 %699, 0
  %701 = or i1 %698, %700
  br i1 %701, label %702, label %703, !prof !2

702:                                              ; preds = %695
  call void @llvm.trap() #14
  unreachable

703:                                              ; preds = %695
  %704 = trunc i33 %699 to i32
  store i32 %704, i32* %678, align 4
  br label %705

705:                                              ; preds = %703, %690
  %706 = phi i32 [ %704, %703 ], [ %691, %690 ]
  %707 = load atomic i32, i32* %674 monotonic, align 4
  %708 = and i32 %707, 2
  %709 = icmp eq i32 %708, 0
  br i1 %709, label %710, label %712

710:                                              ; preds = %705
  %711 = add i32 %706, -1
  store i32 %711, i32* %678, align 4
  br label %712

712:                                              ; preds = %710, %705
  %713 = phi i32 [ %711, %710 ], [ %706, %705 ]
  %714 = icmp eq i32 %713, 0
  br i1 %714, label %715, label %716

715:                                              ; preds = %712
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %671) #14
  br label %716

716:                                              ; preds = %712, %715
  %717 = load atomic i32, i32* %674 monotonic, align 4, !noalias !74
  %718 = and i32 %717, 2
  %719 = icmp eq i32 %718, 0
  %720 = load i32, i32* %678, align 4
  br i1 %719, label %721, label %731

721:                                              ; preds = %716
  %722 = zext i32 %720 to i33
  %723 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %722, i33 1) #14
  %724 = extractvalue { i33, i1 } %723, 1
  %725 = extractvalue { i33, i1 } %723, 0
  %726 = icmp slt i33 %725, 0
  %727 = or i1 %724, %726
  br i1 %727, label %728, label %729, !prof !2

728:                                              ; preds = %721
  call void @llvm.trap() #14, !noalias !74
  unreachable

729:                                              ; preds = %721
  %730 = trunc i33 %725 to i32
  store i32 %730, i32* %678, align 4, !noalias !74
  br label %731

731:                                              ; preds = %716, %729
  %732 = phi i32 [ %730, %729 ], [ %720, %716 ]
  %733 = bitcast %"class.WTF::StringAppend.177"* %25 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.1 to i64), i64* %733, align 8, !alias.scope !74
  %734 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %25, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %671, %"class.WTF::StringImpl"** %734, align 8, !alias.scope !74
  %735 = load atomic i32, i32* %674 monotonic, align 4, !noalias !74
  %736 = and i32 %735, 2
  %737 = icmp eq i32 %736, 0
  br i1 %737, label %738, label %752

738:                                              ; preds = %731
  %739 = zext i32 %732 to i33
  %740 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %739, i33 1) #14
  %741 = extractvalue { i33, i1 } %740, 1
  %742 = extractvalue { i33, i1 } %740, 0
  %743 = icmp slt i33 %742, 0
  %744 = or i1 %741, %743
  br i1 %744, label %745, label %746, !prof !2

745:                                              ; preds = %738
  call void @llvm.trap() #14, !noalias !74
  unreachable

746:                                              ; preds = %738
  %747 = trunc i33 %742 to i32
  store i32 %747, i32* %678, align 4, !noalias !74
  br label %752

748:                                              ; preds = %665
  %749 = bitcast %"class.WTF::StringAppend.177"* %25 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.1 to i64), i64* %749, align 8, !alias.scope !74
  %750 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %25, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %750, align 8, !alias.scope !74
  %751 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %25, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8** %751, align 8, !alias.scope !74
  br label %764

752:                                              ; preds = %746, %731
  %753 = phi i32 [ %747, %746 ], [ %732, %731 ]
  %754 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %25, i64 0, i32 1
  store i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.5, i64 0, i64 0), i8** %754, align 8, !alias.scope !74
  %755 = load atomic i32, i32* %674 monotonic, align 4, !noalias !74
  %756 = and i32 %755, 2
  %757 = icmp eq i32 %756, 0
  br i1 %757, label %758, label %760

758:                                              ; preds = %752
  %759 = add i32 %753, -1
  store i32 %759, i32* %678, align 4, !noalias !74
  br label %760

760:                                              ; preds = %758, %752
  %761 = phi i32 [ %759, %758 ], [ %753, %752 ]
  %762 = icmp eq i32 %761, 0
  br i1 %762, label %763, label %764

763:                                              ; preds = %760
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %671) #14, !noalias !74
  br label %764

764:                                              ; preds = %748, %760, %763
  %765 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %766 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %765, align 8
  %767 = icmp eq %"class.WTF::StringImpl"* %766, null
  br i1 %767, label %785, label %768

768:                                              ; preds = %764
  %769 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %766, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %770 = load atomic i32, i32* %769 monotonic, align 4
  %771 = and i32 %770, 2
  %772 = icmp eq i32 %771, 0
  br i1 %772, label %773, label %785

773:                                              ; preds = %768
  %774 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %766, i64 0, i32 0
  %775 = load i32, i32* %774, align 4
  %776 = zext i32 %775 to i33
  %777 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %776, i33 1) #14
  %778 = extractvalue { i33, i1 } %777, 1
  %779 = extractvalue { i33, i1 } %777, 0
  %780 = icmp slt i33 %779, 0
  %781 = or i1 %778, %780
  br i1 %781, label %782, label %783, !prof !2

782:                                              ; preds = %773
  call void @llvm.trap() #14
  unreachable

783:                                              ; preds = %773
  %784 = trunc i33 %779 to i32
  store i32 %784, i32* %774, align 4
  br label %785

785:                                              ; preds = %764, %768, %783
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.185"* nonnull sret %24, %"class.WTF::StringAppend.177"* nonnull dereferenceable(24) %25, %"class.WTF::StringImpl"* %766)
  %786 = bitcast %"class.WTF::StringAppend.185"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %786)
  %787 = bitcast %"class.WTF::StringAppend.185"* %24 to i64*
  %788 = load i64, i64* %787, align 8, !noalias !77
  %789 = bitcast %"class.WTF::StringAppend.185"* %8 to i64*
  store i64 %788, i64* %789, align 8, !noalias !77
  %790 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %24, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %791 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %790, align 8, !noalias !77
  %792 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %791, %"class.WTF::StringImpl"** %792, align 8, !noalias !77
  %793 = icmp eq %"class.WTF::StringImpl"* %791, null
  br i1 %793, label %811, label %794

794:                                              ; preds = %785
  %795 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %791, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %796 = load atomic i32, i32* %795 monotonic, align 4
  %797 = and i32 %796, 2
  %798 = icmp eq i32 %797, 0
  br i1 %798, label %799, label %811

799:                                              ; preds = %794
  %800 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %791, i64 0, i32 0
  %801 = load i32, i32* %800, align 4
  %802 = zext i32 %801 to i33
  %803 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %802, i33 1) #14
  %804 = extractvalue { i33, i1 } %803, 1
  %805 = extractvalue { i33, i1 } %803, 0
  %806 = icmp slt i33 %805, 0
  %807 = or i1 %804, %806
  br i1 %807, label %808, label %809, !prof !2

808:                                              ; preds = %799
  call void @llvm.trap() #14
  unreachable

809:                                              ; preds = %799
  %810 = trunc i33 %805 to i32
  store i32 %810, i32* %800, align 4
  br label %811

811:                                              ; preds = %809, %794, %785
  %812 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %8, i64 0, i32 0, i32 1
  %813 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %24, i64 0, i32 0, i32 1
  %814 = bitcast i8** %813 to i64*
  %815 = load i64, i64* %814, align 8, !noalias !77
  %816 = bitcast i8** %812 to i64*
  store i64 %815, i64* %816, align 8, !noalias !77
  %817 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %24, i64 0, i32 1, i32 0, i32 0
  %818 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %817, align 8, !noalias !77
  %819 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %8, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %818, %"class.WTF::StringImpl"** %819, align 8, !noalias !77
  %820 = icmp eq %"class.WTF::StringImpl"* %818, null
  br i1 %820, label %838, label %821

821:                                              ; preds = %811
  %822 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %818, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %823 = load atomic i32, i32* %822 monotonic, align 4
  %824 = and i32 %823, 2
  %825 = icmp eq i32 %824, 0
  br i1 %825, label %826, label %838

826:                                              ; preds = %821
  %827 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %818, i64 0, i32 0
  %828 = load i32, i32* %827, align 4
  %829 = zext i32 %828 to i33
  %830 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %829, i33 1) #14
  %831 = extractvalue { i33, i1 } %830, 1
  %832 = extractvalue { i33, i1 } %830, 0
  %833 = icmp slt i33 %832, 0
  %834 = or i1 %831, %833
  br i1 %834, label %835, label %836, !prof !2

835:                                              ; preds = %826
  call void @llvm.trap() #14
  unreachable

836:                                              ; preds = %826
  %837 = trunc i33 %832 to i32
  store i32 %837, i32* %827, align 4
  br label %838

838:                                              ; preds = %811, %821, %836
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.184"* nonnull %23, %"class.WTF::StringAppend.185"* nonnull byval(%"class.WTF::StringAppend.185") align 8 %8, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.9, i64 0, i64 0)) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %786)
  %839 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.184"* nonnull %23)
  %840 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %839, %"class.WTF::StringImpl"** %840, align 8
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %22, i1 zeroext false, i32 0, i32 0)
  %841 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %840, align 8
  %842 = icmp eq %"class.WTF::StringImpl"* %841, null
  br i1 %842, label %856, label %843

843:                                              ; preds = %838
  %844 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %841, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %845 = load atomic i32, i32* %844 monotonic, align 4
  %846 = and i32 %845, 2
  %847 = icmp eq i32 %846, 0
  %848 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %841, i64 0, i32 0
  %849 = load i32, i32* %848, align 4
  br i1 %847, label %850, label %852

850:                                              ; preds = %843
  %851 = add i32 %849, -1
  store i32 %851, i32* %848, align 4
  br label %852

852:                                              ; preds = %850, %843
  %853 = phi i32 [ %851, %850 ], [ %849, %843 ]
  %854 = icmp eq i32 %853, 0
  br i1 %854, label %855, label %856

855:                                              ; preds = %852
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %841) #14
  br label %856

856:                                              ; preds = %838, %852, %855
  %857 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %23, i64 0, i32 0, i32 1, i32 0, i32 0
  %858 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %857, align 8
  %859 = icmp eq %"class.WTF::StringImpl"* %858, null
  br i1 %859, label %873, label %860

860:                                              ; preds = %856
  %861 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %858, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %862 = load atomic i32, i32* %861 monotonic, align 4
  %863 = and i32 %862, 2
  %864 = icmp eq i32 %863, 0
  %865 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %858, i64 0, i32 0
  %866 = load i32, i32* %865, align 4
  br i1 %864, label %867, label %869

867:                                              ; preds = %860
  %868 = add i32 %866, -1
  store i32 %868, i32* %865, align 4
  br label %869

869:                                              ; preds = %867, %860
  %870 = phi i32 [ %868, %867 ], [ %866, %860 ]
  %871 = icmp eq i32 %870, 0
  br i1 %871, label %872, label %873

872:                                              ; preds = %869
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %858) #14
  br label %873

873:                                              ; preds = %872, %869, %856
  %874 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %875 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %874, align 8
  %876 = icmp eq %"class.WTF::StringImpl"* %875, null
  br i1 %876, label %890, label %877

877:                                              ; preds = %873
  %878 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %875, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %879 = load atomic i32, i32* %878 monotonic, align 4
  %880 = and i32 %879, 2
  %881 = icmp eq i32 %880, 0
  %882 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %875, i64 0, i32 0
  %883 = load i32, i32* %882, align 4
  br i1 %881, label %884, label %886

884:                                              ; preds = %877
  %885 = add i32 %883, -1
  store i32 %885, i32* %882, align 4
  br label %886

886:                                              ; preds = %884, %877
  %887 = phi i32 [ %885, %884 ], [ %883, %877 ]
  %888 = icmp eq i32 %887, 0
  br i1 %888, label %889, label %890

889:                                              ; preds = %886
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %875) #14
  br label %890

890:                                              ; preds = %873, %886, %889
  %891 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %817, align 8
  %892 = icmp eq %"class.WTF::StringImpl"* %891, null
  br i1 %892, label %906, label %893

893:                                              ; preds = %890
  %894 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %891, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %895 = load atomic i32, i32* %894 monotonic, align 4
  %896 = and i32 %895, 2
  %897 = icmp eq i32 %896, 0
  %898 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %891, i64 0, i32 0
  %899 = load i32, i32* %898, align 4
  br i1 %897, label %900, label %902

900:                                              ; preds = %893
  %901 = add i32 %899, -1
  store i32 %901, i32* %898, align 4
  br label %902

902:                                              ; preds = %900, %893
  %903 = phi i32 [ %901, %900 ], [ %899, %893 ]
  %904 = icmp eq i32 %903, 0
  br i1 %904, label %905, label %906

905:                                              ; preds = %902
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %891) #14
  br label %906

906:                                              ; preds = %905, %902, %890
  %907 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %790, align 8
  %908 = icmp eq %"class.WTF::StringImpl"* %907, null
  br i1 %908, label %922, label %909

909:                                              ; preds = %906
  %910 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %907, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %911 = load atomic i32, i32* %910 monotonic, align 4
  %912 = and i32 %911, 2
  %913 = icmp eq i32 %912, 0
  %914 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %907, i64 0, i32 0
  %915 = load i32, i32* %914, align 4
  br i1 %913, label %916, label %918

916:                                              ; preds = %909
  %917 = add i32 %915, -1
  store i32 %917, i32* %914, align 4
  br label %918

918:                                              ; preds = %916, %909
  %919 = phi i32 [ %917, %916 ], [ %915, %909 ]
  %920 = icmp eq i32 %919, 0
  br i1 %920, label %921, label %922

921:                                              ; preds = %918
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %907) #14
  br label %922

922:                                              ; preds = %906, %918, %921
  %923 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %25, i64 0, i32 0, i32 1, i32 0, i32 0
  %924 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %923, align 8
  %925 = icmp eq %"class.WTF::StringImpl"* %924, null
  br i1 %925, label %939, label %926

926:                                              ; preds = %922
  %927 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %924, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %928 = load atomic i32, i32* %927 monotonic, align 4
  %929 = and i32 %928, 2
  %930 = icmp eq i32 %929, 0
  %931 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %924, i64 0, i32 0
  %932 = load i32, i32* %931, align 4
  br i1 %930, label %933, label %935

933:                                              ; preds = %926
  %934 = add i32 %932, -1
  store i32 %934, i32* %931, align 4
  br label %935

935:                                              ; preds = %933, %926
  %936 = phi i32 [ %934, %933 ], [ %932, %926 ]
  %937 = icmp eq i32 %936, 0
  br i1 %937, label %938, label %939

938:                                              ; preds = %935
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %924) #14
  br label %939

939:                                              ; preds = %922, %935, %938
  br i1 %672, label %953, label %940

940:                                              ; preds = %939
  %941 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %671, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %942 = load atomic i32, i32* %941 monotonic, align 4
  %943 = and i32 %942, 2
  %944 = icmp eq i32 %943, 0
  %945 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %671, i64 0, i32 0
  %946 = load i32, i32* %945, align 4
  br i1 %944, label %947, label %949

947:                                              ; preds = %940
  %948 = add i32 %946, -1
  store i32 %948, i32* %945, align 4
  br label %949

949:                                              ; preds = %947, %940
  %950 = phi i32 [ %948, %947 ], [ %946, %940 ]
  %951 = icmp eq i32 %950, 0
  br i1 %951, label %952, label %953

952:                                              ; preds = %949
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %671) #14
  br label %953

953:                                              ; preds = %939, %949, %952
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %669) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %668) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %667) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %666) #14
  br i1 %5, label %960, label %954

954:                                              ; preds = %656, %953
  %955 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %955, align 8
  %956 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %957 = bitcast %"class.WTF::String"* %17 to i64*
  %958 = load i64, i64* %957, align 8
  %959 = bitcast %"class.WTF::String"* %956 to i64*
  store i64 %958, i64* %959, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %322, align 8
  br label %977

960:                                              ; preds = %953, %616
  %961 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %961, align 8
  %962 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %322, align 8
  %963 = icmp eq %"class.WTF::StringImpl"* %962, null
  br i1 %963, label %977, label %964

964:                                              ; preds = %960
  %965 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %962, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %966 = load atomic i32, i32* %965 monotonic, align 4
  %967 = and i32 %966, 2
  %968 = icmp eq i32 %967, 0
  %969 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %962, i64 0, i32 0
  %970 = load i32, i32* %969, align 4
  br i1 %968, label %971, label %973

971:                                              ; preds = %964
  %972 = add i32 %970, -1
  store i32 %972, i32* %969, align 4
  br label %973

973:                                              ; preds = %971, %964
  %974 = phi i32 [ %972, %971 ], [ %970, %964 ]
  %975 = icmp eq i32 %974, 0
  br i1 %975, label %976, label %977

976:                                              ; preds = %973
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %962) #14
  br label %977

977:                                              ; preds = %954, %960, %973, %976
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %321) #14
  br label %978

978:                                              ; preds = %977, %318
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.185"* noalias sret, %"class.WTF::StringAppend.177"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.177", align 8
  %5 = bitcast %"class.WTF::StringAppend.177"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.177"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #14
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #14
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #14
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %41
  tail call void @llvm.trap() #14
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.185"* %0, %"class.WTF::StringAppend.177"* nonnull byval(%"class.WTF::StringAppend.177") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.185"* %0, %"class.WTF::StringAppend.177"* nonnull byval(%"class.WTF::StringAppend.177") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #14
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.184"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16*, align 8
  %7 = bitcast %"class.WTF::StringTypeAdapter.276"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #14
  %9 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %4, i8* %9) #14
  %10 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = bitcast %"class.WTF::StringTypeAdapter.276"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #14
  %14 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #14
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %3, i8* %15) #14
  %16 = bitcast %"class.WTF::StringTypeAdapter.276"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #14
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %2, i8* %18) #14
  %19 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %23 = select i1 %21, %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"* %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #14
  br i1 %27, label %28, label %29

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  br label %72

29:                                               ; preds = %1
  %30 = icmp eq %"class.WTF::StringImpl"* %11, null
  %31 = select i1 %30, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  br i1 %35, label %72, label %36

36:                                               ; preds = %29
  %37 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #14
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %38 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.184"* %0)
  %39 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %38, i8** nonnull dereferenceable(8) %5) #14
  %40 = load i8*, i8** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.184"* %0, i8* %40)
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %108, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %59

49:                                               ; preds = %42
  %50 = zext i32 %48 to i33
  %51 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #14
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !2

56:                                               ; preds = %49
  call void @llvm.trap() #14
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %47, align 4
  br label %59

59:                                               ; preds = %42, %57
  %60 = phi i32 [ %58, %57 ], [ %48, %42 ]
  %61 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %62 = load atomic i32, i32* %43 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %67 = add i32 %60, -1
  store i32 %67, i32* %66, align 4
  br label %68

68:                                               ; preds = %65, %59
  %69 = phi i32 [ %67, %65 ], [ %60, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %108

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #14
  br label %108

72:                                               ; preds = %29, %28
  %73 = bitcast i16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #14
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %6, align 8
  %74 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.184"* %0)
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %74, i16** nonnull dereferenceable(8) %6) #14
  %76 = load i16*, i16** %6, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.184"* %0, i16* %76)
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %108, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %95

85:                                               ; preds = %78
  %86 = zext i32 %84 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #14
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !2

92:                                               ; preds = %85
  call void @llvm.trap() #14
  unreachable

93:                                               ; preds = %85
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %83, align 4
  br label %95

95:                                               ; preds = %78, %93
  %96 = phi i32 [ %94, %93 ], [ %84, %78 ]
  %97 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %98 = load atomic i32, i32* %79 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %103 = add i32 %96, -1
  store i32 %103, i32* %102, align 4
  br label %104

104:                                              ; preds = %101, %95
  %105 = phi i32 [ %103, %101 ], [ %96, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #14
  br label %108

108:                                              ; preds = %107, %104, %72, %71, %68, %36
  %109 = phi i8* [ %37, %36 ], [ %37, %68 ], [ %37, %71 ], [ %73, %72 ], [ %73, %104 ], [ %73, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %61, %68 ], [ %61, %71 ], [ 0, %72 ], [ %97, %104 ], [ %97, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #14
  %111 = inttoptr i64 %110 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %111
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink14ManifestParser10ParseColorEPKNS_10JSONObjectERKN3WTF6StringE(%"class.blink::ManifestParser"*, %"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringAppend.184", align 8
  %5 = alloca %"class.WTF::StringAppend.185", align 8
  %6 = alloca %"class.absl::optional.179", align 8
  %7 = alloca %"class.blink::Color", align 4
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::StringAppend.186", align 8
  %10 = alloca %"class.WTF::StringAppend.184", align 8
  %11 = alloca %"class.WTF::StringAppend.185", align 8
  %12 = alloca %"class.WTF::StringAppend.177", align 8
  %13 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  call void @_ZN5blink14ManifestParser11ParseStringEPKNS_10JSONObjectERKN3WTF6StringENS0_8TrimTypeE(%"class.absl::optional.179"* nonnull sret %6, %"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* %1, %"class.WTF::String"* dereferenceable(8) %2, i32 0)
  %14 = load i8, i8* %13, align 8, !range !16
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %430, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.blink::Color"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #14
  %18 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %7, i64 0, i32 0
  store i32 0, i32* %18, align 4
  %19 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %20 = call zeroext i1 @_ZN5blink9CSSParser10ParseColorERNS_5ColorERKN3WTF6StringEb(%"class.blink::Color"* nonnull dereferenceable(4) %7, %"class.WTF::String"* dereferenceable(8) %19, i1 zeroext true) #14
  br i1 %20, label %405, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #14
  %23 = bitcast %"class.WTF::StringAppend.186"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %23) #14
  %24 = bitcast %"class.WTF::StringAppend.184"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #14
  %25 = bitcast %"class.WTF::StringAppend.185"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #14
  %26 = bitcast %"class.WTF::StringAppend.177"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #14
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %105, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #14
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %37
  call void @llvm.trap() #14
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %45, %30
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %62

52:                                               ; preds = %47
  %53 = zext i32 %48 to i33
  %54 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %53, i33 1) #14
  %55 = extractvalue { i33, i1 } %54, 1
  %56 = extractvalue { i33, i1 } %54, 0
  %57 = icmp slt i33 %56, 0
  %58 = or i1 %55, %57
  br i1 %58, label %59, label %60, !prof !2

59:                                               ; preds = %52
  call void @llvm.trap() #14
  unreachable

60:                                               ; preds = %52
  %61 = trunc i33 %56 to i32
  store i32 %61, i32* %35, align 4
  br label %62

62:                                               ; preds = %60, %47
  %63 = phi i32 [ %61, %60 ], [ %48, %47 ]
  %64 = load atomic i32, i32* %31 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  %68 = add i32 %63, -1
  store i32 %68, i32* %35, align 4
  br label %69

69:                                               ; preds = %67, %62
  %70 = phi i32 [ %68, %67 ], [ %63, %62 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #14
  br label %73

73:                                               ; preds = %69, %72
  %74 = load atomic i32, i32* %31 monotonic, align 4, !noalias !80
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = load i32, i32* %35, align 4
  br i1 %76, label %78, label %88

78:                                               ; preds = %73
  %79 = zext i32 %77 to i33
  %80 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %79, i33 1) #14
  %81 = extractvalue { i33, i1 } %80, 1
  %82 = extractvalue { i33, i1 } %80, 0
  %83 = icmp slt i33 %82, 0
  %84 = or i1 %81, %83
  br i1 %84, label %85, label %86, !prof !2

85:                                               ; preds = %78
  call void @llvm.trap() #14, !noalias !80
  unreachable

86:                                               ; preds = %78
  %87 = trunc i33 %82 to i32
  store i32 %87, i32* %35, align 4, !noalias !80
  br label %88

88:                                               ; preds = %73, %86
  %89 = phi i32 [ %87, %86 ], [ %77, %73 ]
  %90 = bitcast %"class.WTF::StringAppend.177"* %12 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.1 to i64), i64* %90, align 8, !alias.scope !80
  %91 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %91, align 8, !alias.scope !80
  %92 = load atomic i32, i32* %31 monotonic, align 4, !noalias !80
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %109

95:                                               ; preds = %88
  %96 = zext i32 %89 to i33
  %97 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %96, i33 1) #14
  %98 = extractvalue { i33, i1 } %97, 1
  %99 = extractvalue { i33, i1 } %97, 0
  %100 = icmp slt i33 %99, 0
  %101 = or i1 %98, %100
  br i1 %101, label %102, label %103, !prof !2

102:                                              ; preds = %95
  call void @llvm.trap() #14, !noalias !80
  unreachable

103:                                              ; preds = %95
  %104 = trunc i33 %99 to i32
  store i32 %104, i32* %35, align 4, !noalias !80
  br label %109

105:                                              ; preds = %21
  %106 = bitcast %"class.WTF::StringAppend.177"* %12 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.1 to i64), i64* %106, align 8, !alias.scope !80
  %107 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %107, align 8, !alias.scope !80
  %108 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8** %108, align 8, !alias.scope !80
  br label %121

109:                                              ; preds = %103, %88
  %110 = phi i32 [ %104, %103 ], [ %89, %88 ]
  %111 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0), i8** %111, align 8, !alias.scope !80
  %112 = load atomic i32, i32* %31 monotonic, align 4, !noalias !80
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %117

115:                                              ; preds = %109
  %116 = add i32 %110, -1
  store i32 %116, i32* %35, align 4, !noalias !80
  br label %117

117:                                              ; preds = %115, %109
  %118 = phi i32 [ %116, %115 ], [ %110, %109 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %121

120:                                              ; preds = %117
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #14, !noalias !80
  br label %121

121:                                              ; preds = %105, %117, %120
  %122 = load i8, i8* %13, align 8, !range !16
  %123 = icmp eq i8 %122, 0
  br i1 %123, label %124, label %125, !prof !2

124:                                              ; preds = %121
  call void @llvm.trap() #14
  unreachable

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %146, label %129

129:                                              ; preds = %125
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %146

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = zext i32 %136 to i33
  %138 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %137, i33 1) #14
  %139 = extractvalue { i33, i1 } %138, 1
  %140 = extractvalue { i33, i1 } %138, 0
  %141 = icmp slt i33 %140, 0
  %142 = or i1 %139, %141
  br i1 %142, label %143, label %144, !prof !2

143:                                              ; preds = %134
  call void @llvm.trap() #14
  unreachable

144:                                              ; preds = %134
  %145 = trunc i33 %140 to i32
  store i32 %145, i32* %135, align 4
  br label %146

146:                                              ; preds = %125, %129, %144
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.185"* nonnull sret %11, %"class.WTF::StringAppend.177"* nonnull dereferenceable(24) %12, %"class.WTF::StringImpl"* %127)
  %147 = bitcast %"class.WTF::StringAppend.185"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %147)
  %148 = bitcast %"class.WTF::StringAppend.185"* %11 to i64*
  %149 = load i64, i64* %148, align 8, !noalias !83
  %150 = bitcast %"class.WTF::StringAppend.185"* %5 to i64*
  store i64 %149, i64* %150, align 8, !noalias !83
  %151 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %11, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %152 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8, !noalias !83
  %153 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %5, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %152, %"class.WTF::StringImpl"** %153, align 8, !noalias !83
  %154 = icmp eq %"class.WTF::StringImpl"* %152, null
  br i1 %154, label %172, label %155

155:                                              ; preds = %146
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load atomic i32, i32* %156 monotonic, align 4
  %158 = and i32 %157, 2
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %172

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %152, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  %163 = zext i32 %162 to i33
  %164 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %163, i33 1) #14
  %165 = extractvalue { i33, i1 } %164, 1
  %166 = extractvalue { i33, i1 } %164, 0
  %167 = icmp slt i33 %166, 0
  %168 = or i1 %165, %167
  br i1 %168, label %169, label %170, !prof !2

169:                                              ; preds = %160
  call void @llvm.trap() #14
  unreachable

170:                                              ; preds = %160
  %171 = trunc i33 %166 to i32
  store i32 %171, i32* %161, align 4
  br label %172

172:                                              ; preds = %170, %155, %146
  %173 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %5, i64 0, i32 0, i32 1
  %174 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %11, i64 0, i32 0, i32 1
  %175 = bitcast i8** %174 to i64*
  %176 = load i64, i64* %175, align 8, !noalias !83
  %177 = bitcast i8** %173 to i64*
  store i64 %176, i64* %177, align 8, !noalias !83
  %178 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %11, i64 0, i32 1, i32 0, i32 0
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %178, align 8, !noalias !83
  %180 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %5, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %179, %"class.WTF::StringImpl"** %180, align 8, !noalias !83
  %181 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %181, label %199, label %182

182:                                              ; preds = %172
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %199

187:                                              ; preds = %182
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = zext i32 %189 to i33
  %191 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %190, i33 1) #14
  %192 = extractvalue { i33, i1 } %191, 1
  %193 = extractvalue { i33, i1 } %191, 0
  %194 = icmp slt i33 %193, 0
  %195 = or i1 %192, %194
  br i1 %195, label %196, label %197, !prof !2

196:                                              ; preds = %187
  call void @llvm.trap() #14
  unreachable

197:                                              ; preds = %187
  %198 = trunc i33 %193 to i32
  store i32 %198, i32* %188, align 4
  br label %199

199:                                              ; preds = %172, %182, %197
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.184"* nonnull %10, %"class.WTF::StringAppend.185"* nonnull byval(%"class.WTF::StringAppend.185") align 8 %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0)) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %147)
  %200 = bitcast %"class.WTF::StringAppend.184"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %200)
  %201 = bitcast %"class.WTF::StringAppend.184"* %10 to i64*
  %202 = load i64, i64* %201, align 8, !noalias !86
  %203 = bitcast %"class.WTF::StringAppend.184"* %4 to i64*
  store i64 %202, i64* %203, align 8, !noalias !86
  %204 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %204, align 8, !noalias !86
  %206 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %205, %"class.WTF::StringImpl"** %206, align 8, !noalias !86
  %207 = icmp eq %"class.WTF::StringImpl"* %205, null
  br i1 %207, label %225, label %208

208:                                              ; preds = %199
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %210 = load atomic i32, i32* %209 monotonic, align 4
  %211 = and i32 %210, 2
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %225

213:                                              ; preds = %208
  %214 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %205, i64 0, i32 0
  %215 = load i32, i32* %214, align 4
  %216 = zext i32 %215 to i33
  %217 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %216, i33 1) #14
  %218 = extractvalue { i33, i1 } %217, 1
  %219 = extractvalue { i33, i1 } %217, 0
  %220 = icmp slt i33 %219, 0
  %221 = or i1 %218, %220
  br i1 %221, label %222, label %223, !prof !2

222:                                              ; preds = %213
  call void @llvm.trap() #14
  unreachable

223:                                              ; preds = %213
  %224 = trunc i33 %219 to i32
  store i32 %224, i32* %214, align 4
  br label %225

225:                                              ; preds = %223, %208, %199
  %226 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %4, i64 0, i32 0, i32 0, i32 1
  %227 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %10, i64 0, i32 0, i32 0, i32 1
  %228 = bitcast i8** %227 to i64*
  %229 = load i64, i64* %228, align 8, !noalias !86
  %230 = bitcast i8** %226 to i64*
  store i64 %229, i64* %230, align 8, !noalias !86
  %231 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %232 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %231, align 8, !noalias !86
  %233 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %232, %"class.WTF::StringImpl"** %233, align 8, !noalias !86
  %234 = icmp eq %"class.WTF::StringImpl"* %232, null
  br i1 %234, label %252, label %235

235:                                              ; preds = %225
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %252

240:                                              ; preds = %235
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %232, i64 0, i32 0
  %242 = load i32, i32* %241, align 4
  %243 = zext i32 %242 to i33
  %244 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %243, i33 1) #14
  %245 = extractvalue { i33, i1 } %244, 1
  %246 = extractvalue { i33, i1 } %244, 0
  %247 = icmp slt i33 %246, 0
  %248 = or i1 %245, %247
  br i1 %248, label %249, label %250, !prof !2

249:                                              ; preds = %240
  call void @llvm.trap() #14
  unreachable

250:                                              ; preds = %240
  %251 = trunc i33 %246 to i32
  store i32 %251, i32* %241, align 4
  br label %252

252:                                              ; preds = %225, %235, %250
  %253 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %4, i64 0, i32 1
  %254 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %10, i64 0, i32 1
  %255 = bitcast i8** %254 to i64*
  %256 = load i64, i64* %255, align 8, !noalias !86
  %257 = bitcast i8** %253 to i64*
  store i64 %256, i64* %257, align 8, !noalias !86
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EC2ES7_S2_(%"class.WTF::StringAppend.186"* nonnull %9, %"class.WTF::StringAppend.184"* nonnull byval(%"class.WTF::StringAppend.184") align 8 %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i64 0, i64 0)) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %200)
  %258 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EcvS3_Ev(%"class.WTF::StringAppend.186"* nonnull %9)
  %259 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %258, %"class.WTF::StringImpl"** %259, align 8
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %8, i1 zeroext false, i32 0, i32 0)
  %260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %259, align 8
  %261 = icmp eq %"class.WTF::StringImpl"* %260, null
  br i1 %261, label %275, label %262

262:                                              ; preds = %252
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 0
  %268 = load i32, i32* %267, align 4
  br i1 %266, label %269, label %271

269:                                              ; preds = %262
  %270 = add i32 %268, -1
  store i32 %270, i32* %267, align 4
  br label %271

271:                                              ; preds = %269, %262
  %272 = phi i32 [ %270, %269 ], [ %268, %262 ]
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %275

274:                                              ; preds = %271
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %260) #14
  br label %275

275:                                              ; preds = %252, %271, %274
  %276 = getelementptr inbounds %"class.WTF::StringAppend.186", %"class.WTF::StringAppend.186"* %9, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %277 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %276, align 8
  %278 = icmp eq %"class.WTF::StringImpl"* %277, null
  br i1 %278, label %292, label %279

279:                                              ; preds = %275
  %280 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %277, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %281 = load atomic i32, i32* %280 monotonic, align 4
  %282 = and i32 %281, 2
  %283 = icmp eq i32 %282, 0
  %284 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %277, i64 0, i32 0
  %285 = load i32, i32* %284, align 4
  br i1 %283, label %286, label %288

286:                                              ; preds = %279
  %287 = add i32 %285, -1
  store i32 %287, i32* %284, align 4
  br label %288

288:                                              ; preds = %286, %279
  %289 = phi i32 [ %287, %286 ], [ %285, %279 ]
  %290 = icmp eq i32 %289, 0
  br i1 %290, label %291, label %292

291:                                              ; preds = %288
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %277) #14
  br label %292

292:                                              ; preds = %291, %288, %275
  %293 = getelementptr inbounds %"class.WTF::StringAppend.186", %"class.WTF::StringAppend.186"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %294 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %293, align 8
  %295 = icmp eq %"class.WTF::StringImpl"* %294, null
  br i1 %295, label %309, label %296

296:                                              ; preds = %292
  %297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %294, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %298 = load atomic i32, i32* %297 monotonic, align 4
  %299 = and i32 %298, 2
  %300 = icmp eq i32 %299, 0
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %294, i64 0, i32 0
  %302 = load i32, i32* %301, align 4
  br i1 %300, label %303, label %305

303:                                              ; preds = %296
  %304 = add i32 %302, -1
  store i32 %304, i32* %301, align 4
  br label %305

305:                                              ; preds = %303, %296
  %306 = phi i32 [ %304, %303 ], [ %302, %296 ]
  %307 = icmp eq i32 %306, 0
  br i1 %307, label %308, label %309

308:                                              ; preds = %305
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %294) #14
  br label %309

309:                                              ; preds = %292, %305, %308
  %310 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %231, align 8
  %311 = icmp eq %"class.WTF::StringImpl"* %310, null
  br i1 %311, label %325, label %312

312:                                              ; preds = %309
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %314 = load atomic i32, i32* %313 monotonic, align 4
  %315 = and i32 %314, 2
  %316 = icmp eq i32 %315, 0
  %317 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %310, i64 0, i32 0
  %318 = load i32, i32* %317, align 4
  br i1 %316, label %319, label %321

319:                                              ; preds = %312
  %320 = add i32 %318, -1
  store i32 %320, i32* %317, align 4
  br label %321

321:                                              ; preds = %319, %312
  %322 = phi i32 [ %320, %319 ], [ %318, %312 ]
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %324, label %325

324:                                              ; preds = %321
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %310) #14
  br label %325

325:                                              ; preds = %324, %321, %309
  %326 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %204, align 8
  %327 = icmp eq %"class.WTF::StringImpl"* %326, null
  br i1 %327, label %341, label %328

328:                                              ; preds = %325
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %326, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %330 = load atomic i32, i32* %329 monotonic, align 4
  %331 = and i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %326, i64 0, i32 0
  %334 = load i32, i32* %333, align 4
  br i1 %332, label %335, label %337

335:                                              ; preds = %328
  %336 = add i32 %334, -1
  store i32 %336, i32* %333, align 4
  br label %337

337:                                              ; preds = %335, %328
  %338 = phi i32 [ %336, %335 ], [ %334, %328 ]
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %341

340:                                              ; preds = %337
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %326) #14
  br label %341

341:                                              ; preds = %325, %337, %340
  %342 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %178, align 8
  %343 = icmp eq %"class.WTF::StringImpl"* %342, null
  br i1 %343, label %357, label %344

344:                                              ; preds = %341
  %345 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %346 = load atomic i32, i32* %345 monotonic, align 4
  %347 = and i32 %346, 2
  %348 = icmp eq i32 %347, 0
  %349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %342, i64 0, i32 0
  %350 = load i32, i32* %349, align 4
  br i1 %348, label %351, label %353

351:                                              ; preds = %344
  %352 = add i32 %350, -1
  store i32 %352, i32* %349, align 4
  br label %353

353:                                              ; preds = %351, %344
  %354 = phi i32 [ %352, %351 ], [ %350, %344 ]
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %356, label %357

356:                                              ; preds = %353
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %342) #14
  br label %357

357:                                              ; preds = %356, %353, %341
  %358 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %151, align 8
  %359 = icmp eq %"class.WTF::StringImpl"* %358, null
  br i1 %359, label %373, label %360

360:                                              ; preds = %357
  %361 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %358, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %362 = load atomic i32, i32* %361 monotonic, align 4
  %363 = and i32 %362, 2
  %364 = icmp eq i32 %363, 0
  %365 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %358, i64 0, i32 0
  %366 = load i32, i32* %365, align 4
  br i1 %364, label %367, label %369

367:                                              ; preds = %360
  %368 = add i32 %366, -1
  store i32 %368, i32* %365, align 4
  br label %369

369:                                              ; preds = %367, %360
  %370 = phi i32 [ %368, %367 ], [ %366, %360 ]
  %371 = icmp eq i32 %370, 0
  br i1 %371, label %372, label %373

372:                                              ; preds = %369
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %358) #14
  br label %373

373:                                              ; preds = %357, %369, %372
  %374 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %375 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %374, align 8
  %376 = icmp eq %"class.WTF::StringImpl"* %375, null
  br i1 %376, label %390, label %377

377:                                              ; preds = %373
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %379 = load atomic i32, i32* %378 monotonic, align 4
  %380 = and i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 0
  %383 = load i32, i32* %382, align 4
  br i1 %381, label %384, label %386

384:                                              ; preds = %377
  %385 = add i32 %383, -1
  store i32 %385, i32* %382, align 4
  br label %386

386:                                              ; preds = %384, %377
  %387 = phi i32 [ %385, %384 ], [ %383, %377 ]
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %389, label %390

389:                                              ; preds = %386
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %375) #14
  br label %390

390:                                              ; preds = %373, %386, %389
  br i1 %29, label %404, label %391

391:                                              ; preds = %390
  %392 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %393 = load atomic i32, i32* %392 monotonic, align 4
  %394 = and i32 %393, 2
  %395 = icmp eq i32 %394, 0
  %396 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %397 = load i32, i32* %396, align 4
  br i1 %395, label %398, label %400

398:                                              ; preds = %391
  %399 = add i32 %397, -1
  store i32 %399, i32* %396, align 4
  br label %400

400:                                              ; preds = %398, %391
  %401 = phi i32 [ %399, %398 ], [ %397, %391 ]
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %403, label %404

403:                                              ; preds = %400
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #14
  br label %404

404:                                              ; preds = %390, %400, %403
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #14
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %23) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #14
  br label %407

405:                                              ; preds = %16
  %406 = load i32, i32* %18, align 4
  br label %407

407:                                              ; preds = %404, %405
  %408 = phi i64 [ 1, %405 ], [ 0, %404 ]
  %409 = phi i32 [ %406, %405 ], [ undef, %404 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #14
  %410 = load i8, i8* %13, align 8, !range !16
  %411 = icmp eq i8 %410, 0
  br i1 %411, label %430, label %412

412:                                              ; preds = %407
  %413 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %414 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %413, align 8
  %415 = icmp eq %"class.WTF::StringImpl"* %414, null
  br i1 %415, label %429, label %416

416:                                              ; preds = %412
  %417 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %414, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %418 = load atomic i32, i32* %417 monotonic, align 4
  %419 = and i32 %418, 2
  %420 = icmp eq i32 %419, 0
  %421 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %414, i64 0, i32 0
  %422 = load i32, i32* %421, align 4
  br i1 %420, label %423, label %425

423:                                              ; preds = %416
  %424 = add i32 %422, -1
  store i32 %424, i32* %421, align 4
  br label %425

425:                                              ; preds = %423, %416
  %426 = phi i32 [ %424, %423 ], [ %422, %416 ]
  %427 = icmp eq i32 %426, 0
  br i1 %427, label %428, label %429

428:                                              ; preds = %425
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %414) #14
  br label %429

429:                                              ; preds = %428, %425, %412
  store i8 0, i8* %13, align 8
  br label %430

430:                                              ; preds = %3, %407, %429
  %431 = phi i32 [ %409, %407 ], [ %409, %429 ], [ undef, %3 ]
  %432 = phi i64 [ %408, %407 ], [ %408, %429 ], [ 0, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #14
  %433 = zext i32 %431 to i64
  %434 = shl nuw i64 %433, 32
  %435 = and i64 %432, 255
  %436 = or i64 %434, %435
  ret i64 %436
}

declare zeroext i1 @_ZN5blink9CSSParser10ParseColorERNS_5ColorERKN3WTF6StringEb(%"class.blink::Color"* dereferenceable(4), %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EcvS3_Ev(%"class.WTF::StringAppend.186"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %7 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %8 = alloca i8*, align 8
  %9 = alloca i16*, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.186", %"class.WTF::StringAppend.186"* %0, i64 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.276"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.WTF::StringAppend.186", %"class.WTF::StringAppend.186"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #14
  %13 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %7, i8* %13) #14
  %14 = bitcast %"class.WTF::StringTypeAdapter.276"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #14
  %15 = getelementptr inbounds %"class.WTF::StringAppend.186", %"class.WTF::StringAppend.186"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #14
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %4, i8* %16) #14
  %17 = getelementptr inbounds %"class.WTF::StringAppend.186", %"class.WTF::StringAppend.186"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %20 = bitcast %"class.WTF::StringTypeAdapter.276"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #14
  %21 = getelementptr inbounds %"class.WTF::StringAppend.186", %"class.WTF::StringAppend.186"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false) #14
  %22 = load i8*, i8** %21, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %3, i8* %22) #14
  %23 = bitcast %"class.WTF::StringTypeAdapter.276"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #14
  %24 = getelementptr inbounds %"class.WTF::StringAppend.186", %"class.WTF::StringAppend.186"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false) #14
  %25 = load i8*, i8** %24, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %2, i8* %25) #14
  %26 = getelementptr inbounds %"class.WTF::StringAppend.186", %"class.WTF::StringAppend.186"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %30 = select i1 %28, %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"* %27
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #14
  br i1 %34, label %35, label %36

35:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #14
  br label %84

36:                                               ; preds = %1
  %37 = icmp eq %"class.WTF::StringImpl"* %18, null
  %38 = select i1 %37, %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"* %18
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #14
  br i1 %42, label %84, label %43

43:                                               ; preds = %36
  %44 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #14
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %45 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_E6lengthEv(%"class.WTF::StringAppend.186"* %0)
  %46 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %45, i8** nonnull dereferenceable(8) %8) #14
  %47 = load i8*, i8** %8, align 8
  %48 = bitcast %"class.WTF::StringTypeAdapter.276"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 16, i1 false) #14
  %49 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %6, i8* %49) #14
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.184"* %10, i8* %47) #14
  %50 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.184"* %10) #14
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %47, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.276"* nonnull %6, i8* %52) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #14
  %53 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %53, label %125, label %54

54:                                               ; preds = %43
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %71

61:                                               ; preds = %54
  %62 = zext i32 %60 to i33
  %63 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %62, i33 1) #14
  %64 = extractvalue { i33, i1 } %63, 1
  %65 = extractvalue { i33, i1 } %63, 0
  %66 = icmp slt i33 %65, 0
  %67 = or i1 %64, %66
  br i1 %67, label %68, label %69, !prof !2

68:                                               ; preds = %61
  call void @llvm.trap() #14
  unreachable

69:                                               ; preds = %61
  %70 = trunc i33 %65 to i32
  store i32 %70, i32* %59, align 4
  br label %71

71:                                               ; preds = %54, %69
  %72 = phi i32 [ %70, %69 ], [ %60, %54 ]
  %73 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  %74 = load atomic i32, i32* %55 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %79 = add i32 %72, -1
  store i32 %79, i32* %78, align 4
  br label %80

80:                                               ; preds = %77, %71
  %81 = phi i32 [ %79, %77 ], [ %72, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %125

83:                                               ; preds = %80
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #14
  br label %125

84:                                               ; preds = %36, %35
  %85 = bitcast i16** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #14
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %9, align 8
  %86 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_E6lengthEv(%"class.WTF::StringAppend.186"* %0)
  %87 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %86, i16** nonnull dereferenceable(8) %9) #14
  %88 = load i16*, i16** %9, align 8
  %89 = bitcast %"class.WTF::StringTypeAdapter.276"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 16, i1 false) #14
  %90 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %5, i8* %90) #14
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.184"* %10, i16* %88) #14
  %91 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.184"* %10) #14
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i16, i16* %88, i64 %92
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.276"* nonnull %5, i16* %93) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #14
  %94 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %94, label %125, label %95

95:                                               ; preds = %84
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %112

102:                                              ; preds = %95
  %103 = zext i32 %101 to i33
  %104 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %103, i33 1) #14
  %105 = extractvalue { i33, i1 } %104, 1
  %106 = extractvalue { i33, i1 } %104, 0
  %107 = icmp slt i33 %106, 0
  %108 = or i1 %105, %107
  br i1 %108, label %109, label %110, !prof !2

109:                                              ; preds = %102
  call void @llvm.trap() #14
  unreachable

110:                                              ; preds = %102
  %111 = trunc i33 %106 to i32
  store i32 %111, i32* %100, align 4
  br label %112

112:                                              ; preds = %95, %110
  %113 = phi i32 [ %111, %110 ], [ %101, %95 ]
  %114 = ptrtoint %"class.WTF::StringImpl"* %87 to i64
  %115 = load atomic i32, i32* %96 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %120 = add i32 %113, -1
  store i32 %120, i32* %119, align 4
  br label %121

121:                                              ; preds = %118, %112
  %122 = phi i32 [ %120, %118 ], [ %113, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #14
  br label %125

125:                                              ; preds = %124, %121, %84, %83, %80, %43
  %126 = phi i8* [ %44, %43 ], [ %44, %80 ], [ %44, %83 ], [ %85, %84 ], [ %85, %121 ], [ %85, %124 ]
  %127 = phi i64 [ 0, %43 ], [ %73, %80 ], [ %73, %83 ], [ 0, %84 ], [ %114, %121 ], [ %114, %124 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #14
  %128 = inttoptr i64 %127 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %128
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser8ParseURLEPKNS_10JSONObjectERKN3WTF6StringERKNS_4KURLENS0_20ParseURLRestrictionsE(%"class.blink::KURL"* noalias sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), i32) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.absl::optional.179", align 8
  %8 = alloca %"class.blink::KURL", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::StringAppend.177", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::StringAppend.177", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::StringAppend.177", align 8
  %15 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  call void @_ZN5blink14ManifestParser11ParseStringEPKNS_10JSONObjectERKN3WTF6StringENS0_8TrimTypeE(%"class.absl::optional.179"* nonnull sret %7, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* %2, %"class.WTF::String"* dereferenceable(8) %3, i32 1)
  %16 = load i8, i8* %15, align 8, !range !16
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  tail call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %0) #14
  br label %498

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %20) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 112, i1 false)
  %21 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"* nonnull %8, %"class.blink::KURL"* dereferenceable(112) %4, %"class.WTF::String"* dereferenceable(8) %21) #14
  %22 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %8) #14
  br i1 %22, label %170, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #14
  %25 = bitcast %"class.WTF::StringAppend.177"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #14
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %104, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %46

36:                                               ; preds = %29
  %37 = zext i32 %35 to i33
  %38 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #14
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %36
  call void @llvm.trap() #14
  unreachable

44:                                               ; preds = %36
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %34, align 4
  br label %46

46:                                               ; preds = %44, %29
  %47 = phi i32 [ %45, %44 ], [ %35, %29 ]
  %48 = load atomic i32, i32* %30 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %61

51:                                               ; preds = %46
  %52 = zext i32 %47 to i33
  %53 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %52, i33 1) #14
  %54 = extractvalue { i33, i1 } %53, 1
  %55 = extractvalue { i33, i1 } %53, 0
  %56 = icmp slt i33 %55, 0
  %57 = or i1 %54, %56
  br i1 %57, label %58, label %59, !prof !2

58:                                               ; preds = %51
  call void @llvm.trap() #14
  unreachable

59:                                               ; preds = %51
  %60 = trunc i33 %55 to i32
  store i32 %60, i32* %34, align 4
  br label %61

61:                                               ; preds = %59, %46
  %62 = phi i32 [ %60, %59 ], [ %47, %46 ]
  %63 = load atomic i32, i32* %30 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %61
  %67 = add i32 %62, -1
  store i32 %67, i32* %34, align 4
  br label %68

68:                                               ; preds = %66, %61
  %69 = phi i32 [ %67, %66 ], [ %62, %61 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #14
  br label %72

72:                                               ; preds = %68, %71
  %73 = load atomic i32, i32* %30 monotonic, align 4, !noalias !89
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = load i32, i32* %34, align 4
  br i1 %75, label %77, label %87

77:                                               ; preds = %72
  %78 = zext i32 %76 to i33
  %79 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %78, i33 1) #14
  %80 = extractvalue { i33, i1 } %79, 1
  %81 = extractvalue { i33, i1 } %79, 0
  %82 = icmp slt i33 %81, 0
  %83 = or i1 %80, %82
  br i1 %83, label %84, label %85, !prof !2

84:                                               ; preds = %77
  call void @llvm.trap() #14, !noalias !89
  unreachable

85:                                               ; preds = %77
  %86 = trunc i33 %81 to i32
  store i32 %86, i32* %34, align 4, !noalias !89
  br label %87

87:                                               ; preds = %72, %85
  %88 = phi i32 [ %86, %85 ], [ %76, %72 ]
  %89 = bitcast %"class.WTF::StringAppend.177"* %10 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.1 to i64), i64* %89, align 8, !alias.scope !89
  %90 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %90, align 8, !alias.scope !89
  %91 = load atomic i32, i32* %30 monotonic, align 4, !noalias !89
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %108

94:                                               ; preds = %87
  %95 = zext i32 %88 to i33
  %96 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #14
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !2

101:                                              ; preds = %94
  call void @llvm.trap() #14, !noalias !89
  unreachable

102:                                              ; preds = %94
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %34, align 4, !noalias !89
  br label %108

104:                                              ; preds = %23
  %105 = bitcast %"class.WTF::StringAppend.177"* %10 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.1 to i64), i64* %105, align 8, !alias.scope !89
  %106 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %106, align 8, !alias.scope !89
  %107 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0), i8** %107, align 8, !alias.scope !89
  br label %120

108:                                              ; preds = %102, %87
  %109 = phi i32 [ %103, %102 ], [ %88, %87 ]
  %110 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %10, i64 0, i32 1
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0), i8** %110, align 8, !alias.scope !89
  %111 = load atomic i32, i32* %30 monotonic, align 4, !noalias !89
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %108
  %115 = add i32 %109, -1
  store i32 %115, i32* %34, align 4, !noalias !89
  br label %116

116:                                              ; preds = %114, %108
  %117 = phi i32 [ %115, %114 ], [ %109, %108 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #14, !noalias !89
  br label %120

120:                                              ; preds = %104, %116, %119
  %121 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.177"* nonnull %10)
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %121, %"class.WTF::StringImpl"** %122, align 8
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %9, i1 zeroext false, i32 0, i32 0)
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #14
  br label %138

138:                                              ; preds = %120, %134, %137
  %139 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %140 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %139, align 8
  %141 = icmp eq %"class.WTF::StringImpl"* %140, null
  br i1 %141, label %155, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %144 = load atomic i32, i32* %143 monotonic, align 4
  %145 = and i32 %144, 2
  %146 = icmp eq i32 %145, 0
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %140, i64 0, i32 0
  %148 = load i32, i32* %147, align 4
  br i1 %146, label %149, label %151

149:                                              ; preds = %142
  %150 = add i32 %148, -1
  store i32 %150, i32* %147, align 4
  br label %151

151:                                              ; preds = %149, %142
  %152 = phi i32 [ %150, %149 ], [ %148, %142 ]
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %154, label %155

154:                                              ; preds = %151
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %140) #14
  br label %155

155:                                              ; preds = %138, %151, %154
  br i1 %28, label %169, label %156

156:                                              ; preds = %155
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #14
  br label %169

169:                                              ; preds = %155, %165, %168
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #14
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %0) #14
  br label %477

170:                                              ; preds = %19
  switch i32 %5, label %476 [
    i32 0, label %171
    i32 1, label %172
    i32 2, label %323
  ]

171:                                              ; preds = %170
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %0, %"class.blink::KURL"* nonnull dereferenceable(112) %8) #14
  br label %477

172:                                              ; preds = %170
  %173 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %1, i64 0, i32 2
  %174 = call zeroext i1 @_ZN5blink14SecurityOrigin13AreSameOriginERKNS_4KURLES3_(%"class.blink::KURL"* nonnull dereferenceable(112) %8, %"class.blink::KURL"* dereferenceable(112) %173) #14
  br i1 %174, label %322, label %175

175:                                              ; preds = %172
  %176 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #14
  %177 = bitcast %"class.WTF::StringAppend.177"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %177) #14
  %178 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %179 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %178, align 8
  %180 = icmp eq %"class.WTF::StringImpl"* %179, null
  br i1 %180, label %256, label %181

181:                                              ; preds = %175
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 2
  %185 = icmp eq i32 %184, 0
  %186 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %187 = load i32, i32* %186, align 4
  br i1 %185, label %188, label %198

188:                                              ; preds = %181
  %189 = zext i32 %187 to i33
  %190 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %189, i33 1) #14
  %191 = extractvalue { i33, i1 } %190, 1
  %192 = extractvalue { i33, i1 } %190, 0
  %193 = icmp slt i33 %192, 0
  %194 = or i1 %191, %193
  br i1 %194, label %195, label %196, !prof !2

195:                                              ; preds = %188
  call void @llvm.trap() #14
  unreachable

196:                                              ; preds = %188
  %197 = trunc i33 %192 to i32
  store i32 %197, i32* %186, align 4
  br label %198

198:                                              ; preds = %196, %181
  %199 = phi i32 [ %197, %196 ], [ %187, %181 ]
  %200 = load atomic i32, i32* %182 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %213

203:                                              ; preds = %198
  %204 = zext i32 %199 to i33
  %205 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %204, i33 1) #14
  %206 = extractvalue { i33, i1 } %205, 1
  %207 = extractvalue { i33, i1 } %205, 0
  %208 = icmp slt i33 %207, 0
  %209 = or i1 %206, %208
  br i1 %209, label %210, label %211, !prof !2

210:                                              ; preds = %203
  call void @llvm.trap() #14
  unreachable

211:                                              ; preds = %203
  %212 = trunc i33 %207 to i32
  store i32 %212, i32* %186, align 4
  br label %213

213:                                              ; preds = %211, %198
  %214 = phi i32 [ %212, %211 ], [ %199, %198 ]
  %215 = load atomic i32, i32* %182 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %220

218:                                              ; preds = %213
  %219 = add i32 %214, -1
  store i32 %219, i32* %186, align 4
  br label %220

220:                                              ; preds = %218, %213
  %221 = phi i32 [ %219, %218 ], [ %214, %213 ]
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #14
  br label %224

224:                                              ; preds = %220, %223
  %225 = load atomic i32, i32* %182 monotonic, align 4, !noalias !92
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = load i32, i32* %186, align 4
  br i1 %227, label %229, label %239

229:                                              ; preds = %224
  %230 = zext i32 %228 to i33
  %231 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %230, i33 1) #14
  %232 = extractvalue { i33, i1 } %231, 1
  %233 = extractvalue { i33, i1 } %231, 0
  %234 = icmp slt i33 %233, 0
  %235 = or i1 %232, %234
  br i1 %235, label %236, label %237, !prof !2

236:                                              ; preds = %229
  call void @llvm.trap() #14, !noalias !92
  unreachable

237:                                              ; preds = %229
  %238 = trunc i33 %233 to i32
  store i32 %238, i32* %186, align 4, !noalias !92
  br label %239

239:                                              ; preds = %224, %237
  %240 = phi i32 [ %238, %237 ], [ %228, %224 ]
  %241 = bitcast %"class.WTF::StringAppend.177"* %12 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.1 to i64), i64* %241, align 8, !alias.scope !92
  %242 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %179, %"class.WTF::StringImpl"** %242, align 8, !alias.scope !92
  %243 = load atomic i32, i32* %182 monotonic, align 4, !noalias !92
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %246, label %260

246:                                              ; preds = %239
  %247 = zext i32 %240 to i33
  %248 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %247, i33 1) #14
  %249 = extractvalue { i33, i1 } %248, 1
  %250 = extractvalue { i33, i1 } %248, 0
  %251 = icmp slt i33 %250, 0
  %252 = or i1 %249, %251
  br i1 %252, label %253, label %254, !prof !2

253:                                              ; preds = %246
  call void @llvm.trap() #14, !noalias !92
  unreachable

254:                                              ; preds = %246
  %255 = trunc i33 %250 to i32
  store i32 %255, i32* %186, align 4, !noalias !92
  br label %260

256:                                              ; preds = %175
  %257 = bitcast %"class.WTF::StringAppend.177"* %12 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.1 to i64), i64* %257, align 8, !alias.scope !92
  %258 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %258, align 8, !alias.scope !92
  %259 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.14, i64 0, i64 0), i8** %259, align 8, !alias.scope !92
  br label %272

260:                                              ; preds = %254, %239
  %261 = phi i32 [ %255, %254 ], [ %240, %239 ]
  %262 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.14, i64 0, i64 0), i8** %262, align 8, !alias.scope !92
  %263 = load atomic i32, i32* %182 monotonic, align 4, !noalias !92
  %264 = and i32 %263, 2
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %268

266:                                              ; preds = %260
  %267 = add i32 %261, -1
  store i32 %267, i32* %186, align 4, !noalias !92
  br label %268

268:                                              ; preds = %266, %260
  %269 = phi i32 [ %267, %266 ], [ %261, %260 ]
  %270 = icmp eq i32 %269, 0
  br i1 %270, label %271, label %272

271:                                              ; preds = %268
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #14, !noalias !92
  br label %272

272:                                              ; preds = %256, %268, %271
  %273 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.177"* nonnull %12)
  %274 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %273, %"class.WTF::StringImpl"** %274, align 8
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %11, i1 zeroext false, i32 0, i32 0)
  %275 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %274, align 8
  %276 = icmp eq %"class.WTF::StringImpl"* %275, null
  br i1 %276, label %290, label %277

277:                                              ; preds = %272
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = and i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  br i1 %281, label %284, label %286

284:                                              ; preds = %277
  %285 = add i32 %283, -1
  store i32 %285, i32* %282, align 4
  br label %286

286:                                              ; preds = %284, %277
  %287 = phi i32 [ %285, %284 ], [ %283, %277 ]
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %290

289:                                              ; preds = %286
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %275) #14
  br label %290

290:                                              ; preds = %272, %286, %289
  %291 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %292 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %291, align 8
  %293 = icmp eq %"class.WTF::StringImpl"* %292, null
  br i1 %293, label %307, label %294

294:                                              ; preds = %290
  %295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %296 = load atomic i32, i32* %295 monotonic, align 4
  %297 = and i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 0
  %300 = load i32, i32* %299, align 4
  br i1 %298, label %301, label %303

301:                                              ; preds = %294
  %302 = add i32 %300, -1
  store i32 %302, i32* %299, align 4
  br label %303

303:                                              ; preds = %301, %294
  %304 = phi i32 [ %302, %301 ], [ %300, %294 ]
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %307

306:                                              ; preds = %303
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %292) #14
  br label %307

307:                                              ; preds = %290, %303, %306
  br i1 %180, label %321, label %308

308:                                              ; preds = %307
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %310 = load atomic i32, i32* %309 monotonic, align 4
  %311 = and i32 %310, 2
  %312 = icmp eq i32 %311, 0
  %313 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %179, i64 0, i32 0
  %314 = load i32, i32* %313, align 4
  br i1 %312, label %315, label %317

315:                                              ; preds = %308
  %316 = add i32 %314, -1
  store i32 %316, i32* %313, align 4
  br label %317

317:                                              ; preds = %315, %308
  %318 = phi i32 [ %316, %315 ], [ %314, %308 ]
  %319 = icmp eq i32 %318, 0
  br i1 %319, label %320, label %321

320:                                              ; preds = %317
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #14
  br label %321

321:                                              ; preds = %307, %317, %320
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %177) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #14
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %0) #14
  br label %477

322:                                              ; preds = %172
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %0, %"class.blink::KURL"* nonnull dereferenceable(112) %8) #14
  br label %477

323:                                              ; preds = %170
  %324 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %325 = load %"class.blink::mojom::blink::Manifest"*, %"class.blink::mojom::blink::Manifest"** %324, align 8
  %326 = getelementptr inbounds %"class.blink::mojom::blink::Manifest", %"class.blink::mojom::blink::Manifest"* %325, i64 0, i32 26
  %327 = call fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_116URLIsWithinScopeERKNS_4KURLES3_(%"class.blink::KURL"* nonnull dereferenceable(112) %8, %"class.blink::KURL"* dereferenceable(112) %326)
  br i1 %327, label %475, label %328

328:                                              ; preds = %323
  %329 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %329) #14
  %330 = bitcast %"class.WTF::StringAppend.177"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %330) #14
  %331 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %332 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %331, align 8
  %333 = icmp eq %"class.WTF::StringImpl"* %332, null
  br i1 %333, label %409, label %334

334:                                              ; preds = %328
  %335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %332, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %336 = load atomic i32, i32* %335 monotonic, align 4
  %337 = and i32 %336, 2
  %338 = icmp eq i32 %337, 0
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %332, i64 0, i32 0
  %340 = load i32, i32* %339, align 4
  br i1 %338, label %341, label %351

341:                                              ; preds = %334
  %342 = zext i32 %340 to i33
  %343 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %342, i33 1) #14
  %344 = extractvalue { i33, i1 } %343, 1
  %345 = extractvalue { i33, i1 } %343, 0
  %346 = icmp slt i33 %345, 0
  %347 = or i1 %344, %346
  br i1 %347, label %348, label %349, !prof !2

348:                                              ; preds = %341
  call void @llvm.trap() #14
  unreachable

349:                                              ; preds = %341
  %350 = trunc i33 %345 to i32
  store i32 %350, i32* %339, align 4
  br label %351

351:                                              ; preds = %349, %334
  %352 = phi i32 [ %350, %349 ], [ %340, %334 ]
  %353 = load atomic i32, i32* %335 monotonic, align 4
  %354 = and i32 %353, 2
  %355 = icmp eq i32 %354, 0
  br i1 %355, label %356, label %366

356:                                              ; preds = %351
  %357 = zext i32 %352 to i33
  %358 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %357, i33 1) #14
  %359 = extractvalue { i33, i1 } %358, 1
  %360 = extractvalue { i33, i1 } %358, 0
  %361 = icmp slt i33 %360, 0
  %362 = or i1 %359, %361
  br i1 %362, label %363, label %364, !prof !2

363:                                              ; preds = %356
  call void @llvm.trap() #14
  unreachable

364:                                              ; preds = %356
  %365 = trunc i33 %360 to i32
  store i32 %365, i32* %339, align 4
  br label %366

366:                                              ; preds = %364, %351
  %367 = phi i32 [ %365, %364 ], [ %352, %351 ]
  %368 = load atomic i32, i32* %335 monotonic, align 4
  %369 = and i32 %368, 2
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %371, label %373

371:                                              ; preds = %366
  %372 = add i32 %367, -1
  store i32 %372, i32* %339, align 4
  br label %373

373:                                              ; preds = %371, %366
  %374 = phi i32 [ %372, %371 ], [ %367, %366 ]
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %376, label %377

376:                                              ; preds = %373
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %332) #14
  br label %377

377:                                              ; preds = %373, %376
  %378 = load atomic i32, i32* %335 monotonic, align 4, !noalias !95
  %379 = and i32 %378, 2
  %380 = icmp eq i32 %379, 0
  %381 = load i32, i32* %339, align 4
  br i1 %380, label %382, label %392

382:                                              ; preds = %377
  %383 = zext i32 %381 to i33
  %384 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %383, i33 1) #14
  %385 = extractvalue { i33, i1 } %384, 1
  %386 = extractvalue { i33, i1 } %384, 0
  %387 = icmp slt i33 %386, 0
  %388 = or i1 %385, %387
  br i1 %388, label %389, label %390, !prof !2

389:                                              ; preds = %382
  call void @llvm.trap() #14, !noalias !95
  unreachable

390:                                              ; preds = %382
  %391 = trunc i33 %386 to i32
  store i32 %391, i32* %339, align 4, !noalias !95
  br label %392

392:                                              ; preds = %377, %390
  %393 = phi i32 [ %391, %390 ], [ %381, %377 ]
  %394 = bitcast %"class.WTF::StringAppend.177"* %14 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.1 to i64), i64* %394, align 8, !alias.scope !95
  %395 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %332, %"class.WTF::StringImpl"** %395, align 8, !alias.scope !95
  %396 = load atomic i32, i32* %335 monotonic, align 4, !noalias !95
  %397 = and i32 %396, 2
  %398 = icmp eq i32 %397, 0
  br i1 %398, label %399, label %413

399:                                              ; preds = %392
  %400 = zext i32 %393 to i33
  %401 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %400, i33 1) #14
  %402 = extractvalue { i33, i1 } %401, 1
  %403 = extractvalue { i33, i1 } %401, 0
  %404 = icmp slt i33 %403, 0
  %405 = or i1 %402, %404
  br i1 %405, label %406, label %407, !prof !2

406:                                              ; preds = %399
  call void @llvm.trap() #14, !noalias !95
  unreachable

407:                                              ; preds = %399
  %408 = trunc i33 %403 to i32
  store i32 %408, i32* %339, align 4, !noalias !95
  br label %413

409:                                              ; preds = %328
  %410 = bitcast %"class.WTF::StringAppend.177"* %14 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.1 to i64), i64* %410, align 8, !alias.scope !95
  %411 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %411, align 8, !alias.scope !95
  %412 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.15, i64 0, i64 0), i8** %412, align 8, !alias.scope !95
  br label %425

413:                                              ; preds = %407, %392
  %414 = phi i32 [ %408, %407 ], [ %393, %392 ]
  %415 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.15, i64 0, i64 0), i8** %415, align 8, !alias.scope !95
  %416 = load atomic i32, i32* %335 monotonic, align 4, !noalias !95
  %417 = and i32 %416, 2
  %418 = icmp eq i32 %417, 0
  br i1 %418, label %419, label %421

419:                                              ; preds = %413
  %420 = add i32 %414, -1
  store i32 %420, i32* %339, align 4, !noalias !95
  br label %421

421:                                              ; preds = %419, %413
  %422 = phi i32 [ %420, %419 ], [ %414, %413 ]
  %423 = icmp eq i32 %422, 0
  br i1 %423, label %424, label %425

424:                                              ; preds = %421
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %332) #14, !noalias !95
  br label %425

425:                                              ; preds = %409, %421, %424
  %426 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.177"* nonnull %14)
  %427 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %426, %"class.WTF::StringImpl"** %427, align 8
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %13, i1 zeroext false, i32 0, i32 0)
  %428 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %427, align 8
  %429 = icmp eq %"class.WTF::StringImpl"* %428, null
  br i1 %429, label %443, label %430

430:                                              ; preds = %425
  %431 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %432 = load atomic i32, i32* %431 monotonic, align 4
  %433 = and i32 %432, 2
  %434 = icmp eq i32 %433, 0
  %435 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %428, i64 0, i32 0
  %436 = load i32, i32* %435, align 4
  br i1 %434, label %437, label %439

437:                                              ; preds = %430
  %438 = add i32 %436, -1
  store i32 %438, i32* %435, align 4
  br label %439

439:                                              ; preds = %437, %430
  %440 = phi i32 [ %438, %437 ], [ %436, %430 ]
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %442, label %443

442:                                              ; preds = %439
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %428) #14
  br label %443

443:                                              ; preds = %425, %439, %442
  %444 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %445 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %444, align 8
  %446 = icmp eq %"class.WTF::StringImpl"* %445, null
  br i1 %446, label %460, label %447

447:                                              ; preds = %443
  %448 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %445, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %449 = load atomic i32, i32* %448 monotonic, align 4
  %450 = and i32 %449, 2
  %451 = icmp eq i32 %450, 0
  %452 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %445, i64 0, i32 0
  %453 = load i32, i32* %452, align 4
  br i1 %451, label %454, label %456

454:                                              ; preds = %447
  %455 = add i32 %453, -1
  store i32 %455, i32* %452, align 4
  br label %456

456:                                              ; preds = %454, %447
  %457 = phi i32 [ %455, %454 ], [ %453, %447 ]
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %459, label %460

459:                                              ; preds = %456
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %445) #14
  br label %460

460:                                              ; preds = %443, %456, %459
  br i1 %333, label %474, label %461

461:                                              ; preds = %460
  %462 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %332, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %463 = load atomic i32, i32* %462 monotonic, align 4
  %464 = and i32 %463, 2
  %465 = icmp eq i32 %464, 0
  %466 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %332, i64 0, i32 0
  %467 = load i32, i32* %466, align 4
  br i1 %465, label %468, label %470

468:                                              ; preds = %461
  %469 = add i32 %467, -1
  store i32 %469, i32* %466, align 4
  br label %470

470:                                              ; preds = %468, %461
  %471 = phi i32 [ %469, %468 ], [ %467, %461 ]
  %472 = icmp eq i32 %471, 0
  br i1 %472, label %473, label %474

473:                                              ; preds = %470
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %332) #14
  br label %474

474:                                              ; preds = %460, %470, %473
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %330) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %329) #14
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %0) #14
  br label %477

475:                                              ; preds = %323
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %0, %"class.blink::KURL"* nonnull dereferenceable(112) %8) #14
  br label %477

476:                                              ; preds = %170
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %0) #14
  br label %477

477:                                              ; preds = %169, %171, %321, %322, %474, %475, %476
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %20) #14
  %478 = load i8, i8* %15, align 8, !range !16
  %479 = icmp eq i8 %478, 0
  br i1 %479, label %498, label %480

480:                                              ; preds = %477
  %481 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %482 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %481, align 8
  %483 = icmp eq %"class.WTF::StringImpl"* %482, null
  br i1 %483, label %497, label %484

484:                                              ; preds = %480
  %485 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %482, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %486 = load atomic i32, i32* %485 monotonic, align 4
  %487 = and i32 %486, 2
  %488 = icmp eq i32 %487, 0
  %489 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %482, i64 0, i32 0
  %490 = load i32, i32* %489, align 4
  br i1 %488, label %491, label %493

491:                                              ; preds = %484
  %492 = add i32 %490, -1
  store i32 %492, i32* %489, align 4
  br label %493

493:                                              ; preds = %491, %484
  %494 = phi i32 [ %492, %491 ], [ %490, %484 ]
  %495 = icmp eq i32 %494, 0
  br i1 %495, label %496, label %497

496:                                              ; preds = %493
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %482) #14
  br label %497

497:                                              ; preds = %496, %493, %480
  store i8 0, i8* %15, align 8
  br label %498

498:                                              ; preds = %18, %477, %497
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #14
  ret void
}

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.177"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %4 = alloca i8*, align 8
  %5 = alloca i16*, align 8
  %6 = bitcast %"class.WTF::StringTypeAdapter.276"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false) #14
  %8 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %3, i8* %8) #14
  %9 = bitcast %"class.WTF::StringTypeAdapter.276"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #14
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %2, i8* %11) #14
  %12 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  br i1 %20, label %57, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #14
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.177"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %4) #14
  %25 = load i8*, i8** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.177"* %0, i8* %25)
  %26 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %26, label %93, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %44

34:                                               ; preds = %27
  %35 = zext i32 %33 to i33
  %36 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %35, i33 1) #14
  %37 = extractvalue { i33, i1 } %36, 1
  %38 = extractvalue { i33, i1 } %36, 0
  %39 = icmp slt i33 %38, 0
  %40 = or i1 %37, %39
  br i1 %40, label %41, label %42, !prof !2

41:                                               ; preds = %34
  call void @llvm.trap() #14
  unreachable

42:                                               ; preds = %34
  %43 = trunc i33 %38 to i32
  store i32 %43, i32* %32, align 4
  br label %44

44:                                               ; preds = %27, %42
  %45 = phi i32 [ %43, %42 ], [ %33, %27 ]
  %46 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %47 = load atomic i32, i32* %28 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %53

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %52 = add i32 %45, -1
  store i32 %52, i32* %51, align 4
  br label %53

53:                                               ; preds = %50, %44
  %54 = phi i32 [ %52, %50 ], [ %45, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %93

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #14
  br label %93

57:                                               ; preds = %1
  %58 = bitcast i16** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #14
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %5, align 8
  %59 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.177"* %0)
  %60 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %59, i16** nonnull dereferenceable(8) %5) #14
  %61 = load i16*, i16** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.177"* %0, i16* %61)
  %62 = icmp eq %"class.WTF::StringImpl"* %60, null
  br i1 %62, label %93, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #14
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  call void @llvm.trap() #14
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  %83 = load atomic i32, i32* %64 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %88 = add i32 %81, -1
  store i32 %88, i32* %87, align 4
  br label %89

89:                                               ; preds = %86, %80
  %90 = phi i32 [ %88, %86 ], [ %81, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #14
  br label %93

93:                                               ; preds = %92, %89, %57, %56, %53, %21
  %94 = phi i8* [ %22, %21 ], [ %22, %53 ], [ %22, %56 ], [ %58, %57 ], [ %58, %89 ], [ %58, %92 ]
  %95 = phi i64 [ 0, %21 ], [ %46, %53 ], [ %46, %56 ], [ 0, %57 ], [ %82, %89 ], [ %82, %92 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #14
  %96 = inttoptr i64 %95 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %96
}

declare zeroext i1 @_ZN5blink14SecurityOrigin13AreSameOriginERKNS_4KURLES3_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blink12_GLOBAL__N_116URLIsWithinScopeERKNS_4KURLES3_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #0 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = tail call zeroext i1 @_ZN5blink14SecurityOrigin13AreSameOriginERKNS_4KURLES3_(%"class.blink::KURL"* dereferenceable(112) %0, %"class.blink::KURL"* dereferenceable(112) %1) #14
  %5 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #14
  br i1 %4, label %6, label %58

6:                                                ; preds = %2
  %7 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL7GetPathEv(%"class.blink::KURL"* %0) #14
  %8 = tail call %"class.WTF::StringImpl"* @_ZNK5blink4KURL7GetPathEv(%"class.blink::KURL"* %1) #14
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %11, align 8
  %12 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %13 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %12, i64* %13, align 8
  br label %21

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %15, align 8
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %19 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %20 = bitcast i8** %19 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %18, %"class.WTF::StringImpl"** %20, align 8
  br label %21

21:                                               ; preds = %10, %14
  %22 = phi i32 [ %17, %14 ], [ 0, %10 ]
  %23 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %22, i32* %23, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %7, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %3) #14
  br label %29

27:                                               ; preds = %21
  %28 = icmp eq i32 %22, 0
  br label %29

29:                                               ; preds = %25, %27
  %30 = phi i1 [ %26, %25 ], [ %28, %27 ]
  br i1 %9, label %44, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #14
  br label %44

44:                                               ; preds = %29, %40, %43
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14
  br i1 %24, label %59, label %45

45:                                               ; preds = %44
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %7, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %7) #14
  br label %59

58:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #14
  br label %59

59:                                               ; preds = %57, %54, %44, %58
  %60 = phi i1 [ false, %58 ], [ %30, %44 ], [ %30, %54 ], [ %30, %57 ]
  ret i1 %60
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String16RemoveCharactersEPFbDsE(%"class.WTF::String"*, i1 (i16)*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN5blink12_GLOBAL__N_115IsCrLfOrTabCharEDs(i16 zeroext) #4 {
  %2 = add i16 %0, -9
  %3 = icmp ult i16 %2, 5
  br i1 %3, label %4, label %9

4:                                                ; preds = %1
  %5 = trunc i16 %2 to i5
  %6 = lshr i5 -13, %5
  %7 = and i5 %6, 1
  %8 = icmp ne i5 %7, 0
  ret i1 %8

9:                                                ; preds = %1
  ret i1 false
}

declare zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL12BaseAsStringEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare i32 @_ZN5blink21DisplayModeFromStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink18IsBasicDisplayModeENS_5mojom11DisplayModeE(i32) local_unnamed_addr #1

declare %"class.blink::JSONArray"* @_ZNK5blink10JSONObject8GetArrayERKN3WTF6StringE(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::JSONValue"* @_ZNK5blink9JSONArray2atEj(%"class.blink::JSONArray"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase34WebAppWindowControlsOverlayEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #1

declare i32 @_ZN5blink38WebScreenOrientationLockTypeFromStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser12ParseIconSrcEPKNS_10JSONObjectE(%"class.blink::KURL"* noalias sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), i64 3) #14
  %6 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %1, i64 0, i32 1
  call void @_ZN5blink14ManifestParser8ParseURLEPKNS_10JSONObjectERKN3WTF6StringERKNS_4KURLENS0_20ParseURLRestrictionsE(%"class.blink::KURL"* sret %0, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::KURL"* dereferenceable(112) %6, i32 0)
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #14
  br label %23

23:                                               ; preds = %3, %19, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink14ManifestParser13ParseIconTypeEPKNS_10JSONObjectE(%"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.absl::optional.179", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.30, i64 0, i64 0), i64 4) #14
  call void @_ZN5blink14ManifestParser11ParseStringEPKNS_10JSONObjectERKN3WTF6StringENS0_8TrimTypeE(%"class.absl::optional.179"* nonnull sret %4, %"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %5, i32 0)
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %15, label %18, label %20

18:                                               ; preds = %11
  %19 = add i32 %17, -1
  store i32 %19, i32* %16, align 4
  br label %20

20:                                               ; preds = %18, %11
  %21 = phi i32 [ %19, %18 ], [ %17, %11 ]
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #14
  br label %24

24:                                               ; preds = %2, %20, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  %25 = load i8, i8* %6, align 8, !range !16
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %49, label %27

27:                                               ; preds = %24
  %28 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %30, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %31, label %50, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %50

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #14
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  call void @llvm.trap() #14
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %50

49:                                               ; preds = %24
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i64 0) #14
  br label %68

50:                                               ; preds = %47, %32, %27
  %51 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #14
  br label %67

67:                                               ; preds = %66, %63, %50
  store i8 0, i8* %6, align 8
  br label %68

68:                                               ; preds = %49, %67
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  ret %"class.WTF::StringImpl"* %70
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser14ParseIconSizesEPKNS_10JSONObjectE(%"class.WTF::Vector.12"* noalias nocapture sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.absl::optional.179", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.blink::WebVector", align 8
  %7 = alloca %"class.blink::WebString", align 8
  %8 = alloca %"class.WTF::Vector.12", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  %11 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0), i64 5) #14
  call void @_ZN5blink14ManifestParser11ParseStringEPKNS_10JSONObjectERKN3WTF6StringENS0_8TrimTypeE(%"class.absl::optional.179"* nonnull sret %4, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %5, i32 1)
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #14
  br label %28

28:                                               ; preds = %3, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  %29 = load i8, i8* %10, align 8, !range !16
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %28
  %32 = bitcast %"class.WTF::Vector.12"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 16, i1 false) #14
  br label %127

33:                                               ; preds = %28
  %34 = bitcast %"class.blink::WebVector"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #14
  %35 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %6, i64 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::WebVector", %"class.blink::WebVector"* %6, i64 0, i32 0, i32 0, i32 1
  %37 = bitcast %"class.blink::WebString"* %7 to i8*
  %38 = bitcast %"class.blink::WebVector"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #14
  %39 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"* nonnull %7, %"class.WTF::String"* dereferenceable(8) %39) #14
  call void @_ZN5blink18WebIconSizesParser14ParseIconSizesERKNS_9WebStringE(%"class.blink::WebVector"* nonnull sret %6, %"class.blink::WebString"* nonnull dereferenceable(8) %7) #14
  call void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #14
  %40 = bitcast %"class.WTF::Vector.12"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #14
  %41 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %8, i64 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %8, i64 0, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %8, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 16, i1 false) #14
  %44 = load %"class.gfx::Size"*, %"class.gfx::Size"** %35, align 8
  %45 = load %"class.gfx::Size"*, %"class.gfx::Size"** %36, align 8
  %46 = icmp eq %"class.gfx::Size"* %44, %45
  br i1 %46, label %71, label %49

47:                                               ; preds = %65
  %48 = icmp eq i32 %66, 0
  br i1 %48, label %71, label %91

49:                                               ; preds = %33, %69
  %50 = phi i32 [ %70, %69 ], [ 0, %33 ]
  %51 = phi i32 [ %66, %69 ], [ 0, %33 ]
  %52 = phi %"class.gfx::Size"* [ %67, %69 ], [ %44, %33 ]
  %53 = icmp eq i32 %51, %50
  br i1 %53, label %63, label %54, !prof !2

54:                                               ; preds = %49
  %55 = load %"class.gfx::Size"*, %"class.gfx::Size"** %41, align 8
  %56 = zext i32 %51 to i64
  %57 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %55, i64 %56
  %58 = bitcast %"class.gfx::Size"* %52 to i64*
  %59 = bitcast %"class.gfx::Size"* %57 to i64*
  %60 = load i64, i64* %58, align 4
  store i64 %60, i64* %59, align 4
  %61 = load i32, i32* %43, align 4
  %62 = add i32 %61, 1
  store i32 %62, i32* %43, align 4
  br label %65

63:                                               ; preds = %49
  call void @_ZN3WTF6VectorIN3gfx4SizeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.12"* nonnull %8, %"class.gfx::Size"* dereferenceable(8) %52) #14
  %64 = load i32, i32* %43, align 4
  br label %65

65:                                               ; preds = %54, %63
  %66 = phi i32 [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %52, i64 1
  %68 = icmp eq %"class.gfx::Size"* %67, %45
  br i1 %68, label %47, label %69

69:                                               ; preds = %65
  %70 = load i32, i32* %42, align 8
  br label %49

71:                                               ; preds = %33, %47
  %72 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.32, i64 0, i64 0), i64 30) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %9, i1 zeroext false, i32 0, i32 0)
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %89, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  br i1 %80, label %83, label %85

83:                                               ; preds = %76
  %84 = add i32 %82, -1
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %83, %76
  %86 = phi i32 [ %84, %83 ], [ %82, %76 ]
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %89

88:                                               ; preds = %85
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #14
  br label %89

89:                                               ; preds = %71, %85, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #14
  %90 = load i32, i32* %43, align 4
  br label %91

91:                                               ; preds = %89, %47
  %92 = phi i32 [ %90, %89 ], [ %66, %47 ]
  %93 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 1
  %94 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 2
  %95 = bitcast %"class.WTF::Vector.12"* %8 to i64*
  %96 = bitcast %"class.WTF::Vector.12"* %0 to i64*
  store i64 0, i64* %96, align 8
  %97 = load i64, i64* %95, align 8
  %98 = bitcast %"class.WTF::Vector.12"* %0 to i64*
  store atomic i64 0, i64* %95 monotonic, align 8
  store atomic i64 %97, i64* %98 monotonic, align 8
  %99 = load i32, i32* %42, align 8
  store i32 %99, i32* %93, align 8
  store i32 %92, i32* %94, align 4
  %100 = load %"class.gfx::Size"*, %"class.gfx::Size"** %35, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #14
  %101 = icmp eq %"class.gfx::Size"* %100, null
  br i1 %101, label %106, label %102

102:                                              ; preds = %91
  %103 = bitcast %"class.gfx::Size"* %100 to i8*
  %104 = ptrtoint %"class.gfx::Size"* %100 to i64
  %105 = bitcast %"class.gfx::Size"** %36 to i64*
  store i64 %104, i64* %105, align 8
  call void @_ZdlPv(i8* %103) #15
  br label %106

106:                                              ; preds = %102, %91
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #14
  %107 = load i8, i8* %10, align 8, !range !16
  %108 = icmp eq i8 %107, 0
  br i1 %108, label %127, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #14
  br label %126

126:                                              ; preds = %125, %122, %109
  store i8 0, i8* %10, align 8
  br label %127

127:                                              ; preds = %31, %106, %126
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #14
  ret void
}

declare void @_ZN5blink18WebIconSizesParser14ParseIconSizesERKNS_9WebStringE(%"class.blink::WebVector"* sret, %"class.blink::WebString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink9WebStringC1ERKN3WTF6StringE(%"class.blink::WebString"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink9WebStringD1Ev(%"class.blink::WebString"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser16ParseIconPurposeEPKNS_10JSONObjectE(%"class.absl::optional.201"* noalias nocapture sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.absl::optional.179", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::Vector.17", align 8
  %7 = alloca i32, align 4
  %8 = alloca %"class.WTF::Vector.54", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca i32, align 4
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca i32, align 4
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false)
  %19 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.33, i64 0, i64 0), i64 7) #14
  call void @_ZN5blink14ManifestParser11ParseStringEPKNS_10JSONObjectERKN3WTF6StringENS0_8TrimTypeE(%"class.absl::optional.179"* nonnull sret %4, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %5, i32 1)
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #14
  br label %36

36:                                               ; preds = %3, %32, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #14
  %37 = bitcast %"class.WTF::Vector.17"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #14
  %38 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %6, i64 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %6, i64 0, i32 0, i32 0, i32 1
  %40 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %6, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 16, i1 false) #14
  %41 = load i8, i8* %18, align 8, !range !16
  %42 = icmp eq i8 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %36
  %44 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44) #14
  store i32 0, i32* %7, align 4
  call void @_ZN3WTF6VectorIN5blink5mojom29ManifestImageResource_PurposeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.17"* nonnull %6, i32* nonnull dereferenceable(4) %7) #14
  %45 = bitcast %"class.WTF::Vector.17"* %6 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = load i32, i32* %39, align 8
  %48 = load i32, i32* %40, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44) #14
  %49 = getelementptr inbounds %"class.absl::optional.201", %"class.absl::optional.201"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %49, align 8
  %50 = getelementptr inbounds %"class.absl::optional.201", %"class.absl::optional.201"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %51 = getelementptr inbounds %"class.absl::optional.201", %"class.absl::optional.201"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.absl::optional.201", %"class.absl::optional.201"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %53 = bitcast %"class.WTF::Vector.17"* %50 to i64*
  store i64 0, i64* %53, align 8
  %54 = bitcast %"class.WTF::Vector.17"* %50 to i64*
  store atomic i64 0, i64* %45 monotonic, align 8
  store atomic i64 %46, i64* %54 monotonic, align 8
  store i32 %47, i32* %51, align 8
  store i32 0, i32* %39, align 8
  store i32 %48, i32* %52, align 4
  store i32 0, i32* %40, align 4
  br label %368

55:                                               ; preds = %36
  %56 = bitcast %"class.WTF::Vector.54"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #14
  %57 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %8, i64 0, i32 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %8, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 0, i64 16, i1 false) #14
  %59 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #14
  %60 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %61 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %62 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %61, i64* %62, align 8
  %63 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0), i8** %63, align 8
  %64 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 1, i32* %64, align 8
  call void @_ZNK3WTF6String5SplitERKNS_10StringViewEbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* %60, %"class.WTF::StringView"* nonnull dereferenceable(24) %9, i1 zeroext false, %"class.WTF::Vector.54"* nonnull dereferenceable(16) %8) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #14
  %65 = load i32, i32* %58, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %91

67:                                               ; preds = %55
  %68 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68) #14
  store i32 0, i32* %10, align 4
  %69 = load i32, i32* %40, align 4
  %70 = load i32, i32* %39, align 8
  %71 = icmp eq i32 %69, %70
  br i1 %71, label %78, label %72, !prof !2

72:                                               ; preds = %67
  %73 = load i32*, i32** %38, align 8
  %74 = zext i32 %69 to i64
  %75 = getelementptr inbounds i32, i32* %73, i64 %74
  store i32 0, i32* %75, align 4
  %76 = load i32, i32* %40, align 4
  %77 = add i32 %76, 1
  store i32 %77, i32* %40, align 4
  br label %80

78:                                               ; preds = %67
  call void @_ZN3WTF6VectorIN5blink5mojom29ManifestImageResource_PurposeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.17"* nonnull %6, i32* nonnull dereferenceable(4) %10) #14
  %79 = load i32, i32* %40, align 4
  br label %80

80:                                               ; preds = %72, %78
  %81 = phi i32 [ %77, %72 ], [ %79, %78 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68) #14
  %82 = getelementptr inbounds %"class.absl::optional.201", %"class.absl::optional.201"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %82, align 8
  %83 = getelementptr inbounds %"class.absl::optional.201", %"class.absl::optional.201"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %84 = getelementptr inbounds %"class.absl::optional.201", %"class.absl::optional.201"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %85 = getelementptr inbounds %"class.absl::optional.201", %"class.absl::optional.201"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %86 = bitcast %"class.WTF::Vector.17"* %6 to i64*
  %87 = bitcast %"class.WTF::Vector.17"* %83 to i64*
  store i64 0, i64* %87, align 8
  %88 = load i64, i64* %86, align 8
  %89 = bitcast %"class.WTF::Vector.17"* %83 to i64*
  store atomic i64 0, i64* %86 monotonic, align 8
  store atomic i64 %88, i64* %89 monotonic, align 8
  %90 = load i32, i32* %39, align 8
  store i32 %90, i32* %84, align 8
  store i32 0, i32* %39, align 8
  store i32 %81, i32* %85, align 4
  store i32 0, i32* %40, align 4
  br label %323

91:                                               ; preds = %55
  %92 = load %"class.WTF::String"*, %"class.WTF::String"** %57, align 8
  %93 = zext i32 %65 to i64
  %94 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %92, i64 %93
  %95 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 97), align 1
  %96 = sext i8 %95 to i32
  %97 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 110), align 2
  %98 = sext i8 %97 to i32
  %99 = load i8, i8* getelementptr inbounds ([256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 121), align 1
  %100 = sext i8 %99 to i32
  %101 = bitcast %"class.WTF::StringView"* %12 to i8*
  %102 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  %103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %104 = bitcast i8** %103 to %"class.WTF::StringImpl"**
  %105 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  %106 = bitcast %"class.WTF::StringView"* %14 to i8*
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  %108 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %109 = bitcast i8** %108 to %"class.WTF::StringImpl"**
  %110 = bitcast %"class.WTF::StringView"* %14 to i64*
  %111 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  %112 = bitcast i32* %15 to i8*
  %113 = bitcast i32* %13 to i8*
  %114 = bitcast i32* %11 to i8*
  br label %118

115:                                              ; preds = %265
  %116 = load i32, i32* %40, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %269, label %289

118:                                              ; preds = %91, %265
  %119 = phi %"class.WTF::String"* [ %92, %91 ], [ %267, %265 ]
  %120 = phi i8 [ 0, %91 ], [ %266, %265 ]
  %121 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* %119) #14
  %122 = ptrtoint %"class.WTF::StringImpl"* %121 to i64
  %123 = bitcast %"class.WTF::String"* %119 to i64*
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 0, i32 0, i32 0
  %125 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  store i64 %122, i64* %123, align 8
  %126 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %126, label %142, label %127

127:                                              ; preds = %118
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  br i1 %131, label %134, label %136

134:                                              ; preds = %127
  %135 = add i32 %133, -1
  store i32 %135, i32* %132, align 4
  br label %136

136:                                              ; preds = %134, %127
  %137 = phi i32 [ %135, %134 ], [ %133, %127 ]
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %136
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %125) #14
  br label %140

140:                                              ; preds = %136, %139
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  br label %142

142:                                              ; preds = %140, %118
  %143 = phi %"class.WTF::StringImpl"* [ %141, %140 ], [ %121, %118 ]
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %265, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 1
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %265, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 1
  %151 = bitcast %"class.WTF::StringImpl"* %150 to i8*
  %152 = icmp eq i32 %147, 3
  br i1 %152, label %153, label %224

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %155 = load atomic i32, i32* %154 monotonic, align 4
  %156 = and i32 %155, 1
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %173, label %158

158:                                              ; preds = %153
  %159 = load i8, i8* %151, align 1
  %160 = zext i8 %159 to i64
  %161 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %160
  %162 = load i8, i8* %161, align 1
  %163 = zext i8 %162 to i32
  %164 = icmp eq i32 %163, %96
  br i1 %164, label %165, label %224

165:                                              ; preds = %158
  %166 = getelementptr inbounds i8, i8* %151, i64 1
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = zext i8 %170 to i32
  %172 = icmp eq i32 %171, %98
  br i1 %172, label %204, label %224

173:                                              ; preds = %153
  %174 = bitcast %"class.WTF::StringImpl"* %150 to i16*
  %175 = load i16, i16* %174, align 2
  %176 = add i16 %175, -65
  %177 = icmp ult i16 %176, 26
  %178 = zext i1 %177 to i16
  %179 = shl nuw nsw i16 %178, 5
  %180 = or i16 %179, %175
  %181 = zext i16 %180 to i32
  %182 = icmp eq i32 %181, %96
  br i1 %182, label %183, label %224

183:                                              ; preds = %173
  %184 = getelementptr inbounds i16, i16* %174, i64 1
  %185 = load i16, i16* %184, align 2
  %186 = add i16 %185, -65
  %187 = icmp ult i16 %186, 26
  %188 = zext i1 %187 to i16
  %189 = shl nuw nsw i16 %188, 5
  %190 = or i16 %189, %185
  %191 = zext i16 %190 to i32
  %192 = icmp eq i32 %191, %98
  br i1 %192, label %193, label %224

193:                                              ; preds = %183
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 1, i32 1
  %195 = bitcast i32* %194 to i16*
  %196 = load i16, i16* %195, align 2
  %197 = add i16 %196, -65
  %198 = icmp ult i16 %197, 26
  %199 = zext i1 %198 to i16
  %200 = shl nuw nsw i16 %199, 5
  %201 = or i16 %200, %196
  %202 = zext i16 %201 to i32
  %203 = icmp eq i32 %202, %100
  br i1 %203, label %212, label %224

204:                                              ; preds = %165
  %205 = getelementptr inbounds i8, i8* %151, i64 2
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i64
  %208 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %207
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i32
  %211 = icmp eq i32 %210, %100
  br i1 %211, label %212, label %224

212:                                              ; preds = %193, %204
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %114) #14
  store i32 0, i32* %11, align 4
  %213 = load i32, i32* %40, align 4
  %214 = load i32, i32* %39, align 8
  %215 = icmp eq i32 %213, %214
  br i1 %215, label %222, label %216, !prof !2

216:                                              ; preds = %212
  %217 = load i32*, i32** %38, align 8
  %218 = zext i32 %213 to i64
  %219 = getelementptr inbounds i32, i32* %217, i64 %218
  store i32 0, i32* %219, align 4
  %220 = load i32, i32* %40, align 4
  %221 = add i32 %220, 1
  store i32 %221, i32* %40, align 4
  br label %223

222:                                              ; preds = %212
  call void @_ZN3WTF6VectorIN5blink5mojom29ManifestImageResource_PurposeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.17"* nonnull %6, i32* nonnull dereferenceable(4) %11) #14
  br label %223

223:                                              ; preds = %216, %222
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %114) #14
  br label %265

224:                                              ; preds = %165, %158, %183, %173, %149, %193, %204
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #14
  store %"class.WTF::StringImpl"* %143, %"class.WTF::StringImpl"** %102, align 8
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 1
  %226 = load i32, i32* %225, align 4
  %227 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 1
  store %"class.WTF::StringImpl"* %227, %"class.WTF::StringImpl"** %104, align 8
  store i32 %226, i32* %105, align 8
  %228 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm11EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %12, [11 x i8]* nonnull dereferenceable(11) @.str.36)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #14
  br i1 %228, label %229, label %241

229:                                              ; preds = %224
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %113) #14
  store i32 1, i32* %13, align 4
  %230 = load i32, i32* %40, align 4
  %231 = load i32, i32* %39, align 8
  %232 = icmp eq i32 %230, %231
  br i1 %232, label %239, label %233, !prof !2

233:                                              ; preds = %229
  %234 = load i32*, i32** %38, align 8
  %235 = zext i32 %230 to i64
  %236 = getelementptr inbounds i32, i32* %234, i64 %235
  store i32 1, i32* %236, align 4
  %237 = load i32, i32* %40, align 4
  %238 = add i32 %237, 1
  store i32 %238, i32* %40, align 4
  br label %240

239:                                              ; preds = %229
  call void @_ZN3WTF6VectorIN5blink5mojom29ManifestImageResource_PurposeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.17"* nonnull %6, i32* nonnull dereferenceable(4) %13) #14
  br label %240

240:                                              ; preds = %233, %239
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %113) #14
  br label %265

241:                                              ; preds = %224
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %106) #14
  %242 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %243 = icmp eq %"class.WTF::StringImpl"* %242, null
  br i1 %243, label %244, label %246

244:                                              ; preds = %241
  store i8* null, i8** %108, align 8
  %245 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %245, i64* %110, align 8
  br label %250

246:                                              ; preds = %241
  store %"class.WTF::StringImpl"* %242, %"class.WTF::StringImpl"** %107, align 8
  %247 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 0, i32 1
  %248 = load i32, i32* %247, align 4
  %249 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %242, i64 1
  store %"class.WTF::StringImpl"* %249, %"class.WTF::StringImpl"** %109, align 8
  br label %250

250:                                              ; preds = %244, %246
  %251 = phi i32 [ %248, %246 ], [ 0, %244 ]
  store i32 %251, i32* %111, align 8
  %252 = call zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* nonnull dereferenceable(24) %14, [9 x i8]* nonnull dereferenceable(9) @.str.37)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %106) #14
  br i1 %252, label %253, label %265

253:                                              ; preds = %250
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %112) #14
  store i32 2, i32* %15, align 4
  %254 = load i32, i32* %40, align 4
  %255 = load i32, i32* %39, align 8
  %256 = icmp eq i32 %254, %255
  br i1 %256, label %263, label %257, !prof !2

257:                                              ; preds = %253
  %258 = load i32*, i32** %38, align 8
  %259 = zext i32 %254 to i64
  %260 = getelementptr inbounds i32, i32* %258, i64 %259
  store i32 2, i32* %260, align 4
  %261 = load i32, i32* %40, align 4
  %262 = add i32 %261, 1
  store i32 %262, i32* %40, align 4
  br label %264

263:                                              ; preds = %253
  call void @_ZN3WTF6VectorIN5blink5mojom29ManifestImageResource_PurposeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.17"* nonnull %6, i32* nonnull dereferenceable(4) %15) #14
  br label %264

264:                                              ; preds = %257, %263
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %112) #14
  br label %265

265:                                              ; preds = %142, %223, %264, %240, %250, %145
  %266 = phi i8 [ %120, %145 ], [ %120, %223 ], [ %120, %240 ], [ %120, %264 ], [ 1, %250 ], [ %120, %142 ]
  %267 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %119, i64 1
  %268 = icmp eq %"class.WTF::String"* %267, %94
  br i1 %268, label %115, label %118

269:                                              ; preds = %115
  %270 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %270) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %16, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.38, i64 0, i64 0), i64 46) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %16, i1 zeroext false, i32 0, i32 0)
  %271 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %272 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %271, align 8
  %273 = icmp eq %"class.WTF::StringImpl"* %272, null
  br i1 %273, label %287, label %274

274:                                              ; preds = %269
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %272, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %276 = load atomic i32, i32* %275 monotonic, align 4
  %277 = and i32 %276, 2
  %278 = icmp eq i32 %277, 0
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %272, i64 0, i32 0
  %280 = load i32, i32* %279, align 4
  br i1 %278, label %281, label %283

281:                                              ; preds = %274
  %282 = add i32 %280, -1
  store i32 %282, i32* %279, align 4
  br label %283

283:                                              ; preds = %281, %274
  %284 = phi i32 [ %282, %281 ], [ %280, %274 ]
  %285 = icmp eq i32 %284, 0
  br i1 %285, label %286, label %287

286:                                              ; preds = %283
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %272) #14
  br label %287

287:                                              ; preds = %269, %283, %286
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %270) #14
  %288 = getelementptr inbounds %"class.absl::optional.201", %"class.absl::optional.201"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %288, align 8
  br label %323

289:                                              ; preds = %115
  %290 = and i8 %266, 1
  %291 = icmp eq i8 %290, 0
  br i1 %291, label %312, label %292

292:                                              ; preds = %289
  %293 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %293) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %17, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.39, i64 0, i64 0), i64 73) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %17, i1 zeroext false, i32 0, i32 0)
  %294 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %295 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %294, align 8
  %296 = icmp eq %"class.WTF::StringImpl"* %295, null
  br i1 %296, label %310, label %297

297:                                              ; preds = %292
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %295, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %299 = load atomic i32, i32* %298 monotonic, align 4
  %300 = and i32 %299, 2
  %301 = icmp eq i32 %300, 0
  %302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %295, i64 0, i32 0
  %303 = load i32, i32* %302, align 4
  br i1 %301, label %304, label %306

304:                                              ; preds = %297
  %305 = add i32 %303, -1
  store i32 %305, i32* %302, align 4
  br label %306

306:                                              ; preds = %304, %297
  %307 = phi i32 [ %305, %304 ], [ %303, %297 ]
  %308 = icmp eq i32 %307, 0
  br i1 %308, label %309, label %310

309:                                              ; preds = %306
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %295) #14
  br label %310

310:                                              ; preds = %292, %306, %309
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %293) #14
  %311 = load i32, i32* %40, align 4
  br label %312

312:                                              ; preds = %289, %310
  %313 = phi i32 [ %116, %289 ], [ %311, %310 ]
  %314 = getelementptr inbounds %"class.absl::optional.201", %"class.absl::optional.201"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %314, align 8
  %315 = getelementptr inbounds %"class.absl::optional.201", %"class.absl::optional.201"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %316 = getelementptr inbounds %"class.absl::optional.201", %"class.absl::optional.201"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %317 = getelementptr inbounds %"class.absl::optional.201", %"class.absl::optional.201"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %318 = bitcast %"class.WTF::Vector.17"* %6 to i64*
  %319 = bitcast %"class.WTF::Vector.17"* %315 to i64*
  store i64 0, i64* %319, align 8
  %320 = load i64, i64* %318, align 8
  %321 = bitcast %"class.WTF::Vector.17"* %315 to i64*
  store atomic i64 0, i64* %318 monotonic, align 8
  store atomic i64 %320, i64* %321 monotonic, align 8
  %322 = load i32, i32* %39, align 8
  store i32 %322, i32* %316, align 8
  store i32 0, i32* %39, align 8
  store i32 %313, i32* %317, align 4
  store i32 0, i32* %40, align 4
  br label %323

323:                                              ; preds = %287, %312, %80
  %324 = load %"class.WTF::String"*, %"class.WTF::String"** %57, align 8
  %325 = icmp eq %"class.WTF::String"* %324, null
  br i1 %325, label %359, label %326, !prof !3

326:                                              ; preds = %323
  %327 = bitcast %"class.WTF::String"* %324 to i8*
  %328 = load i32, i32* %58, align 4
  %329 = icmp eq i32 %328, 0
  br i1 %329, label %357, label %330, !prof !2

330:                                              ; preds = %326
  %331 = zext i32 %328 to i64
  %332 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %324, i64 %331
  br label %333

333:                                              ; preds = %351, %330
  %334 = phi %"class.WTF::String"* [ %352, %351 ], [ %324, %330 ]
  %335 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %334, i64 0, i32 0, i32 0
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %335, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %351, label %338

338:                                              ; preds = %333
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load atomic i32, i32* %339 monotonic, align 4
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  br i1 %342, label %345, label %347

345:                                              ; preds = %338
  %346 = add i32 %344, -1
  store i32 %346, i32* %343, align 4
  br label %347

347:                                              ; preds = %345, %338
  %348 = phi i32 [ %346, %345 ], [ %344, %338 ]
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %351

350:                                              ; preds = %347
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %336) #14
  br label %351

351:                                              ; preds = %350, %347, %333
  %352 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %334, i64 1
  %353 = icmp eq %"class.WTF::String"* %352, %332
  br i1 %353, label %354, label %333

354:                                              ; preds = %351
  store i32 0, i32* %58, align 4
  %355 = bitcast %"class.WTF::Vector.54"* %8 to i8**
  %356 = load i8*, i8** %355, align 8
  br label %357

357:                                              ; preds = %354, %326
  %358 = phi i8* [ %356, %354 ], [ %327, %326 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %358) #14
  store %"class.WTF::String"* null, %"class.WTF::String"** %57, align 8
  br label %359

359:                                              ; preds = %357, %323
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #14
  %360 = load i32*, i32** %38, align 8
  %361 = bitcast i32* %360 to i8*
  %362 = icmp eq i32* %360, null
  br i1 %362, label %368, label %363, !prof !3

363:                                              ; preds = %359
  %364 = load i32, i32* %40, align 4
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %367, label %366, !prof !2

366:                                              ; preds = %363
  store i32 0, i32* %40, align 4
  br label %367

367:                                              ; preds = %366, %363
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %361) #14
  store i32* null, i32** %38, align 8
  br label %368

368:                                              ; preds = %43, %359, %367
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #14
  %369 = load i8, i8* %18, align 8, !range !16
  %370 = icmp eq i8 %369, 0
  br i1 %370, label %389, label %371

371:                                              ; preds = %368
  %372 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %373 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %372, align 8
  %374 = icmp eq %"class.WTF::StringImpl"* %373, null
  br i1 %374, label %388, label %375

375:                                              ; preds = %371
  %376 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %373, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %377 = load atomic i32, i32* %376 monotonic, align 4
  %378 = and i32 %377, 2
  %379 = icmp eq i32 %378, 0
  %380 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %373, i64 0, i32 0
  %381 = load i32, i32* %380, align 4
  br i1 %379, label %382, label %384

382:                                              ; preds = %375
  %383 = add i32 %381, -1
  store i32 %383, i32* %380, align 4
  br label %384

384:                                              ; preds = %382, %375
  %385 = phi i32 [ %383, %382 ], [ %381, %375 ]
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %387, label %388

387:                                              ; preds = %384
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %373) #14
  br label %388

388:                                              ; preds = %387, %384, %371
  store i8 0, i8* %18, align 8
  br label %389

389:                                              ; preds = %368, %388
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #14
  ret void
}

declare void @_ZNK3WTF6String5SplitERKNS_10StringViewEbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"*, %"class.WTF::StringView"* dereferenceable(24), i1 zeroext, %"class.WTF::Vector.54"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm11EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [11 x i8]* dereferenceable(11)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 10
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %205, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %303, %14, %28, %205, %219, %233, %247, %261, %275, %289, %42, %59, %77, %93, %109, %125, %141, %157, %173, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %157 ], [ false, %173 ], [ false, %14 ], [ false, %28 ], [ false, %205 ], [ false, %219 ], [ false, %233 ], [ false, %247 ], [ false, %261 ], [ false, %275 ], [ false, %289 ], [ %316, %303 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  br i1 %172, label %173, label %75

173:                                              ; preds = %157
  %174 = getelementptr inbounds i16, i16* %44, i64 8
  %175 = load i16, i16* %174, align 2
  %176 = add i16 %175, -65
  %177 = icmp ult i16 %176, 26
  %178 = zext i1 %177 to i16
  %179 = shl nuw nsw i16 %178, 5
  %180 = or i16 %179, %175
  %181 = zext i16 %180 to i32
  %182 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 8
  %183 = load i8, i8* %182, align 1
  %184 = zext i8 %183 to i64
  %185 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %184
  %186 = load i8, i8* %185, align 1
  %187 = sext i8 %186 to i32
  %188 = icmp eq i32 %181, %187
  br i1 %188, label %189, label %75

189:                                              ; preds = %173
  %190 = getelementptr inbounds i16, i16* %44, i64 9
  %191 = load i16, i16* %190, align 2
  %192 = add i16 %191, -65
  %193 = icmp ult i16 %192, 26
  %194 = zext i1 %193 to i16
  %195 = shl nuw nsw i16 %194, 5
  %196 = or i16 %195, %191
  %197 = zext i16 %196 to i32
  %198 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 9
  %199 = load i8, i8* %198, align 1
  %200 = zext i8 %199 to i64
  %201 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %200
  %202 = load i8, i8* %201, align 1
  %203 = sext i8 %202 to i32
  %204 = icmp eq i32 %197, %203
  ret i1 %204

205:                                              ; preds = %28
  %206 = getelementptr inbounds i8, i8* %15, i64 2
  %207 = load i8, i8* %206, align 1
  %208 = zext i8 %207 to i64
  %209 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %208
  %210 = load i8, i8* %209, align 1
  %211 = zext i8 %210 to i32
  %212 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 2
  %213 = load i8, i8* %212, align 1
  %214 = zext i8 %213 to i64
  %215 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %214
  %216 = load i8, i8* %215, align 1
  %217 = sext i8 %216 to i32
  %218 = icmp eq i32 %211, %217
  br i1 %218, label %219, label %75

219:                                              ; preds = %205
  %220 = getelementptr inbounds i8, i8* %15, i64 3
  %221 = load i8, i8* %220, align 1
  %222 = zext i8 %221 to i64
  %223 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %222
  %224 = load i8, i8* %223, align 1
  %225 = zext i8 %224 to i32
  %226 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 3
  %227 = load i8, i8* %226, align 1
  %228 = zext i8 %227 to i64
  %229 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %228
  %230 = load i8, i8* %229, align 1
  %231 = sext i8 %230 to i32
  %232 = icmp eq i32 %225, %231
  br i1 %232, label %233, label %75

233:                                              ; preds = %219
  %234 = getelementptr inbounds i8, i8* %15, i64 4
  %235 = load i8, i8* %234, align 1
  %236 = zext i8 %235 to i64
  %237 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %236
  %238 = load i8, i8* %237, align 1
  %239 = zext i8 %238 to i32
  %240 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 4
  %241 = load i8, i8* %240, align 1
  %242 = zext i8 %241 to i64
  %243 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %242
  %244 = load i8, i8* %243, align 1
  %245 = sext i8 %244 to i32
  %246 = icmp eq i32 %239, %245
  br i1 %246, label %247, label %75

247:                                              ; preds = %233
  %248 = getelementptr inbounds i8, i8* %15, i64 5
  %249 = load i8, i8* %248, align 1
  %250 = zext i8 %249 to i64
  %251 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %250
  %252 = load i8, i8* %251, align 1
  %253 = zext i8 %252 to i32
  %254 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 5
  %255 = load i8, i8* %254, align 1
  %256 = zext i8 %255 to i64
  %257 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %256
  %258 = load i8, i8* %257, align 1
  %259 = sext i8 %258 to i32
  %260 = icmp eq i32 %253, %259
  br i1 %260, label %261, label %75

261:                                              ; preds = %247
  %262 = getelementptr inbounds i8, i8* %15, i64 6
  %263 = load i8, i8* %262, align 1
  %264 = zext i8 %263 to i64
  %265 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %264
  %266 = load i8, i8* %265, align 1
  %267 = zext i8 %266 to i32
  %268 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 6
  %269 = load i8, i8* %268, align 1
  %270 = zext i8 %269 to i64
  %271 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %270
  %272 = load i8, i8* %271, align 1
  %273 = sext i8 %272 to i32
  %274 = icmp eq i32 %267, %273
  br i1 %274, label %275, label %75

275:                                              ; preds = %261
  %276 = getelementptr inbounds i8, i8* %15, i64 7
  %277 = load i8, i8* %276, align 1
  %278 = zext i8 %277 to i64
  %279 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %278
  %280 = load i8, i8* %279, align 1
  %281 = zext i8 %280 to i32
  %282 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 7
  %283 = load i8, i8* %282, align 1
  %284 = zext i8 %283 to i64
  %285 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %284
  %286 = load i8, i8* %285, align 1
  %287 = sext i8 %286 to i32
  %288 = icmp eq i32 %281, %287
  br i1 %288, label %289, label %75

289:                                              ; preds = %275
  %290 = getelementptr inbounds i8, i8* %15, i64 8
  %291 = load i8, i8* %290, align 1
  %292 = zext i8 %291 to i64
  %293 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %292
  %294 = load i8, i8* %293, align 1
  %295 = zext i8 %294 to i32
  %296 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 8
  %297 = load i8, i8* %296, align 1
  %298 = zext i8 %297 to i64
  %299 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %298
  %300 = load i8, i8* %299, align 1
  %301 = sext i8 %300 to i32
  %302 = icmp eq i32 %295, %301
  br i1 %302, label %303, label %75

303:                                              ; preds = %289
  %304 = getelementptr inbounds i8, i8* %15, i64 9
  %305 = load i8, i8* %304, align 1
  %306 = zext i8 %305 to i64
  %307 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %306
  %308 = load i8, i8* %307, align 1
  %309 = zext i8 %308 to i32
  %310 = getelementptr inbounds [11 x i8], [11 x i8]* %1, i64 0, i64 9
  %311 = load i8, i8* %310, align 1
  %312 = zext i8 %311 to i64
  %313 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %312
  %314 = load i8, i8* %313, align 1
  %315 = sext i8 %314 to i32
  %316 = icmp eq i32 %309, %315
  br label %75
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN3WTF22EqualIgnoringASCIICaseILm9EEEbRKNS_10StringViewERAT__Kc(%"class.WTF::StringView"* dereferenceable(24), [9 x i8]* dereferenceable(9)) local_unnamed_addr #6 comdat {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 8
  br i1 %5, label %6, label %75

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 1
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %0, i64 0, i32 1
  br i1 %12, label %42, label %14

14:                                               ; preds = %6
  %15 = load i8*, i8** %13, align 8
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %17
  %19 = load i8, i8* %18, align 1
  %20 = zext i8 %19 to i32
  %21 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i64
  %24 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %23
  %25 = load i8, i8* %24, align 1
  %26 = sext i8 %25 to i32
  %27 = icmp eq i32 %20, %26
  br i1 %27, label %28, label %75

28:                                               ; preds = %14
  %29 = getelementptr inbounds i8, i8* %15, i64 1
  %30 = load i8, i8* %29, align 1
  %31 = zext i8 %30 to i64
  %32 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %31
  %33 = load i8, i8* %32, align 1
  %34 = zext i8 %33 to i32
  %35 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 1
  %36 = load i8, i8* %35, align 1
  %37 = zext i8 %36 to i64
  %38 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %37
  %39 = load i8, i8* %38, align 1
  %40 = sext i8 %39 to i32
  %41 = icmp eq i32 %34, %40
  br i1 %41, label %173, label %75

42:                                               ; preds = %6
  %43 = bitcast i8** %13 to i16**
  %44 = load i16*, i16** %43, align 8
  %45 = load i16, i16* %44, align 2
  %46 = add i16 %45, -65
  %47 = icmp ult i16 %46, 26
  %48 = zext i1 %47 to i16
  %49 = shl nuw nsw i16 %48, 5
  %50 = or i16 %49, %45
  %51 = zext i16 %50 to i32
  %52 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 0
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i64
  %55 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %54
  %56 = load i8, i8* %55, align 1
  %57 = sext i8 %56 to i32
  %58 = icmp eq i32 %51, %57
  br i1 %58, label %59, label %75

59:                                               ; preds = %42
  %60 = getelementptr inbounds i16, i16* %44, i64 1
  %61 = load i16, i16* %60, align 2
  %62 = add i16 %61, -65
  %63 = icmp ult i16 %62, 26
  %64 = zext i1 %63 to i16
  %65 = shl nuw nsw i16 %64, 5
  %66 = or i16 %65, %61
  %67 = zext i16 %66 to i32
  %68 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 1
  %69 = load i8, i8* %68, align 1
  %70 = zext i8 %69 to i64
  %71 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %70
  %72 = load i8, i8* %71, align 1
  %73 = sext i8 %72 to i32
  %74 = icmp eq i32 %67, %73
  br i1 %74, label %77, label %75

75:                                               ; preds = %243, %14, %28, %173, %187, %201, %215, %229, %42, %59, %77, %93, %109, %125, %141, %2
  %76 = phi i1 [ false, %2 ], [ false, %42 ], [ false, %59 ], [ false, %77 ], [ false, %93 ], [ false, %109 ], [ false, %125 ], [ false, %141 ], [ false, %14 ], [ false, %28 ], [ false, %173 ], [ false, %187 ], [ false, %201 ], [ false, %215 ], [ false, %229 ], [ %256, %243 ]
  ret i1 %76

77:                                               ; preds = %59
  %78 = getelementptr inbounds i16, i16* %44, i64 2
  %79 = load i16, i16* %78, align 2
  %80 = add i16 %79, -65
  %81 = icmp ult i16 %80, 26
  %82 = zext i1 %81 to i16
  %83 = shl nuw nsw i16 %82, 5
  %84 = or i16 %83, %79
  %85 = zext i16 %84 to i32
  %86 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 2
  %87 = load i8, i8* %86, align 1
  %88 = zext i8 %87 to i64
  %89 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %88
  %90 = load i8, i8* %89, align 1
  %91 = sext i8 %90 to i32
  %92 = icmp eq i32 %85, %91
  br i1 %92, label %93, label %75

93:                                               ; preds = %77
  %94 = getelementptr inbounds i16, i16* %44, i64 3
  %95 = load i16, i16* %94, align 2
  %96 = add i16 %95, -65
  %97 = icmp ult i16 %96, 26
  %98 = zext i1 %97 to i16
  %99 = shl nuw nsw i16 %98, 5
  %100 = or i16 %99, %95
  %101 = zext i16 %100 to i32
  %102 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 3
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i64
  %105 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %104
  %106 = load i8, i8* %105, align 1
  %107 = sext i8 %106 to i32
  %108 = icmp eq i32 %101, %107
  br i1 %108, label %109, label %75

109:                                              ; preds = %93
  %110 = getelementptr inbounds i16, i16* %44, i64 4
  %111 = load i16, i16* %110, align 2
  %112 = add i16 %111, -65
  %113 = icmp ult i16 %112, 26
  %114 = zext i1 %113 to i16
  %115 = shl nuw nsw i16 %114, 5
  %116 = or i16 %115, %111
  %117 = zext i16 %116 to i32
  %118 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 4
  %119 = load i8, i8* %118, align 1
  %120 = zext i8 %119 to i64
  %121 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %120
  %122 = load i8, i8* %121, align 1
  %123 = sext i8 %122 to i32
  %124 = icmp eq i32 %117, %123
  br i1 %124, label %125, label %75

125:                                              ; preds = %109
  %126 = getelementptr inbounds i16, i16* %44, i64 5
  %127 = load i16, i16* %126, align 2
  %128 = add i16 %127, -65
  %129 = icmp ult i16 %128, 26
  %130 = zext i1 %129 to i16
  %131 = shl nuw nsw i16 %130, 5
  %132 = or i16 %131, %127
  %133 = zext i16 %132 to i32
  %134 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 5
  %135 = load i8, i8* %134, align 1
  %136 = zext i8 %135 to i64
  %137 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %136
  %138 = load i8, i8* %137, align 1
  %139 = sext i8 %138 to i32
  %140 = icmp eq i32 %133, %139
  br i1 %140, label %141, label %75

141:                                              ; preds = %125
  %142 = getelementptr inbounds i16, i16* %44, i64 6
  %143 = load i16, i16* %142, align 2
  %144 = add i16 %143, -65
  %145 = icmp ult i16 %144, 26
  %146 = zext i1 %145 to i16
  %147 = shl nuw nsw i16 %146, 5
  %148 = or i16 %147, %143
  %149 = zext i16 %148 to i32
  %150 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 6
  %151 = load i8, i8* %150, align 1
  %152 = zext i8 %151 to i64
  %153 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %152
  %154 = load i8, i8* %153, align 1
  %155 = sext i8 %154 to i32
  %156 = icmp eq i32 %149, %155
  br i1 %156, label %157, label %75

157:                                              ; preds = %141
  %158 = getelementptr inbounds i16, i16* %44, i64 7
  %159 = load i16, i16* %158, align 2
  %160 = add i16 %159, -65
  %161 = icmp ult i16 %160, 26
  %162 = zext i1 %161 to i16
  %163 = shl nuw nsw i16 %162, 5
  %164 = or i16 %163, %159
  %165 = zext i16 %164 to i32
  %166 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 7
  %167 = load i8, i8* %166, align 1
  %168 = zext i8 %167 to i64
  %169 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %168
  %170 = load i8, i8* %169, align 1
  %171 = sext i8 %170 to i32
  %172 = icmp eq i32 %165, %171
  ret i1 %172

173:                                              ; preds = %28
  %174 = getelementptr inbounds i8, i8* %15, i64 2
  %175 = load i8, i8* %174, align 1
  %176 = zext i8 %175 to i64
  %177 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %176
  %178 = load i8, i8* %177, align 1
  %179 = zext i8 %178 to i32
  %180 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 2
  %181 = load i8, i8* %180, align 1
  %182 = zext i8 %181 to i64
  %183 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %182
  %184 = load i8, i8* %183, align 1
  %185 = sext i8 %184 to i32
  %186 = icmp eq i32 %179, %185
  br i1 %186, label %187, label %75

187:                                              ; preds = %173
  %188 = getelementptr inbounds i8, i8* %15, i64 3
  %189 = load i8, i8* %188, align 1
  %190 = zext i8 %189 to i64
  %191 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %190
  %192 = load i8, i8* %191, align 1
  %193 = zext i8 %192 to i32
  %194 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 3
  %195 = load i8, i8* %194, align 1
  %196 = zext i8 %195 to i64
  %197 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %196
  %198 = load i8, i8* %197, align 1
  %199 = sext i8 %198 to i32
  %200 = icmp eq i32 %193, %199
  br i1 %200, label %201, label %75

201:                                              ; preds = %187
  %202 = getelementptr inbounds i8, i8* %15, i64 4
  %203 = load i8, i8* %202, align 1
  %204 = zext i8 %203 to i64
  %205 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %204
  %206 = load i8, i8* %205, align 1
  %207 = zext i8 %206 to i32
  %208 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 4
  %209 = load i8, i8* %208, align 1
  %210 = zext i8 %209 to i64
  %211 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %210
  %212 = load i8, i8* %211, align 1
  %213 = sext i8 %212 to i32
  %214 = icmp eq i32 %207, %213
  br i1 %214, label %215, label %75

215:                                              ; preds = %201
  %216 = getelementptr inbounds i8, i8* %15, i64 5
  %217 = load i8, i8* %216, align 1
  %218 = zext i8 %217 to i64
  %219 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %218
  %220 = load i8, i8* %219, align 1
  %221 = zext i8 %220 to i32
  %222 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 5
  %223 = load i8, i8* %222, align 1
  %224 = zext i8 %223 to i64
  %225 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %224
  %226 = load i8, i8* %225, align 1
  %227 = sext i8 %226 to i32
  %228 = icmp eq i32 %221, %227
  br i1 %228, label %229, label %75

229:                                              ; preds = %215
  %230 = getelementptr inbounds i8, i8* %15, i64 6
  %231 = load i8, i8* %230, align 1
  %232 = zext i8 %231 to i64
  %233 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %232
  %234 = load i8, i8* %233, align 1
  %235 = zext i8 %234 to i32
  %236 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 6
  %237 = load i8, i8* %236, align 1
  %238 = zext i8 %237 to i64
  %239 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = sext i8 %240 to i32
  %242 = icmp eq i32 %235, %241
  br i1 %242, label %243, label %75

243:                                              ; preds = %229
  %244 = getelementptr inbounds i8, i8* %15, i64 7
  %245 = load i8, i8* %244, align 1
  %246 = zext i8 %245 to i64
  %247 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %246
  %248 = load i8, i8* %247, align 1
  %249 = zext i8 %248 to i32
  %250 = getelementptr inbounds [9 x i8], [9 x i8]* %1, i64 0, i64 7
  %251 = load i8, i8* %250, align 1
  %252 = zext i8 %251 to i64
  %253 = getelementptr inbounds [256 x i8], [256 x i8]* @_ZN3WTF19kASCIICaseFoldTableE, i64 0, i64 %252
  %254 = load i8, i8* %253, align 1
  %255 = sext i8 %254 to i32
  %256 = icmp eq i32 %249, %255
  br label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser18ParseImageResourceERKN3WTF6StringEPKNS_10JSONObjectE(%"class.WTF::Vector.5"* noalias sret, %"class.blink::ManifestParser"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend.177", align 8
  %8 = alloca %"class.mojo::StructPtr.8", align 8
  %9 = alloca %"class.blink::KURL", align 8
  %10 = alloca %"class.WTF::Vector.12", align 8
  %11 = alloca %"class.absl::optional.201", align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 2
  %15 = bitcast %"class.WTF::Vector.5"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 16, i1 false) #14
  %16 = tail call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* %3, %"class.WTF::String"* dereferenceable(8) %2) #14
  %17 = icmp eq %"class.blink::JSONValue"* %16, null
  br i1 %17, label %315, label %18

18:                                               ; preds = %4
  %19 = tail call %"class.blink::JSONArray"* @_ZNK5blink10JSONObject8GetArrayERKN3WTF6StringE(%"class.blink::JSONObject"* %3, %"class.WTF::String"* dereferenceable(8) %2) #14
  %20 = icmp eq %"class.blink::JSONArray"* %19, null
  br i1 %20, label %44, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %19, i64 0, i32 1, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %315, label %25

25:                                               ; preds = %21
  %26 = bitcast %"class.mojo::StructPtr.8"* %8 to i8*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.mojo::StructPtr.8"* %8 to i64*
  %29 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %9, i64 0, i32 0
  %30 = bitcast %"class.WTF::String"* %5 to i8*
  %31 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %1, i64 0, i32 1
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %33 = bitcast %"class.WTF::Vector.12"* %10 to i8*
  %34 = bitcast %"class.WTF::Vector.12"* %10 to i64*
  %35 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %10, i64 0, i32 0, i32 0, i32 1
  %36 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %10, i64 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %10, i64 0, i32 0, i32 0, i32 0
  %38 = getelementptr inbounds %"class.absl::optional.201", %"class.absl::optional.201"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.absl::optional.201", %"class.absl::optional.201"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %40 = bitcast %"class.WTF::Vector.17"* %39 to i64*
  %41 = getelementptr inbounds %"class.absl::optional.201", %"class.absl::optional.201"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.absl::optional.201", %"class.absl::optional.201"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %43 = getelementptr inbounds %"class.absl::optional.201", %"class.absl::optional.201"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  br label %191

44:                                               ; preds = %18
  %45 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #14
  %46 = bitcast %"class.WTF::StringAppend.177"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #14
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %125, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %67

57:                                               ; preds = %50
  %58 = zext i32 %56 to i33
  %59 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %58, i33 1) #14
  %60 = extractvalue { i33, i1 } %59, 1
  %61 = extractvalue { i33, i1 } %59, 0
  %62 = icmp slt i33 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %65, !prof !2

64:                                               ; preds = %57
  tail call void @llvm.trap() #14
  unreachable

65:                                               ; preds = %57
  %66 = trunc i33 %61 to i32
  store i32 %66, i32* %55, align 4
  br label %67

67:                                               ; preds = %65, %50
  %68 = phi i32 [ %66, %65 ], [ %56, %50 ]
  %69 = load atomic i32, i32* %51 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %82

72:                                               ; preds = %67
  %73 = zext i32 %68 to i33
  %74 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #14
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !2

79:                                               ; preds = %72
  tail call void @llvm.trap() #14
  unreachable

80:                                               ; preds = %72
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %55, align 4
  br label %82

82:                                               ; preds = %80, %67
  %83 = phi i32 [ %81, %80 ], [ %68, %67 ]
  %84 = load atomic i32, i32* %51 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %89

87:                                               ; preds = %82
  %88 = add i32 %83, -1
  store i32 %88, i32* %55, align 4
  br label %89

89:                                               ; preds = %87, %82
  %90 = phi i32 [ %88, %87 ], [ %83, %82 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #14
  br label %93

93:                                               ; preds = %89, %92
  %94 = load atomic i32, i32* %51 monotonic, align 4, !noalias !98
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = load i32, i32* %55, align 4
  br i1 %96, label %98, label %108

98:                                               ; preds = %93
  %99 = zext i32 %97 to i33
  %100 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %99, i33 1) #14
  %101 = extractvalue { i33, i1 } %100, 1
  %102 = extractvalue { i33, i1 } %100, 0
  %103 = icmp slt i33 %102, 0
  %104 = or i1 %101, %103
  br i1 %104, label %105, label %106, !prof !2

105:                                              ; preds = %98
  tail call void @llvm.trap() #14, !noalias !98
  unreachable

106:                                              ; preds = %98
  %107 = trunc i33 %102 to i32
  store i32 %107, i32* %55, align 4, !noalias !98
  br label %108

108:                                              ; preds = %93, %106
  %109 = phi i32 [ %107, %106 ], [ %97, %93 ]
  %110 = bitcast %"class.WTF::StringAppend.177"* %7 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.1 to i64), i64* %110, align 8, !alias.scope !98
  %111 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %111, align 8, !alias.scope !98
  %112 = load atomic i32, i32* %51 monotonic, align 4, !noalias !98
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %129

115:                                              ; preds = %108
  %116 = zext i32 %109 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #14
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !2

122:                                              ; preds = %115
  tail call void @llvm.trap() #14, !noalias !98
  unreachable

123:                                              ; preds = %115
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %55, align 4, !noalias !98
  br label %129

125:                                              ; preds = %44
  %126 = bitcast %"class.WTF::StringAppend.177"* %7 to i64*
  store i64 ptrtoint ([11 x i8]* @.str.1 to i64), i64* %126, align 8, !alias.scope !98
  %127 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %127, align 8, !alias.scope !98
  %128 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.42, i64 0, i64 0), i8** %128, align 8, !alias.scope !98
  br label %141

129:                                              ; preds = %123, %108
  %130 = phi i32 [ %124, %123 ], [ %109, %108 ]
  %131 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.42, i64 0, i64 0), i8** %131, align 8, !alias.scope !98
  %132 = load atomic i32, i32* %51 monotonic, align 4, !noalias !98
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %137

135:                                              ; preds = %129
  %136 = add i32 %130, -1
  store i32 %136, i32* %55, align 4, !noalias !98
  br label %137

137:                                              ; preds = %135, %129
  %138 = phi i32 [ %136, %135 ], [ %130, %129 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #14, !noalias !98
  br label %141

141:                                              ; preds = %125, %137, %140
  %142 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.177"* nonnull %7)
  %143 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %142, %"class.WTF::StringImpl"** %143, align 8
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %6, i1 zeroext false, i32 0, i32 0)
  %144 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %143, align 8
  %145 = icmp eq %"class.WTF::StringImpl"* %144, null
  br i1 %145, label %159, label %146

146:                                              ; preds = %141
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %144, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  br i1 %150, label %153, label %155

153:                                              ; preds = %146
  %154 = add i32 %152, -1
  store i32 %154, i32* %151, align 4
  br label %155

155:                                              ; preds = %153, %146
  %156 = phi i32 [ %154, %153 ], [ %152, %146 ]
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %144) #14
  br label %159

159:                                              ; preds = %141, %155, %158
  %160 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %160, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %176, label %163

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %172

170:                                              ; preds = %163
  %171 = add i32 %169, -1
  store i32 %171, i32* %168, align 4
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i32 [ %171, %170 ], [ %169, %163 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #14
  br label %176

176:                                              ; preds = %159, %172, %175
  br i1 %49, label %190, label %177

177:                                              ; preds = %176
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  br i1 %181, label %184, label %186

184:                                              ; preds = %177
  %185 = add i32 %183, -1
  store i32 %185, i32* %182, align 4
  br label %186

186:                                              ; preds = %184, %177
  %187 = phi i32 [ %185, %184 ], [ %183, %177 ]
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %186
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #14
  br label %190

190:                                              ; preds = %176, %186, %189
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #14
  br label %315

191:                                              ; preds = %25, %311
  %192 = phi i32 [ 0, %25 ], [ %312, %311 ]
  %193 = call %"class.blink::JSONValue"* @_ZNK5blink9JSONArray2atEj(%"class.blink::JSONArray"* nonnull %19, i32 %192) #14
  %194 = icmp eq %"class.blink::JSONValue"* %193, null
  br i1 %194, label %311, label %195

195:                                              ; preds = %191
  %196 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %193, i64 0, i32 1
  %197 = load i32, i32* %196, align 8
  %198 = icmp eq i32 %197, 5
  %199 = bitcast %"class.blink::JSONValue"* %193 to %"class.blink::JSONObject"*
  br i1 %198, label %200, label %311

200:                                              ; preds = %195
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #14
  %201 = call i8* @_Znwm(i64 152) #15, !noalias !101
  %202 = bitcast i8* %201 to %"class.blink::mojom::blink::ManifestImageResource"*
  call void @_ZN5blink5mojom5blink21ManifestImageResourceC1Ev(%"class.blink::mojom::blink::ManifestImageResource"* nonnull %202) #14, !noalias !101
  %203 = ptrtoint i8* %201 to i64
  store i64 %203, i64* %28, align 8, !alias.scope !101
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %29) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #14, !noalias !104
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.29, i64 0, i64 0), i64 3) #14, !noalias !104
  call void @_ZN5blink14ManifestParser8ParseURLEPKNS_10JSONObjectERKN3WTF6StringERKNS_4KURLENS0_20ParseURLRestrictionsE(%"class.blink::KURL"* nonnull sret %9, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* nonnull %199, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::KURL"* dereferenceable(112) %31, i32 0) #14
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8, !noalias !104
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %200
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  br i1 %210, label %213, label %215

213:                                              ; preds = %206
  %214 = add i32 %212, -1
  store i32 %214, i32* %211, align 4
  br label %215

215:                                              ; preds = %213, %206
  %216 = phi i32 [ %214, %213 ], [ %212, %206 ]
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %215
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %204) #14
  br label %219

219:                                              ; preds = %200, %215, %218
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #14, !noalias !104
  %220 = load %"class.blink::mojom::blink::ManifestImageResource"*, %"class.blink::mojom::blink::ManifestImageResource"** %27, align 8
  %221 = getelementptr inbounds %"class.blink::mojom::blink::ManifestImageResource", %"class.blink::mojom::blink::ManifestImageResource"* %220, i64 0, i32 0
  %222 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %221, %"class.blink::KURL"* nonnull dereferenceable(112) %9) #14
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %29) #14
  %223 = load %"class.blink::mojom::blink::ManifestImageResource"*, %"class.blink::mojom::blink::ManifestImageResource"** %27, align 8
  %224 = getelementptr inbounds %"class.blink::mojom::blink::ManifestImageResource", %"class.blink::mojom::blink::ManifestImageResource"* %223, i64 0, i32 0
  %225 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %224) #14
  br i1 %225, label %226, label %305

226:                                              ; preds = %219
  %227 = call %"class.WTF::StringImpl"* @_ZN5blink14ManifestParser13ParseIconTypeEPKNS_10JSONObjectE(%"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* nonnull %199)
  %228 = ptrtoint %"class.WTF::StringImpl"* %227 to i64
  %229 = load %"class.blink::mojom::blink::ManifestImageResource"*, %"class.blink::mojom::blink::ManifestImageResource"** %27, align 8
  %230 = getelementptr inbounds %"class.blink::mojom::blink::ManifestImageResource", %"class.blink::mojom::blink::ManifestImageResource"* %229, i64 0, i32 1
  %231 = bitcast %"class.WTF::String"* %230 to i64*
  %232 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %230, i64 0, i32 0, i32 0
  %233 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %232, align 8
  store i64 %228, i64* %231, align 8
  %234 = icmp eq %"class.WTF::StringImpl"* %233, null
  br i1 %234, label %248, label %235

235:                                              ; preds = %226
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %233, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %233, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  br i1 %239, label %242, label %244

242:                                              ; preds = %235
  %243 = add i32 %241, -1
  store i32 %243, i32* %240, align 4
  br label %244

244:                                              ; preds = %242, %235
  %245 = phi i32 [ %243, %242 ], [ %241, %235 ]
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %244
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %233) #14
  br label %248

248:                                              ; preds = %247, %244, %226
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #14
  call void @_ZN5blink14ManifestParser14ParseIconSizesEPKNS_10JSONObjectE(%"class.WTF::Vector.12"* nonnull sret %10, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* nonnull %199)
  %249 = load %"class.blink::mojom::blink::ManifestImageResource"*, %"class.blink::mojom::blink::ManifestImageResource"** %27, align 8
  %250 = getelementptr inbounds %"class.blink::mojom::blink::ManifestImageResource", %"class.blink::mojom::blink::ManifestImageResource"* %249, i64 0, i32 2
  %251 = load i64, i64* %34, align 8
  %252 = bitcast %"class.WTF::Vector.12"* %250 to i64*
  %253 = load i64, i64* %252, align 8
  store atomic i64 %253, i64* %34 monotonic, align 8
  store atomic i64 %251, i64* %252 monotonic, align 8
  %254 = getelementptr inbounds %"class.blink::mojom::blink::ManifestImageResource", %"class.blink::mojom::blink::ManifestImageResource"* %249, i64 0, i32 2, i32 0, i32 0, i32 1
  %255 = load i32, i32* %254, align 4
  %256 = load i32, i32* %35, align 8
  store i32 %256, i32* %254, align 4
  store i32 %255, i32* %35, align 8
  %257 = getelementptr inbounds %"class.blink::mojom::blink::ManifestImageResource", %"class.blink::mojom::blink::ManifestImageResource"* %249, i64 0, i32 2, i32 0, i32 0, i32 2
  %258 = load i32, i32* %257, align 4
  %259 = load i32, i32* %36, align 4
  store i32 %259, i32* %257, align 4
  store i32 %258, i32* %36, align 4
  %260 = icmp eq i64 %253, 0
  %261 = inttoptr i64 %253 to i8*
  br i1 %260, label %266, label %262, !prof !3

262:                                              ; preds = %248
  %263 = icmp eq i32 %258, 0
  br i1 %263, label %265, label %264, !prof !2

264:                                              ; preds = %262
  store i32 0, i32* %36, align 4
  br label %265

265:                                              ; preds = %264, %262
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %261) #14
  store %"class.gfx::Size"* null, %"class.gfx::Size"** %37, align 8
  br label %266

266:                                              ; preds = %248, %265
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #14
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %38) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %38, i8 -86, i64 24, i1 false)
  call void @_ZN5blink14ManifestParser16ParseIconPurposeEPKNS_10JSONObjectE(%"class.absl::optional.201"* nonnull sret %11, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* nonnull %199)
  %267 = load i8, i8* %38, align 8, !range !16
  %268 = icmp eq i8 %267, 0
  br i1 %268, label %304, label %269

269:                                              ; preds = %266
  %270 = load %"class.blink::mojom::blink::ManifestImageResource"*, %"class.blink::mojom::blink::ManifestImageResource"** %27, align 8
  %271 = getelementptr inbounds %"class.blink::mojom::blink::ManifestImageResource", %"class.blink::mojom::blink::ManifestImageResource"* %270, i64 0, i32 3
  %272 = load i64, i64* %40, align 8
  %273 = bitcast %"class.WTF::Vector.17"* %271 to i64*
  %274 = load i64, i64* %273, align 8
  store atomic i64 %274, i64* %40 monotonic, align 8
  store atomic i64 %272, i64* %273 monotonic, align 8
  %275 = getelementptr inbounds %"class.blink::mojom::blink::ManifestImageResource", %"class.blink::mojom::blink::ManifestImageResource"* %270, i64 0, i32 3, i32 0, i32 0, i32 1
  %276 = load i32, i32* %275, align 4
  %277 = load i32, i32* %41, align 8
  store i32 %277, i32* %275, align 4
  store i32 %276, i32* %41, align 8
  %278 = getelementptr inbounds %"class.blink::mojom::blink::ManifestImageResource", %"class.blink::mojom::blink::ManifestImageResource"* %270, i64 0, i32 3, i32 0, i32 0, i32 2
  %279 = load i32, i32* %278, align 4
  %280 = load i32, i32* %42, align 4
  store i32 %280, i32* %278, align 4
  store i32 %279, i32* %42, align 4
  %281 = load i32, i32* %14, align 4
  %282 = load i32, i32* %13, align 8
  %283 = icmp eq i32 %281, %282
  br i1 %283, label %293, label %284, !prof !2

284:                                              ; preds = %269
  %285 = load %"class.mojo::StructPtr.8"*, %"class.mojo::StructPtr.8"** %12, align 8
  %286 = zext i32 %281 to i64
  %287 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %285, i64 %286
  %288 = bitcast %"class.mojo::StructPtr.8"* %287 to i64*
  %289 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %287, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %289, align 8
  %290 = load i64, i64* %28, align 8
  store i64 %290, i64* %288, align 8
  store i64 0, i64* %28, align 8
  %291 = load i32, i32* %14, align 4
  %292 = add i32 %291, 1
  store i32 %292, i32* %14, align 4
  br label %294

293:                                              ; preds = %269
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.5"* %0, %"class.mojo::StructPtr.8"* nonnull dereferenceable(8) %8) #14
  br label %294

294:                                              ; preds = %293, %284
  %295 = load i32*, i32** %43, align 8
  %296 = icmp eq i32* %295, null
  %297 = bitcast i32* %295 to i8*
  br i1 %296, label %303, label %298, !prof !3

298:                                              ; preds = %294
  %299 = load i32, i32* %42, align 4
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %302, label %301, !prof !2

301:                                              ; preds = %298
  store i32 0, i32* %42, align 4
  br label %302

302:                                              ; preds = %301, %298
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %297) #14
  store i32* null, i32** %43, align 8
  br label %303

303:                                              ; preds = %302, %294
  store i8 0, i8* %38, align 8
  br label %304

304:                                              ; preds = %266, %303
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %38) #14
  br label %305

305:                                              ; preds = %219, %304
  %306 = load %"class.blink::mojom::blink::ManifestImageResource"*, %"class.blink::mojom::blink::ManifestImageResource"** %27, align 8
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %27, align 8
  %307 = icmp eq %"class.blink::mojom::blink::ManifestImageResource"* %306, null
  br i1 %307, label %310, label %308

308:                                              ; preds = %305
  call void @_ZN5blink5mojom5blink21ManifestImageResourceD1Ev(%"class.blink::mojom::blink::ManifestImageResource"* nonnull %306) #14
  %309 = getelementptr inbounds %"class.blink::mojom::blink::ManifestImageResource", %"class.blink::mojom::blink::ManifestImageResource"* %306, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %309) #15
  br label %310

310:                                              ; preds = %305, %308
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #14
  br label %311

311:                                              ; preds = %195, %191, %310
  %312 = add nuw i32 %192, 1
  %313 = load i32, i32* %22, align 4
  %314 = icmp ult i32 %312, %313
  br i1 %314, label %191, label %315

315:                                              ; preds = %311, %21, %4, %190
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink14ManifestParser17ParseShortcutNameEPKNS_10JSONObjectE(%"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional.179", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i64 0, i64 0), i64 8) #14
  %8 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0), i64 4) #14
  call void @_ZN5blink14ManifestParser20ParseStringForMemberEPKNS_10JSONObjectERKN3WTF6StringES7_bNS0_8TrimTypeE(%"class.absl::optional.179"* nonnull sret %3, %"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5, i1 zeroext true, i32 0)
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #14
  br label %25

25:                                               ; preds = %2, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #14
  br label %42

42:                                               ; preds = %25, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  %43 = load i8, i8* %6, align 8, !range !16
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %84, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %66, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %66

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i33
  %58 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %57, i33 1) #14
  %59 = extractvalue { i33, i1 } %58, 1
  %60 = extractvalue { i33, i1 } %58, 0
  %61 = icmp slt i33 %60, 0
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %64, !prof !2

63:                                               ; preds = %54
  call void @llvm.trap() #14
  unreachable

64:                                               ; preds = %54
  %65 = trunc i33 %60 to i32
  store i32 %65, i32* %55, align 4
  br label %66

66:                                               ; preds = %64, %49, %45
  %67 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #14
  br label %83

83:                                               ; preds = %82, %79, %66
  store i8 0, i8* %6, align 8
  br label %84

84:                                               ; preds = %42, %83
  %85 = phi %"class.WTF::StringImpl"* [ %47, %83 ], [ null, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret %"class.WTF::StringImpl"* %85
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink14ManifestParser22ParseShortcutShortNameEPKNS_10JSONObjectE(%"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional.179", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i64 0, i64 0), i64 8) #14
  %8 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.17, i64 0, i64 0), i64 10) #14
  call void @_ZN5blink14ManifestParser20ParseStringForMemberEPKNS_10JSONObjectERKN3WTF6StringES7_bNS0_8TrimTypeE(%"class.absl::optional.179"* nonnull sret %3, %"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5, i1 zeroext false, i32 0)
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #14
  br label %25

25:                                               ; preds = %2, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #14
  br label %42

42:                                               ; preds = %25, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  %43 = load i8, i8* %6, align 8, !range !16
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %84, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %66, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %66

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i33
  %58 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %57, i33 1) #14
  %59 = extractvalue { i33, i1 } %58, 1
  %60 = extractvalue { i33, i1 } %58, 0
  %61 = icmp slt i33 %60, 0
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %64, !prof !2

63:                                               ; preds = %54
  call void @llvm.trap() #14
  unreachable

64:                                               ; preds = %54
  %65 = trunc i33 %60 to i32
  store i32 %65, i32* %55, align 4
  br label %66

66:                                               ; preds = %64, %49, %45
  %67 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #14
  br label %83

83:                                               ; preds = %82, %79, %66
  store i8 0, i8* %6, align 8
  br label %84

84:                                               ; preds = %42, %83
  %85 = phi %"class.WTF::StringImpl"* [ %47, %83 ], [ null, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret %"class.WTF::StringImpl"* %85
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink14ManifestParser24ParseShortcutDescriptionEPKNS_10JSONObjectE(%"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional.179", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.43, i64 0, i64 0), i64 8) #14
  %8 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.18, i64 0, i64 0), i64 11) #14
  call void @_ZN5blink14ManifestParser20ParseStringForMemberEPKNS_10JSONObjectERKN3WTF6StringES7_bNS0_8TrimTypeE(%"class.absl::optional.179"* nonnull sret %3, %"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5, i1 zeroext false, i32 0)
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #14
  br label %25

25:                                               ; preds = %2, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #14
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %42, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %38

36:                                               ; preds = %29
  %37 = add i32 %35, -1
  store i32 %37, i32* %34, align 4
  br label %38

38:                                               ; preds = %36, %29
  %39 = phi i32 [ %37, %36 ], [ %35, %29 ]
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %38
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #14
  br label %42

42:                                               ; preds = %25, %38, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  %43 = load i8, i8* %6, align 8, !range !16
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %84, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %66, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %66

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = zext i32 %56 to i33
  %58 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %57, i33 1) #14
  %59 = extractvalue { i33, i1 } %58, 1
  %60 = extractvalue { i33, i1 } %58, 0
  %61 = icmp slt i33 %60, 0
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %64, !prof !2

63:                                               ; preds = %54
  call void @llvm.trap() #14
  unreachable

64:                                               ; preds = %54
  %65 = trunc i33 %60 to i32
  store i32 %65, i32* %55, align 4
  br label %66

66:                                               ; preds = %64, %49, %45
  %67 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #14
  br label %83

83:                                               ; preds = %82, %79, %66
  store i8 0, i8* %6, align 8
  br label %84

84:                                               ; preds = %42, %83
  %85 = phi %"class.WTF::StringImpl"* [ %47, %83 ], [ null, %42 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret %"class.WTF::StringImpl"* %85
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser16ParseShortcutUrlEPKNS_10JSONObjectE(%"class.blink::KURL"* noalias sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %0, i64 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 -86, i64 112, i1 false)
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), i64 3) #14
  %8 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %1, i64 0, i32 1
  call void @_ZN5blink14ManifestParser8ParseURLEPKNS_10JSONObjectERKN3WTF6StringERKNS_4KURLENS0_20ParseURLRestrictionsE(%"class.blink::KURL"* sret %0, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::KURL"* dereferenceable(112) %8, i32 2)
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #14
  br label %25

25:                                               ; preds = %3, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  %26 = call zeroext i1 @_ZNK5blink4KURL6IsNullEv(%"class.blink::KURL"* %0) #14
  br i1 %26, label %27, label %46

27:                                               ; preds = %25
  %28 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.45, i64 0, i64 0), i64 41) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %5, i1 zeroext false, i32 0, i32 0)
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %45, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %41

39:                                               ; preds = %32
  %40 = add i32 %38, -1
  store i32 %40, i32* %37, align 4
  br label %41

41:                                               ; preds = %39, %32
  %42 = phi i32 [ %40, %39 ], [ %38, %32 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %30) #14
  br label %45

45:                                               ; preds = %27, %41, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  br label %46

46:                                               ; preds = %25, %45
  ret void
}

declare zeroext i1 @_ZNK5blink4KURL6IsNullEv(%"class.blink::KURL"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink14ManifestParser19ParseFileFilterNameEPKNS_10JSONObjectE(%"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0), i64 4) #14
  %10 = call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4) #14
  %11 = icmp eq %"class.blink::JSONValue"* %10, null
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %14, label %28, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %21 = load i32, i32* %20, align 4
  br i1 %19, label %22, label %24

22:                                               ; preds = %15
  %23 = add i32 %21, -1
  store i32 %23, i32* %20, align 4
  br label %24

24:                                               ; preds = %22, %15
  %25 = phi i32 [ %23, %22 ], [ %21, %15 ]
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %24
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %13) #14
  br label %28

28:                                               ; preds = %2, %24, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #14
  br i1 %11, label %29, label %48

29:                                               ; preds = %28
  %30 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.48, i64 0, i64 0), i64 24) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %5, i1 zeroext false, i32 0, i32 0)
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #14
  br label %47

47:                                               ; preds = %29, %43, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i64 0) #14
  br label %109

48:                                               ; preds = %28
  %49 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #14
  %50 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %51 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0), i64 4) #14
  %52 = call zeroext i1 @_ZNK5blink10JSONObject9GetStringERKN3WTF6StringEPS2_(%"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* nonnull %6) #14
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %48
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #14
  br label %69

69:                                               ; preds = %48, %65, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #14
  br i1 %52, label %88, label %70

70:                                               ; preds = %69
  %71 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([47 x i8], [47 x i8]* @.str.49, i64 0, i64 0), i64 46) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %8, i1 zeroext false, i32 0, i32 0)
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %92, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %92

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #14
  br label %92

88:                                               ; preds = %69
  %89 = bitcast %"class.WTF::String"* %6 to i64*
  %90 = load i64, i64* %89, align 8
  %91 = bitcast %"class.WTF::String"* %3 to i64*
  store i64 %90, i64* %91, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  br label %108

92:                                               ; preds = %87, %84, %70
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %3, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i64 0) #14
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #14
  br label %108

108:                                              ; preds = %88, %92, %104, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #14
  br label %109

109:                                              ; preds = %108, %47
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  ret %"class.WTF::StringImpl"* %111
}

declare zeroext i1 @_ZNK5blink10JSONObject9GetStringERKN3WTF6StringEPS2_(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser21ParseFileFilterAcceptEPKNS_10JSONObjectE(%"class.WTF::Vector.54"* noalias sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %0, i64 0, i32 0, i32 0, i32 2
  %14 = bitcast %"class.WTF::Vector.54"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #14
  %15 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i64 0, i64 0), i64 6) #14
  %16 = call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #14
  %17 = icmp eq %"class.blink::JSONValue"* %16, null
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 2
  %25 = icmp eq i32 %24, 0
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 0
  %27 = load i32, i32* %26, align 4
  br i1 %25, label %28, label %30

28:                                               ; preds = %21
  %29 = add i32 %27, -1
  store i32 %29, i32* %26, align 4
  br label %30

30:                                               ; preds = %28, %21
  %31 = phi i32 [ %29, %28 ], [ %27, %21 ]
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %34

33:                                               ; preds = %30
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %19) #14
  br label %34

34:                                               ; preds = %3, %30, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #14
  br i1 %17, label %232, label %35

35:                                               ; preds = %34
  %36 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #14
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %37, align 8
  %38 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i64 0, i64 0), i64 6) #14
  %39 = call zeroext i1 @_ZNK5blink10JSONObject9GetStringERKN3WTF6StringEPS2_(%"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull %5) #14
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %41 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %40, align 8
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %56, label %43

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #14
  br label %56

56:                                               ; preds = %35, %52, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #14
  br i1 %39, label %57, label %88

57:                                               ; preds = %56
  %58 = load i32, i32* %13, align 4
  %59 = load i32, i32* %12, align 8
  %60 = icmp eq i32 %58, %59
  br i1 %60, label %87, label %61, !prof !2

61:                                               ; preds = %57
  %62 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %63 = zext i32 %58 to i64
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %62, i64 %63, i32 0, i32 0
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %65, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %66, label %84, label %67

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = zext i32 %74 to i33
  %76 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %75, i33 1) #14
  %77 = extractvalue { i33, i1 } %76, 1
  %78 = extractvalue { i33, i1 } %76, 0
  %79 = icmp slt i33 %78, 0
  %80 = or i1 %77, %79
  br i1 %80, label %81, label %82, !prof !2

81:                                               ; preds = %72
  call void @llvm.trap() #14
  unreachable

82:                                               ; preds = %72
  %83 = trunc i33 %78 to i32
  store i32 %83, i32* %73, align 4
  br label %84

84:                                               ; preds = %82, %67, %61
  %85 = load i32, i32* %13, align 4
  %86 = add i32 %85, 1
  store i32 %86, i32* %13, align 4
  br label %215

87:                                               ; preds = %57
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.54"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %5) #14
  br label %215

88:                                               ; preds = %56
  %89 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i64 0, i64 0), i64 6) #14
  %90 = call %"class.blink::JSONArray"* @_ZNK5blink10JSONObject8GetArrayERKN3WTF6StringE(%"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %7) #14
  %91 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #14
  br label %107

107:                                              ; preds = %88, %103, %106
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #14
  %108 = icmp eq %"class.blink::JSONArray"* %90, null
  br i1 %108, label %118, label %109

109:                                              ; preds = %107
  %110 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %90, i64 0, i32 1, i32 0, i32 0, i32 2
  %111 = load i32, i32* %110, align 4
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %215, label %113

113:                                              ; preds = %109
  %114 = bitcast %"class.WTF::String"* %9 to i8*
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %116 = bitcast %"class.WTF::String"* %10 to i8*
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  br label %137

118:                                              ; preds = %107
  %119 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %119) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.51, i64 0, i64 0), i64 57) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %8, i1 zeroext false, i32 0, i32 0)
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %120, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %136, label %123

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #14
  br label %136

136:                                              ; preds = %118, %132, %135
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %119) #14
  br label %215

137:                                              ; preds = %113, %211
  %138 = phi i32 [ 0, %113 ], [ %212, %211 ]
  %139 = call %"class.blink::JSONValue"* @_ZNK5blink9JSONArray2atEj(%"class.blink::JSONArray"* nonnull %90, i32 %138) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #14
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %115, align 8
  %140 = icmp eq %"class.blink::JSONValue"* %139, null
  br i1 %140, label %147, label %141

141:                                              ; preds = %137
  %142 = bitcast %"class.blink::JSONValue"* %139 to i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)***
  %143 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)**, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*** %142, align 8
  %144 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %143, i64 5
  %145 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %144, align 8
  %146 = call zeroext i1 %145(%"class.blink::JSONValue"* nonnull %139, %"class.WTF::String"* nonnull %9) #14
  br i1 %146, label %164, label %147

147:                                              ; preds = %137, %141
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.52, i64 0, i64 0), i64 54) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %10, i1 zeroext false, i32 0, i32 0)
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %117, align 8
  %149 = icmp eq %"class.WTF::StringImpl"* %148, null
  br i1 %149, label %163, label %150

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %148, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %159

157:                                              ; preds = %150
  %158 = add i32 %156, -1
  store i32 %158, i32* %155, align 4
  br label %159

159:                                              ; preds = %157, %150
  %160 = phi i32 [ %158, %157 ], [ %156, %150 ]
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %163

162:                                              ; preds = %159
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %148) #14
  br label %163

163:                                              ; preds = %147, %159, %162
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #14
  br label %195

164:                                              ; preds = %141
  %165 = load i32, i32* %13, align 4
  %166 = load i32, i32* %12, align 8
  %167 = icmp eq i32 %165, %166
  br i1 %167, label %194, label %168, !prof !2

168:                                              ; preds = %164
  %169 = load %"class.WTF::String"*, %"class.WTF::String"** %11, align 8
  %170 = zext i32 %165 to i64
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %172 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %169, i64 %170, i32 0, i32 0
  store %"class.WTF::StringImpl"* %171, %"class.WTF::StringImpl"** %172, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %173, label %191, label %174

174:                                              ; preds = %168
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %191

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %181 = load i32, i32* %180, align 4
  %182 = zext i32 %181 to i33
  %183 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %182, i33 1) #14
  %184 = extractvalue { i33, i1 } %183, 1
  %185 = extractvalue { i33, i1 } %183, 0
  %186 = icmp slt i33 %185, 0
  %187 = or i1 %184, %186
  br i1 %187, label %188, label %189, !prof !2

188:                                              ; preds = %179
  call void @llvm.trap() #14
  unreachable

189:                                              ; preds = %179
  %190 = trunc i33 %185 to i32
  store i32 %190, i32* %180, align 4
  br label %191

191:                                              ; preds = %189, %174, %168
  %192 = load i32, i32* %13, align 4
  %193 = add i32 %192, 1
  store i32 %193, i32* %13, align 4
  br label %195

194:                                              ; preds = %164
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.54"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %9) #14
  br label %195

195:                                              ; preds = %194, %191, %163
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %196, null
  br i1 %197, label %211, label %198

198:                                              ; preds = %195
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 0
  %204 = load i32, i32* %203, align 4
  br i1 %202, label %205, label %207

205:                                              ; preds = %198
  %206 = add i32 %204, -1
  store i32 %206, i32* %203, align 4
  br label %207

207:                                              ; preds = %205, %198
  %208 = phi i32 [ %206, %205 ], [ %204, %198 ]
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %207
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %196) #14
  br label %211

211:                                              ; preds = %195, %207, %210
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #14
  %212 = add nuw i32 %138, 1
  %213 = load i32, i32* %110, align 4
  %214 = icmp ult i32 %212, %213
  br i1 %214, label %137, label %215

215:                                              ; preds = %211, %109, %87, %84, %136
  %216 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %217 = icmp eq %"class.WTF::StringImpl"* %216, null
  br i1 %217, label %231, label %218

218:                                              ; preds = %215
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = and i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  br i1 %222, label %225, label %227

225:                                              ; preds = %218
  %226 = add i32 %224, -1
  store i32 %226, i32* %223, align 4
  br label %227

227:                                              ; preds = %225, %218
  %228 = phi i32 [ %226, %225 ], [ %224, %218 ]
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %227
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %216) #14
  br label %231

231:                                              ; preds = %215, %227, %230
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #14
  br label %232

232:                                              ; preds = %231, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser16ParseTargetFilesERKN3WTF6StringEPKNS_10JSONObjectE(%"class.WTF::Vector.47"* noalias sret, %"class.blink::ManifestParser"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = bitcast %"class.WTF::Vector.47"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #14
  %8 = tail call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* %3, %"class.WTF::String"* dereferenceable(8) %2) #14
  %9 = icmp eq %"class.blink::JSONValue"* %8, null
  br i1 %9, label %74, label %10

10:                                               ; preds = %4
  %11 = tail call %"class.blink::JSONArray"* @_ZNK5blink10JSONObject8GetArrayERKN3WTF6StringE(%"class.blink::JSONObject"* %3, %"class.WTF::String"* dereferenceable(8) %2) #14
  %12 = icmp eq %"class.blink::JSONArray"* %11, null
  br i1 %12, label %20, label %13

13:                                               ; preds = %10
  %14 = getelementptr inbounds %"class.blink::JSONArray", %"class.blink::JSONArray"* %11, i64 0, i32 1, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %74, label %17

17:                                               ; preds = %13
  %18 = bitcast %"class.WTF::String"* %6 to i8*
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  br label %43

20:                                               ; preds = %10
  %21 = tail call %"class.blink::JSONObject"* @_ZNK5blink10JSONObject13GetJSONObjectERKN3WTF6StringE(%"class.blink::JSONObject"* %3, %"class.WTF::String"* dereferenceable(8) %2) #14
  %22 = icmp eq %"class.blink::JSONObject"* %21, null
  br i1 %22, label %23, label %42

23:                                               ; preds = %20
  %24 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.53, i64 0, i64 0), i64 60) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %5, i1 zeroext false, i32 0, i32 0)
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #14
  br label %41

41:                                               ; preds = %23, %37, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #14
  br label %74

42:                                               ; preds = %20
  tail call void @_ZN5blink14ManifestParser15ParseFileFilterEPKNS_10JSONObjectEPN3WTF6VectorIN4mojo9StructPtrINS_5mojom5blink18ManifestFileFilterEEELj0ENS4_18PartitionAllocatorEEE(%"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* nonnull %21, %"class.WTF::Vector.47"* %0)
  br label %74

43:                                               ; preds = %17, %70
  %44 = phi i32 [ 0, %17 ], [ %71, %70 ]
  %45 = call %"class.blink::JSONValue"* @_ZNK5blink9JSONArray2atEj(%"class.blink::JSONArray"* nonnull %11, i32 %44) #14
  %46 = icmp eq %"class.blink::JSONValue"* %45, null
  br i1 %46, label %51, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %45, i64 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 5
  br i1 %50, label %68, label %51

51:                                               ; preds = %47, %43
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([52 x i8], [52 x i8]* @.str.54, i64 0, i64 0), i64 51) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %6, i1 zeroext false, i32 0, i32 0)
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #14
  br label %67

67:                                               ; preds = %51, %63, %66
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #14
  br label %70

68:                                               ; preds = %47
  %69 = bitcast %"class.blink::JSONValue"* %45 to %"class.blink::JSONObject"*
  call void @_ZN5blink14ManifestParser15ParseFileFilterEPKNS_10JSONObjectEPN3WTF6VectorIN4mojo9StructPtrINS_5mojom5blink18ManifestFileFilterEEELj0ENS4_18PartitionAllocatorEEE(%"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* nonnull %69, %"class.WTF::Vector.47"* %0)
  br label %70

70:                                               ; preds = %68, %67
  %71 = add nuw i32 %44, 1
  %72 = load i32, i32* %14, align 4
  %73 = icmp ult i32 %71, %72
  br i1 %73, label %43, label %74

74:                                               ; preds = %70, %13, %4, %41, %42
  ret void
}

declare %"class.blink::JSONObject"* @_ZNK5blink10JSONObject13GetJSONObjectERKN3WTF6StringE(%"class.blink::JSONObject"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser15ParseFileFilterEPKNS_10JSONObjectEPN3WTF6VectorIN4mojo9StructPtrINS_5mojom5blink18ManifestFileFilterEEELj0ENS4_18PartitionAllocatorEEE(%"class.blink::ManifestParser"*, %"class.blink::JSONObject"*, %"class.WTF::Vector.47"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.mojo::StructPtr.50", align 8
  %5 = alloca %"class.WTF::Vector.54", align 8
  %6 = bitcast %"class.mojo::StructPtr.50"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = tail call i8* @_Znwm(i64 24) #15, !noalias !107
  %9 = bitcast i8* %8 to %"class.blink::mojom::blink::ManifestFileFilter"*
  tail call void @_ZN5blink5mojom5blink18ManifestFileFilterC1Ev(%"class.blink::mojom::blink::ManifestFileFilter"* nonnull %9) #14, !noalias !107
  %10 = ptrtoint i8* %8 to i64
  %11 = bitcast %"class.mojo::StructPtr.50"* %4 to i64*
  store i64 %10, i64* %11, align 8, !alias.scope !107
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink14ManifestParser19ParseFileFilterNameEPKNS_10JSONObjectE(%"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* %1)
  %13 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %14 = bitcast i8* %8 to i64*
  %15 = bitcast i8* %8 to %"class.WTF::StringImpl"**
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  store i64 %13, i64* %14, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #14
  br label %31

31:                                               ; preds = %30, %27, %3
  %32 = load %"class.blink::mojom::blink::ManifestFileFilter"*, %"class.blink::mojom::blink::ManifestFileFilter"** %7, align 8
  %33 = getelementptr inbounds %"class.blink::mojom::blink::ManifestFileFilter", %"class.blink::mojom::blink::ManifestFileFilter"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %115, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %115, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.WTF::Vector.54"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %41) #14
  call void @_ZN5blink14ManifestParser21ParseFileFilterAcceptEPKNS_10JSONObjectE(%"class.WTF::Vector.54"* nonnull sret %5, %"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* %1)
  %42 = getelementptr inbounds %"class.blink::mojom::blink::ManifestFileFilter", %"class.blink::mojom::blink::ManifestFileFilter"* %32, i64 0, i32 1
  %43 = bitcast %"class.WTF::Vector.54"* %5 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.WTF::Vector.54"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  store atomic i64 %46, i64* %43 monotonic, align 8
  store atomic i64 %44, i64* %45 monotonic, align 8
  %47 = getelementptr inbounds %"class.blink::mojom::blink::ManifestFileFilter", %"class.blink::mojom::blink::ManifestFileFilter"* %32, i64 0, i32 1, i32 0, i32 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %5, i64 0, i32 0, i32 0, i32 1
  %49 = load i32, i32* %47, align 4
  %50 = load i32, i32* %48, align 8
  store i32 %50, i32* %47, align 4
  store i32 %49, i32* %48, align 8
  %51 = getelementptr inbounds %"class.blink::mojom::blink::ManifestFileFilter", %"class.blink::mojom::blink::ManifestFileFilter"* %32, i64 0, i32 1, i32 0, i32 0, i32 2
  %52 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %5, i64 0, i32 0, i32 0, i32 2
  %53 = load i32, i32* %51, align 4
  %54 = load i32, i32* %52, align 4
  store i32 %54, i32* %51, align 4
  store i32 %53, i32* %52, align 4
  %55 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %5, i64 0, i32 0, i32 0, i32 0
  %56 = inttoptr i64 %46 to %"class.WTF::String"*
  %57 = icmp eq i64 %46, 0
  br i1 %57, label %93, label %58, !prof !3

58:                                               ; preds = %40
  %59 = inttoptr i64 %46 to i8*
  %60 = icmp eq i32 %53, 0
  br i1 %60, label %88, label %61, !prof !2

61:                                               ; preds = %58
  %62 = zext i32 %53 to i64
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 %62
  br label %64

64:                                               ; preds = %82, %61
  %65 = phi %"class.WTF::String"* [ %83, %82 ], [ %56, %61 ]
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %65, i64 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #14
  br label %82

82:                                               ; preds = %81, %78, %64
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %65, i64 1
  %84 = icmp eq %"class.WTF::String"* %83, %63
  br i1 %84, label %85, label %64

85:                                               ; preds = %82
  store i32 0, i32* %52, align 4
  %86 = bitcast %"class.WTF::Vector.54"* %5 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %85, %58
  %89 = phi i8* [ %87, %85 ], [ %59, %58 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #14
  store %"class.WTF::String"* null, %"class.WTF::String"** %55, align 8
  %90 = load %"class.blink::mojom::blink::ManifestFileFilter"*, %"class.blink::mojom::blink::ManifestFileFilter"** %7, align 8
  %91 = getelementptr inbounds %"class.blink::mojom::blink::ManifestFileFilter", %"class.blink::mojom::blink::ManifestFileFilter"* %90, i64 0, i32 1, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  br label %93

93:                                               ; preds = %40, %88
  %94 = phi i32 [ %54, %40 ], [ %92, %88 ]
  %95 = phi %"class.blink::mojom::blink::ManifestFileFilter"* [ %32, %40 ], [ %90, %88 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %41) #14
  %96 = icmp eq i32 %94, 0
  br i1 %96, label %115, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.WTF::Vector.47", %"class.WTF::Vector.47"* %2, i64 0, i32 0, i32 0, i32 2
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"class.WTF::Vector.47", %"class.WTF::Vector.47"* %2, i64 0, i32 0, i32 0, i32 1
  %101 = load i32, i32* %100, align 8
  %102 = icmp eq i32 %99, %101
  br i1 %102, label %113, label %103, !prof !2

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.WTF::Vector.47", %"class.WTF::Vector.47"* %2, i64 0, i32 0, i32 0, i32 0
  %105 = load %"class.mojo::StructPtr.50"*, %"class.mojo::StructPtr.50"** %104, align 8
  %106 = zext i32 %99 to i64
  %107 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %105, i64 %106
  %108 = bitcast %"class.mojo::StructPtr.50"* %107 to i64*
  %109 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %107, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %109, align 8
  %110 = load i64, i64* %11, align 8
  store i64 %110, i64* %108, align 8
  %111 = load i32, i32* %98, align 4
  %112 = add i32 %111, 1
  store i32 %112, i32* %98, align 4
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %7, align 8
  br label %120

113:                                              ; preds = %97
  call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink18ManifestFileFilterEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.47"* %2, %"class.mojo::StructPtr.50"* nonnull dereferenceable(8) %4) #14
  %114 = load %"class.blink::mojom::blink::ManifestFileFilter"*, %"class.blink::mojom::blink::ManifestFileFilter"** %7, align 8
  br label %115

115:                                              ; preds = %113, %36, %31, %93
  %116 = phi %"class.blink::mojom::blink::ManifestFileFilter"* [ %95, %93 ], [ %32, %31 ], [ %32, %36 ], [ %114, %113 ]
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %7, align 8
  %117 = icmp eq %"class.blink::mojom::blink::ManifestFileFilter"* %116, null
  br i1 %117, label %120, label %118

118:                                              ; preds = %115
  call void @_ZN5blink5mojom5blink18ManifestFileFilterD1Ev(%"class.blink::mojom::blink::ManifestFileFilter"* nonnull %116) #14
  %119 = bitcast %"class.blink::mojom::blink::ManifestFileFilter"* %116 to i8*
  call void @_ZdlPv(i8* %119) #15
  br label %120

120:                                              ; preds = %103, %115, %118
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink14ManifestParser22ParseShareTargetMethodEPKNS_10JSONObjectE(%"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i64 0, i64 0), i64 6) #14
  %12 = call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %7) #14
  %13 = icmp eq %"class.blink::JSONValue"* %12, null
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #14
  br label %30

30:                                               ; preds = %2, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  br i1 %13, label %31, label %49

31:                                               ; preds = %30
  %32 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.56, i64 0, i64 0), i64 73) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %8, i1 zeroext false, i32 0, i32 0)
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %154, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %154

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #14
  br label %154

49:                                               ; preds = %30
  %50 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #14
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %51, align 8
  %52 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.55, i64 0, i64 0), i64 6) #14
  %53 = call zeroext i1 @_ZNK5blink10JSONObject9GetStringERKN3WTF6StringEPS2_(%"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::String"* nonnull %9) #14
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #14
  br label %70

70:                                               ; preds = %49, %66, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #14
  br i1 %53, label %71, label %136

71:                                               ; preds = %70
  %72 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String10UpperASCIIEv(%"class.WTF::String"* nonnull %9) #14
  %73 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #14
  %74 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %74, label %75, label %79

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %76, align 8
  %77 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %78 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %77, i64* %78, align 8
  br label %87

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %80, align 8
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 1
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %85 = bitcast i8** %84 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"** %85, align 8
  %86 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %87

87:                                               ; preds = %79, %75
  %88 = phi i64 [ %86, %79 ], [ %77, %75 ]
  %89 = phi i32 [ %82, %79 ], [ 0, %75 ]
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %89, i32* %90, align 8
  %91 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #14
  %92 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %88, i64* %92, align 8
  %93 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.57, i64 0, i64 0), i8** %93, align 8
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 3, i32* %94, align 8
  %95 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #14
  br i1 %95, label %120, label %96

96:                                               ; preds = %87
  %97 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #14
  br i1 %74, label %98, label %102

98:                                               ; preds = %96
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %99, align 8
  %100 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %101 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %100, i64* %101, align 8
  br label %110

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %103, align 8
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 1
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %108 = bitcast i8** %107 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %106, %"class.WTF::StringImpl"** %108, align 8
  %109 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %110

110:                                              ; preds = %102, %98
  %111 = phi i64 [ %109, %102 ], [ %100, %98 ]
  %112 = phi i32 [ %105, %102 ], [ 0, %98 ]
  %113 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %112, i32* %113, align 8
  %114 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #14
  %115 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %111, i64* %115, align 8
  %116 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.58, i64 0, i64 0), i8** %116, align 8
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 4, i32* %117, align 8
  %118 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #14
  %119 = zext i1 %118 to i8
  br label %120

120:                                              ; preds = %110, %87
  %121 = phi i8 [ 1, %87 ], [ %119, %110 ]
  %122 = phi i32 [ 0, %87 ], [ 1, %110 ]
  br i1 %74, label %136, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #14
  br label %136

136:                                              ; preds = %135, %132, %120, %70
  %137 = phi i8 [ 0, %70 ], [ %121, %120 ], [ %121, %132 ], [ %121, %135 ]
  %138 = phi i32 [ undef, %70 ], [ %122, %120 ], [ %122, %132 ], [ %122, %135 ]
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #14
  br label %154

154:                                              ; preds = %153, %150, %136, %48, %45, %31
  %155 = phi i8* [ %32, %31 ], [ %32, %45 ], [ %32, %48 ], [ %50, %136 ], [ %50, %150 ], [ %50, %153 ]
  %156 = phi i8 [ 1, %31 ], [ 1, %45 ], [ 1, %48 ], [ %137, %136 ], [ %137, %150 ], [ %137, %153 ]
  %157 = phi i32 [ 0, %31 ], [ 0, %45 ], [ 0, %48 ], [ %138, %136 ], [ %138, %150 ], [ %138, %153 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #14
  %158 = zext i32 %157 to i64
  %159 = shl nuw i64 %158, 32
  %160 = zext i8 %156 to i64
  %161 = or i64 %159, %160
  ret i64 %161
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String10UpperASCIIEv(%"class.WTF::String"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink14ManifestParser23ParseShareTargetEnctypeEPKNS_10JSONObjectE(%"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringView", align 8
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59, i64 0, i64 0), i64 7) #14
  %12 = call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %7) #14
  %13 = icmp eq %"class.blink::JSONValue"* %12, null
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %30, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #14
  br label %30

30:                                               ; preds = %2, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #14
  br i1 %13, label %31, label %49

31:                                               ; preds = %30
  %32 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([149 x i8], [149 x i8]* @.str.60, i64 0, i64 0), i64 148) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %8, i1 zeroext false, i32 0, i32 0)
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %154, label %36

36:                                               ; preds = %31
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %36
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %36
  %46 = phi i32 [ %44, %43 ], [ %42, %36 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %154

48:                                               ; preds = %45
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %34) #14
  br label %154

49:                                               ; preds = %30
  %50 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #14
  %51 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %51, align 8
  %52 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.59, i64 0, i64 0), i64 7) #14
  %53 = call zeroext i1 @_ZNK5blink10JSONObject9GetStringERKN3WTF6StringEPS2_(%"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::String"* nonnull %9) #14
  %54 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  br i1 %56, label %70, label %57

57:                                               ; preds = %49
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %55, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %55) #14
  br label %70

70:                                               ; preds = %49, %66, %69
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #14
  br i1 %53, label %71, label %136

71:                                               ; preds = %70
  %72 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"* nonnull %9) #14
  %73 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %73) #14
  %74 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %74, label %75, label %79

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* null, i8** %76, align 8
  %77 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %78 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %77, i64* %78, align 8
  br label %87

79:                                               ; preds = %71
  %80 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 0
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %80, align 8
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 1
  %84 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %85 = bitcast i8** %84 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %83, %"class.WTF::StringImpl"** %85, align 8
  %86 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %87

87:                                               ; preds = %79, %75
  %88 = phi i64 [ %86, %79 ], [ %77, %75 ]
  %89 = phi i32 [ %82, %79 ], [ 0, %75 ]
  %90 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 %89, i32* %90, align 8
  %91 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #14
  %92 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %88, i64* %92, align 8
  %93 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.61, i64 0, i64 0), i8** %93, align 8
  %94 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 33, i32* %94, align 8
  %95 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %5, %"class.WTF::StringView"* nonnull dereferenceable(24) %6) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %73) #14
  br i1 %95, label %120, label %96

96:                                               ; preds = %87
  %97 = bitcast %"class.WTF::StringView"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %97) #14
  br i1 %74, label %98, label %102

98:                                               ; preds = %96
  %99 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  store i8* null, i8** %99, align 8
  %100 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %101 = bitcast %"class.WTF::StringView"* %3 to i64*
  store i64 %100, i64* %101, align 8
  br label %110

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 0
  store %"class.WTF::StringImpl"* %72, %"class.WTF::StringImpl"** %103, align 8
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 1
  %105 = load i32, i32* %104, align 4
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 1
  %107 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 1
  %108 = bitcast i8** %107 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %106, %"class.WTF::StringImpl"** %108, align 8
  %109 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %110

110:                                              ; preds = %102, %98
  %111 = phi i64 [ %109, %102 ], [ %100, %98 ]
  %112 = phi i32 [ %105, %102 ], [ 0, %98 ]
  %113 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %3, i64 0, i32 2
  store i32 %112, i32* %113, align 8
  %114 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %114) #14
  %115 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %111, i64* %115, align 8
  %116 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.62, i64 0, i64 0), i8** %116, align 8
  %117 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 19, i32* %117, align 8
  %118 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %3, %"class.WTF::StringView"* nonnull dereferenceable(24) %4) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %114) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %97) #14
  %119 = zext i1 %118 to i8
  br label %120

120:                                              ; preds = %110, %87
  %121 = phi i8 [ 1, %87 ], [ %119, %110 ]
  %122 = phi i32 [ 0, %87 ], [ 1, %110 ]
  br i1 %74, label %136, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %136

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #14
  br label %136

136:                                              ; preds = %135, %132, %120, %70
  %137 = phi i8 [ 0, %70 ], [ %121, %120 ], [ %121, %132 ], [ %121, %135 ]
  %138 = phi i32 [ undef, %70 ], [ %122, %120 ], [ %122, %132 ], [ %122, %135 ]
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %136
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #14
  br label %154

154:                                              ; preds = %153, %150, %136, %48, %45, %31
  %155 = phi i8* [ %32, %31 ], [ %32, %45 ], [ %32, %48 ], [ %50, %136 ], [ %50, %150 ], [ %50, %153 ]
  %156 = phi i8 [ 1, %31 ], [ 1, %45 ], [ 1, %48 ], [ %137, %136 ], [ %137, %150 ], [ %137, %153 ]
  %157 = phi i32 [ 0, %31 ], [ 0, %45 ], [ 0, %48 ], [ %138, %136 ], [ %138, %150 ], [ %138, %153 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #14
  %158 = zext i32 %157 to i64
  %159 = shl nuw i64 %158, 32
  %160 = zext i8 %156 to i64
  %161 = or i64 %159, %160
  ret i64 %161
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String10LowerASCIIEv(%"class.WTF::String"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser22ParseShareTargetParamsEPKNS_10JSONObjectE(%"class.mojo::StructPtr.43"* noalias nocapture sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.absl::optional.179", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.absl::optional.179", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.absl::optional.179", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::Vector.47", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = getelementptr inbounds %"class.mojo::StructPtr.43", %"class.mojo::StructPtr.43"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = tail call i8* @_Znwm(i64 48) #15, !noalias !110
  %14 = bitcast i8* %13 to %"class.blink::mojom::blink::ManifestShareTargetParams"*
  tail call void @_ZN5blink5mojom5blink25ManifestShareTargetParamsC1Ev(%"class.blink::mojom::blink::ManifestShareTargetParams"* nonnull %14) #14, !noalias !110
  %15 = ptrtoint i8* %13 to i64
  %16 = bitcast %"class.mojo::StructPtr.43"* %0 to i64*
  store i64 %15, i64* %16, align 8, !alias.scope !110
  %17 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 16, i1 false)
  %18 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.63, i64 0, i64 0), i64 4) #14
  call void @_ZN5blink14ManifestParser11ParseStringEPKNS_10JSONObjectERKN3WTF6StringENS0_8TrimTypeE(%"class.absl::optional.179"* nonnull sret %4, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %5, i32 0)
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #14
  br label %35

35:                                               ; preds = %3, %31, %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #14
  %36 = load i8, i8* %17, align 8, !range !16
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %60, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = ptrtoint %"class.WTF::StringImpl"* %40 to i64
  %42 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %42, label %60, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = zext i32 %50 to i33
  %52 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %51, i33 1) #14
  %53 = extractvalue { i33, i1 } %52, 1
  %54 = extractvalue { i33, i1 } %52, 0
  %55 = icmp slt i33 %54, 0
  %56 = or i1 %53, %55
  br i1 %56, label %57, label %58, !prof !2

57:                                               ; preds = %48
  call void @llvm.trap() #14
  unreachable

58:                                               ; preds = %48
  %59 = trunc i33 %54 to i32
  store i32 %59, i32* %49, align 4
  br label %60

60:                                               ; preds = %35, %58, %43, %38
  %61 = phi i64 [ %41, %38 ], [ %41, %43 ], [ %41, %58 ], [ 0, %35 ]
  %62 = getelementptr inbounds i8, i8* %13, i64 8
  %63 = bitcast i8* %62 to i64*
  %64 = bitcast i8* %62 to %"class.WTF::StringImpl"**
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %64, align 8
  store i64 %61, i64* %63, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #14
  br label %80

80:                                               ; preds = %79, %76, %60
  %81 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 16, i1 false)
  %82 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.64, i64 0, i64 0), i64 5) #14
  call void @_ZN5blink14ManifestParser11ParseStringEPKNS_10JSONObjectERKN3WTF6StringENS0_8TrimTypeE(%"class.absl::optional.179"* nonnull sret %6, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %7, i32 0)
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #14
  br label %99

99:                                               ; preds = %80, %95, %98
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #14
  %100 = load i8, i8* %81, align 8, !range !16
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %124, label %102

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  %105 = ptrtoint %"class.WTF::StringImpl"* %104 to i64
  %106 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %106, label %124, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %124

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  %115 = zext i32 %114 to i33
  %116 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %115, i33 1) #14
  %117 = extractvalue { i33, i1 } %116, 1
  %118 = extractvalue { i33, i1 } %116, 0
  %119 = icmp slt i33 %118, 0
  %120 = or i1 %117, %119
  br i1 %120, label %121, label %122, !prof !2

121:                                              ; preds = %112
  call void @llvm.trap() #14
  unreachable

122:                                              ; preds = %112
  %123 = trunc i33 %118 to i32
  store i32 %123, i32* %113, align 4
  br label %124

124:                                              ; preds = %99, %122, %107, %102
  %125 = phi i64 [ %105, %102 ], [ %105, %107 ], [ %105, %122 ], [ 0, %99 ]
  %126 = bitcast i8* %13 to i64*
  %127 = bitcast i8* %13 to %"class.WTF::StringImpl"**
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  store i64 %125, i64* %126, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %124
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #14
  br label %143

143:                                              ; preds = %142, %139, %124
  %144 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %144) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %144, i8 -86, i64 16, i1 false)
  %145 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), i64 3) #14
  call void @_ZN5blink14ManifestParser11ParseStringEPKNS_10JSONObjectERKN3WTF6StringENS0_8TrimTypeE(%"class.absl::optional.179"* nonnull sret %8, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %9, i32 0)
  %146 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %146, align 8
  %148 = icmp eq %"class.WTF::StringImpl"* %147, null
  br i1 %148, label %162, label %149

149:                                              ; preds = %143
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = load atomic i32, i32* %150 monotonic, align 4
  %152 = and i32 %151, 2
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %147, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  br i1 %153, label %156, label %158

156:                                              ; preds = %149
  %157 = add i32 %155, -1
  store i32 %157, i32* %154, align 4
  br label %158

158:                                              ; preds = %156, %149
  %159 = phi i32 [ %157, %156 ], [ %155, %149 ]
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %162

161:                                              ; preds = %158
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %147) #14
  br label %162

162:                                              ; preds = %143, %158, %161
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #14
  %163 = load i8, i8* %144, align 8, !range !16
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %187, label %165

165:                                              ; preds = %162
  %166 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %167 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %166, align 8
  %168 = ptrtoint %"class.WTF::StringImpl"* %167 to i64
  %169 = icmp eq %"class.WTF::StringImpl"* %167, null
  br i1 %169, label %187, label %170

170:                                              ; preds = %165
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = and i32 %172, 2
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %187

175:                                              ; preds = %170
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %177 = load i32, i32* %176, align 4
  %178 = zext i32 %177 to i33
  %179 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %178, i33 1) #14
  %180 = extractvalue { i33, i1 } %179, 1
  %181 = extractvalue { i33, i1 } %179, 0
  %182 = icmp slt i33 %181, 0
  %183 = or i1 %180, %182
  br i1 %183, label %184, label %185, !prof !2

184:                                              ; preds = %175
  call void @llvm.trap() #14
  unreachable

185:                                              ; preds = %175
  %186 = trunc i33 %181 to i32
  store i32 %186, i32* %176, align 4
  br label %187

187:                                              ; preds = %162, %185, %170, %165
  %188 = phi i64 [ %168, %165 ], [ %168, %170 ], [ %168, %185 ], [ 0, %162 ]
  %189 = getelementptr inbounds i8, i8* %13, i64 16
  %190 = bitcast i8* %189 to i64*
  %191 = bitcast i8* %189 to %"class.WTF::StringImpl"**
  %192 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %191, align 8
  store i64 %188, i64* %190, align 8
  %193 = icmp eq %"class.WTF::StringImpl"* %192, null
  br i1 %193, label %207, label %194

194:                                              ; preds = %187
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %192, i64 0, i32 0
  %200 = load i32, i32* %199, align 4
  br i1 %198, label %201, label %203

201:                                              ; preds = %194
  %202 = add i32 %200, -1
  store i32 %202, i32* %199, align 4
  br label %203

203:                                              ; preds = %201, %194
  %204 = phi i32 [ %202, %201 ], [ %200, %194 ]
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %207

206:                                              ; preds = %203
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %192) #14
  br label %207

207:                                              ; preds = %206, %203, %187
  %208 = bitcast %"class.WTF::Vector.47"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %208) #14
  %209 = getelementptr inbounds %"class.WTF::Vector.47", %"class.WTF::Vector.47"* %10, i64 0, i32 0, i32 0, i32 0
  %210 = getelementptr inbounds %"class.WTF::Vector.47", %"class.WTF::Vector.47"* %10, i64 0, i32 0, i32 0, i32 1
  %211 = getelementptr inbounds %"class.WTF::Vector.47", %"class.WTF::Vector.47"* %10, i64 0, i32 0, i32 0, i32 2
  %212 = bitcast %"class.WTF::String"* %11 to i8*
  %213 = bitcast %"class.WTF::Vector.47"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %213, i8 -86, i64 16, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %212) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.65, i64 0, i64 0), i64 5) #14
  call void @_ZN5blink14ManifestParser16ParseTargetFilesERKN3WTF6StringEPKNS_10JSONObjectE(%"class.WTF::Vector.47"* nonnull sret %10, %"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.blink::JSONObject"* %2)
  %214 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %215 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %214, align 8
  %216 = icmp eq %"class.WTF::StringImpl"* %215, null
  br i1 %216, label %230, label %217

217:                                              ; preds = %207
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = load atomic i32, i32* %218 monotonic, align 4
  %220 = and i32 %219, 2
  %221 = icmp eq i32 %220, 0
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %215, i64 0, i32 0
  %223 = load i32, i32* %222, align 4
  br i1 %221, label %224, label %226

224:                                              ; preds = %217
  %225 = add i32 %223, -1
  store i32 %225, i32* %222, align 4
  br label %226

226:                                              ; preds = %224, %217
  %227 = phi i32 [ %225, %224 ], [ %223, %217 ]
  %228 = icmp eq i32 %227, 0
  br i1 %228, label %229, label %230

229:                                              ; preds = %226
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %215) #14
  br label %230

230:                                              ; preds = %207, %226, %229
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %212) #14
  %231 = load i32, i32* %211, align 4
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %235

233:                                              ; preds = %230
  %234 = load %"class.mojo::StructPtr.50"*, %"class.mojo::StructPtr.50"** %209, align 8
  br label %260

235:                                              ; preds = %230
  %236 = load %"class.blink::mojom::blink::ManifestShareTargetParams"*, %"class.blink::mojom::blink::ManifestShareTargetParams"** %12, align 8
  %237 = getelementptr inbounds %"class.blink::mojom::blink::ManifestShareTargetParams", %"class.blink::mojom::blink::ManifestShareTargetParams"* %236, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %238 = load i8, i8* %237, align 8, !range !16
  %239 = icmp eq i8 %238, 0
  %240 = getelementptr inbounds %"class.blink::mojom::blink::ManifestShareTargetParams", %"class.blink::mojom::blink::ManifestShareTargetParams"* %236, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %239, label %252, label %241

241:                                              ; preds = %235
  %242 = bitcast %"class.WTF::Vector.47"* %10 to i64*
  %243 = load i64, i64* %242, align 8
  %244 = bitcast %"class.WTF::Vector.47"* %240 to i64*
  %245 = load i64, i64* %244, align 8
  store atomic i64 %245, i64* %242 monotonic, align 8
  store atomic i64 %243, i64* %244 monotonic, align 8
  %246 = getelementptr inbounds %"class.blink::mojom::blink::ManifestShareTargetParams", %"class.blink::mojom::blink::ManifestShareTargetParams"* %236, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %247 = load i32, i32* %246, align 4
  %248 = load i32, i32* %210, align 8
  store i32 %248, i32* %246, align 4
  store i32 %247, i32* %210, align 8
  %249 = getelementptr inbounds %"class.blink::mojom::blink::ManifestShareTargetParams", %"class.blink::mojom::blink::ManifestShareTargetParams"* %236, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %250 = load i32, i32* %249, align 4
  store i32 %231, i32* %249, align 4
  store i32 %250, i32* %211, align 4
  %251 = inttoptr i64 %245 to %"class.mojo::StructPtr.50"*
  br label %260

252:                                              ; preds = %235
  %253 = getelementptr inbounds %"class.blink::mojom::blink::ManifestShareTargetParams", %"class.blink::mojom::blink::ManifestShareTargetParams"* %236, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %254 = getelementptr inbounds %"class.blink::mojom::blink::ManifestShareTargetParams", %"class.blink::mojom::blink::ManifestShareTargetParams"* %236, i64 0, i32 3, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %255 = bitcast %"class.WTF::Vector.47"* %10 to i64*
  %256 = bitcast %"class.WTF::Vector.47"* %240 to i64*
  store i64 0, i64* %256, align 8
  %257 = load i64, i64* %255, align 8
  %258 = bitcast %"class.WTF::Vector.47"* %240 to i64*
  store atomic i64 0, i64* %255 monotonic, align 8
  store atomic i64 %257, i64* %258 monotonic, align 8
  %259 = load i32, i32* %210, align 8
  store i32 %259, i32* %253, align 4
  store i32 0, i32* %210, align 8
  store i32 %231, i32* %254, align 4
  store i32 0, i32* %211, align 4
  store i8 1, i8* %237, align 8
  br label %287

260:                                              ; preds = %233, %241
  %261 = phi i32 [ 0, %233 ], [ %250, %241 ]
  %262 = phi %"class.mojo::StructPtr.50"* [ %234, %233 ], [ %251, %241 ]
  %263 = icmp eq %"class.mojo::StructPtr.50"* %262, null
  br i1 %263, label %287, label %264, !prof !3

264:                                              ; preds = %260
  %265 = bitcast %"class.mojo::StructPtr.50"* %262 to i8*
  %266 = icmp eq i32 %261, 0
  br i1 %266, label %284, label %267, !prof !2

267:                                              ; preds = %264
  %268 = zext i32 %261 to i64
  %269 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %262, i64 %268
  br label %270

270:                                              ; preds = %277, %267
  %271 = phi %"class.mojo::StructPtr.50"* [ %278, %277 ], [ %262, %267 ]
  %272 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %271, i64 0, i32 0, i32 0, i32 0, i32 0
  %273 = load %"class.blink::mojom::blink::ManifestFileFilter"*, %"class.blink::mojom::blink::ManifestFileFilter"** %272, align 8
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %272, align 8
  %274 = icmp eq %"class.blink::mojom::blink::ManifestFileFilter"* %273, null
  br i1 %274, label %277, label %275

275:                                              ; preds = %270
  call void @_ZN5blink5mojom5blink18ManifestFileFilterD1Ev(%"class.blink::mojom::blink::ManifestFileFilter"* nonnull %273) #14
  %276 = bitcast %"class.blink::mojom::blink::ManifestFileFilter"* %273 to i8*
  call void @_ZdlPv(i8* %276) #15
  br label %277

277:                                              ; preds = %275, %270
  %278 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %271, i64 1
  %279 = icmp eq %"class.mojo::StructPtr.50"* %278, %269
  br i1 %279, label %280, label %270

280:                                              ; preds = %277
  store i32 0, i32* %211, align 4
  %281 = bitcast %"class.WTF::Vector.47"* %10 to i8**
  %282 = load i8*, i8** %281, align 8
  %283 = load i8, i8* %144, align 8, !range !16
  br label %284

284:                                              ; preds = %280, %264
  %285 = phi i8 [ %283, %280 ], [ %163, %264 ]
  %286 = phi i8* [ %282, %280 ], [ %265, %264 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %286) #14
  store %"class.mojo::StructPtr.50"* null, %"class.mojo::StructPtr.50"** %209, align 8
  br label %287

287:                                              ; preds = %252, %260, %284
  %288 = phi i8 [ %163, %260 ], [ %285, %284 ], [ %163, %252 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %208) #14
  %289 = icmp eq i8 %288, 0
  br i1 %289, label %308, label %290

290:                                              ; preds = %287
  %291 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %292 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %291, align 8
  %293 = icmp eq %"class.WTF::StringImpl"* %292, null
  br i1 %293, label %307, label %294

294:                                              ; preds = %290
  %295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %296 = load atomic i32, i32* %295 monotonic, align 4
  %297 = and i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 0
  %300 = load i32, i32* %299, align 4
  br i1 %298, label %301, label %303

301:                                              ; preds = %294
  %302 = add i32 %300, -1
  store i32 %302, i32* %299, align 4
  br label %303

303:                                              ; preds = %301, %294
  %304 = phi i32 [ %302, %301 ], [ %300, %294 ]
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %307

306:                                              ; preds = %303
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %292) #14
  br label %307

307:                                              ; preds = %306, %303, %290
  store i8 0, i8* %144, align 8
  br label %308

308:                                              ; preds = %287, %307
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %144) #14
  %309 = load i8, i8* %81, align 8, !range !16
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %329, label %311

311:                                              ; preds = %308
  %312 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %313 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %312, align 8
  %314 = icmp eq %"class.WTF::StringImpl"* %313, null
  br i1 %314, label %328, label %315

315:                                              ; preds = %311
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %313, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %317 = load atomic i32, i32* %316 monotonic, align 4
  %318 = and i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %313, i64 0, i32 0
  %321 = load i32, i32* %320, align 4
  br i1 %319, label %322, label %324

322:                                              ; preds = %315
  %323 = add i32 %321, -1
  store i32 %323, i32* %320, align 4
  br label %324

324:                                              ; preds = %322, %315
  %325 = phi i32 [ %323, %322 ], [ %321, %315 ]
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %328

327:                                              ; preds = %324
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %313) #14
  br label %328

328:                                              ; preds = %327, %324, %311
  store i8 0, i8* %81, align 8
  br label %329

329:                                              ; preds = %308, %328
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #14
  %330 = load i8, i8* %17, align 8, !range !16
  %331 = icmp eq i8 %330, 0
  br i1 %331, label %350, label %332

332:                                              ; preds = %329
  %333 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %334 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %333, align 8
  %335 = icmp eq %"class.WTF::StringImpl"* %334, null
  br i1 %335, label %349, label %336

336:                                              ; preds = %332
  %337 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %334, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %338 = load atomic i32, i32* %337 monotonic, align 4
  %339 = and i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %334, i64 0, i32 0
  %342 = load i32, i32* %341, align 4
  br i1 %340, label %343, label %345

343:                                              ; preds = %336
  %344 = add i32 %342, -1
  store i32 %344, i32* %341, align 4
  br label %345

345:                                              ; preds = %343, %336
  %346 = phi i32 [ %344, %343 ], [ %342, %336 ]
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %349

348:                                              ; preds = %345
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %334) #14
  br label %349

349:                                              ; preds = %348, %345, %332
  store i8 0, i8* %17, align 8
  br label %350

350:                                              ; preds = %329, %349
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser16ParseFileHandlerEPKNS_10JSONObjectE(%"class.absl::optional.216"* noalias nocapture sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::KURL", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.absl::optional.179", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::HashMap", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = tail call i8* @_Znwm(i64 144) #15, !noalias !113
  %14 = bitcast i8* %13 to %"class.blink::mojom::blink::ManifestFileHandler"*
  tail call void @_ZN5blink5mojom5blink19ManifestFileHandlerC1Ev(%"class.blink::mojom::blink::ManifestFileHandler"* nonnull %14) #14, !noalias !113
  %15 = ptrtoint i8* %13 to i64
  %16 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %16) #14
  %17 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.67, i64 0, i64 0), i64 6) #14
  %18 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %1, i64 0, i32 1
  call void @_ZN5blink14ManifestParser8ParseURLEPKNS_10JSONObjectERKN3WTF6StringERKNS_4KURLENS0_20ParseURLRestrictionsE(%"class.blink::KURL"* nonnull sret %5, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::KURL"* dereferenceable(112) %18, i32 2)
  %19 = bitcast i8* %13 to %"class.blink::KURL"*
  %20 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* nonnull %19, %"class.blink::KURL"* nonnull dereferenceable(112) %5) #14
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %5) #14
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #14
  br label %37

37:                                               ; preds = %3, %33, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %16) #14
  %38 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %19) #14
  br i1 %38, label %57, label %39

39:                                               ; preds = %37
  %40 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.79, i64 0, i64 0), i64 50) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %7, i1 zeroext false, i32 0, i32 0)
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %278, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %278

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #14
  br label %278

57:                                               ; preds = %37
  %58 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #14
  %59 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.16, i64 0, i64 0), i64 4) #14
  call void @_ZN5blink14ManifestParser11ParseStringEPKNS_10JSONObjectERKN3WTF6StringENS0_8TrimTypeE(%"class.absl::optional.179"* nonnull sret %8, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %9, i32 0)
  %60 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %60)
  %61 = load i8, i8* %58, align 8, !range !16
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %70, label %63

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = bitcast %"class.WTF::String"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.WTF::String"* %4 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %65, align 8
  %69 = inttoptr i64 %67 to %"class.WTF::StringImpl"*
  br label %73

70:                                               ; preds = %57
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.8, i64 0, i64 0), i64 0) #14
  %71 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  br label %73

73:                                               ; preds = %63, %70
  %74 = phi %"class.WTF::StringImpl"* [ %72, %70 ], [ %69, %63 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %60)
  %75 = ptrtoint %"class.WTF::StringImpl"* %74 to i64
  %76 = getelementptr inbounds i8, i8* %13, i64 112
  %77 = bitcast i8* %76 to i64*
  %78 = bitcast i8* %76 to %"class.WTF::StringImpl"**
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %78, align 8
  store i64 %75, i64* %77, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #14
  br label %94

94:                                               ; preds = %93, %90, %73
  br i1 %62, label %113, label %95

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #14
  br label %112

112:                                              ; preds = %111, %108, %95
  store i8 0, i8* %58, align 8
  br label %113

113:                                              ; preds = %94, %112
  %114 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %114, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %130, label %117

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %126

124:                                              ; preds = %117
  %125 = add i32 %123, -1
  store i32 %125, i32* %122, align 4
  br label %126

126:                                              ; preds = %124, %117
  %127 = phi i32 [ %125, %124 ], [ %123, %117 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #14
  br label %130

130:                                              ; preds = %113, %126, %129
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #14
  %131 = bitcast %"class.WTF::HashMap"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %131) #14
  %132 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i64 0, i64 0), i64 6) #14
  %133 = call %"class.blink::JSONObject"* @_ZNK5blink10JSONObject13GetJSONObjectERKN3WTF6StringE(%"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %11) #14
  call void @_ZN5blink14ManifestParser22ParseFileHandlerAcceptEPKNS_10JSONObjectE(%"class.WTF::HashMap"* nonnull sret %10, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* %133)
  %134 = getelementptr inbounds i8, i8* %13, i64 120
  %135 = bitcast %"class.WTF::HashMap"* %10 to i64*
  %136 = load i64, i64* %135, align 8
  %137 = bitcast i8* %134 to i64*
  %138 = load i64, i64* %137, align 8
  store atomic i64 %138, i64* %135 monotonic, align 8
  store atomic i64 %136, i64* %137 monotonic, align 8
  %139 = getelementptr inbounds i8, i8* %13, i64 128
  %140 = bitcast i8* %139 to i32*
  %141 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %10, i64 0, i32 0, i32 1
  %142 = load i32, i32* %140, align 4
  %143 = load i32, i32* %141, align 8
  store i32 %143, i32* %140, align 4
  store i32 %142, i32* %141, align 8
  %144 = getelementptr inbounds i8, i8* %13, i64 132
  %145 = bitcast i8* %144 to i32*
  %146 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %10, i64 0, i32 0, i32 2
  %147 = load i32, i32* %145, align 4
  %148 = load i32, i32* %146, align 4
  store i32 %148, i32* %145, align 4
  store i32 %147, i32* %146, align 4
  %149 = getelementptr inbounds i8, i8* %13, i64 136
  %150 = bitcast i8* %149 to i32*
  %151 = load i32, i32* %150, align 8
  %152 = and i32 %151, 2147483647
  %153 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %10, i64 0, i32 0, i32 3
  %154 = load i32, i32* %153, align 8
  %155 = and i32 %154, 2147483647
  %156 = and i32 %151, -2147483648
  %157 = or i32 %155, %156
  store i32 %157, i32* %150, align 8
  %158 = and i32 %154, -2147483648
  %159 = or i32 %158, %152
  store i32 %159, i32* %153, align 8
  %160 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %10, i64 0, i32 0, i32 0
  %161 = inttoptr i64 %138 to %"struct.WTF::KeyValuePair"*
  %162 = icmp eq i64 %138, 0
  br i1 %162, label %236, label %163, !prof !3

163:                                              ; preds = %130
  %164 = icmp eq i32 %142, 0
  br i1 %164, label %234, label %165

165:                                              ; preds = %163
  %166 = zext i32 %142 to i64
  br label %167

167:                                              ; preds = %231, %165
  %168 = phi i64 [ 0, %165 ], [ %232, %231 ]
  %169 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %161, i64 %168
  %170 = bitcast %"struct.WTF::KeyValuePair"* %169 to i8**
  %171 = load i8*, i8** %170, align 8
  %172 = icmp eq i8* %171, inttoptr (i64 -1 to i8*)
  br i1 %172, label %231, label %173

173:                                              ; preds = %167
  %174 = bitcast i8* %171 to %"class.WTF::StringImpl"*
  %175 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %161, i64 %168, i32 1
  %176 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %175, i64 0, i32 0, i32 0, i32 0
  %177 = load %"class.WTF::String"*, %"class.WTF::String"** %176, align 8
  %178 = icmp eq %"class.WTF::String"* %177, null
  br i1 %178, label %215, label %179, !prof !3

179:                                              ; preds = %173
  %180 = bitcast %"class.WTF::String"* %177 to i8*
  %181 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %161, i64 %168, i32 1, i32 0, i32 0, i32 2
  %182 = load i32, i32* %181, align 4
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %211, label %184, !prof !2

184:                                              ; preds = %179
  %185 = zext i32 %182 to i64
  %186 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %177, i64 %185
  br label %187

187:                                              ; preds = %205, %184
  %188 = phi %"class.WTF::String"* [ %206, %205 ], [ %177, %184 ]
  %189 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 0, i32 0, i32 0
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %189, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %190, null
  br i1 %191, label %205, label %192

192:                                              ; preds = %187
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load atomic i32, i32* %193 monotonic, align 4
  %195 = and i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 0
  %198 = load i32, i32* %197, align 4
  br i1 %196, label %199, label %201

199:                                              ; preds = %192
  %200 = add i32 %198, -1
  store i32 %200, i32* %197, align 4
  br label %201

201:                                              ; preds = %199, %192
  %202 = phi i32 [ %200, %199 ], [ %198, %192 ]
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %205

204:                                              ; preds = %201
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %190) #14
  br label %205

205:                                              ; preds = %204, %201, %187
  %206 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %188, i64 1
  %207 = icmp eq %"class.WTF::String"* %206, %186
  br i1 %207, label %208, label %187

208:                                              ; preds = %205
  store i32 0, i32* %181, align 4
  %209 = bitcast %"class.WTF::Vector.54"* %175 to i8**
  %210 = load i8*, i8** %209, align 8
  br label %211

211:                                              ; preds = %208, %179
  %212 = phi i8* [ %210, %208 ], [ %180, %179 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %212) #14
  store %"class.WTF::String"* null, %"class.WTF::String"** %176, align 8
  %213 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %169, i64 0, i32 0, i32 0, i32 0
  %214 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %213, align 8
  br label %215

215:                                              ; preds = %211, %173
  %216 = phi %"class.WTF::StringImpl"* [ %214, %211 ], [ %174, %173 ]
  %217 = icmp eq %"class.WTF::StringImpl"* %216, null
  br i1 %217, label %231, label %218

218:                                              ; preds = %215
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = and i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  br i1 %222, label %225, label %227

225:                                              ; preds = %218
  %226 = add i32 %224, -1
  store i32 %226, i32* %223, align 4
  br label %227

227:                                              ; preds = %225, %218
  %228 = phi i32 [ %226, %225 ], [ %224, %218 ]
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %227
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %216) #14
  br label %231

231:                                              ; preds = %230, %227, %215, %167
  %232 = add nuw nsw i64 %168, 1
  %233 = icmp eq i64 %232, %166
  br i1 %233, label %234, label %167

234:                                              ; preds = %231, %163
  %235 = inttoptr i64 %138 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %235) #14
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %160, align 8
  br label %236

236:                                              ; preds = %130, %234
  %237 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %253, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %240
  %248 = add i32 %246, -1
  store i32 %248, i32* %245, align 4
  br label %249

249:                                              ; preds = %247, %240
  %250 = phi i32 [ %248, %247 ], [ %246, %240 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %238) #14
  br label %253

253:                                              ; preds = %236, %249, %252
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %131) #14
  %254 = load i32, i32* %145, align 4
  %255 = icmp eq i32 %254, 0
  br i1 %255, label %256, label %274

256:                                              ; preds = %253
  %257 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %257) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str.80, i64 0, i64 0), i64 50) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %12, i1 zeroext false, i32 0, i32 0)
  %258 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %258, align 8
  %260 = icmp eq %"class.WTF::StringImpl"* %259, null
  br i1 %260, label %278, label %261

261:                                              ; preds = %256
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load atomic i32, i32* %262 monotonic, align 4
  %264 = and i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 0
  %267 = load i32, i32* %266, align 4
  br i1 %265, label %268, label %270

268:                                              ; preds = %261
  %269 = add i32 %267, -1
  store i32 %269, i32* %266, align 4
  br label %270

270:                                              ; preds = %268, %261
  %271 = phi i32 [ %269, %268 ], [ %267, %261 ]
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %278

273:                                              ; preds = %270
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %259) #14
  br label %278

274:                                              ; preds = %253
  %275 = getelementptr inbounds %"class.absl::optional.216", %"class.absl::optional.216"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %275, align 8
  %276 = getelementptr inbounds %"class.absl::optional.216", %"class.absl::optional.216"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %277 = bitcast %"class.mojo::StructPtr.73"* %276 to i64*
  store i64 %15, i64* %277, align 8
  br label %281

278:                                              ; preds = %273, %270, %256, %56, %53, %39
  %279 = phi i8* [ %40, %39 ], [ %40, %53 ], [ %40, %56 ], [ %257, %256 ], [ %257, %270 ], [ %257, %273 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %279) #14
  %280 = getelementptr inbounds %"class.absl::optional.216", %"class.absl::optional.216"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %280, align 8
  call void @_ZN5blink5mojom5blink19ManifestFileHandlerD1Ev(%"class.blink::mojom::blink::ManifestFileHandler"* nonnull %14) #14
  call void @_ZdlPv(i8* nonnull %13) #15
  br label %281

281:                                              ; preds = %274, %278
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser22ParseFileHandlerAcceptEPKNS_10JSONObjectE(%"class.WTF::HashMap"* noalias sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::pair", align 8
  %5 = alloca %"class.WTF::Vector.54", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = bitcast %"class.WTF::HashMap"* %0 to i8*
  %9 = bitcast %"class.WTF::HashMap"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 -86, i64 24, i1 false)
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 20, i1 false) #14
  %10 = icmp eq %"class.blink::JSONObject"* %2, null
  br i1 %10, label %231, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::JSONObject", %"class.blink::JSONObject"* %2, i64 0, i32 2, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %231, label %15

15:                                               ; preds = %11
  %16 = bitcast %"struct.std::__1::pair"* %4 to i8*
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 0
  %18 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  %20 = bitcast %"class.WTF::Vector.54"* %5 to i8*
  %21 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %5, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %5, i64 0, i32 0, i32 0, i32 1
  %23 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %5, i64 0, i32 0, i32 0, i32 2
  %24 = bitcast %"class.WTF::String"* %6 to i8*
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %26 = bitcast %"class.WTF::String"* %7 to i8*
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.WTF::HashMap", %"class.WTF::HashMap"* %0, i64 0, i32 0
  %29 = bitcast %"class.WTF::Vector.54"* %5 to i64*
  %30 = bitcast %"class.WTF::Vector.54"* %5 to i8**
  %31 = bitcast %"struct.std::__1::pair"* %4 to i8*
  br label %32

32:                                               ; preds = %15, %227
  %33 = phi i32 [ 0, %15 ], [ %228, %227 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 16, i1 false)
  %34 = call { %"class.WTF::StringImpl"*, %"class.blink::JSONValue"* } @_ZNK5blink10JSONObject2atEj(%"class.blink::JSONObject"* nonnull %2, i32 %33) #14
  %35 = extractvalue { %"class.WTF::StringImpl"*, %"class.blink::JSONValue"* } %34, 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %18, align 8
  %36 = extractvalue { %"class.WTF::StringImpl"*, %"class.blink::JSONValue"* } %34, 1
  store %"class.blink::JSONValue"* %36, %"class.blink::JSONValue"** %19, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 16, i1 false) #14
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #14
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %25, align 8
  %37 = icmp eq %"class.blink::JSONValue"* %36, null
  br i1 %37, label %110, label %38

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %36, i64 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = icmp eq i32 %40, 6
  %42 = bitcast %"class.blink::JSONValue"* %36 to %"class.blink::JSONArray"*
  br i1 %41, label %43, label %110

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::JSONValue", %"class.blink::JSONValue"* %36, i64 1, i32 2
  %45 = bitcast [4 x i8]* %44 to i32*
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %143, label %48

48:                                               ; preds = %43, %106
  %49 = phi i32 [ %107, %106 ], [ 0, %43 ]
  %50 = call %"class.blink::JSONValue"* @_ZNK5blink9JSONArray2atEj(%"class.blink::JSONArray"* nonnull %42, i32 %49) #14
  %51 = bitcast %"class.blink::JSONValue"* %50 to i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)***
  %52 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)**, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %52, i64 5
  %54 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %53, align 8
  %55 = call zeroext i1 %54(%"class.blink::JSONValue"* %50, %"class.WTF::String"* nonnull %6) #14
  br i1 %55, label %73, label %56

56:                                               ; preds = %48
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.81, i64 0, i64 0), i64 63) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %7, i1 zeroext false, i32 0, i32 0)
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #14
  br label %72

72:                                               ; preds = %56, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #14
  br label %106

73:                                               ; preds = %48
  %74 = call zeroext i1 @_ZN5blink14ManifestParser31ParseFileHandlerAcceptExtensionEPKNS_9JSONValueEPN3WTF6StringE(%"class.blink::ManifestParser"* %1, %"class.blink::JSONValue"* %50, %"class.WTF::String"* nonnull %6)
  br i1 %74, label %75, label %106

75:                                               ; preds = %73
  %76 = load i32, i32* %23, align 4
  %77 = load i32, i32* %22, align 8
  %78 = icmp eq i32 %76, %77
  br i1 %78, label %105, label %79, !prof !2

79:                                               ; preds = %75
  %80 = load %"class.WTF::String"*, %"class.WTF::String"** %21, align 8
  %81 = zext i32 %76 to i64
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 %81, i32 0, i32 0
  store %"class.WTF::StringImpl"* %82, %"class.WTF::StringImpl"** %83, align 8
  %84 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %84, label %102, label %85

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = load atomic i32, i32* %86 monotonic, align 4
  %88 = and i32 %87, 2
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %102

90:                                               ; preds = %85
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  %93 = zext i32 %92 to i33
  %94 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %93, i33 1) #14
  %95 = extractvalue { i33, i1 } %94, 1
  %96 = extractvalue { i33, i1 } %94, 0
  %97 = icmp slt i33 %96, 0
  %98 = or i1 %95, %97
  br i1 %98, label %99, label %100, !prof !2

99:                                               ; preds = %90
  call void @llvm.trap() #14
  unreachable

100:                                              ; preds = %90
  %101 = trunc i33 %96 to i32
  store i32 %101, i32* %91, align 4
  br label %102

102:                                              ; preds = %100, %85, %79
  %103 = load i32, i32* %23, align 4
  %104 = add i32 %103, 1
  store i32 %104, i32* %23, align 4
  br label %106

105:                                              ; preds = %75
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.54"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #14
  br label %106

106:                                              ; preds = %105, %102, %73, %72
  %107 = add nuw i32 %49, 1
  %108 = load i32, i32* %45, align 4
  %109 = icmp ult i32 %107, %108
  br i1 %109, label %48, label %143

110:                                              ; preds = %38, %32
  %111 = call zeroext i1 @_ZN5blink14ManifestParser31ParseFileHandlerAcceptExtensionEPKNS_9JSONValueEPN3WTF6StringE(%"class.blink::ManifestParser"* %1, %"class.blink::JSONValue"* %36, %"class.WTF::String"* nonnull %6)
  br i1 %111, label %112, label %160

112:                                              ; preds = %110
  %113 = load i32, i32* %23, align 4
  %114 = load i32, i32* %22, align 8
  %115 = icmp eq i32 %113, %114
  br i1 %115, label %142, label %116, !prof !2

116:                                              ; preds = %112
  %117 = load %"class.WTF::String"*, %"class.WTF::String"** %21, align 8
  %118 = zext i32 %113 to i64
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %120 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %117, i64 %118, i32 0, i32 0
  store %"class.WTF::StringImpl"* %119, %"class.WTF::StringImpl"** %120, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %121, label %139, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %139

127:                                              ; preds = %122
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = zext i32 %129 to i33
  %131 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %130, i33 1) #14
  %132 = extractvalue { i33, i1 } %131, 1
  %133 = extractvalue { i33, i1 } %131, 0
  %134 = icmp slt i33 %133, 0
  %135 = or i1 %132, %134
  br i1 %135, label %136, label %137, !prof !2

136:                                              ; preds = %127
  call void @llvm.trap() #14
  unreachable

137:                                              ; preds = %127
  %138 = trunc i33 %133 to i32
  store i32 %138, i32* %128, align 4
  br label %139

139:                                              ; preds = %137, %122, %116
  %140 = load i32, i32* %23, align 4
  %141 = add i32 %140, 1
  store i32 %141, i32* %23, align 4
  br label %143

142:                                              ; preds = %112
  call void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.54"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6) #14
  br label %143

143:                                              ; preds = %106, %43, %142, %139
  %144 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorIS1_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E6insertINS_17HashMapTranslatorISD_S8_S4_EERS1_S5_EENS_18HashTableAddResultISE_S6_EEOT0_OT1_(%"class.WTF::HashTable"* %28, %"class.WTF::String"* nonnull dereferenceable(8) %17, %"class.WTF::Vector.54"* nonnull dereferenceable(16) %5) #14
  %145 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %144, 1
  %146 = and i8 %145, 1
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %148, label %160

148:                                              ; preds = %143
  %149 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %144, 0
  %150 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %149, i64 0, i32 1
  %151 = load i64, i64* %29, align 8
  %152 = bitcast %"class.WTF::Vector.54"* %150 to i64*
  %153 = load i64, i64* %152, align 8
  store atomic i64 %153, i64* %29 monotonic, align 8
  store atomic i64 %151, i64* %152 monotonic, align 8
  %154 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %149, i64 0, i32 1, i32 0, i32 0, i32 1
  %155 = load i32, i32* %154, align 4
  %156 = load i32, i32* %22, align 8
  store i32 %156, i32* %154, align 4
  store i32 %155, i32* %22, align 8
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %149, i64 0, i32 1, i32 0, i32 0, i32 2
  %158 = load i32, i32* %157, align 4
  %159 = load i32, i32* %23, align 4
  store i32 %159, i32* %157, align 4
  store i32 %158, i32* %23, align 4
  br label %160

160:                                              ; preds = %148, %143, %110
  %161 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %162 = icmp eq %"class.WTF::StringImpl"* %161, null
  br i1 %162, label %176, label %163

163:                                              ; preds = %160
  %164 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %165 = load atomic i32, i32* %164 monotonic, align 4
  %166 = and i32 %165, 2
  %167 = icmp eq i32 %166, 0
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %161, i64 0, i32 0
  %169 = load i32, i32* %168, align 4
  br i1 %167, label %170, label %172

170:                                              ; preds = %163
  %171 = add i32 %169, -1
  store i32 %171, i32* %168, align 4
  br label %172

172:                                              ; preds = %170, %163
  %173 = phi i32 [ %171, %170 ], [ %169, %163 ]
  %174 = icmp eq i32 %173, 0
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %161) #14
  br label %176

176:                                              ; preds = %160, %172, %175
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #14
  %177 = load %"class.WTF::String"*, %"class.WTF::String"** %21, align 8
  %178 = icmp eq %"class.WTF::String"* %177, null
  br i1 %178, label %211, label %179, !prof !3

179:                                              ; preds = %176
  %180 = bitcast %"class.WTF::String"* %177 to i8*
  %181 = load i32, i32* %23, align 4
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %209, label %183, !prof !2

183:                                              ; preds = %179
  %184 = zext i32 %181 to i64
  %185 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %177, i64 %184
  br label %186

186:                                              ; preds = %204, %183
  %187 = phi %"class.WTF::String"* [ %205, %204 ], [ %177, %183 ]
  %188 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %187, i64 0, i32 0, i32 0
  %189 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %188, align 8
  %190 = icmp eq %"class.WTF::StringImpl"* %189, null
  br i1 %190, label %204, label %191

191:                                              ; preds = %186
  %192 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %193 = load atomic i32, i32* %192 monotonic, align 4
  %194 = and i32 %193, 2
  %195 = icmp eq i32 %194, 0
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %189, i64 0, i32 0
  %197 = load i32, i32* %196, align 4
  br i1 %195, label %198, label %200

198:                                              ; preds = %191
  %199 = add i32 %197, -1
  store i32 %199, i32* %196, align 4
  br label %200

200:                                              ; preds = %198, %191
  %201 = phi i32 [ %199, %198 ], [ %197, %191 ]
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %200
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %189) #14
  br label %204

204:                                              ; preds = %203, %200, %186
  %205 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %187, i64 1
  %206 = icmp eq %"class.WTF::String"* %205, %185
  br i1 %206, label %207, label %186

207:                                              ; preds = %204
  store i32 0, i32* %23, align 4
  %208 = load i8*, i8** %30, align 8
  br label %209

209:                                              ; preds = %207, %179
  %210 = phi i8* [ %208, %207 ], [ %180, %179 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %210) #14
  store %"class.WTF::String"* null, %"class.WTF::String"** %21, align 8
  br label %211

211:                                              ; preds = %176, %209
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #14
  %212 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %213 = icmp eq %"class.WTF::StringImpl"* %212, null
  br i1 %213, label %227, label %214

214:                                              ; preds = %211
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = and i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  br i1 %218, label %221, label %223

221:                                              ; preds = %214
  %222 = add i32 %220, -1
  store i32 %222, i32* %219, align 4
  br label %223

223:                                              ; preds = %221, %214
  %224 = phi i32 [ %222, %221 ], [ %220, %214 ]
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %223
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %212) #14
  br label %227

227:                                              ; preds = %211, %223, %226
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #14
  %228 = add nuw i32 %33, 1
  %229 = load i32, i32* %12, align 4
  %230 = icmp ult i32 %228, %229
  br i1 %230, label %32, label %231

231:                                              ; preds = %227, %11, %3
  ret void
}

declare { %"class.WTF::StringImpl"*, %"class.blink::JSONValue"* } @_ZNK5blink10JSONObject2atEj(%"class.blink::JSONObject"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink14ManifestParser31ParseFileHandlerAcceptExtensionEPKNS_9JSONValueEPN3WTF6StringE(%"class.blink::ManifestParser"*, %"class.blink::JSONValue"*, %"class.WTF::String"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = bitcast %"class.blink::JSONValue"* %1 to i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)***
  %8 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)**, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %8, i64 5
  %10 = load i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)*, i1 (%"class.blink::JSONValue"*, %"class.WTF::String"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.blink::JSONValue"* %1, %"class.WTF::String"* %2) #14
  br i1 %11, label %30, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.82, i64 0, i64 0), i64 82) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4, i1 zeroext false, i32 0, i32 0)
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %60, label %17

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = and i32 %19, 2
  %21 = icmp eq i32 %20, 0
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  br i1 %21, label %24, label %26

24:                                               ; preds = %17
  %25 = add i32 %23, -1
  store i32 %25, i32* %22, align 4
  br label %26

26:                                               ; preds = %24, %17
  %27 = phi i32 [ %25, %24 ], [ %23, %17 ]
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %60

29:                                               ; preds = %26
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %15) #14
  br label %60

30:                                               ; preds = %3
  %31 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #14
  %32 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %33 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.83, i64 0, i64 0), i8** %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 1, i32* %35, align 8
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %39, label %40

39:                                               ; preds = %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  br label %42

40:                                               ; preds = %30
  %41 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %37, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #14
  br i1 %41, label %62, label %42

42:                                               ; preds = %39, %40
  %43 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([65 x i8], [65 x i8]* @.str.84, i64 0, i64 0), i64 64) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %6, i1 zeroext false, i32 0, i32 0)
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %45 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %44, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %45, i64 0, i32 0
  %53 = load i32, i32* %52, align 4
  br i1 %51, label %54, label %56

54:                                               ; preds = %47
  %55 = add i32 %53, -1
  store i32 %55, i32* %52, align 4
  br label %56

56:                                               ; preds = %54, %47
  %57 = phi i32 [ %55, %54 ], [ %53, %47 ]
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %60

59:                                               ; preds = %56
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %45) #14
  br label %60

60:                                               ; preds = %59, %56, %42, %29, %26, %12
  %61 = phi i8* [ %13, %12 ], [ %13, %26 ], [ %13, %29 ], [ %43, %42 ], [ %43, %56 ], [ %43, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #14
  br label %62

62:                                               ; preds = %60, %40
  %63 = phi i1 [ true, %40 ], [ false, %60 ]
  ret i1 %63
}

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase30ParseUrlProtocolHandlerEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser20ParseProtocolHandlerEPKNS_10JSONObjectE(%"class.absl::optional.221"* noalias nocapture sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.absl::optional.179", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.blink::KURL", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.blink::KURL", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.88, i64 0, i64 0), i64 8) #14
  %20 = call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #14
  %21 = icmp eq %"class.blink::JSONValue"* %20, null
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #14
  br label %38

38:                                               ; preds = %3, %34, %37
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #14
  br i1 %21, label %39, label %59

39:                                               ; preds = %38
  %40 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.89, i64 0, i64 0), i64 73) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %5, i1 zeroext false, i32 0, i32 0)
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #14
  br label %57

57:                                               ; preds = %39, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #14
  %58 = getelementptr inbounds %"class.absl::optional.221", %"class.absl::optional.221"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %58, align 8
  br label %392

59:                                               ; preds = %38
  %60 = call i8* @_Znwm(i64 120) #15, !noalias !116
  %61 = bitcast i8* %60 to %"class.blink::mojom::blink::ManifestProtocolHandler"*
  call void @_ZN5blink5mojom5blink23ManifestProtocolHandlerC1Ev(%"class.blink::mojom::blink::ManifestProtocolHandler"* nonnull %61) #14, !noalias !116
  %62 = ptrtoint i8* %60 to i64
  %63 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 16, i1 false)
  %64 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %64) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.88, i64 0, i64 0), i64 8) #14
  call void @_ZN5blink14ManifestParser11ParseStringEPKNS_10JSONObjectERKN3WTF6StringENS0_8TrimTypeE(%"class.absl::optional.179"* nonnull sret %6, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %7, i32 0)
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %59
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %66, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %66) #14
  br label %81

81:                                               ; preds = %59, %77, %80
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %64) #14
  %82 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #14
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %83, align 8
  %84 = load i8, i8* %63, align 8, !range !16
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %90, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %88 = call zeroext i1 @_ZN5blink25VerifyCustomHandlerSchemeERKN3WTF6StringERS1_NS_28ProtocolHandlerSecurityLevelE(%"class.WTF::String"* dereferenceable(8) %87, %"class.WTF::String"* nonnull dereferenceable(8) %8, i32 0) #14
  br i1 %88, label %110, label %89

89:                                               ; preds = %86
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %8, i1 zeroext false, i32 0, i32 0)
  br label %90

90:                                               ; preds = %81, %89
  %91 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.90, i64 0, i64 0), i64 73) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %9, i1 zeroext false, i32 0, i32 0)
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #14
  br label %108

108:                                              ; preds = %90, %104, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #14
  %109 = getelementptr inbounds %"class.absl::optional.221", %"class.absl::optional.221"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %109, align 8
  br label %349

110:                                              ; preds = %86
  %111 = load i8, i8* %63, align 8, !range !16
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  call void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() #16
  unreachable

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %87, i64 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %135, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %135

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = zext i32 %125 to i33
  %127 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %126, i33 1) #14
  %128 = extractvalue { i33, i1 } %127, 1
  %129 = extractvalue { i33, i1 } %127, 0
  %130 = icmp slt i33 %129, 0
  %131 = or i1 %128, %130
  br i1 %131, label %132, label %133, !prof !2

132:                                              ; preds = %123
  call void @llvm.trap() #14
  unreachable

133:                                              ; preds = %123
  %134 = trunc i33 %129 to i32
  store i32 %134, i32* %124, align 4
  br label %135

135:                                              ; preds = %133, %118, %114
  %136 = ptrtoint %"class.WTF::StringImpl"* %116 to i64
  %137 = bitcast i8* %60 to i64*
  %138 = bitcast i8* %60 to %"class.WTF::StringImpl"**
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  store i64 %136, i64* %137, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %135
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #14
  br label %154

154:                                              ; preds = %135, %150, %153
  %155 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %155) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), i64 3) #14
  %156 = call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %10) #14
  %157 = icmp eq %"class.blink::JSONValue"* %156, null
  %158 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %158, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %174, label %161

161:                                              ; preds = %154
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %170

168:                                              ; preds = %161
  %169 = add i32 %167, -1
  store i32 %169, i32* %166, align 4
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %167, %161 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %170
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %159) #14
  br label %174

174:                                              ; preds = %154, %170, %173
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %155) #14
  br i1 %157, label %175, label %195

175:                                              ; preds = %174
  %176 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %176) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.91, i64 0, i64 0), i64 68) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %11, i1 zeroext false, i32 0, i32 0)
  %177 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %193, label %180

180:                                              ; preds = %175
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %189

187:                                              ; preds = %180
  %188 = add i32 %186, -1
  store i32 %188, i32* %185, align 4
  br label %189

189:                                              ; preds = %187, %180
  %190 = phi i32 [ %188, %187 ], [ %186, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %178) #14
  br label %193

193:                                              ; preds = %175, %189, %192
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %176) #14
  %194 = getelementptr inbounds %"class.absl::optional.221", %"class.absl::optional.221"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %194, align 8
  br label %349

195:                                              ; preds = %174
  %196 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %196) #14
  %197 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %197) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), i64 3) #14
  %198 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %1, i64 0, i32 1
  call void @_ZN5blink14ManifestParser8ParseURLEPKNS_10JSONObjectERKN3WTF6StringERKNS_4KURLENS0_20ParseURLRestrictionsE(%"class.blink::KURL"* nonnull sret %12, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %13, %"class.blink::KURL"* dereferenceable(112) %198, i32 2)
  %199 = getelementptr inbounds i8, i8* %60, i64 8
  %200 = bitcast i8* %199 to %"class.blink::KURL"*
  %201 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %200, %"class.blink::KURL"* nonnull dereferenceable(112) %12) #14
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %12) #14
  %202 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %203 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %202, align 8
  %204 = icmp eq %"class.WTF::StringImpl"* %203, null
  br i1 %204, label %218, label %205

205:                                              ; preds = %195
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %207 = load atomic i32, i32* %206 monotonic, align 4
  %208 = and i32 %207, 2
  %209 = icmp eq i32 %208, 0
  %210 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %203, i64 0, i32 0
  %211 = load i32, i32* %210, align 4
  br i1 %209, label %212, label %214

212:                                              ; preds = %205
  %213 = add i32 %211, -1
  store i32 %213, i32* %210, align 4
  br label %214

214:                                              ; preds = %212, %205
  %215 = phi i32 [ %213, %212 ], [ %211, %205 ]
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %214
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %203) #14
  br label %218

218:                                              ; preds = %195, %214, %217
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %197) #14
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %196) #14
  %219 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* %200) #14
  br i1 %219, label %220, label %325

220:                                              ; preds = %218
  %221 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %221) #14
  %222 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %223 = getelementptr inbounds i8, i8* %60, i64 104
  %224 = bitcast i8* %223 to %"class.WTF::StringImpl"**
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  store %"class.WTF::StringImpl"* %225, %"class.WTF::StringImpl"** %222, align 8
  %226 = icmp eq %"class.WTF::StringImpl"* %225, null
  br i1 %226, label %227, label %230

227:                                              ; preds = %220
  %228 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %228) #14
  %229 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %229, align 8
  br label %274

230:                                              ; preds = %220
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = and i32 %232, 2
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %238, label %235

235:                                              ; preds = %230
  %236 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %236) #14
  %237 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %225, %"class.WTF::StringImpl"** %237, align 8
  br label %254

238:                                              ; preds = %230
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %225, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = zext i32 %240 to i33
  %242 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %241, i33 1) #14
  %243 = extractvalue { i33, i1 } %242, 1
  %244 = extractvalue { i33, i1 } %242, 0
  %245 = icmp slt i33 %244, 0
  %246 = or i1 %243, %245
  br i1 %246, label %247, label %248, !prof !2

247:                                              ; preds = %238
  call void @llvm.trap() #14
  unreachable

248:                                              ; preds = %238
  %249 = trunc i33 %244 to i32
  store i32 %249, i32* %239, align 4
  %250 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  %251 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %251) #14
  %252 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %250, %"class.WTF::StringImpl"** %252, align 8
  %253 = icmp eq %"class.WTF::StringImpl"* %250, null
  br i1 %253, label %274, label %254

254:                                              ; preds = %235, %248
  %255 = phi %"class.WTF::StringImpl"** [ %237, %235 ], [ %252, %248 ]
  %256 = phi i8* [ %236, %235 ], [ %251, %248 ]
  %257 = phi %"class.WTF::StringImpl"* [ %225, %235 ], [ %250, %248 ]
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = and i32 %259, 2
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %274

262:                                              ; preds = %254
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %257, i64 0, i32 0
  %264 = load i32, i32* %263, align 4
  %265 = zext i32 %264 to i33
  %266 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %265, i33 1) #14
  %267 = extractvalue { i33, i1 } %266, 1
  %268 = extractvalue { i33, i1 } %266, 0
  %269 = icmp slt i33 %268, 0
  %270 = or i1 %267, %269
  br i1 %270, label %271, label %272, !prof !2

271:                                              ; preds = %262
  call void @llvm.trap() #14
  unreachable

272:                                              ; preds = %262
  %273 = trunc i33 %268 to i32
  store i32 %273, i32* %263, align 4
  br label %274

274:                                              ; preds = %227, %248, %254, %272
  %275 = phi %"class.WTF::StringImpl"** [ %229, %227 ], [ %252, %248 ], [ %255, %254 ], [ %255, %272 ]
  %276 = phi i8* [ %228, %227 ], [ %251, %248 ], [ %256, %254 ], [ %256, %272 ]
  %277 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %277) #14
  %278 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %279 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %278, i64* %279, align 8
  %280 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @_ZZN5blink14ManifestParser20ParseProtocolHandlerEPKNS_10JSONObjectEE6kToken, i64 0, i64 0), i8** %280, align 8
  %281 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 2, i32* %281, align 8
  %282 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %283 = icmp eq %"class.WTF::StringImpl"* %282, null
  br i1 %283, label %286, label %284

284:                                              ; preds = %274
  %285 = call i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"* nonnull %282, %"class.WTF::StringView"* nonnull dereferenceable(24) %16, i32 0) #14
  br label %286

286:                                              ; preds = %274, %284
  %287 = phi i32 [ %285, %284 ], [ -1, %274 ]
  call void @_ZN3WTF6String6RemoveEjj(%"class.WTF::String"* nonnull %15, i32 %287, i32 2) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %277) #14
  %288 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %17, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %288) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %288, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1ERKS0_RKN3WTF6StringE(%"class.blink::KURL"* nonnull %17, %"class.blink::KURL"* dereferenceable(112) %198, %"class.WTF::String"* nonnull dereferenceable(8) %15) #14
  %289 = call zeroext i1 @_ZN5blink28VerifyCustomHandlerURLSyntaxERKNS_4KURLES2_RKN3WTF6StringERS4_(%"class.blink::KURL"* nonnull dereferenceable(112) %17, %"class.blink::KURL"* dereferenceable(112) %198, %"class.WTF::String"* nonnull dereferenceable(8) %14, %"class.WTF::String"* nonnull dereferenceable(8) %8) #14
  br i1 %289, label %291, label %290

290:                                              ; preds = %286
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %8, i1 zeroext false, i32 0, i32 0)
  br label %291

291:                                              ; preds = %290, %286
  %292 = phi i1 [ true, %286 ], [ false, %290 ]
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %17) #14
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %288) #14
  %293 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  %294 = icmp eq %"class.WTF::StringImpl"* %293, null
  br i1 %294, label %308, label %295

295:                                              ; preds = %291
  %296 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %297 = load atomic i32, i32* %296 monotonic, align 4
  %298 = and i32 %297, 2
  %299 = icmp eq i32 %298, 0
  %300 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %293, i64 0, i32 0
  %301 = load i32, i32* %300, align 4
  br i1 %299, label %302, label %304

302:                                              ; preds = %295
  %303 = add i32 %301, -1
  store i32 %303, i32* %300, align 4
  br label %304

304:                                              ; preds = %302, %295
  %305 = phi i32 [ %303, %302 ], [ %301, %295 ]
  %306 = icmp eq i32 %305, 0
  br i1 %306, label %307, label %308

307:                                              ; preds = %304
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %293) #14
  br label %308

308:                                              ; preds = %291, %304, %307
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %276) #14
  %309 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %310 = icmp eq %"class.WTF::StringImpl"* %309, null
  br i1 %310, label %324, label %311

311:                                              ; preds = %308
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %313 = load atomic i32, i32* %312 monotonic, align 4
  %314 = and i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 0
  %317 = load i32, i32* %316, align 4
  br i1 %315, label %318, label %320

318:                                              ; preds = %311
  %319 = add i32 %317, -1
  store i32 %319, i32* %316, align 4
  br label %320

320:                                              ; preds = %318, %311
  %321 = phi i32 [ %319, %318 ], [ %317, %311 ]
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %324

323:                                              ; preds = %320
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %309) #14
  br label %324

324:                                              ; preds = %323, %320, %308
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %221) #14
  br i1 %292, label %345, label %325

325:                                              ; preds = %218, %324
  %326 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %326) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %18, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.92, i64 0, i64 0), i64 68) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %18, i1 zeroext false, i32 0, i32 0)
  %327 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %328 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %327, align 8
  %329 = icmp eq %"class.WTF::StringImpl"* %328, null
  br i1 %329, label %343, label %330

330:                                              ; preds = %325
  %331 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %328, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %332 = load atomic i32, i32* %331 monotonic, align 4
  %333 = and i32 %332, 2
  %334 = icmp eq i32 %333, 0
  %335 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %328, i64 0, i32 0
  %336 = load i32, i32* %335, align 4
  br i1 %334, label %337, label %339

337:                                              ; preds = %330
  %338 = add i32 %336, -1
  store i32 %338, i32* %335, align 4
  br label %339

339:                                              ; preds = %337, %330
  %340 = phi i32 [ %338, %337 ], [ %336, %330 ]
  %341 = icmp eq i32 %340, 0
  br i1 %341, label %342, label %343

342:                                              ; preds = %339
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %328) #14
  br label %343

343:                                              ; preds = %325, %339, %342
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %326) #14
  %344 = getelementptr inbounds %"class.absl::optional.221", %"class.absl::optional.221"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %344, align 8
  br label %349

345:                                              ; preds = %324
  %346 = getelementptr inbounds %"class.absl::optional.221", %"class.absl::optional.221"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %346, align 8
  %347 = getelementptr inbounds %"class.absl::optional.221", %"class.absl::optional.221"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %348 = bitcast %"class.mojo::StructPtr.87"* %347 to i64*
  store i64 %62, i64* %348, align 8
  br label %349

349:                                              ; preds = %343, %345, %193, %108
  %350 = phi i64 [ %62, %193 ], [ 0, %345 ], [ %62, %343 ], [ %62, %108 ]
  %351 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %352 = icmp eq %"class.WTF::StringImpl"* %351, null
  br i1 %352, label %366, label %353

353:                                              ; preds = %349
  %354 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %351, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %355 = load atomic i32, i32* %354 monotonic, align 4
  %356 = and i32 %355, 2
  %357 = icmp eq i32 %356, 0
  %358 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %351, i64 0, i32 0
  %359 = load i32, i32* %358, align 4
  br i1 %357, label %360, label %362

360:                                              ; preds = %353
  %361 = add i32 %359, -1
  store i32 %361, i32* %358, align 4
  br label %362

362:                                              ; preds = %360, %353
  %363 = phi i32 [ %361, %360 ], [ %359, %353 ]
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %365, label %366

365:                                              ; preds = %362
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %351) #14
  br label %366

366:                                              ; preds = %349, %362, %365
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #14
  %367 = load i8, i8* %63, align 8, !range !16
  %368 = icmp eq i8 %367, 0
  br i1 %368, label %387, label %369

369:                                              ; preds = %366
  %370 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %371 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %370, align 8
  %372 = icmp eq %"class.WTF::StringImpl"* %371, null
  br i1 %372, label %386, label %373

373:                                              ; preds = %369
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %375 = load atomic i32, i32* %374 monotonic, align 4
  %376 = and i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 0
  %379 = load i32, i32* %378, align 4
  br i1 %377, label %380, label %382

380:                                              ; preds = %373
  %381 = add i32 %379, -1
  store i32 %381, i32* %378, align 4
  br label %382

382:                                              ; preds = %380, %373
  %383 = phi i32 [ %381, %380 ], [ %379, %373 ]
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %385, label %386

385:                                              ; preds = %382
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %371) #14
  br label %386

386:                                              ; preds = %385, %382, %369
  store i8 0, i8* %63, align 8
  br label %387

387:                                              ; preds = %366, %386
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #14
  %388 = icmp eq i64 %350, 0
  br i1 %388, label %392, label %389

389:                                              ; preds = %387
  %390 = inttoptr i64 %350 to %"class.blink::mojom::blink::ManifestProtocolHandler"*
  call void @_ZN5blink5mojom5blink23ManifestProtocolHandlerD1Ev(%"class.blink::mojom::blink::ManifestProtocolHandler"* nonnull %390) #14
  %391 = inttoptr i64 %350 to i8*
  call void @_ZdlPv(i8* %391) #15
  br label %392

392:                                              ; preds = %389, %387, %57
  ret void
}

declare zeroext i1 @_ZN5blink25VerifyCustomHandlerSchemeERKN3WTF6StringERS1_NS_28ProtocolHandlerSecurityLevelE(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #1

declare void @_ZN3WTF6String6RemoveEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink28VerifyCustomHandlerURLSyntaxERKNS_4KURLES2_RKN3WTF6StringERS4_(%"class.blink::KURL"* dereferenceable(112), %"class.blink::KURL"* dereferenceable(112), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase24WebAppUrlHandlingEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser15ParseUrlHandlerEPKNS_10JSONObjectE(%"class.absl::optional.226"* noalias nocapture sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.absl::optional.179", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::StringAppend.177", align 8
  %17 = alloca %"class.WTF::String", align 8
  %18 = alloca %"class.WTF::String", align 8
  %19 = alloca %"class.WTF::String", align 8
  %20 = alloca %"class.WTF::StringView", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = alloca %"class.WTF::String", align 8
  %23 = alloca %"class.WTF::String", align 8
  %24 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.99, i64 0, i64 0), i64 6) #14
  %25 = call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %10) #14
  %26 = icmp eq %"class.blink::JSONValue"* %25, null
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %3
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #14
  br label %43

43:                                               ; preds = %3, %39, %42
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #14
  br i1 %26, label %44, label %64

44:                                               ; preds = %43
  %45 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.100, i64 0, i64 0), i64 66) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %11, i1 zeroext false, i32 0, i32 0)
  %46 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #14
  br label %62

62:                                               ; preds = %44, %58, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #14
  %63 = getelementptr inbounds %"class.absl::optional.226", %"class.absl::optional.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %63, align 8
  br label %715

64:                                               ; preds = %43
  %65 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %65) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %65, i8 -86, i64 16, i1 false)
  %66 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.99, i64 0, i64 0), i64 6) #14
  call void @_ZN5blink14ManifestParser11ParseStringEPKNS_10JSONObjectERKN3WTF6StringENS0_8TrimTypeE(%"class.absl::optional.179"* nonnull sret %12, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %13, i32 0)
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %70
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %70
  %80 = phi i32 [ %78, %77 ], [ %76, %70 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %68) #14
  br label %83

83:                                               ; preds = %64, %79, %82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #14
  %84 = load i8, i8* %65, align 8, !range !16
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %86, label %106

86:                                               ; preds = %83
  %87 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %14, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.101, i64 0, i64 0), i64 66) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %14, i1 zeroext false, i32 0, i32 0)
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %104, label %91

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 0, i32 0
  %97 = load i32, i32* %96, align 4
  br i1 %95, label %98, label %100

98:                                               ; preds = %91
  %99 = add i32 %97, -1
  store i32 %99, i32* %96, align 4
  br label %100

100:                                              ; preds = %98, %91
  %101 = phi i32 [ %99, %98 ], [ %97, %91 ]
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %103, label %104

103:                                              ; preds = %100
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %89) #14
  br label %104

104:                                              ; preds = %86, %100, %103
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #14
  %105 = getelementptr inbounds %"class.absl::optional.226", %"class.absl::optional.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %105, align 8
  br label %693

106:                                              ; preds = %83
  %107 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %108 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %107, i64 0, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %281, label %111

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 1
  %113 = load i32, i32* %112, align 4
  %114 = icmp ugt i32 %113, 2000
  br i1 %114, label %115, label %281

115:                                              ; preds = %111
  %116 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %116) #14
  %117 = bitcast %"class.WTF::StringAppend.177"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %117) #14
  %118 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %118) #14
  %119 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 11
  %120 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 2
  %121 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 -86, i64 32, i1 false) #14
  store i8 48, i8* %119, align 1
  %122 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 10
  store i8 48, i8* %122, align 2
  %123 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 9
  store i8 48, i8* %123, align 1
  %124 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %9, i64 0, i32 0, i64 8
  store i8* %124, i8** %120, align 8
  store i8 50, i8* %124, align 8
  store i32 4, i32* %121, align 8
  %125 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %124, i32 4) #14
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %118) #14
  %126 = icmp eq %"class.WTF::StringImpl"* %125, null
  br i1 %126, label %202, label %127

127:                                              ; preds = %115
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  br i1 %131, label %134, label %144

134:                                              ; preds = %127
  %135 = zext i32 %133 to i33
  %136 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %135, i33 1) #14
  %137 = extractvalue { i33, i1 } %136, 1
  %138 = extractvalue { i33, i1 } %136, 0
  %139 = icmp slt i33 %138, 0
  %140 = or i1 %137, %139
  br i1 %140, label %141, label %142, !prof !2

141:                                              ; preds = %134
  call void @llvm.trap() #14
  unreachable

142:                                              ; preds = %134
  %143 = trunc i33 %138 to i32
  store i32 %143, i32* %132, align 4
  br label %144

144:                                              ; preds = %142, %127
  %145 = phi i32 [ %143, %142 ], [ %133, %127 ]
  %146 = load atomic i32, i32* %128 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %159

149:                                              ; preds = %144
  %150 = zext i32 %145 to i33
  %151 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %150, i33 1) #14
  %152 = extractvalue { i33, i1 } %151, 1
  %153 = extractvalue { i33, i1 } %151, 0
  %154 = icmp slt i33 %153, 0
  %155 = or i1 %152, %154
  br i1 %155, label %156, label %157, !prof !2

156:                                              ; preds = %149
  call void @llvm.trap() #14
  unreachable

157:                                              ; preds = %149
  %158 = trunc i33 %153 to i32
  store i32 %158, i32* %132, align 4
  br label %159

159:                                              ; preds = %157, %144
  %160 = phi i32 [ %158, %157 ], [ %145, %144 ]
  %161 = load atomic i32, i32* %128 monotonic, align 4
  %162 = and i32 %161, 2
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %166

164:                                              ; preds = %159
  %165 = add i32 %160, -1
  store i32 %165, i32* %132, align 4
  br label %166

166:                                              ; preds = %164, %159
  %167 = phi i32 [ %165, %164 ], [ %160, %159 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %125) #14
  br label %170

170:                                              ; preds = %166, %169
  %171 = load atomic i32, i32* %128 monotonic, align 4, !noalias !119
  %172 = and i32 %171, 2
  %173 = icmp eq i32 %172, 0
  %174 = load i32, i32* %132, align 4
  br i1 %173, label %175, label %185

175:                                              ; preds = %170
  %176 = zext i32 %174 to i33
  %177 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %176, i33 1) #14
  %178 = extractvalue { i33, i1 } %177, 1
  %179 = extractvalue { i33, i1 } %177, 0
  %180 = icmp slt i33 %179, 0
  %181 = or i1 %178, %180
  br i1 %181, label %182, label %183, !prof !2

182:                                              ; preds = %175
  call void @llvm.trap() #14, !noalias !119
  unreachable

183:                                              ; preds = %175
  %184 = trunc i33 %179 to i32
  store i32 %184, i32* %132, align 4, !noalias !119
  br label %185

185:                                              ; preds = %170, %183
  %186 = phi i32 [ %184, %183 ], [ %174, %170 ]
  %187 = bitcast %"class.WTF::StringAppend.177"* %16 to i64*
  store i64 ptrtoint ([74 x i8]* @.str.102 to i64), i64* %187, align 8, !alias.scope !119
  %188 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %125, %"class.WTF::StringImpl"** %188, align 8, !alias.scope !119
  %189 = load atomic i32, i32* %128 monotonic, align 4, !noalias !119
  %190 = and i32 %189, 2
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %206

192:                                              ; preds = %185
  %193 = zext i32 %186 to i33
  %194 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %193, i33 1) #14
  %195 = extractvalue { i33, i1 } %194, 1
  %196 = extractvalue { i33, i1 } %194, 0
  %197 = icmp slt i33 %196, 0
  %198 = or i1 %195, %197
  br i1 %198, label %199, label %200, !prof !2

199:                                              ; preds = %192
  call void @llvm.trap() #14, !noalias !119
  unreachable

200:                                              ; preds = %192
  %201 = trunc i33 %196 to i32
  store i32 %201, i32* %132, align 4, !noalias !119
  br label %206

202:                                              ; preds = %115
  %203 = bitcast %"class.WTF::StringAppend.177"* %16 to i64*
  store i64 ptrtoint ([74 x i8]* @.str.102 to i64), i64* %203, align 8, !alias.scope !119
  %204 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %204, align 8, !alias.scope !119
  %205 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), i8** %205, align 8, !alias.scope !119
  br label %218

206:                                              ; preds = %200, %185
  %207 = phi i32 [ %201, %200 ], [ %186, %185 ]
  %208 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %16, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.103, i64 0, i64 0), i8** %208, align 8, !alias.scope !119
  %209 = load atomic i32, i32* %128 monotonic, align 4, !noalias !119
  %210 = and i32 %209, 2
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %214

212:                                              ; preds = %206
  %213 = add i32 %207, -1
  store i32 %213, i32* %132, align 4, !noalias !119
  br label %214

214:                                              ; preds = %212, %206
  %215 = phi i32 [ %213, %212 ], [ %207, %206 ]
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %218

217:                                              ; preds = %214
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %125) #14, !noalias !119
  br label %218

218:                                              ; preds = %202, %214, %217
  %219 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_EcvS3_Ev(%"class.WTF::StringAppend.177"* nonnull %16)
  %220 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %219, %"class.WTF::StringImpl"** %220, align 8
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %15, i1 zeroext false, i32 0, i32 0)
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #14
  br label %236

236:                                              ; preds = %218, %232, %235
  %237 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %253, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %240
  %248 = add i32 %246, -1
  store i32 %248, i32* %245, align 4
  br label %249

249:                                              ; preds = %247, %240
  %250 = phi i32 [ %248, %247 ], [ %246, %240 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %238) #14
  br label %253

253:                                              ; preds = %236, %249, %252
  br i1 %126, label %279, label %254

254:                                              ; preds = %253
  %255 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = load atomic i32, i32* %255 monotonic, align 4
  %257 = and i32 %256, 2
  %258 = icmp eq i32 %257, 0
  %259 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %125, i64 0, i32 0
  %260 = load i32, i32* %259, align 4
  br i1 %258, label %261, label %263

261:                                              ; preds = %254
  %262 = add i32 %260, -1
  store i32 %262, i32* %259, align 4
  br label %263

263:                                              ; preds = %261, %254
  %264 = phi i32 [ %262, %261 ], [ %260, %254 ]
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %268

266:                                              ; preds = %263
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %125) #14
  %267 = load i32, i32* %259, align 4
  br label %268

268:                                              ; preds = %263, %266
  %269 = phi i32 [ %264, %263 ], [ %267, %266 ]
  %270 = load atomic i32, i32* %255 monotonic, align 4
  %271 = and i32 %270, 2
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %275

273:                                              ; preds = %268
  %274 = add i32 %269, -1
  store i32 %274, i32* %259, align 4
  br label %275

275:                                              ; preds = %273, %268
  %276 = phi i32 [ %274, %273 ], [ %269, %268 ]
  %277 = icmp eq i32 %276, 0
  br i1 %277, label %278, label %279

278:                                              ; preds = %275
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %125) #14
  br label %279

279:                                              ; preds = %253, %275, %278
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %117) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %116) #14
  %280 = getelementptr inbounds %"class.absl::optional.226", %"class.absl::optional.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %280, align 8
  br label %693

281:                                              ; preds = %106, %111
  %282 = call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin16CreateFromStringERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8) %107) #14
  %283 = ptrtoint %"class.blink::SecurityOrigin"* %282 to i64
  %284 = icmp eq %"class.blink::SecurityOrigin"* %282, null
  br i1 %284, label %289, label %285

285:                                              ; preds = %281
  %286 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %282, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %287 = load i8, i8* %286, align 8, !range !16
  %288 = icmp eq i8 %287, 0
  br i1 %288, label %309, label %289

289:                                              ; preds = %285, %281
  %290 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %290) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %17, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.101, i64 0, i64 0), i64 66) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %17, i1 zeroext false, i32 0, i32 0)
  %291 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  %292 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %291, align 8
  %293 = icmp eq %"class.WTF::StringImpl"* %292, null
  br i1 %293, label %307, label %294

294:                                              ; preds = %289
  %295 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %296 = load atomic i32, i32* %295 monotonic, align 4
  %297 = and i32 %296, 2
  %298 = icmp eq i32 %297, 0
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 0
  %300 = load i32, i32* %299, align 4
  br i1 %298, label %301, label %303

301:                                              ; preds = %294
  %302 = add i32 %300, -1
  store i32 %302, i32* %299, align 4
  br label %303

303:                                              ; preds = %301, %294
  %304 = phi i32 [ %302, %301 ], [ %300, %294 ]
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %307

306:                                              ; preds = %303
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %292) #14
  br label %307

307:                                              ; preds = %289, %303, %306
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %290) #14
  %308 = getelementptr inbounds %"class.absl::optional.226", %"class.absl::optional.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %308, align 8
  br label %682

309:                                              ; preds = %285
  %310 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %282, i64 0, i32 1, i32 0, i32 0
  %311 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %310, align 8
  %312 = icmp eq %"class.WTF::StringImpl"* %311, null
  br i1 %312, label %330, label %313

313:                                              ; preds = %309
  %314 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %311, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %315 = load atomic i32, i32* %314 monotonic, align 4
  %316 = and i32 %315, 2
  %317 = icmp eq i32 %316, 0
  br i1 %317, label %318, label %335

318:                                              ; preds = %313
  %319 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %311, i64 0, i32 0
  %320 = load i32, i32* %319, align 4
  %321 = zext i32 %320 to i33
  %322 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %321, i33 1) #14
  %323 = extractvalue { i33, i1 } %322, 1
  %324 = extractvalue { i33, i1 } %322, 0
  %325 = icmp slt i33 %324, 0
  %326 = or i1 %323, %325
  br i1 %326, label %327, label %328, !prof !2

327:                                              ; preds = %318
  call void @llvm.trap() #14
  unreachable

328:                                              ; preds = %318
  %329 = trunc i33 %324 to i32
  store i32 %329, i32* %319, align 4
  br label %335

330:                                              ; preds = %309
  %331 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %331) #14
  %332 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* null, i8** %332, align 8
  %333 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %334 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %333, i64* %334, align 8
  br label %343

335:                                              ; preds = %313, %328
  %336 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %336) #14
  %337 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 0
  store %"class.WTF::StringImpl"* %311, %"class.WTF::StringImpl"** %337, align 8
  %338 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %311, i64 0, i32 1
  %339 = load i32, i32* %338, align 4
  %340 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %311, i64 1
  %341 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  %342 = bitcast i8** %341 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %340, %"class.WTF::StringImpl"** %342, align 8
  br label %343

343:                                              ; preds = %335, %330
  %344 = phi i8* [ %336, %335 ], [ %331, %330 ]
  %345 = phi i32 [ %339, %335 ], [ 0, %330 ]
  %346 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 %345, i32* %346, align 8
  %347 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %347) #14
  %348 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0)) #17
  %349 = icmp ult i64 %348, 4294967296
  br i1 %349, label %351, label %350, !prof !3

350:                                              ; preds = %343
  call void @llvm.trap() #14
  unreachable

351:                                              ; preds = %343
  %352 = trunc i64 %348 to i32
  %353 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %354 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %353, i64* %354, align 8
  %355 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kHttpsSchemeE, i64 0, i64 0), i8** %355, align 8
  %356 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %352, i32* %356, align 8
  %357 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %7, %"class.WTF::StringView"* nonnull dereferenceable(24) %8) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %347) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %344) #14
  br i1 %312, label %371, label %358

358:                                              ; preds = %351
  %359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %311, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %360 = load atomic i32, i32* %359 monotonic, align 4
  %361 = and i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %311, i64 0, i32 0
  %364 = load i32, i32* %363, align 4
  br i1 %362, label %365, label %367

365:                                              ; preds = %358
  %366 = add i32 %364, -1
  store i32 %366, i32* %363, align 4
  br label %367

367:                                              ; preds = %365, %358
  %368 = phi i32 [ %366, %365 ], [ %364, %358 ]
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %370, label %371

370:                                              ; preds = %367
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %311) #14
  br label %371

371:                                              ; preds = %351, %367, %370
  br i1 %357, label %392, label %372

372:                                              ; preds = %371
  %373 = bitcast %"class.WTF::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %373) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %18, i8* getelementptr inbounds ([82 x i8], [82 x i8]* @.str.104, i64 0, i64 0), i64 81) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %18, i1 zeroext false, i32 0, i32 0)
  %374 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %375 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %374, align 8
  %376 = icmp eq %"class.WTF::StringImpl"* %375, null
  br i1 %376, label %390, label %377

377:                                              ; preds = %372
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %379 = load atomic i32, i32* %378 monotonic, align 4
  %380 = and i32 %379, 2
  %381 = icmp eq i32 %380, 0
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %375, i64 0, i32 0
  %383 = load i32, i32* %382, align 4
  br i1 %381, label %384, label %386

384:                                              ; preds = %377
  %385 = add i32 %383, -1
  store i32 %385, i32* %382, align 4
  br label %386

386:                                              ; preds = %384, %377
  %387 = phi i32 [ %385, %384 ], [ %383, %377 ]
  %388 = icmp eq i32 %387, 0
  br i1 %388, label %389, label %390

389:                                              ; preds = %386
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %375) #14
  br label %390

390:                                              ; preds = %389, %386, %372
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %373) #14
  %391 = getelementptr inbounds %"class.absl::optional.226", %"class.absl::optional.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %391, align 8
  br label %685

392:                                              ; preds = %371
  %393 = bitcast %"class.WTF::String"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %393) #14
  %394 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %19, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %394, align 8
  %395 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %282, i64 0, i32 2, i32 0, i32 0
  %396 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %395, align 8
  %397 = icmp eq %"class.WTF::StringImpl"* %396, null
  br i1 %397, label %415, label %398

398:                                              ; preds = %392
  %399 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %396, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %400 = load atomic i32, i32* %399 monotonic, align 4
  %401 = and i32 %400, 2
  %402 = icmp eq i32 %401, 0
  br i1 %402, label %403, label %415

403:                                              ; preds = %398
  %404 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %396, i64 0, i32 0
  %405 = load i32, i32* %404, align 4
  %406 = zext i32 %405 to i33
  %407 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %406, i33 1) #14
  %408 = extractvalue { i33, i1 } %407, 1
  %409 = extractvalue { i33, i1 } %407, 0
  %410 = icmp slt i33 %409, 0
  %411 = or i1 %408, %410
  br i1 %411, label %412, label %413, !prof !2

412:                                              ; preds = %403
  call void @llvm.trap() #14
  unreachable

413:                                              ; preds = %403
  %414 = trunc i33 %409 to i32
  store i32 %414, i32* %404, align 4
  br label %415

415:                                              ; preds = %392, %398, %413
  store %"class.WTF::StringImpl"* %396, %"class.WTF::StringImpl"** %394, align 8
  %416 = call i8* @_Znwm(i64 16) #15, !noalias !122
  %417 = bitcast i8* %416 to %"class.blink::mojom::blink::ManifestUrlHandler"*
  call void @_ZN5blink5mojom5blink18ManifestUrlHandlerC1Ev(%"class.blink::mojom::blink::ManifestUrlHandler"* nonnull %417) #14, !noalias !122
  %418 = ptrtoint i8* %416 to i64
  %419 = bitcast %"class.WTF::StringView"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %419) #14
  %420 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %421 = bitcast %"class.WTF::StringView"* %20 to i64*
  store i64 %420, i64* %421, align 8
  %422 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @_ZN5blink12_GLOBAL__N_125kUrlHandlerWildcardPrefixE, i64 0, i64 0), i8** %422, align 8
  %423 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 2
  store i32 4, i32* %423, align 8
  %424 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %394, align 8
  %425 = icmp eq %"class.WTF::StringImpl"* %424, null
  br i1 %425, label %426, label %428

426:                                              ; preds = %415
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %419) #14
  %427 = getelementptr inbounds i8, i8* %416, i64 8
  br label %450

428:                                              ; preds = %415
  %429 = call zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %424, %"class.WTF::StringView"* nonnull dereferenceable(24) %20) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %419) #14
  %430 = getelementptr inbounds i8, i8* %416, i64 8
  br i1 %429, label %431, label %450

431:                                              ; preds = %428
  store i8 1, i8* %430, align 8
  %432 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %19, i32 4, i32 -1) #14
  %433 = ptrtoint %"class.WTF::StringImpl"* %432 to i64
  %434 = bitcast %"class.WTF::String"* %19 to i64*
  %435 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %394, align 8
  store i64 %433, i64* %434, align 8
  %436 = icmp eq %"class.WTF::StringImpl"* %435, null
  br i1 %436, label %455, label %437

437:                                              ; preds = %431
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %435, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %439 = load atomic i32, i32* %438 monotonic, align 4
  %440 = and i32 %439, 2
  %441 = icmp eq i32 %440, 0
  %442 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %435, i64 0, i32 0
  %443 = load i32, i32* %442, align 4
  br i1 %441, label %444, label %446

444:                                              ; preds = %437
  %445 = add i32 %443, -1
  store i32 %445, i32* %442, align 4
  br label %446

446:                                              ; preds = %444, %437
  %447 = phi i32 [ %445, %444 ], [ %443, %437 ]
  %448 = icmp eq i32 %447, 0
  br i1 %448, label %449, label %452

449:                                              ; preds = %446
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %435) #14
  br label %452

450:                                              ; preds = %426, %428
  %451 = phi i8* [ %427, %426 ], [ %430, %428 ]
  store i8 0, i8* %451, align 8
  br label %452

452:                                              ; preds = %450, %449, %446
  %453 = phi i8* [ %430, %446 ], [ %430, %449 ], [ %451, %450 ]
  %454 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %394, align 8
  br label %455

455:                                              ; preds = %452, %431
  %456 = phi %"class.WTF::StringImpl"* [ %454, %452 ], [ %432, %431 ]
  %457 = phi i8* [ %453, %452 ], [ %430, %431 ]
  %458 = icmp eq %"class.WTF::StringImpl"* %456, null
  br i1 %458, label %476, label %459

459:                                              ; preds = %455
  %460 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %456, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %461 = load atomic i32, i32* %460 monotonic, align 4
  %462 = and i32 %461, 2
  %463 = icmp eq i32 %462, 0
  br i1 %463, label %464, label %476

464:                                              ; preds = %459
  %465 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %456, i64 0, i32 0
  %466 = load i32, i32* %465, align 4
  %467 = zext i32 %466 to i33
  %468 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %467, i33 1) #14
  %469 = extractvalue { i33, i1 } %468, 1
  %470 = extractvalue { i33, i1 } %468, 0
  %471 = icmp slt i33 %470, 0
  %472 = or i1 %469, %471
  br i1 %472, label %473, label %474, !prof !2

473:                                              ; preds = %464
  call void @llvm.trap() #14
  unreachable

474:                                              ; preds = %464
  %475 = trunc i33 %470 to i32
  store i32 %475, i32* %465, align 4
  br label %476

476:                                              ; preds = %455, %459, %474
  %477 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %477)
  %478 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %456, %"class.WTF::StringImpl"** %478, align 8
  %479 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %479) #14
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.WTF::String"* nonnull %4, i32 0) #14
  %480 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %481 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %480, i64 0, i32 1, i32 0
  %482 = load i8, i8* %481, align 1
  %483 = icmp slt i8 %482, 0
  %484 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %485 = load i8*, i8** %484, align 8
  %486 = select i1 %483, i8* %485, i8* %479
  %487 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %488 = load i64, i64* %487, align 8
  %489 = zext i8 %482 to i64
  %490 = select i1 %483, i64 %488, i64 %489
  %491 = call zeroext i1 @_ZN3url15HostIsIPAddressEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %486, i64 %490) #14
  %492 = load i8, i8* %481, align 1
  %493 = icmp slt i8 %492, 0
  br i1 %493, label %494, label %496

494:                                              ; preds = %476
  %495 = load i8*, i8** %484, align 8
  call void @_ZdlPv(i8* %495) #15
  br label %496

496:                                              ; preds = %494, %476
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %479) #14
  br i1 %491, label %528, label %497

497:                                              ; preds = %496
  %498 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %498) #14
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %6, %"class.WTF::String"* nonnull %4, i32 0) #14
  %499 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %500 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %499, i64 0, i32 1, i32 0
  %501 = load i8, i8* %500, align 1
  %502 = icmp slt i8 %501, 0
  %503 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %504 = load i8*, i8** %503, align 8
  %505 = select i1 %502, i8* %504, i8* %498
  %506 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %507 = load i64, i64* %506, align 8
  %508 = zext i8 %501 to i64
  %509 = select i1 %502, i64 %507, i64 %508
  %510 = call i64 @_ZN3net27registry_controlled_domains31PermissiveGetHostRegistryLengthEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_21UnknownRegistryFilterENS0_21PrivateRegistryFilterE(i8* %505, i64 %509, i32 0, i32 0) #14
  %511 = load i8, i8* %500, align 1
  %512 = icmp slt i8 %511, 0
  br i1 %512, label %513, label %515

513:                                              ; preds = %497
  %514 = load i8*, i8** %503, align 8
  call void @_ZdlPv(i8* %514) #15
  br label %515

515:                                              ; preds = %513, %497
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %498) #14
  %516 = add i64 %510, 1
  %517 = icmp ult i64 %516, 2
  br i1 %517, label %528, label %518

518:                                              ; preds = %515
  %519 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %478, align 8
  %520 = icmp eq %"class.WTF::StringImpl"* %519, null
  br i1 %520, label %525, label %521

521:                                              ; preds = %518
  %522 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %519, i64 0, i32 1
  %523 = load i32, i32* %522, align 4
  %524 = zext i32 %523 to i64
  br label %525

525:                                              ; preds = %521, %518
  %526 = phi i64 [ %524, %521 ], [ 0, %518 ]
  %527 = icmp ult i64 %510, %526
  br label %528

528:                                              ; preds = %525, %515, %496
  %529 = phi i1 [ true, %496 ], [ false, %515 ], [ %527, %525 ]
  %530 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %478, align 8
  %531 = icmp eq %"class.WTF::StringImpl"* %530, null
  br i1 %531, label %545, label %532

532:                                              ; preds = %528
  %533 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %530, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %534 = load atomic i32, i32* %533 monotonic, align 4
  %535 = and i32 %534, 2
  %536 = icmp eq i32 %535, 0
  %537 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %530, i64 0, i32 0
  %538 = load i32, i32* %537, align 4
  br i1 %536, label %539, label %541

539:                                              ; preds = %532
  %540 = add i32 %538, -1
  store i32 %540, i32* %537, align 4
  br label %541

541:                                              ; preds = %539, %532
  %542 = phi i32 [ %540, %539 ], [ %538, %532 ]
  %543 = icmp eq i32 %542, 0
  br i1 %543, label %544, label %545

544:                                              ; preds = %541
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %530) #14
  br label %545

545:                                              ; preds = %528, %541, %544
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %477)
  br i1 %529, label %564, label %546

546:                                              ; preds = %545
  %547 = bitcast %"class.WTF::String"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %547) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %21, i8* getelementptr inbounds ([77 x i8], [77 x i8]* @.str.105, i64 0, i64 0), i64 76) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %21, i1 zeroext false, i32 0, i32 0)
  %548 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %549 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %548, align 8
  %550 = icmp eq %"class.WTF::StringImpl"* %549, null
  br i1 %550, label %659, label %551

551:                                              ; preds = %546
  %552 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %549, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %553 = load atomic i32, i32* %552 monotonic, align 4
  %554 = and i32 %553, 2
  %555 = icmp eq i32 %554, 0
  %556 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %549, i64 0, i32 0
  %557 = load i32, i32* %556, align 4
  br i1 %555, label %558, label %560

558:                                              ; preds = %551
  %559 = add i32 %557, -1
  store i32 %559, i32* %556, align 4
  br label %560

560:                                              ; preds = %558, %551
  %561 = phi i32 [ %559, %558 ], [ %557, %551 ]
  %562 = icmp eq i32 %561, 0
  br i1 %562, label %563, label %659

563:                                              ; preds = %560
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %549) #14
  br label %659

564:                                              ; preds = %545
  %565 = load i8, i8* %457, align 8, !range !16
  %566 = icmp eq i8 %565, 0
  br i1 %566, label %637, label %567

567:                                              ; preds = %564
  %568 = bitcast %"class.WTF::String"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %568) #14
  %569 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %310, align 8
  %570 = icmp eq %"class.WTF::StringImpl"* %569, null
  br i1 %570, label %588, label %571

571:                                              ; preds = %567
  %572 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %569, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %573 = load atomic i32, i32* %572 monotonic, align 4
  %574 = and i32 %573, 2
  %575 = icmp eq i32 %574, 0
  br i1 %575, label %576, label %588

576:                                              ; preds = %571
  %577 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %569, i64 0, i32 0
  %578 = load i32, i32* %577, align 4
  %579 = zext i32 %578 to i33
  %580 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %579, i33 1) #14
  %581 = extractvalue { i33, i1 } %580, 1
  %582 = extractvalue { i33, i1 } %580, 0
  %583 = icmp slt i33 %582, 0
  %584 = or i1 %581, %583
  br i1 %584, label %585, label %586, !prof !2

585:                                              ; preds = %576
  call void @llvm.trap() #14
  unreachable

586:                                              ; preds = %576
  %587 = trunc i33 %582 to i32
  store i32 %587, i32* %577, align 4
  br label %588

588:                                              ; preds = %586, %571, %567
  %589 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %22, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %569, %"class.WTF::StringImpl"** %589, align 8
  %590 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %282, i64 0, i32 4
  %591 = load i16, i16* %590, align 8
  %592 = call %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin20CreateFromValidTupleERKN3WTF6StringES4_t(%"class.WTF::String"* nonnull dereferenceable(8) %22, %"class.WTF::String"* nonnull dereferenceable(8) %19, i16 zeroext %591) #14
  %593 = ptrtoint %"class.blink::SecurityOrigin"* %592 to i64
  %594 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %282, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %594) #14
  %595 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %282, i64 0, i32 0, i32 0, i32 0, i32 0
  %596 = load i32, i32* %595, align 4
  %597 = icmp eq i32 %596, 0
  br i1 %597, label %598, label %600

598:                                              ; preds = %588
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %282) #14
  %599 = bitcast %"class.blink::SecurityOrigin"* %282 to i8*
  call void @free(i8* %599) #14
  br label %600

600:                                              ; preds = %588, %598
  %601 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %589, align 8
  %602 = icmp eq %"class.WTF::StringImpl"* %601, null
  br i1 %602, label %616, label %603

603:                                              ; preds = %600
  %604 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %601, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %605 = load atomic i32, i32* %604 monotonic, align 4
  %606 = and i32 %605, 2
  %607 = icmp eq i32 %606, 0
  %608 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %601, i64 0, i32 0
  %609 = load i32, i32* %608, align 4
  br i1 %607, label %610, label %612

610:                                              ; preds = %603
  %611 = add i32 %609, -1
  store i32 %611, i32* %608, align 4
  br label %612

612:                                              ; preds = %610, %603
  %613 = phi i32 [ %611, %610 ], [ %609, %603 ]
  %614 = icmp eq i32 %613, 0
  br i1 %614, label %615, label %616

615:                                              ; preds = %612
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %601) #14
  br label %616

616:                                              ; preds = %600, %612, %615
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %568) #14
  %617 = load i8, i8* %65, align 8, !range !16
  %618 = icmp eq i8 %617, 0
  br i1 %618, label %619, label %637

619:                                              ; preds = %616
  %620 = bitcast %"class.WTF::String"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %620) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %23, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.101, i64 0, i64 0), i64 66) #14
  call void @_ZN5blink14ManifestParser12AddErrorInfoERKN3WTF6StringEbii(%"class.blink::ManifestParser"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %23, i1 zeroext false, i32 0, i32 0)
  %621 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %23, i64 0, i32 0, i32 0
  %622 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %621, align 8
  %623 = icmp eq %"class.WTF::StringImpl"* %622, null
  br i1 %623, label %659, label %624

624:                                              ; preds = %619
  %625 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %622, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %626 = load atomic i32, i32* %625 monotonic, align 4
  %627 = and i32 %626, 2
  %628 = icmp eq i32 %627, 0
  %629 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %622, i64 0, i32 0
  %630 = load i32, i32* %629, align 4
  br i1 %628, label %631, label %633

631:                                              ; preds = %624
  %632 = add i32 %630, -1
  store i32 %632, i32* %629, align 4
  br label %633

633:                                              ; preds = %631, %624
  %634 = phi i32 [ %632, %631 ], [ %630, %624 ]
  %635 = icmp eq i32 %634, 0
  br i1 %635, label %636, label %659

636:                                              ; preds = %633
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %622) #14
  br label %659

637:                                              ; preds = %616, %564
  %638 = phi i64 [ %283, %564 ], [ %593, %616 ]
  %639 = icmp eq i64 %638, 0
  br i1 %639, label %643, label %640

640:                                              ; preds = %637
  %641 = inttoptr i64 %638 to %"class.blink::SecurityOrigin"*
  %642 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %641, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %642) #14
  br label %643

643:                                              ; preds = %637, %640
  %644 = bitcast i8* %416 to i64*
  %645 = bitcast i8* %416 to %"class.blink::SecurityOrigin"**
  %646 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %645, align 8
  store i64 %638, i64* %644, align 8
  %647 = icmp eq %"class.blink::SecurityOrigin"* %646, null
  br i1 %647, label %655, label %648

648:                                              ; preds = %643
  %649 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %646, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %649) #14
  %650 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %646, i64 0, i32 0, i32 0, i32 0, i32 0
  %651 = load i32, i32* %650, align 4
  %652 = icmp eq i32 %651, 0
  br i1 %652, label %653, label %655

653:                                              ; preds = %648
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %646) #14
  %654 = bitcast %"class.blink::SecurityOrigin"* %646 to i8*
  call void @free(i8* %654) #14
  br label %655

655:                                              ; preds = %653, %648, %643
  %656 = getelementptr inbounds %"class.absl::optional.226", %"class.absl::optional.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %656, align 8
  %657 = getelementptr inbounds %"class.absl::optional.226", %"class.absl::optional.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %658 = bitcast %"class.mojo::StructPtr.99"* %657 to i64*
  store i64 %418, i64* %658, align 8
  br label %663

659:                                              ; preds = %636, %633, %619, %563, %560, %546
  %660 = phi i8* [ %547, %546 ], [ %547, %560 ], [ %547, %563 ], [ %620, %619 ], [ %620, %633 ], [ %620, %636 ]
  %661 = phi i64 [ %283, %546 ], [ %283, %560 ], [ %283, %563 ], [ %593, %619 ], [ %593, %633 ], [ %593, %636 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %660) #14
  %662 = getelementptr inbounds %"class.absl::optional.226", %"class.absl::optional.226"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %662, align 8
  call void @_ZN5blink5mojom5blink18ManifestUrlHandlerD1Ev(%"class.blink::mojom::blink::ManifestUrlHandler"* nonnull %417) #14
  call void @_ZdlPv(i8* nonnull %416) #15
  br label %663

663:                                              ; preds = %655, %659
  %664 = phi i64 [ %638, %655 ], [ %661, %659 ]
  %665 = inttoptr i64 %664 to %"class.blink::SecurityOrigin"*
  %666 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %394, align 8
  %667 = icmp eq %"class.WTF::StringImpl"* %666, null
  br i1 %667, label %681, label %668

668:                                              ; preds = %663
  %669 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %666, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %670 = load atomic i32, i32* %669 monotonic, align 4
  %671 = and i32 %670, 2
  %672 = icmp eq i32 %671, 0
  %673 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %666, i64 0, i32 0
  %674 = load i32, i32* %673, align 4
  br i1 %672, label %675, label %677

675:                                              ; preds = %668
  %676 = add i32 %674, -1
  store i32 %676, i32* %673, align 4
  br label %677

677:                                              ; preds = %675, %668
  %678 = phi i32 [ %676, %675 ], [ %674, %668 ]
  %679 = icmp eq i32 %678, 0
  br i1 %679, label %680, label %681

680:                                              ; preds = %677
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %666) #14
  br label %681

681:                                              ; preds = %663, %677, %680
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %393) #14
  br label %682

682:                                              ; preds = %681, %307
  %683 = phi %"class.blink::SecurityOrigin"* [ %282, %307 ], [ %665, %681 ]
  %684 = icmp eq %"class.blink::SecurityOrigin"* %683, null
  br i1 %684, label %693, label %685

685:                                              ; preds = %390, %682
  %686 = phi %"class.blink::SecurityOrigin"* [ %282, %390 ], [ %683, %682 ]
  %687 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %686, i64 0, i32 0, i32 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %687) #14
  %688 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %686, i64 0, i32 0, i32 0, i32 0, i32 0
  %689 = load i32, i32* %688, align 4
  %690 = icmp eq i32 %689, 0
  br i1 %690, label %691, label %693

691:                                              ; preds = %685
  call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %686) #14
  %692 = bitcast %"class.blink::SecurityOrigin"* %686 to i8*
  call void @free(i8* %692) #14
  br label %693

693:                                              ; preds = %691, %685, %682, %279, %104
  %694 = load i8, i8* %65, align 8, !range !16
  %695 = icmp eq i8 %694, 0
  br i1 %695, label %714, label %696

696:                                              ; preds = %693
  %697 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %698 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %697, align 8
  %699 = icmp eq %"class.WTF::StringImpl"* %698, null
  br i1 %699, label %713, label %700

700:                                              ; preds = %696
  %701 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %698, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %702 = load atomic i32, i32* %701 monotonic, align 4
  %703 = and i32 %702, 2
  %704 = icmp eq i32 %703, 0
  %705 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %698, i64 0, i32 0
  %706 = load i32, i32* %705, align 4
  br i1 %704, label %707, label %709

707:                                              ; preds = %700
  %708 = add i32 %706, -1
  store i32 %708, i32* %705, align 4
  br label %709

709:                                              ; preds = %707, %700
  %710 = phi i32 [ %708, %707 ], [ %706, %700 ]
  %711 = icmp eq i32 %710, 0
  br i1 %711, label %712, label %713

712:                                              ; preds = %709
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %698) #14
  br label %713

713:                                              ; preds = %712, %709, %696
  store i8 0, i8* %65, align 8
  br label %714

714:                                              ; preds = %693, %713
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %65) #14
  br label %715

715:                                              ; preds = %714, %62
  ret void
}

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin16CreateFromStringERKN3WTF6StringE(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #1

declare %"class.blink::SecurityOrigin"* @_ZN5blink14SecurityOrigin20CreateFromValidTupleERKN3WTF6StringES4_t(%"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), i16 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser25ParseNoteTakingNewNoteUrlEPKNS_10JSONObjectE(%"class.blink::KURL"* noalias sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::KURL", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.106, i64 0, i64 0), i64 12) #14
  %8 = call %"class.blink::JSONValue"* @_ZNK5blink10JSONObject3GetERKN3WTF6StringE(%"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %4) #14
  %9 = icmp eq %"class.blink::JSONValue"* %8, null
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #14
  br label %26

26:                                               ; preds = %3, %22, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  br i1 %9, label %27, label %28

27:                                               ; preds = %26
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %0) #14
  br label %53

28:                                               ; preds = %26
  %29 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %29) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 112, i1 false)
  %30 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.106, i64 0, i64 0), i64 12) #14
  %31 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %1, i64 0, i32 1
  call void @_ZN5blink14ManifestParser8ParseURLEPKNS_10JSONObjectERKN3WTF6StringERKNS_4KURLENS0_20ParseURLRestrictionsE(%"class.blink::KURL"* nonnull sret %5, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::KURL"* dereferenceable(112) %31, i32 2)
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #14
  br label %48

48:                                               ; preds = %28, %44, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #14
  %49 = call zeroext i1 @_ZNK5blink4KURL7IsValidEv(%"class.blink::KURL"* nonnull %5) #14
  br i1 %49, label %51, label %50

50:                                               ; preds = %48
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* %0) #14
  br label %52

51:                                               ; preds = %48
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %0, %"class.blink::KURL"* nonnull dereferenceable(112) %5) #14
  br label %52

52:                                               ; preds = %51, %50
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %29) #14
  br label %53

53:                                               ; preds = %52, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink14ManifestParser31ParseRelatedApplicationPlatformEPKNS_10JSONObjectE(%"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional.179", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 16, i1 false)
  %6 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.109, i64 0, i64 0), i64 8) #14
  call void @_ZN5blink14ManifestParser11ParseStringEPKNS_10JSONObjectERKN3WTF6StringENS0_8TrimTypeE(%"class.absl::optional.179"* nonnull sret %3, %"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 0)
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #14
  br label %23

23:                                               ; preds = %2, %19, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %24 = load i8, i8* %5, align 8, !range !16
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %65, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #14
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  call void @llvm.trap() #14
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %26
  %48 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #14
  br label %64

64:                                               ; preds = %63, %60, %47
  store i8 0, i8* %5, align 8
  br label %65

65:                                               ; preds = %23, %64
  %66 = phi %"class.WTF::StringImpl"* [ %28, %64 ], [ null, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #14
  ret %"class.WTF::StringImpl"* %66
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink14ManifestParser26ParseRelatedApplicationURLEPKNS_10JSONObjectE(%"class.absl::optional.123"* noalias sret, %"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::KURL", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %6) #14
  %7 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.44, i64 0, i64 0), i64 3) #14
  %8 = getelementptr inbounds %"class.blink::ManifestParser", %"class.blink::ManifestParser"* %1, i64 0, i32 1
  call void @_ZN5blink14ManifestParser8ParseURLEPKNS_10JSONObjectERKN3WTF6StringERKNS_4KURLENS0_20ParseURLRestrictionsE(%"class.blink::KURL"* nonnull sret %4, %"class.blink::ManifestParser"* %1, %"class.blink::JSONObject"* %2, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::KURL"* dereferenceable(112) %8, i32 0)
  %9 = getelementptr inbounds %"class.absl::optional.123", %"class.absl::optional.123"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %9, align 8
  %10 = getelementptr inbounds %"class.absl::optional.123", %"class.absl::optional.123"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN5blink4KURLC1ERKS0_(%"class.blink::KURL"* %10, %"class.blink::KURL"* nonnull dereferenceable(112) %4) #14
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #14
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #14
  br label %27

27:                                               ; preds = %3, %23, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink14ManifestParser25ParseRelatedApplicationIdEPKNS_10JSONObjectE(%"class.blink::ManifestParser"*, %"class.blink::JSONObject"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional.179", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 16, i1 false)
  %6 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #14
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.110, i64 0, i64 0), i64 2) #14
  call void @_ZN5blink14ManifestParser11ParseStringEPKNS_10JSONObjectERKN3WTF6StringENS0_8TrimTypeE(%"class.absl::optional.179"* nonnull sret %3, %"class.blink::ManifestParser"* %0, %"class.blink::JSONObject"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4, i32 0)
  %7 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %23, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %19

17:                                               ; preds = %10
  %18 = add i32 %16, -1
  store i32 %18, i32* %15, align 4
  br label %19

19:                                               ; preds = %17, %10
  %20 = phi i32 [ %18, %17 ], [ %16, %10 ]
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %19
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #14
  br label %23

23:                                               ; preds = %2, %19, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #14
  %24 = load i8, i8* %5, align 8, !range !16
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %65, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #14
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  call void @llvm.trap() #14
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %45, %30, %26
  %48 = getelementptr inbounds %"class.absl::optional.179", %"class.absl::optional.179"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = and i32 %53, 2
  %55 = icmp eq i32 %54, 0
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %49, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  br i1 %55, label %58, label %60

58:                                               ; preds = %51
  %59 = add i32 %57, -1
  store i32 %59, i32* %56, align 4
  br label %60

60:                                               ; preds = %58, %51
  %61 = phi i32 [ %59, %58 ], [ %57, %51 ]
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %64

63:                                               ; preds = %60
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %49) #14
  br label %64

64:                                               ; preds = %63, %60, %47
  store i8 0, i8* %5, align 8
  br label %65

65:                                               ; preds = %23, %64
  %66 = phi %"class.WTF::StringImpl"* [ %28, %64 ], [ null, %23 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #14
  ret %"class.WTF::StringImpl"* %66
}

declare zeroext i1 @_ZN5blink26RuntimeEnabledFeaturesBase26WebAppLinkCapturingEnabledEPKNS_14FeatureContextE(%"class.blink::FeatureContext"*) local_unnamed_addr #1

declare i32 @_ZN5blink22CaptureLinksFromStringERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink9JSONValue12ToJSONStringEv(%"class.blink::JSONValue"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4KURL7GetPathEv(%"class.blink::KURL"*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #7

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink8ManifestD1Ev(%"class.blink::mojom::blink::Manifest"*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink18ManifestNoteTakingD1Ev(%"class.blink::mojom::blink::ManifestNoteTaking"*) unnamed_addr #2

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink21ManifestImageResourceD1Ev(%"class.blink::mojom::blink::ManifestImageResource"*) unnamed_addr #2

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink20ManifestShortcutItemD1Ev(%"class.blink::mojom::blink::ManifestShortcutItem"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink18ManifestFileFilterD1Ev(%"class.blink::mojom::blink::ManifestFileFilter"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink25ManifestShareTargetParamsD1Ev(%"class.blink::mojom::blink::ManifestShareTargetParams"*) unnamed_addr #2

declare zeroext i1 @_ZN3net29ParseMimeTypeWithoutParameterERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEEPS6_S9_(%"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithEDs(%"class.WTF::StringImpl"*, i16 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink19ManifestShareTargetD1Ev(%"class.blink::mojom::blink::ManifestShareTarget"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink19ManifestFileHandlerD1Ev(%"class.blink::mojom::blink::ManifestFileHandler"*) unnamed_addr #2

declare zeroext i1 @_ZNK3WTF10StringImpl10StartsWithERKNS_10StringViewE(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare i32 @_ZN3WTF10StringImpl4FindERKNS_10StringViewEj(%"class.WTF::StringImpl"*, %"class.WTF::StringView"* dereferenceable(24), i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink23ManifestProtocolHandlerD1Ev(%"class.blink::mojom::blink::ManifestProtocolHandler"*) unnamed_addr #2

declare zeroext i1 @_ZN3url15HostIsIPAddressEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #1

declare i64 @_ZN3net27registry_controlled_domains31PermissiveGetHostRegistryLengthEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEENS0_21UnknownRegistryFilterENS0_21PrivateRegistryFilterE(i8*, i64, i32, i32) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink18ManifestUrlHandlerD1Ev(%"class.blink::mojom::blink::ManifestUrlHandler"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink26ManifestRelatedApplicationD1Ev(%"class.blink::mojom::blink::ManifestRelatedApplication"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink13ManifestErrorD1Ev(%"class.blink::mojom::blink::ManifestError"*) unnamed_addr #2

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #6 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #14
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #14
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #14
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #14
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #14
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #14
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #11

declare void @_ZN5blink5mojom5blink8ManifestC1Ev(%"class.blink::mojom::blink::Manifest"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN5blink5mojom5blink13ManifestErrorEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.136"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %28

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.136", %"class.WTF::Vector.136"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.136", %"class.WTF::Vector.136"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %6, i64 %9
  %11 = bitcast %"class.WTF::Vector.136"* %0 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  %12 = getelementptr inbounds %"class.WTF::Vector.136", %"class.WTF::Vector.136"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %12, align 8
  %13 = icmp eq i32 %8, 0
  br i1 %13, label %26, label %14

14:                                               ; preds = %4, %14
  %15 = phi %"class.mojo::InlinedStructPtr"* [ %24, %14 ], [ %6, %4 ]
  %16 = phi %"class.mojo::InlinedStructPtr"* [ %23, %14 ], [ null, %4 ]
  %17 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %16, i64 0, i32 0
  tail call void @_ZN5blink5mojom5blink13ManifestErrorC1Ev(%"class.blink::mojom::blink::ManifestError"* %17) #14
  %18 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %16, i64 0, i32 1
  store i32 0, i32* %18, align 8
  tail call void @_ZN5blink5mojom5blink13ManifestErrorD1Ev(%"class.blink::mojom::blink::ManifestError"* %17) #14
  tail call void @_ZN5blink5mojom5blink13ManifestErrorC1Ev(%"class.blink::mojom::blink::ManifestError"* %17) #14
  %19 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %15, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN5blink5mojom5blink13ManifestErrorEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.blink::mojom::blink::ManifestError"* dereferenceable(24) %17, %"class.blink::mojom::blink::ManifestError"* dereferenceable(24) %19) #14
  %20 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %15, i64 0, i32 1
  %21 = load i32, i32* %18, align 4
  %22 = load i32, i32* %20, align 4
  store i32 %22, i32* %18, align 4
  store i32 %21, i32* %20, align 4
  tail call void @_ZN5blink5mojom5blink13ManifestErrorD1Ev(%"class.blink::mojom::blink::ManifestError"* %19) #14
  %23 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %16, i64 1
  %24 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %15, i64 1
  %25 = icmp eq %"class.mojo::InlinedStructPtr"* %24, %10
  br i1 %25, label %26, label %14

26:                                               ; preds = %14, %4
  %27 = bitcast %"class.mojo::InlinedStructPtr"* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %27) #14
  br label %65

28:                                               ; preds = %2
  %29 = zext i32 %1 to i64
  %30 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16InlinedStructPtrIN5blink5mojom5blink13ManifestErrorEEEEEmm(i64 %29) #14
  %31 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %30, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16InlinedStructPtrIN5blink5mojom5blink13ManifestErrorEEEEEPKcv, i64 0, i64 0)) #14
  %32 = lshr i64 %30, 5
  %33 = ptrtoint i8* %31 to i64
  %34 = getelementptr inbounds %"class.WTF::Vector.136", %"class.WTF::Vector.136"* %0, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::Vector.136", %"class.WTF::Vector.136"* %0, i64 0, i32 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %35, i64 %38
  %40 = icmp eq i32 %37, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %28
  %42 = bitcast %"class.mojo::InlinedStructPtr"* %35 to i8*
  br label %60

43:                                               ; preds = %28
  %44 = bitcast i8* %31 to %"class.mojo::InlinedStructPtr"*
  br label %45

45:                                               ; preds = %43, %45
  %46 = phi %"class.mojo::InlinedStructPtr"* [ %55, %45 ], [ %35, %43 ]
  %47 = phi %"class.mojo::InlinedStructPtr"* [ %54, %45 ], [ %44, %43 ]
  %48 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %47, i64 0, i32 0
  tail call void @_ZN5blink5mojom5blink13ManifestErrorC1Ev(%"class.blink::mojom::blink::ManifestError"* %48) #14
  %49 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %47, i64 0, i32 1
  store i32 0, i32* %49, align 8
  tail call void @_ZN5blink5mojom5blink13ManifestErrorD1Ev(%"class.blink::mojom::blink::ManifestError"* %48) #14
  tail call void @_ZN5blink5mojom5blink13ManifestErrorC1Ev(%"class.blink::mojom::blink::ManifestError"* %48) #14
  %50 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %46, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN5blink5mojom5blink13ManifestErrorEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.blink::mojom::blink::ManifestError"* dereferenceable(24) %48, %"class.blink::mojom::blink::ManifestError"* dereferenceable(24) %50) #14
  %51 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %46, i64 0, i32 1
  %52 = load i32, i32* %49, align 4
  %53 = load i32, i32* %51, align 4
  store i32 %53, i32* %49, align 4
  store i32 %52, i32* %51, align 4
  tail call void @_ZN5blink5mojom5blink13ManifestErrorD1Ev(%"class.blink::mojom::blink::ManifestError"* %50) #14
  %54 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %47, i64 1
  %55 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %46, i64 1
  %56 = icmp eq %"class.mojo::InlinedStructPtr"* %55, %39
  br i1 %56, label %57, label %45

57:                                               ; preds = %45
  %58 = bitcast %"class.WTF::Vector.136"* %0 to i8**
  %59 = load i8*, i8** %58, align 8
  br label %60

60:                                               ; preds = %41, %57
  %61 = phi i8* [ %59, %57 ], [ %42, %41 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %61) #14
  %62 = bitcast %"class.WTF::Vector.136"* %0 to i64*
  store atomic i64 %33, i64* %62 monotonic, align 8
  %63 = trunc i64 %32 to i32
  %64 = getelementptr inbounds %"class.WTF::Vector.136", %"class.WTF::Vector.136"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %63, i32* %64, align 8
  br label %65

65:                                               ; preds = %60, %26
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16InlinedStructPtrIN5blink5mojom5blink13ManifestErrorEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 67043328
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 67043328) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.127, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.128, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 5
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZN5blink5mojom5blink13ManifestErrorC1Ev(%"class.blink::mojom::blink::ManifestError"*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14swapIN5blink5mojom5blink13ManifestErrorEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.blink::mojom::blink::ManifestError"* dereferenceable(24), %"class.blink::mojom::blink::ManifestError"* dereferenceable(24)) local_unnamed_addr #6 comdat {
  %3 = alloca %"class.blink::mojom::blink::ManifestError", align 8
  %4 = bitcast %"class.blink::mojom::blink::ManifestError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #14
  %5 = getelementptr inbounds %"class.blink::mojom::blink::ManifestError", %"class.blink::mojom::blink::ManifestError"* %3, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::mojom::blink::ManifestError", %"class.blink::mojom::blink::ManifestError"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.blink::mojom::blink::ManifestError", %"class.blink::mojom::blink::ManifestError"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::mojom::blink::ManifestError", %"class.blink::mojom::blink::ManifestError"* %3, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %5, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #14
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #14
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %2, %11, %26
  %29 = getelementptr inbounds %"class.blink::mojom::blink::ManifestError", %"class.blink::mojom::blink::ManifestError"* %0, i64 0, i32 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %29, i64 12, i1 false) #14
  %30 = getelementptr inbounds %"class.blink::mojom::blink::ManifestError", %"class.blink::mojom::blink::ManifestError"* %1, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %50, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %50

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = zext i32 %40 to i33
  %42 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %41, i33 1) #14
  %43 = extractvalue { i33, i1 } %42, 1
  %44 = extractvalue { i33, i1 } %42, 0
  %45 = icmp slt i33 %44, 0
  %46 = or i1 %43, %45
  br i1 %46, label %47, label %48, !prof !2

47:                                               ; preds = %38
  tail call void @llvm.trap() #14
  unreachable

48:                                               ; preds = %38
  %49 = trunc i33 %44 to i32
  store i32 %49, i32* %39, align 4
  br label %50

50:                                               ; preds = %48, %33, %28
  %51 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %52 = bitcast %"class.blink::mojom::blink::ManifestError"* %0 to i64*
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  store i64 %51, i64* %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #14
  br label %68

68:                                               ; preds = %50, %64, %67
  %69 = getelementptr inbounds %"class.blink::mojom::blink::ManifestError", %"class.blink::mojom::blink::ManifestError"* %1, i64 0, i32 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %69, i64 12, i1 false) #14
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %89, label %72

72:                                               ; preds = %68
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %89

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i33
  %81 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %80, i33 1) #14
  %82 = extractvalue { i33, i1 } %81, 1
  %83 = extractvalue { i33, i1 } %81, 0
  %84 = icmp slt i33 %83, 0
  %85 = or i1 %82, %84
  br i1 %85, label %86, label %87, !prof !2

86:                                               ; preds = %77
  tail call void @llvm.trap() #14
  unreachable

87:                                               ; preds = %77
  %88 = trunc i33 %83 to i32
  store i32 %88, i32* %78, align 4
  br label %89

89:                                               ; preds = %87, %72, %68
  %90 = ptrtoint %"class.WTF::StringImpl"* %70 to i64
  %91 = bitcast %"class.blink::mojom::blink::ManifestError"* %1 to i64*
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  store i64 %90, i64* %91, align 8
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %107, label %94

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = and i32 %96, 2
  %98 = icmp eq i32 %97, 0
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %100 = load i32, i32* %99, align 4
  br i1 %98, label %101, label %103

101:                                              ; preds = %94
  %102 = add i32 %100, -1
  store i32 %102, i32* %99, align 4
  br label %103

103:                                              ; preds = %101, %94
  %104 = phi i32 [ %102, %101 ], [ %100, %94 ]
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %107

106:                                              ; preds = %103
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #14
  br label %107

107:                                              ; preds = %89, %103, %106
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %69, i8* align 8 %6, i64 12, i1 false) #14
  call void @_ZN5blink5mojom5blink13ManifestErrorD1Ev(%"class.blink::mojom::blink::ManifestError"* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #14
  ret void
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.276"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.276", %"class.WTF::StringTypeAdapter.276"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.276"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %4, i8* %14) #14
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.177"* %9) #14
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.177"* %9) #14
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #14
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.129, i64 0, i64 0), i8* %25, i8* %26) #14
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.130, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #14
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #14
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #14
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #14
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #14
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.131, i64 0, i64 0), i8* %41, i8* %42) #14
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.130, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #14
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #14
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #14
  ret i32 %17
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.177"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.276"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.276", %"class.WTF::StringTypeAdapter.276"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.276"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %4, i8* %14) #14
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.178"* %9) #14
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.178"* %9) #14
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #14
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.129, i64 0, i64 0), i8* %25, i8* %26) #14
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.130, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #14
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #14
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #14
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #14
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #14
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.131, i64 0, i64 0), i8* %41, i8* %42) #14
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.130, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #14
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #14
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #14
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.178"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.276"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #14
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.276", %"class.WTF::StringTypeAdapter.276"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.178", %"class.WTF::StringAppend.178"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.276"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %4, i8* %13) #14
  %14 = getelementptr inbounds %"class.WTF::StringAppend.178", %"class.WTF::StringAppend.178"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #14
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #14
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.129, i64 0, i64 0), i8* %30, i8* %31) #14
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.130, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #14
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #14
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #14
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #14
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #14
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.131, i64 0, i64 0), i8* %45, i8* %46) #14
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.130, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #14
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #14
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #14
  ret i32 %23
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.276"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.177"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.278", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.276"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.276"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %5, i8* %10) #14
  %11 = bitcast %"class.WTF::StringTypeAdapter.276"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.276", %"class.WTF::StringTypeAdapter.276"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #14
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %3, i8* %14) #14
  %15 = bitcast %"class.WTF::StringTypeAdapter.278"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.278", %"class.WTF::StringTypeAdapter.278"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.278", %"class.WTF::StringTypeAdapter.278"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #14
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.278"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.276"* nonnull %3, i8* %1) #14
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.278", %"class.WTF::StringTypeAdapter.278"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.279"* nonnull %34, i8* %37) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #14
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.178"* %6) #14
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.276"* nonnull %5, i8* %40) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.279"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.276"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.177"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.278", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.276"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #14
  %8 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.276"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %5, i8* %10) #14
  %11 = bitcast %"class.WTF::StringTypeAdapter.276"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.276", %"class.WTF::StringTypeAdapter.276"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #14
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %3, i8* %14) #14
  %15 = bitcast %"class.WTF::StringTypeAdapter.278"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #14
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.278", %"class.WTF::StringTypeAdapter.278"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.278", %"class.WTF::StringTypeAdapter.278"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #14
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.278"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.276"* nonnull %3, i16* %1) #14
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.278", %"class.WTF::StringTypeAdapter.278"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.279"* nonnull %34, i16* %37) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #14
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.178"* %6) #14
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.276"* nonnull %5, i16* %40) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #14
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.279"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.185"*, %"class.WTF::StringAppend.177"* byval(%"class.WTF::StringAppend.177") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.177"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.185"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #14
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #14
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.177", %"class.WTF::StringAppend.177"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #14
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %43
  tail call void @llvm.trap() #14
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #14
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #14
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.184"*, %"class.WTF::StringAppend.185"* byval(%"class.WTF::StringAppend.185") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.185"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.184"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #14
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #14
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #14
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  tail call void @llvm.trap() #14
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %0, i64 0, i32 1
  store i8* %2, i8** %56, align 8
  br label %70

57:                                               ; preds = %38, %53
  %58 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #14
  br label %70

70:                                               ; preds = %55, %69, %66
  br i1 %10, label %84, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #14
  br label %84

84:                                               ; preds = %70, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.184"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.276"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.276", %"class.WTF::StringTypeAdapter.276"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.276"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %4, i8* %14) #14
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.185"* %9) #14
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.185"* %9) #14
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #14
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.129, i64 0, i64 0), i8* %25, i8* %26) #14
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.130, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #14
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #14
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #14
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #14
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #14
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.131, i64 0, i64 0), i8* %41, i8* %42) #14
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.130, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #14
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #14
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #14
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.184"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.278", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.276"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.276"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %4, i8* %9) #14
  %10 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.278"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.278", %"class.WTF::StringTypeAdapter.278"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.278", %"class.WTF::StringTypeAdapter.278"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #14
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.278"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.177"* %10, i8* %1) #14
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.278", %"class.WTF::StringTypeAdapter.278"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.177"* %10) #14
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.279"* nonnull %30, i8* %33) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #14
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.185"* %5) #14
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.276"* nonnull %4, i8* %36) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.184"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.278", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.276"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.276"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %4, i8* %9) #14
  %10 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.278"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #14
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.278", %"class.WTF::StringTypeAdapter.278"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.278", %"class.WTF::StringTypeAdapter.278"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #14
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.278"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.177"* %10, i16* %1) #14
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.278", %"class.WTF::StringTypeAdapter.278"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.177"* %10) #14
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.279"* nonnull %30, i16* %33) #14
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #14
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.185"* %5) #14
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.276"* nonnull %4, i16* %36) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.185"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.185", %"class.WTF::StringAppend.185"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.177"* %8) #14
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #14
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.177"* %8) #14
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #14
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.129, i64 0, i64 0), i8* %26, i8* %27) #14
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.130, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #14
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #14
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #14
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #14
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #14
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.131, i64 0, i64 0), i8* %41, i8* %42) #14
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.130, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #14
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #14
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #14
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EC2ES7_S2_(%"class.WTF::StringAppend.186"*, %"class.WTF::StringAppend.184"* byval(%"class.WTF::StringAppend.184") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.184"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.186"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.186", %"class.WTF::StringAppend.186"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #14
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #14
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.186", %"class.WTF::StringAppend.186"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %1, i64 0, i32 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.186", %"class.WTF::StringAppend.186"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %62

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #14
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  tail call void @llvm.trap() #14
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %62

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend.186", %"class.WTF::StringAppend.186"* %0, i64 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %1, i64 0, i32 1
  %58 = bitcast i8** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast i8** %56 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringAppend.186", %"class.WTF::StringAppend.186"* %0, i64 0, i32 1
  store i8* %2, i8** %61, align 8
  br label %80

62:                                               ; preds = %38, %53
  %63 = getelementptr inbounds %"class.WTF::StringAppend.186", %"class.WTF::StringAppend.186"* %0, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.WTF::StringAppend.184", %"class.WTF::StringAppend.184"* %1, i64 0, i32 1
  %65 = bitcast i8** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast i8** %63 to i64*
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"class.WTF::StringAppend.186", %"class.WTF::StringAppend.186"* %0, i64 0, i32 1
  store i8* %2, i8** %68, align 8
  %69 = load atomic i32, i32* %39 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %62
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %62
  %77 = phi i32 [ %75, %74 ], [ %73, %62 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #14
  br label %80

80:                                               ; preds = %55, %79, %76
  br i1 %10, label %94, label %81

81:                                               ; preds = %80
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #14
  br label %94

94:                                               ; preds = %80, %90, %93
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_E6lengthEv(%"class.WTF::StringAppend.186"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.276", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.186", %"class.WTF::StringAppend.186"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.276"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #14
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.276", %"class.WTF::StringTypeAdapter.276"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.186", %"class.WTF::StringAppend.186"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.276"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.276"* nonnull %4, i8* %14) #14
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.184"* %9) #14
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #14
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.184"* %9) #14
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #14
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.129, i64 0, i64 0), i8* %25, i8* %26) #14
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.130, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #14
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #14
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #14
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #14
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #14
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.131, i64 0, i64 0), i8* %41, i8* %42) #14
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.130, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #14
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #14
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #14
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #14
  ret i32 %17
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink5mojom11DisplayModeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector"*, i32* dereferenceable(4)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5mojom11DisplayModeEEEmm(i64 %26) #14
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5mojom11DisplayModeEEEPKcv, i64 0, i64 0)) #14
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #14
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #14
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5mojom11DisplayModeEEEmm(i64 %71) #14
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5mojom11DisplayModeEEEPKcv, i64 0, i64 0)) #14
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #14
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #14
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5mojom11DisplayModeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.127, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.128, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN3gfx4SizeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS2_EEvOT_(%"class.WTF::Vector.12"*, %"class.gfx::Size"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.gfx::Size"*, %"class.gfx::Size"** %6, align 8
  %8 = icmp ugt %"class.gfx::Size"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %7, i64 %10
  %12 = icmp ugt %"class.gfx::Size"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.gfx::Size"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN3gfx4SizeEEEmm(i64 %26) #14
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN3gfx4SizeEEEPKcv, i64 0, i64 0)) #14
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.12"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.gfx::Size"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.gfx::Size"*, %"class.gfx::Size"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.gfx::Size"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.gfx::Size"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #14
  %47 = bitcast %"class.WTF::Vector.12"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #14
  %51 = bitcast %"class.WTF::Vector.12"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.gfx::Size"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.gfx::Size"* %1 to i64
  %56 = ptrtoint %"class.gfx::Size"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.12", %"class.WTF::Vector.12"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.gfx::Size"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN3gfx4SizeEEEmm(i64 %71) #14
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([57 x i8], [57 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN3gfx4SizeEEEPKcv, i64 0, i64 0)) #14
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.12"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.gfx::Size"*, %"class.gfx::Size"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.gfx::Size"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.gfx::Size"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #14
  %87 = bitcast %"class.WTF::Vector.12"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #14
  %91 = bitcast %"class.WTF::Vector.12"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.gfx::Size"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.gfx::Size"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.gfx::Size"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.gfx::Size"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %100, i64 %103
  %105 = bitcast %"class.gfx::Size"* %101 to i64*
  %106 = bitcast %"class.gfx::Size"* %104 to i64*
  %107 = load i64, i64* %105, align 4
  store i64 %107, i64* %106, align 4
  %108 = load i32, i32* %3, align 4
  %109 = add i32 %108, 1
  store i32 %109, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN3gfx4SizeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.127, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.128, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink5mojom29ManifestImageResource_PurposeELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.17"*, i32* dereferenceable(4)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp ugt i32* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds i32, i32* %7, i64 %10
  %12 = icmp ugt i32* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq i32* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5mojom29ManifestImageResource_PurposeEEEmm(i64 %26) #14
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5mojom29ManifestImageResource_PurposeEEEPKcv, i64 0, i64 0)) #14
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 2
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to i32*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 2
  %37 = ptrtoint i8* %28 to i64
  %38 = load i32*, i32** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne i32* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast i32* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %42, i64 %46, i1 false) #14
  %47 = bitcast %"class.WTF::Vector.17"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #14
  %51 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to i32*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint i32* %1 to i64
  %56 = ptrtoint i32* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 2
  %59 = getelementptr inbounds %"class.WTF::Vector.17", %"class.WTF::Vector.17"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq i32* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5mojom29ManifestImageResource_PurposeEEEmm(i64 %71) #14
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink5mojom29ManifestImageResource_PurposeEEEPKcv, i64 0, i64 0)) #14
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load i32*, i32** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne i32* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast i32* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %73, i8* nonnull align 4 %82, i64 %86, i1 false) #14
  %87 = bitcast %"class.WTF::Vector.17"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #14
  %91 = bitcast %"class.WTF::Vector.17"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 2
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to i32*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi i32* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds i32, i32* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi i32* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi i32* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %100, i64 %103
  %105 = load i32, i32* %101, align 4
  store i32 %105, i32* %104, align 4
  %106 = load i32, i32* %3, align 4
  %107 = add i32 %106, 1
  store i32 %107, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink5mojom29ManifestImageResource_PurposeEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.127, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.128, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

; Function Attrs: noreturn
declare void @_ZN4absl17optional_internal25throw_bad_optional_accessEv() local_unnamed_addr #13

declare void @_ZN5blink5mojom5blink21ManifestImageResourceC1Ev(%"class.blink::mojom::blink::ManifestImageResource"*) unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.5"*, %"class.mojo::StructPtr.8"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.8"*, %"class.mojo::StructPtr.8"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.8"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.8"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.8"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEEEEmm(i64 %27) #14
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEEEEPKcv, i64 0, i64 0)) #14
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.8"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.5"* %0, i32 %22) #14
  %36 = load %"class.mojo::StructPtr.8"*, %"class.mojo::StructPtr.8"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.8"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.8"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !3

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.8"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEEEEmm(i64 %55) #14
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEEEEPKcv, i64 0, i64 0)) #14
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.8"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.5"* %0, i32 %50) #14
  %64 = load %"class.mojo::StructPtr.8"*, %"class.mojo::StructPtr.8"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.8"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.8"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.8"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.8"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.8"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.5"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.8"*, %"class.mojo::StructPtr.8"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.8"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.8"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.8"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.8"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.8"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !125

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.8"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.8"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.8"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.8"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.8"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.8"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.8"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.8"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.8"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.8"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.8"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.8"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.8"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #14
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEEEEmm(i64 %73) #14
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([107 x i8], [107 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEEEEPKcv, i64 0, i64 0)) #14
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.8"*, %"class.mojo::StructPtr.8"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.8"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.8"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.8"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.8"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.8"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.8"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !127

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.8"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.8"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.8"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.8"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.8"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.8"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.8"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.8"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.8"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.8"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.8"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.8"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestImageResource"* null, %"class.blink::mojom::blink::ManifestImageResource"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.8", %"class.mojo::StructPtr.8"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.8"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.5"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #14
  %149 = bitcast %"class.WTF::Vector.5"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.5", %"class.WTF::Vector.5"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink21ManifestImageResourceEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.127, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.128, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

declare void @_ZN5blink5mojom5blink20ManifestShortcutItemC1Ev(%"class.blink::mojom::blink::ManifestShortcutItem"*) unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink20ManifestShortcutItemEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.27"*, %"class.mojo::StructPtr.30"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.30"*, %"class.mojo::StructPtr.30"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.30"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.30"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.30"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink20ManifestShortcutItemEEEEEmm(i64 %27) #14
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink20ManifestShortcutItemEEEEEPKcv, i64 0, i64 0)) #14
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.27"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.30"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink20ManifestShortcutItemEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.27"* %0, i32 %22) #14
  %36 = load %"class.mojo::StructPtr.30"*, %"class.mojo::StructPtr.30"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.30"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.30"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !3

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.30"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink20ManifestShortcutItemEEEEEmm(i64 %55) #14
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink20ManifestShortcutItemEEEEEPKcv, i64 0, i64 0)) #14
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.27"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.30"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink20ManifestShortcutItemEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.27"* %0, i32 %50) #14
  %64 = load %"class.mojo::StructPtr.30"*, %"class.mojo::StructPtr.30"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.30"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.30"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.30"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.30"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestShortcutItem"* null, %"class.blink::mojom::blink::ManifestShortcutItem"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.30"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink20ManifestShortcutItemEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.27"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.30"*, %"class.mojo::StructPtr.30"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.30"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.27"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.30"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.30"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.30"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestShortcutItem"* null, %"class.blink::mojom::blink::ManifestShortcutItem"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.30"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestShortcutItem"* null, %"class.blink::mojom::blink::ManifestShortcutItem"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !128

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.30"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.30"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.30"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.30"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.30"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestShortcutItem"* null, %"class.blink::mojom::blink::ManifestShortcutItem"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.30"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestShortcutItem"* null, %"class.blink::mojom::blink::ManifestShortcutItem"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.30"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestShortcutItem"* null, %"class.blink::mojom::blink::ManifestShortcutItem"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.30"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestShortcutItem"* null, %"class.blink::mojom::blink::ManifestShortcutItem"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.30"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestShortcutItem"* null, %"class.blink::mojom::blink::ManifestShortcutItem"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.30"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestShortcutItem"* null, %"class.blink::mojom::blink::ManifestShortcutItem"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.30"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestShortcutItem"* null, %"class.blink::mojom::blink::ManifestShortcutItem"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.30"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestShortcutItem"* null, %"class.blink::mojom::blink::ManifestShortcutItem"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.30"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #14
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink20ManifestShortcutItemEEEEEmm(i64 %73) #14
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink20ManifestShortcutItemEEEEEPKcv, i64 0, i64 0)) #14
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.30"*, %"class.mojo::StructPtr.30"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.30"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.30"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.30"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.30"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.30"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestShortcutItem"* null, %"class.blink::mojom::blink::ManifestShortcutItem"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.30"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestShortcutItem"* null, %"class.blink::mojom::blink::ManifestShortcutItem"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !129

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.30"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.30"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.30"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.30"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.30"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestShortcutItem"* null, %"class.blink::mojom::blink::ManifestShortcutItem"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.30"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestShortcutItem"* null, %"class.blink::mojom::blink::ManifestShortcutItem"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.30"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestShortcutItem"* null, %"class.blink::mojom::blink::ManifestShortcutItem"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.30"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestShortcutItem"* null, %"class.blink::mojom::blink::ManifestShortcutItem"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.30"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestShortcutItem"* null, %"class.blink::mojom::blink::ManifestShortcutItem"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.30"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestShortcutItem"* null, %"class.blink::mojom::blink::ManifestShortcutItem"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.30"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestShortcutItem"* null, %"class.blink::mojom::blink::ManifestShortcutItem"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.30"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestShortcutItem"* null, %"class.blink::mojom::blink::ManifestShortcutItem"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.30", %"class.mojo::StructPtr.30"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.30"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.27"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #14
  %149 = bitcast %"class.WTF::Vector.27"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.27", %"class.WTF::Vector.27"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink20ManifestShortcutItemEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.127, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.128, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS1_EEvOT_(%"class.WTF::Vector.54"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %8 = icmp ugt %"class.WTF::String"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 %10
  %12 = icmp ugt %"class.WTF::String"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.WTF::String"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %26) #14
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #14
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.54"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 3
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"class.WTF::String"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"class.WTF::String"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !3

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #14
  %47 = bitcast %"class.WTF::Vector.54"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #14
  %51 = bitcast %"class.WTF::Vector.54"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"class.WTF::String"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"class.WTF::String"* %1 to i64
  %56 = ptrtoint %"class.WTF::String"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 3
  %59 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !3

69:                                               ; preds = %54
  %70 = icmp eq %"class.WTF::String"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64 %71) #14
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #14
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector.54"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"class.WTF::String"*, %"class.WTF::String"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"class.WTF::String"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"class.WTF::String"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !3

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #14
  %87 = bitcast %"class.WTF::Vector.54"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #14
  %91 = bitcast %"class.WTF::Vector.54"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 3
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"class.WTF::String"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"class.WTF::String"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"class.WTF::String"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"class.WTF::String"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %101, i64 0, i32 0, i32 0
  %105 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %104, align 8
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %100, i64 %103, i32 0, i32 0
  store %"class.WTF::StringImpl"* %105, %"class.WTF::StringImpl"** %106, align 8
  %107 = icmp eq %"class.WTF::StringImpl"* %105, null
  br i1 %107, label %125, label %108

108:                                              ; preds = %99
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %125

113:                                              ; preds = %108
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %105, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = zext i32 %115 to i33
  %117 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %116, i33 1) #14
  %118 = extractvalue { i33, i1 } %117, 1
  %119 = extractvalue { i33, i1 } %117, 0
  %120 = icmp slt i33 %119, 0
  %121 = or i1 %118, %120
  br i1 %121, label %122, label %123, !prof !2

122:                                              ; preds = %113
  tail call void @llvm.trap() #14
  unreachable

123:                                              ; preds = %113
  %124 = trunc i33 %119 to i32
  store i32 %124, i32* %114, align 4
  br label %125

125:                                              ; preds = %99, %108, %123
  %126 = load i32, i32* %3, align 4
  %127 = add i32 %126, 1
  store i32 %127, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINS_6StringEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.127, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.128, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

declare void @_ZN5blink5mojom5blink18ManifestFileFilterC1Ev(%"class.blink::mojom::blink::ManifestFileFilter"*) unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink18ManifestFileFilterEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.47"*, %"class.mojo::StructPtr.50"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.47", %"class.WTF::Vector.47"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.47", %"class.WTF::Vector.47"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.50"*, %"class.mojo::StructPtr.50"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.50"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.50"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.47", %"class.WTF::Vector.47"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.50"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink18ManifestFileFilterEEEEEmm(i64 %27) #14
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink18ManifestFileFilterEEEEEPKcv, i64 0, i64 0)) #14
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.47"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.50"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink18ManifestFileFilterEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.47"* %0, i32 %22) #14
  %36 = load %"class.mojo::StructPtr.50"*, %"class.mojo::StructPtr.50"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.50"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.50"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.47", %"class.WTF::Vector.47"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !3

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.50"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink18ManifestFileFilterEEEEEmm(i64 %55) #14
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink18ManifestFileFilterEEEEEPKcv, i64 0, i64 0)) #14
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.47"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.50"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink18ManifestFileFilterEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.47"* %0, i32 %50) #14
  %64 = load %"class.mojo::StructPtr.50"*, %"class.mojo::StructPtr.50"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.50"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.50"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.50"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.50"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.50"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink18ManifestFileFilterEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.47"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.47", %"class.WTF::Vector.47"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.50"*, %"class.mojo::StructPtr.50"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.50"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.47", %"class.WTF::Vector.47"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.47"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.47", %"class.WTF::Vector.47"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.50"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.50"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.50"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.50"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !130

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.50"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.50"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.50"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.50"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.50"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.50"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.50"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.50"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.50"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.50"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.50"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.50"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.50"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #14
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink18ManifestFileFilterEEEEEmm(i64 %73) #14
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink18ManifestFileFilterEEEEEPKcv, i64 0, i64 0)) #14
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.47", %"class.WTF::Vector.47"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.50"*, %"class.mojo::StructPtr.50"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.47", %"class.WTF::Vector.47"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.50"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.50"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.50"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.50"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.50"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.50"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !131

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.50"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.50"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.50"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.50"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.50"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.50"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.50"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.50"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.50"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.50"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.50"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.50"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileFilter"* null, %"class.blink::mojom::blink::ManifestFileFilter"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.50", %"class.mojo::StructPtr.50"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.50"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.47"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #14
  %149 = bitcast %"class.WTF::Vector.47"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.47", %"class.WTF::Vector.47"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink18ManifestFileFilterEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.127, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.128, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

declare void @_ZN5blink5mojom5blink25ManifestShareTargetParamsC1Ev(%"class.blink::mojom::blink::ManifestShareTargetParams"*) unnamed_addr #1

declare void @_ZN5blink5mojom5blink19ManifestShareTargetC1Ev(%"class.blink::mojom::blink::ManifestShareTarget"*) unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink19ManifestFileHandlerEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.70"*, %"class.mojo::StructPtr.73"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.70", %"class.WTF::Vector.70"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.70", %"class.WTF::Vector.70"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.73"*, %"class.mojo::StructPtr.73"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.73"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.73"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.70", %"class.WTF::Vector.70"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.73"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink19ManifestFileHandlerEEEEEmm(i64 %27) #14
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink19ManifestFileHandlerEEEEEPKcv, i64 0, i64 0)) #14
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.70"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.73"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink19ManifestFileHandlerEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.70"* %0, i32 %22) #14
  %36 = load %"class.mojo::StructPtr.73"*, %"class.mojo::StructPtr.73"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.73"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.73"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.70", %"class.WTF::Vector.70"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !3

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.73"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink19ManifestFileHandlerEEEEEmm(i64 %55) #14
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink19ManifestFileHandlerEEEEEPKcv, i64 0, i64 0)) #14
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.70"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.73"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink19ManifestFileHandlerEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.70"* %0, i32 %50) #14
  %64 = load %"class.mojo::StructPtr.73"*, %"class.mojo::StructPtr.73"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.73"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.73"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.73"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.73"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileHandler"* null, %"class.blink::mojom::blink::ManifestFileHandler"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.73"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink19ManifestFileHandlerEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.70"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.70", %"class.WTF::Vector.70"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.73"*, %"class.mojo::StructPtr.73"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.73"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.70", %"class.WTF::Vector.70"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.70"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.70", %"class.WTF::Vector.70"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.73"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.73"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.73"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileHandler"* null, %"class.blink::mojom::blink::ManifestFileHandler"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.73"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileHandler"* null, %"class.blink::mojom::blink::ManifestFileHandler"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !132

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.73"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.73"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.73"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.73"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.73"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileHandler"* null, %"class.blink::mojom::blink::ManifestFileHandler"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.73"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileHandler"* null, %"class.blink::mojom::blink::ManifestFileHandler"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.73"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileHandler"* null, %"class.blink::mojom::blink::ManifestFileHandler"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.73"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileHandler"* null, %"class.blink::mojom::blink::ManifestFileHandler"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.73"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileHandler"* null, %"class.blink::mojom::blink::ManifestFileHandler"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.73"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileHandler"* null, %"class.blink::mojom::blink::ManifestFileHandler"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.73"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileHandler"* null, %"class.blink::mojom::blink::ManifestFileHandler"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.73"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileHandler"* null, %"class.blink::mojom::blink::ManifestFileHandler"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.73"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #14
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink19ManifestFileHandlerEEEEEmm(i64 %73) #14
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([105 x i8], [105 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink19ManifestFileHandlerEEEEEPKcv, i64 0, i64 0)) #14
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.70", %"class.WTF::Vector.70"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.73"*, %"class.mojo::StructPtr.73"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.70", %"class.WTF::Vector.70"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.73"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.73"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.73"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.73"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.73"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileHandler"* null, %"class.blink::mojom::blink::ManifestFileHandler"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.73"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileHandler"* null, %"class.blink::mojom::blink::ManifestFileHandler"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !133

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.73"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.73"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.73"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.73"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.73"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileHandler"* null, %"class.blink::mojom::blink::ManifestFileHandler"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.73"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileHandler"* null, %"class.blink::mojom::blink::ManifestFileHandler"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.73"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileHandler"* null, %"class.blink::mojom::blink::ManifestFileHandler"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.73"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileHandler"* null, %"class.blink::mojom::blink::ManifestFileHandler"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.73"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileHandler"* null, %"class.blink::mojom::blink::ManifestFileHandler"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.73"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileHandler"* null, %"class.blink::mojom::blink::ManifestFileHandler"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.73"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileHandler"* null, %"class.blink::mojom::blink::ManifestFileHandler"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.73"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestFileHandler"* null, %"class.blink::mojom::blink::ManifestFileHandler"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.73", %"class.mojo::StructPtr.73"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.73"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.70"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #14
  %149 = bitcast %"class.WTF::Vector.70"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.70", %"class.WTF::Vector.70"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink19ManifestFileHandlerEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.127, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.128, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

declare void @_ZN5blink5mojom5blink19ManifestFileHandlerC1Ev(%"class.blink::mojom::blink::ManifestFileHandler"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorIS1_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E6insertINS_17HashMapTranslatorISD_S8_S4_EERS1_S5_EENS_18HashTableAddResultISE_S6_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::Vector.54"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorIS1_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* null)
  %9 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #14
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %82, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #14
  br i1 %57, label %147, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair"* %59, null
  br i1 %69, label %82, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 1
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 1, i32 0, i32 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %59, i64 0, i32 1, i32 0, i32 0, i32 2
  %74 = bitcast %"class.WTF::Vector.54"* %71 to i64*
  %75 = bitcast %"struct.WTF::KeyValuePair"* %59 to i64*
  store i64 0, i64* %75, align 8
  store atomic i64 0, i64* %74 monotonic, align 8
  store i32 0, i32* %72, align 4
  store i32 0, i32* %73, align 4
  %76 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %77 = load i32, i32* %76, align 8
  %78 = add i32 %77, 2147483647
  %79 = and i32 %78, 2147483647
  %80 = and i32 %77, -2147483648
  %81 = or i32 %79, %80
  store i32 %81, i32* %76, align 8
  br label %82

82:                                               ; preds = %24, %68, %70
  %83 = phi %"struct.WTF::KeyValuePair"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %103, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %103

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i33
  %95 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %94, i33 1) #14
  %96 = extractvalue { i33, i1 } %95, 1
  %97 = extractvalue { i33, i1 } %95, 0
  %98 = icmp slt i33 %97, 0
  %99 = or i1 %96, %98
  br i1 %99, label %100, label %101, !prof !2

100:                                              ; preds = %91
  tail call void @llvm.trap() #14
  unreachable

101:                                              ; preds = %91
  %102 = trunc i33 %97 to i32
  store i32 %102, i32* %92, align 4
  br label %103

103:                                              ; preds = %101, %86, %82
  %104 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %105 = bitcast %"struct.WTF::KeyValuePair"* %83 to i64*
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %83, i64 0, i32 0, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  store i64 %104, i64* %105, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #14
  br label %122

122:                                              ; preds = %103, %118, %121
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %83, i64 0, i32 1
  %124 = bitcast %"class.WTF::Vector.54"* %2 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.WTF::Vector.54"* %123 to i64*
  %127 = load i64, i64* %126, align 8
  store atomic i64 %127, i64* %124 monotonic, align 8
  store atomic i64 %125, i64* %126 monotonic, align 8
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %83, i64 0, i32 1, i32 0, i32 0, i32 1
  %129 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %2, i64 0, i32 0, i32 0, i32 1
  %130 = load i32, i32* %128, align 4
  %131 = load i32, i32* %129, align 4
  store i32 %131, i32* %128, align 4
  store i32 %130, i32* %129, align 4
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %83, i64 0, i32 1, i32 0, i32 0, i32 2
  %133 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %2, i64 0, i32 0, i32 0, i32 2
  %134 = load i32, i32* %132, align 4
  %135 = load i32, i32* %133, align 4
  store i32 %135, i32* %132, align 4
  store i32 %134, i32* %133, align 4
  %136 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %137 = load i32, i32* %136, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %136, align 4
  %139 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %140 = load i32, i32* %139, align 8
  %141 = add i32 %140, %138
  %142 = shl i32 %141, 1
  %143 = load i32, i32* %12, align 8
  %144 = icmp ult i32 %142, %143
  br i1 %144, label %147, label %145

145:                                              ; preds = %122
  %146 = tail call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorIS1_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E6ExpandEPS6_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %83)
  br label %147

147:                                              ; preds = %54, %122, %145
  %148 = phi i8 [ 1, %122 ], [ 1, %145 ], [ 0, %54 ]
  %149 = phi %"struct.WTF::KeyValuePair"* [ %83, %122 ], [ %146, %145 ], [ %47, %54 ]
  %150 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %149, 0
  %151 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %150, i8 %148, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %151
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorIS1_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E6ExpandEPS6_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #14
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #14
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.134, i64 0, i64 0), i8* %22, i8* %23) #14
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.135, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #14
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #14
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #14
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([133 x i8], [133 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringENS_6VectorIS2_Lj0ENS_18PartitionAllocatorEEEEEEEPKcv, i64 0, i64 0)) #14
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %72, label %38

38:                                               ; preds = %31
  %39 = and i64 %33, 1
  %40 = icmp eq i32 %32, 1
  br i1 %40, label %62, label %41

41:                                               ; preds = %38
  %42 = sub nsw i64 %33, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %59, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %60, %43 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %44
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %44, i32 1
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %44, i32 1, i32 0, i32 0, i32 1
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %44, i32 1, i32 0, i32 0, i32 2
  %50 = bitcast %"class.WTF::Vector.54"* %47 to i64*
  %51 = bitcast %"struct.WTF::KeyValuePair"* %46 to i64*
  store i64 0, i64* %51, align 8
  store atomic i64 0, i64* %50 monotonic, align 8
  store i32 0, i32* %48, align 4
  store i32 0, i32* %49, align 4
  %52 = or i64 %44, 1
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %52
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %52, i32 1
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %52, i32 1, i32 0, i32 0, i32 1
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %52, i32 1, i32 0, i32 0, i32 2
  %57 = bitcast %"class.WTF::Vector.54"* %54 to i64*
  %58 = bitcast %"struct.WTF::KeyValuePair"* %53 to i64*
  store i64 0, i64* %58, align 8
  store atomic i64 0, i64* %57 monotonic, align 8
  store i32 0, i32* %55, align 4
  store i32 0, i32* %56, align 4
  %59 = add nuw nsw i64 %44, 2
  %60 = add i64 %45, -2
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %43

62:                                               ; preds = %43, %38
  %63 = phi i64 [ 0, %38 ], [ %59, %43 ]
  %64 = icmp eq i64 %39, 0
  br i1 %64, label %72, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %63
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %63, i32 1
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %63, i32 1, i32 0, i32 0, i32 1
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 %63, i32 1, i32 0, i32 0, i32 2
  %70 = bitcast %"class.WTF::Vector.54"* %67 to i64*
  %71 = bitcast %"struct.WTF::KeyValuePair"* %66 to i64*
  store i64 0, i64* %71, align 8
  store atomic i64 0, i64* %70 monotonic, align 8
  store i32 0, i32* %68, align 4
  store i32 0, i32* %69, align 4
  br label %72

72:                                               ; preds = %65, %62, %31
  %73 = call %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorIS1_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E8RehashToEPS6_jSF_(%"class.WTF::HashTable"* %0, %"struct.WTF::KeyValuePair"* %36, i32 %32, %"struct.WTF::KeyValuePair"* %1) #14
  ret %"struct.WTF::KeyValuePair"* %73
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorIS1_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E8RehashToEPS6_jSF_(%"class.WTF::HashTable"*, %"struct.WTF::KeyValuePair"*, i32, %"struct.WTF::KeyValuePair"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable", align 8
  %6 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #14
  %7 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair"* %1, %"struct.WTF::KeyValuePair"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair"* %22 to i64
  br label %114

24:                                               ; preds = %134
  %25 = bitcast %"class.WTF::HashTable"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %135, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair"* [ null, %16 ], [ %138, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %136, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %110, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %108, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %105, %39
  %42 = phi i64 [ 0, %39 ], [ %106, %105 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, inttoptr (i64 -1 to i8*)
  br i1 %46, label %105, label %47

47:                                               ; preds = %41
  %48 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 1
  %50 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %49, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::String"*, %"class.WTF::String"** %50, align 8
  %52 = icmp eq %"class.WTF::String"* %51, null
  br i1 %52, label %89, label %53, !prof !3

53:                                               ; preds = %47
  %54 = bitcast %"class.WTF::String"* %51 to i8*
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %35, i64 %42, i32 1, i32 0, i32 0, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %85, label %58, !prof !2

58:                                               ; preds = %53
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %51, i64 %59
  br label %61

61:                                               ; preds = %79, %58
  %62 = phi %"class.WTF::String"* [ %80, %79 ], [ %51, %58 ]
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %61
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #14
  br label %79

79:                                               ; preds = %78, %75, %61
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %62, i64 1
  %81 = icmp eq %"class.WTF::String"* %80, %60
  br i1 %81, label %82, label %61

82:                                               ; preds = %79
  store i32 0, i32* %55, align 4
  %83 = bitcast %"class.WTF::Vector.54"* %49 to i8**
  %84 = load i8*, i8** %83, align 8
  br label %85

85:                                               ; preds = %82, %53
  %86 = phi i8* [ %84, %82 ], [ %54, %53 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %86) #14
  store %"class.WTF::String"* null, %"class.WTF::String"** %50, align 8
  %87 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %43, i64 0, i32 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  br label %89

89:                                               ; preds = %85, %47
  %90 = phi %"class.WTF::StringImpl"* [ %88, %85 ], [ %48, %47 ]
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %89
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #14
  br label %105

105:                                              ; preds = %104, %101, %89, %41
  %106 = add nuw nsw i64 %42, 1
  %107 = icmp eq i64 %106, %40
  br i1 %107, label %108, label %41

108:                                              ; preds = %105, %37
  %109 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %109) #14
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %110

110:                                              ; preds = %28, %108
  %111 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %112 = load i32, i32* %111, align 8
  %113 = and i32 %112, -2147483648
  store i32 %113, i32* %111, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #14
  ret %"struct.WTF::KeyValuePair"* %33

114:                                              ; preds = %21, %134
  %115 = phi i64 [ %135, %134 ], [ %23, %21 ]
  %116 = phi i32 [ %136, %134 ], [ %13, %21 ]
  %117 = phi %"struct.WTF::KeyValuePair"* [ %137, %134 ], [ %22, %21 ]
  %118 = phi %"struct.WTF::KeyValuePair"* [ %138, %134 ], [ null, %21 ]
  %119 = phi i32 [ %139, %134 ], [ 0, %21 ]
  %120 = zext i32 %119 to i64
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %117, i64 %120
  %122 = bitcast %"struct.WTF::KeyValuePair"* %121 to i64*
  %123 = load i64, i64* %122, align 8
  switch i64 %123, label %124 [
    i64 -1, label %134
    i64 0, label %134
  ]

124:                                              ; preds = %114
  %125 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %121, i64 0, i32 0
  %126 = call { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorIS1_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E16LookupForWritingERKS1_(%"class.WTF::HashTable"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %125) #14
  %127 = extractvalue { %"struct.WTF::KeyValuePair"*, i8 } %126, 0
  call void @_ZN3WTF5MoverINS_12KeyValuePairINS_6StringENS_6VectorIS2_Lj0ENS_18PartitionAllocatorEEEEES4_NS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IS5_EEEELb1EE4MoveEOS6_RS6_(%"struct.WTF::KeyValuePair"* dereferenceable(24) %121, %"struct.WTF::KeyValuePair"* dereferenceable(24) %127) #14
  %128 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %15, align 8
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %128, i64 %120
  %130 = icmp eq %"struct.WTF::KeyValuePair"* %129, %3
  %131 = select i1 %130, %"struct.WTF::KeyValuePair"* %127, %"struct.WTF::KeyValuePair"* %118
  %132 = load i32, i32* %12, align 8
  %133 = ptrtoint %"struct.WTF::KeyValuePair"* %128 to i64
  br label %134

134:                                              ; preds = %114, %114, %124
  %135 = phi i64 [ %115, %114 ], [ %133, %124 ], [ %115, %114 ]
  %136 = phi i32 [ %116, %114 ], [ %132, %124 ], [ %116, %114 ]
  %137 = phi %"struct.WTF::KeyValuePair"* [ %117, %114 ], [ %128, %124 ], [ %117, %114 ]
  %138 = phi %"struct.WTF::KeyValuePair"* [ %118, %114 ], [ %131, %124 ], [ %118, %114 ]
  %139 = add i32 %119, 1
  %140 = icmp eq i32 %139, %136
  br i1 %140, label %24, label %114
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_6VectorIS1_Lj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSA_IS5_EEEESB_S4_E16LookupForWritingERKS1_(%"class.WTF::HashTable"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #14
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #14
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } undef, %"struct.WTF::KeyValuePair"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair"*, i8 } %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverINS_12KeyValuePairINS_6StringENS_6VectorIS2_Lj0ENS_18PartitionAllocatorEEEEES4_NS_18HashMapValueTraitsINS_10HashTraitsIS2_EENS8_IS5_EEEELb1EE4MoveEOS6_RS6_(%"struct.WTF::KeyValuePair"* dereferenceable(24), %"struct.WTF::KeyValuePair"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"class.WTF::Vector.54", %"class.WTF::Vector.54"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %41, label %7, !prof !3

7:                                                ; preds = %2
  %8 = bitcast %"class.WTF::String"* %5 to i8*
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %39, label %12, !prof !2

12:                                               ; preds = %7
  %13 = zext i32 %10 to i64
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 %13
  br label %15

15:                                               ; preds = %33, %12
  %16 = phi %"class.WTF::String"* [ %34, %33 ], [ %5, %12 ]
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  br i1 %19, label %33, label %20

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 2
  %24 = icmp eq i32 %23, 0
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  br i1 %24, label %27, label %29

27:                                               ; preds = %20
  %28 = add i32 %26, -1
  store i32 %28, i32* %25, align 4
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi i32 [ %28, %27 ], [ %26, %20 ]
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %18) #14
  br label %33

33:                                               ; preds = %32, %29, %15
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 1
  %35 = icmp eq %"class.WTF::String"* %34, %14
  br i1 %35, label %36, label %15

36:                                               ; preds = %33
  store i32 0, i32* %9, align 4
  %37 = bitcast %"class.WTF::Vector.54"* %3 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %7
  %40 = phi i8* [ %38, %36 ], [ %8, %7 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #14
  store %"class.WTF::String"* null, %"class.WTF::String"** %4, align 8
  br label %41

41:                                               ; preds = %39, %2
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #14
  br label %58

58:                                               ; preds = %41, %54, %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 0, i32 0, i32 0
  %60 = bitcast %"struct.WTF::KeyValuePair"* %0 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = bitcast %"struct.WTF::KeyValuePair"* %1 to i64*
  store i64 %61, i64* %62, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %59, align 8
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0, i32 1
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %66 = bitcast %"class.WTF::Vector.54"* %63 to i64*
  %67 = bitcast %"class.WTF::Vector.54"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 16, i1 false) #14
  %68 = load i64, i64* %66, align 8
  %69 = bitcast %"class.WTF::Vector.54"* %3 to i64*
  store atomic i64 0, i64* %66 monotonic, align 8
  store atomic i64 %68, i64* %69 monotonic, align 8
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %71 = load i32, i32* %64, align 4
  %72 = load i32, i32* %70, align 4
  store i32 %72, i32* %64, align 4
  store i32 %71, i32* %70, align 4
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %74 = load i32, i32* %65, align 4
  %75 = load i32, i32* %73, align 4
  store i32 %75, i32* %65, align 4
  store i32 %74, i32* %73, align 4
  ret void
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink23ManifestProtocolHandlerEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.84"*, %"class.mojo::StructPtr.87"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.84", %"class.WTF::Vector.84"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.84", %"class.WTF::Vector.84"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.87"*, %"class.mojo::StructPtr.87"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.87"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.87"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.84", %"class.WTF::Vector.84"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.87"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink23ManifestProtocolHandlerEEEEEmm(i64 %27) #14
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink23ManifestProtocolHandlerEEEEEPKcv, i64 0, i64 0)) #14
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.84"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.87"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink23ManifestProtocolHandlerEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.84"* %0, i32 %22) #14
  %36 = load %"class.mojo::StructPtr.87"*, %"class.mojo::StructPtr.87"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.87"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.87"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.84", %"class.WTF::Vector.84"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !3

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.87"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink23ManifestProtocolHandlerEEEEEmm(i64 %55) #14
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink23ManifestProtocolHandlerEEEEEPKcv, i64 0, i64 0)) #14
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.84"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.87"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink23ManifestProtocolHandlerEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.84"* %0, i32 %50) #14
  %64 = load %"class.mojo::StructPtr.87"*, %"class.mojo::StructPtr.87"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.87"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.87"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.87"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.87"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestProtocolHandler"* null, %"class.blink::mojom::blink::ManifestProtocolHandler"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.87"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink23ManifestProtocolHandlerEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.84"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.84", %"class.WTF::Vector.84"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.87"*, %"class.mojo::StructPtr.87"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.87"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.84", %"class.WTF::Vector.84"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.84"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.84", %"class.WTF::Vector.84"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.87"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.87"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.87"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestProtocolHandler"* null, %"class.blink::mojom::blink::ManifestProtocolHandler"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.87"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestProtocolHandler"* null, %"class.blink::mojom::blink::ManifestProtocolHandler"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !134

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.87"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.87"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.87"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.87"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.87"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestProtocolHandler"* null, %"class.blink::mojom::blink::ManifestProtocolHandler"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.87"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestProtocolHandler"* null, %"class.blink::mojom::blink::ManifestProtocolHandler"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.87"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestProtocolHandler"* null, %"class.blink::mojom::blink::ManifestProtocolHandler"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.87"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestProtocolHandler"* null, %"class.blink::mojom::blink::ManifestProtocolHandler"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.87"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestProtocolHandler"* null, %"class.blink::mojom::blink::ManifestProtocolHandler"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.87"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestProtocolHandler"* null, %"class.blink::mojom::blink::ManifestProtocolHandler"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.87"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestProtocolHandler"* null, %"class.blink::mojom::blink::ManifestProtocolHandler"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.87"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestProtocolHandler"* null, %"class.blink::mojom::blink::ManifestProtocolHandler"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.87"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #14
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink23ManifestProtocolHandlerEEEEEmm(i64 %73) #14
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([109 x i8], [109 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink23ManifestProtocolHandlerEEEEEPKcv, i64 0, i64 0)) #14
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.84", %"class.WTF::Vector.84"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.87"*, %"class.mojo::StructPtr.87"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.84", %"class.WTF::Vector.84"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.87"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.87"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.87"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.87"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.87"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestProtocolHandler"* null, %"class.blink::mojom::blink::ManifestProtocolHandler"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.87"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestProtocolHandler"* null, %"class.blink::mojom::blink::ManifestProtocolHandler"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !135

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.87"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.87"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.87"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.87"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.87"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestProtocolHandler"* null, %"class.blink::mojom::blink::ManifestProtocolHandler"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.87"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestProtocolHandler"* null, %"class.blink::mojom::blink::ManifestProtocolHandler"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.87"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestProtocolHandler"* null, %"class.blink::mojom::blink::ManifestProtocolHandler"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.87"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestProtocolHandler"* null, %"class.blink::mojom::blink::ManifestProtocolHandler"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.87"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestProtocolHandler"* null, %"class.blink::mojom::blink::ManifestProtocolHandler"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.87"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestProtocolHandler"* null, %"class.blink::mojom::blink::ManifestProtocolHandler"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.87"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestProtocolHandler"* null, %"class.blink::mojom::blink::ManifestProtocolHandler"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.87"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestProtocolHandler"* null, %"class.blink::mojom::blink::ManifestProtocolHandler"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.87", %"class.mojo::StructPtr.87"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.87"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.84"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #14
  %149 = bitcast %"class.WTF::Vector.84"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.84", %"class.WTF::Vector.84"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink23ManifestProtocolHandlerEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.127, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.128, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

declare void @_ZN5blink5mojom5blink23ManifestProtocolHandlerC1Ev(%"class.blink::mojom::blink::ManifestProtocolHandler"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink18ManifestUrlHandlerEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.96"*, %"class.mojo::StructPtr.99"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.99"*, %"class.mojo::StructPtr.99"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.99"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.99"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.99"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink18ManifestUrlHandlerEEEEEmm(i64 %27) #14
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink18ManifestUrlHandlerEEEEEPKcv, i64 0, i64 0)) #14
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.96"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.99"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink18ManifestUrlHandlerEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.96"* %0, i32 %22) #14
  %36 = load %"class.mojo::StructPtr.99"*, %"class.mojo::StructPtr.99"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.99"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.99"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !3

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.99"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink18ManifestUrlHandlerEEEEEmm(i64 %55) #14
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink18ManifestUrlHandlerEEEEEPKcv, i64 0, i64 0)) #14
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.96"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.99"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink18ManifestUrlHandlerEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.96"* %0, i32 %50) #14
  %64 = load %"class.mojo::StructPtr.99"*, %"class.mojo::StructPtr.99"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.99"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.99"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.99"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.99"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestUrlHandler"* null, %"class.blink::mojom::blink::ManifestUrlHandler"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.99"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink18ManifestUrlHandlerEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.96"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.99"*, %"class.mojo::StructPtr.99"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.99"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.96"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.99"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.99"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.99"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestUrlHandler"* null, %"class.blink::mojom::blink::ManifestUrlHandler"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.99"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestUrlHandler"* null, %"class.blink::mojom::blink::ManifestUrlHandler"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !136

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.99"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.99"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.99"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.99"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.99"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestUrlHandler"* null, %"class.blink::mojom::blink::ManifestUrlHandler"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.99"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestUrlHandler"* null, %"class.blink::mojom::blink::ManifestUrlHandler"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.99"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestUrlHandler"* null, %"class.blink::mojom::blink::ManifestUrlHandler"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.99"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestUrlHandler"* null, %"class.blink::mojom::blink::ManifestUrlHandler"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.99"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestUrlHandler"* null, %"class.blink::mojom::blink::ManifestUrlHandler"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.99"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestUrlHandler"* null, %"class.blink::mojom::blink::ManifestUrlHandler"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.99"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestUrlHandler"* null, %"class.blink::mojom::blink::ManifestUrlHandler"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.99"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestUrlHandler"* null, %"class.blink::mojom::blink::ManifestUrlHandler"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.99"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #14
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink18ManifestUrlHandlerEEEEEmm(i64 %73) #14
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([104 x i8], [104 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink18ManifestUrlHandlerEEEEEPKcv, i64 0, i64 0)) #14
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.99"*, %"class.mojo::StructPtr.99"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.99"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.99"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.99"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.99"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.99"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestUrlHandler"* null, %"class.blink::mojom::blink::ManifestUrlHandler"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.99"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestUrlHandler"* null, %"class.blink::mojom::blink::ManifestUrlHandler"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !137

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.99"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.99"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.99"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.99"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.99"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestUrlHandler"* null, %"class.blink::mojom::blink::ManifestUrlHandler"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.99"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestUrlHandler"* null, %"class.blink::mojom::blink::ManifestUrlHandler"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.99"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestUrlHandler"* null, %"class.blink::mojom::blink::ManifestUrlHandler"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.99"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestUrlHandler"* null, %"class.blink::mojom::blink::ManifestUrlHandler"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.99"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestUrlHandler"* null, %"class.blink::mojom::blink::ManifestUrlHandler"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.99"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestUrlHandler"* null, %"class.blink::mojom::blink::ManifestUrlHandler"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.99"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestUrlHandler"* null, %"class.blink::mojom::blink::ManifestUrlHandler"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.99"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestUrlHandler"* null, %"class.blink::mojom::blink::ManifestUrlHandler"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.99", %"class.mojo::StructPtr.99"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.99"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.96"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #14
  %149 = bitcast %"class.WTF::Vector.96"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.96", %"class.WTF::Vector.96"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink18ManifestUrlHandlerEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.127, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.128, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

declare void @_ZN5blink5mojom5blink18ManifestUrlHandlerC1Ev(%"class.blink::mojom::blink::ManifestUrlHandler"*) unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZN5blink5mojom5blink18ManifestNoteTakingC1Ev(%"class.blink::mojom::blink::ManifestNoteTaking"*) unnamed_addr #1

declare void @_ZN5blink5mojom5blink26ManifestRelatedApplicationC1Ev(%"class.blink::mojom::blink::ManifestRelatedApplication"*) unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink26ManifestRelatedApplicationEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.116"*, %"class.mojo::StructPtr.119"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::StructPtr.119"*, %"class.mojo::StructPtr.119"** %6, align 8
  %8 = icmp ugt %"class.mojo::StructPtr.119"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::StructPtr.119"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::StructPtr.119"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink26ManifestRelatedApplicationEEEEEmm(i64 %27) #14
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink26ManifestRelatedApplicationEEEEEPKcv, i64 0, i64 0)) #14
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.116"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 3
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::StructPtr.119"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink26ManifestRelatedApplicationEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.116"* %0, i32 %22) #14
  %36 = load %"class.mojo::StructPtr.119"*, %"class.mojo::StructPtr.119"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::StructPtr.119"* %1 to i64
  %39 = ptrtoint %"class.mojo::StructPtr.119"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 3
  %42 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !3

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::StructPtr.119"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink26ManifestRelatedApplicationEEEEEmm(i64 %55) #14
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink26ManifestRelatedApplicationEEEEEPKcv, i64 0, i64 0)) #14
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.116"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 3
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::StructPtr.119"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink26ManifestRelatedApplicationEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.116"* %0, i32 %50) #14
  %64 = load %"class.mojo::StructPtr.119"*, %"class.mojo::StructPtr.119"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::StructPtr.119"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::StructPtr.119"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::StructPtr.119"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %69, i64 %72
  %74 = bitcast %"class.mojo::StructPtr.119"* %73 to i64*
  %75 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %73, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %75, align 8
  %76 = bitcast %"class.mojo::StructPtr.119"* %70 to i64*
  %77 = load i64, i64* %76, align 8
  store i64 %77, i64* %74, align 8
  store i64 0, i64* %76, align 8
  %78 = load i32, i32* %3, align 4
  %79 = add i32 %78, 1
  store i32 %79, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo9StructPtrIN5blink5mojom5blink26ManifestRelatedApplicationEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.116"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %72

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.mojo::StructPtr.119"*, %"class.mojo::StructPtr.119"** %5, align 8
  %7 = bitcast %"class.mojo::StructPtr.119"* %6 to i8*
  %8 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %6, i64 %10
  %12 = bitcast %"class.WTF::Vector.116"* %0 to i64*
  store atomic i64 0, i64* %12 monotonic, align 8
  %13 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %13, align 8
  %14 = icmp eq i32 %9, 0
  br i1 %14, label %71, label %15

15:                                               ; preds = %4
  %16 = shl nuw nsw i64 %10, 3
  %17 = add nsw i64 %16, -8
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, 1
  %20 = and i64 %19, 3
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %35, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.mojo::StructPtr.119"* [ %32, %22 ], [ %6, %15 ]
  %24 = phi %"class.mojo::StructPtr.119"* [ %31, %22 ], [ null, %15 ]
  %25 = phi i64 [ %33, %22 ], [ %20, %15 ]
  %26 = bitcast %"class.mojo::StructPtr.119"* %24 to i64*
  %27 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %27, align 8
  %28 = bitcast %"class.mojo::StructPtr.119"* %23 to i64*
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %26, align 8
  %30 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %30, align 8
  %31 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %24, i64 1
  %32 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %23, i64 1
  %33 = add i64 %25, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %22, !llvm.loop !138

35:                                               ; preds = %22, %15
  %36 = phi %"class.mojo::StructPtr.119"* [ %6, %15 ], [ %32, %22 ]
  %37 = phi %"class.mojo::StructPtr.119"* [ null, %15 ], [ %31, %22 ]
  %38 = icmp ult i64 %17, 24
  br i1 %38, label %71, label %39

39:                                               ; preds = %35, %39
  %40 = phi %"class.mojo::StructPtr.119"* [ %69, %39 ], [ %36, %35 ]
  %41 = phi %"class.mojo::StructPtr.119"* [ %68, %39 ], [ %37, %35 ]
  %42 = bitcast %"class.mojo::StructPtr.119"* %41 to i64*
  %43 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %41, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %43, align 8
  %44 = bitcast %"class.mojo::StructPtr.119"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  store i64 %45, i64* %42, align 8
  %46 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %46, align 8
  %47 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %41, i64 1
  %48 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %40, i64 1
  %49 = bitcast %"class.mojo::StructPtr.119"* %47 to i64*
  %50 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %50, align 8
  %51 = bitcast %"class.mojo::StructPtr.119"* %48 to i64*
  %52 = load i64, i64* %51, align 8
  store i64 %52, i64* %49, align 8
  %53 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %53, align 8
  %54 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %41, i64 2
  %55 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %40, i64 2
  %56 = bitcast %"class.mojo::StructPtr.119"* %54 to i64*
  %57 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %54, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %57, align 8
  %58 = bitcast %"class.mojo::StructPtr.119"* %55 to i64*
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %56, align 8
  %60 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %55, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %60, align 8
  %61 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %41, i64 3
  %62 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %40, i64 3
  %63 = bitcast %"class.mojo::StructPtr.119"* %61 to i64*
  %64 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %64, align 8
  %65 = bitcast %"class.mojo::StructPtr.119"* %62 to i64*
  %66 = load i64, i64* %65, align 8
  store i64 %66, i64* %63, align 8
  %67 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %62, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %67, align 8
  %68 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %41, i64 4
  %69 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %40, i64 4
  %70 = icmp eq %"class.mojo::StructPtr.119"* %69, %11
  br i1 %70, label %71, label %39

71:                                               ; preds = %35, %39, %4
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #14
  br label %152

72:                                               ; preds = %2
  %73 = zext i32 %1 to i64
  %74 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink26ManifestRelatedApplicationEEEEEmm(i64 %73) #14
  %75 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %74, i8* getelementptr inbounds ([112 x i8], [112 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo9StructPtrIN5blink5mojom5blink26ManifestRelatedApplicationEEEEEPKcv, i64 0, i64 0)) #14
  %76 = lshr i64 %74, 3
  %77 = ptrtoint i8* %75 to i64
  %78 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.mojo::StructPtr.119"*, %"class.mojo::StructPtr.119"** %78, align 8
  %80 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %79, i64 %82
  %84 = icmp eq i32 %81, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %72
  %86 = bitcast %"class.mojo::StructPtr.119"* %79 to i8*
  br label %147

87:                                               ; preds = %72
  %88 = bitcast i8* %75 to %"class.mojo::StructPtr.119"*
  %89 = shl nuw nsw i64 %82, 3
  %90 = add nsw i64 %89, -8
  %91 = lshr exact i64 %90, 3
  %92 = add nuw nsw i64 %91, 1
  %93 = and i64 %92, 3
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %108, label %95

95:                                               ; preds = %87, %95
  %96 = phi %"class.mojo::StructPtr.119"* [ %105, %95 ], [ %79, %87 ]
  %97 = phi %"class.mojo::StructPtr.119"* [ %104, %95 ], [ %88, %87 ]
  %98 = phi i64 [ %106, %95 ], [ %93, %87 ]
  %99 = bitcast %"class.mojo::StructPtr.119"* %97 to i64*
  %100 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %97, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %100, align 8
  %101 = bitcast %"class.mojo::StructPtr.119"* %96 to i64*
  %102 = load i64, i64* %101, align 8
  store i64 %102, i64* %99, align 8
  %103 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %96, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %103, align 8
  %104 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %97, i64 1
  %105 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %96, i64 1
  %106 = add i64 %98, -1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %95, !llvm.loop !139

108:                                              ; preds = %95, %87
  %109 = phi %"class.mojo::StructPtr.119"* [ %79, %87 ], [ %105, %95 ]
  %110 = phi %"class.mojo::StructPtr.119"* [ %88, %87 ], [ %104, %95 ]
  %111 = icmp ult i64 %90, 24
  br i1 %111, label %144, label %112

112:                                              ; preds = %108, %112
  %113 = phi %"class.mojo::StructPtr.119"* [ %142, %112 ], [ %109, %108 ]
  %114 = phi %"class.mojo::StructPtr.119"* [ %141, %112 ], [ %110, %108 ]
  %115 = bitcast %"class.mojo::StructPtr.119"* %114 to i64*
  %116 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %116, align 8
  %117 = bitcast %"class.mojo::StructPtr.119"* %113 to i64*
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %115, align 8
  %119 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %119, align 8
  %120 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %114, i64 1
  %121 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %113, i64 1
  %122 = bitcast %"class.mojo::StructPtr.119"* %120 to i64*
  %123 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %123, align 8
  %124 = bitcast %"class.mojo::StructPtr.119"* %121 to i64*
  %125 = load i64, i64* %124, align 8
  store i64 %125, i64* %122, align 8
  %126 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %126, align 8
  %127 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %114, i64 2
  %128 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %113, i64 2
  %129 = bitcast %"class.mojo::StructPtr.119"* %127 to i64*
  %130 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %127, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %130, align 8
  %131 = bitcast %"class.mojo::StructPtr.119"* %128 to i64*
  %132 = load i64, i64* %131, align 8
  store i64 %132, i64* %129, align 8
  %133 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %128, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %133, align 8
  %134 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %114, i64 3
  %135 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %113, i64 3
  %136 = bitcast %"class.mojo::StructPtr.119"* %134 to i64*
  %137 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %134, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %137, align 8
  %138 = bitcast %"class.mojo::StructPtr.119"* %135 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %136, align 8
  %140 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %135, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.blink::mojom::blink::ManifestRelatedApplication"* null, %"class.blink::mojom::blink::ManifestRelatedApplication"** %140, align 8
  %141 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %114, i64 4
  %142 = getelementptr inbounds %"class.mojo::StructPtr.119", %"class.mojo::StructPtr.119"* %113, i64 4
  %143 = icmp eq %"class.mojo::StructPtr.119"* %142, %83
  br i1 %143, label %144, label %112

144:                                              ; preds = %112, %108
  %145 = bitcast %"class.WTF::Vector.116"* %0 to i8**
  %146 = load i8*, i8** %145, align 8
  br label %147

147:                                              ; preds = %85, %144
  %148 = phi i8* [ %146, %144 ], [ %86, %85 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %148) #14
  %149 = bitcast %"class.WTF::Vector.116"* %0 to i64*
  store atomic i64 %77, i64* %149 monotonic, align 8
  %150 = trunc i64 %76 to i32
  %151 = getelementptr inbounds %"class.WTF::Vector.116", %"class.WTF::Vector.116"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %150, i32* %151, align 8
  br label %152

152:                                              ; preds = %147, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo9StructPtrIN5blink5mojom5blink26ManifestRelatedApplicationEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #14
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #14
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #14
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.127, i64 0, i64 0), i8* %11, i8* %12) #14
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #14
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.128, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #14
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #14
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #14
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #14
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #14
  ret i64 %21
}

declare void @_ZN5blink5mojom5blink13ManifestErrorC1ERKN3WTF6StringEbjj(%"class.blink::mojom::blink::ManifestError"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext, i32, i32) unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN5blink5mojom5blink13ManifestErrorEEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS7_EEvOT_(%"class.WTF::Vector.136"*, %"class.mojo::InlinedStructPtr"* dereferenceable(32)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.136", %"class.WTF::Vector.136"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.136", %"class.WTF::Vector.136"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %6, align 8
  %8 = icmp ugt %"class.mojo::InlinedStructPtr"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %7, i64 %10
  %12 = icmp ugt %"class.mojo::InlinedStructPtr"* %11, %1
  br i1 %12, label %37, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector.136", %"class.WTF::Vector.136"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %68, !prof !3

24:                                               ; preds = %13
  %25 = icmp eq %"class.mojo::InlinedStructPtr"* %7, null
  br i1 %25, label %26, label %35

26:                                               ; preds = %24
  %27 = zext i32 %22 to i64
  %28 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16InlinedStructPtrIN5blink5mojom5blink13ManifestErrorEEEEEmm(i64 %27) #14
  %29 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16InlinedStructPtrIN5blink5mojom5blink13ManifestErrorEEEEEPKcv, i64 0, i64 0)) #14
  %30 = ptrtoint i8* %29 to i64
  %31 = bitcast %"class.WTF::Vector.136"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %28, 5
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %29 to %"class.mojo::InlinedStructPtr"*
  br label %68

35:                                               ; preds = %24
  tail call void @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN5blink5mojom5blink13ManifestErrorEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.136"* %0, i32 %22) #14
  %36 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %6, align 8
  br label %68

37:                                               ; preds = %9
  %38 = ptrtoint %"class.mojo::InlinedStructPtr"* %1 to i64
  %39 = ptrtoint %"class.mojo::InlinedStructPtr"* %7 to i64
  %40 = sub i64 %38, %39
  %41 = ashr exact i64 %40, 5
  %42 = getelementptr inbounds %"class.WTF::Vector.136", %"class.WTF::Vector.136"* %0, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = lshr i32 %43, 2
  %45 = add i32 %43, 1
  %46 = add i32 %45, %44
  %47 = icmp ugt i32 %46, 4
  %48 = select i1 %47, i32 %46, i32 4
  %49 = icmp ugt i32 %48, %5
  %50 = select i1 %49, i32 %48, i32 %5
  %51 = icmp ult i32 %43, %50
  br i1 %51, label %52, label %65, !prof !3

52:                                               ; preds = %37
  %53 = icmp eq %"class.mojo::InlinedStructPtr"* %7, null
  br i1 %53, label %54, label %63

54:                                               ; preds = %52
  %55 = zext i32 %50 to i64
  %56 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN4mojo16InlinedStructPtrIN5blink5mojom5blink13ManifestErrorEEEEEmm(i64 %55) #14
  %57 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %56, i8* getelementptr inbounds ([106 x i8], [106 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN4mojo16InlinedStructPtrIN5blink5mojom5blink13ManifestErrorEEEEEPKcv, i64 0, i64 0)) #14
  %58 = ptrtoint i8* %57 to i64
  %59 = bitcast %"class.WTF::Vector.136"* %0 to i64*
  store atomic i64 %58, i64* %59 monotonic, align 8
  %60 = lshr i64 %56, 5
  %61 = trunc i64 %60 to i32
  store i32 %61, i32* %42, align 8
  %62 = bitcast i8* %57 to %"class.mojo::InlinedStructPtr"*
  br label %65

63:                                               ; preds = %52
  tail call void @_ZN3WTF6VectorIN4mojo16InlinedStructPtrIN5blink5mojom5blink13ManifestErrorEEELj0ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.136"* %0, i32 %50) #14
  %64 = load %"class.mojo::InlinedStructPtr"*, %"class.mojo::InlinedStructPtr"** %6, align 8
  br label %65

65:                                               ; preds = %37, %54, %63
  %66 = phi %"class.mojo::InlinedStructPtr"* [ %7, %37 ], [ %62, %54 ], [ %64, %63 ]
  %67 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %66, i64 %41
  br label %68

68:                                               ; preds = %35, %26, %13, %65
  %69 = phi %"class.mojo::InlinedStructPtr"* [ %66, %65 ], [ %7, %13 ], [ %34, %26 ], [ %36, %35 ]
  %70 = phi %"class.mojo::InlinedStructPtr"* [ %67, %65 ], [ %1, %13 ], [ %1, %26 ], [ %1, %35 ]
  %71 = load i32, i32* %3, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %69, i64 %72, i32 0
  tail call void @_ZN5blink5mojom5blink13ManifestErrorC1Ev(%"class.blink::mojom::blink::ManifestError"* %73) #14
  %74 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %69, i64 %72, i32 1
  store i32 0, i32* %74, align 8
  tail call void @_ZN5blink5mojom5blink13ManifestErrorD1Ev(%"class.blink::mojom::blink::ManifestError"* %73) #14
  tail call void @_ZN5blink5mojom5blink13ManifestErrorC1Ev(%"class.blink::mojom::blink::ManifestError"* %73) #14
  %75 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %70, i64 0, i32 0
  tail call void @_ZNSt3__14swapIN5blink5mojom5blink13ManifestErrorEEENS_9enable_ifIXaasr21is_move_constructibleIT_EE5valuesr18is_move_assignableIS6_EE5valueEvE4typeERS6_S9_(%"class.blink::mojom::blink::ManifestError"* dereferenceable(24) %73, %"class.blink::mojom::blink::ManifestError"* dereferenceable(24) %75) #14
  %76 = getelementptr inbounds %"class.mojo::InlinedStructPtr", %"class.mojo::InlinedStructPtr"* %70, i64 0, i32 1
  %77 = load i32, i32* %74, align 4
  %78 = load i32, i32* %76, align 4
  store i32 %78, i32* %74, align 4
  store i32 %77, i32* %76, align 4
  %79 = load i32, i32* %3, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %3, align 4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }
attributes #17 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZN5blink5mojom5blink8Manifest3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!6 = distinct !{!6, !"_ZN5blink5mojom5blink8Manifest3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN5blink14ManifestParser13ParseStartURLEPKNS_10JSONObjectE: argument 0"}
!9 = distinct !{!9, !"_ZN5blink14ManifestParser13ParseStartURLEPKNS_10JSONObjectE"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN5blink14ManifestParser10ParseIconsEPKNS_10JSONObjectE: argument 0"}
!12 = distinct !{!12, !"_ZN5blink14ManifestParser10ParseIconsEPKNS_10JSONObjectE"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN5blink14ManifestParser16ParseScreenshotsEPKNS_10JSONObjectE: argument 0"}
!15 = distinct !{!15, !"_ZN5blink14ManifestParser16ParseScreenshotsEPKNS_10JSONObjectE"}
!16 = !{i8 0, i8 2}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN5blink5mojom5blink13ManifestError3NewIJRKN3WTF6StringERbRiS9_EEEN4mojo16InlinedStructPtrIS2_EEDpOT_: argument 0"}
!19 = distinct !{!19, !"_ZN5blink5mojom5blink13ManifestError3NewIJRKN3WTF6StringERbRiS9_EEEN4mojo16InlinedStructPtrIS2_EEDpOT_"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN5blink5mojom5blink19ManifestShareTarget3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!22 = distinct !{!22, !"_ZN5blink5mojom5blink19ManifestShareTarget3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!25 = distinct !{!25, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!28 = distinct !{!28, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN5blink5mojom5blink18ManifestNoteTaking3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!31 = distinct !{!31, !"_ZN5blink5mojom5blink18ManifestNoteTaking3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN5blink5mojom5blink26ManifestRelatedApplication3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!34 = distinct !{!34, !"_ZN5blink5mojom5blink26ManifestRelatedApplication3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN5blink5mojom5blink20ManifestShortcutItem3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!37 = distinct !{!37, !"_ZN5blink5mojom5blink20ManifestShortcutItem3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZN5blink14ManifestParser10ParseIconsEPKNS_10JSONObjectE: argument 0"}
!40 = distinct !{!40, !"_ZN5blink14ManifestParser10ParseIconsEPKNS_10JSONObjectE"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!43 = distinct !{!43, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!46 = distinct !{!46, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!49 = distinct !{!49, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!52 = distinct !{!52, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S3_EENS1_INS1_IT_T0_EET1_EERKS8_S9_: argument 0"}
!55 = distinct !{!55, !"_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S3_EENS1_INS1_IT_T0_EET1_EERKS8_S9_"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!58 = distinct !{!58, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S3_EENS1_INS1_IT_T0_EET1_EERKS8_S9_: argument 0"}
!61 = distinct !{!61, !"_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S3_EENS1_INS1_IT_T0_EET1_EERKS8_S9_"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!64 = distinct !{!64, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!67 = distinct !{!67, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!70 = distinct !{!70, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!73 = distinct !{!73, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!76 = distinct !{!76, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!79 = distinct !{!79, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!82 = distinct !{!82, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!85 = distinct !{!85, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!86 = !{!87}
!87 = distinct !{!87, !88, !"_ZN3WTFplINS_12StringAppendINS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_S3_EENS1_INS1_IT_T0_EET1_EERKSA_SB_: argument 0"}
!88 = distinct !{!88, !"_ZN3WTFplINS_12StringAppendINS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_S3_EENS1_INS1_IT_T0_EET1_EERKSA_SB_"}
!89 = !{!90}
!90 = distinct !{!90, !91, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!91 = distinct !{!91, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!92 = !{!93}
!93 = distinct !{!93, !94, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!94 = distinct !{!94, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!95 = !{!96}
!96 = distinct !{!96, !97, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!97 = distinct !{!97, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!98 = !{!99}
!99 = distinct !{!99, !100, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!100 = distinct !{!100, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!101 = !{!102}
!102 = distinct !{!102, !103, !"_ZN5blink5mojom5blink21ManifestImageResource3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!103 = distinct !{!103, !"_ZN5blink5mojom5blink21ManifestImageResource3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!104 = !{!105}
!105 = distinct !{!105, !106, !"_ZN5blink14ManifestParser12ParseIconSrcEPKNS_10JSONObjectE: argument 0"}
!106 = distinct !{!106, !"_ZN5blink14ManifestParser12ParseIconSrcEPKNS_10JSONObjectE"}
!107 = !{!108}
!108 = distinct !{!108, !109, !"_ZN5blink5mojom5blink18ManifestFileFilter3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!109 = distinct !{!109, !"_ZN5blink5mojom5blink18ManifestFileFilter3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!110 = !{!111}
!111 = distinct !{!111, !112, !"_ZN5blink5mojom5blink25ManifestShareTargetParams3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!112 = distinct !{!112, !"_ZN5blink5mojom5blink25ManifestShareTargetParams3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!113 = !{!114}
!114 = distinct !{!114, !115, !"_ZN5blink5mojom5blink19ManifestFileHandler3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!115 = distinct !{!115, !"_ZN5blink5mojom5blink19ManifestFileHandler3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!116 = !{!117}
!117 = distinct !{!117, !118, !"_ZN5blink5mojom5blink23ManifestProtocolHandler3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!118 = distinct !{!118, !"_ZN5blink5mojom5blink23ManifestProtocolHandler3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!121 = distinct !{!121, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!122 = !{!123}
!123 = distinct !{!123, !124, !"_ZN5blink5mojom5blink18ManifestUrlHandler3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!124 = distinct !{!124, !"_ZN5blink5mojom5blink18ManifestUrlHandler3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
!125 = distinct !{!125, !126}
!126 = !{!"llvm.loop.unroll.disable"}
!127 = distinct !{!127, !126}
!128 = distinct !{!128, !126}
!129 = distinct !{!129, !126}
!130 = distinct !{!130, !126}
!131 = distinct !{!131, !126}
!132 = distinct !{!132, !126}
!133 = distinct !{!133, !126}
!134 = distinct !{!134, !126}
!135 = distinct !{!135, !126}
!136 = distinct !{!136, !126}
!137 = distinct !{!137, !126}
!138 = distinct !{!138, !126}
!139 = distinct !{!139, !126}
