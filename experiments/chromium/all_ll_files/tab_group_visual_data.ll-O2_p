; ModuleID = '../../components/tab_groups/tab_group_visual_data.cc'
source_filename = "../../components/tab_groups/tab_group_visual_data.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.tab_groups::TabGroupVisualData" = type <{ %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.1" }
%"struct.std::__1::pair" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::pair"* }

@_ZN10tab_groups18TabGroupVisualDataC1Ev = hidden unnamed_addr alias void (%"class.tab_groups::TabGroupVisualData"*), void (%"class.tab_groups::TabGroupVisualData"*)* @_ZN10tab_groups18TabGroupVisualDataC2Ev
@_ZN10tab_groups18TabGroupVisualDataC1ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS_15TabGroupColorIdEb = hidden unnamed_addr alias void (%"class.tab_groups::TabGroupVisualData"*, %"class.std::__1::basic_string"*, i32, i1), void (%"class.tab_groups::TabGroupVisualData"*, %"class.std::__1::basic_string"*, i32, i1)* @_ZN10tab_groups18TabGroupVisualDataC2ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS_15TabGroupColorIdEb
@_ZN10tab_groups18TabGroupVisualDataC1ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEjb = hidden unnamed_addr alias void (%"class.tab_groups::TabGroupVisualData"*, %"class.std::__1::basic_string"*, i32, i1), void (%"class.tab_groups::TabGroupVisualData"*, %"class.std::__1::basic_string"*, i32, i1)* @_ZN10tab_groups18TabGroupVisualDataC2ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEjb

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10tab_groups18TabGroupVisualDataC2Ev(%"class.tab_groups::TabGroupVisualData"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.tab_groups::TabGroupVisualData"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 24, i1 false)
  %3 = getelementptr inbounds %"class.tab_groups::TabGroupVisualData", %"class.tab_groups::TabGroupVisualData"* %0, i64 0, i32 1
  store i32 0, i32* %3, align 8
  %4 = getelementptr inbounds %"class.tab_groups::TabGroupVisualData", %"class.tab_groups::TabGroupVisualData"* %0, i64 0, i32 2
  store i8 0, i8* %4, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10tab_groups18TabGroupVisualDataC2ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEENS_15TabGroupColorIdEb(%"class.tab_groups::TabGroupVisualData"* nocapture, %"class.std::__1::basic_string"* nocapture, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = bitcast %"class.tab_groups::TabGroupVisualData"* %0 to i8*
  %7 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false) #3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #3
  %8 = getelementptr inbounds %"class.tab_groups::TabGroupVisualData", %"class.tab_groups::TabGroupVisualData"* %0, i64 0, i32 1
  store i32 %2, i32* %8, align 8
  %9 = getelementptr inbounds %"class.tab_groups::TabGroupVisualData", %"class.tab_groups::TabGroupVisualData"* %0, i64 0, i32 2
  store i8 %5, i8* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10tab_groups18TabGroupVisualDataC2ENSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEjb(%"class.tab_groups::TabGroupVisualData"* nocapture, %"class.std::__1::basic_string"* nocapture, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %5 = zext i1 %3 to i8
  %6 = bitcast %"class.tab_groups::TabGroupVisualData"* %0 to i8*
  %7 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 24, i1 false) #3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #3
  %8 = getelementptr inbounds %"class.tab_groups::TabGroupVisualData", %"class.tab_groups::TabGroupVisualData"* %0, i64 0, i32 1
  store i32 0, i32* %8, align 8
  %9 = getelementptr inbounds %"class.tab_groups::TabGroupVisualData", %"class.tab_groups::TabGroupVisualData"* %0, i64 0, i32 2
  store i8 %5, i8* %9, align 4
  %10 = tail call dereferenceable(24) %"class.base::flat_map"* @_ZN10tab_groups24GetTabGroupColorLabelMapEv() #3
  %11 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %11, align 8
  %13 = getelementptr inbounds %"class.base::flat_map", %"class.base::flat_map"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = bitcast %"struct.std::__1::pair"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = ptrtoint %"struct.std::__1::pair"* %12 to i64
  %17 = sub i64 %15, %16
  %18 = icmp eq i64 %17, 0
  %19 = inttoptr i64 %15 to %"struct.std::__1::pair"*
  br i1 %18, label %36, label %20

20:                                               ; preds = %4
  %21 = ashr exact i64 %17, 5
  br label %22

22:                                               ; preds = %22, %20
  %23 = phi %"struct.std::__1::pair"* [ %12, %20 ], [ %34, %22 ]
  %24 = phi i64 [ %21, %20 ], [ %33, %22 ]
  %25 = lshr i64 %24, 1
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %23, i64 %25
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp slt i32 %28, %2
  %30 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 1
  %31 = xor i64 %25, -1
  %32 = add i64 %24, %31
  %33 = select i1 %29, i64 %32, i64 %25
  %34 = select i1 %29, %"struct.std::__1::pair"* %30, %"struct.std::__1::pair"* %23
  %35 = icmp eq i64 %33, 0
  br i1 %35, label %36, label %22

36:                                               ; preds = %22, %4
  %37 = phi %"struct.std::__1::pair"* [ %12, %4 ], [ %34, %22 ]
  %38 = icmp eq %"struct.std::__1::pair"* %37, %19
  br i1 %38, label %44, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = icmp sgt i32 %41, %2
  br i1 %42, label %44, label %43

43:                                               ; preds = %39
  store i32 %2, i32* %8, align 8
  br label %44

44:                                               ; preds = %39, %36, %43
  ret void
}

declare dereferenceable(24) %"class.base::flat_map"* @_ZN10tab_groups24GetTabGroupColorLabelMapEv() local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
