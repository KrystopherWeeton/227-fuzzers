; ModuleID = '../../gpu/command_buffer/service/wrapped_sk_image.cc'
source_filename = "../../gpu/command_buffer/service/wrapped_sk_image.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.gpu::raster::WrappedSkImageFactory" = type { %"class.gpu::SharedImageBackingFactory", %class.scoped_refptr }
%"class.gpu::SharedImageBackingFactory" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.gpu::SharedContextState"* }
%"class.gpu::SharedContextState" = type { %"class.base::trace_event::MemoryDumpProvider", %"class.gpu::GLContextVirtualDelegate", %"class.base::RefCounted", %"class.GrContextOptions::ShaderErrorHandler", i8, i8, i8, %"class.base::OnceCallback", i32, %"class.gpu::SharedContextState::MemoryTrackerObserver", %"class.gpu::SharedContextState::MemoryTracker", %"class.gpu::MemoryTypeTracker", %"class.viz::VulkanContextProvider"*, %"class.viz::MetalContextProvider"*, %"class.viz::DawnContextProvider"*, %class.GrDirectContext*, %class.scoped_refptr.81, %class.scoped_refptr.89, %class.scoped_refptr.89, %class.scoped_refptr.90, %"class.gl::GLSurface"*, %class.scoped_refptr.91, %"class.std::__1::unique_ptr.111", %"class.gl::ProgressReporter"*, %class.sk_sp.117, %"class.std::__1::unique_ptr.118", i64, %"class.std::__1::vector.124", %"class.gpu::raster::GrShaderCache"*, i8, %"class.absl::optional", [4 x i8], %"class.base::ObserverList", %"class.base::MRUCache", i8, %"class.base::Time", i8, %"class.std::__1::unique_ptr.151", %"class.base::WeakPtrFactory.157" }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%"class.gpu::GLContextVirtualDelegate" = type { i32 (...)** }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.gpu::SharedContextState::MemoryTrackerObserver" = type { %"class.gpu::MemoryTracker::Observer", i64, %"class.base::WeakPtr" }
%"class.gpu::MemoryTracker::Observer" = type { i32 (...)** }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.3", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.3" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.4" }
%"struct.std::__1::atomic.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl.7" }
%"struct.std::__1::__cxx_atomic_impl.7" = type { %"struct.std::__1::__cxx_atomic_base_impl.8" }
%"struct.std::__1::__cxx_atomic_base_impl.8" = type { i8 }
%"class.gpu::SharedContextState::MemoryTracker" = type { %"class.gpu::MemoryTracker", %"class.util::IdType", i64, %"class.gpu::MemoryTracker::Observer"*, i64 }
%"class.gpu::MemoryTracker" = type { i32 (...)** }
%"class.util::IdType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { i64 }
%"class.gpu::MemoryTypeTracker" = type { %"class.gpu::MemoryTracker"*, i64, %"class.base::Lock", %class.scoped_refptr.9, %"class.base::WeakPtrFactory" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.scoped_refptr.9 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.10" }>
%"class.base::RefCountedThreadSafe.10" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.11 }
%class.scoped_refptr.11 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.viz::VulkanContextProvider" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.12", [4 x i8] }>
%"class.base::RefCountedThreadSafe.12" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.viz::MetalContextProvider" = type opaque
%"class.viz::DawnContextProvider" = type opaque
%class.GrDirectContext = type { %class.GrRecordingContext, %"class.GrDirectContext::DirectContextID", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.44", %class.sk_sp.50, %"class.std::__1::unique_ptr.51", %"class.std::__1::unique_ptr.57", i8, i8, %"class.GrContextOptions::PersistentCache"*, %"class.GrContextOptions::ShaderErrorHandler"*, %"class.std::__1::unique_ptr.63", %"class.std::__1::unique_ptr.69", %"class.std::__1::unique_ptr.75" }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.sk_sp = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type opaque
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.14", %"class.std::__1::unique_ptr.20" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%"class.GrDirectContext::DirectContextID" = type { i32 }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %class.SkTaskGroup* }
%class.SkTaskGroup = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %class.GrStrikeCache* }
%class.GrStrikeCache = type opaque
%class.sk_sp.50 = type { %class.GrGpu* }
%class.GrGpu = type opaque
%"class.std::__1::unique_ptr.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %class.GrResourceCache* }
%class.GrResourceCache = type opaque
%"class.std::__1::unique_ptr.57" = type { %"class.std::__1::__compressed_pair.58" }
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %class.GrResourceProvider* }
%class.GrResourceProvider = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %class.GrClientMappedBufferManager* }
%class.GrClientMappedBufferManager = type opaque
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %class.GrAtlasManager* }
%class.GrAtlasManager = type opaque
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %class.GrSmallPathAtlasMgr* }
%class.GrSmallPathAtlasMgr = type opaque
%class.scoped_refptr.81 = type { %"class.gl::GLShareGroup"* }
%"class.gl::GLShareGroup" = type { %"class.base::RefCounted.82", %"class.std::__1::set", %"class.gl::GLContext"* }
%"class.base::RefCounted.82" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.83", %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.std::__1::__compressed_pair_elem.87" = type { i64 }
%"class.gl::GLContext" = type <{ i32 (...)**, %"class.base::RefCounted.158", [4 x i8], %"class.base::SupportsWeakPtr", %"struct.gl::GLWorkarounds", [6 x i8], %"class.std::__1::basic_string", i8, i8, [6 x i8], %"class.std::__1::unique_ptr.165", %"class.std::__1::unique_ptr.171", %"class.std::__1::unique_ptr.195", %"class.gl::RealGLApi"*, %class.scoped_refptr.81, %"class.gl::GLContext"*, i8, [7 x i8], %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.105", i8, [7 x i8] }>
%"class.base::RefCounted.158" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"struct.gl::GLWorkarounds" = type { i8, i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.161 }
%union.anon.161 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr.165" = type { %"class.std::__1::__compressed_pair.166" }
%"class.std::__1::__compressed_pair.166" = type { %"struct.std::__1::__compressed_pair_elem.167" }
%"struct.std::__1::__compressed_pair_elem.167" = type { %"struct.gl::DriverGL"* }
%"struct.gl::DriverGL" = type <{ %"struct.gl::ProcsGL", %"struct.gl::ExtensionsGL", i8 }>
%"struct.gl::ProcsGL" = type { void (i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32)*, void (i32, i32, i64, i32)*, void ()*, void (float, float, float, float)*, void (i32)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, i32 (i32)*, void (i32)*, void (i32, i32, float, i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (float, float, float, float)*, void (double)*, void (float)*, void (i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, i32 (%struct.__GLsync*, i32, i64)*, i32 (%struct.__GLsync*, i32, i64)*, void (i8, i8, i8, i8)*, void (i32, i8, i8, i8, i8)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8, i8, i8)*, void (i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i32, float*)*, void (i32, i32)*, void (i32, i32*)*, i32 ()*, i32 (i32)*, i32 (i32, i32, i8**)*, void (i32)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (%struct.__GLsync*)*, void (%struct.__GLsync*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i8)*, void (double, double)*, void (float, float)*, void (i32, i32)*, void (i32)*, void (i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32)*, void (i32, i32)*, void (i32)*, void (i32)*, void (i32)*, void ()*, %struct.__GLsync* (i32, i32)*, %struct.__GLsync* (i32, i32)*, void ()*, void (i32)*, void (i32)*, void ()*, void (i32, i64, i64)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, i32 (i32)*, i32 (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32, i32*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8**)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, i32 ()*, void (i32, i32, i32*)*, void (i32, float*)*, void (i32, i32, i32*, float*)*, i32 (i32, i8*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 ()*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i64*)*, void (i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32, i32*, i8**)*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i64*)*, void (i32, i32, i32, i32*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, i32*, i8*)*, i8* (i32)*, i8* (i32, i32)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32, i32*, float*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*)*, void (i32, i32, i8**)*, void (i32, i32, i32, i32*, i8**)*, void (i32, i32)*, void (i32, i64, i32, i32)*, void (i32, i64, i32, i8*)*, void (i32, i64, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8 (%struct.__GLsync*)*, i8 (%struct.__GLsync*)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, void (float)*, void (i32)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32, float*)*, void (i32)*, void (i32)*, void (i32)*, void (i32)*, void (i32, i32, i32*)*, void (float)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32)*, void (i32, i32*, i32*, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, i32*, i32, i8**, i32*, i32)*, void (i32, i32*, i32, i8**, i32*, i32*, i32*, i32)*, void (i32, i32, i32, i8*)*, void (i8*, i32, i8*)*, void (i32, i32)*, void (i32, i32, i8*, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void ()*, void (i32, i32)*, void (i32, i32)*, void (i32, i32)*, void (float, float)*, void ()*, void ()*, void (i32)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, float*)*, void (i32, i32, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8*)*, void (i32, i8*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32*, i32*, i32*, i8*)*, void ()*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i8*)*, void ()*, void (float, i8)*, void (i32, i32)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i8*, i32, i32, i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, i8 (i32)*, i8 (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8**, i32)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, i8 (i32)*, void (i32)*, void (i32, i32, i32)*, void (i32)*, void (i32)*, void (i32, float)*, void (i32, float*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i32, i32*)* }
%struct.__GLsync = type opaque
%"struct.gl::ExtensionsGL" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.std::__1::unique_ptr.171" = type { %"class.std::__1::__compressed_pair.172" }
%"class.std::__1::__compressed_pair.172" = type { %"struct.std::__1::__compressed_pair_elem.173" }
%"struct.std::__1::__compressed_pair_elem.173" = type { %"class.gl::GLImplementationWrapper"* }
%"class.gl::GLImplementationWrapper" = type { %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.180", %"class.std::__1::unique_ptr.186", %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.gl::TraceGLApi"* }
%"class.gl::TraceGLApi" = type { %"class.gl::GLApi", %"class.gl::GLApi"* }
%"class.gl::GLApi" = type { i32 (...)** }
%"class.std::__1::unique_ptr.186" = type { %"class.std::__1::__compressed_pair.187" }
%"class.std::__1::__compressed_pair.187" = type { %"struct.std::__1::__compressed_pair_elem.188" }
%"struct.std::__1::__compressed_pair_elem.188" = type { %"class.gl::LogGLApi"* }
%"class.gl::LogGLApi" = type { %"class.gl::GLApi", %"class.gl::GLApi"* }
%"class.std::__1::unique_ptr.195" = type { %"class.std::__1::__compressed_pair.196" }
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.gl::CurrentGL"* }
%"struct.gl::CurrentGL" = type { %"class.gl::GLApi"*, %"struct.gl::DriverGL"*, %"struct.gl::GLVersionInfo"* }
%"struct.gl::GLVersionInfo" = type opaque
%"class.gl::RealGLApi" = type { %"class.gl::GLApiBase", %"class.std::__1::vector.201", %"class.std::__1::vector.201", %"class.std::__1::basic_string", %"struct.gl::GLWorkarounds", %"class.std::__1::unique_ptr.105" }
%"class.gl::GLApiBase" = type { %"class.gl::GLApi", %"struct.gl::DriverGL"* }
%"class.std::__1::vector.201" = type { %"class.std::__1::__vector_base.202" }
%"class.std::__1::__vector_base.202" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"class.gl::GLStateRestorer"* }
%"class.gl::GLStateRestorer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.gl::GLVersionInfo"* }
%class.scoped_refptr.89 = type { %"class.gl::GLContext"* }
%class.scoped_refptr.90 = type { %"class.gl::GLSurface"* }
%"class.gl::GLSurface" = type opaque
%class.scoped_refptr.91 = type { %"class.gpu::gles2::FeatureInfo"* }
%"class.gpu::gles2::FeatureInfo" = type { %"class.base::RefCounted.92", i8, [3 x i8], %"struct.gpu::gles2::Validators", %"struct.gpu::gles2::DisallowedFeatures", i32, i8, %"class.base::internal::flat_tree", %"struct.gpu::gles2::FeatureInfo::FeatureFlags", %"class.gpu::GpuDriverBugWorkarounds", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.105" }
%"class.base::RefCounted.92" = type { %"class.base::subtle::RefCountedBase" }
%"struct.gpu::gles2::Validators" = type <{ %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::BackbufferAttachmentValidator", %"class.gpu::gles2::Validators::BlitFilterValidator", %"class.gpu::gles2::Validators::BufferModeValidator", %"class.gpu::gles2::Validators::BufferParameterValidator", %"class.gpu::gles2::Validators::BufferParameter64Validator", %"class.gpu::gles2::Validators::BufferTargetValidator", %"class.gpu::gles2::Validators::BufferUsageValidator", i8, %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::BufferfvValidator", %"class.gpu::gles2::Validators::BufferivValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::CmpFunctionValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::DrawModeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::FaceModeValidator", %"class.gpu::gles2::Validators::FaceTypeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::GetMaxIndexTypeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::HintModeValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::IndexedBufferTargetValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::InternalFormatParameterValidator", %"class.gpu::gles2::Validators::MapBufferAccessValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::PixelStoreAlignmentValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::QueryObjectParameterValidator", %"class.gpu::gles2::Validators::QueryTargetValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::ResetStatusValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::ShaderPrecisionValidator", %"class.gpu::gles2::Validators::ShaderTypeValidator", %"class.gpu::gles2::Validators::SharedImageAccessModeValidator", [5 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::StencilOpValidator", %"class.gpu::gles2::Validators::StringTypeValidator", %"class.gpu::gles2::Validators::SwapBuffersFlagsValidator", [5 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::SyncParameterValidator", %"class.gpu::gles2::Validators::Texture3DTargetValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureCompareFuncValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureMagFilterModeValidator", %"class.gpu::gles2::Validators::TextureMinFilterModeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureSrgbDecodeExtValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureSwizzleValidator", [7 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TextureUsageValidator", %"class.gpu::gles2::Validators::TextureWrapModeValidator", [6 x i8], %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::TransformFeedbackPrimitiveModeValidator", %"class.gpu::gles2::Validators::UniformBlockParameterValidator", %"class.gpu::gles2::Validators::UniformParameterValidator", %"class.gpu::gles2::Validators::VertexAttribITypeValidator", [4 x i8], %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::ValueValidator", %"class.gpu::gles2::Validators::WindowRectanglesModeValidator", [7 x i8] }>
%"class.gpu::gles2::Validators::BackbufferAttachmentValidator" = type { i8 }
%"class.gpu::gles2::Validators::BlitFilterValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferParameter64Validator" = type { i8 }
%"class.gpu::gles2::Validators::BufferTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferUsageValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferfvValidator" = type { i8 }
%"class.gpu::gles2::Validators::BufferivValidator" = type { i8 }
%"class.gpu::gles2::Validators::CmpFunctionValidator" = type { i8 }
%"class.gpu::gles2::Validators::DrawModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::FaceModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::FaceTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::GetMaxIndexTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::HintModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::IndexedBufferTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::InternalFormatParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::MapBufferAccessValidator" = type { i8 }
%"class.gpu::gles2::Validators::PixelStoreAlignmentValidator" = type { i8 }
%"class.gpu::gles2::Validators::QueryObjectParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::QueryTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::ResetStatusValidator" = type { i8 }
%"class.gpu::gles2::Validators::ShaderPrecisionValidator" = type { i8 }
%"class.gpu::gles2::Validators::ShaderTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::SharedImageAccessModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::StencilOpValidator" = type { i8 }
%"class.gpu::gles2::Validators::StringTypeValidator" = type { i8 }
%"class.gpu::gles2::Validators::SwapBuffersFlagsValidator" = type { i8 }
%"class.gpu::gles2::Validators::SyncParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::Texture3DTargetValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureCompareFuncValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureMagFilterModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureMinFilterModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureSrgbDecodeExtValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureSwizzleValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureUsageValidator" = type { i8 }
%"class.gpu::gles2::Validators::TextureWrapModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::TransformFeedbackPrimitiveModeValidator" = type { i8 }
%"class.gpu::gles2::Validators::UniformBlockParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::UniformParameterValidator" = type { i8 }
%"class.gpu::gles2::Validators::VertexAttribITypeValidator" = type { i8 }
%"class.gpu::ValueValidator" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { i32* }
%"class.gpu::gles2::Validators::WindowRectanglesModeValidator" = type { i8 }
%"struct.gpu::gles2::DisallowedFeatures" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.98" }
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %"class.base::BasicStringPiece"*, %"class.base::BasicStringPiece"*, %"class.std::__1::__compressed_pair.100" }
%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.base::BasicStringPiece"* }
%"struct.gpu::gles2::FeatureInfo::FeatureFlags" = type <{ %"struct.gpu::GpuMemoryBufferFormatSet", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }>
%"struct.gpu::GpuMemoryBufferFormatSet" = type { i32 }
%"class.gpu::GpuDriverBugWorkarounds" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32 }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"struct.gpu::gles2::ContextState"* }
%"struct.gpu::gles2::ContextState" = type opaque
%"class.gl::ProgressReporter" = type { i32 (...)** }
%class.sk_sp.117 = type { %class.GrDirectContext* }
%"class.std::__1::unique_ptr.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.120" }
%"struct.std::__1::__compressed_pair_elem.120" = type { %"class.gpu::ServiceTransferCache"* }
%"class.gpu::ServiceTransferCache" = type opaque
%"class.std::__1::vector.124" = type { %"class.std::__1::__vector_base.125" }
%"class.std::__1::__vector_base.125" = type { i8*, i8*, %"class.std::__1::__compressed_pair.126" }
%"class.std::__1::__compressed_pair.126" = type { %"struct.std::__1::__compressed_pair_elem.127" }
%"struct.std::__1::__compressed_pair_elem.127" = type { i8* }
%"class.gpu::raster::GrShaderCache" = type opaque
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.131", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.131" = type { %"class.std::__1::__vector_base.132" }
%"class.std::__1::__vector_base.132" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.133" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.134" }
%"struct.std::__1::__compressed_pair_elem.134" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::MRUCache" = type { %"class.base::MRUCacheBase" }
%"class.base::MRUCacheBase" = type { i32 (...)**, %"class.std::__1::list", %"class.std::__1::map", i64 }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.138" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.142" }
%"class.std::__1::__tree.142" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.143", %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.143" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.std::__1::unique_ptr.151" = type { %"class.std::__1::__compressed_pair.152" }
%"class.std::__1::__compressed_pair.152" = type { %"struct.std::__1::__compressed_pair_elem.153" }
%"struct.std::__1::__compressed_pair_elem.153" = type { %"class.gpu::ExternalSemaphorePool"* }
%"class.gpu::ExternalSemaphorePool" = type opaque
%"class.base::WeakPtrFactory.157" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.gpu::SharedImageBacking" = type { i32 (...)**, %"class.absl::optional.217", %"struct.gpu::Mailbox", i32, %"class.gfx::Size", %"class.gfx::ColorSpace", i32, i32, i32, i64, %"class.gpu::SharedImageFactory"*, i8, %"class.absl::optional.226", %"class.std::__1::vector.231" }
%"class.absl::optional.217" = type { %"class.absl::optional_internal::optional_data.218" }
%"class.absl::optional_internal::optional_data.218" = type { %"class.absl::optional_internal::optional_data_base.219" }
%"class.absl::optional_internal::optional_data_base.219" = type { %"class.absl::optional_internal::optional_data_dtor_base.220" }
%"class.absl::optional_internal::optional_data_dtor_base.220" = type { i8, %union.anon.221 }
%union.anon.221 = type { %"class.base::Lock" }
%"struct.gpu::Mailbox" = type { [16 x i8] }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::ColorSpace" = type { i8, i8, i8, i8, [9 x float], [7 x float] }
%"class.gpu::SharedImageFactory" = type opaque
%"class.absl::optional.226" = type { %"class.absl::optional_internal::optional_data.227" }
%"class.absl::optional_internal::optional_data.227" = type { %"class.absl::optional_internal::optional_data_base.228" }
%"class.absl::optional_internal::optional_data_base.228" = type { %"class.absl::optional_internal::optional_data_dtor_base.229" }
%"class.absl::optional_internal::optional_data_dtor_base.229" = type { i8, %union.anon.230 }
%union.anon.230 = type { %"class.gpu::SharedImageBacking::ScopedWriteUMA" }
%"class.gpu::SharedImageBacking::ScopedWriteUMA" = type { i8 }
%"class.std::__1::vector.231" = type { %"class.std::__1::__vector_base.232" }
%"class.std::__1::__vector_base.232" = type { %"class.gpu::SharedImageRepresentation"**, %"class.gpu::SharedImageRepresentation"**, %"class.std::__1::__compressed_pair.241" }
%"class.gpu::SharedImageRepresentation" = type <{ i32 (...)**, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, i8, i8, [6 x i8] }>
%"class.gpu::SharedImageManager" = type <{ %"class.absl::optional.217", %"class.base::internal::flat_tree.233", i8, [7 x i8] }>
%"class.base::internal::flat_tree.233" = type { %"class.std::__1::vector.234" }
%"class.std::__1::vector.234" = type { %"class.std::__1::__vector_base.235" }
%"class.std::__1::__vector_base.235" = type { %"class.std::__1::unique_ptr.214"*, %"class.std::__1::unique_ptr.214"*, %"class.std::__1::__compressed_pair.236" }
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.gpu::SharedImageBacking"* }
%"class.std::__1::__compressed_pair.236" = type { %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.std::__1::unique_ptr.214"* }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.gpu::SharedImageRepresentation"** }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", i8* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.250, i32, i32 }
%class.sk_sp.250 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.4" }
%struct.SkISize = type { i32, i32 }
%"class.gpu::raster::(anonymous namespace)::WrappedSkImage" = type { %"class.gpu::ClearTrackingSharedImageBacking", %class.scoped_refptr, %class.GrBackendTexture, %class.sk_sp.257, i32, %"class.gpu::SharedMemoryRegionWrapper", i64 }
%"class.gpu::ClearTrackingSharedImageBacking" = type { %"class.gpu::SharedImageBacking", %"class.gfx::Rect" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%class.GrBackendTexture = type { i8, i32, i32, i8, i32, %union.anon.254, %class.sk_sp.256 }
%union.anon.254 = type { %class.GrGLBackendTextureInfo, [120 x i8] }
%class.GrGLBackendTextureInfo = type { %struct.GrGLTextureInfo, %class.GrGLTextureParameters* }
%struct.GrGLTextureInfo = type { i32, i32, i32 }
%class.GrGLTextureParameters = type { %class.SkNVRefCnt.255, %"struct.GrGLTextureParameters::SamplerOverriddenState", %"struct.GrGLTextureParameters::NonsamplerState", i64 }
%class.SkNVRefCnt.255 = type { %"struct.std::__1::atomic" }
%"struct.GrGLTextureParameters::SamplerOverriddenState" = type <{ i32, i32, i32, i32, float, float, i8, [3 x i8] }>
%"struct.GrGLTextureParameters::NonsamplerState" = type <{ i32, i32, i8, [3 x i8] }>
%class.sk_sp.256 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type opaque
%class.sk_sp.257 = type { %class.SkPromiseImageTexture* }
%class.SkPromiseImageTexture = type <{ %class.SkNVRefCnt.258, [4 x i8], %class.SkSTArray, %class.GrBackendTexture, i32, [4 x i8] }>
%class.SkNVRefCnt.258 = type { %"struct.std::__1::atomic" }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [64 x i8] }
%class.SkTArray = type { %class.GrUniqueKeyInvalidatedMessage*, i64 }
%class.GrUniqueKeyInvalidatedMessage = type <{ %class.GrUniqueKey, i32, i8, [3 x i8] }>
%class.GrUniqueKey = type { %class.GrResourceKey, %class.sk_sp.260, i8* }
%class.GrResourceKey = type { %class.SkAutoSTMalloc }
%class.SkAutoSTMalloc = type <{ i32*, %union.anon.259, [4 x i8] }>
%union.anon.259 = type { [7 x i32] }
%class.sk_sp.260 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.261, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.261 = type { %"struct.std::__1::atomic" }
%"class.gpu::SharedMemoryRegionWrapper" = type { %"class.base::WritableSharedMemoryMapping", i64, i64 }
%"class.base::WritableSharedMemoryMapping" = type { %"class.base::SharedMemoryMapping" }
%"class.base::SharedMemoryMapping" = type { i32 (...)**, i8*, i64, i64, %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%struct.GrVkImageInfo = type <{ %struct.VkImage_T*, %struct.GrVkAlloc, i32, i32, i32, i32, i32, i32, i32, i8, [3 x i8], %struct.GrVkYcbcrConversionInfo, i32, [4 x i8] }>
%struct.VkImage_T = type opaque
%struct.GrVkAlloc = type <{ %struct.VkDeviceMemory_T*, i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%struct.VkDeviceMemory_T = type opaque
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"struct.gfx::GpuMemoryBufferHandle" = type { i32, %"class.gfx::GenericSharedMemoryId", %"class.base::UnsafeSharedMemoryRegion", i32, i32, %"struct.gfx::NativePixmapHandle" }
%"class.gfx::GenericSharedMemoryId" = type { i32 }
%"class.base::UnsafeSharedMemoryRegion" = type { %"class.base::subtle::PlatformSharedMemoryRegion" }
%"class.base::subtle::PlatformSharedMemoryRegion" = type { %"struct.base::subtle::ScopedFDPair", i32, i64, %"class.base::UnguessableToken" }
%"struct.base::subtle::ScopedFDPair" = type { %"class.base::ScopedGeneric", %"class.base::ScopedGeneric" }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"struct.gfx::NativePixmapHandle" = type { %"class.std::__1::vector.265", i64 }
%"class.std::__1::vector.265" = type { %"class.std::__1::__vector_base.266" }
%"class.std::__1::__vector_base.266" = type { %"struct.gfx::NativePixmapPlane"*, %"struct.gfx::NativePixmapPlane"*, %"class.std::__1::__compressed_pair.267" }
%"struct.gfx::NativePixmapPlane" = type { i32, i64, i64, %"class.base::ScopedGeneric" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"struct.gfx::NativePixmapPlane"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i8*, %"class.std::__1::__list_iterator" }
%"class.std::__1::__list_iterator" = type { %"struct.std::__1::__list_node_base"* }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkSurfaceProps = type { i32, i32 }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%"class.gfx::GpuFence" = type { %"struct.gfx::GpuFenceHandle" }
%"struct.gfx::GpuFenceHandle" = type { %"class.base::ScopedGeneric" }
%"class.base::trace_event::MemoryAllocatorDump" = type { %"class.std::__1::basic_string", %"class.base::trace_event::MemoryAllocatorDumpGuid", i32, i32, %"class.absl::optional.278", %"class.std::__1::vector.283" }
%"class.base::trace_event::MemoryAllocatorDumpGuid" = type { i64 }
%"class.absl::optional.278" = type { %"class.absl::optional_internal::optional_data.279" }
%"class.absl::optional_internal::optional_data.279" = type { %"class.absl::optional_internal::optional_data_base.280" }
%"class.absl::optional_internal::optional_data_base.280" = type { %"class.absl::optional_internal::optional_data_dtor_base.281" }
%"class.absl::optional_internal::optional_data_dtor_base.281" = type { i8, %union.anon.282 }
%union.anon.282 = type { i64 }
%"class.std::__1::vector.283" = type { %"class.std::__1::__vector_base.284" }
%"class.std::__1::__vector_base.284" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"class.std::__1::__compressed_pair.285" }
%"struct.base::trace_event::MemoryAllocatorDump::Entry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i64, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.285" = type { %"struct.std::__1::__compressed_pair_elem.286" }
%"struct.std::__1::__compressed_pair_elem.286" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"* }
%"class.base::trace_event::ProcessMemoryDump" = type { %"class.base::UnguessableToken", %"class.std::__1::map.290", %"class.std::__1::map.301", %"struct.base::trace_event::MemoryDumpArgs", %"class.std::__1::unique_ptr.312" }
%"class.std::__1::map.290" = type { %"class.std::__1::__tree.291" }
%"class.std::__1::__tree.291" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.292", %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"class.std::__1::map.301" = type { %"class.std::__1::__tree.302" }
%"class.std::__1::__tree.302" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.303", %"class.std::__1::__compressed_pair.307" }
%"class.std::__1::__compressed_pair.303" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"class.std::__1::__compressed_pair.307" = type { %"struct.std::__1::__compressed_pair_elem.87" }
%"struct.base::trace_event::MemoryDumpArgs" = type { i32, i32, i64 }
%"class.std::__1::unique_ptr.312" = type { %"class.std::__1::__compressed_pair.313" }
%"class.std::__1::__compressed_pair.313" = type { %"struct.std::__1::__compressed_pair_elem.314" }
%"struct.std::__1::__compressed_pair_elem.314" = type { %"class.base::trace_event::MemoryAllocatorDump"* }
%"class.gpu::MailboxManager" = type { i32 (...)** }
%"class.gpu::SharedImageRepresentationSkia" = type { %"class.gpu::SharedImageRepresentation.base", [6 x i8] }
%"class.gpu::SharedImageRepresentation.base" = type <{ i32 (...)**, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*, i8, i8 }>
%"class.gpu::SharedImageRepresentationMemory" = type { %"class.gpu::SharedImageRepresentation.base", [6 x i8] }
%"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia" = type { %"class.gpu::SharedImageRepresentationSkia.base", %class.SkSurface* }
%"class.gpu::SharedImageRepresentationSkia.base" = type { %"class.gpu::SharedImageRepresentation.base" }
%class.sk_sp.331 = type { %class.SkSurface* }
%"class.std::__1::vector.338" = type opaque
%"class.std::__1::unique_ptr.339" = type { %"class.std::__1::__compressed_pair.340" }
%"class.std::__1::__compressed_pair.340" = type { %"struct.std::__1::__compressed_pair_elem.341" }
%"struct.std::__1::__compressed_pair_elem.341" = type { %class.GrBackendSurfaceMutableState* }
%class.GrBackendSurfaceMutableState = type <{ %union.anon.342, i32, i8, [3 x i8] }>
%union.anon.342 = type { %class.GrVkSharedImageInfo }
%class.GrVkSharedImageInfo = type { %"struct.std::__1::atomic.343", %"struct.std::__1::atomic.347" }
%"struct.std::__1::atomic.343" = type { %"struct.std::__1::__atomic_base.344" }
%"struct.std::__1::__atomic_base.344" = type { %"struct.std::__1::__cxx_atomic_impl.345" }
%"struct.std::__1::__cxx_atomic_impl.345" = type { %"struct.std::__1::__cxx_atomic_base_impl.346" }
%"struct.std::__1::__cxx_atomic_base_impl.346" = type { i32 }
%"struct.std::__1::atomic.347" = type { %"struct.std::__1::__atomic_base.348" }
%"struct.std::__1::__atomic_base.348" = type { %"struct.std::__1::__atomic_base.349" }
%"struct.std::__1::__atomic_base.349" = type { %"struct.std::__1::__cxx_atomic_impl.350" }
%"struct.std::__1::__cxx_atomic_impl.350" = type { %"struct.std::__1::__cxx_atomic_base_impl.351" }
%"struct.std::__1::__cxx_atomic_base_impl.351" = type { i32 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.355, [384 x i64], %class.sk_sp.356, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.357", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.363" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.355 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.356 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.363" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationMemory" = type { %"class.gpu::SharedImageRepresentationMemory.base", [6 x i8] }
%"class.gpu::SharedImageRepresentationMemory.base" = type { %"class.gpu::SharedImageRepresentation.base" }

$_ZN3gpu18SharedImageBacking18MarkForDestructionEv = comdat any

$_ZNSt3__16__treeINS_12__value_typeIPvNS_15__list_iteratorINS_4pairIS2_5sk_spI9SkSurfaceEEES2_EEEENS_19__map_value_compareIS2_SA_NS_4lessIS2_EELb1EEENS_9allocatorISA_EEE14__erase_uniqueIS2_EEmRKT_ = comdat any

$_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base12MRUCacheBaseIPv5sk_spI9SkSurfaceENSt3__14lessIS1_EENS_19MRUCacheStandardMapEE3PutIRS4_EENS5_15__list_iteratorINS5_4pairIS1_S4_EES1_EERKS1_OT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

@_ZTVN3gpu6raster21WrappedSkImageFactoryE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::raster::WrappedSkImageFactory"*)* @_ZN3gpu6raster21WrappedSkImageFactoryD2Ev to i8*), i8* bitcast (void (%"class.gpu::raster::WrappedSkImageFactory"*)* @_ZN3gpu6raster21WrappedSkImageFactoryD0Ev to i8*), i8* bitcast (%"class.gpu::SharedImageBacking"* (%"class.gpu::raster::WrappedSkImageFactory"*, %"struct.gpu::Mailbox"*, i32, i32, %"class.gfx::Size"*, %"class.gfx::ColorSpace"*, i32, i32, i32, i1)* @_ZN3gpu6raster21WrappedSkImageFactory17CreateSharedImageERKNS_7MailboxEN3viz14ResourceFormatEjRKN3gfx4SizeERKNS7_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypejb to i8*), i8* bitcast (%"class.gpu::SharedImageBacking"* (%"class.gpu::raster::WrappedSkImageFactory"*, %"struct.gpu::Mailbox"*, i32, %"class.gfx::Size"*, %"class.gfx::ColorSpace"*, i32, i32, i32, %"class.base::span"*)* @_ZN3gpu6raster21WrappedSkImageFactory17CreateSharedImageERKNS_7MailboxEN3viz14ResourceFormatERKN3gfx4SizeERKNS7_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypejN4base4spanIKhLm18446744073709551615EEE to i8*), i8* bitcast (%"class.gpu::SharedImageBacking"* (%"class.gpu::raster::WrappedSkImageFactory"*, %"struct.gpu::Mailbox"*, i32, %"struct.gfx::GpuMemoryBufferHandle"*, i32, i32, i32, %"class.gfx::Size"*, %"class.gfx::ColorSpace"*, i32, i32, i32)* @_ZN3gpu6raster21WrappedSkImageFactory17CreateSharedImageERKNS_7MailboxEiN3gfx21GpuMemoryBufferHandleENS5_12BufferFormatENS5_11BufferPlaneEjRKNS5_4SizeERKNS5_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypej to i8*), i8* bitcast (i1 (%"class.gpu::raster::WrappedSkImageFactory"*, i32)* @_ZN3gpu6raster21WrappedSkImageFactory24CanImportGpuMemoryBufferEN3gfx19GpuMemoryBufferTypeE to i8*)] }, align 8
@_ZTVN3gpu6raster12_GLOBAL__N_114WrappedSkImageE = internal unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*)* @_ZN3gpu6raster12_GLOBAL__N_114WrappedSkImageD2Ev to i8*), i8* bitcast (void (%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*)* @_ZN3gpu6raster12_GLOBAL__N_114WrappedSkImageD0Ev to i8*), i8* bitcast ({ i64, i64 } (%"class.gpu::ClearTrackingSharedImageBacking"*)* @_ZNK3gpu31ClearTrackingSharedImageBacking11ClearedRectEv to i8*), i8* bitcast (void (%"class.gpu::ClearTrackingSharedImageBacking"*, %"class.gfx::Rect"*)* @_ZN3gpu31ClearTrackingSharedImageBacking14SetClearedRectERKN3gfx4RectE to i8*), i8* bitcast (void (%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*, %"class.gfx::GpuFence"*)* @_ZN3gpu6raster12_GLOBAL__N_114WrappedSkImage6UpdateENSt3__110unique_ptrIN3gfx8GpuFenceENS3_14default_deleteIS6_EEEE to i8*), i8* bitcast (i1 (%"class.gpu::SharedImageBacking"*)* @_ZN3gpu18SharedImageBacking16PresentSwapChainEv to i8*), i8* bitcast (void (%"class.gpu::SharedImageBacking"*)* @_ZN3gpu18SharedImageBacking18MarkForDestructionEv to i8*), i8* bitcast (void (%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*, %"class.std::__1::basic_string"*, %"class.base::trace_event::MemoryAllocatorDump"*, %"class.base::trace_event::ProcessMemoryDump"*, i64)* @_ZN3gpu6raster12_GLOBAL__N_114WrappedSkImage12OnMemoryDumpERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4base11trace_event19MemoryAllocatorDumpEPNSD_17ProcessMemoryDumpEm to i8*), i8* bitcast (i1 (%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*, %"class.gpu::MailboxManager"*)* @_ZN3gpu6raster12_GLOBAL__N_114WrappedSkImage20ProduceLegacyMailboxEPNS_14MailboxManagerE to i8*), i8* bitcast (i64 (%"class.gpu::SharedImageBacking"*)* @_ZNK3gpu18SharedImageBacking27EstimatedSizeForMemTrackingEv to i8*), i8* bitcast (void ()* @_ZN3gpu18SharedImageBacking15GetNativePixmapEv to i8*), i8* bitcast (void ()* @_ZN3gpu18SharedImageBacking16ProduceGLTextureEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE to i8*), i8* bitcast (void ()* @_ZN3gpu18SharedImageBacking28ProduceRGBEmulationGLTextureEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE to i8*), i8* bitcast (void ()* @_ZN3gpu18SharedImageBacking27ProduceGLTexturePassthroughEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE to i8*), i8* bitcast (%"class.gpu::SharedImageRepresentationSkia"* (%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*, %"class.gpu::SharedImageManager"*, %"class.gpu::MemoryTypeTracker"*, %"class.gpu::SharedContextState"*)* @_ZN3gpu6raster12_GLOBAL__N_114WrappedSkImage11ProduceSkiaEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE13scoped_refptrINS_18SharedContextStateEE to i8*), i8* bitcast (void ()* @_ZN3gpu18SharedImageBacking11ProduceDawnEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerEP14WGPUDeviceImpl to i8*), i8* bitcast (void ()* @_ZN3gpu18SharedImageBacking14ProduceOverlayEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE to i8*), i8* bitcast (void ()* @_ZN3gpu18SharedImageBacking16ProduceVASurfaceEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerEPNS_24VaapiDependenciesFactoryE to i8*), i8* bitcast (%"class.gpu::SharedImageRepresentationMemory"* (%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*, %"class.gpu::SharedImageManager"*, %"class.gpu::MemoryTypeTracker"*)* @_ZN3gpu6raster12_GLOBAL__N_114WrappedSkImage13ProduceMemoryEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE to i8*)] }, align 8
@_ZTVN3gpu6raster12_GLOBAL__N_132WrappedSkImageRepresentationSkiaE = internal unnamed_addr constant { [12 x i8*] } { [12 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"*)* @_ZN3gpu6raster12_GLOBAL__N_132WrappedSkImageRepresentationSkiaD2Ev to i8*), i8* bitcast (void (%"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"*)* @_ZN3gpu6raster12_GLOBAL__N_132WrappedSkImageRepresentationSkiaD0Ev to i8*), i8* bitcast (i1 (%"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"*)* @_ZN3gpu6raster12_GLOBAL__N_132WrappedSkImageRepresentationSkia36SupportsMultipleConcurrentReadAccessEv to i8*), i8* bitcast (void (%class.sk_sp.331*, %"class.gpu::SharedImageRepresentationSkia"*, i32, %class.SkSurfaceProps*, %"class.std::__1::vector.338"*, %"class.std::__1::vector.338"*, %"class.std::__1::unique_ptr.339"*)* @_ZN3gpu29SharedImageRepresentationSkia16BeginWriteAccessEiRK14SkSurfacePropsPNSt3__16vectorI18GrBackendSemaphoreNS4_9allocatorIS6_EEEESA_PNS4_10unique_ptrI28GrBackendSurfaceMutableStateNS4_14default_deleteISC_EEEE to i8*), i8* bitcast (void (%class.sk_sp.331*, %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"*, i32, %class.SkSurfaceProps*, %"class.std::__1::vector.338"*, %"class.std::__1::vector.338"*)* @_ZN3gpu6raster12_GLOBAL__N_132WrappedSkImageRepresentationSkia16BeginWriteAccessEiRK14SkSurfacePropsPNSt3__16vectorI18GrBackendSemaphoreNS6_9allocatorIS8_EEEESC_ to i8*), i8* bitcast (void (%class.sk_sp.257*, %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"*, %"class.std::__1::vector.338"*, %"class.std::__1::vector.338"*, %"class.std::__1::unique_ptr.339"*)* @_ZN3gpu6raster12_GLOBAL__N_132WrappedSkImageRepresentationSkia16BeginWriteAccessEPNSt3__16vectorI18GrBackendSemaphoreNS3_9allocatorIS5_EEEES9_PNS3_10unique_ptrI28GrBackendSurfaceMutableStateNS3_14default_deleteISB_EEEE to i8*), i8* bitcast (void (%"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"*, %class.sk_sp.331*)* @_ZN3gpu6raster12_GLOBAL__N_132WrappedSkImageRepresentationSkia14EndWriteAccessE5sk_spI9SkSurfaceE to i8*), i8* bitcast (void (%class.sk_sp.257*, %"class.gpu::SharedImageRepresentationSkia"*, %"class.std::__1::vector.338"*, %"class.std::__1::vector.338"*, %"class.std::__1::unique_ptr.339"*)* @_ZN3gpu29SharedImageRepresentationSkia15BeginReadAccessEPNSt3__16vectorI18GrBackendSemaphoreNS1_9allocatorIS3_EEEES7_PNS1_10unique_ptrI28GrBackendSurfaceMutableStateNS1_14default_deleteIS9_EEEE to i8*), i8* bitcast (void (%class.sk_sp.257*, %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"*, %"class.std::__1::vector.338"*, %"class.std::__1::vector.338"*)* @_ZN3gpu6raster12_GLOBAL__N_132WrappedSkImageRepresentationSkia15BeginReadAccessEPNSt3__16vectorI18GrBackendSemaphoreNS3_9allocatorIS5_EEEES9_ to i8*), i8* bitcast (void (%"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"*)* @_ZN3gpu6raster12_GLOBAL__N_132WrappedSkImageRepresentationSkia13EndReadAccessEv to i8*)] }, align 8
@.str = private unnamed_addr constant [53 x i8] c"../../gpu/command_buffer/service/wrapped_sk_image.cc\00", align 1
@.str.1 = private unnamed_addr constant [33 x i8] c"MakeFromBackendTexture() failed.\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZTVN3gpu6raster12_GLOBAL__N_134WrappedSkImageRepresentationMemoryE = internal unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.gpu::SharedImageRepresentation"*)* @_ZN3gpu25SharedImageRepresentationD2Ev to i8*), i8* bitcast (void (%"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationMemory"*)* @_ZN3gpu6raster12_GLOBAL__N_134WrappedSkImageRepresentationMemoryD0Ev to i8*), i8* bitcast (void (%class.SkPixmap*, %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationMemory"*)* @_ZN3gpu6raster12_GLOBAL__N_134WrappedSkImageRepresentationMemory15BeginReadAccessEv to i8*)] }, align 8

@_ZN3gpu6raster21WrappedSkImageFactoryC1E13scoped_refptrINS_18SharedContextStateEE = hidden unnamed_addr alias void (%"class.gpu::raster::WrappedSkImageFactory"*, %"class.gpu::SharedContextState"*), void (%"class.gpu::raster::WrappedSkImageFactory"*, %"class.gpu::SharedContextState"*)* @_ZN3gpu6raster21WrappedSkImageFactoryC2E13scoped_refptrINS_18SharedContextStateEE
@_ZN3gpu6raster21WrappedSkImageFactoryD1Ev = hidden unnamed_addr alias void (%"class.gpu::raster::WrappedSkImageFactory"*), void (%"class.gpu::raster::WrappedSkImageFactory"*)* @_ZN3gpu6raster21WrappedSkImageFactoryD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu6raster21WrappedSkImageFactoryC2E13scoped_refptrINS_18SharedContextStateEE(%"class.gpu::raster::WrappedSkImageFactory"* nocapture, %"class.gpu::SharedContextState"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.gpu::SharedContextState"* %1 to i64
  %4 = getelementptr inbounds %"class.gpu::raster::WrappedSkImageFactory", %"class.gpu::raster::WrappedSkImageFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gpu6raster21WrappedSkImageFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.gpu::raster::WrappedSkImageFactory", %"class.gpu::raster::WrappedSkImageFactory"* %0, i64 0, i32 1
  %6 = bitcast %class.scoped_refptr* %5 to i64*
  store i64 %3, i64* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu6raster21WrappedSkImageFactoryD2Ev(%"class.gpu::raster::WrappedSkImageFactory"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::raster::WrappedSkImageFactory", %"class.gpu::raster::WrappedSkImageFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gpu6raster21WrappedSkImageFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::raster::WrappedSkImageFactory", %"class.gpu::raster::WrappedSkImageFactory"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %3, align 8
  %5 = icmp eq %"class.gpu::SharedContextState"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %4, i64 0, i32 2
  %8 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #9
  %9 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 -4
  %14 = bitcast %"class.base::RefCounted"* %13 to %"class.gpu::SharedContextState"*
  %15 = bitcast %"class.base::RefCounted"* %13 to void (%"class.gpu::SharedContextState"*)***
  %16 = load void (%"class.gpu::SharedContextState"*)**, void (%"class.gpu::SharedContextState"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.gpu::SharedContextState"*)*, void (%"class.gpu::SharedContextState"*)** %16, i64 1
  %18 = load void (%"class.gpu::SharedContextState"*)*, void (%"class.gpu::SharedContextState"*)** %17, align 8
  tail call void %18(%"class.gpu::SharedContextState"* nonnull %14) #9
  br label %19

19:                                               ; preds = %1, %6, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3gpu6raster21WrappedSkImageFactoryD0Ev(%"class.gpu::raster::WrappedSkImageFactory"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::raster::WrappedSkImageFactory", %"class.gpu::raster::WrappedSkImageFactory"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN3gpu6raster21WrappedSkImageFactoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::raster::WrappedSkImageFactory", %"class.gpu::raster::WrappedSkImageFactory"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %3, align 8
  %5 = icmp eq %"class.gpu::SharedContextState"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %4, i64 0, i32 2
  %8 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %8) #9
  %9 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 0, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %19

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %7, i64 -4
  %14 = bitcast %"class.base::RefCounted"* %13 to %"class.gpu::SharedContextState"*
  %15 = bitcast %"class.base::RefCounted"* %13 to void (%"class.gpu::SharedContextState"*)***
  %16 = load void (%"class.gpu::SharedContextState"*)**, void (%"class.gpu::SharedContextState"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.gpu::SharedContextState"*)*, void (%"class.gpu::SharedContextState"*)** %16, i64 1
  %18 = load void (%"class.gpu::SharedContextState"*)*, void (%"class.gpu::SharedContextState"*)** %17, align 8
  tail call void %18(%"class.gpu::SharedContextState"* nonnull %14) #9
  br label %19

19:                                               ; preds = %1, %6, %12
  %20 = bitcast %"class.gpu::raster::WrappedSkImageFactory"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::SharedImageBacking"* @_ZN3gpu6raster21WrappedSkImageFactory17CreateSharedImageERKNS_7MailboxEN3viz14ResourceFormatEjRKN3gfx4SizeERKNS7_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypejb(%"class.gpu::raster::WrappedSkImageFactory"*, %"struct.gpu::Mailbox"* dereferenceable(16), i32, i32, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::ColorSpace"* dereferenceable(68), i32, i32, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %11 = alloca %"class.base::span", align 8
  %12 = bitcast %"class.gpu::raster::WrappedSkImageFactory"* %0 to %"class.gpu::SharedImageBacking"* (%"class.gpu::raster::WrappedSkImageFactory"*, %"struct.gpu::Mailbox"*, i32, %"class.gfx::Size"*, %"class.gfx::ColorSpace"*, i32, i32, i32, %"class.base::span"*)***
  %13 = bitcast %"class.base::span"* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 16, i1 false)
  %14 = load %"class.gpu::SharedImageBacking"* (%"class.gpu::raster::WrappedSkImageFactory"*, %"struct.gpu::Mailbox"*, i32, %"class.gfx::Size"*, %"class.gfx::ColorSpace"*, i32, i32, i32, %"class.base::span"*)**, %"class.gpu::SharedImageBacking"* (%"class.gpu::raster::WrappedSkImageFactory"*, %"struct.gpu::Mailbox"*, i32, %"class.gfx::Size"*, %"class.gfx::ColorSpace"*, i32, i32, i32, %"class.base::span"*)*** %12, align 8
  %15 = getelementptr inbounds %"class.gpu::SharedImageBacking"* (%"class.gpu::raster::WrappedSkImageFactory"*, %"struct.gpu::Mailbox"*, i32, %"class.gfx::Size"*, %"class.gfx::ColorSpace"*, i32, i32, i32, %"class.base::span"*)*, %"class.gpu::SharedImageBacking"* (%"class.gpu::raster::WrappedSkImageFactory"*, %"struct.gpu::Mailbox"*, i32, %"class.gfx::Size"*, %"class.gfx::ColorSpace"*, i32, i32, i32, %"class.base::span"*)** %14, i64 3
  %16 = load %"class.gpu::SharedImageBacking"* (%"class.gpu::raster::WrappedSkImageFactory"*, %"struct.gpu::Mailbox"*, i32, %"class.gfx::Size"*, %"class.gfx::ColorSpace"*, i32, i32, i32, %"class.base::span"*)*, %"class.gpu::SharedImageBacking"* (%"class.gpu::raster::WrappedSkImageFactory"*, %"struct.gpu::Mailbox"*, i32, %"class.gfx::Size"*, %"class.gfx::ColorSpace"*, i32, i32, i32, %"class.base::span"*)** %15, align 8
  %17 = tail call %"class.gpu::SharedImageBacking"* %16(%"class.gpu::raster::WrappedSkImageFactory"* %0, %"struct.gpu::Mailbox"* dereferenceable(16) %1, i32 %2, %"class.gfx::Size"* dereferenceable(8) %4, %"class.gfx::ColorSpace"* dereferenceable(68) %5, i32 %6, i32 %7, i32 %8, %"class.base::span"* nonnull byval(%"class.base::span") align 8 %11) #9
  ret %"class.gpu::SharedImageBacking"* %17
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::SharedImageBacking"* @_ZN3gpu6raster21WrappedSkImageFactory17CreateSharedImageERKNS_7MailboxEN3viz14ResourceFormatERKN3gfx4SizeERKNS7_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypejN4base4spanIKhLm18446744073709551615EEE(%"class.gpu::raster::WrappedSkImageFactory"* nocapture readonly, %"struct.gpu::Mailbox"* dereferenceable(16), i32, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::ColorSpace"* dereferenceable(68), i32, i32, i32, %"class.base::span"* nocapture readonly byval(%"class.base::span") align 8) unnamed_addr #0 align 2 {
  %10 = alloca %struct.SkImageInfo, align 8
  %11 = bitcast %struct.SkImageInfo* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #9
  %12 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %10, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %10, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %3, i64 0, i32 0
  %15 = load i32, i32* %14, align 4, !noalias !2
  %16 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %3, i64 0, i32 1
  %17 = load i32, i32* %16, align 4, !noalias !2
  %18 = tail call i32 @_ZN3viz34ResourceFormatToClosestSkColorTypeEbNS_14ResourceFormatE(i1 zeroext true, i32 %2) #9, !noalias !2
  %19 = zext i32 %18 to i64
  %20 = or i64 %19, 4294967296
  %21 = zext i32 %17 to i64
  %22 = shl nuw i64 %21, 32
  %23 = zext i32 %15 to i64
  %24 = or i64 %22, %23
  %25 = bitcast %struct.SkImageInfo* %10 to i64*
  store i64 0, i64* %25, align 8, !alias.scope !5
  %26 = bitcast i32* %13 to i64*
  store i64 %20, i64* %26, align 8, !alias.scope !5
  %27 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %10, i64 0, i32 1
  %28 = bitcast %struct.SkISize* %27 to i64*
  store i64 %24, i64* %28, align 8, !alias.scope !5
  %29 = sext i32 %15 to i64
  %30 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %10, i64 0, i32 0
  %31 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %30) #9
  %32 = sext i32 %31 to i64
  %33 = mul nsw i64 %32, %29
  %34 = icmp ult i64 %33, 2147483648
  %35 = select i1 %34, i64 %33, i64 0
  %36 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* nonnull %10, i64 %35) #9
  %37 = call i8* @_Znwm(i64 504) #10
  %38 = bitcast i8* %37 to %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*
  %39 = getelementptr inbounds %"class.gpu::raster::WrappedSkImageFactory", %"class.gpu::raster::WrappedSkImageFactory"* %0, i64 0, i32 1, i32 0
  %40 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %39, align 8
  %41 = ptrtoint %"class.gpu::SharedContextState"* %40 to i64
  %42 = icmp eq %"class.gpu::SharedContextState"* %40, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %9
  %44 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %40, i64 0, i32 2, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %44) #9
  br label %45

45:                                               ; preds = %9, %43
  %46 = bitcast i8* %37 to %"class.gpu::ClearTrackingSharedImageBacking"*
  call void @_ZN3gpu31ClearTrackingSharedImageBackingC2ERKNS_7MailboxEN3viz14ResourceFormatERKN3gfx4SizeERKNS6_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypejmb(%"class.gpu::ClearTrackingSharedImageBacking"* nonnull %46, %"struct.gpu::Mailbox"* dereferenceable(16) %1, i32 %2, %"class.gfx::Size"* dereferenceable(8) %3, %"class.gfx::ColorSpace"* dereferenceable(68) %4, i32 %5, i32 %6, i32 %7, i64 %36, i1 zeroext false) #9
  %47 = bitcast i8* %37 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN3gpu6raster12_GLOBAL__N_114WrappedSkImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %47, align 8
  %48 = getelementptr inbounds i8, i8* %37, i64 232
  %49 = bitcast i8* %48 to i64*
  store i64 %41, i64* %49, align 8
  %50 = getelementptr inbounds i8, i8* %37, i64 240
  %51 = bitcast i8* %50 to %class.GrBackendTexture*
  call void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture* %51) #9
  %52 = getelementptr inbounds i8, i8* %37, i64 416
  %53 = bitcast i8* %52 to %class.SkPromiseImageTexture**
  store %class.SkPromiseImageTexture* null, %class.SkPromiseImageTexture** %53, align 8
  %54 = getelementptr inbounds i8, i8* %37, i64 424
  %55 = bitcast i8* %54 to i32*
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds i8, i8* %37, i64 432
  %57 = bitcast i8* %56 to %"class.gpu::SharedMemoryRegionWrapper"*
  call void @_ZN3gpu25SharedMemoryRegionWrapperC1Ev(%"class.gpu::SharedMemoryRegionWrapper"* %57) #9
  %58 = getelementptr inbounds i8, i8* %37, i64 496
  %59 = bitcast i8* %58 to i64*
  store i64 0, i64* %59, align 8
  %60 = ptrtoint i8* %37 to i64
  %61 = getelementptr inbounds %"class.base::span", %"class.base::span"* %8, i64 0, i32 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = getelementptr inbounds %"class.base::span", %"class.base::span"* %8, i64 0, i32 1
  %64 = load i8*, i8** %63, align 8
  %65 = call fastcc zeroext i1 @_ZN3gpu6raster12_GLOBAL__N_114WrappedSkImage10InitializeERK11SkImageInfoN4base4spanIKhLm18446744073709551615EEEm(%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* nonnull %38, %struct.SkImageInfo* nonnull dereferenceable(24) %10, i64 %62, i8* %64, i64 0)
  br i1 %65, label %71, label %66

66:                                               ; preds = %45
  %67 = bitcast i8* %37 to void (%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*)***
  %68 = load void (%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*)**, void (%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*)*** %67, align 8
  %69 = getelementptr inbounds void (%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*)*, void (%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*)** %68, i64 1
  %70 = load void (%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*)*, void (%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*)** %69, align 8
  call void %70(%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* nonnull %38) #9
  br label %71

71:                                               ; preds = %45, %66
  %72 = phi i64 [ 0, %66 ], [ %60, %45 ]
  %73 = load %class.SkColorSpace*, %class.SkColorSpace** %12, align 8
  %74 = icmp eq %class.SkColorSpace* %73, null
  br i1 %74, label %81, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = atomicrmw add i32* %76, i32 -1 acq_rel
  %78 = icmp eq i32 %77, 1
  br i1 %78, label %79, label %81

79:                                               ; preds = %75
  %80 = bitcast %class.SkColorSpace* %73 to i8*
  call void @_ZdlPv(i8* %80) #10
  br label %81

81:                                               ; preds = %71, %75, %79
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #9
  %82 = inttoptr i64 %72 to %"class.gpu::SharedImageBacking"*
  ret %"class.gpu::SharedImageBacking"* %82
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN3gpu6raster12_GLOBAL__N_114WrappedSkImage10InitializeERK11SkImageInfoN4base4spanIKhLm18446744073709551615EEEm(%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*, %struct.SkImageInfo* dereferenceable(24), i64, i8*, i64) unnamed_addr #0 align 2 {
  %6 = alloca %"class.gfx::Rect", align 4
  %7 = alloca %class.GrBackendTexture, align 8
  %8 = alloca %class.SkPixmap, align 8
  %9 = alloca %class.GrBackendTexture, align 8
  %10 = alloca %class.GrBackendTexture, align 8
  %11 = alloca %struct.GrGLTextureInfo, align 4
  %12 = alloca %struct.GrVkImageInfo, align 8
  %13 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 1, i32 0
  %14 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %13, align 8
  %15 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %14, i64 0, i32 30, i32 0, i32 0, i32 0, i32 0
  %16 = load i8, i8* %15, align 4, !range !8
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %179

18:                                               ; preds = %5
  %19 = tail call zeroext i1 @_ZN3gpu18SharedContextState11MakeCurrentEPN2gl9GLSurfaceEb(%"class.gpu::SharedContextState"* %14, %"class.gl::GLSurface"* null, i1 zeroext false) #9
  %20 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %13, align 8
  %21 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %20, i64 0, i32 29
  store i8 1, i8* %21, align 8
  %22 = icmp eq i8* %3, null
  br i1 %22, label %90, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 0, i32 0, i32 3
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %26, 7
  br i1 %27, label %28, label %39

28:                                               ; preds = %23
  %29 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %29) #9
  %30 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %13, align 8
  %31 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %30, i64 0, i32 15
  %32 = load %class.GrDirectContext*, %class.GrDirectContext** %31, align 8
  %33 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 0, i32 0, i32 4, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 0, i32 0, i32 4, i32 1
  %36 = load i32, i32* %35, align 4
  call void @_ZN15GrDirectContext30createCompressedBackendTextureEiiN7SkImage15CompressionTypeEPKvm11GrMipmapped11GrProtectedPFvPvES6_(%class.GrBackendTexture* nonnull sret %7, %class.GrDirectContext* %32, i32 %34, i32 %36, i32 1, i8* nonnull %3, i64 %2, i1 zeroext false, i1 zeroext false, void (i8*)* null, i8* null) #9
  %37 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 2
  %38 = call dereferenceable(176) %class.GrBackendTexture* @_ZN16GrBackendTextureaSERKS_(%class.GrBackendTexture* %37, %class.GrBackendTexture* nonnull dereferenceable(176) %7) #9
  call void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %29) #9
  br label %86

39:                                               ; preds = %23
  %40 = icmp eq i64 %4, 0
  br i1 %40, label %41, label %51

41:                                               ; preds = %39
  %42 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0
  %46 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %45) #9
  %47 = sext i32 %46 to i64
  %48 = mul nsw i64 %47, %44
  %49 = icmp ult i64 %48, 2147483648
  %50 = select i1 %49, i64 %48, i64 0
  br label %51

51:                                               ; preds = %39, %41
  %52 = phi i64 [ %4, %39 ], [ %50, %41 ]
  %53 = bitcast %class.SkPixmap* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %53) #9
  %54 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 2
  %55 = bitcast %struct.SkImageInfo* %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 24, i1 false)
  %56 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 0
  store i8* %3, i8** %56, align 8
  %57 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 1
  store i64 %52, i64* %57, align 8
  %58 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 2, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 0, i32 0
  %60 = load %class.SkColorSpace*, %class.SkColorSpace** %59, align 8
  %61 = icmp eq %class.SkColorSpace* %60, null
  br i1 %61, label %65, label %62

62:                                               ; preds = %51
  %63 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = atomicrmw add i32* %63, i32 1 monotonic
  br label %65

65:                                               ; preds = %51, %62
  store %class.SkColorSpace* %60, %class.SkColorSpace** %58, align 8
  %66 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %8, i64 0, i32 2, i32 0, i32 1
  %67 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %68 = bitcast i32* %67 to <2 x i64>*
  %69 = load <2 x i64>, <2 x i64>* %68, align 8
  %70 = bitcast i32* %66 to <2 x i64>*
  store <2 x i64> %69, <2 x i64>* %70, align 8
  %71 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %71) #9
  %72 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %13, align 8
  %73 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %72, i64 0, i32 15
  %74 = load %class.GrDirectContext*, %class.GrDirectContext** %73, align 8
  call void @_ZN15GrDirectContext20createBackendTextureEPK8SkPixmapi15GrSurfaceOrigin12GrRenderable11GrProtectedPFvPvES6_(%class.GrBackendTexture* nonnull sret %9, %class.GrDirectContext* %74, %class.SkPixmap* nonnull %8, i32 1, i32 0, i1 zeroext false, i1 zeroext false, void (i8*)* null, i8* null) #9
  %75 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 2
  %76 = call dereferenceable(176) %class.GrBackendTexture* @_ZN16GrBackendTextureaSERKS_(%class.GrBackendTexture* %75, %class.GrBackendTexture* nonnull dereferenceable(176) %9) #9
  call void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %71) #9
  %77 = load %class.SkColorSpace*, %class.SkColorSpace** %58, align 8
  %78 = icmp eq %class.SkColorSpace* %77, null
  br i1 %78, label %85, label %79

79:                                               ; preds = %65
  %80 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = atomicrmw add i32* %80, i32 -1 acq_rel
  %82 = icmp eq i32 %81, 1
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = bitcast %class.SkColorSpace* %77 to i8*
  call void @_ZdlPv(i8* %84) #10
  br label %85

85:                                               ; preds = %65, %79, %83
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %53) #9
  br label %86

86:                                               ; preds = %85, %28
  %87 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 2, i32 0
  %88 = load i8, i8* %87, align 8, !range !8
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %179, label %109

90:                                               ; preds = %18
  %91 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 176, i8* nonnull %91) #9
  %92 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %13, align 8
  %93 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %92, i64 0, i32 15
  %94 = load %class.GrDirectContext*, %class.GrDirectContext** %93, align 8
  %95 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 0, i32 0, i32 4, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 0, i32 0, i32 4, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 0, i32 0, i32 3
  %100 = load i32, i32* %99, align 8
  %101 = tail call i32 @_ZN3viz34ResourceFormatToClosestSkColorTypeEbNS_14ResourceFormatE(i1 zeroext true, i32 %100) #9
  call void @_ZN15GrDirectContext20createBackendTextureEii11SkColorType11GrMipmapped12GrRenderable11GrProtected(%class.GrBackendTexture* nonnull sret %10, %class.GrDirectContext* %94, i32 %96, i32 %98, i32 %101, i1 zeroext false, i1 zeroext true, i1 zeroext false) #9
  %102 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 2
  %103 = call dereferenceable(176) %class.GrBackendTexture* @_ZN16GrBackendTextureaSERKS_(%class.GrBackendTexture* %102, %class.GrBackendTexture* nonnull dereferenceable(176) %10) #9
  call void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture* nonnull %10) #9
  call void @llvm.lifetime.end.p0i8(i64 176, i8* nonnull %91) #9
  %104 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %102, i64 0, i32 0
  %105 = load i8, i8* %104, align 8, !range !8
  %106 = icmp eq i8 %105, 0
  br i1 %106, label %179, label %107

107:                                              ; preds = %90
  %108 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 2
  br label %126

109:                                              ; preds = %86
  %110 = bitcast %"class.gfx::Rect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %110) #9
  %111 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 0, i32 0, i32 4
  %112 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 0, i32 0
  store i32 0, i32* %112, align 4
  %113 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 0, i32 1
  store i32 0, i32* %113, align 4
  %114 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 1
  %115 = bitcast %"class.gfx::Size"* %111 to i64*
  %116 = bitcast %"class.gfx::Size"* %114 to i64*
  %117 = load i64, i64* %115, align 4
  store i64 %117, i64* %116, align 4
  %118 = bitcast %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0 to void (%"class.gpu::SharedImageBacking"*, %"class.gfx::Rect"*)***
  %119 = load void (%"class.gpu::SharedImageBacking"*, %"class.gfx::Rect"*)**, void (%"class.gpu::SharedImageBacking"*, %"class.gfx::Rect"*)*** %118, align 8
  %120 = getelementptr inbounds void (%"class.gpu::SharedImageBacking"*, %"class.gfx::Rect"*)*, void (%"class.gpu::SharedImageBacking"*, %"class.gfx::Rect"*)** %119, i64 3
  %121 = load void (%"class.gpu::SharedImageBacking"*, %"class.gfx::Rect"*)*, void (%"class.gpu::SharedImageBacking"*, %"class.gfx::Rect"*)** %120, align 8
  call void %121(%"class.gpu::SharedImageBacking"* %24, %"class.gfx::Rect"* nonnull dereferenceable(16) %6) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %110) #9
  %122 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 2, i32 0
  %123 = load i8, i8* %122, align 8, !range !8, !noalias !9
  %124 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 2
  %125 = icmp eq i8 %123, 0
  br i1 %125, label %131, label %126

126:                                              ; preds = %107, %109
  %127 = phi %class.GrBackendTexture* [ %108, %107 ], [ %124, %109 ]
  %128 = call i8* @_Znwm(i64 272) #10, !noalias !9
  %129 = bitcast i8* %128 to %class.SkPromiseImageTexture*
  call void @_ZN21SkPromiseImageTextureC1ERK16GrBackendTexture(%class.SkPromiseImageTexture* nonnull %129, %class.GrBackendTexture* dereferenceable(176) %127) #9, !noalias !9
  %130 = ptrtoint i8* %128 to i64
  br label %131

131:                                              ; preds = %109, %126
  %132 = phi %class.GrBackendTexture* [ %127, %126 ], [ %124, %109 ]
  %133 = phi i64 [ %130, %126 ], [ 0, %109 ]
  %134 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 3
  %135 = getelementptr inbounds %class.sk_sp.257, %class.sk_sp.257* %134, i64 0, i32 0
  %136 = load %class.SkPromiseImageTexture*, %class.SkPromiseImageTexture** %135, align 8
  %137 = bitcast %class.sk_sp.257* %134 to i64*
  store i64 %133, i64* %137, align 8
  %138 = icmp eq %class.SkPromiseImageTexture* %136, null
  br i1 %138, label %145, label %139

139:                                              ; preds = %131
  %140 = getelementptr inbounds %class.SkPromiseImageTexture, %class.SkPromiseImageTexture* %136, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %141 = atomicrmw add i32* %140, i32 -1 acq_rel
  %142 = icmp eq i32 %141, 1
  br i1 %142, label %143, label %145

143:                                              ; preds = %139
  call void @_ZN21SkPromiseImageTextureD1Ev(%class.SkPromiseImageTexture* nonnull %136) #9
  %144 = bitcast %class.SkPromiseImageTexture* %136 to i8*
  call void @_ZdlPv(i8* %144) #10
  br label %145

145:                                              ; preds = %143, %139, %131
  %146 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 2, i32 4
  %147 = load i32, i32* %146, align 8
  switch i32 %147, label %179 [
    i32 0, label %148
    i32 1, label %159
  ]

148:                                              ; preds = %145
  %149 = bitcast %struct.GrGLTextureInfo* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %149) #9
  %150 = getelementptr inbounds %struct.GrGLTextureInfo, %struct.GrGLTextureInfo* %11, i64 0, i32 0
  store i32 -1431655766, i32* %150, align 4
  %151 = getelementptr inbounds %struct.GrGLTextureInfo, %struct.GrGLTextureInfo* %11, i64 0, i32 1
  store i32 -1431655766, i32* %151, align 4
  %152 = getelementptr inbounds %struct.GrGLTextureInfo, %struct.GrGLTextureInfo* %11, i64 0, i32 2
  store i32 0, i32* %152, align 4
  %153 = call zeroext i1 @_ZNK16GrBackendTexture16getGLTextureInfoEP15GrGLTextureInfo(%class.GrBackendTexture* %132, %struct.GrGLTextureInfo* nonnull %11) #9
  br i1 %153, label %154, label %158

154:                                              ; preds = %148
  %155 = load i32, i32* %151, align 4
  %156 = zext i32 %155 to i64
  %157 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 6
  store i64 %156, i64* %157, align 8
  br label %158

158:                                              ; preds = %154, %148
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %149) #9
  br label %179

159:                                              ; preds = %145
  %160 = bitcast %struct.GrVkImageInfo* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %160) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 -86, i64 144, i1 false)
  %161 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %12, i64 0, i32 1, i32 5
  store i64 0, i64* %161, align 8
  %162 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %12, i64 0, i32 1, i32 6
  store i8 0, i8* %162, align 8
  %163 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %12, i64 0, i32 2
  %164 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %12, i64 0, i32 6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %160, i8 0, i64 36, i1 false) #9
  %165 = bitcast i32* %163 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %165, i8 0, i64 16, i1 false) #9
  store i32 1, i32* %164, align 8
  %166 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %12, i64 0, i32 7
  store i32 0, i32* %166, align 4
  %167 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %12, i64 0, i32 8
  store i32 -1, i32* %167, align 8
  %168 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %12, i64 0, i32 9
  store i8 0, i8* %168, align 4
  %169 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %12, i64 0, i32 11, i32 0
  store i32 0, i32* %169, align 8
  %170 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %12, i64 0, i32 11, i32 2
  %171 = bitcast i64* %170 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %171, i8 0, i64 36, i1 false) #9
  %172 = getelementptr inbounds %struct.GrVkImageInfo, %struct.GrVkImageInfo* %12, i64 0, i32 12
  store i32 0, i32* %172, align 8
  %173 = call zeroext i1 @_ZNK16GrBackendTexture14getVkImageInfoEP13GrVkImageInfo(%class.GrBackendTexture* %132, %struct.GrVkImageInfo* nonnull %12) #9
  br i1 %173, label %174, label %178

174:                                              ; preds = %159
  %175 = bitcast %struct.GrVkImageInfo* %12 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 6
  store i64 %176, i64* %177, align 8
  br label %178

178:                                              ; preds = %174, %159
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %160) #9
  br label %179

179:                                              ; preds = %90, %86, %5, %158, %178, %145
  %180 = phi i1 [ false, %5 ], [ false, %86 ], [ false, %90 ], [ false, %145 ], [ true, %178 ], [ true, %158 ]
  ret i1 %180
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.gpu::SharedImageBacking"* @_ZN3gpu6raster21WrappedSkImageFactory17CreateSharedImageERKNS_7MailboxEiN3gfx21GpuMemoryBufferHandleENS5_12BufferFormatENS5_11BufferPlaneEjRKNS5_4SizeERKNS5_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypej(%"class.gpu::raster::WrappedSkImageFactory"* nocapture readonly, %"struct.gpu::Mailbox"* dereferenceable(16), i32, %"struct.gfx::GpuMemoryBufferHandle"*, i32, i32, i32, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::ColorSpace"* dereferenceable(68), i32, i32, i32) unnamed_addr #0 align 2 {
  %13 = alloca %"class.gpu::SharedMemoryRegionWrapper", align 8
  %14 = alloca %struct.SkImageInfo, align 8
  %15 = alloca %"class.gpu::SharedMemoryRegionWrapper", align 8
  %16 = tail call zeroext i1 @_ZN3gpu40IsImageSizeValidForGpuMemoryBufferFormatERKN3gfx4SizeENS0_12BufferFormatE(%"class.gfx::Size"* dereferenceable(8) %7, i32 %4) #9
  br i1 %16, label %17, label %102

17:                                               ; preds = %12
  %18 = tail call i64 @_ZN3gfx35NumberOfPlanesForLinearBufferFormatENS_12BufferFormatE(i32 %4) #9
  %19 = icmp eq i64 %18, 1
  %20 = icmp eq i32 %5, 0
  %21 = and i1 %20, %19
  br i1 %21, label %22, label %102

22:                                               ; preds = %17
  %23 = tail call i32 @_ZN3viz17GetResourceFormatEN3gfx12BufferFormatE(i32 %4) #9
  %24 = bitcast %"class.gpu::SharedMemoryRegionWrapper"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %24) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 64, i1 false)
  call void @_ZN3gpu25SharedMemoryRegionWrapperC1Ev(%"class.gpu::SharedMemoryRegionWrapper"* nonnull %13) #9
  %25 = call zeroext i1 @_ZN3gpu25SharedMemoryRegionWrapper10InitializeERKN3gfx21GpuMemoryBufferHandleERKNS1_4SizeEN3viz14ResourceFormatE(%"class.gpu::SharedMemoryRegionWrapper"* nonnull %13, %"struct.gfx::GpuMemoryBufferHandle"* dereferenceable(112) %3, %"class.gfx::Size"* dereferenceable(8) %7, i32 %23) #9
  br i1 %25, label %26, label %100

26:                                               ; preds = %22
  %27 = bitcast %struct.SkImageInfo* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #9
  %28 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %14, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %14, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %7, i64 0, i32 0
  %31 = load i32, i32* %30, align 4, !noalias !12
  %32 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %7, i64 0, i32 1
  %33 = load i32, i32* %32, align 4, !noalias !12
  %34 = call i32 @_ZN3viz34ResourceFormatToClosestSkColorTypeEbNS_14ResourceFormatE(i1 zeroext true, i32 %23) #9, !noalias !12
  %35 = zext i32 %34 to i64
  %36 = or i64 %35, 4294967296
  %37 = zext i32 %33 to i64
  %38 = shl nuw i64 %37, 32
  %39 = zext i32 %31 to i64
  %40 = or i64 %38, %39
  %41 = bitcast %struct.SkImageInfo* %14 to i64*
  store i64 0, i64* %41, align 8, !alias.scope !15
  %42 = bitcast i32* %29 to i64*
  store i64 %36, i64* %42, align 8, !alias.scope !15
  %43 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %14, i64 0, i32 1
  %44 = bitcast %struct.SkISize* %43 to i64*
  store i64 %40, i64* %44, align 8, !alias.scope !15
  %45 = call i8* @_Znwm(i64 504) #10
  %46 = bitcast i8* %45 to %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*
  %47 = sext i32 %31 to i64
  %48 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %14, i64 0, i32 0
  %49 = call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* nonnull %48) #9
  %50 = sext i32 %49 to i64
  %51 = mul nsw i64 %50, %47
  %52 = icmp ult i64 %51, 2147483648
  %53 = select i1 %52, i64 %51, i64 0
  %54 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* nonnull %14, i64 %53) #9
  %55 = getelementptr inbounds %"class.gpu::raster::WrappedSkImageFactory", %"class.gpu::raster::WrappedSkImageFactory"* %0, i64 0, i32 1, i32 0
  %56 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %55, align 8
  %57 = ptrtoint %"class.gpu::SharedContextState"* %56 to i64
  %58 = icmp eq %"class.gpu::SharedContextState"* %56, null
  br i1 %58, label %61, label %59

59:                                               ; preds = %26
  %60 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %56, i64 0, i32 2, i32 0
  call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %60) #9
  br label %61

61:                                               ; preds = %26, %59
  %62 = bitcast i8* %45 to %"class.gpu::ClearTrackingSharedImageBacking"*
  call void @_ZN3gpu31ClearTrackingSharedImageBackingC2ERKNS_7MailboxEN3viz14ResourceFormatERKN3gfx4SizeERKNS6_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypejmb(%"class.gpu::ClearTrackingSharedImageBacking"* nonnull %62, %"struct.gpu::Mailbox"* dereferenceable(16) %1, i32 %23, %"class.gfx::Size"* dereferenceable(8) %7, %"class.gfx::ColorSpace"* dereferenceable(68) %8, i32 %9, i32 %10, i32 %11, i64 %54, i1 zeroext false) #9
  %63 = bitcast i8* %45 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN3gpu6raster12_GLOBAL__N_114WrappedSkImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %63, align 8
  %64 = getelementptr inbounds i8, i8* %45, i64 232
  %65 = bitcast i8* %64 to i64*
  store i64 %57, i64* %65, align 8
  %66 = getelementptr inbounds i8, i8* %45, i64 240
  %67 = bitcast i8* %66 to %class.GrBackendTexture*
  call void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture* %67) #9
  %68 = getelementptr inbounds i8, i8* %45, i64 416
  %69 = bitcast i8* %68 to %class.SkPromiseImageTexture**
  store %class.SkPromiseImageTexture* null, %class.SkPromiseImageTexture** %69, align 8
  %70 = getelementptr inbounds i8, i8* %45, i64 424
  %71 = bitcast i8* %70 to i32*
  store i32 0, i32* %71, align 8
  %72 = getelementptr inbounds i8, i8* %45, i64 432
  %73 = bitcast i8* %72 to %"class.gpu::SharedMemoryRegionWrapper"*
  call void @_ZN3gpu25SharedMemoryRegionWrapperC1Ev(%"class.gpu::SharedMemoryRegionWrapper"* %73) #9
  %74 = getelementptr inbounds i8, i8* %45, i64 496
  %75 = bitcast i8* %74 to i64*
  store i64 0, i64* %75, align 8
  call void @_ZN3gpu25SharedMemoryRegionWrapperC1EOS0_(%"class.gpu::SharedMemoryRegionWrapper"* nonnull %15, %"class.gpu::SharedMemoryRegionWrapper"* nonnull dereferenceable(64) %13) #9
  %76 = call { i64, i8* } @_ZNK3gpu25SharedMemoryRegionWrapper15GetMemoryAsSpanEv(%"class.gpu::SharedMemoryRegionWrapper"* nonnull %15) #9
  %77 = extractvalue { i64, i8* } %76, 0
  %78 = extractvalue { i64, i8* } %76, 1
  %79 = call i64 @_ZNK3gpu25SharedMemoryRegionWrapper9GetStrideEv(%"class.gpu::SharedMemoryRegionWrapper"* nonnull %15) #9
  %80 = call fastcc zeroext i1 @_ZN3gpu6raster12_GLOBAL__N_114WrappedSkImage10InitializeERK11SkImageInfoN4base4spanIKhLm18446744073709551615EEEm(%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* nonnull %46, %struct.SkImageInfo* nonnull dereferenceable(24) %14, i64 %77, i8* %78, i64 %79) #9
  br i1 %80, label %81, label %84

81:                                               ; preds = %61
  %82 = ptrtoint i8* %45 to i64
  %83 = call dereferenceable(64) %"class.gpu::SharedMemoryRegionWrapper"* @_ZN3gpu25SharedMemoryRegionWrapperaSEOS0_(%"class.gpu::SharedMemoryRegionWrapper"* %73, %"class.gpu::SharedMemoryRegionWrapper"* nonnull dereferenceable(64) %15) #9
  call void @_ZN3gpu25SharedMemoryRegionWrapperD1Ev(%"class.gpu::SharedMemoryRegionWrapper"* nonnull %15) #9
  br label %89

84:                                               ; preds = %61
  call void @_ZN3gpu25SharedMemoryRegionWrapperD1Ev(%"class.gpu::SharedMemoryRegionWrapper"* nonnull %15) #9
  %85 = bitcast i8* %45 to void (%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*)***
  %86 = load void (%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*)**, void (%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*)*** %85, align 8
  %87 = getelementptr inbounds void (%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*)*, void (%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*)** %86, i64 1
  %88 = load void (%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*)*, void (%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*)** %87, align 8
  call void %88(%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* nonnull %46) #9
  br label %89

89:                                               ; preds = %81, %84
  %90 = phi i64 [ %82, %81 ], [ 0, %84 ]
  %91 = load %class.SkColorSpace*, %class.SkColorSpace** %28, align 8
  %92 = icmp eq %class.SkColorSpace* %91, null
  br i1 %92, label %99, label %93

93:                                               ; preds = %89
  %94 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = atomicrmw add i32* %94, i32 -1 acq_rel
  %96 = icmp eq i32 %95, 1
  br i1 %96, label %97, label %99

97:                                               ; preds = %93
  %98 = bitcast %class.SkColorSpace* %91 to i8*
  call void @_ZdlPv(i8* %98) #10
  br label %99

99:                                               ; preds = %89, %93, %97
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #9
  br label %100

100:                                              ; preds = %22, %99
  %101 = phi i64 [ %90, %99 ], [ 0, %22 ]
  call void @_ZN3gpu25SharedMemoryRegionWrapperD1Ev(%"class.gpu::SharedMemoryRegionWrapper"* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %24) #9
  br label %102

102:                                              ; preds = %17, %12, %100
  %103 = phi i64 [ %101, %100 ], [ 0, %12 ], [ 0, %17 ]
  %104 = inttoptr i64 %103 to %"class.gpu::SharedImageBacking"*
  ret %"class.gpu::SharedImageBacking"* %104
}

declare zeroext i1 @_ZN3gpu40IsImageSizeValidForGpuMemoryBufferFormatERKN3gfx4SizeENS0_12BufferFormatE(%"class.gfx::Size"* dereferenceable(8), i32) local_unnamed_addr #4

declare i64 @_ZN3gfx35NumberOfPlanesForLinearBufferFormatENS_12BufferFormatE(i32) local_unnamed_addr #4

declare i32 @_ZN3viz17GetResourceFormatEN3gfx12BufferFormatE(i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN3gpu25SharedMemoryRegionWrapperC1Ev(%"class.gpu::SharedMemoryRegionWrapper"*) unnamed_addr #4

declare zeroext i1 @_ZN3gpu25SharedMemoryRegionWrapper10InitializeERKN3gfx21GpuMemoryBufferHandleERKNS1_4SizeEN3viz14ResourceFormatE(%"class.gpu::SharedMemoryRegionWrapper"*, %"struct.gfx::GpuMemoryBufferHandle"* dereferenceable(112), %"class.gfx::Size"* dereferenceable(8), i32) local_unnamed_addr #4

declare void @_ZN3gpu25SharedMemoryRegionWrapperC1EOS0_(%"class.gpu::SharedMemoryRegionWrapper"*, %"class.gpu::SharedMemoryRegionWrapper"* dereferenceable(64)) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3gpu25SharedMemoryRegionWrapperD1Ev(%"class.gpu::SharedMemoryRegionWrapper"*) unnamed_addr #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3gpu6raster21WrappedSkImageFactory24CanImportGpuMemoryBufferEN3gfx19GpuMemoryBufferTypeE(%"class.gpu::raster::WrappedSkImageFactory"* nocapture readnone, i32) unnamed_addr #6 align 2 {
  %3 = icmp eq i32 %1, 1
  ret i1 %3
}

declare i32 @_ZN3viz34ResourceFormatToClosestSkColorTypeEbNS_14ResourceFormatE(i1 zeroext, i32) local_unnamed_addr #4

declare i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo*, i64) local_unnamed_addr #4

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #4

declare void @_ZN3gpu31ClearTrackingSharedImageBackingC2ERKNS_7MailboxEN3viz14ResourceFormatERKN3gfx4SizeERKNS6_10ColorSpaceE15GrSurfaceOrigin11SkAlphaTypejmb(%"class.gpu::ClearTrackingSharedImageBacking"*, %"struct.gpu::Mailbox"* dereferenceable(16), i32, %"class.gfx::Size"* dereferenceable(8), %"class.gfx::ColorSpace"* dereferenceable(68), i32, i32, i32, i64, i1 zeroext) unnamed_addr #4

declare void @_ZN16GrBackendTextureC1Ev(%class.GrBackendTexture*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu6raster12_GLOBAL__N_114WrappedSkImageD2Ev(%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTVN3gpu6raster12_GLOBAL__N_114WrappedSkImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %3, align 8
  %5 = tail call zeroext i1 @_ZN3gpu18SharedContextState11MakeCurrentEPN2gl9GLSurfaceEb(%"class.gpu::SharedContextState"* %4, %"class.gl::GLSurface"* null, i1 zeroext false) #9
  %6 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 3, i32 0
  %7 = load %class.SkPromiseImageTexture*, %class.SkPromiseImageTexture** %6, align 8
  store %class.SkPromiseImageTexture* null, %class.SkPromiseImageTexture** %6, align 8
  %8 = icmp eq %class.SkPromiseImageTexture* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %class.SkPromiseImageTexture, %class.SkPromiseImageTexture* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw add i32* %10, i32 -1 acq_rel
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %15

13:                                               ; preds = %9
  tail call void @_ZN21SkPromiseImageTextureD1Ev(%class.SkPromiseImageTexture* nonnull %7) #9
  %14 = bitcast %class.SkPromiseImageTexture* %7 to i8*
  tail call void @_ZdlPv(i8* %14) #10
  br label %15

15:                                               ; preds = %1, %9, %13
  %16 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %3, align 8
  %17 = bitcast %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0 to i8*
  %18 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %16, i64 0, i32 33, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_end_node"* %18 to %"class.std::__1::__tree_node"**
  %20 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %19, align 8
  %21 = icmp eq %"class.std::__1::__tree_node"* %20, null
  br i1 %21, label %84, label %22

22:                                               ; preds = %15, %22
  %23 = phi %"class.std::__1::__tree_end_node"* [ %33, %22 ], [ %18, %15 ]
  %24 = phi %"class.std::__1::__tree_node"* [ %34, %22 ], [ %20, %15 ]
  %25 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 1, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = icmp ult i8* %26, %17
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 1
  %29 = bitcast %"class.std::__1::__tree_node_base"** %28 to %"class.std::__1::__tree_node"**
  %30 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %24, i64 0, i32 0, i32 0
  %31 = bitcast %"class.std::__1::__tree_node"* %24 to %"class.std::__1::__tree_node"**
  %32 = select i1 %27, %"class.std::__1::__tree_node"** %29, %"class.std::__1::__tree_node"** %31
  %33 = select i1 %27, %"class.std::__1::__tree_end_node"* %23, %"class.std::__1::__tree_end_node"* %30
  %34 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %32, align 8
  %35 = icmp eq %"class.std::__1::__tree_node"* %34, null
  br i1 %35, label %36, label %22

36:                                               ; preds = %22
  %37 = icmp eq %"class.std::__1::__tree_end_node"* %33, %18
  br i1 %37, label %84, label %38

38:                                               ; preds = %36
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 4
  %40 = bitcast %"class.std::__1::__tree_end_node"* %39 to i8**
  %41 = load i8*, i8** %40, align 8
  %42 = icmp ugt i8* %41, %17
  br i1 %42, label %84, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %33, i64 5
  %45 = bitcast %"class.std::__1::__tree_end_node"* %44 to %"struct.std::__1::__list_node_base"**
  %46 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %16, i64 0, i32 33, i32 0, i32 1, i32 0, i32 0
  %48 = icmp eq %"struct.std::__1::__list_node_base"* %46, %47
  br i1 %48, label %84, label %49

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %46, i64 1
  %51 = bitcast %"struct.std::__1::__list_node_base"* %50 to i8**
  %52 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %16, i64 0, i32 33, i32 0, i32 2, i32 0
  %53 = tail call i64 @_ZNSt3__16__treeINS_12__value_typeIPvNS_15__list_iteratorINS_4pairIS2_5sk_spI9SkSurfaceEEES2_EEEENS_19__map_value_compareIS2_SA_NS_4lessIS2_EELb1EEENS_9allocatorISA_EEE14__erase_uniqueIS2_EEmRKT_(%"class.std::__1::__tree.142"* %52, i8** dereferenceable(8) %51) #9
  %54 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %46, i64 0, i32 1
  %55 = bitcast %"struct.std::__1::__list_node_base"** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %46, i64 0, i32 0
  %58 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %57, align 8
  %59 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %58, i64 0, i32 1
  %60 = bitcast %"struct.std::__1::__list_node_base"** %59 to i64*
  store i64 %56, i64* %60, align 8
  %61 = bitcast %"struct.std::__1::__list_node_base"* %46 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"struct.std::__1::__list_node_base"** %54 to i64**
  %64 = load i64*, i64** %63, align 8
  store i64 %62, i64* %64, align 8
  %65 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %16, i64 0, i32 33, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = add i64 %66, -1
  store i64 %67, i64* %65, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %46, i64 1, i32 1
  %69 = bitcast %"struct.std::__1::__list_node_base"** %68 to %class.SkSurface**
  %70 = load %class.SkSurface*, %class.SkSurface** %69, align 8
  %71 = icmp eq %class.SkSurface* %70, null
  br i1 %71, label %82, label %72

72:                                               ; preds = %49
  %73 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %70, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw add i32* %73, i32 -1 acq_rel
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %82

76:                                               ; preds = %72
  %77 = bitcast %class.SkSurface* %70 to %class.SkRefCntBase*
  %78 = bitcast %class.SkSurface* %70 to void (%class.SkRefCntBase*)***
  %79 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %78, align 8
  %80 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %79, i64 2
  %81 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %80, align 8
  tail call void %81(%class.SkRefCntBase* nonnull %77) #9
  br label %82

82:                                               ; preds = %76, %72, %49
  %83 = bitcast %"struct.std::__1::__list_node_base"* %46 to i8*
  tail call void @_ZdlPv(i8* %83) #10
  br label %84

84:                                               ; preds = %15, %36, %38, %43, %82
  %85 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 2
  %86 = getelementptr inbounds %class.GrBackendTexture, %class.GrBackendTexture* %85, i64 0, i32 0
  %87 = load i8, i8* %86, align 8, !range !8
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %91, label %89

89:                                               ; preds = %84
  %90 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %3, align 8
  tail call void @_ZN3gpu22DeleteGrBackendTextureEPNS_18SharedContextStateEP16GrBackendTexture(%"class.gpu::SharedContextState"* %90, %class.GrBackendTexture* %85) #9
  br label %91

91:                                               ; preds = %84, %89
  %92 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %3, align 8
  %93 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %92, i64 0, i32 30, i32 0, i32 0, i32 0, i32 0
  %94 = load i8, i8* %93, align 4, !range !8
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %98

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %92, i64 0, i32 29
  store i8 1, i8* %97, align 8
  br label %98

98:                                               ; preds = %91, %96
  %99 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 5
  tail call void @_ZN3gpu25SharedMemoryRegionWrapperD1Ev(%"class.gpu::SharedMemoryRegionWrapper"* %99) #9
  %100 = load %class.SkPromiseImageTexture*, %class.SkPromiseImageTexture** %6, align 8
  %101 = icmp eq %class.SkPromiseImageTexture* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %98
  %103 = getelementptr inbounds %class.SkPromiseImageTexture, %class.SkPromiseImageTexture* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = atomicrmw add i32* %103, i32 -1 acq_rel
  %105 = icmp eq i32 %104, 1
  br i1 %105, label %106, label %108

106:                                              ; preds = %102
  tail call void @_ZN21SkPromiseImageTextureD1Ev(%class.SkPromiseImageTexture* nonnull %100) #9
  %107 = bitcast %class.SkPromiseImageTexture* %100 to i8*
  tail call void @_ZdlPv(i8* %107) #10
  br label %108

108:                                              ; preds = %98, %102, %106
  tail call void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture* %85) #9
  %109 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %3, align 8
  %110 = icmp eq %"class.gpu::SharedContextState"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %109, i64 0, i32 2
  %113 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %112, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %113) #9
  %114 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %112, i64 0, i32 0, i32 0
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %124

117:                                              ; preds = %111
  %118 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %112, i64 -4
  %119 = bitcast %"class.base::RefCounted"* %118 to %"class.gpu::SharedContextState"*
  %120 = bitcast %"class.base::RefCounted"* %118 to void (%"class.gpu::SharedContextState"*)***
  %121 = load void (%"class.gpu::SharedContextState"*)**, void (%"class.gpu::SharedContextState"*)*** %120, align 8
  %122 = getelementptr inbounds void (%"class.gpu::SharedContextState"*)*, void (%"class.gpu::SharedContextState"*)** %121, i64 1
  %123 = load void (%"class.gpu::SharedContextState"*)*, void (%"class.gpu::SharedContextState"*)** %122, align 8
  tail call void %123(%"class.gpu::SharedContextState"* nonnull %119) #9
  br label %124

124:                                              ; preds = %108, %111, %117
  %125 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3gpu18SharedImageBackingD2Ev(%"class.gpu::SharedImageBacking"* %125) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu6raster12_GLOBAL__N_114WrappedSkImageD0Ev(%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*) unnamed_addr #0 align 2 {
  tail call void @_ZN3gpu6raster12_GLOBAL__N_114WrappedSkImageD2Ev(%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0) #9
  %2 = bitcast %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

declare { i64, i64 } @_ZNK3gpu31ClearTrackingSharedImageBacking11ClearedRectEv(%"class.gpu::ClearTrackingSharedImageBacking"*) unnamed_addr #4

declare void @_ZN3gpu31ClearTrackingSharedImageBacking14SetClearedRectERKN3gfx4RectE(%"class.gpu::ClearTrackingSharedImageBacking"*, %"class.gfx::Rect"* dereferenceable(16)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu6raster12_GLOBAL__N_114WrappedSkImage6UpdateENSt3__110unique_ptrIN3gfx8GpuFenceENS3_14default_deleteIS6_EEEE(%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*, %"class.gfx::GpuFence"*) unnamed_addr #0 align 2 {
  %3 = alloca %class.SkPixmap, align 8
  %4 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 5
  %5 = tail call zeroext i1 @_ZNK3gpu25SharedMemoryRegionWrapper7IsValidEv(%"class.gpu::SharedMemoryRegionWrapper"* %4) #9
  br i1 %5, label %6, label %50

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 1, i32 0
  %8 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %7, align 8
  %9 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %8, i64 0, i32 30, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 4, !range !8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %50

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 0, i32 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 0, i32 0, i32 4, i32 0
  %16 = load i32, i32* %15, align 4, !noalias !18
  %17 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 0, i32 0, i32 4, i32 1
  %18 = load i32, i32* %17, align 4, !noalias !18
  %19 = tail call i32 @_ZN3viz34ResourceFormatToClosestSkColorTypeEbNS_14ResourceFormatE(i1 zeroext true, i32 %14) #9, !noalias !18
  %20 = zext i32 %18 to i64
  %21 = shl nuw i64 %20, 32
  %22 = zext i32 %16 to i64
  %23 = or i64 %21, %22
  %24 = bitcast %class.SkPixmap* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #9
  %25 = tail call i8* @_ZNK3gpu25SharedMemoryRegionWrapper9GetMemoryEv(%"class.gpu::SharedMemoryRegionWrapper"* %4) #9
  %26 = tail call i64 @_ZNK3gpu25SharedMemoryRegionWrapper9GetStrideEv(%"class.gpu::SharedMemoryRegionWrapper"* %4) #9
  %27 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 0
  store i8* %25, i8** %27, align 8
  %28 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 1
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %29, align 8
  %30 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 2, i32 0, i32 1
  %31 = bitcast i32* %30 to i64*
  %32 = zext i32 %19 to i64
  %33 = or i64 %32, 4294967296
  store i64 %33, i64* %31, align 8
  %34 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %3, i64 0, i32 2, i32 1
  %35 = bitcast %struct.SkISize* %34 to i64*
  store i64 %23, i64* %35, align 8
  %36 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %7, align 8
  %37 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %36, i64 0, i32 15
  %38 = load %class.GrDirectContext*, %class.GrDirectContext** %37, align 8
  %39 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 2
  %40 = call zeroext i1 @_ZN15GrDirectContext20updateBackendTextureERK16GrBackendTexturePK8SkPixmapi15GrSurfaceOriginPFvPvES7_(%class.GrDirectContext* %38, %class.GrBackendTexture* dereferenceable(176) %39, %class.SkPixmap* nonnull %3, i32 1, i32 0, void (i8*)* null, i8* null) #9
  %41 = load %class.SkColorSpace*, %class.SkColorSpace** %29, align 8
  %42 = icmp eq %class.SkColorSpace* %41, null
  br i1 %42, label %49, label %43

43:                                               ; preds = %12
  %44 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw add i32* %44, i32 -1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = bitcast %class.SkColorSpace* %41 to i8*
  call void @_ZdlPv(i8* %48) #10
  br label %49

49:                                               ; preds = %47, %43, %12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #9
  br label %50

50:                                               ; preds = %6, %2, %49
  %51 = icmp eq %"class.gfx::GpuFence"* %1, null
  br i1 %51, label %54, label %52

52:                                               ; preds = %50
  call void @_ZN3gfx8GpuFenceD1Ev(%"class.gfx::GpuFence"* nonnull %1) #9
  %53 = bitcast %"class.gfx::GpuFence"* %1 to i8*
  call void @_ZdlPv(i8* %53) #10
  br label %54

54:                                               ; preds = %50, %52
  ret void
}

declare zeroext i1 @_ZN3gpu18SharedImageBacking16PresentSwapChainEv(%"class.gpu::SharedImageBacking"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3gpu18SharedImageBacking18MarkForDestructionEv(%"class.gpu::SharedImageBacking"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu6raster12_GLOBAL__N_114WrappedSkImage12OnMemoryDumpERKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEPN4base11trace_event19MemoryAllocatorDumpEPNSD_17ProcessMemoryDumpEm(%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*, %"class.std::__1::basic_string"* nocapture readnone dereferenceable(24), %"class.base::trace_event::MemoryAllocatorDump"* nocapture readnone, %"class.base::trace_event::ProcessMemoryDump"*, i64) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::trace_event::MemoryAllocatorDumpGuid", align 8
  %7 = alloca %"class.base::trace_event::MemoryAllocatorDumpGuid", align 8
  %8 = bitcast %"class.base::trace_event::MemoryAllocatorDumpGuid"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.base::trace_event::MemoryAllocatorDumpGuid", %"class.base::trace_event::MemoryAllocatorDumpGuid"* %6, i64 0, i32 0
  %10 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 0, i32 0, i32 2
  %11 = tail call i64 @_ZN3gpu28GetSharedImageGUIDForTracingERKNS_7MailboxE(%"struct.gpu::Mailbox"* dereferenceable(16) %10) #9
  store i64 %11, i64* %9, align 8
  %12 = bitcast %"class.base::trace_event::MemoryAllocatorDumpGuid"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.base::trace_event::MemoryAllocatorDumpGuid", %"class.base::trace_event::MemoryAllocatorDumpGuid"* %7, i64 0, i32 0
  %14 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 6
  %15 = load i64, i64* %14, align 8
  %16 = tail call i64 @_ZN2gl33GetGLTextureServiceGUIDForTracingEm(i64 %15) #9
  store i64 %16, i64* %13, align 8
  %17 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump31CreateSharedGlobalAllocatorDumpERKNS0_23MemoryAllocatorDumpGuidE(%"class.base::trace_event::ProcessMemoryDump"* %3, %"class.base::trace_event::MemoryAllocatorDumpGuid"* nonnull dereferenceable(8) %7) #9
  call void @_ZN4base11trace_event17ProcessMemoryDump16AddOwnershipEdgeERKNS0_23MemoryAllocatorDumpGuidES4_i(%"class.base::trace_event::ProcessMemoryDump"* %3, %"class.base::trace_event::MemoryAllocatorDumpGuid"* nonnull dereferenceable(8) %6, %"class.base::trace_event::MemoryAllocatorDumpGuid"* nonnull dereferenceable(8) %7, i32 2) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN3gpu6raster12_GLOBAL__N_114WrappedSkImage20ProduceLegacyMailboxEPNS_14MailboxManagerE(%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* nocapture readnone, %"class.gpu::MailboxManager"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

declare i64 @_ZNK3gpu18SharedImageBacking27EstimatedSizeForMemTrackingEv(%"class.gpu::SharedImageBacking"*) unnamed_addr #4

declare void @_ZN3gpu18SharedImageBacking15GetNativePixmapEv() unnamed_addr

declare void @_ZN3gpu18SharedImageBacking16ProduceGLTextureEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE() unnamed_addr

declare void @_ZN3gpu18SharedImageBacking28ProduceRGBEmulationGLTextureEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE() unnamed_addr

declare void @_ZN3gpu18SharedImageBacking27ProduceGLTexturePassthroughEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define internal %"class.gpu::SharedImageRepresentationSkia"* @_ZN3gpu6raster12_GLOBAL__N_114WrappedSkImage11ProduceSkiaEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE13scoped_refptrINS_18SharedContextStateEE(%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*, %"class.gpu::SharedImageManager"*, %"class.gpu::MemoryTypeTracker"*, %"class.gpu::SharedContextState"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %5, align 8
  %7 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %6, i64 0, i32 30, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 4, !range !8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %4
  %11 = tail call i8* @_Znwm(i64 48) #10
  %12 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 0, i32 0
  %13 = bitcast i8* %11 to %"class.gpu::SharedImageRepresentation"*
  tail call void @_ZN3gpu25SharedImageRepresentationC2EPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerE(%"class.gpu::SharedImageRepresentation"* nonnull %13, %"class.gpu::SharedImageManager"* %1, %"class.gpu::SharedImageBacking"* %12, %"class.gpu::MemoryTypeTracker"* %2) #9
  %14 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3gpu6raster12_GLOBAL__N_132WrappedSkImageRepresentationSkiaE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds i8, i8* %11, i64 40
  %16 = bitcast i8* %15 to %class.SkSurface**
  store %class.SkSurface* null, %class.SkSurface** %16, align 8
  %17 = bitcast i8* %11 to %"class.gpu::SharedImageRepresentationSkia"*
  br label %18

18:                                               ; preds = %4, %10
  %19 = phi %"class.gpu::SharedImageRepresentationSkia"* [ %17, %10 ], [ null, %4 ]
  %20 = icmp eq %"class.gpu::SharedContextState"* %3, null
  br i1 %20, label %34, label %21

21:                                               ; preds = %18
  %22 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %3, i64 0, i32 2
  %23 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %22, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %23) #9
  %24 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %22, i64 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %34

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %22, i64 -4
  %29 = bitcast %"class.base::RefCounted"* %28 to %"class.gpu::SharedContextState"*
  %30 = bitcast %"class.base::RefCounted"* %28 to void (%"class.gpu::SharedContextState"*)***
  %31 = load void (%"class.gpu::SharedContextState"*)**, void (%"class.gpu::SharedContextState"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.gpu::SharedContextState"*)*, void (%"class.gpu::SharedContextState"*)** %31, i64 1
  %33 = load void (%"class.gpu::SharedContextState"*)*, void (%"class.gpu::SharedContextState"*)** %32, align 8
  tail call void %33(%"class.gpu::SharedContextState"* nonnull %29) #9
  br label %34

34:                                               ; preds = %18, %21, %27
  ret %"class.gpu::SharedImageRepresentationSkia"* %19
}

declare void @_ZN3gpu18SharedImageBacking11ProduceDawnEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerEP14WGPUDeviceImpl() unnamed_addr

declare void @_ZN3gpu18SharedImageBacking14ProduceOverlayEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE() unnamed_addr

declare void @_ZN3gpu18SharedImageBacking16ProduceVASurfaceEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerEPNS_24VaapiDependenciesFactoryE() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define internal %"class.gpu::SharedImageRepresentationMemory"* @_ZN3gpu6raster12_GLOBAL__N_114WrappedSkImage13ProduceMemoryEPNS_18SharedImageManagerEPNS_17MemoryTypeTrackerE(%"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*, %"class.gpu::SharedImageManager"*, %"class.gpu::MemoryTypeTracker"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 5
  %5 = tail call zeroext i1 @_ZNK3gpu25SharedMemoryRegionWrapper7IsValidEv(%"class.gpu::SharedMemoryRegionWrapper"* %4) #9
  br i1 %5, label %6, label %12

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 40) #10
  %8 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %0, i64 0, i32 0, i32 0
  %9 = bitcast i8* %7 to %"class.gpu::SharedImageRepresentation"*
  tail call void @_ZN3gpu25SharedImageRepresentationC2EPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerE(%"class.gpu::SharedImageRepresentation"* nonnull %9, %"class.gpu::SharedImageManager"* %1, %"class.gpu::SharedImageBacking"* %8, %"class.gpu::MemoryTypeTracker"* %2) #9
  %10 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN3gpu6raster12_GLOBAL__N_134WrappedSkImageRepresentationMemoryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = bitcast i8* %7 to %"class.gpu::SharedImageRepresentationMemory"*
  br label %12

12:                                               ; preds = %3, %6
  %13 = phi %"class.gpu::SharedImageRepresentationMemory"* [ %11, %6 ], [ null, %3 ]
  ret %"class.gpu::SharedImageRepresentationMemory"* %13
}

declare zeroext i1 @_ZN3gpu18SharedContextState11MakeCurrentEPN2gl9GLSurfaceEb(%"class.gpu::SharedContextState"*, %"class.gl::GLSurface"*, i1 zeroext) local_unnamed_addr #4

declare void @_ZN3gpu22DeleteGrBackendTextureEPNS_18SharedContextStateEP16GrBackendTexture(%"class.gpu::SharedContextState"*, %class.GrBackendTexture*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN16GrBackendTextureD1Ev(%class.GrBackendTexture*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN3gpu18SharedImageBackingD2Ev(%"class.gpu::SharedImageBacking"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN21SkPromiseImageTextureD1Ev(%class.SkPromiseImageTexture*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNSt3__16__treeINS_12__value_typeIPvNS_15__list_iteratorINS_4pairIS2_5sk_spI9SkSurfaceEEES2_EEEENS_19__map_value_compareIS2_SA_NS_4lessIS2_EELb1EEENS_9allocatorISA_EEE14__erase_uniqueIS2_EEmRKT_(%"class.std::__1::__tree.142"*, i8** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.142", %"class.std::__1::__tree.142"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  %7 = bitcast %"class.std::__1::__tree_node"* %5 to %"class.std::__1::__tree_node_base"*
  br i1 %6, label %73, label %8

8:                                                ; preds = %2
  %9 = load i8*, i8** %1, align 8
  br label %10

10:                                               ; preds = %10, %8
  %11 = phi %"class.std::__1::__tree_end_node"* [ %3, %8 ], [ %21, %10 ]
  %12 = phi %"class.std::__1::__tree_node"* [ %5, %8 ], [ %22, %10 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = icmp ult i8* %14, %9
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::__tree_node_base"** %16 to %"class.std::__1::__tree_node"**
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  %19 = bitcast %"class.std::__1::__tree_node"* %12 to %"class.std::__1::__tree_node"**
  %20 = select i1 %15, %"class.std::__1::__tree_node"** %17, %"class.std::__1::__tree_node"** %19
  %21 = select i1 %15, %"class.std::__1::__tree_end_node"* %11, %"class.std::__1::__tree_end_node"* %18
  %22 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %20, align 8
  %23 = icmp eq %"class.std::__1::__tree_node"* %22, null
  br i1 %23, label %24, label %10

24:                                               ; preds = %10
  %25 = icmp eq %"class.std::__1::__tree_end_node"* %21, %3
  br i1 %25, label %73, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 4
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to i8**
  %29 = load i8*, i8** %28, align 8
  %30 = icmp ult i8* %9, %29
  br i1 %30, label %73, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 1, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, null
  br i1 %34, label %35, label %43

35:                                               ; preds = %31
  %36 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node_base"*
  %37 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 2
  %38 = bitcast %"class.std::__1::__tree_end_node"* %37 to %"class.std::__1::__tree_end_node"**
  %39 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %38, align 8
  %40 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 0, i32 0
  %41 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %40, align 8
  %42 = icmp eq %"class.std::__1::__tree_node_base"* %41, %36
  br i1 %42, label %59, label %50

43:                                               ; preds = %31, %43
  %44 = phi %"class.std::__1::__tree_node_base"* [ %46, %43 ], [ %33, %31 ]
  %45 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %44, i64 0, i32 0, i32 0
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = icmp eq %"class.std::__1::__tree_node_base"* %46, null
  br i1 %47, label %48, label %43

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %44, i64 0, i32 0
  br label %59

50:                                               ; preds = %35, %50
  %51 = phi %"class.std::__1::__tree_end_node"** [ %54, %50 ], [ %38, %35 ]
  %52 = bitcast %"class.std::__1::__tree_end_node"** %51 to %"class.std::__1::__tree_node_base"**
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %53, i64 0, i32 2
  %55 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %54, align 8
  %56 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %55, i64 0, i32 0
  %57 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %56, align 8
  %58 = icmp eq %"class.std::__1::__tree_node_base"* %57, %53
  br i1 %58, label %59, label %50

59:                                               ; preds = %50, %48, %35
  %60 = phi %"class.std::__1::__tree_end_node"* [ %49, %48 ], [ %39, %35 ], [ %55, %50 ]
  %61 = getelementptr inbounds %"class.std::__1::__tree.142", %"class.std::__1::__tree.142"* %0, i64 0, i32 0
  %62 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %61, align 8
  %63 = icmp eq %"class.std::__1::__tree_end_node"* %62, %21
  br i1 %63, label %64, label %67

64:                                               ; preds = %59
  %65 = ptrtoint %"class.std::__1::__tree_end_node"* %60 to i64
  %66 = bitcast %"class.std::__1::__tree.142"* %0 to i64*
  store i64 %65, i64* %66, align 8
  br label %67

67:                                               ; preds = %59, %64
  %68 = getelementptr inbounds %"class.std::__1::__tree.142", %"class.std::__1::__tree.142"* %0, i64 0, i32 2, i32 0, i32 0
  %69 = load i64, i64* %68, align 8
  %70 = add i64 %69, -1
  store i64 %70, i64* %68, align 8
  %71 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node_base"*
  tail call void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* nonnull %7, %"class.std::__1::__tree_node_base"* %71) #9
  %72 = bitcast %"class.std::__1::__tree_end_node"* %21 to i8*
  tail call void @_ZdlPv(i8* %72) #10
  br label %73

73:                                               ; preds = %26, %24, %2, %67
  %74 = phi i64 [ 1, %67 ], [ 0, %2 ], [ 0, %24 ], [ 0, %26 ]
  ret i64 %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__tree_removeIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  %5 = icmp eq %"class.std::__1::__tree_node_base"* %4, null
  br i1 %5, label %17, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %8 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %7, align 8
  %9 = icmp eq %"class.std::__1::__tree_node_base"* %8, null
  br i1 %9, label %15, label %10

10:                                               ; preds = %6, %10
  %11 = phi %"class.std::__1::__tree_node_base"* [ %13, %10 ], [ %8, %6 ]
  %12 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  %14 = icmp eq %"class.std::__1::__tree_node_base"* %13, null
  br i1 %14, label %17, label %10

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 0, i32 0
  br label %23

17:                                               ; preds = %10, %2
  %18 = phi %"class.std::__1::__tree_node_base"* [ %1, %2 ], [ %11, %10 ]
  %19 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 1
  %21 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %20, align 8
  %22 = icmp eq %"class.std::__1::__tree_node_base"* %21, null
  br i1 %22, label %32, label %23

23:                                               ; preds = %15, %17
  %24 = phi %"class.std::__1::__tree_node_base"** [ %19, %17 ], [ %16, %15 ]
  %25 = phi %"class.std::__1::__tree_node_base"* [ %18, %17 ], [ %1, %15 ]
  %26 = phi %"class.std::__1::__tree_node_base"* [ %21, %17 ], [ %4, %15 ]
  %27 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %25, i64 0, i32 2
  %28 = bitcast %"class.std::__1::__tree_end_node"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %26, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  store i64 %29, i64* %31, align 8
  br label %32

32:                                               ; preds = %17, %23
  %33 = phi %"class.std::__1::__tree_node_base"** [ %24, %23 ], [ %19, %17 ]
  %34 = phi %"class.std::__1::__tree_node_base"* [ %25, %23 ], [ %18, %17 ]
  %35 = phi i1 [ true, %23 ], [ false, %17 ]
  %36 = phi %"class.std::__1::__tree_node_base"* [ %26, %23 ], [ null, %17 ]
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 2
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %34
  br i1 %41, label %42, label %48

42:                                               ; preds = %32
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %39, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %34, %0
  br i1 %43, label %55, label %44

44:                                               ; preds = %42
  %45 = bitcast %"class.std::__1::__tree_end_node"** %37 to %"class.std::__1::__tree_node_base"**
  %46 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %46, i64 0, i32 1
  br label %52

48:                                               ; preds = %32
  %49 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 1, i32 0
  store %"class.std::__1::__tree_node_base"* %36, %"class.std::__1::__tree_node_base"** %49, align 8
  %50 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %50, i64 0, i32 0
  br label %52

52:                                               ; preds = %48, %44
  %53 = phi %"class.std::__1::__tree_node_base"** [ %47, %44 ], [ %51, %48 ]
  %54 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %53, align 8
  br label %55

55:                                               ; preds = %52, %42
  %56 = phi %"class.std::__1::__tree_node_base"* [ %36, %42 ], [ %0, %52 ]
  %57 = phi %"class.std::__1::__tree_node_base"* [ null, %42 ], [ %54, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 3
  %59 = load i8, i8* %58, align 8, !range !8
  %60 = icmp ne i8 %59, 0
  %61 = icmp eq %"class.std::__1::__tree_node_base"* %34, %1
  br i1 %61, label %90, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 2
  %64 = bitcast %"class.std::__1::__tree_end_node"** %63 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = bitcast %"class.std::__1::__tree_end_node"** %37 to i64*
  store i64 %65, i64* %66, align 8
  %67 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %63, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %67, i64 0, i32 0
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, %1
  %71 = inttoptr i64 %65 to %"class.std::__1::__tree_node_base"*
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %71, i64 0, i32 1
  %73 = inttoptr i64 %65 to %"class.std::__1::__tree_end_node"*
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %73, i64 0, i32 0
  %75 = select i1 %70, %"class.std::__1::__tree_node_base"** %74, %"class.std::__1::__tree_node_base"** %72
  store %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"** %75, align 8
  %76 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %3, align 8
  store %"class.std::__1::__tree_node_base"* %76, %"class.std::__1::__tree_node_base"** %33, align 8
  %77 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 0
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %76, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %78, align 8
  %79 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 1
  %80 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %79, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %34, i64 0, i32 1
  store %"class.std::__1::__tree_node_base"* %80, %"class.std::__1::__tree_node_base"** %81, align 8
  %82 = icmp eq %"class.std::__1::__tree_node_base"* %80, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %80, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %77, %"class.std::__1::__tree_end_node"** %84, align 8
  br label %85

85:                                               ; preds = %62, %83
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %87 = load i8, i8* %86, align 8, !range !8
  store i8 %87, i8* %58, align 8
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %56, %1
  %89 = select i1 %88, %"class.std::__1::__tree_node_base"* %34, %"class.std::__1::__tree_node_base"* %56
  br label %90

90:                                               ; preds = %85, %55
  %91 = phi %"class.std::__1::__tree_node_base"* [ %56, %55 ], [ %89, %85 ]
  %92 = icmp ne %"class.std::__1::__tree_node_base"* %91, null
  %93 = and i1 %60, %92
  br i1 %93, label %94, label %382

94:                                               ; preds = %90
  br i1 %35, label %95, label %97

95:                                               ; preds = %94
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %36, i64 0, i32 3
  store i8 1, i8* %96, align 8
  br label %382

97:                                               ; preds = %94, %371
  %98 = phi %"class.std::__1::__tree_node_base"* [ %373, %371 ], [ %91, %94 ]
  %99 = phi %"class.std::__1::__tree_node_base"* [ %381, %371 ], [ %57, %94 ]
  %100 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 2
  %101 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %100, align 8
  %102 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 0, i32 0
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, %99
  %105 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 3
  %106 = load i8, i8* %105, align 8, !range !8
  %107 = icmp ne i8 %106, 0
  br i1 %104, label %242, label %108

108:                                              ; preds = %97
  br i1 %107, label %141, label %109

109:                                              ; preds = %108
  store i8 1, i8* %105, align 8
  %110 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %111 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %112 = bitcast %"class.std::__1::__tree_end_node"* %111 to i8*
  store i8 0, i8* %112, align 8
  %113 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 1
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0, i32 0
  %117 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %116, align 8
  store %"class.std::__1::__tree_node_base"* %117, %"class.std::__1::__tree_node_base"** %114, align 8
  %118 = icmp eq %"class.std::__1::__tree_node_base"* %117, null
  br i1 %118, label %122, label %119

119:                                              ; preds = %109
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 0
  %121 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %117, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %120, %"class.std::__1::__tree_end_node"** %121, align 8
  br label %122

122:                                              ; preds = %119, %109
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %113, i64 0, i32 2
  %124 = bitcast %"class.std::__1::__tree_end_node"** %123 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 2
  %127 = bitcast %"class.std::__1::__tree_end_node"** %126 to i64*
  store i64 %125, i64* %127, align 8
  %128 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %123, align 8
  %129 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 0, i32 0
  %130 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %129, align 8
  %131 = icmp eq %"class.std::__1::__tree_node_base"* %130, %113
  %132 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %128, i64 1, i32 0
  %133 = select i1 %131, %"class.std::__1::__tree_node_base"** %129, %"class.std::__1::__tree_node_base"** %132
  store %"class.std::__1::__tree_node_base"* %115, %"class.std::__1::__tree_node_base"** %133, align 8
  store %"class.std::__1::__tree_node_base"* %113, %"class.std::__1::__tree_node_base"** %116, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %115, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %123, align 8
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 0, i32 0
  %136 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %135, align 8
  %137 = icmp eq %"class.std::__1::__tree_node_base"* %98, %136
  %138 = select i1 %137, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %139 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %136, i64 0, i32 1
  %140 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %139, align 8
  br label %141

141:                                              ; preds = %122, %108
  %142 = phi %"class.std::__1::__tree_node_base"* [ %98, %108 ], [ %138, %122 ]
  %143 = phi %"class.std::__1::__tree_node_base"* [ %99, %108 ], [ %140, %122 ]
  %144 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %145 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %144, align 8
  %146 = icmp eq %"class.std::__1::__tree_node_base"* %145, null
  br i1 %146, label %151, label %147

147:                                              ; preds = %141
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  %149 = load i8, i8* %148, align 8, !range !8
  %150 = icmp eq i8 %149, 0
  br i1 %150, label %172, label %151

151:                                              ; preds = %147, %141
  %152 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %153 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %152, align 8
  %154 = icmp eq %"class.std::__1::__tree_node_base"* %153, null
  br i1 %154, label %159, label %155

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %153, i64 0, i32 3
  %157 = load i8, i8* %156, align 8, !range !8
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %177, label %159

159:                                              ; preds = %155, %151
  %160 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %162 = bitcast %"class.std::__1::__tree_end_node"** %161 to %"class.std::__1::__tree_node_base"**
  %163 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %162, align 8
  %164 = icmp eq %"class.std::__1::__tree_node_base"* %163, %142
  br i1 %164, label %169, label %165

165:                                              ; preds = %159
  %166 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %163, i64 0, i32 3
  %167 = load i8, i8* %166, align 8, !range !8
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %169, label %371

169:                                              ; preds = %165, %159
  %170 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %142, %159 ]
  %171 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %170, i64 0, i32 3
  store i8 1, i8* %171, align 8
  br label %382

172:                                              ; preds = %147
  %173 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  %174 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 1
  %175 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %174, align 8
  %176 = icmp eq %"class.std::__1::__tree_node_base"* %175, null
  br i1 %176, label %185, label %179

177:                                              ; preds = %155
  %178 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0, i32 0
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi %"class.std::__1::__tree_node_base"** [ %173, %172 ], [ %178, %177 ]
  %181 = phi %"class.std::__1::__tree_node_base"* [ %175, %172 ], [ %153, %177 ]
  %182 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %181, i64 0, i32 3
  %183 = load i8, i8* %182, align 8, !range !8
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %209, label %185

185:                                              ; preds = %179, %172
  %186 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %173, %172 ]
  %187 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %145, i64 0, i32 3
  store i8 1, i8* %187, align 8
  %188 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 3
  store i8 0, i8* %188, align 8
  %189 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %186, align 8
  %190 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 1
  %191 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %190, align 8
  store %"class.std::__1::__tree_node_base"* %191, %"class.std::__1::__tree_node_base"** %186, align 8
  %192 = icmp eq %"class.std::__1::__tree_node_base"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %185
  %194 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 0
  %195 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %191, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %194, %"class.std::__1::__tree_end_node"** %195, align 8
  br label %196

196:                                              ; preds = %193, %185
  %197 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %143, i64 0, i32 2
  %198 = bitcast %"class.std::__1::__tree_end_node"** %197 to i64*
  %199 = load i64, i64* %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 2
  %201 = bitcast %"class.std::__1::__tree_end_node"** %200 to i64*
  store i64 %199, i64* %201, align 8
  %202 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %197, align 8
  %203 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 0, i32 0
  %204 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %203, align 8
  %205 = icmp eq %"class.std::__1::__tree_node_base"* %204, %143
  %206 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %202, i64 1, i32 0
  %207 = select i1 %205, %"class.std::__1::__tree_node_base"** %203, %"class.std::__1::__tree_node_base"** %206
  store %"class.std::__1::__tree_node_base"* %189, %"class.std::__1::__tree_node_base"** %207, align 8
  store %"class.std::__1::__tree_node_base"* %143, %"class.std::__1::__tree_node_base"** %190, align 8
  %208 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %189, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %208, %"class.std::__1::__tree_end_node"** %197, align 8
  br label %209

209:                                              ; preds = %179, %196
  %210 = phi %"class.std::__1::__tree_node_base"* [ %189, %196 ], [ %143, %179 ]
  %211 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 2
  %212 = bitcast %"class.std::__1::__tree_end_node"** %211 to %"class.std::__1::__tree_node_base"**
  %213 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %214 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %213, i64 0, i32 3
  %215 = load i8, i8* %214, align 8, !range !8
  %216 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 3
  store i8 %215, i8* %216, align 8
  store i8 1, i8* %214, align 8
  %217 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %210, i64 0, i32 1
  %218 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %217, align 8
  %219 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %218, i64 0, i32 3
  store i8 1, i8* %219, align 8
  %220 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %212, align 8
  %221 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 1
  %222 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %221, align 8
  %223 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0, i32 0
  %224 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %223, align 8
  store %"class.std::__1::__tree_node_base"* %224, %"class.std::__1::__tree_node_base"** %221, align 8
  %225 = icmp eq %"class.std::__1::__tree_node_base"* %224, null
  br i1 %225, label %229, label %226

226:                                              ; preds = %209
  %227 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 0
  %228 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %224, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %227, %"class.std::__1::__tree_end_node"** %228, align 8
  br label %229

229:                                              ; preds = %226, %209
  %230 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %220, i64 0, i32 2
  %231 = bitcast %"class.std::__1::__tree_end_node"** %230 to i64*
  %232 = load i64, i64* %231, align 8
  %233 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 2
  %234 = bitcast %"class.std::__1::__tree_end_node"** %233 to i64*
  store i64 %232, i64* %234, align 8
  %235 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %230, align 8
  %236 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 0, i32 0
  %237 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %236, align 8
  %238 = icmp eq %"class.std::__1::__tree_node_base"* %237, %220
  %239 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %235, i64 1, i32 0
  %240 = select i1 %238, %"class.std::__1::__tree_node_base"** %236, %"class.std::__1::__tree_node_base"** %239
  store %"class.std::__1::__tree_node_base"* %222, %"class.std::__1::__tree_node_base"** %240, align 8
  store %"class.std::__1::__tree_node_base"* %220, %"class.std::__1::__tree_node_base"** %223, align 8
  %241 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %222, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %241, %"class.std::__1::__tree_end_node"** %230, align 8
  br label %382

242:                                              ; preds = %97
  br i1 %107, label %275, label %243

243:                                              ; preds = %242
  store i8 1, i8* %105, align 8
  %244 = bitcast %"class.std::__1::__tree_end_node"** %100 to %"class.std::__1::__tree_node_base"**
  %245 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %101, i64 3
  %246 = bitcast %"class.std::__1::__tree_end_node"* %245 to i8*
  store i8 0, i8* %246, align 8
  %247 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %244, align 8
  %248 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0, i32 0
  %249 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %248, align 8
  %250 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 1
  %251 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %250, align 8
  store %"class.std::__1::__tree_node_base"* %251, %"class.std::__1::__tree_node_base"** %248, align 8
  %252 = icmp eq %"class.std::__1::__tree_node_base"* %251, null
  br i1 %252, label %256, label %253

253:                                              ; preds = %243
  %254 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 0
  %255 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %251, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %254, %"class.std::__1::__tree_end_node"** %255, align 8
  br label %256

256:                                              ; preds = %253, %243
  %257 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %247, i64 0, i32 2
  %258 = bitcast %"class.std::__1::__tree_end_node"** %257 to i64*
  %259 = load i64, i64* %258, align 8
  %260 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 2
  %261 = bitcast %"class.std::__1::__tree_end_node"** %260 to i64*
  store i64 %259, i64* %261, align 8
  %262 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %257, align 8
  %263 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 0, i32 0
  %264 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %263, align 8
  %265 = icmp eq %"class.std::__1::__tree_node_base"* %264, %247
  %266 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %262, i64 1, i32 0
  %267 = select i1 %265, %"class.std::__1::__tree_node_base"** %263, %"class.std::__1::__tree_node_base"** %266
  store %"class.std::__1::__tree_node_base"* %249, %"class.std::__1::__tree_node_base"** %267, align 8
  store %"class.std::__1::__tree_node_base"* %247, %"class.std::__1::__tree_node_base"** %250, align 8
  %268 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %249, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %268, %"class.std::__1::__tree_end_node"** %257, align 8
  %269 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %99, i64 0, i32 1
  %270 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %269, align 8
  %271 = icmp eq %"class.std::__1::__tree_node_base"* %98, %270
  %272 = select i1 %271, %"class.std::__1::__tree_node_base"* %99, %"class.std::__1::__tree_node_base"* %98
  %273 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %270, i64 0, i32 0, i32 0
  %274 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %273, align 8
  br label %275

275:                                              ; preds = %256, %242
  %276 = phi %"class.std::__1::__tree_node_base"* [ %98, %242 ], [ %272, %256 ]
  %277 = phi %"class.std::__1::__tree_node_base"* [ %99, %242 ], [ %274, %256 ]
  %278 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0, i32 0
  %279 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %278, align 8
  %280 = icmp eq %"class.std::__1::__tree_node_base"* %279, null
  br i1 %280, label %285, label %281

281:                                              ; preds = %275
  %282 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %283 = load i8, i8* %282, align 8, !range !8
  %284 = icmp eq i8 %283, 0
  br i1 %284, label %338, label %285

285:                                              ; preds = %281, %275
  %286 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %287 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %286, align 8
  %288 = icmp eq %"class.std::__1::__tree_node_base"* %287, null
  br i1 %288, label %293, label %289

289:                                              ; preds = %285
  %290 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %287, i64 0, i32 3
  %291 = load i8, i8* %290, align 8, !range !8
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %305, label %293

293:                                              ; preds = %289, %285
  %294 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %294, align 8
  %295 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %296 = bitcast %"class.std::__1::__tree_end_node"** %295 to %"class.std::__1::__tree_node_base"**
  %297 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %296, align 8
  %298 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  %299 = load i8, i8* %298, align 8, !range !8
  %300 = icmp eq i8 %299, 0
  %301 = icmp eq %"class.std::__1::__tree_node_base"* %297, %276
  %302 = or i1 %301, %300
  br i1 %302, label %303, label %371

303:                                              ; preds = %293
  %304 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %297, i64 0, i32 3
  store i8 1, i8* %304, align 8
  br label %382

305:                                              ; preds = %289
  br i1 %280, label %313, label %306

306:                                              ; preds = %305
  %307 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %279, i64 0, i32 3
  %308 = load i8, i8* %307, align 8, !range !8
  %309 = icmp eq i8 %308, 0
  br i1 %309, label %338, label %310

310:                                              ; preds = %306
  %311 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %312 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %311, align 8
  br label %313

313:                                              ; preds = %310, %305
  %314 = phi %"class.std::__1::__tree_node_base"* [ %312, %310 ], [ %287, %305 ]
  %315 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 1
  %316 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %314, i64 0, i32 3
  store i8 1, i8* %316, align 8
  %317 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 3
  store i8 0, i8* %317, align 8
  %318 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %315, align 8
  %319 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0, i32 0
  %320 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %319, align 8
  store %"class.std::__1::__tree_node_base"* %320, %"class.std::__1::__tree_node_base"** %315, align 8
  %321 = icmp eq %"class.std::__1::__tree_node_base"* %320, null
  br i1 %321, label %325, label %322

322:                                              ; preds = %313
  %323 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 0
  %324 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %320, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %323, %"class.std::__1::__tree_end_node"** %324, align 8
  br label %325

325:                                              ; preds = %322, %313
  %326 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %277, i64 0, i32 2
  %327 = bitcast %"class.std::__1::__tree_end_node"** %326 to i64*
  %328 = load i64, i64* %327, align 8
  %329 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 2
  %330 = bitcast %"class.std::__1::__tree_end_node"** %329 to i64*
  store i64 %328, i64* %330, align 8
  %331 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %326, align 8
  %332 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 0, i32 0
  %333 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %332, align 8
  %334 = icmp eq %"class.std::__1::__tree_node_base"* %333, %277
  %335 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %331, i64 1, i32 0
  %336 = select i1 %334, %"class.std::__1::__tree_node_base"** %332, %"class.std::__1::__tree_node_base"** %335
  store %"class.std::__1::__tree_node_base"* %318, %"class.std::__1::__tree_node_base"** %336, align 8
  store %"class.std::__1::__tree_node_base"* %277, %"class.std::__1::__tree_node_base"** %319, align 8
  %337 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %318, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %337, %"class.std::__1::__tree_end_node"** %326, align 8
  br label %338

338:                                              ; preds = %281, %306, %325
  %339 = phi %"class.std::__1::__tree_node_base"* [ %318, %325 ], [ %277, %306 ], [ %277, %281 ]
  %340 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 2
  %341 = bitcast %"class.std::__1::__tree_end_node"** %340 to %"class.std::__1::__tree_node_base"**
  %342 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %343 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %342, i64 0, i32 3
  %344 = load i8, i8* %343, align 8, !range !8
  %345 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 3
  store i8 %344, i8* %345, align 8
  store i8 1, i8* %343, align 8
  %346 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %339, i64 0, i32 0, i32 0
  %347 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %346, align 8
  %348 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %347, i64 0, i32 3
  store i8 1, i8* %348, align 8
  %349 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %341, align 8
  %350 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0, i32 0
  %351 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %350, align 8
  %352 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 1
  %353 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %352, align 8
  store %"class.std::__1::__tree_node_base"* %353, %"class.std::__1::__tree_node_base"** %350, align 8
  %354 = icmp eq %"class.std::__1::__tree_node_base"* %353, null
  br i1 %354, label %358, label %355

355:                                              ; preds = %338
  %356 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 0
  %357 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %353, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %356, %"class.std::__1::__tree_end_node"** %357, align 8
  br label %358

358:                                              ; preds = %355, %338
  %359 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %349, i64 0, i32 2
  %360 = bitcast %"class.std::__1::__tree_end_node"** %359 to i64*
  %361 = load i64, i64* %360, align 8
  %362 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 2
  %363 = bitcast %"class.std::__1::__tree_end_node"** %362 to i64*
  store i64 %361, i64* %363, align 8
  %364 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %359, align 8
  %365 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 0, i32 0
  %366 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %365, align 8
  %367 = icmp eq %"class.std::__1::__tree_node_base"* %366, %349
  %368 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %364, i64 1, i32 0
  %369 = select i1 %367, %"class.std::__1::__tree_node_base"** %365, %"class.std::__1::__tree_node_base"** %368
  store %"class.std::__1::__tree_node_base"* %351, %"class.std::__1::__tree_node_base"** %369, align 8
  store %"class.std::__1::__tree_node_base"* %349, %"class.std::__1::__tree_node_base"** %352, align 8
  %370 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %351, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %370, %"class.std::__1::__tree_end_node"** %359, align 8
  br label %382

371:                                              ; preds = %293, %165
  %372 = phi %"class.std::__1::__tree_node_base"* [ %163, %165 ], [ %297, %293 ]
  %373 = phi %"class.std::__1::__tree_node_base"* [ %142, %165 ], [ %276, %293 ]
  %374 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %372, i64 0, i32 2
  %375 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %374, align 8
  %376 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 0, i32 0
  %377 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %376, align 8
  %378 = icmp eq %"class.std::__1::__tree_node_base"* %377, %372
  %379 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %375, i64 1, i32 0
  %380 = select i1 %378, %"class.std::__1::__tree_node_base"** %379, %"class.std::__1::__tree_node_base"** %376
  %381 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %380, align 8
  br label %97

382:                                              ; preds = %95, %358, %303, %229, %169, %90
  ret void
}

declare zeroext i1 @_ZNK3gpu25SharedMemoryRegionWrapper7IsValidEv(%"class.gpu::SharedMemoryRegionWrapper"*) local_unnamed_addr #4

declare i8* @_ZNK3gpu25SharedMemoryRegionWrapper9GetMemoryEv(%"class.gpu::SharedMemoryRegionWrapper"*) local_unnamed_addr #4

declare i64 @_ZNK3gpu25SharedMemoryRegionWrapper9GetStrideEv(%"class.gpu::SharedMemoryRegionWrapper"*) local_unnamed_addr #4

declare zeroext i1 @_ZN15GrDirectContext20updateBackendTextureERK16GrBackendTexturePK8SkPixmapi15GrSurfaceOriginPFvPvES7_(%class.GrDirectContext*, %class.GrBackendTexture* dereferenceable(176), %class.SkPixmap*, i32, i32, void (i8*)*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN3gfx8GpuFenceD1Ev(%"class.gfx::GpuFence"*) unnamed_addr #5

declare i64 @_ZN3gpu28GetSharedImageGUIDForTracingERKNS_7MailboxE(%"struct.gpu::Mailbox"* dereferenceable(16)) local_unnamed_addr #4

declare i64 @_ZN2gl33GetGLTextureServiceGUIDForTracingEm(i64) local_unnamed_addr #4

declare %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump31CreateSharedGlobalAllocatorDumpERKNS0_23MemoryAllocatorDumpGuidE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8)) local_unnamed_addr #4

declare void @_ZN4base11trace_event17ProcessMemoryDump16AddOwnershipEdgeERKNS0_23MemoryAllocatorDumpGuidES4_i(%"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8), %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8), i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu6raster12_GLOBAL__N_132WrappedSkImageRepresentationSkiaD2Ev(%"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia", %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3gpu6raster12_GLOBAL__N_132WrappedSkImageRepresentationSkiaE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"* %0 to %"class.gpu::SharedImageRepresentation"*
  tail call void @_ZN3gpu25SharedImageRepresentationD2Ev(%"class.gpu::SharedImageRepresentation"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu6raster12_GLOBAL__N_132WrappedSkImageRepresentationSkiaD0Ev(%"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia", %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [12 x i8*] }, { [12 x i8*] }* @_ZTVN3gpu6raster12_GLOBAL__N_132WrappedSkImageRepresentationSkiaE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = bitcast %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"* %0 to %"class.gpu::SharedImageRepresentation"*
  tail call void @_ZN3gpu25SharedImageRepresentationD2Ev(%"class.gpu::SharedImageRepresentation"* %3) #9
  %4 = bitcast %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @_ZN3gpu6raster12_GLOBAL__N_132WrappedSkImageRepresentationSkia36SupportsMultipleConcurrentReadAccessEv(%"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

declare void @_ZN3gpu29SharedImageRepresentationSkia16BeginWriteAccessEiRK14SkSurfacePropsPNSt3__16vectorI18GrBackendSemaphoreNS4_9allocatorIS6_EEEESA_PNS4_10unique_ptrI28GrBackendSurfaceMutableStateNS4_14default_deleteISC_EEEE(%class.sk_sp.331* sret, %"class.gpu::SharedImageRepresentationSkia"*, i32, %class.SkSurfaceProps* dereferenceable(8), %"class.std::__1::vector.338"*, %"class.std::__1::vector.338"*, %"class.std::__1::unique_ptr.339"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu6raster12_GLOBAL__N_132WrappedSkImageRepresentationSkia16BeginWriteAccessEiRK14SkSurfacePropsPNSt3__16vectorI18GrBackendSemaphoreNS6_9allocatorIS8_EEEESC_(%class.sk_sp.331* noalias nocapture sret, %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"* nocapture, i32, %class.SkSurfaceProps* dereferenceable(8), %"class.std::__1::vector.338"* nocapture readnone, %"class.std::__1::vector.338"* nocapture readnone) unnamed_addr #0 align 2 {
  %7 = alloca i8*, align 8
  %8 = alloca %class.sk_sp.331, align 8
  %9 = alloca %class.sk_sp.250, align 8
  %10 = alloca %"class.logging::LogMessage", align 8
  %11 = alloca %class.sk_sp.331, align 8
  %12 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia", %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"* %1, i64 0, i32 0, i32 0, i32 2
  %13 = bitcast %"class.gpu::SharedImageBacking"** %12 to %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"**
  %14 = load %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*, %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"** %13, align 8
  %15 = bitcast %class.sk_sp.250* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = bitcast %class.sk_sp.331* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %14, i64 0, i32 1, i32 0
  %18 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %17, align 8, !noalias !21
  %19 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %18, i64 0, i32 30, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 4, !range !8, !noalias !21
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %255

22:                                               ; preds = %6
  %23 = bitcast %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %14 to i8*
  %24 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %18, i64 0, i32 33, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %25 = bitcast %"class.std::__1::__tree_end_node"* %24 to %"class.std::__1::__tree_node"**
  %26 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %25, align 8, !noalias !24
  %27 = icmp eq %"class.std::__1::__tree_node"* %26, null
  br i1 %27, label %104, label %28

28:                                               ; preds = %22, %28
  %29 = phi %"class.std::__1::__tree_end_node"* [ %39, %28 ], [ %24, %22 ]
  %30 = phi %"class.std::__1::__tree_node"* [ %40, %28 ], [ %26, %22 ]
  %31 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %30, i64 0, i32 1, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8, !noalias !24
  %33 = icmp ult i8* %32, %23
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %30, i64 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::__tree_node_base"** %34 to %"class.std::__1::__tree_node"**
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %30, i64 0, i32 0, i32 0
  %37 = bitcast %"class.std::__1::__tree_node"* %30 to %"class.std::__1::__tree_node"**
  %38 = select i1 %33, %"class.std::__1::__tree_node"** %35, %"class.std::__1::__tree_node"** %37
  %39 = select i1 %33, %"class.std::__1::__tree_end_node"* %29, %"class.std::__1::__tree_end_node"* %36
  %40 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %38, align 8, !noalias !24
  %41 = icmp eq %"class.std::__1::__tree_node"* %40, null
  br i1 %41, label %42, label %28

42:                                               ; preds = %28
  %43 = icmp eq %"class.std::__1::__tree_end_node"* %39, %24
  br i1 %43, label %104, label %44

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 4
  %46 = bitcast %"class.std::__1::__tree_end_node"* %45 to i8**
  %47 = load i8*, i8** %46, align 8, !noalias !24
  %48 = icmp ugt i8* %47, %23
  br i1 %48, label %104, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %39, i64 5
  %51 = bitcast %"class.std::__1::__tree_end_node"* %50 to %"struct.std::__1::__list_node_base"**
  %52 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %51, align 8, !noalias !24
  %53 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %18, i64 0, i32 33, i32 0, i32 1, i32 0, i32 0, i32 1
  %54 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %53, align 8, !noalias !24
  %55 = icmp eq %"struct.std::__1::__list_node_base"* %54, %52
  br i1 %55, label %76, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %52, i64 0, i32 1
  %58 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %57, align 8, !noalias !24
  %59 = icmp eq %"struct.std::__1::__list_node_base"* %58, %54
  br i1 %59, label %76, label %60

60:                                               ; preds = %56
  %61 = ptrtoint %"struct.std::__1::__list_node_base"* %58 to i64
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %52, i64 0, i32 0
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8, !noalias !24
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = bitcast %"struct.std::__1::__list_node_base"** %64 to i64*
  store i64 %61, i64* %65, align 8, !noalias !24
  %66 = bitcast %"struct.std::__1::__list_node_base"* %52 to i64*
  %67 = load i64, i64* %66, align 8, !noalias !24
  %68 = bitcast %"struct.std::__1::__list_node_base"** %57 to i64**
  %69 = load i64*, i64** %68, align 8, !noalias !24
  store i64 %67, i64* %69, align 8, !noalias !24
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %54, i64 0, i32 0
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8, !noalias !24
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %52, %"struct.std::__1::__list_node_base"** %72, align 8, !noalias !24
  %73 = bitcast %"struct.std::__1::__list_node_base"* %54 to i64*
  %74 = load i64, i64* %73, align 8, !noalias !24
  store i64 %74, i64* %66, align 8, !noalias !24
  store %"struct.std::__1::__list_node_base"* %52, %"struct.std::__1::__list_node_base"** %70, align 8, !noalias !24
  store %"struct.std::__1::__list_node_base"* %54, %"struct.std::__1::__list_node_base"** %57, align 8, !noalias !24
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %53, align 8, !noalias !24
  br label %76

76:                                               ; preds = %60, %56, %49
  %77 = phi %"struct.std::__1::__list_node_base"* [ %52, %49 ], [ %54, %56 ], [ %75, %60 ]
  %78 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %18, i64 0, i32 33, i32 0, i32 1, i32 0, i32 0
  %79 = icmp eq %"struct.std::__1::__list_node_base"* %77, %78
  br i1 %79, label %104, label %80

80:                                               ; preds = %76
  %81 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %77, i64 1, i32 1
  %82 = bitcast %"struct.std::__1::__list_node_base"** %81 to %class.SkSurface**
  %83 = load %class.SkSurface*, %class.SkSurface** %82, align 8, !noalias !24
  %84 = icmp eq %class.SkSurface* %83, null
  br i1 %84, label %104, label %85

85:                                               ; preds = %80
  %86 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %83, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i32* %86, i32 1 monotonic, !noalias !24
  %88 = ptrtoint %class.SkSurface* %83 to i64
  %89 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %14, i64 0, i32 4
  %90 = load i32, i32* %89, align 8, !noalias !21
  %91 = icmp eq i32 %90, %2
  br i1 %91, label %92, label %104

92:                                               ; preds = %85
  %93 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %3, i64 0, i32 0
  %94 = load i32, i32* %93, align 4, !noalias !21
  %95 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %83, i64 0, i32 1, i32 0
  %96 = load i32, i32* %95, align 4, !noalias !21
  %97 = icmp eq i32 %94, %96
  br i1 %97, label %98, label %104

98:                                               ; preds = %92
  %99 = getelementptr inbounds %class.SkSurfaceProps, %class.SkSurfaceProps* %3, i64 0, i32 1
  %100 = load i32, i32* %99, align 4, !noalias !21
  %101 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %83, i64 0, i32 1, i32 1
  %102 = load i32, i32* %101, align 4, !noalias !21
  %103 = icmp eq i32 %100, %102
  br i1 %103, label %257, label %104

104:                                              ; preds = %98, %92, %85, %80, %76, %44, %42, %22
  %105 = phi %class.SkSurface* [ %83, %85 ], [ %83, %98 ], [ null, %76 ], [ null, %44 ], [ null, %42 ], [ null, %22 ], [ %83, %92 ], [ null, %80 ]
  %106 = bitcast %class.sk_sp.331* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %106) #9, !noalias !21
  %107 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %17, align 8, !noalias !21
  %108 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %107, i64 0, i32 15
  %109 = load %class.GrDirectContext*, %class.GrDirectContext** %108, align 8, !noalias !21
  %110 = getelementptr inbounds %class.GrDirectContext, %class.GrDirectContext* %109, i64 0, i32 0
  %111 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %14, i64 0, i32 2
  %112 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %14, i64 0, i32 0, i32 0, i32 6
  %113 = load i32, i32* %112, align 8, !noalias !21
  %114 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %14, i64 0, i32 0, i32 0, i32 3
  %115 = load i32, i32* %114, align 8, !noalias !21
  %116 = tail call i32 @_ZN3viz34ResourceFormatToClosestSkColorTypeEbNS_14ResourceFormatE(i1 zeroext true, i32 %115) #9, !noalias !21
  %117 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %14, i64 0, i32 0, i32 0, i32 5
  call void @_ZNK3gfx10ColorSpace14ToSkColorSpaceEv(%class.sk_sp.250* nonnull sret %9, %"class.gfx::ColorSpace"* %117) #9, !noalias !21
  call void @_ZN9SkSurface22MakeFromBackendTextureEP18GrRecordingContextRK16GrBackendTexture15GrSurfaceOrigini11SkColorType5sk_spI12SkColorSpaceEPK14SkSurfacePropsPFvPvESD_(%class.sk_sp.331* nonnull sret %8, %class.GrRecordingContext* %110, %class.GrBackendTexture* dereferenceable(176) %111, i32 %113, i32 %2, i32 %116, %class.sk_sp.250* nonnull %9, %class.SkSurfaceProps* %3, void (i8*)* null, i8* null) #9, !noalias !21
  %118 = getelementptr inbounds %class.sk_sp.331, %class.sk_sp.331* %8, i64 0, i32 0
  %119 = bitcast %class.sk_sp.331* %8 to i64*
  %120 = load i64, i64* %119, align 8, !noalias !21
  store %class.SkSurface* null, %class.SkSurface** %118, align 8, !noalias !21
  %121 = icmp eq %class.SkSurface* %105, null
  br i1 %121, label %145, label %122

122:                                              ; preds = %104
  %123 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %105, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = atomicrmw add i32* %123, i32 -1 acq_rel, !noalias !21
  %125 = icmp eq i32 %124, 1
  br i1 %125, label %126, label %132

126:                                              ; preds = %122
  %127 = bitcast %class.SkSurface* %105 to %class.SkRefCntBase*
  %128 = bitcast %class.SkSurface* %105 to void (%class.SkRefCntBase*)***
  %129 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %128, align 8, !noalias !21
  %130 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %129, i64 2
  %131 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %130, align 8, !noalias !21
  call void %131(%class.SkRefCntBase* nonnull %127) #9, !noalias !21
  br label %132

132:                                              ; preds = %126, %122
  %133 = load %class.SkSurface*, %class.SkSurface** %118, align 8, !noalias !21
  %134 = icmp eq %class.SkSurface* %133, null
  br i1 %134, label %145, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %133, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = atomicrmw add i32* %136, i32 -1 acq_rel, !noalias !21
  %138 = icmp eq i32 %137, 1
  br i1 %138, label %139, label %145

139:                                              ; preds = %135
  %140 = bitcast %class.SkSurface* %133 to %class.SkRefCntBase*
  %141 = bitcast %class.SkSurface* %133 to void (%class.SkRefCntBase*)***
  %142 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %141, align 8, !noalias !21
  %143 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %142, i64 2
  %144 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %143, align 8, !noalias !21
  call void %144(%class.SkRefCntBase* nonnull %140) #9, !noalias !21
  br label %145

145:                                              ; preds = %139, %135, %132, %104
  %146 = getelementptr inbounds %class.sk_sp.250, %class.sk_sp.250* %9, i64 0, i32 0
  %147 = load %class.SkColorSpace*, %class.SkColorSpace** %146, align 8, !noalias !21
  %148 = icmp eq %class.SkColorSpace* %147, null
  br i1 %148, label %155, label %149

149:                                              ; preds = %145
  %150 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %147, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %151 = atomicrmw add i32* %150, i32 -1 acq_rel, !noalias !21
  %152 = icmp eq i32 %151, 1
  br i1 %152, label %153, label %155

153:                                              ; preds = %149
  %154 = bitcast %class.SkColorSpace* %147 to i8*
  call void @_ZdlPv(i8* %154) #10, !noalias !21
  br label %155

155:                                              ; preds = %153, %149, %145
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %106) #9, !noalias !21
  %156 = inttoptr i64 %120 to %class.SkSurface*
  %157 = icmp eq i64 %120, 0
  br i1 %157, label %158, label %233

158:                                              ; preds = %155
  %159 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #9, !noalias !21
  br i1 %159, label %160, label %165

160:                                              ; preds = %158
  %161 = bitcast %"class.logging::LogMessage"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %161) #9, !noalias !21
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %10, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str, i64 0, i64 0), i32 124, i32 2) #9, !noalias !21
  %162 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %10, i64 0, i32 2
  %163 = bitcast %"class.std::__1::basic_ostringstream"* %162 to %"class.std::__1::basic_ostream"*
  %164 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %163, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.1, i64 0, i64 0), i64 32) #9, !noalias !21
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %10) #9, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %161) #9, !noalias !21
  br label %165

165:                                              ; preds = %160, %158
  %166 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %17, align 8, !noalias !21
  %167 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %166, i64 0, i32 33, i32 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %168 = bitcast %"class.std::__1::__tree_end_node"* %167 to %"class.std::__1::__tree_node"**
  %169 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %168, align 8, !noalias !21
  %170 = icmp eq %"class.std::__1::__tree_node"* %169, null
  br i1 %170, label %255, label %171

171:                                              ; preds = %165, %171
  %172 = phi %"class.std::__1::__tree_end_node"* [ %182, %171 ], [ %167, %165 ]
  %173 = phi %"class.std::__1::__tree_node"* [ %183, %171 ], [ %169, %165 ]
  %174 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %173, i64 0, i32 1, i32 0, i32 0
  %175 = load i8*, i8** %174, align 8, !noalias !21
  %176 = icmp ult i8* %175, %23
  %177 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %173, i64 0, i32 0, i32 1
  %178 = bitcast %"class.std::__1::__tree_node_base"** %177 to %"class.std::__1::__tree_node"**
  %179 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %173, i64 0, i32 0, i32 0
  %180 = bitcast %"class.std::__1::__tree_node"* %173 to %"class.std::__1::__tree_node"**
  %181 = select i1 %176, %"class.std::__1::__tree_node"** %178, %"class.std::__1::__tree_node"** %180
  %182 = select i1 %176, %"class.std::__1::__tree_end_node"* %172, %"class.std::__1::__tree_end_node"* %179
  %183 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %181, align 8, !noalias !21
  %184 = icmp eq %"class.std::__1::__tree_node"* %183, null
  br i1 %184, label %185, label %171

185:                                              ; preds = %171
  %186 = icmp eq %"class.std::__1::__tree_end_node"* %182, %167
  br i1 %186, label %255, label %187

187:                                              ; preds = %185
  %188 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %182, i64 4
  %189 = bitcast %"class.std::__1::__tree_end_node"* %188 to i8**
  %190 = load i8*, i8** %189, align 8, !noalias !21
  %191 = icmp ugt i8* %190, %23
  br i1 %191, label %255, label %192

192:                                              ; preds = %187
  %193 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %182, i64 5
  %194 = bitcast %"class.std::__1::__tree_end_node"* %193 to %"struct.std::__1::__list_node_base"**
  %195 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %194, align 8, !noalias !21
  %196 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %166, i64 0, i32 33, i32 0, i32 1, i32 0, i32 0
  %197 = icmp eq %"struct.std::__1::__list_node_base"* %195, %196
  br i1 %197, label %255, label %198

198:                                              ; preds = %192
  %199 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %195, i64 1
  %200 = bitcast %"struct.std::__1::__list_node_base"* %199 to i8**
  %201 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %166, i64 0, i32 33, i32 0, i32 2, i32 0
  %202 = call i64 @_ZNSt3__16__treeINS_12__value_typeIPvNS_15__list_iteratorINS_4pairIS2_5sk_spI9SkSurfaceEEES2_EEEENS_19__map_value_compareIS2_SA_NS_4lessIS2_EELb1EEENS_9allocatorISA_EEE14__erase_uniqueIS2_EEmRKT_(%"class.std::__1::__tree.142"* %201, i8** dereferenceable(8) %200) #9, !noalias !21
  %203 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %195, i64 0, i32 1
  %204 = bitcast %"struct.std::__1::__list_node_base"** %203 to i64*
  %205 = load i64, i64* %204, align 8, !noalias !21
  %206 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %195, i64 0, i32 0
  %207 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %206, align 8, !noalias !21
  %208 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %207, i64 0, i32 1
  %209 = bitcast %"struct.std::__1::__list_node_base"** %208 to i64*
  store i64 %205, i64* %209, align 8, !noalias !21
  %210 = bitcast %"struct.std::__1::__list_node_base"* %195 to i64*
  %211 = load i64, i64* %210, align 8, !noalias !21
  %212 = bitcast %"struct.std::__1::__list_node_base"** %203 to i64**
  %213 = load i64*, i64** %212, align 8, !noalias !21
  store i64 %211, i64* %213, align 8, !noalias !21
  %214 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %166, i64 0, i32 33, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %215 = load i64, i64* %214, align 8, !noalias !21
  %216 = add i64 %215, -1
  store i64 %216, i64* %214, align 8, !noalias !21
  %217 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %195, i64 1, i32 1
  %218 = bitcast %"struct.std::__1::__list_node_base"** %217 to %class.SkSurface**
  %219 = load %class.SkSurface*, %class.SkSurface** %218, align 8, !noalias !21
  %220 = icmp eq %class.SkSurface* %219, null
  br i1 %220, label %231, label %221

221:                                              ; preds = %198
  %222 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %219, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = atomicrmw add i32* %222, i32 -1 acq_rel, !noalias !21
  %224 = icmp eq i32 %223, 1
  br i1 %224, label %225, label %231

225:                                              ; preds = %221
  %226 = bitcast %class.SkSurface* %219 to %class.SkRefCntBase*
  %227 = bitcast %class.SkSurface* %219 to void (%class.SkRefCntBase*)***
  %228 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %227, align 8, !noalias !21
  %229 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %228, i64 2
  %230 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %229, align 8, !noalias !21
  call void %230(%class.SkRefCntBase* nonnull %226) #9, !noalias !21
  br label %231

231:                                              ; preds = %225, %221, %198
  %232 = bitcast %"struct.std::__1::__list_node_base"* %195 to i8*
  call void @_ZdlPv(i8* %232) #10, !noalias !21
  br label %255

233:                                              ; preds = %155
  %234 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %14, i64 0, i32 4
  store i32 %2, i32* %234, align 8, !noalias !21
  %235 = load %"class.gpu::SharedContextState"*, %"class.gpu::SharedContextState"** %17, align 8, !noalias !21
  %236 = getelementptr inbounds %class.sk_sp.331, %class.sk_sp.331* %11, i64 0, i32 0
  %237 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %156, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = atomicrmw add i32* %237, i32 1 monotonic, !noalias !21
  store %class.SkSurface* %156, %class.SkSurface** %236, align 8, !noalias !21
  %239 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %239) #9, !noalias !21
  %240 = bitcast i8** %7 to %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"**
  store %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %14, %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"** %240, align 8, !noalias !21
  %241 = getelementptr inbounds %"class.gpu::SharedContextState", %"class.gpu::SharedContextState"* %235, i64 0, i32 33, i32 0
  %242 = call %"struct.std::__1::__list_node_base"* @_ZN4base12MRUCacheBaseIPv5sk_spI9SkSurfaceENSt3__14lessIS1_EENS_19MRUCacheStandardMapEE3PutIRS4_EENS5_15__list_iteratorINS5_4pairIS1_S4_EES1_EERKS1_OT_(%"class.base::MRUCacheBase"* %241, i8** nonnull dereferenceable(8) %7, %class.sk_sp.331* nonnull dereferenceable(8) %11) #9, !noalias !21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %239) #9, !noalias !21
  %243 = load %class.SkSurface*, %class.SkSurface** %236, align 8, !noalias !21
  %244 = icmp eq %class.SkSurface* %243, null
  br i1 %244, label %257, label %245

245:                                              ; preds = %233
  %246 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %243, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = atomicrmw add i32* %246, i32 -1 acq_rel, !noalias !21
  %248 = icmp eq i32 %247, 1
  br i1 %248, label %249, label %257

249:                                              ; preds = %245
  %250 = bitcast %class.SkSurface* %243 to %class.SkRefCntBase*
  %251 = bitcast %class.SkSurface* %243 to void (%class.SkRefCntBase*)***
  %252 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %251, align 8, !noalias !21
  %253 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %252, i64 2
  %254 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %253, align 8, !noalias !21
  call void %254(%class.SkRefCntBase* nonnull %250) #9, !noalias !21
  br label %257

255:                                              ; preds = %165, %185, %187, %192, %231, %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  %256 = getelementptr inbounds %class.sk_sp.331, %class.sk_sp.331* %0, i64 0, i32 0
  store %class.SkSurface* null, %class.SkSurface** %256, align 8
  br label %264

257:                                              ; preds = %98, %249, %245, %233
  %258 = phi i64 [ %120, %233 ], [ %120, %245 ], [ %120, %249 ], [ %88, %98 ]
  %259 = phi %class.SkSurface* [ %156, %233 ], [ %156, %245 ], [ %156, %249 ], [ %83, %98 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  %260 = call %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface* nonnull %259) #9
  %261 = call i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas* %260) #9
  %262 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia", %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"* %1, i64 0, i32 1
  store %class.SkSurface* %259, %class.SkSurface** %262, align 8
  %263 = bitcast %class.sk_sp.331* %0 to i64*
  store i64 %258, i64* %263, align 8
  br label %264

264:                                              ; preds = %255, %257
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN3gpu6raster12_GLOBAL__N_132WrappedSkImageRepresentationSkia16BeginWriteAccessEPNSt3__16vectorI18GrBackendSemaphoreNS3_9allocatorIS5_EEEES9_PNS3_10unique_ptrI28GrBackendSurfaceMutableStateNS3_14default_deleteISB_EEEE(%class.sk_sp.257* noalias nocapture sret, %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"* nocapture readonly, %"class.std::__1::vector.338"* nocapture readnone, %"class.std::__1::vector.338"* nocapture readnone, %"class.std::__1::unique_ptr.339"* nocapture readnone) unnamed_addr #7 align 2 {
  %6 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia", %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"* %1, i64 0, i32 0, i32 0, i32 2
  %7 = bitcast %"class.gpu::SharedImageBacking"** %6 to %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"**
  %8 = load %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*, %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"** %7, align 8
  %9 = getelementptr inbounds %class.sk_sp.257, %class.sk_sp.257* %0, i64 0, i32 0
  %10 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %8, i64 0, i32 3, i32 0
  %11 = load %class.SkPromiseImageTexture*, %class.SkPromiseImageTexture** %10, align 8, !noalias !27
  %12 = icmp eq %class.SkPromiseImageTexture* %11, null
  br i1 %12, label %16, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %class.SkPromiseImageTexture, %class.SkPromiseImageTexture* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw add i32* %14, i32 1 monotonic, !noalias !27
  br label %16

16:                                               ; preds = %5, %13
  store %class.SkPromiseImageTexture* %11, %class.SkPromiseImageTexture** %9, align 8, !alias.scope !27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu6raster12_GLOBAL__N_132WrappedSkImageRepresentationSkia14EndWriteAccessE5sk_spI9SkSurfaceE(%"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"* nocapture, %class.sk_sp.331* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.sk_sp.331, %class.sk_sp.331* %1, i64 0, i32 0
  %4 = load %class.SkSurface*, %class.SkSurface** %3, align 8
  %5 = icmp eq %class.SkSurface* %4, null
  br i1 %5, label %22, label %6

6:                                                ; preds = %2
  %7 = tail call %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface* nonnull %4) #9
  tail call void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas* %7, i32 1) #9
  %8 = load %class.SkSurface*, %class.SkSurface** %3, align 8
  store %class.SkSurface* null, %class.SkSurface** %3, align 8
  %9 = icmp eq %class.SkSurface* %8, null
  br i1 %9, label %20, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 -1 acq_rel
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %14, label %20

14:                                               ; preds = %10
  %15 = bitcast %class.SkSurface* %8 to %class.SkRefCntBase*
  %16 = bitcast %class.SkSurface* %8 to void (%class.SkRefCntBase*)***
  %17 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %16, align 8
  %18 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %17, i64 2
  %19 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %18, align 8
  tail call void %19(%class.SkRefCntBase* nonnull %15) #9
  br label %20

20:                                               ; preds = %6, %10, %14
  %21 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia", %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"* %0, i64 0, i32 1
  store %class.SkSurface* null, %class.SkSurface** %21, align 8
  br label %22

22:                                               ; preds = %2, %20
  ret void
}

declare void @_ZN3gpu29SharedImageRepresentationSkia15BeginReadAccessEPNSt3__16vectorI18GrBackendSemaphoreNS1_9allocatorIS3_EEEES7_PNS1_10unique_ptrI28GrBackendSurfaceMutableStateNS1_14default_deleteIS9_EEEE(%class.sk_sp.257* sret, %"class.gpu::SharedImageRepresentationSkia"*, %"class.std::__1::vector.338"*, %"class.std::__1::vector.338"*, %"class.std::__1::unique_ptr.339"*) unnamed_addr #4

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @_ZN3gpu6raster12_GLOBAL__N_132WrappedSkImageRepresentationSkia15BeginReadAccessEPNSt3__16vectorI18GrBackendSemaphoreNS3_9allocatorIS5_EEEES9_(%class.sk_sp.257* noalias nocapture sret, %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"* nocapture readonly, %"class.std::__1::vector.338"* nocapture readnone, %"class.std::__1::vector.338"* nocapture readnone) unnamed_addr #7 align 2 {
  %5 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia", %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"* %1, i64 0, i32 0, i32 0, i32 2
  %6 = bitcast %"class.gpu::SharedImageBacking"** %5 to %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"**
  %7 = load %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*, %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"** %6, align 8
  %8 = getelementptr inbounds %class.sk_sp.257, %class.sk_sp.257* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %7, i64 0, i32 3, i32 0
  %10 = load %class.SkPromiseImageTexture*, %class.SkPromiseImageTexture** %9, align 8, !noalias !30
  %11 = icmp eq %class.SkPromiseImageTexture* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %class.SkPromiseImageTexture, %class.SkPromiseImageTexture* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw add i32* %13, i32 1 monotonic, !noalias !30
  br label %15

15:                                               ; preds = %4, %12
  store %class.SkPromiseImageTexture* %10, %class.SkPromiseImageTexture** %8, align 8, !alias.scope !30
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal void @_ZN3gpu6raster12_GLOBAL__N_132WrappedSkImageRepresentationSkia13EndReadAccessEv(%"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationSkia"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

declare void @_ZN3gpu25SharedImageRepresentationC2EPNS_18SharedImageManagerEPNS_18SharedImageBackingEPNS_17MemoryTypeTrackerE(%"class.gpu::SharedImageRepresentation"*, %"class.gpu::SharedImageManager"*, %"class.gpu::SharedImageBacking"*, %"class.gpu::MemoryTypeTracker"*) unnamed_addr #4

declare %class.SkCanvas* @_ZN9SkSurface9getCanvasEv(%class.SkSurface*) local_unnamed_addr #4

declare i32 @_ZN8SkCanvas4saveEv(%class.SkCanvas*) local_unnamed_addr #4

declare void @_ZN9SkSurface22MakeFromBackendTextureEP18GrRecordingContextRK16GrBackendTexture15GrSurfaceOrigini11SkColorType5sk_spI12SkColorSpaceEPK14SkSurfacePropsPFvPvESD_(%class.sk_sp.331* sret, %class.GrRecordingContext*, %class.GrBackendTexture* dereferenceable(176), i32, i32, i32, %class.sk_sp.250*, %class.SkSurfaceProps*, void (i8*)*, i8*) local_unnamed_addr #4

declare void @_ZNK3gfx10ColorSpace14ToSkColorSpaceEv(%class.sk_sp.250* sret, %"class.gfx::ColorSpace"*) local_unnamed_addr #4

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #4

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #9
  %7 = load i8, i8* %6, align 8, !range !8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #9
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #9
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #9
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #9
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #9
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #9
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #9
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #9
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #9
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #10
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #9
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #10
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #9
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #9
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #5

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #5

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__list_node_base"* @_ZN4base12MRUCacheBaseIPv5sk_spI9SkSurfaceENSt3__14lessIS1_EENS_19MRUCacheStandardMapEE3PutIRS4_EENS5_15__list_iteratorINS5_4pairIS1_S4_EES1_EERKS1_OT_(%"class.base::MRUCacheBase"*, i8** dereferenceable(8), %class.sk_sp.331* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0
  %6 = bitcast %"class.std::__1::__tree_end_node"* %5 to %"class.std::__1::__tree_node"**
  %7 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %8 = icmp eq %"class.std::__1::__tree_node"* %7, null
  br i1 %8, label %70, label %9

9:                                                ; preds = %3
  %10 = load i8*, i8** %1, align 8
  br label %11

11:                                               ; preds = %11, %9
  %12 = phi %"class.std::__1::__tree_end_node"* [ %5, %9 ], [ %22, %11 ]
  %13 = phi %"class.std::__1::__tree_node"* [ %7, %9 ], [ %23, %11 ]
  %14 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 1, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = icmp ult i8* %15, %10
  %17 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::__tree_node_base"** %17 to %"class.std::__1::__tree_node"**
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  %20 = bitcast %"class.std::__1::__tree_node"* %13 to %"class.std::__1::__tree_node"**
  %21 = select i1 %16, %"class.std::__1::__tree_node"** %18, %"class.std::__1::__tree_node"** %20
  %22 = select i1 %16, %"class.std::__1::__tree_end_node"* %12, %"class.std::__1::__tree_end_node"* %19
  %23 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %21, align 8
  %24 = icmp eq %"class.std::__1::__tree_node"* %23, null
  br i1 %24, label %25, label %11

25:                                               ; preds = %11
  %26 = icmp eq %"class.std::__1::__tree_end_node"* %22, %5
  br i1 %26, label %70, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 4
  %29 = bitcast %"class.std::__1::__tree_end_node"* %28 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = icmp ult i8* %10, %30
  br i1 %31, label %70, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %22, i64 5
  %34 = bitcast %"class.std::__1::__tree_end_node"* %33 to %"struct.std::__1::__list_node_base"**
  %35 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %35, i64 1
  %37 = bitcast %"struct.std::__1::__list_node_base"* %36 to i8**
  %38 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 2, i32 0
  %39 = tail call i64 @_ZNSt3__16__treeINS_12__value_typeIPvNS_15__list_iteratorINS_4pairIS2_5sk_spI9SkSurfaceEEES2_EEEENS_19__map_value_compareIS2_SA_NS_4lessIS2_EELb1EEENS_9allocatorISA_EEE14__erase_uniqueIS2_EEmRKT_(%"class.std::__1::__tree.142"* %38, i8** dereferenceable(8) %37) #9
  %40 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %35, i64 0, i32 1
  %41 = bitcast %"struct.std::__1::__list_node_base"** %40 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %35, i64 0, i32 0
  %44 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %43, align 8
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %44, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  store i64 %42, i64* %46, align 8
  %47 = bitcast %"struct.std::__1::__list_node_base"* %35 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"struct.std::__1::__list_node_base"** %40 to i64**
  %50 = load i64*, i64** %49, align 8
  store i64 %48, i64* %50, align 8
  %51 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %52, -1
  store i64 %53, i64* %51, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %35, i64 1, i32 1
  %55 = bitcast %"struct.std::__1::__list_node_base"** %54 to %class.SkSurface**
  %56 = load %class.SkSurface*, %class.SkSurface** %55, align 8
  %57 = icmp eq %class.SkSurface* %56, null
  br i1 %57, label %68, label %58

58:                                               ; preds = %32
  %59 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %56, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = atomicrmw add i32* %59, i32 -1 acq_rel
  %61 = icmp eq i32 %60, 1
  br i1 %61, label %62, label %68

62:                                               ; preds = %58
  %63 = bitcast %class.SkSurface* %56 to %class.SkRefCntBase*
  %64 = bitcast %class.SkSurface* %56 to void (%class.SkRefCntBase*)***
  %65 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %64, align 8
  %66 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %65, i64 2
  %67 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %66, align 8
  tail call void %67(%class.SkRefCntBase* nonnull %63) #9
  br label %68

68:                                               ; preds = %32, %58, %62
  %69 = bitcast %"struct.std::__1::__list_node_base"* %35 to i8*
  tail call void @_ZdlPv(i8* %69) #10
  br label %120

70:                                               ; preds = %27, %25, %3
  %71 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 3
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, 0
  br i1 %73, label %120, label %74

74:                                               ; preds = %70
  %75 = add i64 %72, -1
  %76 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = icmp ugt i64 %77, %75
  br i1 %78, label %79, label %120

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 2, i32 0
  %82 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  br label %83

83:                                               ; preds = %116, %79
  %84 = phi i64 [ %77, %79 ], [ %118, %116 ]
  %85 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %80, align 8
  %86 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %85, i64 1
  %87 = bitcast %"struct.std::__1::__list_node_base"* %86 to i8**
  %88 = tail call i64 @_ZNSt3__16__treeINS_12__value_typeIPvNS_15__list_iteratorINS_4pairIS2_5sk_spI9SkSurfaceEEES2_EEEENS_19__map_value_compareIS2_SA_NS_4lessIS2_EELb1EEENS_9allocatorISA_EEE14__erase_uniqueIS2_EEmRKT_(%"class.std::__1::__tree.142"* %81, i8** dereferenceable(8) %87) #9
  %89 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %85, i64 0, i32 1
  %90 = bitcast %"struct.std::__1::__list_node_base"** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %85, i64 0, i32 0
  %93 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %92, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %93, i64 0, i32 1
  %95 = bitcast %"struct.std::__1::__list_node_base"** %94 to i64*
  store i64 %91, i64* %95, align 8
  %96 = bitcast %"struct.std::__1::__list_node_base"* %85 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = bitcast %"struct.std::__1::__list_node_base"** %89 to i64**
  %99 = load i64*, i64** %98, align 8
  store i64 %97, i64* %99, align 8
  %100 = load i64, i64* %82, align 8
  %101 = add i64 %100, -1
  store i64 %101, i64* %82, align 8
  %102 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %85, i64 1, i32 1
  %103 = bitcast %"struct.std::__1::__list_node_base"** %102 to %class.SkSurface**
  %104 = load %class.SkSurface*, %class.SkSurface** %103, align 8
  %105 = icmp eq %class.SkSurface* %104, null
  br i1 %105, label %116, label %106

106:                                              ; preds = %83
  %107 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %104, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i32* %107, i32 -1 acq_rel
  %109 = icmp eq i32 %108, 1
  br i1 %109, label %110, label %116

110:                                              ; preds = %106
  %111 = bitcast %class.SkSurface* %104 to %class.SkRefCntBase*
  %112 = bitcast %class.SkSurface* %104 to void (%class.SkRefCntBase*)***
  %113 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %112, align 8
  %114 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %113, i64 2
  %115 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %114, align 8
  tail call void %115(%class.SkRefCntBase* nonnull %111) #9
  br label %116

116:                                              ; preds = %110, %106, %83
  %117 = bitcast %"struct.std::__1::__list_node_base"* %85 to i8*
  tail call void @_ZdlPv(i8* %117) #10
  %118 = add i64 %84, -1
  %119 = icmp ugt i64 %118, %75
  br i1 %119, label %83, label %120

120:                                              ; preds = %116, %74, %70, %68
  %121 = tail call i8* @_Znwm(i64 32) #10, !noalias !33
  %122 = bitcast i8* %121 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %122, align 8, !noalias !33
  %123 = getelementptr inbounds i8, i8* %121, i64 16
  %124 = bitcast i8** %1 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast i8* %123 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds i8, i8* %121, i64 24
  %128 = bitcast i8* %127 to %class.SkSurface**
  %129 = getelementptr inbounds %class.sk_sp.331, %class.sk_sp.331* %2, i64 0, i32 0
  %130 = load %class.SkSurface*, %class.SkSurface** %129, align 8
  %131 = icmp eq %class.SkSurface* %130, null
  br i1 %131, label %135, label %132

132:                                              ; preds = %120
  %133 = getelementptr inbounds %class.SkSurface, %class.SkSurface* %130, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = atomicrmw add i32* %133, i32 1 monotonic
  br label %135

135:                                              ; preds = %120, %132
  store %class.SkSurface* %130, %class.SkSurface** %128, align 8
  %136 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 1, i32 0, i32 0
  store %"struct.std::__1::__list_node_base"* %136, %"struct.std::__1::__list_node_base"** %122, align 8
  %137 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %138 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %137, align 8
  %139 = getelementptr inbounds i8, i8* %121, i64 8
  %140 = bitcast i8* %139 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* %138, %"struct.std::__1::__list_node_base"** %140, align 8
  %141 = bitcast %"struct.std::__1::__list_node_base"* %138 to i8**
  store i8* %121, i8** %141, align 8
  %142 = bitcast %"struct.std::__1::__list_node_base"** %137 to i8**
  store i8* %121, i8** %142, align 8
  %143 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %144 = load i64, i64* %143, align 8
  %145 = add i64 %144, 1
  store i64 %145, i64* %143, align 8
  %146 = ptrtoint i8* %121 to i64
  %147 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %6, align 8
  %148 = icmp eq %"class.std::__1::__tree_node"* %147, null
  %149 = bitcast i8* %121 to %"struct.std::__1::__list_node_base"*
  br i1 %148, label %179, label %150

150:                                              ; preds = %135
  %151 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %152 = load i8*, i8** %1, align 8
  br label %153

153:                                              ; preds = %175, %150
  %154 = phi %"class.std::__1::__tree_node"* [ %178, %175 ], [ %147, %150 ]
  %155 = phi %"class.std::__1::__tree_node_base"** [ %177, %175 ], [ %151, %150 ]
  %156 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %154, i64 0, i32 1, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = icmp ult i8* %152, %157
  br i1 %158, label %159, label %165

159:                                              ; preds = %153
  %160 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %154, i64 0, i32 0, i32 0, i32 0
  %161 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %160, align 8
  %162 = icmp eq %"class.std::__1::__tree_node_base"* %161, null
  br i1 %162, label %163, label %175

163:                                              ; preds = %159
  %164 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %154, i64 0, i32 0, i32 0
  br label %181

165:                                              ; preds = %153
  %166 = icmp ult i8* %157, %152
  br i1 %166, label %167, label %173

167:                                              ; preds = %165
  %168 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %154, i64 0, i32 0, i32 1
  %169 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %168, align 8
  %170 = icmp eq %"class.std::__1::__tree_node_base"* %169, null
  br i1 %170, label %171, label %175

171:                                              ; preds = %167
  %172 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %154, i64 0, i32 0, i32 0
  br label %181

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %154, i64 0, i32 0, i32 0
  br label %181

175:                                              ; preds = %167, %159
  %176 = phi %"class.std::__1::__tree_node_base"* [ %161, %159 ], [ %169, %167 ]
  %177 = phi %"class.std::__1::__tree_node_base"** [ %160, %159 ], [ %168, %167 ]
  %178 = bitcast %"class.std::__1::__tree_node_base"* %176 to %"class.std::__1::__tree_node"*
  br label %153

179:                                              ; preds = %135
  %180 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %5, i64 0, i32 0
  br label %181

181:                                              ; preds = %179, %173, %171, %163
  %182 = phi %"class.std::__1::__tree_end_node"* [ %5, %179 ], [ %164, %163 ], [ %172, %171 ], [ %174, %173 ]
  %183 = phi %"class.std::__1::__tree_node_base"** [ %180, %179 ], [ %160, %163 ], [ %168, %171 ], [ %155, %173 ]
  %184 = bitcast %"class.std::__1::__tree_node_base"** %183 to %"class.std::__1::__tree_node"**
  %185 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %184, align 8
  %186 = icmp eq %"class.std::__1::__tree_node"* %185, null
  br i1 %186, label %187, label %215

187:                                              ; preds = %181
  %188 = tail call i8* @_Znwm(i64 48) #10, !noalias !36
  %189 = getelementptr inbounds i8, i8* %188, i64 32
  %190 = load i64, i64* %124, align 8, !noalias !36
  %191 = bitcast i8* %189 to i64*
  store i64 %190, i64* %191, align 8, !noalias !36
  %192 = getelementptr inbounds i8, i8* %188, i64 40
  %193 = bitcast i8* %192 to i64*
  store i64 %146, i64* %193, align 8, !noalias !36
  %194 = bitcast i8* %188 to %"class.std::__1::__tree_node_base"*
  %195 = getelementptr inbounds i8, i8* %188, i64 16
  %196 = bitcast i8* %195 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %188, i8 0, i64 16, i1 false) #9
  store %"class.std::__1::__tree_end_node"* %182, %"class.std::__1::__tree_end_node"** %196, align 8
  %197 = bitcast %"class.std::__1::__tree_node_base"** %183 to i8**
  store i8* %188, i8** %197, align 8
  %198 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %4, i64 0, i32 0, i32 0
  %199 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %198, align 8
  %200 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %199, i64 0, i32 0
  %201 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %200, align 8
  %202 = icmp eq %"class.std::__1::__tree_node_base"* %201, null
  br i1 %202, label %207, label %203

203:                                              ; preds = %187
  %204 = ptrtoint %"class.std::__1::__tree_node_base"* %201 to i64
  %205 = bitcast %"class.std::__1::map"* %4 to i64*
  store i64 %204, i64* %205, align 8
  %206 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %183, align 8
  br label %207

207:                                              ; preds = %203, %187
  %208 = phi %"class.std::__1::__tree_node_base"* [ %194, %187 ], [ %206, %203 ]
  %209 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %210 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %209, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %210, %"class.std::__1::__tree_node_base"* %208) #9
  %211 = getelementptr inbounds %"class.base::MRUCacheBase", %"class.base::MRUCacheBase"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %212 = load i64, i64* %211, align 8
  %213 = add i64 %212, 1
  store i64 %213, i64* %211, align 8
  %214 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %137, align 8
  br label %215

215:                                              ; preds = %181, %207
  %216 = phi %"struct.std::__1::__list_node_base"* [ %149, %181 ], [ %214, %207 ]
  ret %"struct.std::__1::__list_node_base"* %216
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

declare void @_ZN8SkCanvas14restoreToCountEi(%class.SkCanvas*, i32) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @_ZN3gpu6raster12_GLOBAL__N_134WrappedSkImageRepresentationMemoryD0Ev(%"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationMemory"*) unnamed_addr #8 align 2 {
  %2 = bitcast %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationMemory"* %0 to %"class.gpu::SharedImageRepresentation"*
  tail call void @_ZN3gpu25SharedImageRepresentationD2Ev(%"class.gpu::SharedImageRepresentation"* %2) #9
  %3 = bitcast %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationMemory"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN3gpu6raster12_GLOBAL__N_134WrappedSkImageRepresentationMemory15BeginReadAccessEv(%class.SkPixmap* noalias nocapture sret, %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationMemory"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationMemory", %"class.gpu::raster::(anonymous namespace)::WrappedSkImageRepresentationMemory"* %1, i64 0, i32 0, i32 0, i32 2
  %4 = bitcast %"class.gpu::SharedImageBacking"** %3 to %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"**
  %5 = load %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*, %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"** %4, align 8
  %6 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %5, i64 0, i32 0, i32 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %5, i64 0, i32 0, i32 0, i32 4, i32 0
  %9 = load i32, i32* %8, align 4, !noalias !39
  %10 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %5, i64 0, i32 0, i32 0, i32 4, i32 1
  %11 = load i32, i32* %10, align 4, !noalias !39
  %12 = tail call i32 @_ZN3viz34ResourceFormatToClosestSkColorTypeEbNS_14ResourceFormatE(i1 zeroext true, i32 %7) #9, !noalias !39
  %13 = zext i32 %11 to i64
  %14 = shl nuw i64 %13, 32
  %15 = zext i32 %9 to i64
  %16 = or i64 %14, %15
  %17 = load %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*, %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"** %4, align 8
  %18 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %17, i64 0, i32 5
  %19 = tail call i8* @_ZNK3gpu25SharedMemoryRegionWrapper9GetMemoryEv(%"class.gpu::SharedMemoryRegionWrapper"* %18) #9
  %20 = load %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"*, %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"** %4, align 8
  %21 = getelementptr inbounds %"class.gpu::raster::(anonymous namespace)::WrappedSkImage", %"class.gpu::raster::(anonymous namespace)::WrappedSkImage"* %20, i64 0, i32 5
  %22 = tail call i64 @_ZNK3gpu25SharedMemoryRegionWrapper9GetStrideEv(%"class.gpu::SharedMemoryRegionWrapper"* %21) #9
  %23 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 0
  store i8* %19, i8** %23, align 8
  %24 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 1
  store i64 %22, i64* %24, align 8
  %25 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  store %class.SkColorSpace* null, %class.SkColorSpace** %25, align 8
  %26 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 2, i32 0, i32 1
  %27 = bitcast i32* %26 to i64*
  %28 = zext i32 %12 to i64
  %29 = or i64 %28, 4294967296
  store i64 %29, i64* %27, align 8
  %30 = getelementptr inbounds %class.SkPixmap, %class.SkPixmap* %0, i64 0, i32 2, i32 1
  %31 = bitcast %struct.SkISize* %30 to i64*
  store i64 %16, i64* %31, align 8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3gpu25SharedImageRepresentationD2Ev(%"class.gpu::SharedImageRepresentation"*) unnamed_addr #5

declare void @_ZN15GrDirectContext30createCompressedBackendTextureEiiN7SkImage15CompressionTypeEPKvm11GrMipmapped11GrProtectedPFvPvES6_(%class.GrBackendTexture* sret, %class.GrDirectContext*, i32, i32, i32, i8*, i64, i1 zeroext, i1 zeroext, void (i8*)*, i8*) local_unnamed_addr #4

declare dereferenceable(176) %class.GrBackendTexture* @_ZN16GrBackendTextureaSERKS_(%class.GrBackendTexture*, %class.GrBackendTexture* dereferenceable(176)) local_unnamed_addr #4

declare void @_ZN15GrDirectContext20createBackendTextureEii11SkColorType11GrMipmapped12GrRenderable11GrProtected(%class.GrBackendTexture* sret, %class.GrDirectContext*, i32, i32, i32, i1 zeroext, i1 zeroext, i1 zeroext) local_unnamed_addr #4

declare zeroext i1 @_ZNK16GrBackendTexture16getGLTextureInfoEP15GrGLTextureInfo(%class.GrBackendTexture*, %struct.GrGLTextureInfo*) local_unnamed_addr #4

declare zeroext i1 @_ZNK16GrBackendTexture14getVkImageInfoEP13GrVkImageInfo(%class.GrBackendTexture*, %struct.GrVkImageInfo*) local_unnamed_addr #4

declare void @_ZN15GrDirectContext20createBackendTextureEPK8SkPixmapi15GrSurfaceOrigin12GrRenderable11GrProtectedPFvPvES6_(%class.GrBackendTexture* sret, %class.GrDirectContext*, %class.SkPixmap*, i32, i32, i1 zeroext, i1 zeroext, void (i8*)*, i8*) local_unnamed_addr #4

declare void @_ZN21SkPromiseImageTextureC1ERK16GrBackendTexture(%class.SkPromiseImageTexture*, %class.GrBackendTexture* dereferenceable(176)) unnamed_addr #4

declare { i64, i8* } @_ZNK3gpu25SharedMemoryRegionWrapper15GetMemoryAsSpanEv(%"class.gpu::SharedMemoryRegionWrapper"*) local_unnamed_addr #4

declare dereferenceable(64) %"class.gpu::SharedMemoryRegionWrapper"* @_ZN3gpu25SharedMemoryRegionWrapperaSEOS0_(%"class.gpu::SharedMemoryRegionWrapper"*, %"class.gpu::SharedMemoryRegionWrapper"* dereferenceable(64)) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN3gpu6raster12_GLOBAL__N_115MakeSkImageInfoERKN3gfx4SizeEN3viz14ResourceFormatE: argument 0"}
!4 = distinct !{!4, !"_ZN3gpu6raster12_GLOBAL__N_115MakeSkImageInfoERKN3gfx4SizeEN3viz14ResourceFormatE"}
!5 = !{!6, !3}
!6 = distinct !{!6, !7, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!7 = distinct !{!7, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!8 = !{i8 0, i8 2}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN21SkPromiseImageTexture4MakeERK16GrBackendTexture: argument 0"}
!11 = distinct !{!11, !"_ZN21SkPromiseImageTexture4MakeERK16GrBackendTexture"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZN3gpu6raster12_GLOBAL__N_115MakeSkImageInfoERKN3gfx4SizeEN3viz14ResourceFormatE: argument 0"}
!14 = distinct !{!14, !"_ZN3gpu6raster12_GLOBAL__N_115MakeSkImageInfoERKN3gfx4SizeEN3viz14ResourceFormatE"}
!15 = !{!16, !13}
!16 = distinct !{!16, !17, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!17 = distinct !{!17, !"_ZN11SkImageInfo4MakeEii11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZN3gpu6raster12_GLOBAL__N_115MakeSkImageInfoERKN3gfx4SizeEN3viz14ResourceFormatE: argument 0"}
!20 = distinct !{!20, !"_ZN3gpu6raster12_GLOBAL__N_115MakeSkImageInfoERKN3gfx4SizeEN3viz14ResourceFormatE"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN3gpu6raster12_GLOBAL__N_114WrappedSkImage12GetSkSurfaceEiRK14SkSurfaceProps: argument 0"}
!23 = distinct !{!23, !"_ZN3gpu6raster12_GLOBAL__N_114WrappedSkImage12GetSkSurfaceEiRK14SkSurfaceProps"}
!24 = !{!25, !22}
!25 = distinct !{!25, !26, !"_ZN3gpu18SharedContextState18GetCachedSkSurfaceEPv: argument 0"}
!26 = distinct !{!26, !"_ZN3gpu18SharedContextState18GetCachedSkSurfaceEPv"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN3gpu6raster12_GLOBAL__N_114WrappedSkImage15promise_textureEv: argument 0"}
!29 = distinct !{!29, !"_ZN3gpu6raster12_GLOBAL__N_114WrappedSkImage15promise_textureEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN3gpu6raster12_GLOBAL__N_114WrappedSkImage15promise_textureEv: argument 0"}
!32 = distinct !{!32, !"_ZN3gpu6raster12_GLOBAL__N_114WrappedSkImage15promise_textureEv"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZNSt3__14listINS_4pairIPv5sk_spI9SkSurfaceEEENS_9allocatorIS6_EEE15__allocate_nodeERNS7_INS_11__list_nodeIS6_S2_EEEE: argument 0"}
!35 = distinct !{!35, !"_ZNSt3__14listINS_4pairIPv5sk_spI9SkSurfaceEEENS_9allocatorIS6_EEE15__allocate_nodeERNS7_INS_11__list_nodeIS6_S2_EEEE"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZNSt3__16__treeINS_12__value_typeIPvNS_15__list_iteratorINS_4pairIS2_5sk_spI9SkSurfaceEEES2_EEEENS_19__map_value_compareIS2_SA_NS_4lessIS2_EELb1EEENS_9allocatorISA_EEE16__construct_nodeIJRKS2_S9_EEENS_10unique_ptrINS_11__tree_nodeISA_S2_EENS_22__tree_node_destructorINSF_ISN_EEEEEEDpOT_: argument 0"}
!38 = distinct !{!38, !"_ZNSt3__16__treeINS_12__value_typeIPvNS_15__list_iteratorINS_4pairIS2_5sk_spI9SkSurfaceEEES2_EEEENS_19__map_value_compareIS2_SA_NS_4lessIS2_EELb1EEENS_9allocatorISA_EEE16__construct_nodeIJRKS2_S9_EEENS_10unique_ptrINS_11__tree_nodeISA_S2_EENS_22__tree_node_destructorINSF_ISN_EEEEEEDpOT_"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN3gpu6raster12_GLOBAL__N_115MakeSkImageInfoERKN3gfx4SizeEN3viz14ResourceFormatE: argument 0"}
!41 = distinct !{!41, !"_ZN3gpu6raster12_GLOBAL__N_115MakeSkImageInfoERKN3gfx4SizeEN3viz14ResourceFormatE"}
