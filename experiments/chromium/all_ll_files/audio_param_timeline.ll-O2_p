; ModuleID = '../../third_party/blink/renderer/modules/webaudio/audio_param_timeline.cc'
source_filename = "../../third_party/blink/renderer/modules/webaudio/audio_param_timeline.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::AudioParamTimeline::ParamEvent" = type <{ i32, float, double, float, [4 x i8], double, double, double, %"class.WTF::Vector.4", double, float, [4 x i8], %"class.std::__1::unique_ptr", i8, [7 x i8] }>
%"class.WTF::Vector.4" = type { %"class.WTF::VectorBuffer.5" }
%"class.WTF::VectorBuffer.5" = type { %"class.WTF::VectorBufferBase.6" }
%"class.WTF::VectorBufferBase.6" = type { float*, i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::AudioParamTimeline::ParamEvent"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.std::nothrow_t" = type { i8 }
%"class.blink::AudioParamTimeline" = type <{ %"class.WTF::Vector", %"class.WTF::HashSet", %"class.WTF::Mutex", float, [4 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.std::__1::unique_ptr"*, i32, i32 }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::AudioParamTimeline::ParamEvent"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.9", %"class.WTF::String" }
%"class.WTF::StringAppend.9" = type { %"class.WTF::String", i8* }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringAppend.10" = type { %"class.WTF::StringAppend.11", %"class.WTF::String" }
%"class.WTF::StringAppend.11" = type { %"class.WTF::StringAppend.12", i8* }
%"class.WTF::StringAppend.12" = type { i8*, %"class.WTF::String" }
%"class.WTF::StringAppend.13" = type { %"class.WTF::StringAppend", i8* }
%"class.WTF::StringTypeAdapter.521" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.519" = type { %"class.WTF::StringTypeAdapter.520" }
%"class.WTF::StringTypeAdapter.520" = type { %"class.WTF::StringView" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.v8::Isolate" = type { i8 }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.WTF::StringAppend.14" = type { %"class.WTF::StringAppend.15", i8* }
%"class.WTF::StringAppend.15" = type { %"class.WTF::StringAppend.16", %"class.WTF::String" }
%"class.WTF::StringAppend.16" = type { %"class.WTF::StringAppend.10", i8* }
%"class.WTF::IntegerToStringConverter" = type <{ [12 x i8], [4 x i8], i8*, i32, [4 x i8] }>
%"class.WTF::StringBuilder" = type <{ %"class.WTF::String", %union.anon.538, i32, i8, i8, [2 x i8] }>
%union.anon.538 = type { %"class.WTF::Vector.539" }
%"class.WTF::Vector.539" = type { %"class.WTF::VectorBuffer.540" }
%"class.WTF::VectorBuffer.540" = type { %"class.WTF::VectorBufferBase.541", [16 x i8] }
%"class.WTF::VectorBufferBase.541" = type { i8*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.522" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.524 }
%union.anon.524 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::AudioDestinationHandler" = type <{ %"class.blink::AudioHandler.base", [4 x i8], %"struct.std::__1::atomic.131", i8, [7 x i8] }>
%"class.blink::AudioHandler.base" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8], double, double, i8, [3 x i8], i32, %"class.blink::WeakPersistent", %"class.blink::UntracedMember", %class.scoped_refptr.291, %"class.WTF::Vector.352", %"class.WTF::Vector.358", i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32 }>
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.18" }
%"struct.std::__1::atomic.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__cxx_atomic_impl.21" }
%"struct.std::__1::__cxx_atomic_impl.21" = type { %"struct.std::__1::__cxx_atomic_base_impl.22" }
%"struct.std::__1::__cxx_atomic_base_impl.22" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::AudioNode"*, %"class.blink::PersistentNodePtr.350" }
%"class.blink::AudioNode" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::InspectorHelperMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.56", %class.scoped_refptr.291, %class.scoped_refptr.305, %"class.blink::HeapVector.334", %"class.blink::HeapVector.342" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference.23" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference.23" = type { %"class.v8::TracedReference.24" }
%"class.v8::TracedReference.24" = type { %"class.v8::BasicTracedReference.25" }
%"class.v8::BasicTracedReference.25" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.36" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.30" }
%"class.WTF::Vector.30" = type { %"class.WTF::VectorBuffer.31" }
%"class.WTF::VectorBuffer.31" = type { %"class.WTF::VectorBufferBase.32", [32 x i8] }
%"class.WTF::VectorBufferBase.32" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { %"class.WTF::AtomicString", %"class.blink::Member" }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::HeapVector.33"* }
%"class.blink::HeapVector.33" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.WTF::Vector.39"* }
%"class.WTF::Vector.39" = type opaque
%"class.blink::InspectorHelperMixin" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.43", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.43" = type { %"class.blink::MemberBase.44" }
%"class.blink::MemberBase.44" = type { %"class.blink::AudioGraphTracer"* }
%"class.blink::AudioGraphTracer" = type { %"class.blink::Supplement", %"class.blink::Member.49", %"class.blink::HeapHashSet" }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.47" }
%"class.blink::Member.47" = type { %"class.blink::MemberBase.48" }
%"class.blink::MemberBase.48" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.384", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.386", %"class.blink::Member.390", %"class.blink::Member.392", %"class.blink::Member.394", %"class.blink::Member.396", %"class.blink::Member.398", %"class.blink::Member.400", %"class.blink::Member.402", %"class.blink::HeapObserverSet.404", %"class.blink::Member.412", %"class.blink::Member.414", %"class.blink::Member.416", %"class.blink::Member.418", %"class.blink::Member.420", %"class.blink::Member.422", %"class.blink::Member.424", %"class.blink::Member.426", %"class.blink::Member.428", %"class.blink::Member.430", %"class.blink::Member.432", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.463", %"class.blink::Member.47", %"class.blink::Member.47", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.471", %"class.std::__1::unique_ptr.477", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.371" }
%"class.blink::HeapHashMap.371" = type { %"class.WTF::HashMap.374" }
%"class.WTF::HashMap.374" = type { %"class.WTF::HashTable.375" }
%"class.WTF::HashTable.375" = type <{ %"struct.WTF::KeyValuePair.377"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.377" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.378" }
%"class.std::__1::unique_ptr.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Member.384" = type { %"class.blink::MemberBase.385" }
%"class.blink::MemberBase.385" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type opaque
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.386" = type { %"class.blink::MemberBase.387" }
%"class.blink::MemberBase.387" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.47", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::Member.390" = type { %"class.blink::MemberBase.391" }
%"class.blink::MemberBase.391" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.392" = type { %"class.blink::MemberBase.393" }
%"class.blink::MemberBase.393" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.394" = type { %"class.blink::MemberBase.395" }
%"class.blink::MemberBase.395" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.396" = type { %"class.blink::MemberBase.397" }
%"class.blink::MemberBase.397" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.398" = type { %"class.blink::MemberBase.399" }
%"class.blink::MemberBase.399" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.400" = type { %"class.blink::MemberBase.401" }
%"class.blink::MemberBase.401" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.402" = type { %"class.blink::MemberBase.403" }
%"class.blink::MemberBase.403" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.404" = type { i32, [4 x i8], %"class.blink::HeapHashSet.405" }
%"class.blink::HeapHashSet.405" = type { %"class.WTF::HashSet.408" }
%"class.WTF::HashSet.408" = type { %"class.WTF::HashTable.409" }
%"class.WTF::HashTable.409" = type <{ %"class.blink::WeakMember.411"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.411" = type opaque
%"class.blink::Member.412" = type { %"class.blink::MemberBase.413" }
%"class.blink::MemberBase.413" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.414" = type { %"class.blink::MemberBase.415" }
%"class.blink::MemberBase.415" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.416" = type { %"class.blink::MemberBase.417" }
%"class.blink::MemberBase.417" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.418" = type { %"class.blink::MemberBase.419" }
%"class.blink::MemberBase.419" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.420" = type { %"class.blink::MemberBase.421" }
%"class.blink::MemberBase.421" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.422" = type { %"class.blink::MemberBase.423" }
%"class.blink::MemberBase.423" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.424" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.426" = type { %"class.blink::MemberBase.427" }
%"class.blink::MemberBase.427" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.428" = type { %"class.blink::MemberBase.429" }
%"class.blink::MemberBase.429" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.430" = type { %"class.blink::MemberBase.431" }
%"class.blink::MemberBase.431" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.432" = type { %"class.blink::MemberBase.433" }
%"class.blink::MemberBase.433" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.434" }
%"class.WTF::Deque.434" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.437" }
%"class.WTF::VectorBuffer.437" = type { %"class.WTF::VectorBufferBase.438" }
%"class.WTF::VectorBufferBase.438" = type { %"class.std::__1::unique_ptr.439"*, i32, i32 }
%"class.std::__1::unique_ptr.439" = type { %"class.std::__1::__compressed_pair.440" }
%"class.std::__1::__compressed_pair.440" = type { %"struct.std::__1::__compressed_pair_elem.441" }
%"struct.std::__1::__compressed_pair_elem.441" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.445", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.445" = type { %"class.std::__1::__bitset.446" }
%"class.std::__1::__bitset.446" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.447", i64, %"class.absl::optional.452", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.447" = type { %"class.absl::optional_internal::optional_data.448" }
%"class.absl::optional_internal::optional_data.448" = type { %"class.absl::optional_internal::optional_data_base.449" }
%"class.absl::optional_internal::optional_data_base.449" = type { %"class.absl::optional_internal::optional_data_dtor_base.450" }
%"class.absl::optional_internal::optional_data_dtor_base.450" = type { i8, %union.anon.451 }
%union.anon.451 = type { %"class.blink::WebSecurityOrigin" }
%"class.absl::optional.452" = type { %"class.absl::optional_internal::optional_data.453" }
%"class.absl::optional_internal::optional_data.453" = type { %"class.absl::optional_internal::optional_data_base.454" }
%"class.absl::optional_internal::optional_data_base.454" = type { %"class.absl::optional_internal::optional_data_dtor_base.455" }
%"class.absl::optional_internal::optional_data_dtor_base.455" = type { i8, %union.anon.456 }
%union.anon.456 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.457" }
%"class.std::__1::unique_ptr.457" = type { %"class.std::__1::__compressed_pair.458" }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.459" }
%"struct.std::__1::__compressed_pair_elem.459" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.463" = type { %"class.WTF::HashSet.466" }
%"class.WTF::HashSet.466" = type { %"class.WTF::HashTable.467" }
%"class.WTF::HashTable.467" = type <{ %"class.blink::WeakMember.469"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.469" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.470 }
%class.scoped_refptr.470 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.295", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.295" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.296" }
%"struct.std::__1::atomic.296" = type { %"struct.std::__1::__atomic_base.297" }
%"struct.std::__1::__atomic_base.297" = type { %"struct.std::__1::__atomic_base.298" }
%"struct.std::__1::__atomic_base.298" = type { %"struct.std::__1::__cxx_atomic_impl.299" }
%"struct.std::__1::__cxx_atomic_impl.299" = type { %"struct.std::__1::__cxx_atomic_base_impl.300" }
%"struct.std::__1::__cxx_atomic_base_impl.300" = type { i8 }
%"class.std::__1::unique_ptr.471" = type { %"class.std::__1::__compressed_pair.472" }
%"class.std::__1::__compressed_pair.472" = type { %"struct.std::__1::__compressed_pair_elem.473" }
%"struct.std::__1::__compressed_pair_elem.473" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.477" = type { %"class.std::__1::__compressed_pair.478" }
%"class.std::__1::__compressed_pair.478" = type { %"struct.std::__1::__compressed_pair_elem.479" }
%"struct.std::__1::__compressed_pair_elem.479" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr }
%"class.blink::Member.49" = type { %"class.blink::MemberBase.50" }
%"class.blink::MemberBase.50" = type { %"class.blink::InspectorWebAudioAgent"* }
%"class.blink::InspectorWebAudioAgent" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet.53" }
%"class.WTF::HashSet.53" = type { %"class.WTF::HashTable.54" }
%"class.WTF::HashTable.54" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.56" = type { %"class.blink::MemberBase.57" }
%"class.blink::MemberBase.57" = type { %"class.blink::BaseAudioContext"* }
%"class.blink::BaseAudioContext" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleStateObserver.base", %"class.blink::InspectorHelperMixin", %"class.blink::ThreadState::PrefinalizerRegistration.67", %"class.blink::Member.68", %"class.blink::HeapVector.70", i8, %class.scoped_refptr.287, i8, %"class.blink::Member.289", i8, %class.scoped_refptr.291, i32, %"class.blink::AsyncAudioDecoder", [3 x i8], %"class.blink::HeapHashSet.323", %"class.blink::Member.329", %"class.blink::Member.329", %"class.blink::Member.329", %"class.blink::Member.329", %class.scoped_refptr.331, %"class.blink::Member.332", %"class.blink::WorkerThread"* }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleStateObserver.base" = type { %"class.blink::ExecutionContextLifecycleObserver.base" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.58" }
%"class.blink::WeakMember.58" = type { %"class.blink::MemberBase.59" }
%"class.blink::MemberBase.59" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet" }
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.60" }
%"class.blink::HeapHashSet.60" = type { %"class.WTF::HashSet.63" }
%"class.WTF::HashSet.63" = type { %"class.WTF::HashTable.64" }
%"class.WTF::HashTable.64" = type <{ %"class.blink::WeakMember.66"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.66" = type opaque
%"class.blink::ThreadState::PrefinalizerRegistration.67" = type { i8 }
%"class.blink::Member.68" = type { %"class.blink::MemberBase.69" }
%"class.blink::MemberBase.69" = type { %"class.blink::AudioDestinationNode"* }
%"class.blink::AudioDestinationNode" = type { %"class.blink::AudioNode" }
%"class.blink::HeapVector.70" = type { %"class.WTF::Vector.73" }
%"class.WTF::Vector.73" = type { %"class.WTF::VectorBuffer.74" }
%"class.WTF::VectorBuffer.74" = type { %"class.WTF::VectorBufferBase.75" }
%"class.WTF::VectorBufferBase.75" = type { %"class.blink::Member.76"*, i32, i32 }
%"class.blink::Member.76" = type { %"class.blink::MemberBase.77" }
%"class.blink::MemberBase.77" = type { %"class.blink::ScriptPromiseResolver"* }
%"class.blink::ScriptPromiseResolver" = type { %"class.blink::ExecutionContextLifecycleObserver.base", %"class.blink::ThreadState::PrefinalizerRegistration.80", i32, %"class.blink::Member.81", %"class.blink::TaskHandle", %"class.blink::ScriptPromise::InternalResolver", %"class.blink::TraceWrapperV8Reference", %"class.blink::SelfKeepAlive.283" }
%"class.blink::ThreadState::PrefinalizerRegistration.80" = type { i8 }
%"class.blink::Member.81" = type { %"class.blink::MemberBase.82" }
%"class.blink::MemberBase.82" = type { %"class.blink::ScriptState"* }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.85, %"class.blink::Member.277", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%"class.v8::Context" = type { i8 }
%class.scoped_refptr.85 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.86" }
%"class.blink::PersistentBase.86" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.91" }
%"class.WTF::HashTable.91" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.blink::WeakMember.93", %"class.blink::TraceWrapperV8Reference.23" }
%"class.blink::WeakMember.93" = type { %"class.blink::MemberBase.94" }
%"class.blink::MemberBase.94" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.95", i32, [4 x i8], %"class.std::__1::unique_ptr.231", %"class.std::__1::unique_ptr.231", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.242", %"class.std::__1::unique_ptr.248", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.260", %"class.std::__1::unique_ptr.266", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.273", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.95" = type { %"class.std::__1::__compressed_pair.96" }
%"class.std::__1::__compressed_pair.96" = type { %"struct.std::__1::__compressed_pair_elem.97" }
%"struct.std::__1::__compressed_pair_elem.97" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.98", %"class.std::__1::unique_ptr.104", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.116", %"class.std::__1::unique_ptr.122", %"class.std::__1::unique_ptr.128", %"class.std::__1::unique_ptr.139", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.153", %"class.std::__1::unique_ptr.160", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.167", %"class.std::__1::unique_ptr.174", %"class.std::__1::unique_ptr.181", %"class.std::__1::unique_ptr.188", %"class.std::__1::unique_ptr.211", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.98" = type { %"class.std::__1::__compressed_pair.99" }
%"class.std::__1::__compressed_pair.99" = type { %"struct.std::__1::__compressed_pair_elem.100" }
%"struct.std::__1::__compressed_pair_elem.100" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.104" = type { %"class.std::__1::__compressed_pair.105" }
%"class.std::__1::__compressed_pair.105" = type { %"struct.std::__1::__compressed_pair_elem.106" }
%"struct.std::__1::__compressed_pair_elem.106" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.116" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.128" = type { %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.131" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%"class.std::__1::unique_ptr.139" = type { %"class.std::__1::__compressed_pair.140" }
%"class.std::__1::__compressed_pair.140" = type { %"struct.std::__1::__compressed_pair_elem.141" }
%"struct.std::__1::__compressed_pair_elem.141" = type { %"class.blink::Worklist.142"* }
%"class.blink::Worklist.142" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.131" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::Worklist.149"* }
%"class.blink::Worklist.149" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.131" }
%"class.std::__1::unique_ptr.153" = type { %"class.std::__1::__compressed_pair.154" }
%"class.std::__1::__compressed_pair.154" = type { %"struct.std::__1::__compressed_pair_elem.155" }
%"struct.std::__1::__compressed_pair_elem.155" = type { %"class.blink::Worklist.156"* }
%"class.blink::Worklist.156" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.131" }
%"class.std::__1::unique_ptr.160" = type { %"class.std::__1::__compressed_pair.161" }
%"class.std::__1::__compressed_pair.161" = type { %"struct.std::__1::__compressed_pair_elem.162" }
%"struct.std::__1::__compressed_pair_elem.162" = type { %"class.blink::Worklist.163"* }
%"class.blink::Worklist.163" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.131" }
%"class.std::__1::unique_ptr.167" = type { %"class.std::__1::__compressed_pair.168" }
%"class.std::__1::__compressed_pair.168" = type { %"struct.std::__1::__compressed_pair_elem.169" }
%"struct.std::__1::__compressed_pair_elem.169" = type { %"class.blink::Worklist.170"* }
%"class.blink::Worklist.170" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.131" }
%"class.std::__1::unique_ptr.174" = type { %"class.std::__1::__compressed_pair.175" }
%"class.std::__1::__compressed_pair.175" = type { %"struct.std::__1::__compressed_pair_elem.176" }
%"struct.std::__1::__compressed_pair_elem.176" = type { %"class.blink::Worklist.177"* }
%"class.blink::Worklist.177" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.131" }
%"class.std::__1::unique_ptr.181" = type { %"class.std::__1::__compressed_pair.182" }
%"class.std::__1::__compressed_pair.182" = type { %"struct.std::__1::__compressed_pair_elem.183" }
%"struct.std::__1::__compressed_pair_elem.183" = type { %"class.blink::Worklist.184"* }
%"class.blink::Worklist.184" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.131" }
%"class.std::__1::unique_ptr.188" = type { %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.190" }
%"struct.std::__1::__compressed_pair_elem.190" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.191", %"class.std::__1::__compressed_pair.198", %"class.std::__1::__compressed_pair.203", %"class.std::__1::__compressed_pair.205", [4 x i8] }>
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193", %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { i64 }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { float }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.214", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.214" = type { %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.223" }
%"class.WTF::Vector.223" = type { %"class.WTF::VectorBuffer.224" }
%"class.WTF::VectorBuffer.224" = type { %"class.WTF::VectorBufferBase.225" }
%"class.WTF::VectorBufferBase.225" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.239" }
%"class.WTF::VectorBuffer.239" = type { %"class.WTF::VectorBufferBase.240" }
%"class.WTF::VectorBufferBase.240" = type { %"struct.std::__1::pair.241"*, i32, i32 }
%"struct.std::__1::pair.241" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.242" = type { %"class.std::__1::__compressed_pair.243" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.248" = type { %"class.std::__1::__compressed_pair.249" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.250" }
%"struct.std::__1::__compressed_pair_elem.250" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.254" }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.142"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.149"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.156"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.163"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.170"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.364" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.365" }
%"struct.std::__1::__compressed_pair_elem.365" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.266" = type { %"class.std::__1::__compressed_pair.267" }
%"class.std::__1::__compressed_pair.267" = type { %"struct.std::__1::__compressed_pair_elem.268" }
%"struct.std::__1::__compressed_pair_elem.268" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.272 }
%class.scoped_refptr.272 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.273" = type { %"struct.std::__1::__atomic_base.274" }
%"struct.std::__1::__atomic_base.274" = type { %"struct.std::__1::__cxx_atomic_impl.275" }
%"struct.std::__1::__cxx_atomic_impl.275" = type { %"struct.std::__1::__cxx_atomic_base_impl.276" }
%"struct.std::__1::__cxx_atomic_base_impl.276" = type { i8 }
%"class.blink::Member.277" = type { %"class.blink::MemberBase.278" }
%"class.blink::MemberBase.278" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.279" }
%"class.blink::Persistent.279" = type { %"class.blink::PersistentBase.280" }
%"class.blink::PersistentBase.280" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ScriptPromise::InternalResolver" = type { %"class.blink::Member.81", %"class.blink::ScriptValue" }
%"class.blink::ScriptValue" = type { %"class.v8::Isolate"*, %"class.blink::WorldSafeV8Reference" }
%"class.blink::WorldSafeV8Reference" = type { %"class.blink::TraceWrapperV8Reference", %class.scoped_refptr.282 }
%class.scoped_refptr.282 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::SelfKeepAlive.283" = type { %"class.blink::Persistent.284" }
%"class.blink::Persistent.284" = type { %"class.blink::PersistentBase.285" }
%"class.blink::PersistentBase.285" = type { %"class.blink::ScriptPromiseResolver"*, %"class.blink::PersistentNodePtr" }
%class.scoped_refptr.287 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.288" }>
%"class.base::RefCountedThreadSafe.288" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.289" = type { %"class.blink::MemberBase.290" }
%"class.blink::MemberBase.290" = type { %"class.blink::AudioListener"* }
%"class.blink::AudioListener" = type opaque
%"class.blink::AsyncAudioDecoder" = type { i8 }
%"class.blink::HeapHashSet.323" = type { %"class.WTF::HashSet.326" }
%"class.WTF::HashSet.326" = type { %"class.WTF::HashTable.327" }
%"class.WTF::HashTable.327" = type <{ %"class.blink::Member.76"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.329" = type { %"class.blink::MemberBase.330" }
%"class.blink::MemberBase.330" = type { %"class.blink::PeriodicWave"* }
%"class.blink::PeriodicWave" = type opaque
%class.scoped_refptr.331 = type { %"class.blink::AudioDestinationHandler"* }
%"class.blink::Member.332" = type { %"class.blink::MemberBase.333" }
%"class.blink::MemberBase.333" = type { %"class.blink::AudioWorklet"* }
%"class.blink::AudioWorklet" = type opaque
%"class.blink::WorkerThread" = type opaque
%class.scoped_refptr.305 = type { %"class.blink::AudioHandler"* }
%"class.blink::AudioHandler" = type <{ i32 (...)**, %"class.WTF::ThreadSafeRefCounted", [4 x i8], double, double, i8, [3 x i8], i32, %"class.blink::WeakPersistent", %"class.blink::UntracedMember", %class.scoped_refptr.291, %"class.WTF::Vector.352", %"class.WTF::Vector.358", i32, i8, i8, [2 x i8], i32, i32, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapVector.334" = type { %"class.WTF::Vector.337" }
%"class.WTF::Vector.337" = type { %"class.WTF::VectorBuffer.338" }
%"class.WTF::VectorBuffer.338" = type { %"class.WTF::VectorBufferBase.339" }
%"class.WTF::VectorBufferBase.339" = type { %"class.blink::Member.340"*, i32, i32 }
%"class.blink::Member.340" = type opaque
%"class.blink::HeapVector.342" = type { %"class.WTF::Vector.345" }
%"class.WTF::Vector.345" = type { %"class.WTF::VectorBuffer.346" }
%"class.WTF::VectorBuffer.346" = type { %"class.WTF::VectorBufferBase.347" }
%"class.WTF::VectorBufferBase.347" = type { %"class.blink::Member.348"*, i32, i32 }
%"class.blink::Member.348" = type opaque
%"class.blink::PersistentNodePtr.350" = type { %"class.blink::PersistentNode"* }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.351" }
%"class.blink::MemberBase.351" = type { %"class.blink::BaseAudioContext"* }
%class.scoped_refptr.291 = type { %"class.blink::DeferredTaskHandler"* }
%"class.blink::DeferredTaskHandler" = type <{ %"class.WTF::ThreadSafeRefCounted.292", [4 x i8], %"class.base::SupportsWeakPtr", %"class.WTF::HashSet.301", %"class.WTF::Vector.306", i8, [3 x i8], i32, %"class.WTF::HashSet.311", %"class.WTF::HashSet.311", %"class.WTF::HashSet.315", %"class.WTF::HashSet.319", %"class.WTF::Vector.306", %"class.WTF::Vector.306", %"class.WTF::Vector.306", %"class.WTF::Vector.306", i8, [7 x i8], %"class.WTF::HashSet.301", %"class.WTF::Vector.306", %class.scoped_refptr.287, %"class.WTF::RecursiveMutex", %"class.WTF::Mutex", %"struct.std::__1::atomic.18", [4 x i8] }>
%"class.WTF::ThreadSafeRefCounted.292" = type { %"class.base::RefCountedThreadSafe.293" }
%"class.base::RefCountedThreadSafe.293" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::SupportsWeakPtr" = type { %"class.base::internal::WeakReferenceOwner" }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.294 }
%class.scoped_refptr.294 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.WTF::HashSet.311" = type { %"class.WTF::HashTable.312" }
%"class.WTF::HashTable.312" = type <{ %"class.blink::AudioHandler"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashSet.315" = type { %"class.WTF::HashTable.316" }
%"class.WTF::HashTable.316" = type <{ %"class.blink::AudioSummingJunction"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioSummingJunction" = type opaque
%"class.WTF::HashSet.319" = type { %"class.WTF::HashTable.320" }
%"class.WTF::HashTable.320" = type <{ %"class.blink::AudioNodeOutput"**, i32, i32, i32, [4 x i8] }>
%"class.blink::AudioNodeOutput" = type opaque
%"class.WTF::HashSet.301" = type { %"class.WTF::HashTable.302" }
%"class.WTF::HashTable.302" = type <{ %class.scoped_refptr.305*, i32, i32, i32, [4 x i8] }>
%"class.WTF::Vector.306" = type { %"class.WTF::VectorBuffer.307" }
%"class.WTF::VectorBuffer.307" = type { %"class.WTF::VectorBufferBase.308" }
%"class.WTF::VectorBufferBase.308" = type { %class.scoped_refptr.305*, i32, i32 }
%"class.WTF::RecursiveMutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::Vector.352" = type { %"class.WTF::VectorBuffer.353" }
%"class.WTF::VectorBuffer.353" = type { %"class.WTF::VectorBufferBase.354" }
%"class.WTF::VectorBufferBase.354" = type { %"class.std::__1::unique_ptr.355"*, i32, i32 }
%"class.std::__1::unique_ptr.355" = type opaque
%"class.WTF::Vector.358" = type { %"class.WTF::VectorBuffer.359" }
%"class.WTF::VectorBuffer.359" = type { %"class.WTF::VectorBufferBase.360" }
%"class.WTF::VectorBufferBase.360" = type { %"class.std::__1::unique_ptr.361"*, i32, i32 }
%"class.std::__1::unique_ptr.361" = type opaque
%"struct.std::__1::atomic.131" = type { %"struct.std::__1::__atomic_base.132" }
%"struct.std::__1::__atomic_base.132" = type { %"struct.std::__1::__atomic_base.133" }
%"struct.std::__1::__atomic_base.133" = type { %"struct.std::__1::__cxx_atomic_impl.134" }
%"struct.std::__1::__cxx_atomic_impl.134" = type { %"struct.std::__1::__cxx_atomic_base_impl.135" }
%"struct.std::__1::__cxx_atomic_base_impl.135" = type { i64 }
%"struct.blink::AudioParamTimeline::AutomationState" = type { i32, i64, i64, double, double, i32, i64, float, double, float, double, %"class.blink::AudioParamTimeline::ParamEvent"*, i32 }
%"class.std::__1::tuple.491" = type { %"struct.std::__1::__tuple_impl.492" }
%"struct.std::__1::__tuple_impl.492" = type <{ %"class.std::__1::__tuple_leaf.493", [4 x i8], %"class.std::__1::__tuple_leaf.494", %"class.std::__1::__tuple_leaf.495", [4 x i8] }>
%"class.std::__1::__tuple_leaf.493" = type { float }
%"class.std::__1::__tuple_leaf.494" = type { double }
%"class.std::__1::__tuple_leaf.495" = type { i32 }
%"class.std::__1::reverse_iterator" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"* }

$_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev = comdat any

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EcvS1_Ev = comdat any

$_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev = comdat any

$_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEEaSERKS2_ = comdat any

$_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKSB_SC_ = comdat any

$_ZN3WTFplINS_12StringAppendINS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_S4_EENS1_INS1_IT_T0_EET1_EERKSA_SB_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZN5blink17ExceptionMessages24IndexExceedsMinimumBoundIjEEN3WTF6StringEPKcT_S6_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE6insertIS8_EEvjOT_ = comdat any

$_ZN5blink18AudioParamTimeline10ParamEvent13EventPreceedsERKNSt3__110unique_ptrIS1_NS2_14default_deleteIS1_EEEES8_ = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE7EraseAtEjj = comdat any

$_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EC2ES7_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_EC2ES8_S2_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS2_14default_deleteIS6_EEEEEEmm = comdat any

$_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF9HashTableIPN5blink18AudioParamTimeline10ParamEventES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_S4_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPN5blink18AudioParamTimeline10ParamEventES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIPN5blink18AudioParamTimeline10ParamEventES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeEl = comdat any

$_ZNSt3__116__insertion_sortIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_T_ = comdat any

$_ZNSt3__118__stable_sort_moveIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeE = comdat any

$_ZNSt3__119__merge_move_assignIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_SD_SD_EEvT0_SE_T1_SF_T2_T_ = comdat any

$_ZNSt3__115__inplace_mergeIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_SE_T_NS_15iterator_traitsISE_E15difference_typeESI_PNSH_10value_typeEl = comdat any

$_ZNSt3__121__insertion_sort_moveIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_PNS_15iterator_traitsISE_E10value_typeET_ = comdat any

$_ZNSt3__124__buffered_inplace_mergeIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_SE_T_NS_15iterator_traitsISE_E15difference_typeESI_PNSH_10value_typeE = comdat any

$_ZNSt3__120__half_inplace_mergeIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_SD_SD_EEvT0_SE_T1_SF_T2_T_ = comdat any

$_ZNSt3__120__half_inplace_mergeINS_8__invertIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS5_EEEESA_EEENS_16reverse_iteratorIPS8_EESH_SH_EEvT0_SI_T1_SJ_T2_T_ = comdat any

@.str = private unnamed_addr constant [3 x i8] c", \00", align 1
@.str.1 = private unnamed_addr constant [15 x i8] c"setValueAtTime\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"linearRampToValueAtTime\00", align 1
@.str.3 = private unnamed_addr constant [23 x i8] c"exponentialRampToValue\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"setTargetAtTime\00", align 1
@.str.5 = private unnamed_addr constant [20 x i8] c"setValueCurveAtTime\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"..., \00", align 1
@.str.7 = private unnamed_addr constant [2 x i8] c"(\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"Time\00", align 1
@.str.10 = private unnamed_addr constant [34 x i8] c"The float target value provided (\00", align 1
@.str.11 = private unnamed_addr constant [31 x i8] c") should not be in the range (\00", align 1
@.str.12 = private unnamed_addr constant [3 x i8] c").\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"Time constant\00", align 1
@.str.14 = private unnamed_addr constant [9 x i8] c"Duration\00", align 1
@.str.15 = private unnamed_addr constant [13 x i8] c"curve length\00", align 1
@.str.16 = private unnamed_addr constant [11 x i8] c" overlaps \00", align 1
@__const._ZN5blink18AudioParamTimeline23ValuesForFrameRangeImplEmmfPfjddj.current_state = private unnamed_addr constant { i32, [4 x i8], i64, i64, double, double, i32, [4 x i8], i64, float, [4 x i8], double, float, [4 x i8], double, %"class.blink::AudioParamTimeline::ParamEvent"*, i32, [4 x i8] } { i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, i64 -6148914691236517206, double 0xFFFFFFFFFFFFFFFF, double 0xFFFFFFFFFFFFFFFF, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", i64 -6148914691236517206, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", double 0xFFFFFFFFFFFFFFFF, float 0xFFFFFFFFE0000000, [4 x i8] c"\AA\AA\AA\AA", double 0xFFFFFFFFFFFFFFFF, %"class.blink::AudioParamTimeline::ParamEvent"* inttoptr (i64 -6148914691236517206 to %"class.blink::AudioParamTimeline::ParamEvent"*), i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }, align 8
@.str.17 = private unnamed_addr constant [40 x i8] c" must be a finite non-negative number: \00", align 1
@.str.18 = private unnamed_addr constant [36 x i8] c" must be a finite positive number: \00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.19 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.20 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.21 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.22 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.23 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv = private unnamed_addr constant [53 x i8] c"const char *WTF::GetStringWithTypeName() [T = float]\00", align 1
@.str.24 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"The \00", align 1
@.str.27 = private unnamed_addr constant [12 x i8] c" provided (\00", align 1
@.str.28 = private unnamed_addr constant [16 x i8] c") is less than \00", align 1
@.str.29 = private unnamed_addr constant [13 x i8] c"or equal to \00", align 1
@.str.30 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.31 = private unnamed_addr constant [20 x i8] c"the minimum bound (\00", align 1
@.str.33 = private unnamed_addr constant [19 x i8] c"position <= size()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEEEEPKcv = private unnamed_addr constant [173 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::AudioParamTimeline::ParamEvent, std::__1::default_delete<blink::AudioParamTimeline::ParamEvent> >]\00", align 1
@.str.34 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.35 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.36 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink18AudioParamTimeline10ParamEventEEEPKcv = private unnamed_addr constant [87 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::AudioParamTimeline::ParamEvent *]\00", align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1
@.str.37 = private unnamed_addr constant [28 x i8] c"position + length <= size()\00", align 1

@_ZN5blink18AudioParamTimeline10ParamEventC1ENS1_4TypeEfdfdddRN3WTF6VectorIfLj0ENS3_18PartitionAllocatorEEEdfNSt3__110unique_ptrIS1_NS8_14default_deleteIS1_EEEE = hidden unnamed_addr alias void (%"class.blink::AudioParamTimeline::ParamEvent"*, i32, float, double, float, double, double, double, %"class.WTF::Vector.4"*, double, float, %"class.blink::AudioParamTimeline::ParamEvent"*), void (%"class.blink::AudioParamTimeline::ParamEvent"*, i32, float, double, float, double, double, double, %"class.WTF::Vector.4"*, double, float, %"class.blink::AudioParamTimeline::ParamEvent"*)* @_ZN5blink18AudioParamTimeline10ParamEventC2ENS1_4TypeEfdfdddRN3WTF6VectorIfLj0ENS3_18PartitionAllocatorEEEdfNSt3__110unique_ptrIS1_NS8_14default_deleteIS1_EEEE
@_ZN5blink18AudioParamTimeline10ParamEventC1ENS1_4TypeEfd = hidden unnamed_addr alias void (%"class.blink::AudioParamTimeline::ParamEvent"*, i32, float, double), void (%"class.blink::AudioParamTimeline::ParamEvent"*, i32, float, double)* @_ZN5blink18AudioParamTimeline10ParamEventC2ENS1_4TypeEfd
@_ZN5blink18AudioParamTimeline10ParamEventC1ENS1_4TypeEfdfd = hidden unnamed_addr alias void (%"class.blink::AudioParamTimeline::ParamEvent"*, i32, float, double, float, double), void (%"class.blink::AudioParamTimeline::ParamEvent"*, i32, float, double, float, double)* @_ZN5blink18AudioParamTimeline10ParamEventC2ENS1_4TypeEfdfd
@_ZN5blink18AudioParamTimeline10ParamEventC1ENS1_4TypeEfdd = hidden unnamed_addr alias void (%"class.blink::AudioParamTimeline::ParamEvent"*, i32, float, double, double), void (%"class.blink::AudioParamTimeline::ParamEvent"*, i32, float, double, double)* @_ZN5blink18AudioParamTimeline10ParamEventC2ENS1_4TypeEfdd
@_ZN5blink18AudioParamTimeline10ParamEventC1ENS1_4TypeEddRKN3WTF6VectorIfLj0ENS3_18PartitionAllocatorEEEdf = hidden unnamed_addr alias void (%"class.blink::AudioParamTimeline::ParamEvent"*, i32, double, double, %"class.WTF::Vector.4"*, double, float), void (%"class.blink::AudioParamTimeline::ParamEvent"*, i32, double, double, %"class.WTF::Vector.4"*, double, float)* @_ZN5blink18AudioParamTimeline10ParamEventC2ENS1_4TypeEddRKN3WTF6VectorIfLj0ENS3_18PartitionAllocatorEEEdf
@_ZN5blink18AudioParamTimeline10ParamEventC1ENS1_4TypeEdNSt3__110unique_ptrIS1_NS3_14default_deleteIS1_EEEE = hidden unnamed_addr alias void (%"class.blink::AudioParamTimeline::ParamEvent"*, i32, double, %"class.blink::AudioParamTimeline::ParamEvent"*), void (%"class.blink::AudioParamTimeline::ParamEvent"*, i32, double, %"class.blink::AudioParamTimeline::ParamEvent"*)* @_ZN5blink18AudioParamTimeline10ParamEventC2ENS1_4TypeEdNSt3__110unique_ptrIS1_NS3_14default_deleteIS1_EEEE

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink18AudioParamTimeline13EventToStringERKNS0_10ParamEventE(%"class.blink::AudioParamTimeline"* nocapture readnone, %"class.blink::AudioParamTimeline::ParamEvent"* nocapture readonly dereferenceable(96)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::StringAppend", align 8
  %4 = alloca %"class.WTF::StringAppend", align 8
  %5 = alloca %"class.WTF::StringAppend.9", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::StringAppend", align 8
  %11 = alloca %"class.WTF::StringAppend.9", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::StringAppend.10", align 8
  %14 = alloca %"class.WTF::StringAppend.11", align 8
  %15 = alloca %"class.WTF::StringAppend.13", align 8
  %16 = alloca %"class.WTF::StringAppend", align 8
  %17 = alloca %"class.WTF::StringAppend.9", align 8
  %18 = bitcast %"class.WTF::StringAppend"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #18
  %19 = bitcast %"class.WTF::StringAppend.9"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #18
  %20 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %1, i64 0, i32 1
  %21 = load float, float* %20, align 4
  %22 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEf(float %21) #18
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %68, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %41

31:                                               ; preds = %24
  %32 = zext i32 %30 to i33
  %33 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #18
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %31
  tail call void @llvm.trap() #18
  unreachable

39:                                               ; preds = %31
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %29, align 4
  br label %41

41:                                               ; preds = %24, %39
  %42 = phi i32 [ %40, %39 ], [ %30, %24 ]
  %43 = load atomic i32, i32* %25 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  br i1 %45, label %47, label %57

47:                                               ; preds = %41
  %48 = zext i32 %42 to i33
  %49 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #18
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !2

54:                                               ; preds = %47
  tail call void @llvm.trap() #18
  unreachable

55:                                               ; preds = %47
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %46, align 4
  br label %57

57:                                               ; preds = %55, %41
  %58 = phi i32 [ %56, %55 ], [ %42, %41 ]
  %59 = load atomic i32, i32* %25 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %57
  %63 = add i32 %58, -1
  store i32 %63, i32* %46, align 4
  br label %64

64:                                               ; preds = %62, %57
  %65 = phi i32 [ %63, %62 ], [ %58, %57 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #18
  br label %68

68:                                               ; preds = %2, %64, %67
  %69 = getelementptr inbounds %"class.WTF::StringAppend.9", %"class.WTF::StringAppend.9"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %69, align 8
  %70 = getelementptr inbounds %"class.WTF::StringAppend.9", %"class.WTF::StringAppend.9"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8** %70, align 8
  %71 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %1, i64 0, i32 2
  %72 = load double, double* %71, align 8
  %73 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double %72, i32 16) #18
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend"* nonnull sret %4, %"class.WTF::StringAppend.9"* nonnull dereferenceable(16) %5, %"class.WTF::StringImpl"* %73)
  %74 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %4)
  %75 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 1, i32 0, i32 0
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %68
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #18
  br label %91

91:                                               ; preds = %90, %87, %68
  %92 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %92, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #18
  br label %108

108:                                              ; preds = %91, %104, %107
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #18
  br label %124

124:                                              ; preds = %108, %120, %123
  br i1 %23, label %138, label %125

125:                                              ; preds = %124
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #18
  br label %138

138:                                              ; preds = %124, %134, %137
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #18
  %139 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %1, i64 0, i32 0
  %140 = load i32, i32* %139, align 8
  switch i32 %140, label %472 [
    i32 0, label %141
    i32 1, label %145
    i32 2, label %149
    i32 3, label %153
    i32 4, label %275
  ]

141:                                              ; preds = %138
  %142 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %142) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.1, i64 0, i64 0), i64 14) #18
  %143 = bitcast %"class.WTF::String"* %6 to i64*
  %144 = load i64, i64* %143, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %142) #18
  br label %472

145:                                              ; preds = %138
  %146 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0), i64 23) #18
  %147 = bitcast %"class.WTF::String"* %7 to i64*
  %148 = load i64, i64* %147, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #18
  br label %472

149:                                              ; preds = %138
  %150 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %150) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.3, i64 0, i64 0), i64 22) #18
  %151 = bitcast %"class.WTF::String"* %8 to i64*
  %152 = load i64, i64* %151, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %150) #18
  br label %472

153:                                              ; preds = %138
  %154 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %154) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i64 15) #18
  %155 = bitcast %"class.WTF::String"* %9 to i64*
  %156 = load i64, i64* %155, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %154) #18
  %157 = bitcast %"class.WTF::StringAppend"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %157) #18
  %158 = bitcast %"class.WTF::StringAppend.9"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %158) #18
  %159 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %159, label %204, label %160

160:                                              ; preds = %153
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %166 = load i32, i32* %165, align 4
  br i1 %164, label %167, label %177

167:                                              ; preds = %160
  %168 = zext i32 %166 to i33
  %169 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %168, i33 1) #18
  %170 = extractvalue { i33, i1 } %169, 1
  %171 = extractvalue { i33, i1 } %169, 0
  %172 = icmp slt i33 %171, 0
  %173 = or i1 %170, %172
  br i1 %173, label %174, label %175, !prof !2

174:                                              ; preds = %167
  call void @llvm.trap() #18
  unreachable

175:                                              ; preds = %167
  %176 = trunc i33 %171 to i32
  store i32 %176, i32* %165, align 4
  br label %177

177:                                              ; preds = %160, %175
  %178 = phi i32 [ %176, %175 ], [ %166, %160 ]
  %179 = load atomic i32, i32* %161 monotonic, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  br i1 %181, label %183, label %193

183:                                              ; preds = %177
  %184 = zext i32 %178 to i33
  %185 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %184, i33 1) #18
  %186 = extractvalue { i33, i1 } %185, 1
  %187 = extractvalue { i33, i1 } %185, 0
  %188 = icmp slt i33 %187, 0
  %189 = or i1 %186, %188
  br i1 %189, label %190, label %191, !prof !2

190:                                              ; preds = %183
  call void @llvm.trap() #18
  unreachable

191:                                              ; preds = %183
  %192 = trunc i33 %187 to i32
  store i32 %192, i32* %182, align 4
  br label %193

193:                                              ; preds = %191, %177
  %194 = phi i32 [ %192, %191 ], [ %178, %177 ]
  %195 = load atomic i32, i32* %161 monotonic, align 4
  %196 = and i32 %195, 2
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %200

198:                                              ; preds = %193
  %199 = add i32 %194, -1
  store i32 %199, i32* %182, align 4
  br label %200

200:                                              ; preds = %198, %193
  %201 = phi i32 [ %199, %198 ], [ %194, %193 ]
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %204

203:                                              ; preds = %200
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #18
  br label %204

204:                                              ; preds = %153, %200, %203
  %205 = getelementptr inbounds %"class.WTF::StringAppend.9", %"class.WTF::StringAppend.9"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %205, align 8
  %206 = getelementptr inbounds %"class.WTF::StringAppend.9", %"class.WTF::StringAppend.9"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8** %206, align 8
  %207 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %1, i64 0, i32 6
  %208 = load double, double* %207, align 8
  %209 = call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double %208, i32 16) #18
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend"* nonnull sret %10, %"class.WTF::StringAppend.9"* nonnull dereferenceable(16) %11, %"class.WTF::StringImpl"* %209)
  %210 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %10)
  br i1 %159, label %224, label %211

211:                                              ; preds = %204
  %212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load atomic i32, i32* %212 monotonic, align 4
  %214 = and i32 %213, 2
  %215 = icmp eq i32 %214, 0
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  br i1 %215, label %218, label %220

218:                                              ; preds = %211
  %219 = add i32 %217, -1
  store i32 %219, i32* %216, align 4
  br label %220

220:                                              ; preds = %218, %211
  %221 = phi i32 [ %219, %218 ], [ %217, %211 ]
  %222 = icmp eq i32 %221, 0
  br i1 %222, label %223, label %224

223:                                              ; preds = %220
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #18
  br label %224

224:                                              ; preds = %223, %220, %204
  %225 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 1, i32 0, i32 0
  %226 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %225, align 8
  %227 = icmp eq %"class.WTF::StringImpl"* %226, null
  br i1 %227, label %241, label %228

228:                                              ; preds = %224
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = and i32 %230, 2
  %232 = icmp eq i32 %231, 0
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %226, i64 0, i32 0
  %234 = load i32, i32* %233, align 4
  br i1 %232, label %235, label %237

235:                                              ; preds = %228
  %236 = add i32 %234, -1
  store i32 %236, i32* %233, align 4
  br label %237

237:                                              ; preds = %235, %228
  %238 = phi i32 [ %236, %235 ], [ %234, %228 ]
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %241

240:                                              ; preds = %237
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %226) #18
  br label %241

241:                                              ; preds = %240, %237, %224
  %242 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %243 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %242, align 8
  %244 = icmp eq %"class.WTF::StringImpl"* %243, null
  br i1 %244, label %258, label %245

245:                                              ; preds = %241
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %247 = load atomic i32, i32* %246 monotonic, align 4
  %248 = and i32 %247, 2
  %249 = icmp eq i32 %248, 0
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %243, i64 0, i32 0
  %251 = load i32, i32* %250, align 4
  br i1 %249, label %252, label %254

252:                                              ; preds = %245
  %253 = add i32 %251, -1
  store i32 %253, i32* %250, align 4
  br label %254

254:                                              ; preds = %252, %245
  %255 = phi i32 [ %253, %252 ], [ %251, %245 ]
  %256 = icmp eq i32 %255, 0
  br i1 %256, label %257, label %258

257:                                              ; preds = %254
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %243) #18
  br label %258

258:                                              ; preds = %241, %254, %257
  %259 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %205, align 8
  %260 = icmp eq %"class.WTF::StringImpl"* %259, null
  br i1 %260, label %274, label %261

261:                                              ; preds = %258
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load atomic i32, i32* %262 monotonic, align 4
  %264 = and i32 %263, 2
  %265 = icmp eq i32 %264, 0
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 0
  %267 = load i32, i32* %266, align 4
  br i1 %265, label %268, label %270

268:                                              ; preds = %261
  %269 = add i32 %267, -1
  store i32 %269, i32* %266, align 4
  br label %270

270:                                              ; preds = %268, %261
  %271 = phi i32 [ %269, %268 ], [ %267, %261 ]
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %273, label %274

273:                                              ; preds = %270
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %259) #18
  br label %274

274:                                              ; preds = %258, %270, %273
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %158) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %157) #18
  br label %472

275:                                              ; preds = %138
  %276 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %276) #18
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.5, i64 0, i64 0), i64 19) #18
  %277 = bitcast %"class.WTF::String"* %12 to i64*
  %278 = load i64, i64* %277, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %276) #18
  %279 = bitcast %"class.WTF::StringAppend.10"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %279) #18
  %280 = bitcast %"class.WTF::StringAppend.11"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %280) #18
  %281 = load double, double* %71, align 8
  %282 = call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double %281, i32 16) #18
  %283 = icmp eq %"class.WTF::StringImpl"* %282, null
  br i1 %283, label %359, label %284

284:                                              ; preds = %275
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %286 = load atomic i32, i32* %285 monotonic, align 4
  %287 = and i32 %286, 2
  %288 = icmp eq i32 %287, 0
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 0
  %290 = load i32, i32* %289, align 4
  br i1 %288, label %291, label %301

291:                                              ; preds = %284
  %292 = zext i32 %290 to i33
  %293 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %292, i33 1) #18
  %294 = extractvalue { i33, i1 } %293, 1
  %295 = extractvalue { i33, i1 } %293, 0
  %296 = icmp slt i33 %295, 0
  %297 = or i1 %294, %296
  br i1 %297, label %298, label %299, !prof !2

298:                                              ; preds = %291
  call void @llvm.trap() #18
  unreachable

299:                                              ; preds = %291
  %300 = trunc i33 %295 to i32
  store i32 %300, i32* %289, align 4
  br label %301

301:                                              ; preds = %299, %284
  %302 = phi i32 [ %300, %299 ], [ %290, %284 ]
  %303 = load atomic i32, i32* %285 monotonic, align 4
  %304 = and i32 %303, 2
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %306, label %316

306:                                              ; preds = %301
  %307 = zext i32 %302 to i33
  %308 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %307, i33 1) #18
  %309 = extractvalue { i33, i1 } %308, 1
  %310 = extractvalue { i33, i1 } %308, 0
  %311 = icmp slt i33 %310, 0
  %312 = or i1 %309, %311
  br i1 %312, label %313, label %314, !prof !2

313:                                              ; preds = %306
  call void @llvm.trap() #18
  unreachable

314:                                              ; preds = %306
  %315 = trunc i33 %310 to i32
  store i32 %315, i32* %289, align 4
  br label %316

316:                                              ; preds = %314, %301
  %317 = phi i32 [ %315, %314 ], [ %302, %301 ]
  %318 = load atomic i32, i32* %285 monotonic, align 4
  %319 = and i32 %318, 2
  %320 = icmp eq i32 %319, 0
  br i1 %320, label %321, label %323

321:                                              ; preds = %316
  %322 = add i32 %317, -1
  store i32 %322, i32* %289, align 4
  br label %323

323:                                              ; preds = %321, %316
  %324 = phi i32 [ %322, %321 ], [ %317, %316 ]
  %325 = icmp eq i32 %324, 0
  br i1 %325, label %326, label %327

326:                                              ; preds = %323
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %282) #18
  br label %327

327:                                              ; preds = %323, %326
  %328 = load atomic i32, i32* %285 monotonic, align 4, !noalias !3
  %329 = and i32 %328, 2
  %330 = icmp eq i32 %329, 0
  %331 = load i32, i32* %289, align 4
  br i1 %330, label %332, label %342

332:                                              ; preds = %327
  %333 = zext i32 %331 to i33
  %334 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %333, i33 1) #18
  %335 = extractvalue { i33, i1 } %334, 1
  %336 = extractvalue { i33, i1 } %334, 0
  %337 = icmp slt i33 %336, 0
  %338 = or i1 %335, %337
  br i1 %338, label %339, label %340, !prof !2

339:                                              ; preds = %332
  call void @llvm.trap() #18, !noalias !3
  unreachable

340:                                              ; preds = %332
  %341 = trunc i33 %336 to i32
  store i32 %341, i32* %289, align 4, !noalias !3
  br label %342

342:                                              ; preds = %327, %340
  %343 = phi i32 [ %341, %340 ], [ %331, %327 ]
  %344 = bitcast %"class.WTF::StringAppend.11"* %14 to i64*
  store i64 ptrtoint ([6 x i8]* @.str.6 to i64), i64* %344, align 8, !alias.scope !3
  %345 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %282, %"class.WTF::StringImpl"** %345, align 8, !alias.scope !3
  %346 = load atomic i32, i32* %285 monotonic, align 4, !noalias !3
  %347 = and i32 %346, 2
  %348 = icmp eq i32 %347, 0
  br i1 %348, label %349, label %363

349:                                              ; preds = %342
  %350 = zext i32 %343 to i33
  %351 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %350, i33 1) #18
  %352 = extractvalue { i33, i1 } %351, 1
  %353 = extractvalue { i33, i1 } %351, 0
  %354 = icmp slt i33 %353, 0
  %355 = or i1 %352, %354
  br i1 %355, label %356, label %357, !prof !2

356:                                              ; preds = %349
  call void @llvm.trap() #18, !noalias !3
  unreachable

357:                                              ; preds = %349
  %358 = trunc i33 %353 to i32
  store i32 %358, i32* %289, align 4, !noalias !3
  br label %363

359:                                              ; preds = %275
  %360 = bitcast %"class.WTF::StringAppend.11"* %14 to i64*
  store i64 ptrtoint ([6 x i8]* @.str.6 to i64), i64* %360, align 8, !alias.scope !3
  %361 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %361, align 8, !alias.scope !3
  %362 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8** %362, align 8, !alias.scope !3
  br label %375

363:                                              ; preds = %357, %342
  %364 = phi i32 [ %358, %357 ], [ %343, %342 ]
  %365 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0), i8** %365, align 8, !alias.scope !3
  %366 = load atomic i32, i32* %285 monotonic, align 4, !noalias !3
  %367 = and i32 %366, 2
  %368 = icmp eq i32 %367, 0
  br i1 %368, label %369, label %371

369:                                              ; preds = %363
  %370 = add i32 %364, -1
  store i32 %370, i32* %289, align 4, !noalias !3
  br label %371

371:                                              ; preds = %369, %363
  %372 = phi i32 [ %370, %369 ], [ %364, %363 ]
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %375

374:                                              ; preds = %371
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %282) #18, !noalias !3
  br label %375

375:                                              ; preds = %359, %371, %374
  %376 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %1, i64 0, i32 7
  %377 = load double, double* %376, align 8
  %378 = call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double %377, i32 16) #18
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.10"* nonnull sret %13, %"class.WTF::StringAppend.11"* nonnull dereferenceable(24) %14, %"class.WTF::StringImpl"* %378)
  %379 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EcvS3_Ev(%"class.WTF::StringAppend.10"* nonnull %13)
  %380 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %380, label %394, label %381

381:                                              ; preds = %375
  %382 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %383 = load atomic i32, i32* %382 monotonic, align 4
  %384 = and i32 %383, 2
  %385 = icmp eq i32 %384, 0
  %386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %387 = load i32, i32* %386, align 4
  br i1 %385, label %388, label %390

388:                                              ; preds = %381
  %389 = add i32 %387, -1
  store i32 %389, i32* %386, align 4
  br label %390

390:                                              ; preds = %388, %381
  %391 = phi i32 [ %389, %388 ], [ %387, %381 ]
  %392 = icmp eq i32 %391, 0
  br i1 %392, label %393, label %394

393:                                              ; preds = %390
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #18
  br label %394

394:                                              ; preds = %393, %390, %375
  %395 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %13, i64 0, i32 1, i32 0, i32 0
  %396 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %395, align 8
  %397 = icmp eq %"class.WTF::StringImpl"* %396, null
  br i1 %397, label %411, label %398

398:                                              ; preds = %394
  %399 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %396, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %400 = load atomic i32, i32* %399 monotonic, align 4
  %401 = and i32 %400, 2
  %402 = icmp eq i32 %401, 0
  %403 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %396, i64 0, i32 0
  %404 = load i32, i32* %403, align 4
  br i1 %402, label %405, label %407

405:                                              ; preds = %398
  %406 = add i32 %404, -1
  store i32 %406, i32* %403, align 4
  br label %407

407:                                              ; preds = %405, %398
  %408 = phi i32 [ %406, %405 ], [ %404, %398 ]
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %410, label %411

410:                                              ; preds = %407
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %396) #18
  br label %411

411:                                              ; preds = %410, %407, %394
  %412 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %13, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %413 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %412, align 8
  %414 = icmp eq %"class.WTF::StringImpl"* %413, null
  br i1 %414, label %428, label %415

415:                                              ; preds = %411
  %416 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %413, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %417 = load atomic i32, i32* %416 monotonic, align 4
  %418 = and i32 %417, 2
  %419 = icmp eq i32 %418, 0
  %420 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %413, i64 0, i32 0
  %421 = load i32, i32* %420, align 4
  br i1 %419, label %422, label %424

422:                                              ; preds = %415
  %423 = add i32 %421, -1
  store i32 %423, i32* %420, align 4
  br label %424

424:                                              ; preds = %422, %415
  %425 = phi i32 [ %423, %422 ], [ %421, %415 ]
  %426 = icmp eq i32 %425, 0
  br i1 %426, label %427, label %428

427:                                              ; preds = %424
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %413) #18
  br label %428

428:                                              ; preds = %411, %424, %427
  %429 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %430 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %429, align 8
  %431 = icmp eq %"class.WTF::StringImpl"* %430, null
  br i1 %431, label %445, label %432

432:                                              ; preds = %428
  %433 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %430, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %434 = load atomic i32, i32* %433 monotonic, align 4
  %435 = and i32 %434, 2
  %436 = icmp eq i32 %435, 0
  %437 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %430, i64 0, i32 0
  %438 = load i32, i32* %437, align 4
  br i1 %436, label %439, label %441

439:                                              ; preds = %432
  %440 = add i32 %438, -1
  store i32 %440, i32* %437, align 4
  br label %441

441:                                              ; preds = %439, %432
  %442 = phi i32 [ %440, %439 ], [ %438, %432 ]
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %444, label %445

444:                                              ; preds = %441
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %430) #18
  br label %445

445:                                              ; preds = %428, %441, %444
  br i1 %283, label %471, label %446

446:                                              ; preds = %445
  %447 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %448 = load atomic i32, i32* %447 monotonic, align 4
  %449 = and i32 %448, 2
  %450 = icmp eq i32 %449, 0
  %451 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 0
  %452 = load i32, i32* %451, align 4
  br i1 %450, label %453, label %455

453:                                              ; preds = %446
  %454 = add i32 %452, -1
  store i32 %454, i32* %451, align 4
  br label %455

455:                                              ; preds = %453, %446
  %456 = phi i32 [ %454, %453 ], [ %452, %446 ]
  %457 = icmp eq i32 %456, 0
  br i1 %457, label %458, label %460

458:                                              ; preds = %455
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %282) #18
  %459 = load i32, i32* %451, align 4
  br label %460

460:                                              ; preds = %455, %458
  %461 = phi i32 [ %456, %455 ], [ %459, %458 ]
  %462 = load atomic i32, i32* %447 monotonic, align 4
  %463 = and i32 %462, 2
  %464 = icmp eq i32 %463, 0
  br i1 %464, label %465, label %467

465:                                              ; preds = %460
  %466 = add i32 %461, -1
  store i32 %466, i32* %451, align 4
  br label %467

467:                                              ; preds = %465, %460
  %468 = phi i32 [ %466, %465 ], [ %461, %460 ]
  %469 = icmp eq i32 %468, 0
  br i1 %469, label %470, label %471

470:                                              ; preds = %467
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %282) #18
  br label %471

471:                                              ; preds = %445, %467, %470
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %280) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %279) #18
  br label %472

472:                                              ; preds = %138, %471, %274, %149, %145, %141
  %473 = phi i64 [ 0, %138 ], [ %278, %471 ], [ %156, %274 ], [ %152, %149 ], [ %148, %145 ], [ %144, %141 ]
  %474 = phi %"class.WTF::StringImpl"* [ %74, %138 ], [ %379, %471 ], [ %210, %274 ], [ %74, %149 ], [ %74, %145 ], [ %74, %141 ]
  %475 = bitcast %"class.WTF::StringAppend.13"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %475) #18
  %476 = bitcast %"class.WTF::StringAppend"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %476) #18
  %477 = bitcast %"class.WTF::StringAppend.9"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %477) #18
  %478 = inttoptr i64 %473 to %"class.WTF::StringImpl"*
  %479 = icmp eq i64 %473, 0
  br i1 %479, label %524, label %480

480:                                              ; preds = %472
  %481 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %478, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %482 = load atomic i32, i32* %481 monotonic, align 4
  %483 = and i32 %482, 2
  %484 = icmp eq i32 %483, 0
  %485 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %478, i64 0, i32 0
  %486 = load i32, i32* %485, align 4
  br i1 %484, label %487, label %497

487:                                              ; preds = %480
  %488 = zext i32 %486 to i33
  %489 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %488, i33 1) #18
  %490 = extractvalue { i33, i1 } %489, 1
  %491 = extractvalue { i33, i1 } %489, 0
  %492 = icmp slt i33 %491, 0
  %493 = or i1 %490, %492
  br i1 %493, label %494, label %495, !prof !2

494:                                              ; preds = %487
  call void @llvm.trap() #18
  unreachable

495:                                              ; preds = %487
  %496 = trunc i33 %491 to i32
  store i32 %496, i32* %485, align 4
  br label %497

497:                                              ; preds = %480, %495
  %498 = phi i32 [ %496, %495 ], [ %486, %480 ]
  %499 = load atomic i32, i32* %481 monotonic, align 4
  %500 = and i32 %499, 2
  %501 = icmp eq i32 %500, 0
  %502 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %478, i64 0, i32 0
  br i1 %501, label %503, label %513

503:                                              ; preds = %497
  %504 = zext i32 %498 to i33
  %505 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %504, i33 1) #18
  %506 = extractvalue { i33, i1 } %505, 1
  %507 = extractvalue { i33, i1 } %505, 0
  %508 = icmp slt i33 %507, 0
  %509 = or i1 %506, %508
  br i1 %509, label %510, label %511, !prof !2

510:                                              ; preds = %503
  call void @llvm.trap() #18
  unreachable

511:                                              ; preds = %503
  %512 = trunc i33 %507 to i32
  store i32 %512, i32* %502, align 4
  br label %513

513:                                              ; preds = %511, %497
  %514 = phi i32 [ %512, %511 ], [ %498, %497 ]
  %515 = load atomic i32, i32* %481 monotonic, align 4
  %516 = and i32 %515, 2
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %518, label %520

518:                                              ; preds = %513
  %519 = add i32 %514, -1
  store i32 %519, i32* %502, align 4
  br label %520

520:                                              ; preds = %518, %513
  %521 = phi i32 [ %519, %518 ], [ %514, %513 ]
  %522 = icmp eq i32 %521, 0
  br i1 %522, label %523, label %524

523:                                              ; preds = %520
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %478) #18
  br label %524

524:                                              ; preds = %472, %520, %523
  %525 = getelementptr inbounds %"class.WTF::StringAppend.9", %"class.WTF::StringAppend.9"* %17, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %478, %"class.WTF::StringImpl"** %525, align 8
  %526 = getelementptr inbounds %"class.WTF::StringAppend.9", %"class.WTF::StringAppend.9"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.7, i64 0, i64 0), i8** %526, align 8
  %527 = icmp eq %"class.WTF::StringImpl"* %474, null
  br i1 %527, label %545, label %528

528:                                              ; preds = %524
  %529 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %474, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %530 = load atomic i32, i32* %529 monotonic, align 4
  %531 = and i32 %530, 2
  %532 = icmp eq i32 %531, 0
  br i1 %532, label %533, label %545

533:                                              ; preds = %528
  %534 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %474, i64 0, i32 0
  %535 = load i32, i32* %534, align 4
  %536 = zext i32 %535 to i33
  %537 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %536, i33 1) #18
  %538 = extractvalue { i33, i1 } %537, 1
  %539 = extractvalue { i33, i1 } %537, 0
  %540 = icmp slt i33 %539, 0
  %541 = or i1 %538, %540
  br i1 %541, label %542, label %543, !prof !2

542:                                              ; preds = %533
  call void @llvm.trap() #18
  unreachable

543:                                              ; preds = %533
  %544 = trunc i33 %539 to i32
  store i32 %544, i32* %534, align 4
  br label %545

545:                                              ; preds = %524, %528, %543
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend"* nonnull sret %16, %"class.WTF::StringAppend.9"* nonnull dereferenceable(16) %17, %"class.WTF::StringImpl"* %474)
  %546 = bitcast %"class.WTF::StringAppend"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %546)
  %547 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %548 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %547, align 8, !noalias !6
  %549 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %548, %"class.WTF::StringImpl"** %549, align 8, !noalias !6
  %550 = icmp eq %"class.WTF::StringImpl"* %548, null
  br i1 %550, label %568, label %551

551:                                              ; preds = %545
  %552 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %548, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %553 = load atomic i32, i32* %552 monotonic, align 4
  %554 = and i32 %553, 2
  %555 = icmp eq i32 %554, 0
  br i1 %555, label %556, label %568

556:                                              ; preds = %551
  %557 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %548, i64 0, i32 0
  %558 = load i32, i32* %557, align 4
  %559 = zext i32 %558 to i33
  %560 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %559, i33 1) #18
  %561 = extractvalue { i33, i1 } %560, 1
  %562 = extractvalue { i33, i1 } %560, 0
  %563 = icmp slt i33 %562, 0
  %564 = or i1 %561, %563
  br i1 %564, label %565, label %566, !prof !2

565:                                              ; preds = %556
  call void @llvm.trap() #18
  unreachable

566:                                              ; preds = %556
  %567 = trunc i33 %562 to i32
  store i32 %567, i32* %557, align 4
  br label %568

568:                                              ; preds = %566, %551, %545
  %569 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 1
  %570 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %16, i64 0, i32 0, i32 1
  %571 = bitcast i8** %570 to i64*
  %572 = load i64, i64* %571, align 8, !noalias !6
  %573 = bitcast i8** %569 to i64*
  store i64 %572, i64* %573, align 8, !noalias !6
  %574 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %16, i64 0, i32 1, i32 0, i32 0
  %575 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %574, align 8, !noalias !6
  %576 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %575, %"class.WTF::StringImpl"** %576, align 8, !noalias !6
  %577 = icmp eq %"class.WTF::StringImpl"* %575, null
  br i1 %577, label %595, label %578

578:                                              ; preds = %568
  %579 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %575, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %580 = load atomic i32, i32* %579 monotonic, align 4
  %581 = and i32 %580, 2
  %582 = icmp eq i32 %581, 0
  br i1 %582, label %583, label %595

583:                                              ; preds = %578
  %584 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %575, i64 0, i32 0
  %585 = load i32, i32* %584, align 4
  %586 = zext i32 %585 to i33
  %587 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %586, i33 1) #18
  %588 = extractvalue { i33, i1 } %587, 1
  %589 = extractvalue { i33, i1 } %587, 0
  %590 = icmp slt i33 %589, 0
  %591 = or i1 %588, %590
  br i1 %591, label %592, label %593, !prof !2

592:                                              ; preds = %583
  call void @llvm.trap() #18
  unreachable

593:                                              ; preds = %583
  %594 = trunc i33 %589 to i32
  store i32 %594, i32* %584, align 4
  br label %595

595:                                              ; preds = %568, %578, %593
  call void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.13"* nonnull %15, %"class.WTF::StringAppend"* nonnull byval(%"class.WTF::StringAppend") align 8 %3, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %546)
  %596 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend.13"* nonnull %15)
  %597 = getelementptr inbounds %"class.WTF::StringAppend.13", %"class.WTF::StringAppend.13"* %15, i64 0, i32 0, i32 1, i32 0, i32 0
  %598 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %597, align 8
  %599 = icmp eq %"class.WTF::StringImpl"* %598, null
  br i1 %599, label %613, label %600

600:                                              ; preds = %595
  %601 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %598, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %602 = load atomic i32, i32* %601 monotonic, align 4
  %603 = and i32 %602, 2
  %604 = icmp eq i32 %603, 0
  %605 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %598, i64 0, i32 0
  %606 = load i32, i32* %605, align 4
  br i1 %604, label %607, label %609

607:                                              ; preds = %600
  %608 = add i32 %606, -1
  store i32 %608, i32* %605, align 4
  br label %609

609:                                              ; preds = %607, %600
  %610 = phi i32 [ %608, %607 ], [ %606, %600 ]
  %611 = icmp eq i32 %610, 0
  br i1 %611, label %612, label %613

612:                                              ; preds = %609
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %598) #18
  br label %613

613:                                              ; preds = %612, %609, %595
  %614 = getelementptr inbounds %"class.WTF::StringAppend.13", %"class.WTF::StringAppend.13"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %615 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %614, align 8
  %616 = icmp eq %"class.WTF::StringImpl"* %615, null
  br i1 %616, label %630, label %617

617:                                              ; preds = %613
  %618 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %615, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %619 = load atomic i32, i32* %618 monotonic, align 4
  %620 = and i32 %619, 2
  %621 = icmp eq i32 %620, 0
  %622 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %615, i64 0, i32 0
  %623 = load i32, i32* %622, align 4
  br i1 %621, label %624, label %626

624:                                              ; preds = %617
  %625 = add i32 %623, -1
  store i32 %625, i32* %622, align 4
  br label %626

626:                                              ; preds = %624, %617
  %627 = phi i32 [ %625, %624 ], [ %623, %617 ]
  %628 = icmp eq i32 %627, 0
  br i1 %628, label %629, label %630

629:                                              ; preds = %626
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %615) #18
  br label %630

630:                                              ; preds = %613, %626, %629
  %631 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %574, align 8
  %632 = icmp eq %"class.WTF::StringImpl"* %631, null
  br i1 %632, label %646, label %633

633:                                              ; preds = %630
  %634 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %631, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %635 = load atomic i32, i32* %634 monotonic, align 4
  %636 = and i32 %635, 2
  %637 = icmp eq i32 %636, 0
  %638 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %631, i64 0, i32 0
  %639 = load i32, i32* %638, align 4
  br i1 %637, label %640, label %642

640:                                              ; preds = %633
  %641 = add i32 %639, -1
  store i32 %641, i32* %638, align 4
  br label %642

642:                                              ; preds = %640, %633
  %643 = phi i32 [ %641, %640 ], [ %639, %633 ]
  %644 = icmp eq i32 %643, 0
  br i1 %644, label %645, label %646

645:                                              ; preds = %642
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %631) #18
  br label %646

646:                                              ; preds = %645, %642, %630
  %647 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %547, align 8
  %648 = icmp eq %"class.WTF::StringImpl"* %647, null
  br i1 %648, label %662, label %649

649:                                              ; preds = %646
  %650 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %647, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %651 = load atomic i32, i32* %650 monotonic, align 4
  %652 = and i32 %651, 2
  %653 = icmp eq i32 %652, 0
  %654 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %647, i64 0, i32 0
  %655 = load i32, i32* %654, align 4
  br i1 %653, label %656, label %658

656:                                              ; preds = %649
  %657 = add i32 %655, -1
  store i32 %657, i32* %654, align 4
  br label %658

658:                                              ; preds = %656, %649
  %659 = phi i32 [ %657, %656 ], [ %655, %649 ]
  %660 = icmp eq i32 %659, 0
  br i1 %660, label %661, label %662

661:                                              ; preds = %658
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %647) #18
  br label %662

662:                                              ; preds = %646, %658, %661
  %663 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %525, align 8
  %664 = icmp eq %"class.WTF::StringImpl"* %663, null
  br i1 %664, label %678, label %665

665:                                              ; preds = %662
  %666 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %663, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %667 = load atomic i32, i32* %666 monotonic, align 4
  %668 = and i32 %667, 2
  %669 = icmp eq i32 %668, 0
  %670 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %663, i64 0, i32 0
  %671 = load i32, i32* %670, align 4
  br i1 %669, label %672, label %674

672:                                              ; preds = %665
  %673 = add i32 %671, -1
  store i32 %673, i32* %670, align 4
  br label %674

674:                                              ; preds = %672, %665
  %675 = phi i32 [ %673, %672 ], [ %671, %665 ]
  %676 = icmp eq i32 %675, 0
  br i1 %676, label %677, label %678

677:                                              ; preds = %674
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %663) #18
  br label %678

678:                                              ; preds = %662, %674, %677
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %477) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %476) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %475) #18
  br i1 %479, label %692, label %679

679:                                              ; preds = %678
  %680 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %478, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %681 = load atomic i32, i32* %680 monotonic, align 4
  %682 = and i32 %681, 2
  %683 = icmp eq i32 %682, 0
  %684 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %478, i64 0, i32 0
  %685 = load i32, i32* %684, align 4
  br i1 %683, label %686, label %688

686:                                              ; preds = %679
  %687 = add i32 %685, -1
  store i32 %687, i32* %684, align 4
  br label %688

688:                                              ; preds = %686, %679
  %689 = phi i32 [ %687, %686 ], [ %685, %679 ]
  %690 = icmp eq i32 %689, 0
  br i1 %690, label %691, label %692

691:                                              ; preds = %688
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %478) #18
  br label %692

692:                                              ; preds = %678, %688, %691
  br i1 %527, label %706, label %693

693:                                              ; preds = %692
  %694 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %474, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %695 = load atomic i32, i32* %694 monotonic, align 4
  %696 = and i32 %695, 2
  %697 = icmp eq i32 %696, 0
  %698 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %474, i64 0, i32 0
  %699 = load i32, i32* %698, align 4
  br i1 %697, label %700, label %702

700:                                              ; preds = %693
  %701 = add i32 %699, -1
  store i32 %701, i32* %698, align 4
  br label %702

702:                                              ; preds = %700, %693
  %703 = phi i32 [ %701, %700 ], [ %699, %693 ]
  %704 = icmp eq i32 %703, 0
  br i1 %704, label %705, label %706

705:                                              ; preds = %702
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %474) #18
  br label %706

706:                                              ; preds = %692, %702, %705
  ret %"class.WTF::StringImpl"* %596
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend"* noalias sret, %"class.WTF::StringAppend.9"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.9", %"class.WTF::StringAppend.9"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #18
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !2

21:                                               ; preds = %12
  tail call void @llvm.trap() #18
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend.9", %"class.WTF::StringAppend.9"* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #18
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %34
  tail call void @llvm.trap() #18
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %48

46:                                               ; preds = %24
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8* %47, %"class.WTF::StringImpl"* null)
  br label %61

48:                                               ; preds = %29, %44
  %49 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8* %49, %"class.WTF::StringImpl"* nonnull %2)
  %50 = load atomic i32, i32* %30 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #18
  br label %61

61:                                               ; preds = %46, %57, %60
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEf(float) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %3 = alloca i8*, align 8
  %4 = alloca i16*, align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = select i1 %10, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %9
  %12 = bitcast %"class.WTF::StringTypeAdapter.521"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #18
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #18
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %2, i8* %14) #18
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #18
  br i1 %18, label %62, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %6, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %6
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %62, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #18
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %28 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %3) #18
  %30 = load i8*, i8** %3, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %30)
  %31 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %31, label %98, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %49

39:                                               ; preds = %32
  %40 = zext i32 %38 to i33
  %41 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #18
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %39
  call void @llvm.trap() #18
  unreachable

47:                                               ; preds = %39
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %37, align 4
  br label %49

49:                                               ; preds = %32, %47
  %50 = phi i32 [ %48, %47 ], [ %38, %32 ]
  %51 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %52 = load atomic i32, i32* %33 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %57 = add i32 %50, -1
  store i32 %57, i32* %56, align 4
  br label %58

58:                                               ; preds = %55, %49
  %59 = phi i32 [ %57, %55 ], [ %50, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %98

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #18
  br label %98

62:                                               ; preds = %19, %1
  %63 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #18
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %64 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %65 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %64, i16** nonnull dereferenceable(8) %4) #18
  %66 = load i16*, i16** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %66)
  %67 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %67, label %98, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %85

75:                                               ; preds = %68
  %76 = zext i32 %74 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #18
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !2

82:                                               ; preds = %75
  call void @llvm.trap() #18
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %73, align 4
  br label %85

85:                                               ; preds = %68, %83
  %86 = phi i32 [ %84, %83 ], [ %74, %68 ]
  %87 = ptrtoint %"class.WTF::StringImpl"* %65 to i64
  %88 = load atomic i32, i32* %69 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %93 = add i32 %86, -1
  store i32 %93, i32* %92, align 4
  br label %94

94:                                               ; preds = %91, %85
  %95 = phi i32 [ %93, %91 ], [ %86, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #18
  br label %98

98:                                               ; preds = %97, %94, %62, %61, %58, %26
  %99 = phi i8* [ %27, %26 ], [ %27, %58 ], [ %27, %61 ], [ %63, %62 ], [ %63, %94 ], [ %63, %97 ]
  %100 = phi i64 [ 0, %26 ], [ %51, %58 ], [ %51, %61 ], [ 0, %62 ], [ %87, %94 ], [ %87, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #18
  %101 = inttoptr i64 %100 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %101
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.10"* noalias sret, %"class.WTF::StringAppend.11"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.11", align 8
  %5 = bitcast %"class.WTF::StringAppend.11"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.11"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #18
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #18
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #18
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %41
  tail call void @llvm.trap() #18
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.10"* %0, %"class.WTF::StringAppend.11"* nonnull byval(%"class.WTF::StringAppend.11") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.10"* %0, %"class.WTF::StringAppend.11"* nonnull byval(%"class.WTF::StringAppend.11") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #18
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EcvS3_Ev(%"class.WTF::StringAppend.10"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.519", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.519", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %11 = bitcast %"class.WTF::StringTypeAdapter.521"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #18
  %12 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #18
  %13 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %5, i8* %13) #18
  %14 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #18
  %15 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %0, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #18
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %4, i8* %16) #18
  %17 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = icmp eq %"class.WTF::StringImpl"* %18, null
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %21 = select i1 %19, %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"* %18
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #18
  br i1 %25, label %92, label %26

26:                                               ; preds = %1
  %27 = icmp eq %"class.WTF::StringImpl"* %9, null
  %28 = select i1 %27, %"class.WTF::StringImpl"* %10, %"class.WTF::StringImpl"* %9
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %92, label %33

33:                                               ; preds = %26
  %34 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #18
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %35 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.10"* %0)
  %36 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %35, i8** nonnull dereferenceable(8) %6) #18
  %37 = load i8*, i8** %6, align 8
  %38 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %0, i64 0, i32 0
  %39 = bitcast %"class.WTF::StringTypeAdapter.519"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %39) #18
  %40 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %3, i64 0, i32 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 24, i1 false) #18
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %44, label %46

44:                                               ; preds = %33
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %52

46:                                               ; preds = %33
  %47 = ptrtoint %"class.WTF::StringImpl"* %42 to i64
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 1
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 1
  %51 = bitcast %"class.WTF::StringImpl"* %50 to i8*
  br label %52

52:                                               ; preds = %44, %46
  %53 = phi i8* [ null, %44 ], [ %51, %46 ]
  %54 = phi i64 [ %45, %44 ], [ %47, %46 ]
  %55 = phi i32 [ 0, %44 ], [ %49, %46 ]
  %56 = bitcast %"class.WTF::StringTypeAdapter.519"* %3 to i64*
  store i64 %54, i64* %56, align 8
  store i8* %53, i8** %40, align 8
  store i32 %55, i32* %41, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.11"* %38, i8* %37) #18
  %57 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %3, i64 0, i32 0
  %58 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.11"* %38) #18
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %37, i64 %59
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.520"* nonnull %57, i8* %60) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %39) #18
  %61 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %61, label %151, label %62

62:                                               ; preds = %52
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %79

69:                                               ; preds = %62
  %70 = zext i32 %68 to i33
  %71 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #18
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !2

76:                                               ; preds = %69
  call void @llvm.trap() #18
  unreachable

77:                                               ; preds = %69
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %67, align 4
  br label %79

79:                                               ; preds = %62, %77
  %80 = phi i32 [ %78, %77 ], [ %68, %62 ]
  %81 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %82 = load atomic i32, i32* %63 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %79
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %87 = add i32 %80, -1
  store i32 %87, i32* %86, align 4
  br label %88

88:                                               ; preds = %85, %79
  %89 = phi i32 [ %87, %85 ], [ %80, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %151

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #18
  br label %151

92:                                               ; preds = %26, %1
  %93 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %93) #18
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %94 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.10"* %0)
  %95 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %94, i16** nonnull dereferenceable(8) %7) #18
  %96 = load i16*, i16** %7, align 8
  %97 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %0, i64 0, i32 0
  %98 = bitcast %"class.WTF::StringTypeAdapter.519"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %98) #18
  %99 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %2, i64 0, i32 0, i32 0, i32 1
  %100 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %98, i8 -86, i64 24, i1 false) #18
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %103, label %105

103:                                              ; preds = %92
  %104 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %111

105:                                              ; preds = %92
  %106 = ptrtoint %"class.WTF::StringImpl"* %101 to i64
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 1
  %108 = load i32, i32* %107, align 4
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 1
  %110 = bitcast %"class.WTF::StringImpl"* %109 to i8*
  br label %111

111:                                              ; preds = %103, %105
  %112 = phi i8* [ null, %103 ], [ %110, %105 ]
  %113 = phi i64 [ %104, %103 ], [ %106, %105 ]
  %114 = phi i32 [ 0, %103 ], [ %108, %105 ]
  %115 = bitcast %"class.WTF::StringTypeAdapter.519"* %2 to i64*
  store i64 %113, i64* %115, align 8
  store i8* %112, i8** %99, align 8
  store i32 %114, i32* %100, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.11"* %97, i16* %96) #18
  %116 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %2, i64 0, i32 0
  %117 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.11"* %97) #18
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds i16, i16* %96, i64 %118
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.520"* nonnull %116, i16* %119) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %98) #18
  %120 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %120, label %151, label %121

121:                                              ; preds = %111
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %138

128:                                              ; preds = %121
  %129 = zext i32 %127 to i33
  %130 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %129, i33 1) #18
  %131 = extractvalue { i33, i1 } %130, 1
  %132 = extractvalue { i33, i1 } %130, 0
  %133 = icmp slt i33 %132, 0
  %134 = or i1 %131, %133
  br i1 %134, label %135, label %136, !prof !2

135:                                              ; preds = %128
  call void @llvm.trap() #18
  unreachable

136:                                              ; preds = %128
  %137 = trunc i33 %132 to i32
  store i32 %137, i32* %126, align 4
  br label %138

138:                                              ; preds = %121, %136
  %139 = phi i32 [ %137, %136 ], [ %127, %121 ]
  %140 = ptrtoint %"class.WTF::StringImpl"* %95 to i64
  %141 = load atomic i32, i32* %122 monotonic, align 4
  %142 = and i32 %141, 2
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %147

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %146 = add i32 %139, -1
  store i32 %146, i32* %145, align 4
  br label %147

147:                                              ; preds = %144, %138
  %148 = phi i32 [ %146, %144 ], [ %139, %138 ]
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %151

150:                                              ; preds = %147
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #18
  br label %151

151:                                              ; preds = %150, %147, %111, %91, %88, %52
  %152 = phi i8* [ %34, %52 ], [ %34, %88 ], [ %34, %91 ], [ %93, %111 ], [ %93, %147 ], [ %93, %150 ]
  %153 = phi i64 [ 0, %52 ], [ %81, %88 ], [ %81, %91 ], [ 0, %111 ], [ %140, %147 ], [ %140, %150 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %152) #18
  %154 = inttoptr i64 %153 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %154
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EcvS1_Ev(%"class.WTF::StringAppend.13"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = bitcast %"class.WTF::StringTypeAdapter.521"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #18
  %9 = getelementptr inbounds %"class.WTF::StringAppend.13", %"class.WTF::StringAppend.13"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false) #18
  %10 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %5, i8* %10) #18
  %11 = getelementptr inbounds %"class.WTF::StringAppend.13", %"class.WTF::StringAppend.13"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %14 = getelementptr inbounds %"class.WTF::StringAppend.13", %"class.WTF::StringAppend.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  %17 = select i1 %16, %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"* %15
  %18 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #18
  %19 = getelementptr inbounds %"class.WTF::StringAppend.13", %"class.WTF::StringAppend.13"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %18, i8 -86, i64 16, i1 false) #18
  %20 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %4, i8* %20) #18
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = and i32 %22, 1
  %24 = icmp eq i32 %23, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #18
  br i1 %24, label %25, label %26

25:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #18
  br label %75

26:                                               ; preds = %1
  %27 = icmp eq %"class.WTF::StringImpl"* %12, null
  %28 = select i1 %27, %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"* %12
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 1
  %32 = icmp eq i32 %31, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #18
  br i1 %32, label %75, label %33

33:                                               ; preds = %26
  %34 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #18
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %35 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.13"* %0)
  %36 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %35, i8** nonnull dereferenceable(8) %6) #18
  %37 = load i8*, i8** %6, align 8
  %38 = getelementptr inbounds %"class.WTF::StringAppend.13", %"class.WTF::StringAppend.13"* %0, i64 0, i32 0
  %39 = bitcast %"class.WTF::StringTypeAdapter.521"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 16, i1 false) #18
  %40 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %3, i8* %40) #18
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend"* %38, i8* %37) #18
  %41 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"* %38) #18
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds i8, i8* %37, i64 %42
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.521"* nonnull %3, i8* %43) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #18
  %44 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %44, label %117, label %45

45:                                               ; preds = %33
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %62

52:                                               ; preds = %45
  %53 = zext i32 %51 to i33
  %54 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %53, i33 1) #18
  %55 = extractvalue { i33, i1 } %54, 1
  %56 = extractvalue { i33, i1 } %54, 0
  %57 = icmp slt i33 %56, 0
  %58 = or i1 %55, %57
  br i1 %58, label %59, label %60, !prof !2

59:                                               ; preds = %52
  call void @llvm.trap() #18
  unreachable

60:                                               ; preds = %52
  %61 = trunc i33 %56 to i32
  store i32 %61, i32* %50, align 4
  br label %62

62:                                               ; preds = %45, %60
  %63 = phi i32 [ %61, %60 ], [ %51, %45 ]
  %64 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %65 = load atomic i32, i32* %46 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %70 = add i32 %63, -1
  store i32 %70, i32* %69, align 4
  br label %71

71:                                               ; preds = %68, %62
  %72 = phi i32 [ %70, %68 ], [ %63, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %117

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #18
  br label %117

75:                                               ; preds = %26, %25
  %76 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #18
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %77 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.13"* %0)
  %78 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %77, i16** nonnull dereferenceable(8) %7) #18
  %79 = load i16*, i16** %7, align 8
  %80 = getelementptr inbounds %"class.WTF::StringAppend.13", %"class.WTF::StringAppend.13"* %0, i64 0, i32 0
  %81 = bitcast %"class.WTF::StringTypeAdapter.521"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 16, i1 false) #18
  %82 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %2, i8* %82) #18
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend"* %80, i16* %79) #18
  %83 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"* %80) #18
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds i16, i16* %79, i64 %84
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.521"* nonnull %2, i16* %85) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #18
  %86 = icmp eq %"class.WTF::StringImpl"* %78, null
  br i1 %86, label %117, label %87

87:                                               ; preds = %75
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %104

94:                                               ; preds = %87
  %95 = zext i32 %93 to i33
  %96 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #18
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !2

101:                                              ; preds = %94
  call void @llvm.trap() #18
  unreachable

102:                                              ; preds = %94
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %92, align 4
  br label %104

104:                                              ; preds = %87, %102
  %105 = phi i32 [ %103, %102 ], [ %93, %87 ]
  %106 = ptrtoint %"class.WTF::StringImpl"* %78 to i64
  %107 = load atomic i32, i32* %88 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %113

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %78, i64 0, i32 0
  %112 = add i32 %105, -1
  store i32 %112, i32* %111, align 4
  br label %113

113:                                              ; preds = %110, %104
  %114 = phi i32 [ %112, %110 ], [ %105, %104 ]
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %117

116:                                              ; preds = %113
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %78) #18
  br label %117

117:                                              ; preds = %116, %113, %75, %74, %71, %33
  %118 = phi i8* [ %34, %33 ], [ %34, %71 ], [ %34, %74 ], [ %76, %75 ], [ %76, %113 ], [ %76, %116 ]
  %119 = phi i64 [ 0, %33 ], [ %64, %71 ], [ %64, %74 ], [ 0, %75 ], [ %106, %113 ], [ %106, %116 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #18
  %120 = inttoptr i64 %119 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %120
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden float @_ZN5blink18AudioParamTimeline16LinearRampAtTimeEdfdfd(%"class.blink::AudioParamTimeline"* nocapture readnone, double, float, double, float, double) local_unnamed_addr #3 align 2 {
  %7 = fpext float %2 to double
  %8 = fsub float %4, %2
  %9 = fpext float %8 to double
  %10 = fsub double %1, %3
  %11 = fmul double %10, %9
  %12 = fsub double %5, %3
  %13 = fdiv double %11, %12
  %14 = fadd double %13, %7
  %15 = fptrunc double %14 to float
  ret float %15
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink18AudioParamTimeline21ExponentialRampAtTimeEdfdfd(%"class.blink::AudioParamTimeline"* nocapture readnone, double, float, double, float, double) local_unnamed_addr #0 align 2 {
  %7 = fpext float %2 to double
  %8 = fdiv float %4, %2
  %9 = fpext float %8 to double
  %10 = fsub double %1, %3
  %11 = fsub double %5, %3
  %12 = fdiv double %10, %11
  %13 = tail call double @_ZN6fdlibm3powEdd(double %9, double %12) #18
  %14 = fmul double %13, %7
  %15 = fptrunc double %14 to float
  ret float %15
}

declare double @_ZN6fdlibm3powEdd(double, double) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink18AudioParamTimeline17TargetValueAtTimeEdfdff(%"class.blink::AudioParamTimeline"* nocapture readnone, double, float, double, float, float) local_unnamed_addr #0 align 2 {
  %7 = fpext float %4 to double
  %8 = fsub float %2, %4
  %9 = fpext float %8 to double
  %10 = fsub double %1, %3
  %11 = fsub double -0.000000e+00, %10
  %12 = fpext float %5 to double
  %13 = fdiv double %11, %12
  %14 = tail call double @_ZN6fdlibm3expEd(double %13) #18
  %15 = fmul double %14, %9
  %16 = fadd double %15, %7
  %17 = fptrunc double %16 to float
  ret float %17
}

declare double @_ZN6fdlibm3expEd(double) local_unnamed_addr #2

; Function Attrs: nounwind readonly ssp uwtable
define hidden float @_ZN5blink18AudioParamTimeline16ValueCurveAtTimeEdddPKfj(%"class.blink::AudioParamTimeline"* nocapture readnone, double, double, double, float* nocapture readonly, i32) local_unnamed_addr #4 align 2 {
  %7 = add i32 %5, -1
  %8 = uitofp i32 %7 to double
  %9 = fdiv double %8, %3
  %10 = fsub double %1, %2
  %11 = fmul double %10, %9
  %12 = fptoui double %11 to i32
  %13 = icmp ult i32 %7, %12
  %14 = select i1 %13, i32 %7, i32 %12
  %15 = add i32 %14, 1
  %16 = icmp ult i32 %7, %15
  %17 = select i1 %16, i32 %7, i32 %15
  %18 = zext i32 %14 to i64
  %19 = getelementptr inbounds float, float* %4, i64 %18
  %20 = load float, float* %19, align 4
  %21 = zext i32 %17 to i64
  %22 = getelementptr inbounds float, float* %4, i64 %21
  %23 = load float, float* %22, align 4
  %24 = uitofp i32 %14 to double
  %25 = fsub double %11, %24
  %26 = fcmp ogt double %25, 1.000000e+00
  %27 = select i1 %26, double 1.000000e+00, double %25
  %28 = fptrunc double %27 to float
  %29 = fsub float %23, %20
  %30 = fmul float %29, %28
  %31 = fadd float %20, %30
  ret float %31
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.blink::AudioParamTimeline::ParamEvent"* @_ZN5blink18AudioParamTimeline10ParamEvent19CreateSetValueEventEfd(float, double) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 96) #19
  %4 = bitcast i8* %3 to %"class.blink::AudioParamTimeline::ParamEvent"*
  %5 = bitcast i8* %3 to i32*
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds i8, i8* %3, i64 4
  %7 = bitcast i8* %6 to float*
  store float %0, float* %7, align 4
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to double*
  store double %1, double* %9, align 8
  %10 = getelementptr inbounds i8, i8* %3, i64 16
  %11 = bitcast i8* %10 to float*
  store float 0.000000e+00, float* %11, align 8
  %12 = getelementptr inbounds i8, i8* %3, i64 24
  %13 = getelementptr inbounds i8, i8* %3, i64 80
  %14 = bitcast i8* %13 to i64*
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %3, i64 88
  store i8 0, i8* %15, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 52, i1 false) #18
  ret %"class.blink::AudioParamTimeline::ParamEvent"* %4
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.blink::AudioParamTimeline::ParamEvent"* @_ZN5blink18AudioParamTimeline10ParamEvent21CreateLinearRampEventEfdfd(float, double, float, double) local_unnamed_addr #0 align 2 {
  %5 = tail call i8* @_Znwm(i64 96) #19
  %6 = bitcast i8* %5 to %"class.blink::AudioParamTimeline::ParamEvent"*
  %7 = bitcast i8* %5 to i32*
  store i32 1, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 4
  %9 = bitcast i8* %8 to float*
  store float %0, float* %9, align 4
  %10 = getelementptr inbounds i8, i8* %5, i64 8
  %11 = bitcast i8* %10 to double*
  store double %1, double* %11, align 8
  %12 = getelementptr inbounds i8, i8* %5, i64 16
  %13 = bitcast i8* %12 to float*
  store float %2, float* %13, align 8
  %14 = getelementptr inbounds i8, i8* %5, i64 24
  %15 = bitcast i8* %14 to double*
  store double %3, double* %15, align 8
  %16 = getelementptr inbounds i8, i8* %5, i64 32
  %17 = getelementptr inbounds i8, i8* %5, i64 80
  %18 = bitcast i8* %17 to i64*
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %5, i64 88
  store i8 0, i8* %19, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 44, i1 false) #18
  ret %"class.blink::AudioParamTimeline::ParamEvent"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.blink::AudioParamTimeline::ParamEvent"* @_ZN5blink18AudioParamTimeline10ParamEvent26CreateExponentialRampEventEfdfd(float, double, float, double) local_unnamed_addr #0 align 2 {
  %5 = tail call i8* @_Znwm(i64 96) #19
  %6 = bitcast i8* %5 to %"class.blink::AudioParamTimeline::ParamEvent"*
  %7 = bitcast i8* %5 to i32*
  store i32 2, i32* %7, align 8
  %8 = getelementptr inbounds i8, i8* %5, i64 4
  %9 = bitcast i8* %8 to float*
  store float %0, float* %9, align 4
  %10 = getelementptr inbounds i8, i8* %5, i64 8
  %11 = bitcast i8* %10 to double*
  store double %1, double* %11, align 8
  %12 = getelementptr inbounds i8, i8* %5, i64 16
  %13 = bitcast i8* %12 to float*
  store float %2, float* %13, align 8
  %14 = getelementptr inbounds i8, i8* %5, i64 24
  %15 = bitcast i8* %14 to double*
  store double %3, double* %15, align 8
  %16 = getelementptr inbounds i8, i8* %5, i64 32
  %17 = getelementptr inbounds i8, i8* %5, i64 80
  %18 = bitcast i8* %17 to i64*
  store i64 0, i64* %18, align 8
  %19 = getelementptr inbounds i8, i8* %5, i64 88
  store i8 0, i8* %19, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 44, i1 false) #18
  ret %"class.blink::AudioParamTimeline::ParamEvent"* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.blink::AudioParamTimeline::ParamEvent"* @_ZN5blink18AudioParamTimeline10ParamEvent20CreateSetTargetEventEfdd(float, double, double) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 96) #19
  %5 = bitcast i8* %4 to %"class.blink::AudioParamTimeline::ParamEvent"*
  %6 = bitcast i8* %4 to i32*
  store i32 3, i32* %6, align 8
  %7 = getelementptr inbounds i8, i8* %4, i64 4
  %8 = bitcast i8* %7 to float*
  store float %0, float* %8, align 4
  %9 = getelementptr inbounds i8, i8* %4, i64 8
  %10 = bitcast i8* %9 to double*
  store double %1, double* %10, align 8
  %11 = getelementptr inbounds i8, i8* %4, i64 16
  %12 = bitcast i8* %11 to float*
  store float 0.000000e+00, float* %12, align 8
  %13 = getelementptr inbounds i8, i8* %4, i64 24
  %14 = bitcast i8* %13 to double*
  store double 0.000000e+00, double* %14, align 8
  %15 = getelementptr inbounds i8, i8* %4, i64 32
  %16 = bitcast i8* %15 to double*
  store double %2, double* %16, align 8
  %17 = getelementptr inbounds i8, i8* %4, i64 40
  %18 = getelementptr inbounds i8, i8* %4, i64 80
  %19 = bitcast i8* %18 to i64*
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds i8, i8* %4, i64 88
  store i8 0, i8* %20, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 36, i1 false) #18
  ret %"class.blink::AudioParamTimeline::ParamEvent"* %5
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.blink::AudioParamTimeline::ParamEvent"* @_ZN5blink18AudioParamTimeline10ParamEvent24CreateSetValueCurveEventERKN3WTF6VectorIfLj0ENS2_18PartitionAllocatorEEEdd(%"class.WTF::Vector.4"* nocapture readonly dereferenceable(16), double, double) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = add i32 %5, -1
  %7 = uitofp i32 %6 to double
  %8 = fdiv double %7, %2
  %9 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load float*, float** %9, align 8
  %11 = zext i32 %6 to i64
  %12 = getelementptr inbounds float, float* %10, i64 %11
  %13 = bitcast float* %12 to i32*
  %14 = load i32, i32* %13, align 4
  %15 = tail call i8* @_Znwm(i64 96) #19
  %16 = bitcast i8* %15 to %"class.blink::AudioParamTimeline::ParamEvent"*
  %17 = bitcast i8* %15 to i32*
  store i32 4, i32* %17, align 8
  %18 = getelementptr inbounds i8, i8* %15, i64 4
  %19 = bitcast i8* %18 to float*
  store float 0.000000e+00, float* %19, align 4
  %20 = getelementptr inbounds i8, i8* %15, i64 8
  %21 = bitcast i8* %20 to double*
  store double %1, double* %21, align 8
  %22 = getelementptr inbounds i8, i8* %15, i64 16
  %23 = bitcast i8* %22 to float*
  store float 0.000000e+00, float* %23, align 8
  %24 = getelementptr inbounds i8, i8* %15, i64 24
  %25 = getelementptr inbounds i8, i8* %15, i64 40
  %26 = bitcast i8* %25 to double*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #18
  store double %2, double* %26, align 8
  %27 = getelementptr inbounds i8, i8* %15, i64 48
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 0, i64 16, i1 false) #18
  %28 = getelementptr inbounds i8, i8* %15, i64 64
  %29 = bitcast i8* %28 to double*
  store double %8, double* %29, align 8
  %30 = getelementptr inbounds i8, i8* %15, i64 72
  %31 = bitcast i8* %30 to i32*
  store i32 %14, i32* %31, align 8
  %32 = getelementptr inbounds i8, i8* %15, i64 80
  %33 = bitcast i8* %32 to i64*
  store i64 0, i64* %33, align 8
  %34 = getelementptr inbounds i8, i8* %15, i64 88
  store i8 0, i8* %34, align 8
  %35 = getelementptr inbounds i8, i8* %15, i64 60
  %36 = bitcast i8* %35 to i32*
  %37 = icmp eq i32 %5, 0
  br i1 %37, label %38, label %40

38:                                               ; preds = %3
  %39 = bitcast float* %10 to i8*
  br label %61

40:                                               ; preds = %3
  %41 = getelementptr inbounds i8, i8* %15, i64 56
  %42 = bitcast i8* %41 to i32*
  %43 = icmp ugt i32 %5, 4
  %44 = select i1 %43, i32 %5, i32 4
  %45 = zext i32 %44 to i64
  %46 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %45) #18
  %47 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %46, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #18
  %48 = ptrtoint i8* %47 to i64
  %49 = bitcast i8* %27 to i64*
  store atomic i64 %48, i64* %49 monotonic, align 8
  %50 = lshr i64 %46, 2
  %51 = trunc i64 %50 to i32
  store i32 %51, i32* %42, align 8
  %52 = bitcast i8* %47 to float*
  %53 = zext i32 %5 to i64
  %54 = getelementptr inbounds float, float* %52, i64 %53
  %55 = ptrtoint float* %54 to i64
  %56 = ptrtoint i8* %47 to i64
  %57 = sub i64 %55, %56
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %47, i8 0, i64 %57, i1 false) #18
  %58 = shl nuw nsw i64 %53, 2
  %59 = bitcast %"class.WTF::Vector.4"* %0 to i8**
  %60 = load i8*, i8** %59, align 8
  br label %61

61:                                               ; preds = %38, %40
  %62 = phi i8* [ %60, %40 ], [ %39, %38 ]
  %63 = phi i64 [ %58, %40 ], [ 0, %38 ]
  %64 = phi i8* [ %47, %40 ], [ null, %38 ]
  store i32 %5, i32* %36, align 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %64, i8* align 4 %62, i64 %63, i1 false) #18
  ret %"class.blink::AudioParamTimeline::ParamEvent"* %16
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.blink::AudioParamTimeline::ParamEvent"* @_ZN5blink18AudioParamTimeline10ParamEvent27CreateSetValueCurveEndEventEfd(float, double) local_unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 96) #19
  %4 = bitcast i8* %3 to %"class.blink::AudioParamTimeline::ParamEvent"*
  %5 = bitcast i8* %3 to i32*
  store i32 6, i32* %5, align 8
  %6 = getelementptr inbounds i8, i8* %3, i64 4
  %7 = bitcast i8* %6 to float*
  store float %0, float* %7, align 4
  %8 = getelementptr inbounds i8, i8* %3, i64 8
  %9 = bitcast i8* %8 to double*
  store double %1, double* %9, align 8
  %10 = getelementptr inbounds i8, i8* %3, i64 16
  %11 = bitcast i8* %10 to float*
  store float 0.000000e+00, float* %11, align 8
  %12 = getelementptr inbounds i8, i8* %3, i64 24
  %13 = getelementptr inbounds i8, i8* %3, i64 80
  %14 = bitcast i8* %13 to i64*
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds i8, i8* %3, i64 88
  store i8 0, i8* %15, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 52, i1 false) #18
  ret %"class.blink::AudioParamTimeline::ParamEvent"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.blink::AudioParamTimeline::ParamEvent"* @_ZN5blink18AudioParamTimeline10ParamEvent23CreateCancelValuesEventEdNSt3__110unique_ptrIS1_NS2_14default_deleteIS1_EEEE(double, %"class.blink::AudioParamTimeline::ParamEvent"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr", align 8
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %6 = tail call i8* @_Znwm(i64 96) #19
  %7 = bitcast i8* %6 to %"class.blink::AudioParamTimeline::ParamEvent"*
  %8 = ptrtoint %"class.blink::AudioParamTimeline::ParamEvent"* %1 to i64
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %5, align 8
  %9 = bitcast %"class.std::__1::unique_ptr"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast i8* %6 to i32*
  store i32 5, i32* %11, align 8
  %12 = getelementptr inbounds i8, i8* %6, i64 4
  %13 = bitcast i8* %12 to float*
  store float 0.000000e+00, float* %13, align 4
  %14 = getelementptr inbounds i8, i8* %6, i64 8
  %15 = bitcast i8* %14 to double*
  store double %0, double* %15, align 8
  %16 = getelementptr inbounds i8, i8* %6, i64 16
  %17 = bitcast i8* %16 to float*
  store float 0.000000e+00, float* %17, align 8
  %18 = getelementptr inbounds i8, i8* %6, i64 24
  %19 = getelementptr inbounds i8, i8* %6, i64 80
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 52, i1 false) #18
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %10, align 8
  %20 = bitcast i8* %19 to i64*
  store i64 %8, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %6, i64 88
  store i8 0, i8* %21, align 8
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %3) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %4) #18
  ret %"class.blink::AudioParamTimeline::ParamEvent"* %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %2, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %2, align 8
  %4 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %3, null
  br i1 %4, label %19, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %3, i64 0, i32 12
  tail call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* %6) #18
  %7 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %3, i64 0, i32 8, i32 0, i32 0, i32 0
  %8 = load float*, float** %7, align 8
  %9 = icmp eq float* %8, null
  %10 = bitcast float* %8 to i8*
  br i1 %9, label %17, label %11, !prof !9

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %3, i64 0, i32 8, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15, !prof !2

15:                                               ; preds = %11
  store i32 0, i32* %12, align 4
  br label %16

16:                                               ; preds = %15, %11
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10) #18
  br label %17

17:                                               ; preds = %5, %16
  %18 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"* %3 to i8*
  tail call void @_ZdlPv(i8* %18) #19
  br label %19

19:                                               ; preds = %1, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %"class.blink::AudioParamTimeline::ParamEvent"* @_ZN5blink18AudioParamTimeline10ParamEvent18CreateGeneralEventENS1_4TypeEfdfdddRN3WTF6VectorIfLj0ENS3_18PartitionAllocatorEEEdfNSt3__110unique_ptrIS1_NS8_14default_deleteIS1_EEEE(i32, float, double, float, double, double, double, %"class.WTF::Vector.4"* dereferenceable(16), double, float, %"class.blink::AudioParamTimeline::ParamEvent"*) local_unnamed_addr #0 align 2 {
  %12 = alloca %"class.std::__1::unique_ptr", align 8
  %13 = alloca %"class.std::__1::unique_ptr", align 8
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = tail call i8* @_Znwm(i64 96) #19
  %16 = bitcast i8* %15 to %"class.blink::AudioParamTimeline::ParamEvent"*
  %17 = ptrtoint %"class.blink::AudioParamTimeline::ParamEvent"* %10 to i64
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %14, align 8
  %18 = bitcast %"class.std::__1::unique_ptr"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast i8* %15 to i32*
  store i32 %0, i32* %20, align 8
  %21 = getelementptr inbounds i8, i8* %15, i64 4
  %22 = bitcast i8* %21 to float*
  store float %1, float* %22, align 4
  %23 = getelementptr inbounds i8, i8* %15, i64 8
  %24 = bitcast i8* %23 to double*
  store double %2, double* %24, align 8
  %25 = getelementptr inbounds i8, i8* %15, i64 16
  %26 = bitcast i8* %25 to float*
  store float %3, float* %26, align 8
  %27 = getelementptr inbounds i8, i8* %15, i64 24
  %28 = bitcast i8* %27 to double*
  store double %4, double* %28, align 8
  %29 = getelementptr inbounds i8, i8* %15, i64 32
  %30 = bitcast i8* %29 to double*
  store double %5, double* %30, align 8
  %31 = getelementptr inbounds i8, i8* %15, i64 40
  %32 = bitcast i8* %31 to double*
  store double %6, double* %32, align 8
  %33 = getelementptr inbounds i8, i8* %15, i64 48
  %34 = bitcast i8* %33 to %"class.WTF::Vector.4"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 16, i1 false) #18
  %35 = getelementptr inbounds i8, i8* %15, i64 64
  %36 = bitcast i8* %35 to double*
  store double %8, double* %36, align 8
  %37 = getelementptr inbounds i8, i8* %15, i64 72
  %38 = bitcast i8* %37 to float*
  store float %9, float* %38, align 8
  %39 = getelementptr inbounds i8, i8* %15, i64 80
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %19, align 8
  %40 = bitcast i8* %39 to i64*
  store i64 %17, i64* %40, align 8
  %41 = getelementptr inbounds i8, i8* %15, i64 88
  store i8 0, i8* %41, align 8
  %42 = tail call dereferenceable(16) %"class.WTF::Vector.4"* @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector.4"* %34, %"class.WTF::Vector.4"* dereferenceable(16) %7) #18
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %12) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %13) #18
  ret %"class.blink::AudioParamTimeline::ParamEvent"* %16
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.blink::AudioParamTimeline::ParamEvent"* @_ZNK5blink18AudioParamTimeline10ParamEvent10SavedEventEv(%"class.blink::AudioParamTimeline::ParamEvent"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 12, i32 0, i32 0, i32 0
  %3 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %2, align 8
  ret %"class.blink::AudioParamTimeline::ParamEvent"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink18AudioParamTimeline10ParamEvent24HasDefaultCancelledValueEv(%"class.blink::AudioParamTimeline::ParamEvent"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 13
  %3 = load i8, i8* %2, align 8, !range !10
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink18AudioParamTimeline10ParamEvent17SetCancelledValueEf(%"class.blink::AudioParamTimeline::ParamEvent"* nocapture, float) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 1
  store float %1, float* %3, align 4
  %4 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 13
  store i8 1, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18AudioParamTimeline10ParamEventC2ENS1_4TypeEfdfdddRN3WTF6VectorIfLj0ENS3_18PartitionAllocatorEEEdfNSt3__110unique_ptrIS1_NS8_14default_deleteIS1_EEEE(%"class.blink::AudioParamTimeline::ParamEvent"*, i32, float, double, float, double, double, double, %"class.WTF::Vector.4"* dereferenceable(16), double, float, %"class.blink::AudioParamTimeline::ParamEvent"*) unnamed_addr #0 align 2 {
  %13 = alloca %"class.std::__1::unique_ptr", align 8
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 0
  store i32 %1, i32* %15, align 8
  %16 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 1
  store float %2, float* %16, align 4
  %17 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 2
  store double %3, double* %17, align 8
  %18 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 3
  store float %4, float* %18, align 8
  %19 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 5
  store double %5, double* %19, align 8
  %20 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 6
  store double %6, double* %20, align 8
  %21 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 7
  store double %7, double* %21, align 8
  %22 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 8
  %23 = bitcast %"class.WTF::Vector.4"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #18
  %24 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 9
  store double %9, double* %24, align 8
  %25 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 10
  store float %10, float* %25, align 8
  %26 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 12
  %27 = ptrtoint %"class.blink::AudioParamTimeline::ParamEvent"* %11 to i64
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %14, align 8
  %28 = bitcast %"class.std::__1::unique_ptr"* %26 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 13
  store i8 0, i8* %29, align 8
  %30 = tail call dereferenceable(16) %"class.WTF::Vector.4"* @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector.4"* %22, %"class.WTF::Vector.4"* dereferenceable(16) %8)
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %13) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::Vector.4"* @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector.4"*, %"class.WTF::Vector.4"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.WTF::Vector.4"* %1, %0
  br i1 %3, label %90, label %4, !prof !2

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %1, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %6, %8
  br i1 %9, label %10, label %11

10:                                               ; preds = %4
  store i32 %8, i32* %5, align 4
  br label %60

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp ugt i32 %8, %13
  br i1 %14, label %15, label %60

15:                                               ; preds = %11
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %26, label %17

17:                                               ; preds = %15
  %18 = icmp eq i32 %6, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %17
  store i32 0, i32* %5, align 4
  br label %20

20:                                               ; preds = %19, %17
  %21 = bitcast %"class.WTF::Vector.4"* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  store i32 0, i32* %12, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %22) #18
  %24 = load i32, i32* %7, align 4
  %25 = load i32, i32* %12, align 8
  br label %26

26:                                               ; preds = %15, %20
  %27 = phi i32 [ 0, %15 ], [ %25, %20 ]
  %28 = phi i32 [ %8, %15 ], [ %24, %20 ]
  %29 = icmp ult i32 %27, %28
  br i1 %29, label %30, label %60, !prof !9

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load float*, float** %31, align 8
  %33 = icmp eq float* %32, null
  %34 = zext i32 %28 to i64
  %35 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %34) #18
  %36 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #18
  br i1 %33, label %37, label %42

37:                                               ; preds = %30
  %38 = ptrtoint i8* %36 to i64
  %39 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store atomic i64 %38, i64* %39 monotonic, align 8
  %40 = lshr i64 %35, 2
  %41 = trunc i64 %40 to i32
  store i32 %41, i32* %12, align 8
  br label %60

42:                                               ; preds = %30
  %43 = lshr i64 %35, 2
  %44 = ptrtoint i8* %36 to i64
  %45 = load float*, float** %31, align 8
  %46 = icmp ne i8* %36, null
  %47 = icmp ne float* %45, null
  %48 = and i1 %46, %47
  %49 = bitcast float* %45 to i8*
  br i1 %48, label %50, label %56, !prof !9

50:                                               ; preds = %42
  %51 = load i32, i32* %5, align 4
  %52 = zext i32 %51 to i64
  %53 = shl nuw nsw i64 %52, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %36, i8* nonnull align 4 %49, i64 %53, i1 false) #18
  %54 = bitcast %"class.WTF::Vector.4"* %0 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %50, %42
  %57 = phi i8* [ %55, %50 ], [ %49, %42 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %57) #18
  %58 = bitcast %"class.WTF::Vector.4"* %0 to i64*
  store atomic i64 %44, i64* %58 monotonic, align 8
  %59 = trunc i64 %43 to i32
  store i32 %59, i32* %12, align 8
  br label %60

60:                                               ; preds = %56, %37, %26, %11, %10
  %61 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %1, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.WTF::Vector.4"* %1 to i8**
  %63 = load i8*, i8** %62, align 8
  %64 = load i32, i32* %5, align 4
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %0, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"class.WTF::Vector.4"* %0 to i8**
  %68 = load i8*, i8** %67, align 8
  %69 = shl nuw nsw i64 %65, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %68, i8* align 4 %63, i64 %69, i1 false) #18
  %70 = load float*, float** %61, align 8
  %71 = load i32, i32* %5, align 4
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds float, float* %70, i64 %72
  %74 = load float*, float** %66, align 8
  %75 = getelementptr inbounds float, float* %74, i64 %72
  %76 = icmp ne float* %75, null
  %77 = icmp ne float* %73, null
  %78 = and i1 %77, %76
  br i1 %78, label %79, label %88, !prof !9

79:                                               ; preds = %60
  %80 = load i32, i32* %7, align 4
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds float, float* %70, i64 %81
  %83 = bitcast float* %75 to i8*
  %84 = bitcast float* %73 to i8*
  %85 = ptrtoint float* %82 to i64
  %86 = ptrtoint float* %73 to i64
  %87 = sub i64 %85, %86
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %83, i8* nonnull align 4 %84, i64 %87, i1 false) #18
  br label %88

88:                                               ; preds = %60, %79
  %89 = load i32, i32* %7, align 4
  store i32 %89, i32* %5, align 4
  br label %90

90:                                               ; preds = %2, %88
  ret %"class.WTF::Vector.4"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18AudioParamTimeline10ParamEventC2ENS1_4TypeEfd(%"class.blink::AudioParamTimeline::ParamEvent"* nocapture, i32, float, double) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 0
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 1
  store float %2, float* %6, align 4
  %7 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 2
  store double %3, double* %7, align 8
  %8 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 3
  store float 0.000000e+00, float* %8, align 8
  %9 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 5
  %10 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 12
  %11 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 0, i64* %11, align 8
  %12 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 13
  store i8 0, i8* %12, align 8
  %13 = bitcast double* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 52, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18AudioParamTimeline10ParamEventC2ENS1_4TypeEfdfd(%"class.blink::AudioParamTimeline::ParamEvent"* nocapture, i32, float, double, float, double) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 0
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 1
  store float %2, float* %8, align 4
  %9 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 2
  store double %3, double* %9, align 8
  %10 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 3
  store float %4, float* %10, align 8
  %11 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 5
  store double %5, double* %11, align 8
  %12 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 6
  %13 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 12
  %14 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 13
  store i8 0, i8* %15, align 8
  %16 = bitcast double* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 44, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18AudioParamTimeline10ParamEventC2ENS1_4TypeEfdd(%"class.blink::AudioParamTimeline::ParamEvent"* nocapture, i32, float, double, double) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 0
  store i32 %1, i32* %6, align 8
  %7 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 1
  store float %2, float* %7, align 4
  %8 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 2
  store double %3, double* %8, align 8
  %9 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 3
  store float 0.000000e+00, float* %9, align 8
  %10 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 5
  store double 0.000000e+00, double* %10, align 8
  %11 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 6
  store double %4, double* %11, align 8
  %12 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 7
  %13 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 12
  %14 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 13
  store i8 0, i8* %15, align 8
  %16 = bitcast double* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 36, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18AudioParamTimeline10ParamEventC2ENS1_4TypeEddRKN3WTF6VectorIfLj0ENS3_18PartitionAllocatorEEEdf(%"class.blink::AudioParamTimeline::ParamEvent"* nocapture, i32, double, double, %"class.WTF::Vector.4"* nocapture readonly dereferenceable(16), double, float) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 0
  store i32 %1, i32* %8, align 8
  %9 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 1
  store float 0.000000e+00, float* %9, align 4
  %10 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 2
  store double %2, double* %10, align 8
  %11 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 3
  store float 0.000000e+00, float* %11, align 8
  %12 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 5
  %13 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 7
  %14 = bitcast double* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false)
  store double %3, double* %13, align 8
  %15 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 8
  %16 = bitcast %"class.WTF::Vector.4"* %15 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 16, i1 false) #18
  %17 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 9
  store double %5, double* %17, align 8
  %18 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 10
  store float %6, float* %18, align 8
  %19 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 12
  %20 = bitcast %"class.std::__1::unique_ptr"* %19 to i64*
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 13
  store i8 0, i8* %21, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %4, i64 0, i32 0, i32 0, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  %25 = icmp eq i32 %23, 0
  br i1 %25, label %50, label %26

26:                                               ; preds = %7
  %27 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %28 = icmp ugt i32 %23, 4
  %29 = select i1 %28, i32 %23, i32 4
  %30 = zext i32 %29 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %30) #18
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #18
  %33 = ptrtoint i8* %32 to i64
  %34 = bitcast %"class.WTF::Vector.4"* %15 to i64*
  store atomic i64 %33, i64* %34 monotonic, align 8
  %35 = lshr i64 %31, 2
  %36 = trunc i64 %35 to i32
  store i32 %36, i32* %27, align 8
  %37 = bitcast i8* %32 to float*
  %38 = load i32, i32* %24, align 4
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds float, float* %37, i64 %39
  %41 = zext i32 %23 to i64
  %42 = getelementptr inbounds float, float* %37, i64 %41
  %43 = bitcast float* %40 to i8*
  %44 = ptrtoint float* %42 to i64
  %45 = ptrtoint float* %40 to i64
  %46 = sub i64 %44, %45
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %43, i8 0, i64 %46, i1 false) #18
  %47 = bitcast %"class.WTF::Vector.4"* %15 to i8**
  %48 = load i8*, i8** %47, align 8
  %49 = shl nuw nsw i64 %41, 2
  br label %50

50:                                               ; preds = %7, %26
  %51 = phi i64 [ %49, %26 ], [ 0, %7 ]
  %52 = phi i8* [ %48, %26 ], [ null, %7 ]
  store i32 %23, i32* %24, align 4
  %53 = bitcast %"class.WTF::Vector.4"* %4 to i8**
  %54 = load i8*, i8** %53, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* align 4 %54, i64 %51, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18AudioParamTimeline10ParamEventC2ENS1_4TypeEdNSt3__110unique_ptrIS1_NS3_14default_deleteIS1_EEEE(%"class.blink::AudioParamTimeline::ParamEvent"* nocapture, i32, double, %"class.blink::AudioParamTimeline::ParamEvent"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 0
  store i32 %1, i32* %7, align 8
  %8 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 1
  store float 0.000000e+00, float* %8, align 4
  %9 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 2
  store double %2, double* %9, align 8
  %10 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 3
  store float 0.000000e+00, float* %10, align 8
  %11 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 5
  %12 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 12
  %13 = ptrtoint %"class.blink::AudioParamTimeline::ParamEvent"* %3 to i64
  %14 = bitcast double* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 52, i1 false)
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %6, align 8
  %15 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %0, i64 0, i32 13
  store i8 0, i8* %16, align 8
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %5) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18AudioParamTimeline14SetValueAtTimeEfdRNS_14ExceptionStateE(%"class.blink::AudioParamTimeline"*, float, double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i64 4) #18
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  %8 = call fastcc zeroext i1 @_ZN5blinkL27IsNonNegativeAudioParamTimeEdRNS_14ExceptionStateEN3WTF6StringE(double %2, %"class.blink::ExceptionState"* dereferenceable(72) %3, %"class.WTF::StringImpl"* %7)
  br i1 %8, label %9, label %24

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 2, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %10) #18
  %11 = call i8* @_Znwm(i64 96) #19
  %12 = bitcast i8* %11 to %"class.blink::AudioParamTimeline::ParamEvent"*
  %13 = bitcast i8* %11 to i32*
  store i32 0, i32* %13, align 8
  %14 = getelementptr inbounds i8, i8* %11, i64 4
  %15 = bitcast i8* %14 to float*
  store float %1, float* %15, align 4
  %16 = getelementptr inbounds i8, i8* %11, i64 8
  %17 = bitcast i8* %16 to double*
  store double %2, double* %17, align 8
  %18 = getelementptr inbounds i8, i8* %11, i64 16
  %19 = bitcast i8* %18 to float*
  store float 0.000000e+00, float* %19, align 8
  %20 = getelementptr inbounds i8, i8* %11, i64 24
  %21 = getelementptr inbounds i8, i8* %11, i64 80
  %22 = bitcast i8* %21 to i64*
  store i64 0, i64* %22, align 8
  %23 = getelementptr inbounds i8, i8* %11, i64 88
  store i8 0, i8* %23, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 52, i1 false) #18
  call void @_ZN5blink18AudioParamTimeline11InsertEventENSt3__110unique_ptrINS0_10ParamEventENS1_14default_deleteIS3_EEEERNS_14ExceptionStateE(%"class.blink::AudioParamTimeline"* %0, %"class.blink::AudioParamTimeline::ParamEvent"* nonnull %12, %"class.blink::ExceptionState"* dereferenceable(72) %3)
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %10) #18
  br label %24

24:                                               ; preds = %4, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL27IsNonNegativeAudioParamTimeEdRNS_14ExceptionStateEN3WTF6StringE(double, %"class.blink::ExceptionState"* dereferenceable(72), %"class.WTF::StringImpl"*) unnamed_addr #0 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::StringAppend", align 8
  %6 = alloca %"class.WTF::StringAppend.9", align 8
  %7 = fcmp ult double %0, 0.000000e+00
  br i1 %7, label %8, label %133

8:                                                ; preds = %3
  %9 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #18
  %10 = bitcast %"class.WTF::StringAppend"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #18
  %11 = bitcast %"class.WTF::StringAppend.9"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #18
  %12 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %12, label %57, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %30

20:                                               ; preds = %13
  %21 = zext i32 %19 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #18
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !2

27:                                               ; preds = %20
  tail call void @llvm.trap() #18
  unreachable

28:                                               ; preds = %20
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %18, align 4
  br label %30

30:                                               ; preds = %13, %28
  %31 = phi i32 [ %29, %28 ], [ %19, %13 ]
  %32 = load atomic i32, i32* %14 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  br i1 %34, label %36, label %46

36:                                               ; preds = %30
  %37 = zext i32 %31 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #18
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %36
  tail call void @llvm.trap() #18
  unreachable

44:                                               ; preds = %36
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %46

46:                                               ; preds = %44, %30
  %47 = phi i32 [ %45, %44 ], [ %31, %30 ]
  %48 = load atomic i32, i32* %14 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %46
  %52 = add i32 %47, -1
  store i32 %52, i32* %35, align 4
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i32 [ %52, %51 ], [ %47, %46 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #18
  br label %57

57:                                               ; preds = %8, %53, %56
  %58 = getelementptr inbounds %"class.WTF::StringAppend.9", %"class.WTF::StringAppend.9"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %58, align 8
  %59 = getelementptr inbounds %"class.WTF::StringAppend.9", %"class.WTF::StringAppend.9"* %6, i64 0, i32 1
  store i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.17, i64 0, i64 0), i8** %59, align 8
  %60 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double %0, i32 6) #18
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend"* nonnull sret %5, %"class.WTF::StringAppend.9"* nonnull dereferenceable(16) %6, %"class.WTF::StringImpl"* %60)
  %61 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %5)
  %62 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %61, %"class.WTF::StringImpl"** %62, align 8
  %63 = bitcast %"class.blink::ExceptionState"* %1 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %64 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %63, align 8
  %65 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %64, i64 2
  %66 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %65, align 8
  call void %66(%"class.blink::ExceptionState"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %4) #18
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %57
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %75 = load i32, i32* %74, align 4
  br i1 %73, label %76, label %78

76:                                               ; preds = %69
  %77 = add i32 %75, -1
  store i32 %77, i32* %74, align 4
  br label %78

78:                                               ; preds = %76, %69
  %79 = phi i32 [ %77, %76 ], [ %75, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %82

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #18
  br label %82

82:                                               ; preds = %57, %78, %81
  %83 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 1, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #18
  br label %99

99:                                               ; preds = %98, %95, %82
  %100 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %100, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %99
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #18
  br label %116

116:                                              ; preds = %99, %112, %115
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #18
  br label %132

132:                                              ; preds = %116, %128, %131
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #18
  br label %133

133:                                              ; preds = %3, %132
  %134 = phi i1 [ false, %132 ], [ true, %3 ]
  %135 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %135, label %149, label %136

136:                                              ; preds = %133
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %136
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %136
  %146 = phi i32 [ %144, %143 ], [ %142, %136 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #18
  br label %149

149:                                              ; preds = %133, %145, %148
  ret i1 %134
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18AudioParamTimeline11InsertEventENSt3__110unique_ptrINS0_10ParamEventENS1_14default_deleteIS3_EEEERNS_14ExceptionStateE(%"class.blink::AudioParamTimeline"*, %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = alloca %"class.blink::AudioParamTimeline::ParamEvent"*, align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::StringAppend", align 8
  %9 = alloca %"class.WTF::StringAppend.9", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringAppend", align 8
  %12 = alloca %"class.WTF::StringAppend.9", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::StringAppend", align 8
  %15 = alloca %"class.WTF::StringAppend.9", align 8
  %16 = alloca %"class.blink::AudioParamTimeline::ParamEvent"*, align 8
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::AudioParamTimeline::ParamEvent"* %1, %"class.blink::AudioParamTimeline::ParamEvent"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %1, i64 0, i32 2
  %19 = load double, double* %18, align 8
  %20 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %56

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %1, i64 0, i32 0
  %26 = load i32, i32* %25, align 8
  %27 = add i32 %26, -1
  %28 = icmp ult i32 %27, 2
  br i1 %28, label %29, label %624

29:                                               ; preds = %24
  %30 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #18
  %31 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %1, i64 0, i32 3
  %32 = bitcast float* %31 to i32*
  %33 = load i32, i32* %32, align 8
  %34 = tail call i8* @_Znwm(i64 96) #19
  %35 = bitcast i8* %34 to i32*
  store i32 0, i32* %35, align 8
  %36 = getelementptr inbounds i8, i8* %34, i64 4
  %37 = bitcast i8* %36 to i32*
  store i32 %33, i32* %37, align 4
  %38 = getelementptr inbounds i8, i8* %34, i64 8
  %39 = bitcast i8* %38 to double*
  store double 0.000000e+00, double* %39, align 8
  %40 = getelementptr inbounds i8, i8* %34, i64 16
  %41 = bitcast i8* %40 to float*
  store float 0.000000e+00, float* %41, align 8
  %42 = getelementptr inbounds i8, i8* %34, i64 24
  %43 = getelementptr inbounds i8, i8* %34, i64 80
  %44 = bitcast i8* %43 to i64*
  store i64 0, i64* %44, align 8
  %45 = getelementptr inbounds i8, i8* %34, i64 88
  store i8 0, i8* %45, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 52, i1 false) #18
  %46 = bitcast %"class.std::__1::unique_ptr"* %5 to i8**
  store i8* %34, i8** %46, align 8
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE6insertIS8_EEvjOT_(%"class.WTF::Vector"* %20, i32 0, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %5)
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #18
  %47 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #18
  %48 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 0) #18
  %49 = bitcast %"class.std::__1::unique_ptr"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"** %6 to i64*
  store i64 %50, i64* %51, align 8
  %52 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 1, i32 0
  %53 = call { %"class.blink::AudioParamTimeline::ParamEvent"**, i8 } @_ZN3WTF9HashTableIPN5blink18AudioParamTimeline10ParamEventES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_S4_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"* %52, %"class.blink::AudioParamTimeline::ParamEvent"** nonnull dereferenceable(8) %6, %"class.blink::AudioParamTimeline::ParamEvent"** nonnull dereferenceable(8) %6) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #18
  %54 = load i32, i32* %21, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %624, label %56

56:                                               ; preds = %3, %29
  br label %57

57:                                               ; preds = %56, %620
  %58 = phi i32 [ %621, %620 ], [ 0, %56 ]
  %59 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %17, align 8
  %60 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %59, i64 0, i32 0
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, 4
  br i1 %62, label %63, label %434

63:                                               ; preds = %57
  %64 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %59, i64 0, i32 2
  %65 = load double, double* %64, align 8
  %66 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %59, i64 0, i32 7
  %67 = load double, double* %66, align 8
  %68 = fadd double %65, %67
  %69 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 %58) #18
  %70 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %69, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %71, i64 0, i32 0
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, -5
  %75 = icmp ult i32 %74, 2
  br i1 %75, label %613, label %76

76:                                               ; preds = %63
  %77 = icmp eq i32 %73, 4
  %78 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 %58) #18
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %80, i64 0, i32 2
  %82 = load double, double* %81, align 8
  br i1 %77, label %83, label %279

83:                                               ; preds = %76
  %84 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 %58) #18
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %86, i64 0, i32 7
  %88 = load double, double* %87, align 8
  %89 = fadd double %82, %88
  %90 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 %58) #18
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %90, i64 0, i32 0, i32 0, i32 0
  %92 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %91, align 8
  %93 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %92, i64 0, i32 2
  %94 = load double, double* %93, align 8
  %95 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %17, align 8
  %96 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %95, i64 0, i32 2
  %97 = load double, double* %96, align 8
  %98 = fcmp ult double %94, %97
  br i1 %98, label %110, label %99

99:                                               ; preds = %83
  %100 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 %58) #18
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %100, i64 0, i32 0, i32 0, i32 0
  %102 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %102, i64 0, i32 2
  %104 = load double, double* %103, align 8
  %105 = fcmp olt double %104, %68
  br i1 %105, label %136, label %106

106:                                              ; preds = %99
  %107 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %17, align 8
  %108 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %107, i64 0, i32 2
  %109 = load double, double* %108, align 8
  br label %110

110:                                              ; preds = %106, %83
  %111 = phi double [ %109, %106 ], [ %97, %83 ]
  %112 = fcmp ogt double %89, %111
  %113 = fcmp olt double %89, %68
  %114 = and i1 %113, %112
  br i1 %114, label %136, label %115

115:                                              ; preds = %110
  %116 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 %58) #18
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %117, align 8
  %119 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %118, i64 0, i32 2
  %120 = load double, double* %119, align 8
  %121 = fcmp ult double %111, %120
  br i1 %121, label %127, label %122

122:                                              ; preds = %115
  %123 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %17, align 8
  %124 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %123, i64 0, i32 2
  %125 = load double, double* %124, align 8
  %126 = fcmp olt double %125, %89
  br i1 %126, label %136, label %127

127:                                              ; preds = %115, %122
  %128 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 %58) #18
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %129, align 8
  %131 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %130, i64 0, i32 2
  %132 = load double, double* %131, align 8
  %133 = fcmp oge double %68, %132
  %134 = fcmp olt double %68, %89
  %135 = and i1 %134, %133
  br i1 %135, label %136, label %613

136:                                              ; preds = %110, %99, %122, %127
  %137 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %137) #18
  %138 = bitcast %"class.WTF::StringAppend"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %138) #18
  %139 = bitcast %"class.WTF::StringAppend.9"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %139) #18
  %140 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %17, align 8
  %141 = call %"class.WTF::StringImpl"* @_ZNK5blink18AudioParamTimeline13EventToStringERKNS0_10ParamEventE(%"class.blink::AudioParamTimeline"* undef, %"class.blink::AudioParamTimeline::ParamEvent"* dereferenceable(96) %140)
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  br i1 %142, label %187, label %143

143:                                              ; preds = %136
  %144 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = and i32 %145, 2
  %147 = icmp eq i32 %146, 0
  %148 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %149 = load i32, i32* %148, align 4
  br i1 %147, label %150, label %160

150:                                              ; preds = %143
  %151 = zext i32 %149 to i33
  %152 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %151, i33 1) #18
  %153 = extractvalue { i33, i1 } %152, 1
  %154 = extractvalue { i33, i1 } %152, 0
  %155 = icmp slt i33 %154, 0
  %156 = or i1 %153, %155
  br i1 %156, label %157, label %158, !prof !2

157:                                              ; preds = %150
  call void @llvm.trap() #18
  unreachable

158:                                              ; preds = %150
  %159 = trunc i33 %154 to i32
  store i32 %159, i32* %148, align 4
  br label %160

160:                                              ; preds = %143, %158
  %161 = phi i32 [ %159, %158 ], [ %149, %143 ]
  %162 = load atomic i32, i32* %144 monotonic, align 4
  %163 = and i32 %162, 2
  %164 = icmp eq i32 %163, 0
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  br i1 %164, label %166, label %176

166:                                              ; preds = %160
  %167 = zext i32 %161 to i33
  %168 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %167, i33 1) #18
  %169 = extractvalue { i33, i1 } %168, 1
  %170 = extractvalue { i33, i1 } %168, 0
  %171 = icmp slt i33 %170, 0
  %172 = or i1 %169, %171
  br i1 %172, label %173, label %174, !prof !2

173:                                              ; preds = %166
  call void @llvm.trap() #18
  unreachable

174:                                              ; preds = %166
  %175 = trunc i33 %170 to i32
  store i32 %175, i32* %165, align 4
  br label %176

176:                                              ; preds = %174, %160
  %177 = phi i32 [ %175, %174 ], [ %161, %160 ]
  %178 = load atomic i32, i32* %144 monotonic, align 4
  %179 = and i32 %178, 2
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %183

181:                                              ; preds = %176
  %182 = add i32 %177, -1
  store i32 %182, i32* %165, align 4
  br label %183

183:                                              ; preds = %181, %176
  %184 = phi i32 [ %182, %181 ], [ %177, %176 ]
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %183
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #18
  br label %187

187:                                              ; preds = %136, %183, %186
  %188 = getelementptr inbounds %"class.WTF::StringAppend.9", %"class.WTF::StringAppend.9"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %141, %"class.WTF::StringImpl"** %188, align 8
  %189 = getelementptr inbounds %"class.WTF::StringAppend.9", %"class.WTF::StringAppend.9"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i8** %189, align 8
  %190 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 %58) #18
  %191 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %190, i64 0, i32 0, i32 0, i32 0
  %192 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %191, align 8
  %193 = call %"class.WTF::StringImpl"* @_ZNK5blink18AudioParamTimeline13EventToStringERKNS0_10ParamEventE(%"class.blink::AudioParamTimeline"* undef, %"class.blink::AudioParamTimeline::ParamEvent"* dereferenceable(96) %192)
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend"* nonnull sret %8, %"class.WTF::StringAppend.9"* nonnull dereferenceable(16) %9, %"class.WTF::StringImpl"* %193)
  %194 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %8)
  %195 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %194, %"class.WTF::StringImpl"** %195, align 8
  %196 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %197 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %196, align 8
  %198 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %197, align 8
  call void %198(%"class.blink::ExceptionState"* %2, i32 9, %"class.WTF::String"* nonnull dereferenceable(8) %7) #18
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  %200 = icmp eq %"class.WTF::StringImpl"* %199, null
  br i1 %200, label %214, label %201

201:                                              ; preds = %187
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %199, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load atomic i32, i32* %202 monotonic, align 4
  %204 = and i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %199, i64 0, i32 0
  %207 = load i32, i32* %206, align 4
  br i1 %205, label %208, label %210

208:                                              ; preds = %201
  %209 = add i32 %207, -1
  store i32 %209, i32* %206, align 4
  br label %210

210:                                              ; preds = %208, %201
  %211 = phi i32 [ %209, %208 ], [ %207, %201 ]
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %214

213:                                              ; preds = %210
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %199) #18
  br label %214

214:                                              ; preds = %187, %210, %213
  %215 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 1, i32 0, i32 0
  %216 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %215, align 8
  %217 = icmp eq %"class.WTF::StringImpl"* %216, null
  br i1 %217, label %231, label %218

218:                                              ; preds = %214
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = and i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  br i1 %222, label %225, label %227

225:                                              ; preds = %218
  %226 = add i32 %224, -1
  store i32 %226, i32* %223, align 4
  br label %227

227:                                              ; preds = %225, %218
  %228 = phi i32 [ %226, %225 ], [ %224, %218 ]
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %227
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %216) #18
  br label %231

231:                                              ; preds = %230, %227, %214
  %232 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %233 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %232, align 8
  %234 = icmp eq %"class.WTF::StringImpl"* %233, null
  br i1 %234, label %248, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %233, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %233, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  br i1 %239, label %242, label %244

242:                                              ; preds = %235
  %243 = add i32 %241, -1
  store i32 %243, i32* %240, align 4
  br label %244

244:                                              ; preds = %242, %235
  %245 = phi i32 [ %243, %242 ], [ %241, %235 ]
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %244
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %233) #18
  br label %248

248:                                              ; preds = %231, %244, %247
  %249 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %188, align 8
  %250 = icmp eq %"class.WTF::StringImpl"* %249, null
  br i1 %250, label %264, label %251

251:                                              ; preds = %248
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %249, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  br i1 %255, label %258, label %260

258:                                              ; preds = %251
  %259 = add i32 %257, -1
  store i32 %259, i32* %256, align 4
  br label %260

260:                                              ; preds = %258, %251
  %261 = phi i32 [ %259, %258 ], [ %257, %251 ]
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %249) #18
  br label %264

264:                                              ; preds = %248, %260, %263
  br i1 %142, label %278, label %265

265:                                              ; preds = %264
  %266 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %267 = load atomic i32, i32* %266 monotonic, align 4
  %268 = and i32 %267, 2
  %269 = icmp eq i32 %268, 0
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %141, i64 0, i32 0
  %271 = load i32, i32* %270, align 4
  br i1 %269, label %272, label %274

272:                                              ; preds = %265
  %273 = add i32 %271, -1
  store i32 %273, i32* %270, align 4
  br label %274

274:                                              ; preds = %272, %265
  %275 = phi i32 [ %273, %272 ], [ %271, %265 ]
  %276 = icmp eq i32 %275, 0
  br i1 %276, label %277, label %278

277:                                              ; preds = %274
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #18
  br label %278

278:                                              ; preds = %277, %274, %264
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %138) #18
  br label %633

279:                                              ; preds = %76
  %280 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %17, align 8
  %281 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %280, i64 0, i32 2
  %282 = load double, double* %281, align 8
  %283 = fcmp ogt double %82, %282
  br i1 %283, label %284, label %613

284:                                              ; preds = %279
  %285 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 %58) #18
  %286 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %285, i64 0, i32 0, i32 0, i32 0
  %287 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %286, align 8
  %288 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %287, i64 0, i32 2
  %289 = load double, double* %288, align 8
  %290 = fcmp olt double %289, %68
  br i1 %290, label %291, label %613

291:                                              ; preds = %284
  %292 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %292) #18
  %293 = bitcast %"class.WTF::StringAppend"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %293) #18
  %294 = bitcast %"class.WTF::StringAppend.9"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %294) #18
  %295 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %17, align 8
  %296 = call %"class.WTF::StringImpl"* @_ZNK5blink18AudioParamTimeline13EventToStringERKNS0_10ParamEventE(%"class.blink::AudioParamTimeline"* undef, %"class.blink::AudioParamTimeline::ParamEvent"* dereferenceable(96) %295)
  %297 = icmp eq %"class.WTF::StringImpl"* %296, null
  br i1 %297, label %342, label %298

298:                                              ; preds = %291
  %299 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %296, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %300 = load atomic i32, i32* %299 monotonic, align 4
  %301 = and i32 %300, 2
  %302 = icmp eq i32 %301, 0
  %303 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %296, i64 0, i32 0
  %304 = load i32, i32* %303, align 4
  br i1 %302, label %305, label %315

305:                                              ; preds = %298
  %306 = zext i32 %304 to i33
  %307 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %306, i33 1) #18
  %308 = extractvalue { i33, i1 } %307, 1
  %309 = extractvalue { i33, i1 } %307, 0
  %310 = icmp slt i33 %309, 0
  %311 = or i1 %308, %310
  br i1 %311, label %312, label %313, !prof !2

312:                                              ; preds = %305
  call void @llvm.trap() #18
  unreachable

313:                                              ; preds = %305
  %314 = trunc i33 %309 to i32
  store i32 %314, i32* %303, align 4
  br label %315

315:                                              ; preds = %298, %313
  %316 = phi i32 [ %314, %313 ], [ %304, %298 ]
  %317 = load atomic i32, i32* %299 monotonic, align 4
  %318 = and i32 %317, 2
  %319 = icmp eq i32 %318, 0
  %320 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %296, i64 0, i32 0
  br i1 %319, label %321, label %331

321:                                              ; preds = %315
  %322 = zext i32 %316 to i33
  %323 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %322, i33 1) #18
  %324 = extractvalue { i33, i1 } %323, 1
  %325 = extractvalue { i33, i1 } %323, 0
  %326 = icmp slt i33 %325, 0
  %327 = or i1 %324, %326
  br i1 %327, label %328, label %329, !prof !2

328:                                              ; preds = %321
  call void @llvm.trap() #18
  unreachable

329:                                              ; preds = %321
  %330 = trunc i33 %325 to i32
  store i32 %330, i32* %320, align 4
  br label %331

331:                                              ; preds = %329, %315
  %332 = phi i32 [ %330, %329 ], [ %316, %315 ]
  %333 = load atomic i32, i32* %299 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  br i1 %335, label %336, label %338

336:                                              ; preds = %331
  %337 = add i32 %332, -1
  store i32 %337, i32* %320, align 4
  br label %338

338:                                              ; preds = %336, %331
  %339 = phi i32 [ %337, %336 ], [ %332, %331 ]
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %341, label %342

341:                                              ; preds = %338
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %296) #18
  br label %342

342:                                              ; preds = %291, %338, %341
  %343 = getelementptr inbounds %"class.WTF::StringAppend.9", %"class.WTF::StringAppend.9"* %12, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %296, %"class.WTF::StringImpl"** %343, align 8
  %344 = getelementptr inbounds %"class.WTF::StringAppend.9", %"class.WTF::StringAppend.9"* %12, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i8** %344, align 8
  %345 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 %58) #18
  %346 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %345, i64 0, i32 0, i32 0, i32 0
  %347 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %346, align 8
  %348 = call %"class.WTF::StringImpl"* @_ZNK5blink18AudioParamTimeline13EventToStringERKNS0_10ParamEventE(%"class.blink::AudioParamTimeline"* undef, %"class.blink::AudioParamTimeline::ParamEvent"* dereferenceable(96) %347)
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend"* nonnull sret %11, %"class.WTF::StringAppend.9"* nonnull dereferenceable(16) %12, %"class.WTF::StringImpl"* %348)
  %349 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %11)
  %350 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %349, %"class.WTF::StringImpl"** %350, align 8
  %351 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %352 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %351, align 8
  %353 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %352, align 8
  call void %353(%"class.blink::ExceptionState"* %2, i32 9, %"class.WTF::String"* nonnull dereferenceable(8) %10) #18
  %354 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %350, align 8
  %355 = icmp eq %"class.WTF::StringImpl"* %354, null
  br i1 %355, label %369, label %356

356:                                              ; preds = %342
  %357 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %354, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %358 = load atomic i32, i32* %357 monotonic, align 4
  %359 = and i32 %358, 2
  %360 = icmp eq i32 %359, 0
  %361 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %354, i64 0, i32 0
  %362 = load i32, i32* %361, align 4
  br i1 %360, label %363, label %365

363:                                              ; preds = %356
  %364 = add i32 %362, -1
  store i32 %364, i32* %361, align 4
  br label %365

365:                                              ; preds = %363, %356
  %366 = phi i32 [ %364, %363 ], [ %362, %356 ]
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %368, label %369

368:                                              ; preds = %365
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %354) #18
  br label %369

369:                                              ; preds = %342, %365, %368
  %370 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 1, i32 0, i32 0
  %371 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %370, align 8
  %372 = icmp eq %"class.WTF::StringImpl"* %371, null
  br i1 %372, label %386, label %373

373:                                              ; preds = %369
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %375 = load atomic i32, i32* %374 monotonic, align 4
  %376 = and i32 %375, 2
  %377 = icmp eq i32 %376, 0
  %378 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %371, i64 0, i32 0
  %379 = load i32, i32* %378, align 4
  br i1 %377, label %380, label %382

380:                                              ; preds = %373
  %381 = add i32 %379, -1
  store i32 %381, i32* %378, align 4
  br label %382

382:                                              ; preds = %380, %373
  %383 = phi i32 [ %381, %380 ], [ %379, %373 ]
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %385, label %386

385:                                              ; preds = %382
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %371) #18
  br label %386

386:                                              ; preds = %385, %382, %369
  %387 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %388 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %387, align 8
  %389 = icmp eq %"class.WTF::StringImpl"* %388, null
  br i1 %389, label %403, label %390

390:                                              ; preds = %386
  %391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %388, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %392 = load atomic i32, i32* %391 monotonic, align 4
  %393 = and i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %388, i64 0, i32 0
  %396 = load i32, i32* %395, align 4
  br i1 %394, label %397, label %399

397:                                              ; preds = %390
  %398 = add i32 %396, -1
  store i32 %398, i32* %395, align 4
  br label %399

399:                                              ; preds = %397, %390
  %400 = phi i32 [ %398, %397 ], [ %396, %390 ]
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %402, label %403

402:                                              ; preds = %399
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %388) #18
  br label %403

403:                                              ; preds = %386, %399, %402
  %404 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %343, align 8
  %405 = icmp eq %"class.WTF::StringImpl"* %404, null
  br i1 %405, label %419, label %406

406:                                              ; preds = %403
  %407 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %404, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %408 = load atomic i32, i32* %407 monotonic, align 4
  %409 = and i32 %408, 2
  %410 = icmp eq i32 %409, 0
  %411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %404, i64 0, i32 0
  %412 = load i32, i32* %411, align 4
  br i1 %410, label %413, label %415

413:                                              ; preds = %406
  %414 = add i32 %412, -1
  store i32 %414, i32* %411, align 4
  br label %415

415:                                              ; preds = %413, %406
  %416 = phi i32 [ %414, %413 ], [ %412, %406 ]
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %418, label %419

418:                                              ; preds = %415
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %404) #18
  br label %419

419:                                              ; preds = %403, %415, %418
  br i1 %297, label %433, label %420

420:                                              ; preds = %419
  %421 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %296, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %422 = load atomic i32, i32* %421 monotonic, align 4
  %423 = and i32 %422, 2
  %424 = icmp eq i32 %423, 0
  %425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %296, i64 0, i32 0
  %426 = load i32, i32* %425, align 4
  br i1 %424, label %427, label %429

427:                                              ; preds = %420
  %428 = add i32 %426, -1
  store i32 %428, i32* %425, align 4
  br label %429

429:                                              ; preds = %427, %420
  %430 = phi i32 [ %428, %427 ], [ %426, %420 ]
  %431 = icmp eq i32 %430, 0
  br i1 %431, label %432, label %433

432:                                              ; preds = %429
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %296) #18
  br label %433

433:                                              ; preds = %419, %429, %432
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %294) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %293) #18
  br label %633

434:                                              ; preds = %57
  %435 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 %58) #18
  %436 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %435, i64 0, i32 0, i32 0, i32 0
  %437 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %436, align 8
  %438 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %437, i64 0, i32 0
  %439 = load i32, i32* %438, align 8
  %440 = icmp eq i32 %439, 4
  br i1 %440, label %441, label %613

441:                                              ; preds = %434
  %442 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 %58) #18
  %443 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %442, i64 0, i32 0, i32 0, i32 0
  %444 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %443, align 8
  %445 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %444, i64 0, i32 2
  %446 = load double, double* %445, align 8
  %447 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 %58) #18
  %448 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %447, i64 0, i32 0, i32 0, i32 0
  %449 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %448, align 8
  %450 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %449, i64 0, i32 7
  %451 = load double, double* %450, align 8
  %452 = fadd double %446, %451
  %453 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %17, align 8
  %454 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %453, i64 0, i32 0
  %455 = load i32, i32* %454, align 8
  %456 = icmp eq i32 %455, 6
  br i1 %456, label %613, label %457

457:                                              ; preds = %441
  %458 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %453, i64 0, i32 2
  %459 = load double, double* %458, align 8
  %460 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 %58) #18
  %461 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %460, i64 0, i32 0, i32 0, i32 0
  %462 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %461, align 8
  %463 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %462, i64 0, i32 2
  %464 = load double, double* %463, align 8
  %465 = fcmp ult double %459, %464
  br i1 %465, label %613, label %466

466:                                              ; preds = %457
  %467 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %17, align 8
  %468 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %467, i64 0, i32 2
  %469 = load double, double* %468, align 8
  %470 = fcmp olt double %469, %452
  br i1 %470, label %471, label %613

471:                                              ; preds = %466
  %472 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %472) #18
  %473 = bitcast %"class.WTF::StringAppend"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %473) #18
  %474 = bitcast %"class.WTF::StringAppend.9"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %474) #18
  %475 = call %"class.WTF::StringImpl"* @_ZNK5blink18AudioParamTimeline13EventToStringERKNS0_10ParamEventE(%"class.blink::AudioParamTimeline"* undef, %"class.blink::AudioParamTimeline::ParamEvent"* dereferenceable(96) %467)
  %476 = icmp eq %"class.WTF::StringImpl"* %475, null
  br i1 %476, label %521, label %477

477:                                              ; preds = %471
  %478 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %475, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %479 = load atomic i32, i32* %478 monotonic, align 4
  %480 = and i32 %479, 2
  %481 = icmp eq i32 %480, 0
  %482 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %475, i64 0, i32 0
  %483 = load i32, i32* %482, align 4
  br i1 %481, label %484, label %494

484:                                              ; preds = %477
  %485 = zext i32 %483 to i33
  %486 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %485, i33 1) #18
  %487 = extractvalue { i33, i1 } %486, 1
  %488 = extractvalue { i33, i1 } %486, 0
  %489 = icmp slt i33 %488, 0
  %490 = or i1 %487, %489
  br i1 %490, label %491, label %492, !prof !2

491:                                              ; preds = %484
  call void @llvm.trap() #18
  unreachable

492:                                              ; preds = %484
  %493 = trunc i33 %488 to i32
  store i32 %493, i32* %482, align 4
  br label %494

494:                                              ; preds = %477, %492
  %495 = phi i32 [ %493, %492 ], [ %483, %477 ]
  %496 = load atomic i32, i32* %478 monotonic, align 4
  %497 = and i32 %496, 2
  %498 = icmp eq i32 %497, 0
  %499 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %475, i64 0, i32 0
  br i1 %498, label %500, label %510

500:                                              ; preds = %494
  %501 = zext i32 %495 to i33
  %502 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %501, i33 1) #18
  %503 = extractvalue { i33, i1 } %502, 1
  %504 = extractvalue { i33, i1 } %502, 0
  %505 = icmp slt i33 %504, 0
  %506 = or i1 %503, %505
  br i1 %506, label %507, label %508, !prof !2

507:                                              ; preds = %500
  call void @llvm.trap() #18
  unreachable

508:                                              ; preds = %500
  %509 = trunc i33 %504 to i32
  store i32 %509, i32* %499, align 4
  br label %510

510:                                              ; preds = %508, %494
  %511 = phi i32 [ %509, %508 ], [ %495, %494 ]
  %512 = load atomic i32, i32* %478 monotonic, align 4
  %513 = and i32 %512, 2
  %514 = icmp eq i32 %513, 0
  br i1 %514, label %515, label %517

515:                                              ; preds = %510
  %516 = add i32 %511, -1
  store i32 %516, i32* %499, align 4
  br label %517

517:                                              ; preds = %515, %510
  %518 = phi i32 [ %516, %515 ], [ %511, %510 ]
  %519 = icmp eq i32 %518, 0
  br i1 %519, label %520, label %521

520:                                              ; preds = %517
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %475) #18
  br label %521

521:                                              ; preds = %471, %517, %520
  %522 = getelementptr inbounds %"class.WTF::StringAppend.9", %"class.WTF::StringAppend.9"* %15, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %475, %"class.WTF::StringImpl"** %522, align 8
  %523 = getelementptr inbounds %"class.WTF::StringAppend.9", %"class.WTF::StringAppend.9"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.16, i64 0, i64 0), i8** %523, align 8
  %524 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 %58) #18
  %525 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %524, i64 0, i32 0, i32 0, i32 0
  %526 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %525, align 8
  %527 = call %"class.WTF::StringImpl"* @_ZNK5blink18AudioParamTimeline13EventToStringERKNS0_10ParamEventE(%"class.blink::AudioParamTimeline"* undef, %"class.blink::AudioParamTimeline::ParamEvent"* dereferenceable(96) %526)
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend"* nonnull sret %14, %"class.WTF::StringAppend.9"* nonnull dereferenceable(16) %15, %"class.WTF::StringImpl"* %527)
  %528 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %14)
  %529 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %528, %"class.WTF::StringImpl"** %529, align 8
  %530 = bitcast %"class.blink::ExceptionState"* %2 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %531 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %530, align 8
  %532 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %531, align 8
  call void %532(%"class.blink::ExceptionState"* %2, i32 9, %"class.WTF::String"* nonnull dereferenceable(8) %13) #18
  %533 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %529, align 8
  %534 = icmp eq %"class.WTF::StringImpl"* %533, null
  br i1 %534, label %548, label %535

535:                                              ; preds = %521
  %536 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %533, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %537 = load atomic i32, i32* %536 monotonic, align 4
  %538 = and i32 %537, 2
  %539 = icmp eq i32 %538, 0
  %540 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %533, i64 0, i32 0
  %541 = load i32, i32* %540, align 4
  br i1 %539, label %542, label %544

542:                                              ; preds = %535
  %543 = add i32 %541, -1
  store i32 %543, i32* %540, align 4
  br label %544

544:                                              ; preds = %542, %535
  %545 = phi i32 [ %543, %542 ], [ %541, %535 ]
  %546 = icmp eq i32 %545, 0
  br i1 %546, label %547, label %548

547:                                              ; preds = %544
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %533) #18
  br label %548

548:                                              ; preds = %521, %544, %547
  %549 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %14, i64 0, i32 1, i32 0, i32 0
  %550 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %549, align 8
  %551 = icmp eq %"class.WTF::StringImpl"* %550, null
  br i1 %551, label %565, label %552

552:                                              ; preds = %548
  %553 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %550, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %554 = load atomic i32, i32* %553 monotonic, align 4
  %555 = and i32 %554, 2
  %556 = icmp eq i32 %555, 0
  %557 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %550, i64 0, i32 0
  %558 = load i32, i32* %557, align 4
  br i1 %556, label %559, label %561

559:                                              ; preds = %552
  %560 = add i32 %558, -1
  store i32 %560, i32* %557, align 4
  br label %561

561:                                              ; preds = %559, %552
  %562 = phi i32 [ %560, %559 ], [ %558, %552 ]
  %563 = icmp eq i32 %562, 0
  br i1 %563, label %564, label %565

564:                                              ; preds = %561
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %550) #18
  br label %565

565:                                              ; preds = %564, %561, %548
  %566 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %567 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %566, align 8
  %568 = icmp eq %"class.WTF::StringImpl"* %567, null
  br i1 %568, label %582, label %569

569:                                              ; preds = %565
  %570 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %567, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %571 = load atomic i32, i32* %570 monotonic, align 4
  %572 = and i32 %571, 2
  %573 = icmp eq i32 %572, 0
  %574 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %567, i64 0, i32 0
  %575 = load i32, i32* %574, align 4
  br i1 %573, label %576, label %578

576:                                              ; preds = %569
  %577 = add i32 %575, -1
  store i32 %577, i32* %574, align 4
  br label %578

578:                                              ; preds = %576, %569
  %579 = phi i32 [ %577, %576 ], [ %575, %569 ]
  %580 = icmp eq i32 %579, 0
  br i1 %580, label %581, label %582

581:                                              ; preds = %578
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %567) #18
  br label %582

582:                                              ; preds = %565, %578, %581
  %583 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %522, align 8
  %584 = icmp eq %"class.WTF::StringImpl"* %583, null
  br i1 %584, label %598, label %585

585:                                              ; preds = %582
  %586 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %583, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %587 = load atomic i32, i32* %586 monotonic, align 4
  %588 = and i32 %587, 2
  %589 = icmp eq i32 %588, 0
  %590 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %583, i64 0, i32 0
  %591 = load i32, i32* %590, align 4
  br i1 %589, label %592, label %594

592:                                              ; preds = %585
  %593 = add i32 %591, -1
  store i32 %593, i32* %590, align 4
  br label %594

594:                                              ; preds = %592, %585
  %595 = phi i32 [ %593, %592 ], [ %591, %585 ]
  %596 = icmp eq i32 %595, 0
  br i1 %596, label %597, label %598

597:                                              ; preds = %594
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %583) #18
  br label %598

598:                                              ; preds = %582, %594, %597
  br i1 %476, label %612, label %599

599:                                              ; preds = %598
  %600 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %475, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %601 = load atomic i32, i32* %600 monotonic, align 4
  %602 = and i32 %601, 2
  %603 = icmp eq i32 %602, 0
  %604 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %475, i64 0, i32 0
  %605 = load i32, i32* %604, align 4
  br i1 %603, label %606, label %608

606:                                              ; preds = %599
  %607 = add i32 %605, -1
  store i32 %607, i32* %604, align 4
  br label %608

608:                                              ; preds = %606, %599
  %609 = phi i32 [ %607, %606 ], [ %605, %599 ]
  %610 = icmp eq i32 %609, 0
  br i1 %610, label %611, label %612

611:                                              ; preds = %608
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %475) #18
  br label %612

612:                                              ; preds = %598, %608, %611
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %474) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %473) #18
  br label %633

613:                                              ; preds = %127, %63, %279, %284, %457, %441, %466, %434
  %614 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 %58) #18
  %615 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %614, i64 0, i32 0, i32 0, i32 0
  %616 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %615, align 8
  %617 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %616, i64 0, i32 2
  %618 = load double, double* %617, align 8
  %619 = fcmp ogt double %618, %19
  br i1 %619, label %624, label %620

620:                                              ; preds = %613
  %621 = add nuw i32 %58, 1
  %622 = load i32, i32* %21, align 4
  %623 = icmp ult i32 %621, %622
  br i1 %623, label %57, label %624

624:                                              ; preds = %620, %613, %24, %29
  %625 = phi i32 [ 0, %29 ], [ 0, %24 ], [ %58, %613 ], [ %621, %620 ]
  call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE6insertIS8_EEvjOT_(%"class.WTF::Vector"* %20, i32 %625, %"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4)
  %626 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %626) #18
  %627 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %20, i32 %625) #18
  %628 = bitcast %"class.std::__1::unique_ptr"* %627 to i64*
  %629 = load i64, i64* %628, align 8
  %630 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"** %16 to i64*
  store i64 %629, i64* %630, align 8
  %631 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 1, i32 0
  %632 = call { %"class.blink::AudioParamTimeline::ParamEvent"**, i8 } @_ZN3WTF9HashTableIPN5blink18AudioParamTimeline10ParamEventES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_S4_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"* %631, %"class.blink::AudioParamTimeline::ParamEvent"** nonnull dereferenceable(8) %16, %"class.blink::AudioParamTimeline::ParamEvent"** nonnull dereferenceable(8) %16) #18
  br label %633

633:                                              ; preds = %433, %278, %612, %624
  %634 = phi i8* [ %292, %433 ], [ %137, %278 ], [ %472, %612 ], [ %626, %624 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %634) #18
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %4) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18AudioParamTimeline23LinearRampToValueAtTimeEfdfdRNS_14ExceptionStateE(%"class.blink::AudioParamTimeline"*, float, double, float, double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i64 4) #18
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = call fastcc zeroext i1 @_ZN5blinkL27IsNonNegativeAudioParamTimeEdRNS_14ExceptionStateEN3WTF6StringE(double %2, %"class.blink::ExceptionState"* dereferenceable(72) %5, %"class.WTF::StringImpl"* %9)
  br i1 %10, label %11, label %28

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 2, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %12) #18
  %13 = call i8* @_Znwm(i64 96) #19
  %14 = bitcast i8* %13 to %"class.blink::AudioParamTimeline::ParamEvent"*
  %15 = bitcast i8* %13 to i32*
  store i32 1, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %13, i64 4
  %17 = bitcast i8* %16 to float*
  store float %1, float* %17, align 4
  %18 = getelementptr inbounds i8, i8* %13, i64 8
  %19 = bitcast i8* %18 to double*
  store double %2, double* %19, align 8
  %20 = getelementptr inbounds i8, i8* %13, i64 16
  %21 = bitcast i8* %20 to float*
  store float %3, float* %21, align 8
  %22 = getelementptr inbounds i8, i8* %13, i64 24
  %23 = bitcast i8* %22 to double*
  store double %4, double* %23, align 8
  %24 = getelementptr inbounds i8, i8* %13, i64 32
  %25 = getelementptr inbounds i8, i8* %13, i64 80
  %26 = bitcast i8* %25 to i64*
  store i64 0, i64* %26, align 8
  %27 = getelementptr inbounds i8, i8* %13, i64 88
  store i8 0, i8* %27, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 44, i1 false) #18
  call void @_ZN5blink18AudioParamTimeline11InsertEventENSt3__110unique_ptrINS0_10ParamEventENS1_14default_deleteIS3_EEEERNS_14ExceptionStateE(%"class.blink::AudioParamTimeline"* %0, %"class.blink::AudioParamTimeline::ParamEvent"* nonnull %14, %"class.blink::ExceptionState"* dereferenceable(72) %5)
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %12) #18
  br label %28

28:                                               ; preds = %6, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18AudioParamTimeline28ExponentialRampToValueAtTimeEfdfdRNS_14ExceptionStateE(%"class.blink::AudioParamTimeline"*, float, double, float, double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::StringAppend.10", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::StringAppend.14", align 8
  %11 = alloca %"class.WTF::StringAppend.15", align 8
  %12 = alloca %"class.WTF::StringAppend.16", align 8
  %13 = alloca %"class.WTF::StringAppend.10", align 8
  %14 = alloca %"class.WTF::StringAppend.11", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i64 4) #18
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = call fastcc zeroext i1 @_ZN5blinkL27IsNonNegativeAudioParamTimeEdRNS_14ExceptionStateEN3WTF6StringE(double %2, %"class.blink::ExceptionState"* dereferenceable(72) %5, %"class.WTF::StringImpl"* %16)
  br i1 %17, label %18, label %426

18:                                               ; preds = %6
  %19 = fcmp une float %1, 0.000000e+00
  br i1 %19, label %409, label %20

20:                                               ; preds = %18
  %21 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #18
  %22 = bitcast %"class.WTF::StringAppend.14"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %22) #18
  %23 = bitcast %"class.WTF::StringAppend.15"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %23) #18
  %24 = bitcast %"class.WTF::StringAppend.16"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #18
  %25 = bitcast %"class.WTF::StringAppend.10"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #18
  %26 = bitcast %"class.WTF::StringAppend.11"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #18
  %27 = call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEf(float %1) #18
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %104, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %35 = load i32, i32* %34, align 4
  br i1 %33, label %36, label %46

36:                                               ; preds = %29
  %37 = zext i32 %35 to i33
  %38 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #18
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !2

43:                                               ; preds = %36
  call void @llvm.trap() #18
  unreachable

44:                                               ; preds = %36
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %34, align 4
  br label %46

46:                                               ; preds = %44, %29
  %47 = phi i32 [ %45, %44 ], [ %35, %29 ]
  %48 = load atomic i32, i32* %30 monotonic, align 4
  %49 = and i32 %48, 2
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %61

51:                                               ; preds = %46
  %52 = zext i32 %47 to i33
  %53 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %52, i33 1) #18
  %54 = extractvalue { i33, i1 } %53, 1
  %55 = extractvalue { i33, i1 } %53, 0
  %56 = icmp slt i33 %55, 0
  %57 = or i1 %54, %56
  br i1 %57, label %58, label %59, !prof !2

58:                                               ; preds = %51
  call void @llvm.trap() #18
  unreachable

59:                                               ; preds = %51
  %60 = trunc i33 %55 to i32
  store i32 %60, i32* %34, align 4
  br label %61

61:                                               ; preds = %59, %46
  %62 = phi i32 [ %60, %59 ], [ %47, %46 ]
  %63 = load atomic i32, i32* %30 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %68

66:                                               ; preds = %61
  %67 = add i32 %62, -1
  store i32 %67, i32* %34, align 4
  br label %68

68:                                               ; preds = %66, %61
  %69 = phi i32 [ %67, %66 ], [ %62, %61 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #18
  br label %72

72:                                               ; preds = %68, %71
  %73 = load atomic i32, i32* %30 monotonic, align 4, !noalias !11
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = load i32, i32* %34, align 4
  br i1 %75, label %77, label %87

77:                                               ; preds = %72
  %78 = zext i32 %76 to i33
  %79 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %78, i33 1) #18
  %80 = extractvalue { i33, i1 } %79, 1
  %81 = extractvalue { i33, i1 } %79, 0
  %82 = icmp slt i33 %81, 0
  %83 = or i1 %80, %82
  br i1 %83, label %84, label %85, !prof !2

84:                                               ; preds = %77
  call void @llvm.trap() #18, !noalias !11
  unreachable

85:                                               ; preds = %77
  %86 = trunc i33 %81 to i32
  store i32 %86, i32* %34, align 4, !noalias !11
  br label %87

87:                                               ; preds = %72, %85
  %88 = phi i32 [ %86, %85 ], [ %76, %72 ]
  %89 = bitcast %"class.WTF::StringAppend.11"* %14 to i64*
  store i64 ptrtoint ([34 x i8]* @.str.10 to i64), i64* %89, align 8, !alias.scope !11
  %90 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %90, align 8, !alias.scope !11
  %91 = load atomic i32, i32* %30 monotonic, align 4, !noalias !11
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %108

94:                                               ; preds = %87
  %95 = zext i32 %88 to i33
  %96 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #18
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !2

101:                                              ; preds = %94
  call void @llvm.trap() #18, !noalias !11
  unreachable

102:                                              ; preds = %94
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %34, align 4, !noalias !11
  br label %108

104:                                              ; preds = %20
  %105 = bitcast %"class.WTF::StringAppend.11"* %14 to i64*
  store i64 ptrtoint ([34 x i8]* @.str.10 to i64), i64* %105, align 8, !alias.scope !11
  %106 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %106, align 8, !alias.scope !11
  %107 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11, i64 0, i64 0), i8** %107, align 8, !alias.scope !11
  br label %120

108:                                              ; preds = %102, %87
  %109 = phi i32 [ %103, %102 ], [ %88, %87 ]
  %110 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %14, i64 0, i32 1
  store i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.11, i64 0, i64 0), i8** %110, align 8, !alias.scope !11
  %111 = load atomic i32, i32* %30 monotonic, align 4, !noalias !11
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %116

114:                                              ; preds = %108
  %115 = add i32 %109, -1
  store i32 %115, i32* %34, align 4, !noalias !11
  br label %116

116:                                              ; preds = %114, %108
  %117 = phi i32 [ %115, %114 ], [ %109, %108 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #18, !noalias !11
  br label %120

120:                                              ; preds = %104, %116, %119
  %121 = call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEf(float 0xB6A0000000000000) #18
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.10"* nonnull sret %13, %"class.WTF::StringAppend.11"* nonnull dereferenceable(24) %14, %"class.WTF::StringImpl"* %121)
  %122 = bitcast %"class.WTF::StringAppend.10"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %122)
  %123 = bitcast %"class.WTF::StringAppend.10"* %13 to i64*
  %124 = load i64, i64* %123, align 8, !noalias !14
  %125 = bitcast %"class.WTF::StringAppend.10"* %7 to i64*
  store i64 %124, i64* %125, align 8, !noalias !14
  %126 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %13, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8, !noalias !14
  %128 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %127, %"class.WTF::StringImpl"** %128, align 8, !noalias !14
  %129 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %129, label %147, label %130

130:                                              ; preds = %120
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %147

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = zext i32 %137 to i33
  %139 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %138, i33 1) #18
  %140 = extractvalue { i33, i1 } %139, 1
  %141 = extractvalue { i33, i1 } %139, 0
  %142 = icmp slt i33 %141, 0
  %143 = or i1 %140, %142
  br i1 %143, label %144, label %145, !prof !2

144:                                              ; preds = %135
  call void @llvm.trap() #18
  unreachable

145:                                              ; preds = %135
  %146 = trunc i33 %141 to i32
  store i32 %146, i32* %136, align 4
  br label %147

147:                                              ; preds = %145, %130, %120
  %148 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %7, i64 0, i32 0, i32 1
  %149 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %13, i64 0, i32 0, i32 1
  %150 = bitcast i8** %149 to i64*
  %151 = load i64, i64* %150, align 8, !noalias !14
  %152 = bitcast i8** %148 to i64*
  store i64 %151, i64* %152, align 8, !noalias !14
  %153 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %13, i64 0, i32 1, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8, !noalias !14
  %155 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %7, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %154, %"class.WTF::StringImpl"** %155, align 8, !noalias !14
  %156 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %156, label %174, label %157

157:                                              ; preds = %147
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %174

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  %165 = zext i32 %164 to i33
  %166 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %165, i33 1) #18
  %167 = extractvalue { i33, i1 } %166, 1
  %168 = extractvalue { i33, i1 } %166, 0
  %169 = icmp slt i33 %168, 0
  %170 = or i1 %167, %169
  br i1 %170, label %171, label %172, !prof !2

171:                                              ; preds = %162
  call void @llvm.trap() #18
  unreachable

172:                                              ; preds = %162
  %173 = trunc i33 %168 to i32
  store i32 %173, i32* %163, align 4
  br label %174

174:                                              ; preds = %147, %157, %172
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.16"* nonnull %12, %"class.WTF::StringAppend.10"* nonnull byval(%"class.WTF::StringAppend.10") align 8 %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str, i64 0, i64 0)) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %122)
  %175 = call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEf(float 0x36A0000000000000) #18
  call void @_ZN3WTFplINS_12StringAppendINS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_S4_EENS1_INS1_IT_T0_EET1_EERKSA_SB_(%"class.WTF::StringAppend.15"* nonnull sret %11, %"class.WTF::StringAppend.16"* nonnull dereferenceable(40) %12, %"class.WTF::StringImpl"* %175)
  call void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKSB_SC_(%"class.WTF::StringAppend.14"* nonnull sret %10, %"class.WTF::StringAppend.15"* nonnull dereferenceable(48) %11, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0))
  %176 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.14"* nonnull %10)
  %177 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %176, %"class.WTF::StringImpl"** %177, align 8
  %178 = bitcast %"class.blink::ExceptionState"* %5 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %179 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %178, align 8
  %180 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %179, i64 2
  %181 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %180, align 8
  call void %181(%"class.blink::ExceptionState"* %5, %"class.WTF::String"* nonnull dereferenceable(8) %9) #18
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %177, align 8
  %183 = icmp eq %"class.WTF::StringImpl"* %182, null
  br i1 %183, label %197, label %184

184:                                              ; preds = %174
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %186 = load atomic i32, i32* %185 monotonic, align 4
  %187 = and i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %182, i64 0, i32 0
  %190 = load i32, i32* %189, align 4
  br i1 %188, label %191, label %193

191:                                              ; preds = %184
  %192 = add i32 %190, -1
  store i32 %192, i32* %189, align 4
  br label %193

193:                                              ; preds = %191, %184
  %194 = phi i32 [ %192, %191 ], [ %190, %184 ]
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %196, label %197

196:                                              ; preds = %193
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %182) #18
  br label %197

197:                                              ; preds = %174, %193, %196
  %198 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %10, i64 0, i32 0, i32 1, i32 0, i32 0
  %199 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %198, align 8
  %200 = icmp eq %"class.WTF::StringImpl"* %199, null
  br i1 %200, label %214, label %201

201:                                              ; preds = %197
  %202 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %199, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %203 = load atomic i32, i32* %202 monotonic, align 4
  %204 = and i32 %203, 2
  %205 = icmp eq i32 %204, 0
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %199, i64 0, i32 0
  %207 = load i32, i32* %206, align 4
  br i1 %205, label %208, label %210

208:                                              ; preds = %201
  %209 = add i32 %207, -1
  store i32 %209, i32* %206, align 4
  br label %210

210:                                              ; preds = %208, %201
  %211 = phi i32 [ %209, %208 ], [ %207, %201 ]
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %213, label %214

213:                                              ; preds = %210
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %199) #18
  br label %214

214:                                              ; preds = %213, %210, %197
  %215 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %10, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %216 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %215, align 8
  %217 = icmp eq %"class.WTF::StringImpl"* %216, null
  br i1 %217, label %231, label %218

218:                                              ; preds = %214
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load atomic i32, i32* %219 monotonic, align 4
  %221 = and i32 %220, 2
  %222 = icmp eq i32 %221, 0
  %223 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %216, i64 0, i32 0
  %224 = load i32, i32* %223, align 4
  br i1 %222, label %225, label %227

225:                                              ; preds = %218
  %226 = add i32 %224, -1
  store i32 %226, i32* %223, align 4
  br label %227

227:                                              ; preds = %225, %218
  %228 = phi i32 [ %226, %225 ], [ %224, %218 ]
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %231

230:                                              ; preds = %227
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %216) #18
  br label %231

231:                                              ; preds = %230, %227, %214
  %232 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %233 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %232, align 8
  %234 = icmp eq %"class.WTF::StringImpl"* %233, null
  br i1 %234, label %248, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %233, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %233, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  br i1 %239, label %242, label %244

242:                                              ; preds = %235
  %243 = add i32 %241, -1
  store i32 %243, i32* %240, align 4
  br label %244

244:                                              ; preds = %242, %235
  %245 = phi i32 [ %243, %242 ], [ %241, %235 ]
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %244
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %233) #18
  br label %248

248:                                              ; preds = %231, %244, %247
  %249 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %11, i64 0, i32 1, i32 0, i32 0
  %250 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %249, align 8
  %251 = icmp eq %"class.WTF::StringImpl"* %250, null
  br i1 %251, label %265, label %252

252:                                              ; preds = %248
  %253 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %250, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %254 = load atomic i32, i32* %253 monotonic, align 4
  %255 = and i32 %254, 2
  %256 = icmp eq i32 %255, 0
  %257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %250, i64 0, i32 0
  %258 = load i32, i32* %257, align 4
  br i1 %256, label %259, label %261

259:                                              ; preds = %252
  %260 = add i32 %258, -1
  store i32 %260, i32* %257, align 4
  br label %261

261:                                              ; preds = %259, %252
  %262 = phi i32 [ %260, %259 ], [ %258, %252 ]
  %263 = icmp eq i32 %262, 0
  br i1 %263, label %264, label %265

264:                                              ; preds = %261
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %250) #18
  br label %265

265:                                              ; preds = %264, %261, %248
  %266 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %11, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %267 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %266, align 8
  %268 = icmp eq %"class.WTF::StringImpl"* %267, null
  br i1 %268, label %282, label %269

269:                                              ; preds = %265
  %270 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %271 = load atomic i32, i32* %270 monotonic, align 4
  %272 = and i32 %271, 2
  %273 = icmp eq i32 %272, 0
  %274 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 0
  %275 = load i32, i32* %274, align 4
  br i1 %273, label %276, label %278

276:                                              ; preds = %269
  %277 = add i32 %275, -1
  store i32 %277, i32* %274, align 4
  br label %278

278:                                              ; preds = %276, %269
  %279 = phi i32 [ %277, %276 ], [ %275, %269 ]
  %280 = icmp eq i32 %279, 0
  br i1 %280, label %281, label %282

281:                                              ; preds = %278
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %267) #18
  br label %282

282:                                              ; preds = %281, %278, %265
  %283 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %284 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %283, align 8
  %285 = icmp eq %"class.WTF::StringImpl"* %284, null
  br i1 %285, label %299, label %286

286:                                              ; preds = %282
  %287 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %284, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %288 = load atomic i32, i32* %287 monotonic, align 4
  %289 = and i32 %288, 2
  %290 = icmp eq i32 %289, 0
  %291 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %284, i64 0, i32 0
  %292 = load i32, i32* %291, align 4
  br i1 %290, label %293, label %295

293:                                              ; preds = %286
  %294 = add i32 %292, -1
  store i32 %294, i32* %291, align 4
  br label %295

295:                                              ; preds = %293, %286
  %296 = phi i32 [ %294, %293 ], [ %292, %286 ]
  %297 = icmp eq i32 %296, 0
  br i1 %297, label %298, label %299

298:                                              ; preds = %295
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %284) #18
  br label %299

299:                                              ; preds = %282, %295, %298
  %300 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %12, i64 0, i32 0, i32 1, i32 0, i32 0
  %301 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %300, align 8
  %302 = icmp eq %"class.WTF::StringImpl"* %301, null
  br i1 %302, label %316, label %303

303:                                              ; preds = %299
  %304 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %305 = load atomic i32, i32* %304 monotonic, align 4
  %306 = and i32 %305, 2
  %307 = icmp eq i32 %306, 0
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %301, i64 0, i32 0
  %309 = load i32, i32* %308, align 4
  br i1 %307, label %310, label %312

310:                                              ; preds = %303
  %311 = add i32 %309, -1
  store i32 %311, i32* %308, align 4
  br label %312

312:                                              ; preds = %310, %303
  %313 = phi i32 [ %311, %310 ], [ %309, %303 ]
  %314 = icmp eq i32 %313, 0
  br i1 %314, label %315, label %316

315:                                              ; preds = %312
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %301) #18
  br label %316

316:                                              ; preds = %315, %312, %299
  %317 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %12, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %318 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %317, align 8
  %319 = icmp eq %"class.WTF::StringImpl"* %318, null
  br i1 %319, label %333, label %320

320:                                              ; preds = %316
  %321 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %322 = load atomic i32, i32* %321 monotonic, align 4
  %323 = and i32 %322, 2
  %324 = icmp eq i32 %323, 0
  %325 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %318, i64 0, i32 0
  %326 = load i32, i32* %325, align 4
  br i1 %324, label %327, label %329

327:                                              ; preds = %320
  %328 = add i32 %326, -1
  store i32 %328, i32* %325, align 4
  br label %329

329:                                              ; preds = %327, %320
  %330 = phi i32 [ %328, %327 ], [ %326, %320 ]
  %331 = icmp eq i32 %330, 0
  br i1 %331, label %332, label %333

332:                                              ; preds = %329
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %318) #18
  br label %333

333:                                              ; preds = %316, %329, %332
  %334 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %335 = icmp eq %"class.WTF::StringImpl"* %334, null
  br i1 %335, label %349, label %336

336:                                              ; preds = %333
  %337 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %334, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %338 = load atomic i32, i32* %337 monotonic, align 4
  %339 = and i32 %338, 2
  %340 = icmp eq i32 %339, 0
  %341 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %334, i64 0, i32 0
  %342 = load i32, i32* %341, align 4
  br i1 %340, label %343, label %345

343:                                              ; preds = %336
  %344 = add i32 %342, -1
  store i32 %344, i32* %341, align 4
  br label %345

345:                                              ; preds = %343, %336
  %346 = phi i32 [ %344, %343 ], [ %342, %336 ]
  %347 = icmp eq i32 %346, 0
  br i1 %347, label %348, label %349

348:                                              ; preds = %345
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %334) #18
  br label %349

349:                                              ; preds = %348, %345, %333
  %350 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %351 = icmp eq %"class.WTF::StringImpl"* %350, null
  br i1 %351, label %365, label %352

352:                                              ; preds = %349
  %353 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %350, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %354 = load atomic i32, i32* %353 monotonic, align 4
  %355 = and i32 %354, 2
  %356 = icmp eq i32 %355, 0
  %357 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %350, i64 0, i32 0
  %358 = load i32, i32* %357, align 4
  br i1 %356, label %359, label %361

359:                                              ; preds = %352
  %360 = add i32 %358, -1
  store i32 %360, i32* %357, align 4
  br label %361

361:                                              ; preds = %359, %352
  %362 = phi i32 [ %360, %359 ], [ %358, %352 ]
  %363 = icmp eq i32 %362, 0
  br i1 %363, label %364, label %365

364:                                              ; preds = %361
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %350) #18
  br label %365

365:                                              ; preds = %349, %361, %364
  %366 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %14, i64 0, i32 0, i32 1, i32 0, i32 0
  %367 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %366, align 8
  %368 = icmp eq %"class.WTF::StringImpl"* %367, null
  br i1 %368, label %382, label %369

369:                                              ; preds = %365
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %371 = load atomic i32, i32* %370 monotonic, align 4
  %372 = and i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 0
  %375 = load i32, i32* %374, align 4
  br i1 %373, label %376, label %378

376:                                              ; preds = %369
  %377 = add i32 %375, -1
  store i32 %377, i32* %374, align 4
  br label %378

378:                                              ; preds = %376, %369
  %379 = phi i32 [ %377, %376 ], [ %375, %369 ]
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %382

381:                                              ; preds = %378
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %367) #18
  br label %382

382:                                              ; preds = %365, %378, %381
  br i1 %28, label %408, label %383

383:                                              ; preds = %382
  %384 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %385 = load atomic i32, i32* %384 monotonic, align 4
  %386 = and i32 %385, 2
  %387 = icmp eq i32 %386, 0
  %388 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %389 = load i32, i32* %388, align 4
  br i1 %387, label %390, label %392

390:                                              ; preds = %383
  %391 = add i32 %389, -1
  store i32 %391, i32* %388, align 4
  br label %392

392:                                              ; preds = %390, %383
  %393 = phi i32 [ %391, %390 ], [ %389, %383 ]
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %395, label %397

395:                                              ; preds = %392
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #18
  %396 = load i32, i32* %388, align 4
  br label %397

397:                                              ; preds = %392, %395
  %398 = phi i32 [ %393, %392 ], [ %396, %395 ]
  %399 = load atomic i32, i32* %384 monotonic, align 4
  %400 = and i32 %399, 2
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %402, label %404

402:                                              ; preds = %397
  %403 = add i32 %398, -1
  store i32 %403, i32* %388, align 4
  br label %404

404:                                              ; preds = %402, %397
  %405 = phi i32 [ %403, %402 ], [ %398, %397 ]
  %406 = icmp eq i32 %405, 0
  br i1 %406, label %407, label %408

407:                                              ; preds = %404
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %27) #18
  br label %408

408:                                              ; preds = %382, %404, %407
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #18
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #18
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %23) #18
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %22) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #18
  br label %426

409:                                              ; preds = %18
  %410 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 2, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %410) #18
  %411 = call i8* @_Znwm(i64 96) #19
  %412 = bitcast i8* %411 to %"class.blink::AudioParamTimeline::ParamEvent"*
  %413 = bitcast i8* %411 to i32*
  store i32 2, i32* %413, align 8
  %414 = getelementptr inbounds i8, i8* %411, i64 4
  %415 = bitcast i8* %414 to float*
  store float %1, float* %415, align 4
  %416 = getelementptr inbounds i8, i8* %411, i64 8
  %417 = bitcast i8* %416 to double*
  store double %2, double* %417, align 8
  %418 = getelementptr inbounds i8, i8* %411, i64 16
  %419 = bitcast i8* %418 to float*
  store float %3, float* %419, align 8
  %420 = getelementptr inbounds i8, i8* %411, i64 24
  %421 = bitcast i8* %420 to double*
  store double %4, double* %421, align 8
  %422 = getelementptr inbounds i8, i8* %411, i64 32
  %423 = getelementptr inbounds i8, i8* %411, i64 80
  %424 = bitcast i8* %423 to i64*
  store i64 0, i64* %424, align 8
  %425 = getelementptr inbounds i8, i8* %411, i64 88
  store i8 0, i8* %425, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %422, i8 0, i64 44, i1 false) #18
  call void @_ZN5blink18AudioParamTimeline11InsertEventENSt3__110unique_ptrINS0_10ParamEventENS1_14default_deleteIS3_EEEERNS_14ExceptionStateE(%"class.blink::AudioParamTimeline"* %0, %"class.blink::AudioParamTimeline::ParamEvent"* nonnull %412, %"class.blink::ExceptionState"* dereferenceable(72) %5)
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %410) #18
  br label %426

426:                                              ; preds = %6, %409, %408
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendINS1_INS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKSB_SC_(%"class.WTF::StringAppend.14"* noalias sret, %"class.WTF::StringAppend.15"* dereferenceable(48), i8*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.15", align 8
  %5 = bitcast %"class.WTF::StringAppend.15"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.15"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #18
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #18
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %3
  %30 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %4, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %4, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #18
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !2

53:                                               ; preds = %44
  tail call void @llvm.trap() #18
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %56

56:                                               ; preds = %54, %39, %29
  %57 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %4, i64 0, i32 0, i32 1
  %58 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %1, i64 0, i32 0, i32 1
  %59 = bitcast i8** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast i8** %57 to i64*
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %1, i64 0, i32 1, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %4, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %64, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %65, label %83, label %66

66:                                               ; preds = %56
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %83

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = zext i32 %73 to i33
  %75 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %74, i33 1) #18
  %76 = extractvalue { i33, i1 } %75, 1
  %77 = extractvalue { i33, i1 } %75, 0
  %78 = icmp slt i33 %77, 0
  %79 = or i1 %76, %78
  br i1 %79, label %80, label %81, !prof !2

80:                                               ; preds = %71
  tail call void @llvm.trap() #18
  unreachable

81:                                               ; preds = %71
  %82 = trunc i33 %77 to i32
  store i32 %82, i32* %72, align 4
  br label %83

83:                                               ; preds = %56, %66, %81
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_EC2ES8_S2_(%"class.WTF::StringAppend.14"* %0, %"class.WTF::StringAppend.15"* nonnull byval(%"class.WTF::StringAppend.15") align 8 %4, i8* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendINS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_S4_EENS1_INS1_IT_T0_EET1_EERKSA_SB_(%"class.WTF::StringAppend.15"* noalias sret, %"class.WTF::StringAppend.16"* dereferenceable(40), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.16", align 8
  %5 = bitcast %"class.WTF::StringAppend.16"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.16"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #18
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !2

26:                                               ; preds = %17
  tail call void @llvm.trap() #18
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %27, %12, %3
  %30 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %4, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %1, i64 0, i32 0, i32 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %36, %"class.WTF::StringImpl"** %37, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %38, label %56, label %39

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %56

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = zext i32 %46 to i33
  %48 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #18
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !2

53:                                               ; preds = %44
  tail call void @llvm.trap() #18
  unreachable

54:                                               ; preds = %44
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %45, align 4
  br label %56

56:                                               ; preds = %29, %39, %54
  %57 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %4, i64 0, i32 1
  %58 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %1, i64 0, i32 1
  %59 = bitcast i8** %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast i8** %57 to i64*
  store i64 %60, i64* %61, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %62, label %80, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %81

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  %71 = zext i32 %70 to i33
  %72 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #18
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %68
  tail call void @llvm.trap() #18
  unreachable

78:                                               ; preds = %68
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %69, align 4
  br label %81

80:                                               ; preds = %56
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EC2ES7_S3_(%"class.WTF::StringAppend.15"* %0, %"class.WTF::StringAppend.16"* nonnull byval(%"class.WTF::StringAppend.16") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %93

81:                                               ; preds = %63, %78
  tail call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EC2ES7_S3_(%"class.WTF::StringAppend.15"* %0, %"class.WTF::StringAppend.16"* nonnull byval(%"class.WTF::StringAppend.16") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %82 = load atomic i32, i32* %64 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %81
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %81
  %90 = phi i32 [ %88, %87 ], [ %86, %81 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %93

92:                                               ; preds = %89
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #18
  br label %93

93:                                               ; preds = %80, %89, %92
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.14"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = bitcast %"class.WTF::StringTypeAdapter.521"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #18
  %9 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false) #18
  %10 = load i8*, i8** %9, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %5, i8* %10) #18
  %11 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %14 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #18
  %15 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #18
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %4, i8* %16) #18
  %17 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %20 = bitcast %"class.WTF::StringTypeAdapter.521"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #18
  %21 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false) #18
  %22 = load i8*, i8** %21, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %3, i8* %22) #18
  %23 = bitcast %"class.WTF::StringTypeAdapter.521"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #18
  %24 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false) #18
  %25 = load i8*, i8** %24, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %2, i8* %25) #18
  %26 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %30 = select i1 %28, %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"* %27
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #18
  br i1 %34, label %35, label %36

35:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #18
  br label %43

36:                                               ; preds = %1
  %37 = icmp eq %"class.WTF::StringImpl"* %18, null
  %38 = select i1 %37, %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"* %18
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #18
  br i1 %42, label %43, label %44

43:                                               ; preds = %36, %35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #18
  br label %87

44:                                               ; preds = %36
  %45 = icmp eq %"class.WTF::StringImpl"* %12, null
  %46 = select i1 %45, %"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"* %12
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = and i32 %48, 1
  %50 = icmp eq i32 %49, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #18
  br i1 %50, label %87, label %51

51:                                               ; preds = %44
  %52 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #18
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %53 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.14"* %0)
  %54 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %53, i8** nonnull dereferenceable(8) %6) #18
  %55 = load i8*, i8** %6, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.14"* %0, i8* %55)
  %56 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %56, label %123, label %57

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %74

64:                                               ; preds = %57
  %65 = zext i32 %63 to i33
  %66 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #18
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !2

71:                                               ; preds = %64
  call void @llvm.trap() #18
  unreachable

72:                                               ; preds = %64
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %62, align 4
  br label %74

74:                                               ; preds = %57, %72
  %75 = phi i32 [ %73, %72 ], [ %63, %57 ]
  %76 = ptrtoint %"class.WTF::StringImpl"* %54 to i64
  %77 = load atomic i32, i32* %58 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %82 = add i32 %75, -1
  store i32 %82, i32* %81, align 4
  br label %83

83:                                               ; preds = %80, %74
  %84 = phi i32 [ %82, %80 ], [ %75, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %123

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #18
  br label %123

87:                                               ; preds = %44, %43
  %88 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #18
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %89 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.14"* %0)
  %90 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %89, i16** nonnull dereferenceable(8) %7) #18
  %91 = load i16*, i16** %7, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.14"* %0, i16* %91)
  %92 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %92, label %123, label %93

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %110

100:                                              ; preds = %93
  %101 = zext i32 %99 to i33
  %102 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %101, i33 1) #18
  %103 = extractvalue { i33, i1 } %102, 1
  %104 = extractvalue { i33, i1 } %102, 0
  %105 = icmp slt i33 %104, 0
  %106 = or i1 %103, %105
  br i1 %106, label %107, label %108, !prof !2

107:                                              ; preds = %100
  call void @llvm.trap() #18
  unreachable

108:                                              ; preds = %100
  %109 = trunc i33 %104 to i32
  store i32 %109, i32* %98, align 4
  br label %110

110:                                              ; preds = %93, %108
  %111 = phi i32 [ %109, %108 ], [ %99, %93 ]
  %112 = ptrtoint %"class.WTF::StringImpl"* %90 to i64
  %113 = load atomic i32, i32* %94 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %116, label %119

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %118 = add i32 %111, -1
  store i32 %118, i32* %117, align 4
  br label %119

119:                                              ; preds = %116, %110
  %120 = phi i32 [ %118, %116 ], [ %111, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #18
  br label %123

123:                                              ; preds = %122, %119, %87, %86, %83, %51
  %124 = phi i8* [ %52, %51 ], [ %52, %83 ], [ %52, %86 ], [ %88, %87 ], [ %88, %119 ], [ %88, %122 ]
  %125 = phi i64 [ 0, %51 ], [ %76, %83 ], [ %76, %86 ], [ 0, %87 ], [ %112, %119 ], [ %112, %122 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #18
  %126 = inttoptr i64 %125 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %126
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18AudioParamTimeline15SetTargetAtTimeEfddRNS_14ExceptionStateE(%"class.blink::AudioParamTimeline"*, float, double, double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i64 4) #18
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = call fastcc zeroext i1 @_ZN5blinkL27IsNonNegativeAudioParamTimeEdRNS_14ExceptionStateEN3WTF6StringE(double %2, %"class.blink::ExceptionState"* dereferenceable(72) %4, %"class.WTF::StringImpl"* %9)
  br i1 %10, label %11, label %48

11:                                               ; preds = %5
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i64 13) #18
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = call fastcc zeroext i1 @_ZN5blinkL27IsNonNegativeAudioParamTimeEdRNS_14ExceptionStateEN3WTF6StringE(double %3, %"class.blink::ExceptionState"* dereferenceable(72) %4, %"class.WTF::StringImpl"* %13)
  br i1 %14, label %15, label %48

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 2, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %16) #18
  %17 = fcmp oeq double %3, 0.000000e+00
  %18 = call i8* @_Znwm(i64 96) #19
  %19 = bitcast i8* %18 to %"class.blink::AudioParamTimeline::ParamEvent"*
  %20 = bitcast i8* %18 to i32*
  br i1 %17, label %21, label %32

21:                                               ; preds = %15
  store i32 0, i32* %20, align 8
  %22 = getelementptr inbounds i8, i8* %18, i64 4
  %23 = bitcast i8* %22 to float*
  store float %1, float* %23, align 4
  %24 = getelementptr inbounds i8, i8* %18, i64 8
  %25 = bitcast i8* %24 to double*
  store double %2, double* %25, align 8
  %26 = getelementptr inbounds i8, i8* %18, i64 16
  %27 = bitcast i8* %26 to float*
  store float 0.000000e+00, float* %27, align 8
  %28 = getelementptr inbounds i8, i8* %18, i64 24
  %29 = getelementptr inbounds i8, i8* %18, i64 80
  %30 = bitcast i8* %29 to i64*
  store i64 0, i64* %30, align 8
  %31 = getelementptr inbounds i8, i8* %18, i64 88
  store i8 0, i8* %31, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %28, i8 0, i64 52, i1 false) #18
  br label %47

32:                                               ; preds = %15
  store i32 3, i32* %20, align 8
  %33 = getelementptr inbounds i8, i8* %18, i64 4
  %34 = bitcast i8* %33 to float*
  store float %1, float* %34, align 4
  %35 = getelementptr inbounds i8, i8* %18, i64 8
  %36 = bitcast i8* %35 to double*
  store double %2, double* %36, align 8
  %37 = getelementptr inbounds i8, i8* %18, i64 16
  %38 = bitcast i8* %37 to float*
  store float 0.000000e+00, float* %38, align 8
  %39 = getelementptr inbounds i8, i8* %18, i64 24
  %40 = bitcast i8* %39 to double*
  store double 0.000000e+00, double* %40, align 8
  %41 = getelementptr inbounds i8, i8* %18, i64 32
  %42 = bitcast i8* %41 to double*
  store double %3, double* %42, align 8
  %43 = getelementptr inbounds i8, i8* %18, i64 40
  %44 = getelementptr inbounds i8, i8* %18, i64 80
  %45 = bitcast i8* %44 to i64*
  store i64 0, i64* %45, align 8
  %46 = getelementptr inbounds i8, i8* %18, i64 88
  store i8 0, i8* %46, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 36, i1 false) #18
  br label %47

47:                                               ; preds = %32, %21
  call void @_ZN5blink18AudioParamTimeline11InsertEventENSt3__110unique_ptrINS0_10ParamEventENS1_14default_deleteIS3_EEEERNS_14ExceptionStateE(%"class.blink::AudioParamTimeline"* %0, %"class.blink::AudioParamTimeline::ParamEvent"* nonnull %19, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %16) #18
  br label %48

48:                                               ; preds = %11, %5, %47
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18AudioParamTimeline19SetValueCurveAtTimeERKN3WTF6VectorIfLj0ENS1_18PartitionAllocatorEEEddRNS_14ExceptionStateE(%"class.blink::AudioParamTimeline"*, %"class.WTF::Vector.4"* nocapture readonly dereferenceable(16), double, double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::StringAppend", align 8
  %8 = alloca %"class.WTF::StringAppend.9", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i64 4) #18
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = call fastcc zeroext i1 @_ZN5blinkL27IsNonNegativeAudioParamTimeEdRNS_14ExceptionStateEN3WTF6StringE(double %2, %"class.blink::ExceptionState"* dereferenceable(72) %4, %"class.WTF::StringImpl"* %13)
  br i1 %14, label %15, label %269

15:                                               ; preds = %5
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.14, i64 0, i64 0), i64 8) #18
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = fcmp ogt double %3, 0.000000e+00
  br i1 %18, label %143, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  %21 = bitcast %"class.WTF::StringAppend"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #18
  %22 = bitcast %"class.WTF::StringAppend.9"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #18
  %23 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %23, label %67, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %41

31:                                               ; preds = %24
  %32 = zext i32 %30 to i33
  %33 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #18
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !2

38:                                               ; preds = %31
  call void @llvm.trap() #18
  unreachable

39:                                               ; preds = %31
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %29, align 4
  br label %41

41:                                               ; preds = %39, %24
  %42 = phi i32 [ %40, %39 ], [ %30, %24 ]
  %43 = load atomic i32, i32* %25 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %56

46:                                               ; preds = %41
  %47 = zext i32 %42 to i33
  %48 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %47, i33 1) #18
  %49 = extractvalue { i33, i1 } %48, 1
  %50 = extractvalue { i33, i1 } %48, 0
  %51 = icmp slt i33 %50, 0
  %52 = or i1 %49, %51
  br i1 %52, label %53, label %54, !prof !2

53:                                               ; preds = %46
  call void @llvm.trap() #18
  unreachable

54:                                               ; preds = %46
  %55 = trunc i33 %50 to i32
  store i32 %55, i32* %29, align 4
  br label %56

56:                                               ; preds = %54, %41
  %57 = phi i32 [ %55, %54 ], [ %42, %41 ]
  %58 = load atomic i32, i32* %25 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %63

61:                                               ; preds = %56
  %62 = add i32 %57, -1
  store i32 %62, i32* %29, align 4
  br label %63

63:                                               ; preds = %61, %56
  %64 = phi i32 [ %62, %61 ], [ %57, %56 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #18
  br label %67

67:                                               ; preds = %66, %63, %19
  %68 = getelementptr inbounds %"class.WTF::StringAppend.9", %"class.WTF::StringAppend.9"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %68, align 8
  %69 = getelementptr inbounds %"class.WTF::StringAppend.9", %"class.WTF::StringAppend.9"* %8, i64 0, i32 1
  store i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.18, i64 0, i64 0), i8** %69, align 8
  %70 = call %"class.WTF::StringImpl"* @_ZN3WTF6String6NumberEdj(double %3, i32 6) #18
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend"* nonnull sret %7, %"class.WTF::StringAppend.9"* nonnull dereferenceable(16) %8, %"class.WTF::StringImpl"* %70) #18
  %71 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %7) #18
  %72 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %72, align 8
  %73 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)***
  %74 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %74, i64 2
  %76 = load void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, %"class.WTF::String"*)** %75, align 8
  call void %76(%"class.blink::ExceptionState"* %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #18
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %67
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #18
  br label %92

92:                                               ; preds = %91, %88, %67
  %93 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 1, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #18
  br label %109

109:                                              ; preds = %108, %105, %92
  %110 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %110, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #18
  br label %126

126:                                              ; preds = %125, %122, %109
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %126
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  %134 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %135 = load i32, i32* %134, align 4
  br i1 %133, label %136, label %138

136:                                              ; preds = %129
  %137 = add i32 %135, -1
  store i32 %137, i32* %134, align 4
  br label %138

138:                                              ; preds = %136, %129
  %139 = phi i32 [ %137, %136 ], [ %135, %129 ]
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %142

141:                                              ; preds = %138
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #18
  br label %142

142:                                              ; preds = %141, %138, %126
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %143

143:                                              ; preds = %142, %15
  %144 = phi i1 [ false, %142 ], [ true, %15 ]
  %145 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %145, label %159, label %146

146:                                              ; preds = %143
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = and i32 %148, 2
  %150 = icmp eq i32 %149, 0
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 0
  %152 = load i32, i32* %151, align 4
  br i1 %150, label %153, label %155

153:                                              ; preds = %146
  %154 = add i32 %152, -1
  store i32 %154, i32* %151, align 4
  br label %155

155:                                              ; preds = %153, %146
  %156 = phi i32 [ %154, %153 ], [ %152, %146 ]
  %157 = icmp eq i32 %156, 0
  br i1 %157, label %158, label %159

158:                                              ; preds = %155
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %17) #18
  br label %159

159:                                              ; preds = %143, %155, %158
  br i1 %144, label %160, label %269

160:                                              ; preds = %159
  %161 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %1, i64 0, i32 0, i32 0, i32 2
  %162 = load i32, i32* %161, align 4
  %163 = icmp ult i32 %162, 2
  br i1 %163, label %164, label %187

164:                                              ; preds = %160
  %165 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #18
  %166 = call %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages24IndexExceedsMinimumBoundIjEEN3WTF6StringEPKcT_S6_(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.15, i64 0, i64 0), i32 %162, i32 2)
  %167 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %166, %"class.WTF::StringImpl"** %167, align 8
  %168 = bitcast %"class.blink::ExceptionState"* %4 to void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)***
  %169 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)**, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*** %168, align 8
  %170 = load void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)*, void (%"class.blink::ExceptionState"*, i32, %"class.WTF::String"*)** %169, align 8
  call void %170(%"class.blink::ExceptionState"* %4, i32 11, %"class.WTF::String"* nonnull dereferenceable(8) %11) #18
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %167, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %164
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %171) #18
  br label %186

186:                                              ; preds = %164, %182, %185
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #18
  br label %269

187:                                              ; preds = %160
  %188 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 2, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %188) #18
  %189 = load i32, i32* %161, align 4
  %190 = add i32 %189, -1
  %191 = uitofp i32 %190 to double
  %192 = fdiv double %191, %3
  %193 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %1, i64 0, i32 0, i32 0, i32 0
  %194 = load float*, float** %193, align 8
  %195 = zext i32 %190 to i64
  %196 = getelementptr inbounds float, float* %194, i64 %195
  %197 = bitcast float* %196 to i32*
  %198 = load i32, i32* %197, align 4
  %199 = call i8* @_Znwm(i64 96) #19
  %200 = bitcast i8* %199 to %"class.blink::AudioParamTimeline::ParamEvent"*
  %201 = bitcast i8* %199 to i32*
  store i32 4, i32* %201, align 8
  %202 = getelementptr inbounds i8, i8* %199, i64 4
  %203 = bitcast i8* %202 to float*
  store float 0.000000e+00, float* %203, align 4
  %204 = getelementptr inbounds i8, i8* %199, i64 8
  %205 = bitcast i8* %204 to double*
  store double %2, double* %205, align 8
  %206 = getelementptr inbounds i8, i8* %199, i64 16
  %207 = bitcast i8* %206 to float*
  store float 0.000000e+00, float* %207, align 8
  %208 = getelementptr inbounds i8, i8* %199, i64 24
  %209 = getelementptr inbounds i8, i8* %199, i64 40
  %210 = bitcast i8* %209 to double*
  call void @llvm.memset.p0i8.i64(i8* align 8 %208, i8 0, i64 16, i1 false) #18
  store double %3, double* %210, align 8
  %211 = getelementptr inbounds i8, i8* %199, i64 48
  call void @llvm.memset.p0i8.i64(i8* align 8 %211, i8 0, i64 16, i1 false) #18
  %212 = getelementptr inbounds i8, i8* %199, i64 64
  %213 = bitcast i8* %212 to double*
  store double %192, double* %213, align 8
  %214 = getelementptr inbounds i8, i8* %199, i64 72
  %215 = bitcast i8* %214 to i32*
  store i32 %198, i32* %215, align 8
  %216 = getelementptr inbounds i8, i8* %199, i64 80
  %217 = bitcast i8* %216 to i64*
  store i64 0, i64* %217, align 8
  %218 = getelementptr inbounds i8, i8* %199, i64 88
  store i8 0, i8* %218, align 8
  %219 = getelementptr inbounds i8, i8* %199, i64 60
  %220 = bitcast i8* %219 to i32*
  %221 = icmp eq i32 %189, 0
  br i1 %221, label %222, label %224

222:                                              ; preds = %187
  %223 = bitcast float* %194 to i8*
  br label %244

224:                                              ; preds = %187
  %225 = getelementptr inbounds i8, i8* %199, i64 56
  %226 = bitcast i8* %225 to i32*
  %227 = icmp ugt i32 %189, 4
  %228 = select i1 %227, i32 %189, i32 4
  %229 = zext i32 %228 to i64
  %230 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %229) #18
  %231 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %230, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #18
  %232 = ptrtoint i8* %231 to i64
  %233 = bitcast i8* %211 to i64*
  store atomic i64 %232, i64* %233 monotonic, align 8
  %234 = lshr i64 %230, 2
  %235 = trunc i64 %234 to i32
  store i32 %235, i32* %226, align 8
  %236 = bitcast i8* %231 to float*
  %237 = zext i32 %189 to i64
  %238 = getelementptr inbounds float, float* %236, i64 %237
  %239 = ptrtoint float* %238 to i64
  %240 = sub i64 %239, %232
  call void @llvm.memset.p0i8.i64(i8* align 4 %231, i8 0, i64 %240, i1 false) #18
  %241 = shl nuw nsw i64 %237, 2
  %242 = bitcast %"class.WTF::Vector.4"* %1 to i8**
  %243 = load i8*, i8** %242, align 8
  br label %244

244:                                              ; preds = %222, %224
  %245 = phi i8* [ %243, %224 ], [ %223, %222 ]
  %246 = phi i64 [ %241, %224 ], [ 0, %222 ]
  %247 = phi i8* [ %231, %224 ], [ null, %222 ]
  store i32 %189, i32* %220, align 4
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %247, i8* align 4 %245, i64 %246, i1 false) #18
  call void @_ZN5blink18AudioParamTimeline11InsertEventENSt3__110unique_ptrINS0_10ParamEventENS1_14default_deleteIS3_EEEERNS_14ExceptionStateE(%"class.blink::AudioParamTimeline"* %0, %"class.blink::AudioParamTimeline::ParamEvent"* nonnull %200, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  %248 = load float*, float** %193, align 8
  %249 = load i32, i32* %161, align 4
  %250 = add i32 %249, -1
  %251 = zext i32 %250 to i64
  %252 = getelementptr inbounds float, float* %248, i64 %251
  %253 = bitcast float* %252 to i32*
  %254 = load i32, i32* %253, align 4
  %255 = fadd double %2, %3
  %256 = call i8* @_Znwm(i64 96) #19
  %257 = bitcast i8* %256 to %"class.blink::AudioParamTimeline::ParamEvent"*
  %258 = bitcast i8* %256 to i32*
  store i32 6, i32* %258, align 8
  %259 = getelementptr inbounds i8, i8* %256, i64 4
  %260 = bitcast i8* %259 to i32*
  store i32 %254, i32* %260, align 4
  %261 = getelementptr inbounds i8, i8* %256, i64 8
  %262 = bitcast i8* %261 to double*
  store double %255, double* %262, align 8
  %263 = getelementptr inbounds i8, i8* %256, i64 16
  %264 = bitcast i8* %263 to float*
  store float 0.000000e+00, float* %264, align 8
  %265 = getelementptr inbounds i8, i8* %256, i64 24
  %266 = getelementptr inbounds i8, i8* %256, i64 80
  %267 = bitcast i8* %266 to i64*
  store i64 0, i64* %267, align 8
  %268 = getelementptr inbounds i8, i8* %256, i64 88
  store i8 0, i8* %268, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %265, i8 0, i64 52, i1 false) #18
  call void @_ZN5blink18AudioParamTimeline11InsertEventENSt3__110unique_ptrINS0_10ParamEventENS1_14default_deleteIS3_EEEERNS_14ExceptionStateE(%"class.blink::AudioParamTimeline"* %0, %"class.blink::AudioParamTimeline::ParamEvent"* nonnull %257, %"class.blink::ExceptionState"* dereferenceable(72) %4)
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %188) #18
  br label %269

269:                                              ; preds = %159, %5, %244, %186
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17ExceptionMessages24IndexExceedsMinimumBoundIjEEN3WTF6StringEPKcT_S6_(i8*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %5 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %6 = alloca %"class.WTF::StringBuilder", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = icmp eq i32 %1, %2
  %17 = bitcast %"class.WTF::StringBuilder"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %17) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 48, i1 false)
  %18 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %18, align 8
  %19 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 1
  %20 = bitcast %union.anon.538* %19 to i8*
  store i8 0, i8* %20, align 8
  %21 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 2
  store i32 0, i32* %21, align 8
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 3
  store i8 1, i8* %22, align 4
  %23 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %6, i64 0, i32 4
  store i8 0, i8* %23, align 1
  %24 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %24) #18
  %25 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %26 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0), i8** %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 4, i32* %28, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %24) #18
  %29 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #18
  %30 = icmp eq i8* %0, null
  br i1 %30, label %37, label %31

31:                                               ; preds = %3
  %32 = call i64 @strlen(i8* nonnull %0) #20
  %33 = icmp ult i64 %32, 4294967296
  br i1 %33, label %35, label %34, !prof !9

34:                                               ; preds = %31
  call void @llvm.trap() #18
  unreachable

35:                                               ; preds = %31
  %36 = trunc i64 %32 to i32
  br label %37

37:                                               ; preds = %3, %35
  %38 = phi i32 [ %36, %35 ], [ 0, %3 ]
  %39 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %40 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* %0, i8** %41, align 8
  %42 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %38, i32* %42, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %8)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #18
  %43 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #18
  %44 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %45 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.27, i64 0, i64 0), i8** %46, align 8
  %47 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 11, i32* %47, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %9)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #18
  %48 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #18
  %49 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #18
  %50 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 11
  %51 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 2
  %52 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 3
  %53 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 32, i1 false) #18
  store i8* %50, i8** %51, align 8
  %54 = urem i32 %1, 10
  %55 = udiv i32 %1, 10
  %56 = trunc i32 %54 to i8
  %57 = or i8 %56, 48
  store i8 %57, i8* %50, align 1
  %58 = icmp ugt i32 %1, 9
  br i1 %58, label %59, label %92

59:                                               ; preds = %37
  %60 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 10
  store i8* %60, i8** %51, align 8
  %61 = urem i32 %55, 10
  %62 = trunc i32 %61 to i8
  %63 = or i8 %62, 48
  store i8 %63, i8* %60, align 2
  %64 = icmp ugt i32 %1, 99
  br i1 %64, label %65, label %90

65:                                               ; preds = %59
  %66 = udiv i32 %1, 100
  %67 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 9
  store i8* %67, i8** %51, align 8
  %68 = urem i32 %66, 10
  %69 = trunc i32 %68 to i8
  %70 = or i8 %69, 48
  store i8 %70, i8* %67, align 1
  %71 = icmp ugt i32 %1, 999
  br i1 %71, label %72, label %88

72:                                               ; preds = %65
  %73 = udiv i32 %1, 1000
  %74 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 8
  store i8* %74, i8** %51, align 8
  %75 = urem i32 %73, 10
  %76 = trunc i32 %75 to i8
  %77 = or i8 %76, 48
  store i8 %77, i8* %74, align 8
  %78 = icmp ugt i32 %1, 9999
  br i1 %78, label %79, label %86

79:                                               ; preds = %72
  %80 = udiv i32 %1, 10000
  %81 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %5, i64 0, i32 0, i64 7
  store i8* %81, i8** %51, align 8
  %82 = urem i32 %80, 10
  %83 = trunc i32 %82 to i8
  %84 = or i8 %83, 48
  store i8 %84, i8* %81, align 1
  %85 = icmp ugt i32 %1, 99999
  br i1 %85, label %94, label %103

86:                                               ; preds = %72
  %87 = ptrtoint i8* %74 to i64
  br label %106

88:                                               ; preds = %65
  %89 = ptrtoint i8* %67 to i64
  br label %106

90:                                               ; preds = %59
  %91 = ptrtoint i8* %60 to i64
  br label %106

92:                                               ; preds = %37
  %93 = ptrtoint i8* %50 to i64
  br label %106

94:                                               ; preds = %79, %94
  %95 = phi i32 [ %97, %94 ], [ %80, %79 ]
  %96 = load i8*, i8** %51, align 8
  %97 = udiv i32 %95, 10
  %98 = getelementptr inbounds i8, i8* %96, i64 -1
  store i8* %98, i8** %51, align 8
  %99 = urem i32 %97, 10
  %100 = trunc i32 %99 to i8
  %101 = or i8 %100, 48
  store i8 %101, i8* %98, align 1
  %102 = icmp ugt i32 %95, 99
  br i1 %102, label %94, label %103

103:                                              ; preds = %94, %79
  %104 = bitcast i8** %51 to i64*
  %105 = load i64, i64* %104, align 8
  br label %106

106:                                              ; preds = %103, %86, %88, %90, %92
  %107 = phi i64 [ %93, %92 ], [ %91, %90 ], [ %89, %88 ], [ %105, %103 ], [ %87, %86 ]
  %108 = ptrtoint i8* %53 to i64
  %109 = sub i64 %108, %107
  %110 = trunc i64 %109 to i32
  store i32 %110, i32* %52, align 8
  %111 = inttoptr i64 %107 to i8*
  %112 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %111, i32 %110) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %49) #18
  %113 = icmp eq %"class.WTF::StringImpl"* %112, null
  br i1 %113, label %114, label %119

114:                                              ; preds = %106
  %115 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %115, align 8
  %116 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %117 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 0, i32* %118, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  br label %139

119:                                              ; preds = %106
  %120 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %112, %"class.WTF::StringImpl"** %120, align 8
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 1
  %122 = load i32, i32* %121, align 4
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 1
  %124 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %125 = bitcast i8** %124 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %123, %"class.WTF::StringImpl"** %125, align 8
  %126 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %122, i32* %126, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %10)
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load atomic i32, i32* %127 monotonic, align 4
  %129 = and i32 %128, 2
  %130 = icmp eq i32 %129, 0
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %112, i64 0, i32 0
  %132 = load i32, i32* %131, align 4
  br i1 %130, label %133, label %135

133:                                              ; preds = %119
  %134 = add i32 %132, -1
  store i32 %134, i32* %131, align 4
  br label %135

135:                                              ; preds = %133, %119
  %136 = phi i32 [ %134, %133 ], [ %132, %119 ]
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %139

138:                                              ; preds = %135
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %112) #18
  br label %139

139:                                              ; preds = %114, %135, %138
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #18
  %140 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %140) #18
  %141 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %142 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %141, i64* %142, align 8
  %143 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.28, i64 0, i64 0), i8** %143, align 8
  %144 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 15, i32* %144, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %11)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %140) #18
  %145 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %145) #18
  %146 = select i1 %16, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.29, i64 0, i64 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.30, i64 0, i64 0)
  %147 = select i1 %16, i32 12, i32 0
  %148 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %149 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* %146, i8** %150, align 8
  %151 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %147, i32* %151, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %12)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %145) #18
  %152 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %152) #18
  %153 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %154 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %153, i64* %154, align 8
  %155 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.31, i64 0, i64 0), i8** %155, align 8
  %156 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 19, i32* %156, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %13)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %152) #18
  %157 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %157) #18
  %158 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %158) #18
  %159 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 11
  %160 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 2
  %161 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 3
  %162 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %158, i8 -86, i64 32, i1 false) #18
  store i8* %159, i8** %160, align 8
  %163 = urem i32 %2, 10
  %164 = udiv i32 %2, 10
  %165 = trunc i32 %163 to i8
  %166 = or i8 %165, 48
  store i8 %166, i8* %159, align 1
  %167 = icmp ugt i32 %2, 9
  br i1 %167, label %168, label %201

168:                                              ; preds = %139
  %169 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 10
  store i8* %169, i8** %160, align 8
  %170 = urem i32 %164, 10
  %171 = trunc i32 %170 to i8
  %172 = or i8 %171, 48
  store i8 %172, i8* %169, align 2
  %173 = icmp ugt i32 %2, 99
  br i1 %173, label %174, label %199

174:                                              ; preds = %168
  %175 = udiv i32 %2, 100
  %176 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 9
  store i8* %176, i8** %160, align 8
  %177 = urem i32 %175, 10
  %178 = trunc i32 %177 to i8
  %179 = or i8 %178, 48
  store i8 %179, i8* %176, align 1
  %180 = icmp ugt i32 %2, 999
  br i1 %180, label %181, label %197

181:                                              ; preds = %174
  %182 = udiv i32 %2, 1000
  %183 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 8
  store i8* %183, i8** %160, align 8
  %184 = urem i32 %182, 10
  %185 = trunc i32 %184 to i8
  %186 = or i8 %185, 48
  store i8 %186, i8* %183, align 8
  %187 = icmp ugt i32 %2, 9999
  br i1 %187, label %188, label %195

188:                                              ; preds = %181
  %189 = udiv i32 %2, 10000
  %190 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %4, i64 0, i32 0, i64 7
  store i8* %190, i8** %160, align 8
  %191 = urem i32 %189, 10
  %192 = trunc i32 %191 to i8
  %193 = or i8 %192, 48
  store i8 %193, i8* %190, align 1
  %194 = icmp ugt i32 %2, 99999
  br i1 %194, label %203, label %212

195:                                              ; preds = %181
  %196 = ptrtoint i8* %183 to i64
  br label %215

197:                                              ; preds = %174
  %198 = ptrtoint i8* %176 to i64
  br label %215

199:                                              ; preds = %168
  %200 = ptrtoint i8* %169 to i64
  br label %215

201:                                              ; preds = %139
  %202 = ptrtoint i8* %159 to i64
  br label %215

203:                                              ; preds = %188, %203
  %204 = phi i32 [ %206, %203 ], [ %189, %188 ]
  %205 = load i8*, i8** %160, align 8
  %206 = udiv i32 %204, 10
  %207 = getelementptr inbounds i8, i8* %205, i64 -1
  store i8* %207, i8** %160, align 8
  %208 = urem i32 %206, 10
  %209 = trunc i32 %208 to i8
  %210 = or i8 %209, 48
  store i8 %210, i8* %207, align 1
  %211 = icmp ugt i32 %204, 99
  br i1 %211, label %203, label %212

212:                                              ; preds = %203, %188
  %213 = bitcast i8** %160 to i64*
  %214 = load i64, i64* %213, align 8
  br label %215

215:                                              ; preds = %212, %195, %197, %199, %201
  %216 = phi i64 [ %202, %201 ], [ %200, %199 ], [ %198, %197 ], [ %214, %212 ], [ %196, %195 ]
  %217 = ptrtoint i8* %162 to i64
  %218 = sub i64 %217, %216
  %219 = trunc i64 %218 to i32
  store i32 %219, i32* %161, align 8
  %220 = inttoptr i64 %216 to i8*
  %221 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %220, i32 %219) #18
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %158) #18
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %223, label %228

223:                                              ; preds = %215
  %224 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %224, align 8
  %225 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %226 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %225, i64* %226, align 8
  %227 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 0, i32* %227, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  br label %248

228:                                              ; preds = %215
  %229 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %221, %"class.WTF::StringImpl"** %229, align 8
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 1
  %231 = load i32, i32* %230, align 4
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 1
  %233 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %234 = bitcast i8** %233 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %232, %"class.WTF::StringImpl"** %234, align 8
  %235 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %231, i32* %235, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %14)
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = and i32 %237, 2
  %239 = icmp eq i32 %238, 0
  %240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  br i1 %239, label %242, label %244

242:                                              ; preds = %228
  %243 = add i32 %241, -1
  store i32 %243, i32* %240, align 4
  br label %244

244:                                              ; preds = %242, %228
  %245 = phi i32 [ %243, %242 ], [ %241, %228 ]
  %246 = icmp eq i32 %245, 0
  br i1 %246, label %247, label %248

247:                                              ; preds = %244
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #18
  br label %248

248:                                              ; preds = %223, %244, %247
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %157) #18
  %249 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %249) #18
  %250 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %251 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %250, i64* %251, align 8
  %252 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.12, i64 0, i64 0), i8** %252, align 8
  %253 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 2, i32* %253, align 8
  call void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"* nonnull %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %15)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %249) #18
  %254 = call %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"* nonnull %6) #18
  call void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"* nonnull %6) #18
  %255 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %256 = icmp eq %"class.WTF::StringImpl"* %255, null
  br i1 %256, label %270, label %257

257:                                              ; preds = %248
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %259 = load atomic i32, i32* %258 monotonic, align 4
  %260 = and i32 %259, 2
  %261 = icmp eq i32 %260, 0
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %255, i64 0, i32 0
  %263 = load i32, i32* %262, align 4
  br i1 %261, label %264, label %266

264:                                              ; preds = %257
  %265 = add i32 %263, -1
  store i32 %265, i32* %262, align 4
  br label %266

266:                                              ; preds = %264, %257
  %267 = phi i32 [ %265, %264 ], [ %263, %257 ]
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %270

269:                                              ; preds = %266
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %255) #18
  br label %270

270:                                              ; preds = %248, %266, %269
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %17) #18
  ret %"class.WTF::StringImpl"* %254
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE6insertIS8_EEvjOT_(%"class.WTF::Vector"*, i32, %"class.std::__1::unique_ptr"* dereferenceable(8)) local_unnamed_addr #8 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #18
  %8 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ult i32 %10, %1
  br i1 %12, label %14, label %13

13:                                               ; preds = %3
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %8, align 8
  br label %23

14:                                               ; preds = %3
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #18
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %10) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.33, i64 0, i64 0), i8* %15, i8* %16) #18
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %8, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0), i32 1969, %"class.logging::CheckOpResult"* nonnull %5) #18
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #18
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #18
  %24 = load i32, i32* %9, align 4
  %25 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = icmp eq i32 %24, %26
  br i1 %27, label %31, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %29, align 8
  br label %120

31:                                               ; preds = %23
  %32 = add i32 %24, 1
  %33 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %33, align 8
  %35 = icmp ugt %"class.std::__1::unique_ptr"* %34, %2
  br i1 %35, label %40, label %36

36:                                               ; preds = %31
  %37 = zext i32 %24 to i64
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %34, i64 %37
  %39 = icmp ugt %"class.std::__1::unique_ptr"* %38, %2
  br i1 %39, label %78, label %40

40:                                               ; preds = %36, %31
  %41 = lshr i32 %24, 2
  %42 = add i32 %32, %41
  %43 = icmp ugt i32 %42, 4
  %44 = select i1 %43, i32 %42, i32 4
  %45 = icmp ugt i32 %44, %32
  %46 = select i1 %45, i32 %44, i32 %32
  %47 = icmp ult i32 %24, %46
  br i1 %47, label %48, label %120, !prof !9

48:                                               ; preds = %40
  %49 = icmp eq %"class.std::__1::unique_ptr"* %34, null
  %50 = zext i32 %46 to i64
  %51 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS2_14default_deleteIS6_EEEEEEmm(i64 %50) #18
  %52 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %51, i8* getelementptr inbounds ([173 x i8], [173 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #18
  br i1 %49, label %53, label %59

53:                                               ; preds = %48
  %54 = ptrtoint i8* %52 to i64
  %55 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %54, i64* %55 monotonic, align 8
  %56 = lshr i64 %51, 3
  %57 = trunc i64 %56 to i32
  store i32 %57, i32* %25, align 8
  %58 = bitcast i8* %52 to %"class.std::__1::unique_ptr"*
  br label %120

59:                                               ; preds = %48
  %60 = lshr i64 %51, 3
  %61 = ptrtoint i8* %52 to i64
  %62 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %33, align 8
  %63 = icmp ne i8* %52, null
  %64 = icmp ne %"class.std::__1::unique_ptr"* %62, null
  %65 = and i1 %63, %64
  %66 = bitcast %"class.std::__1::unique_ptr"* %62 to i8*
  br i1 %65, label %67, label %73, !prof !9

67:                                               ; preds = %59
  %68 = load i32, i32* %9, align 4
  %69 = zext i32 %68 to i64
  %70 = shl nuw nsw i64 %69, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %52, i8* nonnull align 8 %66, i64 %70, i1 false) #18
  %71 = bitcast %"class.WTF::Vector"* %0 to i8**
  %72 = load i8*, i8** %71, align 8
  br label %73

73:                                               ; preds = %67, %59
  %74 = phi i8* [ %72, %67 ], [ %66, %59 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #18
  %75 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %61, i64* %75 monotonic, align 8
  %76 = trunc i64 %60 to i32
  store i32 %76, i32* %25, align 8
  %77 = bitcast i8* %52 to %"class.std::__1::unique_ptr"*
  br label %120

78:                                               ; preds = %36
  %79 = ptrtoint %"class.std::__1::unique_ptr"* %2 to i64
  %80 = ptrtoint %"class.std::__1::unique_ptr"* %34 to i64
  %81 = sub i64 %79, %80
  %82 = ashr exact i64 %81, 3
  %83 = lshr i32 %24, 2
  %84 = add i32 %32, %83
  %85 = icmp ugt i32 %84, 4
  %86 = select i1 %85, i32 %84, i32 4
  %87 = icmp ugt i32 %86, %32
  %88 = select i1 %87, i32 %86, i32 %32
  %89 = icmp ult i32 %24, %88
  br i1 %89, label %90, label %117, !prof !9

90:                                               ; preds = %78
  %91 = icmp eq %"class.std::__1::unique_ptr"* %34, null
  %92 = zext i32 %88 to i64
  %93 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS2_14default_deleteIS6_EEEEEEmm(i64 %92) #18
  %94 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %93, i8* getelementptr inbounds ([173 x i8], [173 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #18
  %95 = ptrtoint i8* %94 to i64
  br i1 %91, label %96, label %98

96:                                               ; preds = %90
  %97 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %95, i64* %97 monotonic, align 8
  br label %113

98:                                               ; preds = %90
  %99 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %33, align 8
  %100 = icmp ne i8* %94, null
  %101 = icmp ne %"class.std::__1::unique_ptr"* %99, null
  %102 = and i1 %100, %101
  %103 = bitcast %"class.std::__1::unique_ptr"* %99 to i8*
  br i1 %102, label %104, label %110, !prof !9

104:                                              ; preds = %98
  %105 = load i32, i32* %9, align 4
  %106 = zext i32 %105 to i64
  %107 = shl nuw nsw i64 %106, 3
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %94, i8* nonnull align 8 %103, i64 %107, i1 false) #18
  %108 = bitcast %"class.WTF::Vector"* %0 to i8**
  %109 = load i8*, i8** %108, align 8
  br label %110

110:                                              ; preds = %104, %98
  %111 = phi i8* [ %109, %104 ], [ %103, %98 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %111) #18
  %112 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %95, i64* %112 monotonic, align 8
  br label %113

113:                                              ; preds = %110, %96
  %114 = lshr i64 %93, 3
  %115 = trunc i64 %114 to i32
  store i32 %115, i32* %25, align 8
  %116 = bitcast i8* %94 to %"class.std::__1::unique_ptr"*
  br label %117

117:                                              ; preds = %113, %78
  %118 = phi %"class.std::__1::unique_ptr"* [ %34, %78 ], [ %116, %113 ]
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %118, i64 %82
  br label %120

120:                                              ; preds = %28, %117, %40, %53, %73
  %121 = phi %"class.std::__1::unique_ptr"* [ %30, %28 ], [ %118, %117 ], [ %34, %40 ], [ %58, %53 ], [ %77, %73 ]
  %122 = phi %"class.std::__1::unique_ptr"* [ %2, %28 ], [ %119, %117 ], [ %2, %40 ], [ %2, %53 ], [ %2, %73 ]
  %123 = zext i32 %1 to i64
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %121, i64 %123
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %124, i64 1
  %126 = icmp ne %"class.std::__1::unique_ptr"* %125, null
  %127 = icmp ne %"class.std::__1::unique_ptr"* %124, null
  %128 = and i1 %127, %126
  br i1 %128, label %129, label %138, !prof !9

129:                                              ; preds = %120
  %130 = load i32, i32* %9, align 4
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %121, i64 %131
  %133 = bitcast %"class.std::__1::unique_ptr"* %125 to i8*
  %134 = bitcast %"class.std::__1::unique_ptr"* %124 to i8*
  %135 = ptrtoint %"class.std::__1::unique_ptr"* %132 to i64
  %136 = ptrtoint %"class.std::__1::unique_ptr"* %124 to i64
  %137 = sub i64 %135, %136
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %133, i8* nonnull align 8 %134, i64 %137, i1 false) #18
  br label %138

138:                                              ; preds = %120, %129
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %122, i64 0, i32 0, i32 0, i32 0
  %140 = bitcast %"class.std::__1::unique_ptr"* %122 to i64*
  %141 = load i64, i64* %140, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %139, align 8
  %142 = bitcast %"class.std::__1::unique_ptr"* %124 to i64*
  store i64 %141, i64* %142, align 8
  %143 = load i32, i32* %9, align 4
  %144 = add i32 %143, 1
  store i32 %144, i32* %9, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink18AudioParamTimeline9HasValuesEmdj(%"class.blink::AudioParamTimeline"*, i64, double, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 2
  %6 = tail call zeroext i1 @_ZN3WTF5Mutex7TryLockEv(%"class.WTF::Mutex"* %5) #18
  br i1 %6, label %7, label %78

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %75, label %12

12:                                               ; preds = %7
  %13 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 0) #18
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %15, i64 0, i32 2
  %17 = load double, double* %16, align 8
  %18 = zext i32 %3 to i64
  %19 = add i64 %18, %1
  %20 = uitofp i64 %19 to double
  %21 = fdiv double %20, %2
  %22 = fcmp ogt double %17, %21
  br i1 %22, label %23, label %29

23:                                               ; preds = %12
  %24 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 0) #18
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %26, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  switch i32 %28, label %29 [
    i32 3, label %75
    i32 0, label %75
    i32 4, label %75
  ]

29:                                               ; preds = %23, %12
  %30 = icmp ugt i32 %10, 1
  br i1 %30, label %75, label %31

31:                                               ; preds = %29
  %32 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 0) #18
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %34, i64 0, i32 0
  %36 = load i32, i32* %35, align 8
  switch i32 %36, label %75 [
    i32 3, label %37
    i32 0, label %44
    i32 1, label %44
    i32 2, label %44
    i32 5, label %44
    i32 6, label %44
    i32 4, label %53
  ]

37:                                               ; preds = %31
  %38 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 0) #18
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %38, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %40, i64 0, i32 2
  %42 = load double, double* %41, align 8
  %43 = fcmp ole double %42, %21
  br label %75

44:                                               ; preds = %31, %31, %31, %31, %31
  %45 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 0) #18
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %47, i64 0, i32 2
  %49 = load double, double* %48, align 8
  %50 = uitofp i64 %1 to double
  %51 = fdiv double %50, %2
  %52 = fcmp uge double %49, %51
  br label %75

53:                                               ; preds = %31
  %54 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 0) #18
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %54, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %56, i64 0, i32 2
  %58 = load double, double* %57, align 8
  %59 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 0) #18
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 0, i32 0, i32 0, i32 0
  %61 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %61, i64 0, i32 7
  %63 = load double, double* %62, align 8
  %64 = uitofp i64 %1 to double
  %65 = fdiv double %64, %2
  %66 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 0) #18
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %68, i64 0, i32 2
  %70 = load double, double* %69, align 8
  %71 = fcmp ole double %70, %65
  %72 = fadd double %58, %63
  %73 = fcmp olt double %65, %72
  %74 = and i1 %73, %71
  br label %75

75:                                               ; preds = %53, %29, %23, %23, %23, %7, %37, %44, %31
  %76 = phi i1 [ true, %31 ], [ %74, %53 ], [ true, %29 ], [ false, %23 ], [ false, %23 ], [ false, %23 ], [ false, %7 ], [ %43, %37 ], [ %52, %44 ]
  %77 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %5, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %77) #18
  br label %78

78:                                               ; preds = %4, %75
  %79 = phi i1 [ %76, %75 ], [ true, %4 ]
  ret i1 %79
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18AudioParamTimeline21CancelScheduledValuesEdRNS_14ExceptionStateE(%"class.blink::AudioParamTimeline"*, double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i64 4) #18
  %5 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = call fastcc zeroext i1 @_ZN5blinkL27IsNonNegativeAudioParamTimeEdRNS_14ExceptionStateEN3WTF6StringE(double %1, %"class.blink::ExceptionState"* dereferenceable(72) %2, %"class.WTF::StringImpl"* %6)
  br i1 %7, label %8, label %45

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 2, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %9) #18
  %10 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 0
  %11 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %44, label %14

14:                                               ; preds = %8, %40
  %15 = phi i32 [ %41, %40 ], [ 0, %8 ]
  %16 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %10, i32 %15) #18
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %18, i64 0, i32 2
  %20 = load double, double* %19, align 8
  %21 = fcmp ult double %20, %1
  br i1 %21, label %22, label %39

22:                                               ; preds = %14
  %23 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %10, i32 %15) #18
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %25, i64 0, i32 0
  %27 = load i32, i32* %26, align 8
  %28 = icmp ne i32 %27, 4
  %29 = fcmp ugt double %20, %1
  %30 = or i1 %29, %28
  br i1 %30, label %40, label %31

31:                                               ; preds = %22
  %32 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %10, i32 %15) #18
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %32, i64 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %34, i64 0, i32 7
  %36 = load double, double* %35, align 8
  %37 = fadd double %20, %36
  %38 = fcmp ogt double %37, %1
  br i1 %38, label %39, label %40

39:                                               ; preds = %14, %31
  call void @_ZN5blink18AudioParamTimeline21RemoveCancelledEventsEj(%"class.blink::AudioParamTimeline"* %0, i32 %15)
  br label %44

40:                                               ; preds = %22, %31
  %41 = add nuw i32 %15, 1
  %42 = load i32, i32* %11, align 4
  %43 = icmp ult i32 %41, %42
  br i1 %43, label %14, label %44

44:                                               ; preds = %40, %8, %39
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %9) #18
  br label %45

45:                                               ; preds = %3, %44
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18AudioParamTimeline21RemoveCancelledEventsEj(%"class.blink::AudioParamTimeline"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 1, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp ne i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %1
  %10 = and i1 %6, %9
  br i1 %10, label %11, label %119

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 0
  %13 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0
  %14 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %3, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 1, i32 0, i32 1
  %16 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 1, i32 0, i32 3
  br label %17

17:                                               ; preds = %11, %115
  %18 = phi i32 [ %1, %11 ], [ %116, %115 ]
  %19 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %12, i32 %18) #18
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %20, align 8
  %22 = ptrtoint %"class.blink::AudioParamTimeline::ParamEvent"* %21 to i64
  %23 = load %"class.blink::AudioParamTimeline::ParamEvent"**, %"class.blink::AudioParamTimeline::ParamEvent"*** %14, align 8
  %24 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"** %23, null
  %25 = load i32, i32* %15, align 8
  br i1 %24, label %87, label %26

26:                                               ; preds = %17
  %27 = add i32 %25, -1
  %28 = zext i32 %27 to i64
  %29 = shl i64 %22, 32
  %30 = xor i64 %29, -1
  %31 = add i64 %30, %22
  %32 = lshr i64 %31, 22
  %33 = xor i64 %32, %31
  %34 = shl i64 %33, 13
  %35 = xor i64 %34, -1
  %36 = add i64 %33, %35
  %37 = lshr i64 %36, 8
  %38 = xor i64 %37, %36
  %39 = mul i64 %38, 9
  %40 = lshr i64 %39, 15
  %41 = xor i64 %40, %39
  %42 = shl i64 %41, 27
  %43 = xor i64 %42, -1
  %44 = add i64 %41, %43
  %45 = lshr i64 %44, 31
  %46 = xor i64 %45, %44
  %47 = trunc i64 %46 to i32
  %48 = and i32 %27, %47
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %23, i64 %49
  %51 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %50, align 8
  %52 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %51, %21
  br i1 %52, label %82, label %53

53:                                               ; preds = %26
  %54 = xor i32 %47, -1
  %55 = lshr i32 %47, 23
  %56 = add i32 %55, %54
  %57 = shl i32 %56, 12
  %58 = xor i32 %57, %56
  %59 = lshr i32 %58, 7
  %60 = xor i32 %59, %58
  %61 = shl i32 %60, 2
  %62 = xor i32 %61, %60
  %63 = lshr i32 %62, 20
  %64 = xor i32 %63, %62
  %65 = or i32 %64, 1
  %66 = zext i32 %65 to i64
  br label %67

67:                                               ; preds = %72, %53
  %68 = phi %"class.blink::AudioParamTimeline::ParamEvent"* [ %51, %53 ], [ %78, %72 ]
  %69 = phi i64 [ %49, %53 ], [ %76, %72 ]
  %70 = phi i64 [ 0, %53 ], [ %74, %72 ]
  %71 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %68, null
  br i1 %71, label %87, label %72

72:                                               ; preds = %67
  %73 = icmp eq i64 %70, 0
  %74 = select i1 %73, i64 %66, i64 %70
  %75 = add i64 %74, %69
  %76 = and i64 %75, %28
  %77 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %23, i64 %76
  %78 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %77, align 8
  %79 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %78, %21
  br i1 %79, label %80, label %67

80:                                               ; preds = %72
  %81 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %23, i64 %76
  br label %82

82:                                               ; preds = %80, %26
  %83 = phi %"class.blink::AudioParamTimeline::ParamEvent"** [ %50, %26 ], [ %81, %80 ]
  %84 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"** %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = zext i32 %25 to i64
  br label %90

87:                                               ; preds = %67, %82, %17
  %88 = zext i32 %25 to i64
  %89 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %23, i64 %88
  br label %90

90:                                               ; preds = %85, %87
  %91 = phi i64 [ %86, %85 ], [ %88, %87 ]
  %92 = phi %"class.blink::AudioParamTimeline::ParamEvent"** [ %83, %85 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %23, i64 %91
  %94 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"** %93, %92
  br i1 %94, label %115, label %95

95:                                               ; preds = %90
  store %"class.blink::AudioParamTimeline::ParamEvent"* inttoptr (i64 -1 to %"class.blink::AudioParamTimeline::ParamEvent"*), %"class.blink::AudioParamTimeline::ParamEvent"** %92, align 8
  %96 = load i32, i32* %16, align 8
  %97 = add i32 %96, 1
  %98 = and i32 %97, 2147483647
  %99 = and i32 %96, -2147483648
  %100 = or i32 %98, %99
  store i32 %100, i32* %16, align 8
  %101 = load i32, i32* %4, align 4
  %102 = add i32 %101, -1
  store i32 %102, i32* %4, align 4
  %103 = mul i32 %102, 6
  %104 = load i32, i32* %15, align 8
  %105 = icmp ult i32 %103, %104
  %106 = icmp ugt i32 %104, 8
  %107 = and i1 %105, %106
  br i1 %107, label %108, label %115

108:                                              ; preds = %95
  %109 = lshr i32 %104, 1
  %110 = zext i32 %109 to i64
  %111 = shl nuw nsw i64 %110, 3
  %112 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %111, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink18AudioParamTimeline10ParamEventEEEPKcv, i64 0, i64 0)) #18
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %112, i8 0, i64 %111, i1 false) #18
  %113 = bitcast i8* %112 to %"class.blink::AudioParamTimeline::ParamEvent"**
  %114 = tail call %"class.blink::AudioParamTimeline::ParamEvent"** @_ZN3WTF9HashTableIPN5blink18AudioParamTimeline10ParamEventES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %13, %"class.blink::AudioParamTimeline::ParamEvent"** %113, i32 %109, %"class.blink::AudioParamTimeline::ParamEvent"** null) #18
  br label %115

115:                                              ; preds = %90, %95, %108
  %116 = add nuw i32 %18, 1
  %117 = load i32, i32* %7, align 4
  %118 = icmp ult i32 %116, %117
  br i1 %118, label %17, label %119

119:                                              ; preds = %115, %2
  %120 = phi i32 [ %8, %2 ], [ %117, %115 ]
  %121 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 0
  %122 = sub i32 %120, %1
  tail call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE7EraseAtEjj(%"class.WTF::Vector"* %121, i32 %1, i32 %122)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18AudioParamTimeline19CancelAndHoldAtTimeEdRNS_14ExceptionStateE(%"class.blink::AudioParamTimeline"*, double, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = alloca %"class.std::__1::unique_ptr", align 8
  %6 = alloca %"class.std::__1::unique_ptr", align 8
  %7 = alloca %"class.std::__1::unique_ptr", align 8
  %8 = alloca %"class.std::__1::unique_ptr", align 8
  %9 = alloca %"class.std::__1::unique_ptr", align 8
  %10 = alloca %"class.std::__1::unique_ptr", align 8
  %11 = alloca %"class.std::__1::unique_ptr", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.std::__1::unique_ptr", align 8
  %14 = alloca %"class.std::__1::unique_ptr", align 8
  %15 = alloca %"class.std::__1::unique_ptr", align 8
  %16 = alloca %"class.std::__1::unique_ptr", align 8
  %17 = alloca %"class.std::__1::unique_ptr", align 8
  %18 = alloca %"class.std::__1::unique_ptr", align 8
  %19 = alloca %"class.std::__1::unique_ptr", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %12, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i64 4) #18
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = call fastcc zeroext i1 @_ZN5blinkL27IsNonNegativeAudioParamTimeEdRNS_14ExceptionStateEN3WTF6StringE(double %1, %"class.blink::ExceptionState"* dereferenceable(72) %2, %"class.WTF::StringImpl"* %21)
  br i1 %22, label %23, label %354

23:                                               ; preds = %3
  %24 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 2, i32 0
  call void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"* %24) #18
  %25 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 0
  %26 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %59, label %29

29:                                               ; preds = %23, %37
  %30 = phi i32 [ %38, %37 ], [ 0, %23 ]
  %31 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %25, i32 %30) #18
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %31, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %33, i64 0, i32 2
  %35 = load double, double* %34, align 8
  %36 = fcmp ogt double %35, %1
  br i1 %36, label %41, label %37

37:                                               ; preds = %29
  %38 = add nuw i32 %30, 1
  %39 = load i32, i32* %26, align 4
  %40 = icmp ult i32 %38, %39
  br i1 %40, label %29, label %43

41:                                               ; preds = %29
  %42 = icmp eq i32 %30, 0
  br i1 %42, label %59, label %43

43:                                               ; preds = %37, %41
  %44 = phi i32 [ %30, %41 ], [ %38, %37 ]
  %45 = add i32 %44, -1
  %46 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %25, i32 %45) #18
  %47 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %48, i64 0, i32 0
  %50 = load i32, i32* %49, align 8
  %51 = icmp eq i32 %50, 3
  br i1 %51, label %63, label %52

52:                                               ; preds = %43
  %53 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %25, i32 %45) #18
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %53, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %55, i64 0, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = icmp eq i32 %57, 4
  br i1 %58, label %63, label %59

59:                                               ; preds = %23, %41, %52
  %60 = phi i32 [ 0, %41 ], [ %44, %52 ], [ 0, %23 ]
  %61 = load i32, i32* %26, align 4
  %62 = icmp ult i32 %60, %61
  br i1 %62, label %63, label %353

63:                                               ; preds = %43, %52, %59
  %64 = phi i32 [ %60, %59 ], [ %45, %52 ], [ %45, %43 ]
  %65 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %25, i32 %64) #18
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %67, i64 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = bitcast %"class.std::__1::unique_ptr"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #18
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %72 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  store i64 0, i64* %72, align 8
  %73 = bitcast %"class.std::__1::unique_ptr"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #18
  %74 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %75 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  store i64 0, i64* %75, align 8
  switch i32 %69, label %340 [
    i32 1, label %76
    i32 2, label %76
    i32 3, label %164
    i32 4, label %206
  ]

76:                                               ; preds = %63, %63
  %77 = bitcast %"class.std::__1::unique_ptr"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %77) #18
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::AudioParamTimeline::ParamEvent"* inttoptr (i64 -6148914691236517206 to %"class.blink::AudioParamTimeline::ParamEvent"*), %"class.blink::AudioParamTimeline::ParamEvent"** %78, align 8
  %79 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %67, i64 0, i32 1
  %80 = bitcast float* %79 to i32*
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %67, i64 0, i32 2
  %83 = bitcast double* %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %67, i64 0, i32 3
  %86 = bitcast float* %85 to i32*
  %87 = load i32, i32* %86, align 8
  %88 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %67, i64 0, i32 5
  %89 = bitcast double* %88 to <2 x i64>*
  %90 = load <2 x i64>, <2 x i64>* %89, align 8
  %91 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %67, i64 0, i32 7
  %92 = bitcast double* %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %67, i64 0, i32 8
  %95 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %67, i64 0, i32 9
  %96 = bitcast double* %95 to i64*
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %67, i64 0, i32 10
  %99 = bitcast float* %98 to i32*
  %100 = load i32, i32* %99, align 8
  %101 = bitcast %"class.std::__1::unique_ptr"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101)
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %103 = call i8* @_Znwm(i64 96) #19
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %102, align 8
  %104 = bitcast %"class.std::__1::unique_ptr"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #18
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast i8* %103 to i32*
  store i32 %69, i32* %106, align 8
  %107 = getelementptr inbounds i8, i8* %103, i64 4
  %108 = bitcast i8* %107 to i32*
  store i32 %81, i32* %108, align 4
  %109 = getelementptr inbounds i8, i8* %103, i64 8
  %110 = bitcast i8* %109 to i64*
  store i64 %84, i64* %110, align 8
  %111 = getelementptr inbounds i8, i8* %103, i64 16
  %112 = bitcast i8* %111 to i32*
  store i32 %87, i32* %112, align 8
  %113 = getelementptr inbounds i8, i8* %103, i64 24
  %114 = bitcast i8* %113 to <2 x i64>*
  store <2 x i64> %90, <2 x i64>* %114, align 8
  %115 = getelementptr inbounds i8, i8* %103, i64 40
  %116 = bitcast i8* %115 to i64*
  store i64 %93, i64* %116, align 8
  %117 = getelementptr inbounds i8, i8* %103, i64 48
  %118 = bitcast i8* %117 to %"class.WTF::Vector.4"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 16, i1 false) #18
  %119 = getelementptr inbounds i8, i8* %103, i64 64
  %120 = bitcast i8* %119 to i64*
  store i64 %97, i64* %120, align 8
  %121 = getelementptr inbounds i8, i8* %103, i64 72
  %122 = bitcast i8* %121 to i32*
  store i32 %100, i32* %122, align 8
  %123 = getelementptr inbounds i8, i8* %103, i64 80
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %105, align 8
  %124 = bitcast i8* %123 to i64*
  store i64 0, i64* %124, align 8
  %125 = getelementptr inbounds i8, i8* %103, i64 88
  store i8 0, i8* %125, align 8
  %126 = call dereferenceable(16) %"class.WTF::Vector.4"* @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector.4"* %118, %"class.WTF::Vector.4"* dereferenceable(16) %94) #18
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #18
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101)
  %127 = bitcast %"class.std::__1::unique_ptr"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #18
  %128 = ptrtoint i8* %103 to i64
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %78, align 8
  %129 = bitcast %"class.std::__1::unique_ptr"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129)
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %7, i64 0, i32 0, i32 0, i32 0
  %131 = call i8* @_Znwm(i64 96) #19
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %130, align 8
  %132 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %132) #18
  %133 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %6, i64 0, i32 0, i32 0, i32 0
  %134 = bitcast i8* %131 to i32*
  store i32 5, i32* %134, align 8
  %135 = getelementptr inbounds i8, i8* %131, i64 4
  %136 = bitcast i8* %135 to float*
  store float 0.000000e+00, float* %136, align 4
  %137 = getelementptr inbounds i8, i8* %131, i64 8
  %138 = bitcast i8* %137 to double*
  store double %1, double* %138, align 8
  %139 = getelementptr inbounds i8, i8* %131, i64 16
  %140 = bitcast i8* %139 to float*
  store float 0.000000e+00, float* %140, align 8
  %141 = getelementptr inbounds i8, i8* %131, i64 24
  %142 = getelementptr inbounds i8, i8* %131, i64 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %141, i8 0, i64 52, i1 false) #18
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %133, align 8
  %143 = bitcast i8* %142 to i64*
  store i64 %128, i64* %143, align 8
  %144 = getelementptr inbounds i8, i8* %131, i64 88
  store i8 0, i8* %144, align 8
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %132) #18
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129)
  %145 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 0, i32 0, i32 0, i32 0
  %146 = ptrtoint i8* %131 to i64
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %145, align 8
  %147 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %71, align 8
  store i64 %146, i64* %72, align 8
  %148 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %147, null
  br i1 %148, label %163, label %149

149:                                              ; preds = %76
  %150 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %147, i64 0, i32 12
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* %150) #18
  %151 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %147, i64 0, i32 8, i32 0, i32 0, i32 0
  %152 = load float*, float** %151, align 8
  %153 = icmp eq float* %152, null
  %154 = bitcast float* %152 to i8*
  br i1 %153, label %161, label %155, !prof !9

155:                                              ; preds = %149
  %156 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %147, i64 0, i32 8, i32 0, i32 0, i32 2
  %157 = load i32, i32* %156, align 4
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %160, label %159, !prof !2

159:                                              ; preds = %155
  store i32 0, i32* %156, align 4
  br label %160

160:                                              ; preds = %159, %155
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %154) #18
  br label %161

161:                                              ; preds = %160, %149
  %162 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"* %147 to i8*
  call void @_ZdlPv(i8* %162) #19
  br label %163

163:                                              ; preds = %76, %161
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %16) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #18
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %15) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %77) #18
  br label %340

164:                                              ; preds = %63
  %165 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %67, i64 0, i32 2
  %166 = load double, double* %165, align 8
  %167 = fcmp olt double %166, %1
  br i1 %167, label %168, label %340

168:                                              ; preds = %164
  %169 = add nuw i32 %64, 1
  %170 = bitcast %"class.std::__1::unique_ptr"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %170) #18
  %171 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %171)
  %172 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %5, i64 0, i32 0, i32 0, i32 0
  %173 = call i8* @_Znwm(i64 96) #19
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %172, align 8
  %174 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %174) #18
  %175 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %176 = bitcast i8* %173 to i32*
  store i32 5, i32* %176, align 8
  %177 = getelementptr inbounds i8, i8* %173, i64 4
  %178 = bitcast i8* %177 to float*
  store float 0.000000e+00, float* %178, align 4
  %179 = getelementptr inbounds i8, i8* %173, i64 8
  %180 = bitcast i8* %179 to double*
  store double %1, double* %180, align 8
  %181 = getelementptr inbounds i8, i8* %173, i64 16
  %182 = bitcast i8* %181 to float*
  store float 0.000000e+00, float* %182, align 8
  %183 = getelementptr inbounds i8, i8* %173, i64 24
  %184 = getelementptr inbounds i8, i8* %173, i64 80
  call void @llvm.memset.p0i8.i64(i8* align 8 %183, i8 0, i64 52, i1 false) #18
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %175, align 8
  %185 = bitcast i8* %184 to i64*
  store i64 0, i64* %185, align 8
  %186 = getelementptr inbounds i8, i8* %173, i64 88
  store i8 0, i8* %186, align 8
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %174) #18
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171)
  %187 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 0, i32 0, i32 0, i32 0
  %188 = ptrtoint i8* %173 to i64
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %187, align 8
  %189 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %71, align 8
  store i64 %188, i64* %72, align 8
  %190 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %189, null
  br i1 %190, label %205, label %191

191:                                              ; preds = %168
  %192 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %189, i64 0, i32 12
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* %192) #18
  %193 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %189, i64 0, i32 8, i32 0, i32 0, i32 0
  %194 = load float*, float** %193, align 8
  %195 = icmp eq float* %194, null
  %196 = bitcast float* %194 to i8*
  br i1 %195, label %203, label %197, !prof !9

197:                                              ; preds = %191
  %198 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %189, i64 0, i32 8, i32 0, i32 0, i32 2
  %199 = load i32, i32* %198, align 4
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %202, label %201, !prof !2

201:                                              ; preds = %197
  store i32 0, i32* %198, align 4
  br label %202

202:                                              ; preds = %201, %197
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %196) #18
  br label %203

203:                                              ; preds = %202, %191
  %204 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"* %189 to i8*
  call void @_ZdlPv(i8* %204) #19
  br label %205

205:                                              ; preds = %168, %203
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %17) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %170) #18
  br label %340

206:                                              ; preds = %63
  %207 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %67, i64 0, i32 2
  %208 = load double, double* %207, align 8
  %209 = fcmp olt double %208, %1
  br i1 %209, label %210, label %340

210:                                              ; preds = %206
  %211 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %67, i64 0, i32 7
  %212 = load double, double* %211, align 8
  %213 = fadd double %208, %212
  %214 = fcmp olt double %213, %1
  br i1 %214, label %215, label %217

215:                                              ; preds = %210
  %216 = add nuw i32 %64, 1
  br label %340

217:                                              ; preds = %210
  %218 = fsub double %1, %208
  %219 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %67, i64 0, i32 8
  %220 = getelementptr inbounds %"class.WTF::Vector.4", %"class.WTF::Vector.4"* %219, i64 0, i32 0, i32 0, i32 0
  %221 = load float*, float** %220, align 8
  %222 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %67, i64 0, i32 8, i32 0, i32 0, i32 2
  %223 = load i32, i32* %222, align 4
  %224 = add i32 %223, -1
  %225 = uitofp i32 %224 to double
  %226 = fdiv double %225, %212
  %227 = fmul double %218, %226
  %228 = fptoui double %227 to i32
  %229 = icmp ult i32 %224, %228
  %230 = select i1 %229, i32 %224, i32 %228
  %231 = add i32 %230, 1
  %232 = icmp ult i32 %224, %231
  %233 = select i1 %232, i32 %224, i32 %231
  %234 = zext i32 %230 to i64
  %235 = getelementptr inbounds float, float* %221, i64 %234
  %236 = load float, float* %235, align 4
  %237 = zext i32 %233 to i64
  %238 = getelementptr inbounds float, float* %221, i64 %237
  %239 = load float, float* %238, align 4
  %240 = uitofp i32 %230 to double
  %241 = fsub double %227, %240
  %242 = fcmp ogt double %241, 1.000000e+00
  %243 = select i1 %242, double 1.000000e+00, double %241
  %244 = fptrunc double %243 to float
  %245 = fsub float %239, %236
  %246 = fmul float %245, %244
  %247 = fadd float %236, %246
  %248 = bitcast %"class.std::__1::unique_ptr"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %248) #18
  %249 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %67, i64 0, i32 1
  %250 = bitcast float* %249 to i32*
  %251 = load i32, i32* %250, align 4
  %252 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %67, i64 0, i32 3
  %253 = bitcast float* %252 to i32*
  %254 = load i32, i32* %253, align 8
  %255 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %67, i64 0, i32 5
  %256 = bitcast double* %255 to <2 x i64>*
  %257 = load <2 x i64>, <2 x i64>* %256, align 8
  %258 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %67, i64 0, i32 9
  %259 = bitcast double* %258 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = bitcast %"class.std::__1::unique_ptr"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %261)
  %262 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 0, i32 0, i32 0, i32 0
  %263 = call i8* @_Znwm(i64 96) #19
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %262, align 8
  %264 = bitcast %"class.std::__1::unique_ptr"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %264) #18
  %265 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  %266 = bitcast i8* %263 to i32*
  store i32 4, i32* %266, align 8
  %267 = getelementptr inbounds i8, i8* %263, i64 4
  %268 = bitcast i8* %267 to i32*
  store i32 %251, i32* %268, align 4
  %269 = getelementptr inbounds i8, i8* %263, i64 8
  %270 = bitcast i8* %269 to double*
  store double %208, double* %270, align 8
  %271 = getelementptr inbounds i8, i8* %263, i64 16
  %272 = bitcast i8* %271 to i32*
  store i32 %254, i32* %272, align 8
  %273 = getelementptr inbounds i8, i8* %263, i64 24
  %274 = bitcast i8* %273 to <2 x i64>*
  store <2 x i64> %257, <2 x i64>* %274, align 8
  %275 = getelementptr inbounds i8, i8* %263, i64 40
  %276 = bitcast i8* %275 to double*
  store double %218, double* %276, align 8
  %277 = getelementptr inbounds i8, i8* %263, i64 48
  %278 = bitcast i8* %277 to %"class.WTF::Vector.4"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %277, i8 0, i64 16, i1 false) #18
  %279 = getelementptr inbounds i8, i8* %263, i64 64
  %280 = bitcast i8* %279 to i64*
  store i64 %260, i64* %280, align 8
  %281 = getelementptr inbounds i8, i8* %263, i64 72
  %282 = bitcast i8* %281 to float*
  store float %247, float* %282, align 8
  %283 = getelementptr inbounds i8, i8* %263, i64 80
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %265, align 8
  %284 = bitcast i8* %283 to i64*
  store i64 0, i64* %284, align 8
  %285 = getelementptr inbounds i8, i8* %263, i64 88
  store i8 0, i8* %285, align 8
  %286 = call dereferenceable(16) %"class.WTF::Vector.4"* @_ZN3WTF6VectorIfLj0ENS_18PartitionAllocatorEEaSERKS2_(%"class.WTF::Vector.4"* %278, %"class.WTF::Vector.4"* dereferenceable(16) %219) #18
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %10) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %264) #18
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %11) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %261)
  %287 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %18, i64 0, i32 0, i32 0, i32 0
  %288 = ptrtoint i8* %263 to i64
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %287, align 8
  %289 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %71, align 8
  store i64 %288, i64* %72, align 8
  %290 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %289, null
  br i1 %290, label %305, label %291

291:                                              ; preds = %217
  %292 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %289, i64 0, i32 12
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* %292) #18
  %293 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %289, i64 0, i32 8, i32 0, i32 0, i32 0
  %294 = load float*, float** %293, align 8
  %295 = icmp eq float* %294, null
  %296 = bitcast float* %294 to i8*
  br i1 %295, label %303, label %297, !prof !9

297:                                              ; preds = %291
  %298 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %289, i64 0, i32 8, i32 0, i32 0, i32 2
  %299 = load i32, i32* %298, align 4
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %302, label %301, !prof !2

301:                                              ; preds = %297
  store i32 0, i32* %298, align 4
  br label %302

302:                                              ; preds = %301, %297
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %296) #18
  br label %303

303:                                              ; preds = %302, %291
  %304 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"* %289 to i8*
  call void @_ZdlPv(i8* %304) #19
  br label %305

305:                                              ; preds = %217, %303
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %18) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %248) #18
  %306 = bitcast %"class.std::__1::unique_ptr"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %306) #18
  %307 = load double, double* %207, align 8
  %308 = fadd double %218, %307
  %309 = call i8* @_Znwm(i64 96) #19
  %310 = bitcast i8* %309 to i32*
  store i32 0, i32* %310, align 8
  %311 = getelementptr inbounds i8, i8* %309, i64 4
  %312 = bitcast i8* %311 to float*
  store float %247, float* %312, align 4
  %313 = getelementptr inbounds i8, i8* %309, i64 8
  %314 = bitcast i8* %313 to double*
  store double %308, double* %314, align 8
  %315 = getelementptr inbounds i8, i8* %309, i64 16
  %316 = bitcast i8* %315 to float*
  store float 0.000000e+00, float* %316, align 8
  %317 = getelementptr inbounds i8, i8* %309, i64 24
  %318 = getelementptr inbounds i8, i8* %309, i64 80
  %319 = bitcast i8* %318 to i64*
  store i64 0, i64* %319, align 8
  %320 = getelementptr inbounds i8, i8* %309, i64 88
  store i8 0, i8* %320, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %317, i8 0, i64 52, i1 false) #18
  %321 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %19, i64 0, i32 0, i32 0, i32 0
  %322 = ptrtoint i8* %309 to i64
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %321, align 8
  %323 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %74, align 8
  store i64 %322, i64* %75, align 8
  %324 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %323, null
  br i1 %324, label %339, label %325

325:                                              ; preds = %305
  %326 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %323, i64 0, i32 12
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* %326) #18
  %327 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %323, i64 0, i32 8, i32 0, i32 0, i32 0
  %328 = load float*, float** %327, align 8
  %329 = icmp eq float* %328, null
  %330 = bitcast float* %328 to i8*
  br i1 %329, label %337, label %331, !prof !9

331:                                              ; preds = %325
  %332 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %323, i64 0, i32 8, i32 0, i32 0, i32 2
  %333 = load i32, i32* %332, align 4
  %334 = icmp eq i32 %333, 0
  br i1 %334, label %336, label %335, !prof !2

335:                                              ; preds = %331
  store i32 0, i32* %332, align 4
  br label %336

336:                                              ; preds = %335, %331
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %330) #18
  br label %337

337:                                              ; preds = %336, %325
  %338 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"* %323 to i8*
  call void @_ZdlPv(i8* %338) #19
  br label %339

339:                                              ; preds = %305, %337
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %19) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %306) #18
  br label %340

340:                                              ; preds = %206, %339, %215, %164, %205, %63, %163
  %341 = phi i32 [ %64, %63 ], [ %216, %215 ], [ %64, %339 ], [ %64, %206 ], [ %169, %205 ], [ %64, %164 ], [ %64, %163 ]
  %342 = load i32, i32* %26, align 4
  %343 = icmp ult i32 %341, %342
  br i1 %343, label %344, label %345

344:                                              ; preds = %340
  call void @_ZN5blink18AudioParamTimeline21RemoveCancelledEventsEj(%"class.blink::AudioParamTimeline"* %0, i32 %341)
  br label %345

345:                                              ; preds = %344, %340
  %346 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %71, align 8
  %347 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %346, null
  br i1 %347, label %352, label %348

348:                                              ; preds = %345
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %71, align 8
  call void @_ZN5blink18AudioParamTimeline11InsertEventENSt3__110unique_ptrINS0_10ParamEventENS1_14default_deleteIS3_EEEERNS_14ExceptionStateE(%"class.blink::AudioParamTimeline"* %0, %"class.blink::AudioParamTimeline::ParamEvent"* nonnull %346, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  %349 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %74, align 8
  %350 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %349, null
  br i1 %350, label %352, label %351

351:                                              ; preds = %348
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %74, align 8
  call void @_ZN5blink18AudioParamTimeline11InsertEventENSt3__110unique_ptrINS0_10ParamEventENS1_14default_deleteIS3_EEEERNS_14ExceptionStateE(%"class.blink::AudioParamTimeline"* %0, %"class.blink::AudioParamTimeline::ParamEvent"* nonnull %349, %"class.blink::ExceptionState"* dereferenceable(72) %2)
  br label %352

352:                                              ; preds = %348, %345, %351
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %14) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73) #18
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %13) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #18
  br label %353

353:                                              ; preds = %59, %352
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %24) #18
  br label %354

354:                                              ; preds = %3, %353
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink18AudioParamTimeline19ValueForContextTimeERNS_23AudioDestinationHandlerEfffj(%"class.blink::AudioParamTimeline"*, %"class.blink::AudioDestinationHandler"* dereferenceable(152), float, float, float, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca float, align 4
  %10 = bitcast float %2 to i32
  %11 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 2
  %12 = tail call zeroext i1 @_ZN3WTF5Mutex7TryLockEv(%"class.WTF::Mutex"* %11) #18
  br i1 %12, label %13, label %34

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %37, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 0
  %19 = getelementptr inbounds %"class.blink::AudioDestinationHandler", %"class.blink::AudioDestinationHandler"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i64, i64* %19 acquire, align 8
  %21 = uitofp i64 %20 to double
  %22 = bitcast %"class.blink::AudioDestinationHandler"* %1 to double (%"class.blink::AudioDestinationHandler"*)***
  %23 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %22, align 8
  %24 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %23, i64 25
  %25 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %24, align 8
  %26 = tail call double %25(%"class.blink::AudioDestinationHandler"* %1) #18
  %27 = fdiv double %21, %26
  %28 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %18, i32 0) #18
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %30, i64 0, i32 2
  %32 = load double, double* %31, align 8
  %33 = fcmp olt double %27, %32
  br i1 %33, label %37, label %41

34:                                               ; preds = %6
  %35 = zext i32 %10 to i64
  %36 = shl nuw i64 %35, 32
  br label %64

37:                                               ; preds = %17, %13
  %38 = zext i32 %10 to i64
  %39 = shl nuw i64 %38, 32
  %40 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %11, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %40) #18
  br label %64

41:                                               ; preds = %17
  %42 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %11, i64 0, i32 0
  tail call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %42) #18
  %43 = bitcast float* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43) #18
  store float 0xFFFFFFFFE0000000, float* %9, align 4
  %44 = load double (%"class.blink::AudioDestinationHandler"*)**, double (%"class.blink::AudioDestinationHandler"*)*** %22, align 8
  %45 = getelementptr inbounds double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %44, i64 25
  %46 = load double (%"class.blink::AudioDestinationHandler"*)*, double (%"class.blink::AudioDestinationHandler"*)** %45, align 8
  %47 = tail call double %46(%"class.blink::AudioDestinationHandler"* %1) #18
  %48 = load atomic i64, i64* %19 acquire, align 8
  %49 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %49)
  %50 = bitcast float* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %50)
  store float %3, float* %7, align 4
  store float %4, float* %8, align 4
  %51 = tail call zeroext i1 @_ZN3WTF5Mutex7TryLockEv(%"class.WTF::Mutex"* %11) #18
  br i1 %51, label %53, label %52

52:                                               ; preds = %41
  store float %2, float* %9, align 4
  br label %59

53:                                               ; preds = %41
  %54 = add i64 %48, 1
  %55 = uitofp i32 %5 to double
  %56 = fdiv double %47, %55
  %57 = call float @_ZN5blink18AudioParamTimeline23ValuesForFrameRangeImplEmmfPfjddj(%"class.blink::AudioParamTimeline"* %0, i64 %48, i64 %54, float %2, float* nonnull %9, i32 1, double %47, double %56, i32 %5) #18
  call void @_ZN5blink11vector_math5VclipEPKfiS2_S2_Pfij(float* nonnull %9, i32 1, float* nonnull %7, float* nonnull %8, float* nonnull %9, i32 1, i32 1) #18
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %42) #18
  %58 = bitcast float %57 to i32
  br label %59

59:                                               ; preds = %52, %53
  %60 = phi i32 [ %10, %52 ], [ %58, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %49)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %50)
  %61 = zext i32 %60 to i64
  %62 = shl nuw i64 %61, 32
  %63 = or i64 %62, 1
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43) #18
  br label %64

64:                                               ; preds = %37, %34, %59
  %65 = phi i64 [ %63, %59 ], [ %39, %37 ], [ %36, %34 ]
  ret i64 %65
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink18AudioParamTimeline19ValuesForFrameRangeEmmfPfjddffj(%"class.blink::AudioParamTimeline"*, i64, i64, float, float*, i32, double, double, float, float, i32) local_unnamed_addr #0 align 2 {
  %12 = alloca float, align 4
  %13 = alloca float, align 4
  store float %8, float* %12, align 4
  store float %9, float* %13, align 4
  %14 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 2
  %15 = tail call zeroext i1 @_ZN3WTF5Mutex7TryLockEv(%"class.WTF::Mutex"* %14) #18
  br i1 %15, label %103, label %16

16:                                               ; preds = %11
  %17 = icmp eq float* %4, null
  %18 = icmp eq i32 %5, 0
  %19 = or i1 %17, %18
  br i1 %19, label %106, label %20

20:                                               ; preds = %16
  %21 = zext i32 %5 to i64
  %22 = icmp ult i32 %5, 8
  br i1 %22, label %96, label %23

23:                                               ; preds = %20
  %24 = and i64 %21, 4294967288
  %25 = insertelement <4 x float> undef, float %3, i32 0
  %26 = shufflevector <4 x float> %25, <4 x float> undef, <4 x i32> zeroinitializer
  %27 = insertelement <4 x float> undef, float %3, i32 0
  %28 = shufflevector <4 x float> %27, <4 x float> undef, <4 x i32> zeroinitializer
  %29 = add nsw i64 %24, -8
  %30 = lshr exact i64 %29, 3
  %31 = add nuw nsw i64 %30, 1
  %32 = and i64 %31, 7
  %33 = icmp ult i64 %29, 56
  br i1 %33, label %81, label %34

34:                                               ; preds = %23
  %35 = sub nsw i64 %31, %32
  br label %36

36:                                               ; preds = %36, %34
  %37 = phi i64 [ 0, %34 ], [ %78, %36 ]
  %38 = phi i64 [ %35, %34 ], [ %79, %36 ]
  %39 = getelementptr inbounds float, float* %4, i64 %37
  %40 = bitcast float* %39 to <4 x float>*
  store <4 x float> %26, <4 x float>* %40, align 4
  %41 = getelementptr inbounds float, float* %39, i64 4
  %42 = bitcast float* %41 to <4 x float>*
  store <4 x float> %28, <4 x float>* %42, align 4
  %43 = or i64 %37, 8
  %44 = getelementptr inbounds float, float* %4, i64 %43
  %45 = bitcast float* %44 to <4 x float>*
  store <4 x float> %26, <4 x float>* %45, align 4
  %46 = getelementptr inbounds float, float* %44, i64 4
  %47 = bitcast float* %46 to <4 x float>*
  store <4 x float> %28, <4 x float>* %47, align 4
  %48 = or i64 %37, 16
  %49 = getelementptr inbounds float, float* %4, i64 %48
  %50 = bitcast float* %49 to <4 x float>*
  store <4 x float> %26, <4 x float>* %50, align 4
  %51 = getelementptr inbounds float, float* %49, i64 4
  %52 = bitcast float* %51 to <4 x float>*
  store <4 x float> %28, <4 x float>* %52, align 4
  %53 = or i64 %37, 24
  %54 = getelementptr inbounds float, float* %4, i64 %53
  %55 = bitcast float* %54 to <4 x float>*
  store <4 x float> %26, <4 x float>* %55, align 4
  %56 = getelementptr inbounds float, float* %54, i64 4
  %57 = bitcast float* %56 to <4 x float>*
  store <4 x float> %28, <4 x float>* %57, align 4
  %58 = or i64 %37, 32
  %59 = getelementptr inbounds float, float* %4, i64 %58
  %60 = bitcast float* %59 to <4 x float>*
  store <4 x float> %26, <4 x float>* %60, align 4
  %61 = getelementptr inbounds float, float* %59, i64 4
  %62 = bitcast float* %61 to <4 x float>*
  store <4 x float> %28, <4 x float>* %62, align 4
  %63 = or i64 %37, 40
  %64 = getelementptr inbounds float, float* %4, i64 %63
  %65 = bitcast float* %64 to <4 x float>*
  store <4 x float> %26, <4 x float>* %65, align 4
  %66 = getelementptr inbounds float, float* %64, i64 4
  %67 = bitcast float* %66 to <4 x float>*
  store <4 x float> %28, <4 x float>* %67, align 4
  %68 = or i64 %37, 48
  %69 = getelementptr inbounds float, float* %4, i64 %68
  %70 = bitcast float* %69 to <4 x float>*
  store <4 x float> %26, <4 x float>* %70, align 4
  %71 = getelementptr inbounds float, float* %69, i64 4
  %72 = bitcast float* %71 to <4 x float>*
  store <4 x float> %28, <4 x float>* %72, align 4
  %73 = or i64 %37, 56
  %74 = getelementptr inbounds float, float* %4, i64 %73
  %75 = bitcast float* %74 to <4 x float>*
  store <4 x float> %26, <4 x float>* %75, align 4
  %76 = getelementptr inbounds float, float* %74, i64 4
  %77 = bitcast float* %76 to <4 x float>*
  store <4 x float> %28, <4 x float>* %77, align 4
  %78 = add i64 %37, 64
  %79 = add i64 %38, -8
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %36, !llvm.loop !17

81:                                               ; preds = %36, %23
  %82 = phi i64 [ 0, %23 ], [ %78, %36 ]
  %83 = icmp eq i64 %32, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %91, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %92, %84 ], [ %32, %81 ]
  %87 = getelementptr inbounds float, float* %4, i64 %85
  %88 = bitcast float* %87 to <4 x float>*
  store <4 x float> %26, <4 x float>* %88, align 4
  %89 = getelementptr inbounds float, float* %87, i64 4
  %90 = bitcast float* %89 to <4 x float>*
  store <4 x float> %28, <4 x float>* %90, align 4
  %91 = add i64 %85, 8
  %92 = add i64 %86, -1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84, !llvm.loop !19

94:                                               ; preds = %84, %81
  %95 = icmp eq i64 %24, %21
  br i1 %95, label %106, label %96

96:                                               ; preds = %94, %20
  %97 = phi i64 [ 0, %20 ], [ %24, %94 ]
  br label %98

98:                                               ; preds = %96, %98
  %99 = phi i64 [ %101, %98 ], [ %97, %96 ]
  %100 = getelementptr inbounds float, float* %4, i64 %99
  store float %3, float* %100, align 4
  %101 = add nuw nsw i64 %99, 1
  %102 = icmp eq i64 %101, %21
  br i1 %102, label %106, label %98, !llvm.loop !21

103:                                              ; preds = %11
  %104 = tail call float @_ZN5blink18AudioParamTimeline23ValuesForFrameRangeImplEmmfPfjddj(%"class.blink::AudioParamTimeline"* %0, i64 %1, i64 %2, float %3, float* %4, i32 %5, double %6, double %7, i32 %10)
  call void @_ZN5blink11vector_math5VclipEPKfiS2_S2_Pfij(float* %4, i32 1, float* nonnull %12, float* nonnull %13, float* %4, i32 1, i32 %5) #18
  %105 = getelementptr inbounds %"class.WTF::Mutex", %"class.WTF::Mutex"* %14, i64 0, i32 0
  call void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"* %105) #18
  br label %106

106:                                              ; preds = %98, %94, %16, %103
  %107 = phi float [ %104, %103 ], [ %3, %16 ], [ %3, %94 ], [ %3, %98 ]
  ret float %107
}

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZN5blink18AudioParamTimeline23ValuesForFrameRangeImplEmmfPfjddj(%"class.blink::AudioParamTimeline"*, i64, i64, float, float* nocapture, i32, double, double, i32) local_unnamed_addr #9 align 2 {
  %10 = alloca float, align 4
  %11 = alloca float, align 4
  %12 = alloca %"class.blink::AudioParamTimeline::ParamEvent"*, align 8
  %13 = alloca %"struct.blink::AudioParamTimeline::AutomationState", align 8
  store float %3, float* %10, align 4
  %14 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 0
  %15 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %27, label %18

18:                                               ; preds = %9
  %19 = uitofp i64 %2 to double
  %20 = fdiv double %19, %6
  %21 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %14, i32 0) #18
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %23, i64 0, i32 2
  %25 = load double, double* %24, align 8
  %26 = fcmp ugt double %20, %25
  br i1 %26, label %112, label %27

27:                                               ; preds = %18, %9
  %28 = icmp eq i32 %5, 0
  br i1 %28, label %808, label %29

29:                                               ; preds = %27
  %30 = zext i32 %5 to i64
  %31 = icmp ult i32 %5, 8
  br i1 %31, label %105, label %32

32:                                               ; preds = %29
  %33 = and i64 %30, 4294967288
  %34 = insertelement <4 x float> undef, float %3, i32 0
  %35 = shufflevector <4 x float> %34, <4 x float> undef, <4 x i32> zeroinitializer
  %36 = insertelement <4 x float> undef, float %3, i32 0
  %37 = shufflevector <4 x float> %36, <4 x float> undef, <4 x i32> zeroinitializer
  %38 = add nsw i64 %33, -8
  %39 = lshr exact i64 %38, 3
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 7
  %42 = icmp ult i64 %38, 56
  br i1 %42, label %90, label %43

43:                                               ; preds = %32
  %44 = sub nsw i64 %40, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 0, %43 ], [ %87, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %88, %45 ]
  %48 = getelementptr inbounds float, float* %4, i64 %46
  %49 = bitcast float* %48 to <4 x float>*
  store <4 x float> %35, <4 x float>* %49, align 4
  %50 = getelementptr inbounds float, float* %48, i64 4
  %51 = bitcast float* %50 to <4 x float>*
  store <4 x float> %37, <4 x float>* %51, align 4
  %52 = or i64 %46, 8
  %53 = getelementptr inbounds float, float* %4, i64 %52
  %54 = bitcast float* %53 to <4 x float>*
  store <4 x float> %35, <4 x float>* %54, align 4
  %55 = getelementptr inbounds float, float* %53, i64 4
  %56 = bitcast float* %55 to <4 x float>*
  store <4 x float> %37, <4 x float>* %56, align 4
  %57 = or i64 %46, 16
  %58 = getelementptr inbounds float, float* %4, i64 %57
  %59 = bitcast float* %58 to <4 x float>*
  store <4 x float> %35, <4 x float>* %59, align 4
  %60 = getelementptr inbounds float, float* %58, i64 4
  %61 = bitcast float* %60 to <4 x float>*
  store <4 x float> %37, <4 x float>* %61, align 4
  %62 = or i64 %46, 24
  %63 = getelementptr inbounds float, float* %4, i64 %62
  %64 = bitcast float* %63 to <4 x float>*
  store <4 x float> %35, <4 x float>* %64, align 4
  %65 = getelementptr inbounds float, float* %63, i64 4
  %66 = bitcast float* %65 to <4 x float>*
  store <4 x float> %37, <4 x float>* %66, align 4
  %67 = or i64 %46, 32
  %68 = getelementptr inbounds float, float* %4, i64 %67
  %69 = bitcast float* %68 to <4 x float>*
  store <4 x float> %35, <4 x float>* %69, align 4
  %70 = getelementptr inbounds float, float* %68, i64 4
  %71 = bitcast float* %70 to <4 x float>*
  store <4 x float> %37, <4 x float>* %71, align 4
  %72 = or i64 %46, 40
  %73 = getelementptr inbounds float, float* %4, i64 %72
  %74 = bitcast float* %73 to <4 x float>*
  store <4 x float> %35, <4 x float>* %74, align 4
  %75 = getelementptr inbounds float, float* %73, i64 4
  %76 = bitcast float* %75 to <4 x float>*
  store <4 x float> %37, <4 x float>* %76, align 4
  %77 = or i64 %46, 48
  %78 = getelementptr inbounds float, float* %4, i64 %77
  %79 = bitcast float* %78 to <4 x float>*
  store <4 x float> %35, <4 x float>* %79, align 4
  %80 = getelementptr inbounds float, float* %78, i64 4
  %81 = bitcast float* %80 to <4 x float>*
  store <4 x float> %37, <4 x float>* %81, align 4
  %82 = or i64 %46, 56
  %83 = getelementptr inbounds float, float* %4, i64 %82
  %84 = bitcast float* %83 to <4 x float>*
  store <4 x float> %35, <4 x float>* %84, align 4
  %85 = getelementptr inbounds float, float* %83, i64 4
  %86 = bitcast float* %85 to <4 x float>*
  store <4 x float> %37, <4 x float>* %86, align 4
  %87 = add i64 %46, 64
  %88 = add i64 %47, -8
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %45, !llvm.loop !23

90:                                               ; preds = %45, %32
  %91 = phi i64 [ 0, %32 ], [ %87, %45 ]
  %92 = icmp eq i64 %41, 0
  br i1 %92, label %103, label %93

93:                                               ; preds = %90, %93
  %94 = phi i64 [ %100, %93 ], [ %91, %90 ]
  %95 = phi i64 [ %101, %93 ], [ %41, %90 ]
  %96 = getelementptr inbounds float, float* %4, i64 %94
  %97 = bitcast float* %96 to <4 x float>*
  store <4 x float> %35, <4 x float>* %97, align 4
  %98 = getelementptr inbounds float, float* %96, i64 4
  %99 = bitcast float* %98 to <4 x float>*
  store <4 x float> %37, <4 x float>* %99, align 4
  %100 = add i64 %94, 8
  %101 = add i64 %95, -1
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %103, label %93, !llvm.loop !24

103:                                              ; preds = %93, %90
  %104 = icmp eq i64 %33, %30
  br i1 %104, label %808, label %105

105:                                              ; preds = %103, %29
  %106 = phi i64 [ 0, %29 ], [ %33, %103 ]
  br label %107

107:                                              ; preds = %105, %107
  %108 = phi i64 [ %110, %107 ], [ %106, %105 ]
  %109 = getelementptr inbounds float, float* %4, i64 %108
  store float %3, float* %109, align 4
  %110 = add nuw nsw i64 %108, 1
  %111 = icmp eq i64 %110, %30
  br i1 %111, label %808, label %107, !llvm.loop !25

112:                                              ; preds = %18
  %113 = load i32, i32* %15, align 4
  %114 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 1, i32 0, i32 2
  %115 = load i32, i32* %114, align 4
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %120, label %117

117:                                              ; preds = %112
  %118 = uitofp i64 %1 to double
  %119 = fdiv double %118, %6
  tail call void @_ZN5blink18AudioParamTimeline27ClampNewEventsToCurrentTimeEd(%"class.blink::AudioParamTimeline"* %0, double %119)
  br label %120

120:                                              ; preds = %112, %117
  %121 = icmp sgt i32 %113, 0
  %122 = uitofp i64 %1 to double
  %123 = fdiv double %122, %6
  br i1 %121, label %124, label %127

124:                                              ; preds = %120
  %125 = call zeroext i1 @_ZN5blink18AudioParamTimeline24HandleAllEventsInThePastEddRfjPfj(%"class.blink::AudioParamTimeline"* %0, double %123, double %6, float* nonnull dereferenceable(4) %10, i32 %5, float* %4, i32 %8)
  %126 = load float, float* %10, align 4
  br i1 %125, label %808, label %127

127:                                              ; preds = %120, %124
  %128 = phi float [ %126, %124 ], [ %3, %120 ]
  %129 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %14, i32 0) #18
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %129, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %130, align 8
  %132 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %131, i64 0, i32 2
  %133 = load double, double* %132, align 8
  %134 = fcmp ogt double %133, %123
  br i1 %134, label %135, label %231

135:                                              ; preds = %127
  %136 = fmul double %133, %6
  %137 = tail call double @llvm.ceil.f64(double %136) #18
  %138 = fcmp olt double %137, %19
  %139 = fptoui double %137 to i64
  %140 = select i1 %138, i64 %139, i64 %2
  %141 = sub i64 %140, %1
  %142 = trunc i64 %141 to i32
  %143 = icmp ugt i32 %142, %5
  %144 = select i1 %143, i32 %5, i32 %142
  %145 = icmp eq i32 %144, 0
  %146 = zext i32 %144 to i64
  br i1 %145, label %229, label %147

147:                                              ; preds = %135
  %148 = icmp ult i32 %144, 8
  br i1 %148, label %222, label %149

149:                                              ; preds = %147
  %150 = and i64 %146, 4294967288
  %151 = insertelement <4 x float> undef, float %128, i32 0
  %152 = shufflevector <4 x float> %151, <4 x float> undef, <4 x i32> zeroinitializer
  %153 = insertelement <4 x float> undef, float %128, i32 0
  %154 = shufflevector <4 x float> %153, <4 x float> undef, <4 x i32> zeroinitializer
  %155 = add nsw i64 %150, -8
  %156 = lshr exact i64 %155, 3
  %157 = add nuw nsw i64 %156, 1
  %158 = and i64 %157, 7
  %159 = icmp ult i64 %155, 56
  br i1 %159, label %207, label %160

160:                                              ; preds = %149
  %161 = sub nsw i64 %157, %158
  br label %162

162:                                              ; preds = %162, %160
  %163 = phi i64 [ 0, %160 ], [ %204, %162 ]
  %164 = phi i64 [ %161, %160 ], [ %205, %162 ]
  %165 = getelementptr inbounds float, float* %4, i64 %163
  %166 = bitcast float* %165 to <4 x float>*
  store <4 x float> %152, <4 x float>* %166, align 4
  %167 = getelementptr inbounds float, float* %165, i64 4
  %168 = bitcast float* %167 to <4 x float>*
  store <4 x float> %154, <4 x float>* %168, align 4
  %169 = or i64 %163, 8
  %170 = getelementptr inbounds float, float* %4, i64 %169
  %171 = bitcast float* %170 to <4 x float>*
  store <4 x float> %152, <4 x float>* %171, align 4
  %172 = getelementptr inbounds float, float* %170, i64 4
  %173 = bitcast float* %172 to <4 x float>*
  store <4 x float> %154, <4 x float>* %173, align 4
  %174 = or i64 %163, 16
  %175 = getelementptr inbounds float, float* %4, i64 %174
  %176 = bitcast float* %175 to <4 x float>*
  store <4 x float> %152, <4 x float>* %176, align 4
  %177 = getelementptr inbounds float, float* %175, i64 4
  %178 = bitcast float* %177 to <4 x float>*
  store <4 x float> %154, <4 x float>* %178, align 4
  %179 = or i64 %163, 24
  %180 = getelementptr inbounds float, float* %4, i64 %179
  %181 = bitcast float* %180 to <4 x float>*
  store <4 x float> %152, <4 x float>* %181, align 4
  %182 = getelementptr inbounds float, float* %180, i64 4
  %183 = bitcast float* %182 to <4 x float>*
  store <4 x float> %154, <4 x float>* %183, align 4
  %184 = or i64 %163, 32
  %185 = getelementptr inbounds float, float* %4, i64 %184
  %186 = bitcast float* %185 to <4 x float>*
  store <4 x float> %152, <4 x float>* %186, align 4
  %187 = getelementptr inbounds float, float* %185, i64 4
  %188 = bitcast float* %187 to <4 x float>*
  store <4 x float> %154, <4 x float>* %188, align 4
  %189 = or i64 %163, 40
  %190 = getelementptr inbounds float, float* %4, i64 %189
  %191 = bitcast float* %190 to <4 x float>*
  store <4 x float> %152, <4 x float>* %191, align 4
  %192 = getelementptr inbounds float, float* %190, i64 4
  %193 = bitcast float* %192 to <4 x float>*
  store <4 x float> %154, <4 x float>* %193, align 4
  %194 = or i64 %163, 48
  %195 = getelementptr inbounds float, float* %4, i64 %194
  %196 = bitcast float* %195 to <4 x float>*
  store <4 x float> %152, <4 x float>* %196, align 4
  %197 = getelementptr inbounds float, float* %195, i64 4
  %198 = bitcast float* %197 to <4 x float>*
  store <4 x float> %154, <4 x float>* %198, align 4
  %199 = or i64 %163, 56
  %200 = getelementptr inbounds float, float* %4, i64 %199
  %201 = bitcast float* %200 to <4 x float>*
  store <4 x float> %152, <4 x float>* %201, align 4
  %202 = getelementptr inbounds float, float* %200, i64 4
  %203 = bitcast float* %202 to <4 x float>*
  store <4 x float> %154, <4 x float>* %203, align 4
  %204 = add i64 %163, 64
  %205 = add i64 %164, -8
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %207, label %162, !llvm.loop !26

207:                                              ; preds = %162, %149
  %208 = phi i64 [ 0, %149 ], [ %204, %162 ]
  %209 = icmp eq i64 %158, 0
  br i1 %209, label %220, label %210

210:                                              ; preds = %207, %210
  %211 = phi i64 [ %217, %210 ], [ %208, %207 ]
  %212 = phi i64 [ %218, %210 ], [ %158, %207 ]
  %213 = getelementptr inbounds float, float* %4, i64 %211
  %214 = bitcast float* %213 to <4 x float>*
  store <4 x float> %152, <4 x float>* %214, align 4
  %215 = getelementptr inbounds float, float* %213, i64 4
  %216 = bitcast float* %215 to <4 x float>*
  store <4 x float> %154, <4 x float>* %216, align 4
  %217 = add i64 %211, 8
  %218 = add i64 %212, -1
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %210, !llvm.loop !27

220:                                              ; preds = %210, %207
  %221 = icmp eq i64 %150, %146
  br i1 %221, label %229, label %222

222:                                              ; preds = %220, %147
  %223 = phi i64 [ 0, %147 ], [ %150, %220 ]
  br label %224

224:                                              ; preds = %222, %224
  %225 = phi i64 [ %227, %224 ], [ %223, %222 ]
  %226 = getelementptr inbounds float, float* %4, i64 %225
  store float %128, float* %226, align 4
  %227 = add nuw nsw i64 %225, 1
  %228 = icmp eq i64 %227, %146
  br i1 %228, label %229, label %224, !llvm.loop !28

229:                                              ; preds = %224, %220, %135
  %230 = add i64 %146, %1
  br label %231

231:                                              ; preds = %127, %229
  %232 = phi i64 [ %230, %229 ], [ %1, %127 ]
  %233 = phi i32 [ %144, %229 ], [ 0, %127 ]
  %234 = bitcast float* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %234) #18
  %235 = bitcast float* %11 to i32*
  store float %128, float* %11, align 4
  %236 = icmp ult i32 %233, %5
  %237 = and i1 %121, %236
  br i1 %237, label %238, label %727

238:                                              ; preds = %231
  %239 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"** %12 to i8*
  %240 = add nsw i32 %113, -1
  %241 = fadd double %20, 1.000000e+00
  %242 = bitcast %"struct.blink::AudioParamTimeline::AutomationState"* %13 to i8*
  %243 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %13, i64 0, i32 0
  %244 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %13, i64 0, i32 1
  %245 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %13, i64 0, i32 2
  %246 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %13, i64 0, i32 3
  %247 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %13, i64 0, i32 4
  %248 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %13, i64 0, i32 5
  %249 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %13, i64 0, i32 6
  %250 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %13, i64 0, i32 7
  %251 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %13, i64 0, i32 8
  %252 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %13, i64 0, i32 9
  %253 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %13, i64 0, i32 10
  %254 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %13, i64 0, i32 11
  %255 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"** %254 to i64*
  %256 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %13, i64 0, i32 12
  %257 = fdiv double 4.000000e+00, %6
  %258 = fdiv double 1.000000e+00, %6
  %259 = fptrunc double %258 to float
  %260 = insertelement <4 x float> undef, float %259, i32 0
  %261 = shufflevector <4 x float> %260, <4 x float> undef, <4 x i32> zeroinitializer
  %262 = fmul <4 x float> %261, <float 0.000000e+00, float 1.000000e+00, float 2.000000e+00, float 3.000000e+00>
  %263 = insertelement <4 x double> undef, double %6, i32 0
  %264 = shufflevector <4 x double> %263, <4 x double> undef, <4 x i32> zeroinitializer
  br label %267

265:                                              ; preds = %711
  %266 = icmp sgt i32 %715, 0
  br i1 %266, label %719, label %727

267:                                              ; preds = %238, %711
  %268 = phi i32 [ %233, %238 ], [ %713, %711 ]
  %269 = phi i64 [ %232, %238 ], [ %714, %711 ]
  %270 = phi i32 [ 0, %238 ], [ %712, %711 ]
  %271 = phi i32 [ 0, %238 ], [ %715, %711 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %239) #18
  %272 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %14, i32 %270) #18
  %273 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %272, i64 0, i32 0, i32 0, i32 0
  %274 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %273, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* %274, %"class.blink::AudioParamTimeline::ParamEvent"** %12, align 8
  %275 = icmp slt i32 %270, %240
  br i1 %275, label %276, label %307

276:                                              ; preds = %267
  %277 = add nuw nsw i32 %270, 1
  %278 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %14, i32 %277) #18
  %279 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %278, i64 0, i32 0, i32 0, i32 0
  %280 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %279, align 8
  %281 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %280, null
  br i1 %281, label %307, label %282

282:                                              ; preds = %276
  %283 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %280, i64 0, i32 2
  %284 = load double, double* %283, align 8
  %285 = uitofp i64 %269 to double
  %286 = fdiv double %285, %6
  %287 = fcmp olt double %284, %286
  br i1 %287, label %288, label %304

288:                                              ; preds = %282
  %289 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %274, i64 0, i32 2
  %290 = load double, double* %289, align 8
  %291 = fmul double %290, %6
  %292 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %274, i64 0, i32 0
  %293 = load i32, i32* %292, align 8
  %294 = icmp eq i32 %293, 0
  br i1 %294, label %299, label %295

295:                                              ; preds = %288
  %296 = icmp ne i32 %293, 6
  %297 = fcmp ugt double %291, %285
  %298 = or i1 %296, %297
  br i1 %298, label %711, label %301

299:                                              ; preds = %288
  %300 = fcmp ugt double %291, %285
  br i1 %300, label %711, label %301

301:                                              ; preds = %299, %295
  %302 = fadd double %291, 1.000000e+00
  %303 = fcmp ogt double %302, %285
  br i1 %303, label %304, label %711

304:                                              ; preds = %301, %282
  %305 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %280, i64 0, i32 0
  %306 = load i32, i32* %305, align 8
  br label %307

307:                                              ; preds = %267, %276, %304
  %308 = phi i1 [ true, %304 ], [ false, %276 ], [ false, %267 ]
  %309 = phi %"class.blink::AudioParamTimeline::ParamEvent"* [ %280, %304 ], [ null, %276 ], [ null, %267 ]
  %310 = phi i1 [ false, %304 ], [ true, %276 ], [ true, %267 ]
  %311 = phi i32 [ %306, %304 ], [ 7, %276 ], [ 7, %267 ]
  call void @_ZN5blink18AudioParamTimeline30ProcessSetTargetFollowedByRampEiRPNS0_10ParamEventENS1_4TypeEmddRf(%"class.blink::AudioParamTimeline"* %0, i32 %270, %"class.blink::AudioParamTimeline::ParamEvent"** nonnull dereferenceable(8) %12, i32 %311, i64 %269, double %6, double %7, float* nonnull dereferenceable(4) %11)
  %312 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %12, align 8
  %313 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %312, i64 0, i32 1
  %314 = load float, float* %313, align 4
  %315 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %312, i64 0, i32 2
  %316 = load double, double* %315, align 8
  %317 = ptrtoint %"class.blink::AudioParamTimeline::ParamEvent"* %312 to i64
  br i1 %308, label %318, label %323

318:                                              ; preds = %307
  %319 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %309, i64 0, i32 1
  %320 = load float, float* %319, align 4
  %321 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %309, i64 0, i32 2
  %322 = load double, double* %321, align 8
  br label %323

323:                                              ; preds = %307, %318
  %324 = phi float [ %320, %318 ], [ %314, %307 ]
  %325 = phi double [ %322, %318 ], [ %241, %307 ]
  br i1 %310, label %380, label %326

326:                                              ; preds = %323
  %327 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %309, i64 0, i32 0
  %328 = load i32, i32* %327, align 8, !noalias !29
  %329 = icmp eq i32 %328, 5
  br i1 %329, label %330, label %380

330:                                              ; preds = %326
  %331 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %309, i64 0, i32 12, i32 0, i32 0, i32 0
  %332 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %331, align 8, !noalias !29
  %333 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %332, null
  br i1 %333, label %380, label %334

334:                                              ; preds = %330
  %335 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %312, i64 0, i32 0
  %336 = load i32, i32* %335, align 8, !noalias !29
  switch i32 %336, label %380 [
    i32 5, label %337
    i32 1, label %337
    i32 2, label %337
    i32 6, label %337
    i32 0, label %337
  ]

337:                                              ; preds = %334, %334, %334, %334, %334
  %338 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %309, i64 0, i32 2
  %339 = load double, double* %338, align 8, !noalias !29
  %340 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %332, i64 0, i32 0
  %341 = load i32, i32* %340, align 8, !noalias !29
  %342 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %309, i64 0, i32 13
  %343 = load i8, i8* %342, align 8, !range !10, !noalias !29
  %344 = icmp eq i8 %343, 0
  br i1 %344, label %348, label %345

345:                                              ; preds = %337
  %346 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %309, i64 0, i32 1
  %347 = load float, float* %346, align 4, !noalias !29
  br label %380

348:                                              ; preds = %337
  switch i32 %341, label %377 [
    i32 1, label %349
    i32 2, label %363
  ]

349:                                              ; preds = %348
  %350 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %332, i64 0, i32 1
  %351 = load float, float* %350, align 4, !noalias !29
  %352 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %332, i64 0, i32 2
  %353 = load double, double* %352, align 8, !noalias !29
  %354 = fpext float %314 to double
  %355 = fsub float %351, %314
  %356 = fpext float %355 to double
  %357 = fsub double %339, %316
  %358 = fmul double %357, %356
  %359 = fsub double %353, %316
  %360 = fdiv double %358, %359
  %361 = fadd double %360, %354
  %362 = fptrunc double %361 to float
  br label %377

363:                                              ; preds = %348
  %364 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %332, i64 0, i32 1
  %365 = load float, float* %364, align 4, !noalias !29
  %366 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %332, i64 0, i32 2
  %367 = load double, double* %366, align 8, !noalias !29
  %368 = fpext float %314 to double
  %369 = fdiv float %365, %314
  %370 = fpext float %369 to double
  %371 = fsub double %339, %316
  %372 = fsub double %367, %316
  %373 = fdiv double %371, %372
  %374 = tail call double @_ZN6fdlibm3powEdd(double %370, double %373) #18, !noalias !29
  %375 = fmul double %374, %368
  %376 = fptrunc double %375 to float
  br label %377

377:                                              ; preds = %363, %349, %348
  %378 = phi float [ %324, %348 ], [ %376, %363 ], [ %362, %349 ]
  %379 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %309, i64 0, i32 1
  store float %378, float* %379, align 4, !noalias !29
  store i8 1, i8* %342, align 8, !noalias !29
  br label %380

380:                                              ; preds = %323, %326, %330, %334, %345, %377
  %381 = phi float [ %324, %330 ], [ %324, %334 ], [ %347, %345 ], [ %378, %377 ], [ %324, %326 ], [ %324, %323 ]
  %382 = phi double [ %325, %330 ], [ %325, %334 ], [ %339, %345 ], [ %339, %377 ], [ %325, %326 ], [ %325, %323 ]
  %383 = phi i32 [ 5, %330 ], [ 5, %334 ], [ %341, %345 ], [ %341, %377 ], [ %328, %326 ], [ 7, %323 ]
  %384 = fmul double %382, %6
  %385 = fcmp olt double %384, %19
  %386 = tail call double @llvm.ceil.f64(double %384)
  %387 = fptoui double %386 to i64
  %388 = select i1 %385, i64 %387, i64 %2
  %389 = sub i64 %388, %1
  %390 = trunc i64 %389 to i32
  %391 = icmp ugt i32 %390, %5
  %392 = select i1 %391, i32 %5, i32 %390
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %242) #18
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %242, i8* align 8 bitcast ({ i32, [4 x i8], i64, i64, double, double, i32, [4 x i8], i64, float, [4 x i8], double, float, [4 x i8], double, %"class.blink::AudioParamTimeline::ParamEvent"*, i32, [4 x i8] }* @__const._ZN5blink18AudioParamTimeline23ValuesForFrameRangeImplEmmfPfjddj.current_state to i8*), i64 104, i1 false)
  store i32 %5, i32* %243, align 8
  store i64 %1, i64* %244, align 8
  store i64 %2, i64* %245, align 8
  store double %6, double* %246, align 8
  store double %7, double* %247, align 8
  store i32 %392, i32* %248, align 8
  store i64 %388, i64* %249, align 8
  store float %314, float* %250, align 8
  store double %316, double* %251, align 8
  store float %381, float* %252, align 8
  store double %382, double* %253, align 8
  store i64 %317, i64* %255, align 8
  store i32 %270, i32* %256, align 8
  switch i32 %383, label %528 [
    i32 1, label %393
    i32 2, label %520
  ]

393:                                              ; preds = %380
  %394 = load i32, i32* %235, align 4
  %395 = fsub double %382, %316
  %396 = fcmp ugt double %395, 0x3810000000000000
  br i1 %396, label %397, label %400

397:                                              ; preds = %393
  %398 = fdiv double 1.000000e+00, %395
  %399 = fptrunc double %398 to float
  br label %400

400:                                              ; preds = %397, %393
  %401 = phi float [ %399, %397 ], [ 0.000000e+00, %393 ]
  %402 = fsub float %381, %314
  %403 = icmp ugt i32 %392, %268
  br i1 %403, label %404, label %442

404:                                              ; preds = %400
  %405 = fpext float %401 to double
  %406 = fmul double %257, %405
  %407 = fpext float %402 to double
  %408 = fmul double %406, %407
  %409 = fptrunc double %408 to float
  %410 = insertelement <4 x float> undef, float %409, i32 0
  %411 = shufflevector <4 x float> %410, <4 x float> undef, <4 x i32> zeroinitializer
  %412 = sub i32 %392, %268
  %413 = and i32 %412, -4
  %414 = add i32 %413, %268
  %415 = zext i32 %413 to i64
  %416 = add i64 %269, %415
  %417 = icmp ugt i32 %414, %268
  br i1 %417, label %418, label %442

418:                                              ; preds = %404
  %419 = insertelement <4 x float> undef, float %314, i32 0
  %420 = shufflevector <4 x float> %419, <4 x float> undef, <4 x i32> zeroinitializer
  %421 = uitofp i64 %269 to double
  %422 = fdiv double %421, %6
  %423 = fsub double %422, %316
  %424 = fptrunc double %423 to float
  %425 = insertelement <4 x float> undef, float %424, i32 0
  %426 = shufflevector <4 x float> %425, <4 x float> undef, <4 x i32> zeroinitializer
  %427 = fadd <4 x float> %262, %426
  %428 = fmul float %402, %401
  %429 = insertelement <4 x float> undef, float %428, i32 0
  %430 = shufflevector <4 x float> %429, <4 x float> undef, <4 x i32> zeroinitializer
  %431 = fmul <4 x float> %427, %430
  %432 = fadd <4 x float> %420, %431
  br label %433

433:                                              ; preds = %433, %418
  %434 = phi <4 x float> [ %439, %433 ], [ %432, %418 ]
  %435 = phi i32 [ %440, %433 ], [ %268, %418 ]
  %436 = zext i32 %435 to i64
  %437 = getelementptr inbounds float, float* %4, i64 %436
  %438 = bitcast float* %437 to <4 x float>*
  store <4 x float> %434, <4 x float>* %438, align 1
  %439 = fadd <4 x float> %411, %434
  %440 = add i32 %435, 4
  %441 = icmp ult i32 %440, %414
  br i1 %441, label %433, label %442

442:                                              ; preds = %433, %404, %400
  %443 = phi i64 [ %269, %400 ], [ %416, %404 ], [ %416, %433 ]
  %444 = phi i32 [ %268, %400 ], [ %268, %404 ], [ %440, %433 ]
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %452, label %446

446:                                              ; preds = %442
  %447 = add i32 %444, -1
  %448 = zext i32 %447 to i64
  %449 = getelementptr inbounds float, float* %4, i64 %448
  %450 = bitcast float* %449 to i32*
  %451 = load i32, i32* %450, align 4
  br label %452

452:                                              ; preds = %446, %442
  %453 = phi i32 [ %394, %442 ], [ %451, %446 ]
  %454 = icmp ult i32 %444, %392
  br i1 %454, label %455, label %516

455:                                              ; preds = %452
  %456 = fpext float %401 to double
  %457 = zext i32 %444 to i64
  %458 = zext i32 %392 to i64
  %459 = sub nsw i64 %458, %457
  %460 = icmp ult i64 %459, 4
  br i1 %460, label %495, label %461

461:                                              ; preds = %455
  %462 = and i64 %459, -4
  %463 = add nsw i64 %462, %457
  %464 = add i64 %443, %462
  %465 = insertelement <4 x i64> undef, i64 %443, i32 0
  %466 = shufflevector <4 x i64> %465, <4 x i64> undef, <4 x i32> zeroinitializer
  %467 = add <4 x i64> %466, <i64 0, i64 1, i64 2, i64 3>
  %468 = insertelement <4 x double> undef, double %316, i32 0
  %469 = shufflevector <4 x double> %468, <4 x double> undef, <4 x i32> zeroinitializer
  %470 = insertelement <4 x double> undef, double %456, i32 0
  %471 = shufflevector <4 x double> %470, <4 x double> undef, <4 x i32> zeroinitializer
  %472 = insertelement <4 x float> undef, float %402, i32 0
  %473 = shufflevector <4 x float> %472, <4 x float> undef, <4 x i32> zeroinitializer
  %474 = insertelement <4 x float> undef, float %314, i32 0
  %475 = shufflevector <4 x float> %474, <4 x float> undef, <4 x i32> zeroinitializer
  br label %476

476:                                              ; preds = %476, %461
  %477 = phi i64 [ 0, %461 ], [ %489, %476 ]
  %478 = phi <4 x i64> [ %467, %461 ], [ %490, %476 ]
  %479 = add i64 %477, %457
  %480 = uitofp <4 x i64> %478 to <4 x double>
  %481 = fdiv <4 x double> %480, %264
  %482 = fsub <4 x double> %481, %469
  %483 = fmul <4 x double> %482, %471
  %484 = fptrunc <4 x double> %483 to <4 x float>
  %485 = fmul <4 x float> %473, %484
  %486 = fadd <4 x float> %475, %485
  %487 = getelementptr inbounds float, float* %4, i64 %479
  %488 = bitcast float* %487 to <4 x float>*
  store <4 x float> %486, <4 x float>* %488, align 4
  %489 = add i64 %477, 4
  %490 = add <4 x i64> %478, <i64 4, i64 4, i64 4, i64 4>
  %491 = icmp eq i64 %489, %462
  br i1 %491, label %492, label %476, !llvm.loop !32

492:                                              ; preds = %476
  %493 = icmp eq i64 %459, %462
  %494 = extractelement <4 x float> %486, i32 3
  br i1 %493, label %512, label %495

495:                                              ; preds = %492, %455
  %496 = phi i64 [ %457, %455 ], [ %463, %492 ]
  %497 = phi i64 [ %443, %455 ], [ %464, %492 ]
  br label %498

498:                                              ; preds = %495, %498
  %499 = phi i64 [ %510, %498 ], [ %496, %495 ]
  %500 = phi i64 [ %509, %498 ], [ %497, %495 ]
  %501 = uitofp i64 %500 to double
  %502 = fdiv double %501, %6
  %503 = fsub double %502, %316
  %504 = fmul double %503, %456
  %505 = fptrunc double %504 to float
  %506 = fmul float %402, %505
  %507 = fadd float %314, %506
  %508 = getelementptr inbounds float, float* %4, i64 %499
  store float %507, float* %508, align 4
  %509 = add i64 %500, 1
  %510 = add nuw nsw i64 %499, 1
  %511 = icmp eq i64 %510, %458
  br i1 %511, label %512, label %498, !llvm.loop !33

512:                                              ; preds = %498, %492
  %513 = phi float [ %494, %492 ], [ %507, %498 ]
  %514 = phi i64 [ %464, %492 ], [ %509, %498 ]
  %515 = bitcast float %513 to i32
  br label %516

516:                                              ; preds = %452, %512
  %517 = phi i32 [ %392, %512 ], [ %444, %452 ]
  %518 = phi i64 [ %514, %512 ], [ %443, %452 ]
  %519 = phi i32 [ %515, %512 ], [ %453, %452 ]
  store i32 %519, i32* %235, align 4
  br label %707

520:                                              ; preds = %380
  %521 = load float, float* %11, align 4
  %522 = call { i64, i64 } @_ZN5blink18AudioParamTimeline22ProcessExponentialRampERKNS0_15AutomationStateEPfmfj(%"class.blink::AudioParamTimeline"* undef, %"struct.blink::AudioParamTimeline::AutomationState"* nonnull dereferenceable(104) %13, float* %4, i64 %269, float %521, i32 %268)
  %523 = extractvalue { i64, i64 } %522, 0
  %524 = extractvalue { i64, i64 } %522, 1
  %525 = trunc i64 %524 to i32
  store i32 %525, i32* %235, align 4
  %526 = lshr i64 %524, 32
  %527 = trunc i64 %526 to i32
  br label %707

528:                                              ; preds = %380
  %529 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %312, i64 0, i32 0
  %530 = load i32, i32* %529, align 8
  switch i32 %530, label %707 [
    i32 0, label %531
    i32 6, label %531
    i32 1, label %531
    i32 5, label %607
    i32 2, label %615
    i32 3, label %691
    i32 4, label %699
  ]

531:                                              ; preds = %528, %528, %528
  %532 = bitcast float* %313 to i32*
  %533 = load i32, i32* %532, align 4
  store i32 %533, i32* %235, align 4
  %534 = icmp ugt i32 %392, %268
  br i1 %534, label %535, label %707

535:                                              ; preds = %531
  %536 = zext i32 %268 to i64
  %537 = zext i32 %392 to i64
  %538 = sub nsw i64 %537, %536
  %539 = icmp ult i64 %538, 8
  br i1 %539, label %599, label %540

540:                                              ; preds = %535
  %541 = and i64 %538, -8
  %542 = add nsw i64 %541, %536
  %543 = insertelement <4 x i32> undef, i32 %533, i32 0
  %544 = shufflevector <4 x i32> %543, <4 x i32> undef, <4 x i32> zeroinitializer
  %545 = insertelement <4 x i32> undef, i32 %533, i32 0
  %546 = shufflevector <4 x i32> %545, <4 x i32> undef, <4 x i32> zeroinitializer
  %547 = add nsw i64 %541, -8
  %548 = lshr exact i64 %547, 3
  %549 = add nuw nsw i64 %548, 1
  %550 = and i64 %549, 3
  %551 = icmp ult i64 %547, 24
  br i1 %551, label %583, label %552

552:                                              ; preds = %540
  %553 = sub nsw i64 %549, %550
  br label %554

554:                                              ; preds = %554, %552
  %555 = phi i64 [ 0, %552 ], [ %580, %554 ]
  %556 = phi i64 [ %553, %552 ], [ %581, %554 ]
  %557 = add i64 %555, %536
  %558 = getelementptr inbounds float, float* %4, i64 %557
  %559 = bitcast float* %558 to <4 x i32>*
  store <4 x i32> %544, <4 x i32>* %559, align 4
  %560 = getelementptr inbounds float, float* %558, i64 4
  %561 = bitcast float* %560 to <4 x i32>*
  store <4 x i32> %546, <4 x i32>* %561, align 4
  %562 = or i64 %555, 8
  %563 = add i64 %562, %536
  %564 = getelementptr inbounds float, float* %4, i64 %563
  %565 = bitcast float* %564 to <4 x i32>*
  store <4 x i32> %544, <4 x i32>* %565, align 4
  %566 = getelementptr inbounds float, float* %564, i64 4
  %567 = bitcast float* %566 to <4 x i32>*
  store <4 x i32> %546, <4 x i32>* %567, align 4
  %568 = or i64 %555, 16
  %569 = add i64 %568, %536
  %570 = getelementptr inbounds float, float* %4, i64 %569
  %571 = bitcast float* %570 to <4 x i32>*
  store <4 x i32> %544, <4 x i32>* %571, align 4
  %572 = getelementptr inbounds float, float* %570, i64 4
  %573 = bitcast float* %572 to <4 x i32>*
  store <4 x i32> %546, <4 x i32>* %573, align 4
  %574 = or i64 %555, 24
  %575 = add i64 %574, %536
  %576 = getelementptr inbounds float, float* %4, i64 %575
  %577 = bitcast float* %576 to <4 x i32>*
  store <4 x i32> %544, <4 x i32>* %577, align 4
  %578 = getelementptr inbounds float, float* %576, i64 4
  %579 = bitcast float* %578 to <4 x i32>*
  store <4 x i32> %546, <4 x i32>* %579, align 4
  %580 = add i64 %555, 32
  %581 = add i64 %556, -4
  %582 = icmp eq i64 %581, 0
  br i1 %582, label %583, label %554, !llvm.loop !34

583:                                              ; preds = %554, %540
  %584 = phi i64 [ 0, %540 ], [ %580, %554 ]
  %585 = icmp eq i64 %550, 0
  br i1 %585, label %597, label %586

586:                                              ; preds = %583, %586
  %587 = phi i64 [ %594, %586 ], [ %584, %583 ]
  %588 = phi i64 [ %595, %586 ], [ %550, %583 ]
  %589 = add i64 %587, %536
  %590 = getelementptr inbounds float, float* %4, i64 %589
  %591 = bitcast float* %590 to <4 x i32>*
  store <4 x i32> %544, <4 x i32>* %591, align 4
  %592 = getelementptr inbounds float, float* %590, i64 4
  %593 = bitcast float* %592 to <4 x i32>*
  store <4 x i32> %546, <4 x i32>* %593, align 4
  %594 = add i64 %587, 8
  %595 = add i64 %588, -1
  %596 = icmp eq i64 %595, 0
  br i1 %596, label %597, label %586, !llvm.loop !35

597:                                              ; preds = %586, %583
  %598 = icmp eq i64 %538, %541
  br i1 %598, label %707, label %599

599:                                              ; preds = %597, %535
  %600 = phi i64 [ %536, %535 ], [ %542, %597 ]
  br label %601

601:                                              ; preds = %599, %601
  %602 = phi i64 [ %605, %601 ], [ %600, %599 ]
  %603 = getelementptr inbounds float, float* %4, i64 %602
  %604 = bitcast float* %603 to i32*
  store i32 %533, i32* %604, align 4
  %605 = add nuw nsw i64 %602, 1
  %606 = icmp eq i64 %605, %537
  br i1 %606, label %707, label %601, !llvm.loop !36

607:                                              ; preds = %528
  %608 = load float, float* %11, align 4
  %609 = call { i64, i64 } @_ZN5blink18AudioParamTimeline19ProcessCancelValuesERKNS0_15AutomationStateEPfmfj(%"class.blink::AudioParamTimeline"* %0, %"struct.blink::AudioParamTimeline::AutomationState"* nonnull dereferenceable(104) %13, float* %4, i64 %269, float %608, i32 %268)
  %610 = extractvalue { i64, i64 } %609, 0
  %611 = extractvalue { i64, i64 } %609, 1
  %612 = trunc i64 %611 to i32
  store i32 %612, i32* %235, align 4
  %613 = lshr i64 %611, 32
  %614 = trunc i64 %613 to i32
  br label %707

615:                                              ; preds = %528
  %616 = bitcast float* %313 to i32*
  %617 = load i32, i32* %616, align 4
  store i32 %617, i32* %235, align 4
  %618 = icmp ugt i32 %392, %268
  br i1 %618, label %619, label %707

619:                                              ; preds = %615
  %620 = zext i32 %268 to i64
  %621 = zext i32 %392 to i64
  %622 = sub nsw i64 %621, %620
  %623 = icmp ult i64 %622, 8
  br i1 %623, label %683, label %624

624:                                              ; preds = %619
  %625 = and i64 %622, -8
  %626 = add nsw i64 %625, %620
  %627 = insertelement <4 x i32> undef, i32 %617, i32 0
  %628 = shufflevector <4 x i32> %627, <4 x i32> undef, <4 x i32> zeroinitializer
  %629 = insertelement <4 x i32> undef, i32 %617, i32 0
  %630 = shufflevector <4 x i32> %629, <4 x i32> undef, <4 x i32> zeroinitializer
  %631 = add nsw i64 %625, -8
  %632 = lshr exact i64 %631, 3
  %633 = add nuw nsw i64 %632, 1
  %634 = and i64 %633, 3
  %635 = icmp ult i64 %631, 24
  br i1 %635, label %667, label %636

636:                                              ; preds = %624
  %637 = sub nsw i64 %633, %634
  br label %638

638:                                              ; preds = %638, %636
  %639 = phi i64 [ 0, %636 ], [ %664, %638 ]
  %640 = phi i64 [ %637, %636 ], [ %665, %638 ]
  %641 = add i64 %639, %620
  %642 = getelementptr inbounds float, float* %4, i64 %641
  %643 = bitcast float* %642 to <4 x i32>*
  store <4 x i32> %628, <4 x i32>* %643, align 4
  %644 = getelementptr inbounds float, float* %642, i64 4
  %645 = bitcast float* %644 to <4 x i32>*
  store <4 x i32> %630, <4 x i32>* %645, align 4
  %646 = or i64 %639, 8
  %647 = add i64 %646, %620
  %648 = getelementptr inbounds float, float* %4, i64 %647
  %649 = bitcast float* %648 to <4 x i32>*
  store <4 x i32> %628, <4 x i32>* %649, align 4
  %650 = getelementptr inbounds float, float* %648, i64 4
  %651 = bitcast float* %650 to <4 x i32>*
  store <4 x i32> %630, <4 x i32>* %651, align 4
  %652 = or i64 %639, 16
  %653 = add i64 %652, %620
  %654 = getelementptr inbounds float, float* %4, i64 %653
  %655 = bitcast float* %654 to <4 x i32>*
  store <4 x i32> %628, <4 x i32>* %655, align 4
  %656 = getelementptr inbounds float, float* %654, i64 4
  %657 = bitcast float* %656 to <4 x i32>*
  store <4 x i32> %630, <4 x i32>* %657, align 4
  %658 = or i64 %639, 24
  %659 = add i64 %658, %620
  %660 = getelementptr inbounds float, float* %4, i64 %659
  %661 = bitcast float* %660 to <4 x i32>*
  store <4 x i32> %628, <4 x i32>* %661, align 4
  %662 = getelementptr inbounds float, float* %660, i64 4
  %663 = bitcast float* %662 to <4 x i32>*
  store <4 x i32> %630, <4 x i32>* %663, align 4
  %664 = add i64 %639, 32
  %665 = add i64 %640, -4
  %666 = icmp eq i64 %665, 0
  br i1 %666, label %667, label %638, !llvm.loop !37

667:                                              ; preds = %638, %624
  %668 = phi i64 [ 0, %624 ], [ %664, %638 ]
  %669 = icmp eq i64 %634, 0
  br i1 %669, label %681, label %670

670:                                              ; preds = %667, %670
  %671 = phi i64 [ %678, %670 ], [ %668, %667 ]
  %672 = phi i64 [ %679, %670 ], [ %634, %667 ]
  %673 = add i64 %671, %620
  %674 = getelementptr inbounds float, float* %4, i64 %673
  %675 = bitcast float* %674 to <4 x i32>*
  store <4 x i32> %628, <4 x i32>* %675, align 4
  %676 = getelementptr inbounds float, float* %674, i64 4
  %677 = bitcast float* %676 to <4 x i32>*
  store <4 x i32> %630, <4 x i32>* %677, align 4
  %678 = add i64 %671, 8
  %679 = add i64 %672, -1
  %680 = icmp eq i64 %679, 0
  br i1 %680, label %681, label %670, !llvm.loop !38

681:                                              ; preds = %670, %667
  %682 = icmp eq i64 %622, %625
  br i1 %682, label %707, label %683

683:                                              ; preds = %681, %619
  %684 = phi i64 [ %620, %619 ], [ %626, %681 ]
  br label %685

685:                                              ; preds = %683, %685
  %686 = phi i64 [ %689, %685 ], [ %684, %683 ]
  %687 = getelementptr inbounds float, float* %4, i64 %686
  %688 = bitcast float* %687 to i32*
  store i32 %617, i32* %688, align 4
  %689 = add nuw nsw i64 %686, 1
  %690 = icmp eq i64 %689, %621
  br i1 %690, label %707, label %685, !llvm.loop !39

691:                                              ; preds = %528
  %692 = load float, float* %11, align 4
  %693 = call { i64, i64 } @_ZN5blink18AudioParamTimeline16ProcessSetTargetERKNS0_15AutomationStateEPfmfj(%"class.blink::AudioParamTimeline"* undef, %"struct.blink::AudioParamTimeline::AutomationState"* nonnull dereferenceable(104) %13, float* %4, i64 %269, float %692, i32 %268)
  %694 = extractvalue { i64, i64 } %693, 0
  %695 = extractvalue { i64, i64 } %693, 1
  %696 = trunc i64 %695 to i32
  store i32 %696, i32* %235, align 4
  %697 = lshr i64 %695, 32
  %698 = trunc i64 %697 to i32
  br label %707

699:                                              ; preds = %528
  %700 = load float, float* %11, align 4
  %701 = call { i64, i64 } @_ZN5blink18AudioParamTimeline20ProcessSetValueCurveERKNS0_15AutomationStateEPfmfj(%"class.blink::AudioParamTimeline"* undef, %"struct.blink::AudioParamTimeline::AutomationState"* nonnull dereferenceable(104) %13, float* %4, i64 %269, float %700, i32 %268)
  %702 = extractvalue { i64, i64 } %701, 0
  %703 = extractvalue { i64, i64 } %701, 1
  %704 = trunc i64 %703 to i32
  store i32 %704, i32* %235, align 4
  %705 = lshr i64 %703, 32
  %706 = trunc i64 %705 to i32
  br label %707

707:                                              ; preds = %685, %601, %681, %597, %615, %531, %520, %528, %699, %691, %607, %516
  %708 = phi i32 [ %527, %520 ], [ %268, %528 ], [ %706, %699 ], [ %698, %691 ], [ %614, %607 ], [ %517, %516 ], [ %268, %531 ], [ %268, %615 ], [ %392, %597 ], [ %392, %681 ], [ %392, %601 ], [ %392, %685 ]
  %709 = phi i64 [ %523, %520 ], [ %269, %528 ], [ %702, %699 ], [ %694, %691 ], [ %610, %607 ], [ %518, %516 ], [ %388, %531 ], [ %388, %615 ], [ %388, %597 ], [ %388, %681 ], [ %388, %601 ], [ %388, %685 ]
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %242) #18
  %710 = add nuw nsw i32 %270, 1
  br label %711

711:                                              ; preds = %301, %299, %295, %707
  %712 = phi i32 [ %277, %301 ], [ %277, %299 ], [ %277, %295 ], [ %710, %707 ]
  %713 = phi i32 [ %268, %301 ], [ %268, %299 ], [ %268, %295 ], [ %708, %707 ]
  %714 = phi i64 [ %269, %301 ], [ %269, %299 ], [ %269, %295 ], [ %709, %707 ]
  %715 = phi i32 [ %270, %301 ], [ %270, %299 ], [ %270, %295 ], [ %271, %707 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %239) #18
  %716 = icmp slt i32 %712, %113
  %717 = icmp ult i32 %713, %5
  %718 = and i1 %716, %717
  br i1 %718, label %267, label %265

719:                                              ; preds = %265
  %720 = add nsw i32 %715, -1
  %721 = load i32, i32* %15, align 4
  %722 = icmp ugt i32 %721, 1
  br i1 %722, label %723, label %727

723:                                              ; preds = %719
  %724 = add i32 %721, -1
  %725 = icmp ult i32 %724, %720
  %726 = select i1 %725, i32 %724, i32 %720
  tail call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE7EraseAtEjj(%"class.WTF::Vector"* %14, i32 0, i32 %726) #18
  br label %727

727:                                              ; preds = %231, %723, %719, %265
  %728 = phi i32 [ %713, %723 ], [ %713, %719 ], [ %713, %265 ], [ %233, %231 ]
  %729 = load i32, i32* %235, align 4
  %730 = icmp ult i32 %728, %5
  br i1 %730, label %731, label %803

731:                                              ; preds = %727
  %732 = zext i32 %728 to i64
  %733 = zext i32 %5 to i64
  %734 = sub nsw i64 %733, %732
  %735 = icmp ult i64 %734, 8
  br i1 %735, label %795, label %736

736:                                              ; preds = %731
  %737 = and i64 %734, -8
  %738 = add nsw i64 %737, %732
  %739 = insertelement <4 x i32> undef, i32 %729, i32 0
  %740 = shufflevector <4 x i32> %739, <4 x i32> undef, <4 x i32> zeroinitializer
  %741 = insertelement <4 x i32> undef, i32 %729, i32 0
  %742 = shufflevector <4 x i32> %741, <4 x i32> undef, <4 x i32> zeroinitializer
  %743 = add nsw i64 %737, -8
  %744 = lshr exact i64 %743, 3
  %745 = add nuw nsw i64 %744, 1
  %746 = and i64 %745, 3
  %747 = icmp ult i64 %743, 24
  br i1 %747, label %779, label %748

748:                                              ; preds = %736
  %749 = sub nsw i64 %745, %746
  br label %750

750:                                              ; preds = %750, %748
  %751 = phi i64 [ 0, %748 ], [ %776, %750 ]
  %752 = phi i64 [ %749, %748 ], [ %777, %750 ]
  %753 = add i64 %751, %732
  %754 = getelementptr inbounds float, float* %4, i64 %753
  %755 = bitcast float* %754 to <4 x i32>*
  store <4 x i32> %740, <4 x i32>* %755, align 4
  %756 = getelementptr inbounds float, float* %754, i64 4
  %757 = bitcast float* %756 to <4 x i32>*
  store <4 x i32> %742, <4 x i32>* %757, align 4
  %758 = or i64 %751, 8
  %759 = add i64 %758, %732
  %760 = getelementptr inbounds float, float* %4, i64 %759
  %761 = bitcast float* %760 to <4 x i32>*
  store <4 x i32> %740, <4 x i32>* %761, align 4
  %762 = getelementptr inbounds float, float* %760, i64 4
  %763 = bitcast float* %762 to <4 x i32>*
  store <4 x i32> %742, <4 x i32>* %763, align 4
  %764 = or i64 %751, 16
  %765 = add i64 %764, %732
  %766 = getelementptr inbounds float, float* %4, i64 %765
  %767 = bitcast float* %766 to <4 x i32>*
  store <4 x i32> %740, <4 x i32>* %767, align 4
  %768 = getelementptr inbounds float, float* %766, i64 4
  %769 = bitcast float* %768 to <4 x i32>*
  store <4 x i32> %742, <4 x i32>* %769, align 4
  %770 = or i64 %751, 24
  %771 = add i64 %770, %732
  %772 = getelementptr inbounds float, float* %4, i64 %771
  %773 = bitcast float* %772 to <4 x i32>*
  store <4 x i32> %740, <4 x i32>* %773, align 4
  %774 = getelementptr inbounds float, float* %772, i64 4
  %775 = bitcast float* %774 to <4 x i32>*
  store <4 x i32> %742, <4 x i32>* %775, align 4
  %776 = add i64 %751, 32
  %777 = add i64 %752, -4
  %778 = icmp eq i64 %777, 0
  br i1 %778, label %779, label %750, !llvm.loop !40

779:                                              ; preds = %750, %736
  %780 = phi i64 [ 0, %736 ], [ %776, %750 ]
  %781 = icmp eq i64 %746, 0
  br i1 %781, label %793, label %782

782:                                              ; preds = %779, %782
  %783 = phi i64 [ %790, %782 ], [ %780, %779 ]
  %784 = phi i64 [ %791, %782 ], [ %746, %779 ]
  %785 = add i64 %783, %732
  %786 = getelementptr inbounds float, float* %4, i64 %785
  %787 = bitcast float* %786 to <4 x i32>*
  store <4 x i32> %740, <4 x i32>* %787, align 4
  %788 = getelementptr inbounds float, float* %786, i64 4
  %789 = bitcast float* %788 to <4 x i32>*
  store <4 x i32> %742, <4 x i32>* %789, align 4
  %790 = add i64 %783, 8
  %791 = add i64 %784, -1
  %792 = icmp eq i64 %791, 0
  br i1 %792, label %793, label %782, !llvm.loop !41

793:                                              ; preds = %782, %779
  %794 = icmp eq i64 %734, %737
  br i1 %794, label %803, label %795

795:                                              ; preds = %793, %731
  %796 = phi i64 [ %732, %731 ], [ %738, %793 ]
  br label %797

797:                                              ; preds = %795, %797
  %798 = phi i64 [ %801, %797 ], [ %796, %795 ]
  %799 = getelementptr inbounds float, float* %4, i64 %798
  %800 = bitcast float* %799 to i32*
  store i32 %729, i32* %800, align 4
  %801 = add nuw nsw i64 %798, 1
  %802 = icmp eq i64 %801, %733
  br i1 %802, label %803, label %797, !llvm.loop !42

803:                                              ; preds = %797, %793, %727
  %804 = add i32 %5, -1
  %805 = zext i32 %804 to i64
  %806 = getelementptr inbounds float, float* %4, i64 %805
  %807 = load float, float* %806, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %234) #18
  br label %808

808:                                              ; preds = %107, %103, %124, %27, %803
  %809 = phi float [ %807, %803 ], [ %126, %124 ], [ %3, %27 ], [ %3, %103 ], [ %3, %107 ]
  ret float %809
}

declare void @_ZN5blink11vector_math5VclipEPKfiS2_S2_Pfij(float*, i32, float*, float*, float*, i32, i32) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @_ZN5blink18AudioParamTimeline15FillWithDefaultEPffjj(%"class.blink::AudioParamTimeline"* nocapture readnone, float* nocapture, float, i32, i32) local_unnamed_addr #7 align 2 {
  %6 = icmp ult i32 %4, %3
  br i1 %6, label %7, label %78

7:                                                ; preds = %5
  %8 = zext i32 %4 to i64
  %9 = zext i32 %3 to i64
  %10 = sub nsw i64 %9, %8
  %11 = icmp ult i64 %10, 8
  br i1 %11, label %71, label %12

12:                                               ; preds = %7
  %13 = and i64 %10, -8
  %14 = add nsw i64 %13, %8
  %15 = insertelement <4 x float> undef, float %2, i32 0
  %16 = shufflevector <4 x float> %15, <4 x float> undef, <4 x i32> zeroinitializer
  %17 = insertelement <4 x float> undef, float %2, i32 0
  %18 = shufflevector <4 x float> %17, <4 x float> undef, <4 x i32> zeroinitializer
  %19 = add nsw i64 %13, -8
  %20 = lshr exact i64 %19, 3
  %21 = add nuw nsw i64 %20, 1
  %22 = and i64 %21, 3
  %23 = icmp ult i64 %19, 24
  br i1 %23, label %55, label %24

24:                                               ; preds = %12
  %25 = sub nsw i64 %21, %22
  br label %26

26:                                               ; preds = %26, %24
  %27 = phi i64 [ 0, %24 ], [ %52, %26 ]
  %28 = phi i64 [ %25, %24 ], [ %53, %26 ]
  %29 = add i64 %27, %8
  %30 = getelementptr inbounds float, float* %1, i64 %29
  %31 = bitcast float* %30 to <4 x float>*
  store <4 x float> %16, <4 x float>* %31, align 4
  %32 = getelementptr inbounds float, float* %30, i64 4
  %33 = bitcast float* %32 to <4 x float>*
  store <4 x float> %18, <4 x float>* %33, align 4
  %34 = or i64 %27, 8
  %35 = add i64 %34, %8
  %36 = getelementptr inbounds float, float* %1, i64 %35
  %37 = bitcast float* %36 to <4 x float>*
  store <4 x float> %16, <4 x float>* %37, align 4
  %38 = getelementptr inbounds float, float* %36, i64 4
  %39 = bitcast float* %38 to <4 x float>*
  store <4 x float> %18, <4 x float>* %39, align 4
  %40 = or i64 %27, 16
  %41 = add i64 %40, %8
  %42 = getelementptr inbounds float, float* %1, i64 %41
  %43 = bitcast float* %42 to <4 x float>*
  store <4 x float> %16, <4 x float>* %43, align 4
  %44 = getelementptr inbounds float, float* %42, i64 4
  %45 = bitcast float* %44 to <4 x float>*
  store <4 x float> %18, <4 x float>* %45, align 4
  %46 = or i64 %27, 24
  %47 = add i64 %46, %8
  %48 = getelementptr inbounds float, float* %1, i64 %47
  %49 = bitcast float* %48 to <4 x float>*
  store <4 x float> %16, <4 x float>* %49, align 4
  %50 = getelementptr inbounds float, float* %48, i64 4
  %51 = bitcast float* %50 to <4 x float>*
  store <4 x float> %18, <4 x float>* %51, align 4
  %52 = add i64 %27, 32
  %53 = add i64 %28, -4
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %26, !llvm.loop !43

55:                                               ; preds = %26, %12
  %56 = phi i64 [ 0, %12 ], [ %52, %26 ]
  %57 = icmp eq i64 %22, 0
  br i1 %57, label %69, label %58

58:                                               ; preds = %55, %58
  %59 = phi i64 [ %66, %58 ], [ %56, %55 ]
  %60 = phi i64 [ %67, %58 ], [ %22, %55 ]
  %61 = add i64 %59, %8
  %62 = getelementptr inbounds float, float* %1, i64 %61
  %63 = bitcast float* %62 to <4 x float>*
  store <4 x float> %16, <4 x float>* %63, align 4
  %64 = getelementptr inbounds float, float* %62, i64 4
  %65 = bitcast float* %64 to <4 x float>*
  store <4 x float> %18, <4 x float>* %65, align 4
  %66 = add i64 %59, 8
  %67 = add i64 %60, -1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %58, !llvm.loop !44

69:                                               ; preds = %58, %55
  %70 = icmp eq i64 %10, %13
  br i1 %70, label %78, label %71

71:                                               ; preds = %69, %7
  %72 = phi i64 [ %8, %7 ], [ %14, %69 ]
  br label %73

73:                                               ; preds = %71, %73
  %74 = phi i64 [ %76, %73 ], [ %72, %71 ]
  %75 = getelementptr inbounds float, float* %1, i64 %74
  store float %2, float* %75, align 4
  %76 = add nuw nsw i64 %74, 1
  %77 = icmp eq i64 %76, %9
  br i1 %77, label %78, label %73, !llvm.loop !45

78:                                               ; preds = %73, %69, %5
  %79 = phi i32 [ %4, %5 ], [ %3, %69 ], [ %3, %73 ]
  ret i32 %79
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18AudioParamTimeline27ClampNewEventsToCurrentTimeEd(%"class.blink::AudioParamTimeline"* nocapture, double) local_unnamed_addr #0 align 2 {
  %3 = alloca i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, align 8
  %4 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 1
  %5 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 1, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  %8 = getelementptr inbounds %"class.WTF::HashSet", %"class.WTF::HashSet"* %4, i64 0, i32 0, i32 0
  %9 = load %"class.blink::AudioParamTimeline::ParamEvent"**, %"class.blink::AudioParamTimeline::ParamEvent"*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 1, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %9, i64 %12
  br i1 %7, label %73, label %14

14:                                               ; preds = %2
  %15 = icmp eq i32 %11, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %14, %20
  %17 = phi %"class.blink::AudioParamTimeline::ParamEvent"** [ %21, %20 ], [ %9, %14 ]
  %18 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  switch i64 %19, label %23 [
    i64 -1, label %20
    i64 0, label %20
  ]

20:                                               ; preds = %16, %16
  %21 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %17, i64 1
  %22 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"** %21, %13
  br i1 %22, label %71, label %16

23:                                               ; preds = %16, %14
  %24 = phi %"class.blink::AudioParamTimeline::ParamEvent"** [ %9, %14 ], [ %17, %16 ]
  %25 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"** %24, %13
  br i1 %25, label %71, label %29

26:                                               ; preds = %37, %48, %45
  %27 = and i8 %38, 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %71, label %50

29:                                               ; preds = %23, %48
  %30 = phi i8 [ %38, %48 ], [ 0, %23 ]
  %31 = phi %"class.blink::AudioParamTimeline::ParamEvent"** [ %42, %48 ], [ %24, %23 ]
  %32 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %32, i64 0, i32 2
  %34 = load double, double* %33, align 8
  %35 = fcmp olt double %34, %1
  br i1 %35, label %36, label %37

36:                                               ; preds = %29
  store double %1, double* %33, align 8
  br label %37

37:                                               ; preds = %36, %29
  %38 = phi i8 [ 1, %36 ], [ %30, %29 ]
  %39 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %31, i64 1
  %40 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"** %39, %13
  br i1 %40, label %26, label %41

41:                                               ; preds = %37, %45
  %42 = phi %"class.blink::AudioParamTimeline::ParamEvent"** [ %46, %45 ], [ %39, %37 ]
  %43 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"** %42 to i64*
  %44 = load i64, i64* %43, align 8
  switch i64 %44, label %48 [
    i64 -1, label %45
    i64 0, label %45
  ]

45:                                               ; preds = %41, %41
  %46 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %42, i64 1
  %47 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"** %46, %13
  br i1 %47, label %26, label %41

48:                                               ; preds = %41
  %49 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"** %42, %13
  br i1 %49, label %26, label %29

50:                                               ; preds = %26
  %51 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %51, align 8
  %53 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %52, i64 %55
  %57 = bitcast i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57)
  store i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)* @_ZN5blink18AudioParamTimeline10ParamEvent13EventPreceedsERKNSt3__110unique_ptrIS1_NS2_14default_deleteIS1_EEEES8_, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %3, align 8
  %58 = icmp eq i32 %54, 0
  br i1 %58, label %67, label %59

59:                                               ; preds = %50, %64
  %60 = phi i64 [ %65, %64 ], [ %55, %50 ]
  %61 = shl i64 %60, 3
  %62 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %61, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #18
  %63 = icmp eq i8* %62, null
  br i1 %63, label %64, label %68

64:                                               ; preds = %59
  %65 = lshr i64 %60, 1
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %59

67:                                               ; preds = %64, %50
  call void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeEl(%"class.std::__1::unique_ptr"* %52, %"class.std::__1::unique_ptr"* %56, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** nonnull dereferenceable(8) %3, i64 %55, %"class.std::__1::unique_ptr"* null, i64 0) #18
  br label %70

68:                                               ; preds = %59
  %69 = bitcast i8* %62 to %"class.std::__1::unique_ptr"*
  call void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeEl(%"class.std::__1::unique_ptr"* %52, %"class.std::__1::unique_ptr"* %56, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** nonnull dereferenceable(8) %3, i64 %55, %"class.std::__1::unique_ptr"* nonnull %69, i64 %60) #18
  call void @_ZdlPv(i8* nonnull %62) #19
  br label %70

70:                                               ; preds = %67, %68
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57)
  br label %71

71:                                               ; preds = %20, %70, %26, %23
  %72 = load %"class.blink::AudioParamTimeline::ParamEvent"**, %"class.blink::AudioParamTimeline::ParamEvent"*** %8, align 8
  br label %73

73:                                               ; preds = %71, %2
  %74 = phi %"class.blink::AudioParamTimeline::ParamEvent"** [ %72, %71 ], [ %9, %2 ]
  %75 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"** %74, null
  br i1 %75, label %79, label %76

76:                                               ; preds = %73
  %77 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"** %74 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %77) #18
  %78 = bitcast %"class.WTF::HashSet"* %4 to i64*
  store atomic i64 0, i64* %78 monotonic, align 8
  store i32 0, i32* %10, align 8
  store i32 0, i32* %5, align 4
  br label %79

79:                                               ; preds = %73, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink18AudioParamTimeline24HandleAllEventsInThePastEddRfjPfj(%"class.blink::AudioParamTimeline"*, double, double, float* nocapture dereferenceable(4), i32, float* nocapture, i32) local_unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = add i32 %10, -1
  %12 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %8, i32 %11) #18
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %14, i64 0, i32 2
  %16 = load double, double* %15, align 8
  %17 = uitofp i32 %6 to double
  %18 = fmul double %17, 1.500000e+00
  %19 = fdiv double %18, %2
  %20 = fadd double %19, %16
  %21 = fcmp olt double %20, %1
  br i1 %21, label %22, label %153

22:                                               ; preds = %7
  %23 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %14, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 3
  br i1 %25, label %29, label %26

26:                                               ; preds = %22
  %27 = bitcast float* %3 to i32*
  %28 = load i32, i32* %27, align 4
  br label %53

29:                                               ; preds = %22
  %30 = load float, float* %3, align 4
  %31 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %14, i64 0, i32 1
  %32 = load float, float* %31, align 4
  %33 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %14, i64 0, i32 6
  %34 = load double, double* %33, align 8
  %35 = fmul double %34, 1.000000e+01
  %36 = fadd double %16, %35
  %37 = fcmp olt double %36, %1
  br i1 %37, label %50, label %38

38:                                               ; preds = %29
  %39 = fcmp oeq float %32, 0.000000e+00
  %40 = tail call float @llvm.fabs.f32(float %30) #18
  %41 = fcmp olt float %40, 0x3F07CD79C0000000
  %42 = and i1 %39, %41
  br i1 %42, label %50, label %43

43:                                               ; preds = %38
  %44 = fcmp une float %32, 0.000000e+00
  br i1 %44, label %45, label %153

45:                                               ; preds = %43
  %46 = fsub float %32, %30
  %47 = tail call float @llvm.fabs.f32(float %46) #18
  %48 = fmul float %40, 0x3F07CD79C0000000
  %49 = fcmp olt float %47, %48
  br i1 %49, label %50, label %153

50:                                               ; preds = %29, %45, %38
  store float %32, float* %3, align 4
  %51 = bitcast float %32 to i32
  %52 = bitcast float* %3 to i32*
  br label %53

53:                                               ; preds = %26, %50
  %54 = phi i32* [ %27, %26 ], [ %52, %50 ]
  %55 = phi i32 [ %28, %26 ], [ %51, %50 ]
  %56 = icmp eq i32 %4, 0
  br i1 %56, label %143, label %57

57:                                               ; preds = %53
  %58 = zext i32 %4 to i64
  %59 = icmp ult i32 %4, 8
  br i1 %59, label %133, label %60

60:                                               ; preds = %57
  %61 = and i64 %58, 4294967288
  %62 = insertelement <4 x i32> undef, i32 %55, i32 0
  %63 = shufflevector <4 x i32> %62, <4 x i32> undef, <4 x i32> zeroinitializer
  %64 = insertelement <4 x i32> undef, i32 %55, i32 0
  %65 = shufflevector <4 x i32> %64, <4 x i32> undef, <4 x i32> zeroinitializer
  %66 = add nsw i64 %61, -8
  %67 = lshr exact i64 %66, 3
  %68 = add nuw nsw i64 %67, 1
  %69 = and i64 %68, 7
  %70 = icmp ult i64 %66, 56
  br i1 %70, label %118, label %71

71:                                               ; preds = %60
  %72 = sub nsw i64 %68, %69
  br label %73

73:                                               ; preds = %73, %71
  %74 = phi i64 [ 0, %71 ], [ %115, %73 ]
  %75 = phi i64 [ %72, %71 ], [ %116, %73 ]
  %76 = getelementptr inbounds float, float* %5, i64 %74
  %77 = bitcast float* %76 to <4 x i32>*
  store <4 x i32> %63, <4 x i32>* %77, align 4
  %78 = getelementptr inbounds float, float* %76, i64 4
  %79 = bitcast float* %78 to <4 x i32>*
  store <4 x i32> %65, <4 x i32>* %79, align 4
  %80 = or i64 %74, 8
  %81 = getelementptr inbounds float, float* %5, i64 %80
  %82 = bitcast float* %81 to <4 x i32>*
  store <4 x i32> %63, <4 x i32>* %82, align 4
  %83 = getelementptr inbounds float, float* %81, i64 4
  %84 = bitcast float* %83 to <4 x i32>*
  store <4 x i32> %65, <4 x i32>* %84, align 4
  %85 = or i64 %74, 16
  %86 = getelementptr inbounds float, float* %5, i64 %85
  %87 = bitcast float* %86 to <4 x i32>*
  store <4 x i32> %63, <4 x i32>* %87, align 4
  %88 = getelementptr inbounds float, float* %86, i64 4
  %89 = bitcast float* %88 to <4 x i32>*
  store <4 x i32> %65, <4 x i32>* %89, align 4
  %90 = or i64 %74, 24
  %91 = getelementptr inbounds float, float* %5, i64 %90
  %92 = bitcast float* %91 to <4 x i32>*
  store <4 x i32> %63, <4 x i32>* %92, align 4
  %93 = getelementptr inbounds float, float* %91, i64 4
  %94 = bitcast float* %93 to <4 x i32>*
  store <4 x i32> %65, <4 x i32>* %94, align 4
  %95 = or i64 %74, 32
  %96 = getelementptr inbounds float, float* %5, i64 %95
  %97 = bitcast float* %96 to <4 x i32>*
  store <4 x i32> %63, <4 x i32>* %97, align 4
  %98 = getelementptr inbounds float, float* %96, i64 4
  %99 = bitcast float* %98 to <4 x i32>*
  store <4 x i32> %65, <4 x i32>* %99, align 4
  %100 = or i64 %74, 40
  %101 = getelementptr inbounds float, float* %5, i64 %100
  %102 = bitcast float* %101 to <4 x i32>*
  store <4 x i32> %63, <4 x i32>* %102, align 4
  %103 = getelementptr inbounds float, float* %101, i64 4
  %104 = bitcast float* %103 to <4 x i32>*
  store <4 x i32> %65, <4 x i32>* %104, align 4
  %105 = or i64 %74, 48
  %106 = getelementptr inbounds float, float* %5, i64 %105
  %107 = bitcast float* %106 to <4 x i32>*
  store <4 x i32> %63, <4 x i32>* %107, align 4
  %108 = getelementptr inbounds float, float* %106, i64 4
  %109 = bitcast float* %108 to <4 x i32>*
  store <4 x i32> %65, <4 x i32>* %109, align 4
  %110 = or i64 %74, 56
  %111 = getelementptr inbounds float, float* %5, i64 %110
  %112 = bitcast float* %111 to <4 x i32>*
  store <4 x i32> %63, <4 x i32>* %112, align 4
  %113 = getelementptr inbounds float, float* %111, i64 4
  %114 = bitcast float* %113 to <4 x i32>*
  store <4 x i32> %65, <4 x i32>* %114, align 4
  %115 = add i64 %74, 64
  %116 = add i64 %75, -8
  %117 = icmp eq i64 %116, 0
  br i1 %117, label %118, label %73, !llvm.loop !46

118:                                              ; preds = %73, %60
  %119 = phi i64 [ 0, %60 ], [ %115, %73 ]
  %120 = icmp eq i64 %69, 0
  br i1 %120, label %131, label %121

121:                                              ; preds = %118, %121
  %122 = phi i64 [ %128, %121 ], [ %119, %118 ]
  %123 = phi i64 [ %129, %121 ], [ %69, %118 ]
  %124 = getelementptr inbounds float, float* %5, i64 %122
  %125 = bitcast float* %124 to <4 x i32>*
  store <4 x i32> %63, <4 x i32>* %125, align 4
  %126 = getelementptr inbounds float, float* %124, i64 4
  %127 = bitcast float* %126 to <4 x i32>*
  store <4 x i32> %65, <4 x i32>* %127, align 4
  %128 = add i64 %122, 8
  %129 = add i64 %123, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %121, !llvm.loop !47

131:                                              ; preds = %121, %118
  %132 = icmp eq i64 %61, %58
  br i1 %132, label %141, label %133

133:                                              ; preds = %131, %57
  %134 = phi i64 [ 0, %57 ], [ %61, %131 ]
  br label %135

135:                                              ; preds = %133, %135
  %136 = phi i64 [ %139, %135 ], [ %134, %133 ]
  %137 = getelementptr inbounds float, float* %5, i64 %136
  %138 = bitcast float* %137 to i32*
  store i32 %55, i32* %138, align 4
  %139 = add nuw nsw i64 %136, 1
  %140 = icmp eq i64 %139, %58
  br i1 %140, label %141, label %135, !llvm.loop !48

141:                                              ; preds = %135, %131
  %142 = load i32, i32* %54, align 4
  br label %143

143:                                              ; preds = %141, %53
  %144 = phi i32 [ %142, %141 ], [ %55, %53 ]
  %145 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 3
  %146 = bitcast float* %145 to i32*
  store i32 %144, i32* %146, align 8
  %147 = load i32, i32* %9, align 4
  %148 = icmp ugt i32 %147, 1
  br i1 %148, label %149, label %153

149:                                              ; preds = %143
  %150 = add i32 %147, -1
  %151 = icmp ult i32 %150, %147
  %152 = select i1 %151, i32 %150, i32 %147
  tail call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE7EraseAtEjj(%"class.WTF::Vector"* %8, i32 0, i32 %152) #18
  br label %153

153:                                              ; preds = %149, %143, %45, %43, %7
  %154 = phi i1 [ false, %7 ], [ false, %43 ], [ false, %45 ], [ true, %143 ], [ true, %149 ]
  ret i1 %154
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i32 } @_ZN5blink18AudioParamTimeline16HandleFirstEventEPffjmmdmj(%"class.blink::AudioParamTimeline"*, float* nocapture, float, i32, i64, i64, double, i64, i32) local_unnamed_addr #0 align 2 {
  %10 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 0
  %11 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %10, i32 0) #18
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %13, i64 0, i32 2
  %15 = load double, double* %14, align 8
  %16 = uitofp i64 %4 to double
  %17 = fdiv double %16, %6
  %18 = fcmp ogt double %15, %17
  br i1 %18, label %19, label %108

19:                                               ; preds = %9
  %20 = fmul double %15, %6
  %21 = tail call double @llvm.ceil.f64(double %20)
  %22 = uitofp i64 %5 to double
  %23 = fcmp olt double %21, %22
  %24 = fptoui double %21 to i64
  %25 = select i1 %23, i64 %24, i64 %5
  %26 = sub i64 %25, %4
  %27 = trunc i64 %26 to i32
  %28 = icmp ugt i32 %27, %3
  %29 = select i1 %28, i32 %3, i32 %27
  %30 = icmp ugt i32 %29, %8
  br i1 %30, label %33, label %31

31:                                               ; preds = %19
  %32 = zext i32 %29 to i64
  br label %104

33:                                               ; preds = %19
  %34 = zext i32 %8 to i64
  %35 = zext i32 %29 to i64
  %36 = sub nsw i64 %35, %34
  %37 = icmp ult i64 %36, 8
  br i1 %37, label %97, label %38

38:                                               ; preds = %33
  %39 = and i64 %36, -8
  %40 = add nsw i64 %39, %34
  %41 = insertelement <4 x float> undef, float %2, i32 0
  %42 = shufflevector <4 x float> %41, <4 x float> undef, <4 x i32> zeroinitializer
  %43 = insertelement <4 x float> undef, float %2, i32 0
  %44 = shufflevector <4 x float> %43, <4 x float> undef, <4 x i32> zeroinitializer
  %45 = add nsw i64 %39, -8
  %46 = lshr exact i64 %45, 3
  %47 = add nuw nsw i64 %46, 1
  %48 = and i64 %47, 3
  %49 = icmp ult i64 %45, 24
  br i1 %49, label %81, label %50

50:                                               ; preds = %38
  %51 = sub nsw i64 %47, %48
  br label %52

52:                                               ; preds = %52, %50
  %53 = phi i64 [ 0, %50 ], [ %78, %52 ]
  %54 = phi i64 [ %51, %50 ], [ %79, %52 ]
  %55 = add i64 %53, %34
  %56 = getelementptr inbounds float, float* %1, i64 %55
  %57 = bitcast float* %56 to <4 x float>*
  store <4 x float> %42, <4 x float>* %57, align 4
  %58 = getelementptr inbounds float, float* %56, i64 4
  %59 = bitcast float* %58 to <4 x float>*
  store <4 x float> %44, <4 x float>* %59, align 4
  %60 = or i64 %53, 8
  %61 = add i64 %60, %34
  %62 = getelementptr inbounds float, float* %1, i64 %61
  %63 = bitcast float* %62 to <4 x float>*
  store <4 x float> %42, <4 x float>* %63, align 4
  %64 = getelementptr inbounds float, float* %62, i64 4
  %65 = bitcast float* %64 to <4 x float>*
  store <4 x float> %44, <4 x float>* %65, align 4
  %66 = or i64 %53, 16
  %67 = add i64 %66, %34
  %68 = getelementptr inbounds float, float* %1, i64 %67
  %69 = bitcast float* %68 to <4 x float>*
  store <4 x float> %42, <4 x float>* %69, align 4
  %70 = getelementptr inbounds float, float* %68, i64 4
  %71 = bitcast float* %70 to <4 x float>*
  store <4 x float> %44, <4 x float>* %71, align 4
  %72 = or i64 %53, 24
  %73 = add i64 %72, %34
  %74 = getelementptr inbounds float, float* %1, i64 %73
  %75 = bitcast float* %74 to <4 x float>*
  store <4 x float> %42, <4 x float>* %75, align 4
  %76 = getelementptr inbounds float, float* %74, i64 4
  %77 = bitcast float* %76 to <4 x float>*
  store <4 x float> %44, <4 x float>* %77, align 4
  %78 = add i64 %53, 32
  %79 = add i64 %54, -4
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %52, !llvm.loop !49

81:                                               ; preds = %52, %38
  %82 = phi i64 [ 0, %38 ], [ %78, %52 ]
  %83 = icmp eq i64 %48, 0
  br i1 %83, label %95, label %84

84:                                               ; preds = %81, %84
  %85 = phi i64 [ %92, %84 ], [ %82, %81 ]
  %86 = phi i64 [ %93, %84 ], [ %48, %81 ]
  %87 = add i64 %85, %34
  %88 = getelementptr inbounds float, float* %1, i64 %87
  %89 = bitcast float* %88 to <4 x float>*
  store <4 x float> %42, <4 x float>* %89, align 4
  %90 = getelementptr inbounds float, float* %88, i64 4
  %91 = bitcast float* %90 to <4 x float>*
  store <4 x float> %44, <4 x float>* %91, align 4
  %92 = add i64 %85, 8
  %93 = add i64 %86, -1
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %84, !llvm.loop !50

95:                                               ; preds = %84, %81
  %96 = icmp eq i64 %36, %39
  br i1 %96, label %104, label %97

97:                                               ; preds = %95, %33
  %98 = phi i64 [ %34, %33 ], [ %40, %95 ]
  br label %99

99:                                               ; preds = %97, %99
  %100 = phi i64 [ %102, %99 ], [ %98, %97 ]
  %101 = getelementptr inbounds float, float* %1, i64 %100
  store float %2, float* %101, align 4
  %102 = add nuw nsw i64 %100, 1
  %103 = icmp eq i64 %102, %35
  br i1 %103, label %104, label %99, !llvm.loop !51

104:                                              ; preds = %99, %95, %31
  %105 = phi i64 [ %32, %31 ], [ %35, %95 ], [ %35, %99 ]
  %106 = phi i32 [ %8, %31 ], [ %29, %95 ], [ %29, %99 ]
  %107 = add i64 %105, %7
  br label %108

108:                                              ; preds = %104, %9
  %109 = phi i64 [ %107, %104 ], [ %7, %9 ]
  %110 = phi i32 [ %106, %104 ], [ %8, %9 ]
  %111 = insertvalue { i64, i32 } undef, i64 %109, 0
  %112 = insertvalue { i64, i32 } %111, i32 %110, 1
  ret { i64, i32 } %112
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink18AudioParamTimeline14IsEventCurrentEPKNS0_10ParamEventES3_md(%"class.blink::AudioParamTimeline"* nocapture readnone, %"class.blink::AudioParamTimeline::ParamEvent"* nocapture readonly, %"class.blink::AudioParamTimeline::ParamEvent"* readonly, i64, double) local_unnamed_addr #6 align 2 {
  %6 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %2, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %2, i64 0, i32 2
  %9 = load double, double* %8, align 8
  %10 = uitofp i64 %3 to double
  %11 = fdiv double %10, %4
  %12 = fcmp olt double %9, %11
  br i1 %12, label %13, label %30

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %1, i64 0, i32 2
  %15 = load double, double* %14, align 8
  %16 = fmul double %15, %4
  %17 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %1, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %24, label %20

20:                                               ; preds = %13
  %21 = icmp ne i32 %18, 6
  %22 = fcmp ugt double %16, %10
  %23 = or i1 %21, %22
  br i1 %23, label %30, label %26

24:                                               ; preds = %13
  %25 = fcmp ugt double %16, %10
  br i1 %25, label %30, label %26

26:                                               ; preds = %20, %24
  %27 = fadd double %16, 1.000000e+00
  %28 = fcmp ogt double %27, %10
  br i1 %28, label %29, label %30

29:                                               ; preds = %26
  br label %30

30:                                               ; preds = %7, %5, %29, %20, %24, %26
  %31 = phi i1 [ false, %26 ], [ false, %24 ], [ false, %20 ], [ true, %29 ], [ true, %5 ], [ true, %7 ]
  ret i1 %31
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18AudioParamTimeline30ProcessSetTargetFollowedByRampEiRPNS0_10ParamEventENS1_4TypeEmddRf(%"class.blink::AudioParamTimeline"*, i32, %"class.blink::AudioParamTimeline::ParamEvent"** nocapture dereferenceable(8), i32, i64, double, double, float* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %9 = alloca %"class.std::__1::unique_ptr", align 8
  %10 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %2, align 8
  %11 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %10, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 3
  %14 = add i32 %3, -1
  %15 = icmp ult i32 %14, 2
  %16 = and i1 %15, %13
  br i1 %16, label %17, label %103

17:                                               ; preds = %8
  %18 = fmul double %5, 2.000000e+00
  %19 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %10, i64 0, i32 2
  %20 = load double, double* %19, align 8
  %21 = fmul double %18, %20
  %22 = shl i64 %4, 1
  %23 = uitofp i64 %22 to double
  %24 = fsub double %21, %23
  %25 = fadd double %24, 1.000000e+00
  %26 = tail call double @llvm.fabs.f64(double %25)
  %27 = fcmp ugt double %26, 1.000000e+00
  br i1 %27, label %46, label %28

28:                                               ; preds = %17
  %29 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %10, i64 0, i32 1
  %30 = load float, float* %29, align 4
  %31 = fpext float %30 to double
  %32 = load float, float* %7, align 4
  %33 = fsub float %32, %30
  %34 = fpext float %33 to double
  %35 = uitofp i64 %4 to double
  %36 = fdiv double %35, %5
  %37 = fsub double %36, %20
  %38 = fsub double -0.000000e+00, %37
  %39 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %10, i64 0, i32 6
  %40 = load double, double* %39, align 8
  %41 = fdiv double %38, %40
  %42 = tail call double @_ZN6fdlibm3expEd(double %41) #18
  %43 = fmul double %42, %34
  %44 = fadd double %43, %31
  %45 = fptrunc double %44 to float
  br label %60

46:                                               ; preds = %17
  %47 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %10, i64 0, i32 6
  %48 = load double, double* %47, align 8
  %49 = tail call double @_ZN5blink15audio_utilities33DiscreteTimeConstantForSampleRateEdd(double %48, double %6) #18
  %50 = fptrunc double %49 to float
  %51 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %2, align 8
  %52 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %51, i64 0, i32 1
  %53 = load float, float* %52, align 4
  %54 = load float, float* %7, align 4
  %55 = fsub float %53, %54
  %56 = fmul float %55, %50
  %57 = fadd float %54, %56
  %58 = uitofp i64 %4 to double
  %59 = fdiv double %58, %5
  br label %60

60:                                               ; preds = %46, %28
  %61 = phi double [ %59, %46 ], [ %36, %28 ]
  %62 = phi float [ %57, %46 ], [ %45, %28 ]
  store float %62, float* %7, align 4
  %63 = bitcast %"class.std::__1::unique_ptr"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #18
  %64 = tail call i8* @_Znwm(i64 96) #19
  %65 = bitcast i8* %64 to i32*
  store i32 0, i32* %65, align 8
  %66 = getelementptr inbounds i8, i8* %64, i64 4
  %67 = bitcast i8* %66 to float*
  store float %62, float* %67, align 4
  %68 = getelementptr inbounds i8, i8* %64, i64 8
  %69 = bitcast i8* %68 to double*
  store double %61, double* %69, align 8
  %70 = getelementptr inbounds i8, i8* %64, i64 16
  %71 = bitcast i8* %70 to float*
  store float 0.000000e+00, float* %71, align 8
  %72 = getelementptr inbounds i8, i8* %64, i64 24
  %73 = getelementptr inbounds i8, i8* %64, i64 80
  %74 = bitcast i8* %73 to i64*
  store i64 0, i64* %74, align 8
  %75 = getelementptr inbounds i8, i8* %64, i64 88
  store i8 0, i8* %75, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 52, i1 false) #18
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 0
  %78 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %77, i32 %1) #18
  %79 = ptrtoint i8* %64 to i64
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %76, align 8
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %78, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %80, align 8
  %82 = bitcast %"class.std::__1::unique_ptr"* %78 to i64*
  store i64 %79, i64* %82, align 8
  %83 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %81, null
  br i1 %83, label %98, label %84

84:                                               ; preds = %60
  %85 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %81, i64 0, i32 12
  tail call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* %85) #18
  %86 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %81, i64 0, i32 8, i32 0, i32 0, i32 0
  %87 = load float*, float** %86, align 8
  %88 = icmp eq float* %87, null
  %89 = bitcast float* %87 to i8*
  br i1 %88, label %96, label %90, !prof !9

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %81, i64 0, i32 8, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %95, label %94, !prof !2

94:                                               ; preds = %90
  store i32 0, i32* %91, align 4
  br label %95

95:                                               ; preds = %94, %90
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %89) #18
  br label %96

96:                                               ; preds = %95, %84
  %97 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"* %81 to i8*
  tail call void @_ZdlPv(i8* %97) #19
  br label %98

98:                                               ; preds = %60, %96
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %9) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %63) #18
  %99 = call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %77, i32 %1) #18
  %100 = bitcast %"class.std::__1::unique_ptr"* %99 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"** %2 to i64*
  store i64 %101, i64* %102, align 8
  br label %103

103:                                              ; preds = %98, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18AudioParamTimeline18HandleCancelValuesEPKNS0_10ParamEventEPS1_fd(%"class.std::__1::tuple.491"* noalias nocapture sret, %"class.blink::AudioParamTimeline"* nocapture readnone, %"class.blink::AudioParamTimeline::ParamEvent"* nocapture readonly, %"class.blink::AudioParamTimeline::ParamEvent"*, float, double) local_unnamed_addr #0 align 2 {
  %7 = bitcast float %4 to i32
  %8 = bitcast double %5 to i64
  %9 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %3, null
  br i1 %9, label %73, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %12, 5
  br i1 %13, label %14, label %73

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %3, i64 0, i32 12, i32 0, i32 0, i32 0
  %16 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %15, align 8
  %17 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %16, null
  br i1 %17, label %73, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %2, i64 0, i32 1
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %2, i64 0, i32 2
  %22 = load double, double* %21, align 8
  %23 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %2, i64 0, i32 0
  %24 = load i32, i32* %23, align 8
  switch i32 %24, label %73 [
    i32 5, label %25
    i32 1, label %25
    i32 2, label %25
    i32 6, label %25
    i32 0, label %25
  ]

25:                                               ; preds = %18, %18, %18, %18, %18
  %26 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %3, i64 0, i32 2
  %27 = load double, double* %26, align 8
  %28 = bitcast double %27 to i64
  %29 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %16, i64 0, i32 0
  %30 = load i32, i32* %29, align 8
  %31 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %3, i64 0, i32 13
  %32 = load i8, i8* %31, align 8, !range !10
  %33 = icmp eq i8 %32, 0
  br i1 %33, label %38, label %34

34:                                               ; preds = %25
  %35 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %3, i64 0, i32 1
  %36 = bitcast float* %35 to i32*
  %37 = load i32, i32* %36, align 4
  br label %73

38:                                               ; preds = %25
  switch i32 %30, label %69 [
    i32 1, label %39
    i32 2, label %54
  ]

39:                                               ; preds = %38
  %40 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %16, i64 0, i32 1
  %41 = load float, float* %40, align 4
  %42 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %16, i64 0, i32 2
  %43 = load double, double* %42, align 8
  %44 = fpext float %20 to double
  %45 = fsub float %41, %20
  %46 = fpext float %45 to double
  %47 = fsub double %27, %22
  %48 = fmul double %47, %46
  %49 = fsub double %43, %22
  %50 = fdiv double %48, %49
  %51 = fadd double %50, %44
  %52 = fptrunc double %51 to float
  %53 = bitcast float %52 to i32
  br label %69

54:                                               ; preds = %38
  %55 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %16, i64 0, i32 1
  %56 = load float, float* %55, align 4
  %57 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %16, i64 0, i32 2
  %58 = load double, double* %57, align 8
  %59 = fpext float %20 to double
  %60 = fdiv float %56, %20
  %61 = fpext float %60 to double
  %62 = fsub double %27, %22
  %63 = fsub double %58, %22
  %64 = fdiv double %62, %63
  %65 = tail call double @_ZN6fdlibm3powEdd(double %61, double %64) #18
  %66 = fmul double %65, %59
  %67 = fptrunc double %66 to float
  %68 = bitcast float %67 to i32
  br label %69

69:                                               ; preds = %38, %54, %39
  %70 = phi i32 [ %7, %38 ], [ %68, %54 ], [ %53, %39 ]
  %71 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %3, i64 0, i32 1
  %72 = bitcast float* %71 to i32*
  store i32 %70, i32* %72, align 4
  store i8 1, i8* %31, align 8
  br label %73

73:                                               ; preds = %6, %18, %69, %34, %14, %10
  %74 = phi i32 [ %7, %14 ], [ %7, %18 ], [ %37, %34 ], [ %70, %69 ], [ %7, %10 ], [ %7, %6 ]
  %75 = phi i64 [ %8, %14 ], [ %8, %18 ], [ %28, %34 ], [ %28, %69 ], [ %8, %10 ], [ %8, %6 ]
  %76 = phi i32 [ 5, %14 ], [ 5, %18 ], [ %30, %34 ], [ %30, %69 ], [ %12, %10 ], [ 7, %6 ]
  %77 = bitcast %"class.std::__1::tuple.491"* %0 to i32*
  store i32 %74, i32* %77, align 4, !alias.scope !52
  %78 = getelementptr inbounds %"class.std::__1::tuple.491", %"class.std::__1::tuple.491"* %0, i64 0, i32 0, i32 2
  %79 = bitcast %"class.std::__1::__tuple_leaf.494"* %78 to i64*
  store i64 %75, i64* %79, align 8, !alias.scope !52
  %80 = getelementptr inbounds %"class.std::__1::tuple.491", %"class.std::__1::tuple.491"* %0, i64 0, i32 0, i32 3, i32 0
  store i32 %76, i32* %80, align 4, !alias.scope !52
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.ceil.f64(double) #10

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink18AudioParamTimeline17ProcessLinearRampERKNS0_15AutomationStateEPfmfj(%"class.blink::AudioParamTimeline"* nocapture readnone, %"struct.blink::AudioParamTimeline::AutomationState"* nocapture readonly dereferenceable(104), float* nocapture, i64, float, i32) local_unnamed_addr #11 align 2 {
  %7 = bitcast float %4 to i32
  %8 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 5
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 8
  %11 = load double, double* %10, align 8
  %12 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 10
  %13 = load double, double* %12, align 8
  %14 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 7
  %15 = load float, float* %14, align 8
  %16 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 9
  %17 = load float, float* %16, align 8
  %18 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 3
  %19 = load double, double* %18, align 8
  %20 = fsub double %13, %11
  %21 = fcmp ugt double %20, 0x3810000000000000
  br i1 %21, label %22, label %25

22:                                               ; preds = %6
  %23 = fdiv double 1.000000e+00, %20
  %24 = fptrunc double %23 to float
  br label %25

25:                                               ; preds = %6, %22
  %26 = phi float [ %24, %22 ], [ 0.000000e+00, %6 ]
  %27 = fsub float %17, %15
  %28 = icmp ugt i32 %9, %5
  br i1 %28, label %29, label %73

29:                                               ; preds = %25
  %30 = fdiv double 4.000000e+00, %19
  %31 = fpext float %26 to double
  %32 = fmul double %30, %31
  %33 = fpext float %27 to double
  %34 = fmul double %32, %33
  %35 = fptrunc double %34 to float
  %36 = insertelement <4 x float> undef, float %35, i32 0
  %37 = shufflevector <4 x float> %36, <4 x float> undef, <4 x i32> zeroinitializer
  %38 = sub i32 %9, %5
  %39 = and i32 %38, -4
  %40 = add i32 %39, %5
  %41 = zext i32 %39 to i64
  %42 = add i64 %41, %3
  %43 = icmp ugt i32 %40, %5
  br i1 %43, label %44, label %73

44:                                               ; preds = %29
  %45 = insertelement <4 x float> undef, float %15, i32 0
  %46 = shufflevector <4 x float> %45, <4 x float> undef, <4 x i32> zeroinitializer
  %47 = fdiv double 1.000000e+00, %19
  %48 = fptrunc double %47 to float
  %49 = insertelement <4 x float> undef, float %48, i32 0
  %50 = shufflevector <4 x float> %49, <4 x float> undef, <4 x i32> zeroinitializer
  %51 = fmul <4 x float> %50, <float 0.000000e+00, float 1.000000e+00, float 2.000000e+00, float 3.000000e+00>
  %52 = uitofp i64 %3 to double
  %53 = fdiv double %52, %19
  %54 = fsub double %53, %11
  %55 = fptrunc double %54 to float
  %56 = insertelement <4 x float> undef, float %55, i32 0
  %57 = shufflevector <4 x float> %56, <4 x float> undef, <4 x i32> zeroinitializer
  %58 = fadd <4 x float> %51, %57
  %59 = fmul float %27, %26
  %60 = insertelement <4 x float> undef, float %59, i32 0
  %61 = shufflevector <4 x float> %60, <4 x float> undef, <4 x i32> zeroinitializer
  %62 = fmul <4 x float> %58, %61
  %63 = fadd <4 x float> %46, %62
  br label %64

64:                                               ; preds = %44, %64
  %65 = phi <4 x float> [ %70, %64 ], [ %63, %44 ]
  %66 = phi i32 [ %71, %64 ], [ %5, %44 ]
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds float, float* %2, i64 %67
  %69 = bitcast float* %68 to <4 x float>*
  store <4 x float> %65, <4 x float>* %69, align 1
  %70 = fadd <4 x float> %37, %65
  %71 = add i32 %66, 4
  %72 = icmp ult i32 %71, %40
  br i1 %72, label %64, label %73

73:                                               ; preds = %64, %29, %25
  %74 = phi i64 [ %3, %25 ], [ %42, %29 ], [ %42, %64 ]
  %75 = phi i32 [ %5, %25 ], [ %5, %29 ], [ %71, %64 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %83, label %77

77:                                               ; preds = %73
  %78 = add i32 %75, -1
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds float, float* %2, i64 %79
  %81 = bitcast float* %80 to i32*
  %82 = load i32, i32* %81, align 4
  br label %83

83:                                               ; preds = %73, %77
  %84 = phi i32 [ %7, %73 ], [ %82, %77 ]
  %85 = icmp ult i32 %75, %9
  br i1 %85, label %88, label %86

86:                                               ; preds = %83
  %87 = zext i32 %75 to i64
  br label %151

88:                                               ; preds = %83
  %89 = fpext float %26 to double
  %90 = zext i32 %75 to i64
  %91 = zext i32 %9 to i64
  %92 = sub nsw i64 %91, %90
  %93 = icmp ult i64 %92, 4
  br i1 %93, label %130, label %94

94:                                               ; preds = %88
  %95 = and i64 %92, -4
  %96 = add nsw i64 %95, %90
  %97 = add i64 %74, %95
  %98 = insertelement <4 x i64> undef, i64 %74, i32 0
  %99 = shufflevector <4 x i64> %98, <4 x i64> undef, <4 x i32> zeroinitializer
  %100 = add <4 x i64> %99, <i64 0, i64 1, i64 2, i64 3>
  %101 = insertelement <4 x double> undef, double %19, i32 0
  %102 = shufflevector <4 x double> %101, <4 x double> undef, <4 x i32> zeroinitializer
  %103 = insertelement <4 x double> undef, double %11, i32 0
  %104 = shufflevector <4 x double> %103, <4 x double> undef, <4 x i32> zeroinitializer
  %105 = insertelement <4 x double> undef, double %89, i32 0
  %106 = shufflevector <4 x double> %105, <4 x double> undef, <4 x i32> zeroinitializer
  %107 = insertelement <4 x float> undef, float %27, i32 0
  %108 = shufflevector <4 x float> %107, <4 x float> undef, <4 x i32> zeroinitializer
  %109 = insertelement <4 x float> undef, float %15, i32 0
  %110 = shufflevector <4 x float> %109, <4 x float> undef, <4 x i32> zeroinitializer
  br label %111

111:                                              ; preds = %111, %94
  %112 = phi i64 [ 0, %94 ], [ %124, %111 ]
  %113 = phi <4 x i64> [ %100, %94 ], [ %125, %111 ]
  %114 = add i64 %112, %90
  %115 = uitofp <4 x i64> %113 to <4 x double>
  %116 = fdiv <4 x double> %115, %102
  %117 = fsub <4 x double> %116, %104
  %118 = fmul <4 x double> %117, %106
  %119 = fptrunc <4 x double> %118 to <4 x float>
  %120 = fmul <4 x float> %108, %119
  %121 = fadd <4 x float> %110, %120
  %122 = getelementptr inbounds float, float* %2, i64 %114
  %123 = bitcast float* %122 to <4 x float>*
  store <4 x float> %121, <4 x float>* %123, align 4
  %124 = add i64 %112, 4
  %125 = add <4 x i64> %113, <i64 4, i64 4, i64 4, i64 4>
  %126 = icmp eq i64 %124, %95
  br i1 %126, label %127, label %111, !llvm.loop !55

127:                                              ; preds = %111
  %128 = icmp eq i64 %92, %95
  %129 = extractelement <4 x float> %121, i32 3
  br i1 %128, label %147, label %130

130:                                              ; preds = %127, %88
  %131 = phi i64 [ %90, %88 ], [ %96, %127 ]
  %132 = phi i64 [ %74, %88 ], [ %97, %127 ]
  br label %133

133:                                              ; preds = %130, %133
  %134 = phi i64 [ %145, %133 ], [ %131, %130 ]
  %135 = phi i64 [ %144, %133 ], [ %132, %130 ]
  %136 = uitofp i64 %135 to double
  %137 = fdiv double %136, %19
  %138 = fsub double %137, %11
  %139 = fmul double %138, %89
  %140 = fptrunc double %139 to float
  %141 = fmul float %27, %140
  %142 = fadd float %15, %141
  %143 = getelementptr inbounds float, float* %2, i64 %134
  store float %142, float* %143, align 4
  %144 = add i64 %135, 1
  %145 = add nuw nsw i64 %134, 1
  %146 = icmp eq i64 %145, %91
  br i1 %146, label %147, label %133, !llvm.loop !56

147:                                              ; preds = %133, %127
  %148 = phi float [ %129, %127 ], [ %142, %133 ]
  %149 = phi i64 [ %97, %127 ], [ %144, %133 ]
  %150 = bitcast float %148 to i32
  br label %151

151:                                              ; preds = %86, %147
  %152 = phi i64 [ %87, %86 ], [ %91, %147 ]
  %153 = phi i64 [ %74, %86 ], [ %149, %147 ]
  %154 = phi i32 [ %84, %86 ], [ %150, %147 ]
  %155 = insertvalue { i64, i64 } undef, i64 %153, 0
  %156 = shl nuw i64 %152, 32
  %157 = zext i32 %154 to i64
  %158 = or i64 %156, %157
  %159 = insertvalue { i64, i64 } %155, i64 %158, 1
  ret { i64, i64 } %159
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink18AudioParamTimeline22ProcessExponentialRampERKNS0_15AutomationStateEPfmfj(%"class.blink::AudioParamTimeline"* nocapture readnone, %"struct.blink::AudioParamTimeline::AutomationState"* nocapture readonly dereferenceable(104), float* nocapture, i64, float, i32) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 5
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 8
  %10 = load double, double* %9, align 8
  %11 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 10
  %12 = load double, double* %11, align 8
  %13 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 7
  %14 = load float, float* %13, align 8
  %15 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 9
  %16 = load float, float* %15, align 8
  %17 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 3
  %18 = load double, double* %17, align 8
  %19 = fmul float %14, %16
  %20 = fcmp ugt float %19, 0.000000e+00
  br i1 %20, label %94, label %21

21:                                               ; preds = %6
  %22 = icmp ugt i32 %8, %5
  br i1 %22, label %23, label %170

23:                                               ; preds = %21
  %24 = zext i32 %5 to i64
  %25 = zext i32 %8 to i64
  %26 = sub nsw i64 %25, %24
  %27 = icmp ult i64 %26, 8
  br i1 %27, label %87, label %28

28:                                               ; preds = %23
  %29 = and i64 %26, -8
  %30 = add nsw i64 %29, %24
  %31 = insertelement <4 x float> undef, float %14, i32 0
  %32 = shufflevector <4 x float> %31, <4 x float> undef, <4 x i32> zeroinitializer
  %33 = insertelement <4 x float> undef, float %14, i32 0
  %34 = shufflevector <4 x float> %33, <4 x float> undef, <4 x i32> zeroinitializer
  %35 = add nsw i64 %29, -8
  %36 = lshr exact i64 %35, 3
  %37 = add nuw nsw i64 %36, 1
  %38 = and i64 %37, 3
  %39 = icmp ult i64 %35, 24
  br i1 %39, label %71, label %40

40:                                               ; preds = %28
  %41 = sub nsw i64 %37, %38
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i64 [ 0, %40 ], [ %68, %42 ]
  %44 = phi i64 [ %41, %40 ], [ %69, %42 ]
  %45 = add i64 %43, %24
  %46 = getelementptr inbounds float, float* %2, i64 %45
  %47 = bitcast float* %46 to <4 x float>*
  store <4 x float> %32, <4 x float>* %47, align 4
  %48 = getelementptr inbounds float, float* %46, i64 4
  %49 = bitcast float* %48 to <4 x float>*
  store <4 x float> %34, <4 x float>* %49, align 4
  %50 = or i64 %43, 8
  %51 = add i64 %50, %24
  %52 = getelementptr inbounds float, float* %2, i64 %51
  %53 = bitcast float* %52 to <4 x float>*
  store <4 x float> %32, <4 x float>* %53, align 4
  %54 = getelementptr inbounds float, float* %52, i64 4
  %55 = bitcast float* %54 to <4 x float>*
  store <4 x float> %34, <4 x float>* %55, align 4
  %56 = or i64 %43, 16
  %57 = add i64 %56, %24
  %58 = getelementptr inbounds float, float* %2, i64 %57
  %59 = bitcast float* %58 to <4 x float>*
  store <4 x float> %32, <4 x float>* %59, align 4
  %60 = getelementptr inbounds float, float* %58, i64 4
  %61 = bitcast float* %60 to <4 x float>*
  store <4 x float> %34, <4 x float>* %61, align 4
  %62 = or i64 %43, 24
  %63 = add i64 %62, %24
  %64 = getelementptr inbounds float, float* %2, i64 %63
  %65 = bitcast float* %64 to <4 x float>*
  store <4 x float> %32, <4 x float>* %65, align 4
  %66 = getelementptr inbounds float, float* %64, i64 4
  %67 = bitcast float* %66 to <4 x float>*
  store <4 x float> %34, <4 x float>* %67, align 4
  %68 = add i64 %43, 32
  %69 = add i64 %44, -4
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %42, !llvm.loop !57

71:                                               ; preds = %42, %28
  %72 = phi i64 [ 0, %28 ], [ %68, %42 ]
  %73 = icmp eq i64 %38, 0
  br i1 %73, label %85, label %74

74:                                               ; preds = %71, %74
  %75 = phi i64 [ %82, %74 ], [ %72, %71 ]
  %76 = phi i64 [ %83, %74 ], [ %38, %71 ]
  %77 = add i64 %75, %24
  %78 = getelementptr inbounds float, float* %2, i64 %77
  %79 = bitcast float* %78 to <4 x float>*
  store <4 x float> %32, <4 x float>* %79, align 4
  %80 = getelementptr inbounds float, float* %78, i64 4
  %81 = bitcast float* %80 to <4 x float>*
  store <4 x float> %34, <4 x float>* %81, align 4
  %82 = add i64 %75, 8
  %83 = add i64 %76, -1
  %84 = icmp eq i64 %83, 0
  br i1 %84, label %85, label %74, !llvm.loop !58

85:                                               ; preds = %74, %71
  %86 = icmp eq i64 %26, %29
  br i1 %86, label %170, label %87

87:                                               ; preds = %85, %23
  %88 = phi i64 [ %24, %23 ], [ %30, %85 ]
  br label %89

89:                                               ; preds = %87, %89
  %90 = phi i64 [ %92, %89 ], [ %88, %87 ]
  %91 = getelementptr inbounds float, float* %2, i64 %90
  store float %14, float* %91, align 4
  %92 = add nuw nsw i64 %90, 1
  %93 = icmp eq i64 %92, %25
  br i1 %93, label %170, label %89, !llvm.loop !59

94:                                               ; preds = %6
  %95 = fsub double %12, %10
  %96 = fmul double %95, %18
  %97 = fdiv float %16, %14
  %98 = fdiv double 1.000000e+00, %96
  %99 = fptrunc double %98 to float
  %100 = tail call float @_ZN6fdlibm4powfEff(float %97, float %99) #18
  %101 = fpext float %14 to double
  %102 = fpext float %16 to double
  %103 = fdiv double %102, %101
  %104 = uitofp i64 %3 to double
  %105 = fdiv double %104, %18
  %106 = fsub double %105, %10
  %107 = fdiv double %106, %95
  %108 = tail call double @_ZN6fdlibm3powEdd(double %103, double %107) #18
  %109 = fmul double %108, %101
  %110 = fptrunc double %109 to float
  %111 = icmp ugt i32 %8, %5
  br i1 %111, label %112, label %158

112:                                              ; preds = %94
  %113 = zext i32 %5 to i64
  %114 = xor i32 %5, -1
  %115 = add i32 %8, %114
  %116 = zext i32 %115 to i64
  %117 = add i64 %116, %3
  %118 = zext i32 %8 to i64
  %119 = sub nsw i64 %118, %113
  %120 = xor i64 %113, -1
  %121 = add nsw i64 %120, %118
  %122 = and i64 %119, 3
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %133, label %124

124:                                              ; preds = %112, %124
  %125 = phi i64 [ %130, %124 ], [ %113, %112 ]
  %126 = phi float [ %129, %124 ], [ %110, %112 ]
  %127 = phi i64 [ %131, %124 ], [ %122, %112 ]
  %128 = getelementptr inbounds float, float* %2, i64 %125
  store float %126, float* %128, align 4
  %129 = fmul float %100, %126
  %130 = add nuw nsw i64 %125, 1
  %131 = add i64 %127, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %124, !llvm.loop !60

133:                                              ; preds = %124, %112
  %134 = phi float [ undef, %112 ], [ %129, %124 ]
  %135 = phi i64 [ %113, %112 ], [ %130, %124 ]
  %136 = phi float [ %110, %112 ], [ %129, %124 ]
  %137 = icmp ult i64 %121, 3
  br i1 %137, label %154, label %138

138:                                              ; preds = %133, %138
  %139 = phi i64 [ %152, %138 ], [ %135, %133 ]
  %140 = phi float [ %151, %138 ], [ %136, %133 ]
  %141 = getelementptr inbounds float, float* %2, i64 %139
  store float %140, float* %141, align 4
  %142 = fmul float %100, %140
  %143 = add nuw nsw i64 %139, 1
  %144 = getelementptr inbounds float, float* %2, i64 %143
  store float %142, float* %144, align 4
  %145 = fmul float %100, %142
  %146 = add nuw nsw i64 %139, 2
  %147 = getelementptr inbounds float, float* %2, i64 %146
  store float %145, float* %147, align 4
  %148 = fmul float %100, %145
  %149 = add nuw nsw i64 %139, 3
  %150 = getelementptr inbounds float, float* %2, i64 %149
  store float %148, float* %150, align 4
  %151 = fmul float %100, %148
  %152 = add nuw nsw i64 %139, 4
  %153 = icmp eq i64 %152, %118
  br i1 %153, label %154, label %138

154:                                              ; preds = %138, %133
  %155 = phi float [ %134, %133 ], [ %151, %138 ]
  %156 = add i64 %117, 1
  %157 = uitofp i64 %156 to double
  br label %158

158:                                              ; preds = %154, %94
  %159 = phi double [ %157, %154 ], [ %104, %94 ]
  %160 = phi i64 [ %156, %154 ], [ %3, %94 ]
  %161 = phi float [ %155, %154 ], [ %110, %94 ]
  %162 = phi i32 [ %8, %154 ], [ %5, %94 ]
  %163 = icmp eq i32 %162, 0
  %164 = fdiv float %161, %100
  %165 = select i1 %163, float %161, float %164
  %166 = fmul double %12, %18
  %167 = fadd double %166, -5.000000e-01
  %168 = fcmp olt double %167, %159
  br i1 %168, label %169, label %170

169:                                              ; preds = %158
  br label %170

170:                                              ; preds = %89, %85, %21, %158, %169
  %171 = phi i64 [ %160, %169 ], [ %160, %158 ], [ %3, %21 ], [ %3, %85 ], [ %3, %89 ]
  %172 = phi float [ %16, %169 ], [ %165, %158 ], [ %14, %21 ], [ %14, %85 ], [ %14, %89 ]
  %173 = phi i32 [ %162, %169 ], [ %162, %158 ], [ %5, %21 ], [ %8, %85 ], [ %8, %89 ]
  %174 = bitcast float %172 to i32
  %175 = insertvalue { i64, i64 } undef, i64 %171, 0
  %176 = zext i32 %173 to i64
  %177 = shl nuw i64 %176, 32
  %178 = zext i32 %174 to i64
  %179 = or i64 %177, %178
  %180 = insertvalue { i64, i64 } %175, i64 %179, 1
  ret { i64, i64 } %180
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink18AudioParamTimeline19ProcessCancelValuesERKNS0_15AutomationStateEPfmfj(%"class.blink::AudioParamTimeline"*, %"struct.blink::AudioParamTimeline::AutomationState"* nocapture readonly dereferenceable(104), float* nocapture, i64, float, i32) local_unnamed_addr #0 align 2 {
  %7 = bitcast float %4 to i32
  %8 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 5
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 4
  %11 = load double, double* %10, align 8
  %12 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 6
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 11
  %15 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %14, align 8
  %16 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 12
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %15, i64 0, i32 13
  %19 = load i8, i8* %18, align 8, !range !10
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %25, label %21

21:                                               ; preds = %6
  %22 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %15, i64 0, i32 1
  %23 = bitcast float* %22 to i32*
  %24 = load i32, i32* %23, align 4
  br label %66

25:                                               ; preds = %6
  %26 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 3
  %27 = load double, double* %26, align 8
  %28 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 8
  %29 = load double, double* %28, align 8
  %30 = fmul double %27, %29
  %31 = icmp sgt i32 %17, 0
  br i1 %31, label %32, label %66

32:                                               ; preds = %25
  %33 = uitofp i64 %3 to double
  %34 = fcmp ole double %30, %33
  %35 = fadd double %30, 1.000000e+00
  %36 = fcmp ogt double %35, %33
  %37 = and i1 %34, %36
  br i1 %37, label %38, label %66

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 0
  %40 = add nsw i32 %17, -1
  %41 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %39, i32 %40) #18
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %41, i64 0, i32 0, i32 0, i32 0
  %43 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %43, i64 0, i32 0
  %45 = load i32, i32* %44, align 8
  %46 = icmp eq i32 %45, 3
  br i1 %46, label %47, label %66

47:                                               ; preds = %38
  %48 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %39, i32 %40) #18
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %48, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %50, i64 0, i32 1
  %52 = load float, float* %51, align 4
  %53 = tail call dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"* %39, i32 %40) #18
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %53, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %55, i64 0, i32 6
  %57 = load double, double* %56, align 8
  %58 = fptrunc double %57 to float
  %59 = fpext float %58 to double
  %60 = tail call double @_ZN5blink15audio_utilities33DiscreteTimeConstantForSampleRateEdd(double %59, double %11) #18
  %61 = fptrunc double %60 to float
  %62 = fsub float %52, %4
  %63 = fmul float %62, %61
  %64 = fadd float %63, %4
  %65 = bitcast float %64 to i32
  br label %66

66:                                               ; preds = %25, %32, %47, %38, %21
  %67 = phi i32 [ %24, %21 ], [ %65, %47 ], [ %7, %38 ], [ %7, %32 ], [ %7, %25 ]
  %68 = icmp ugt i32 %9, %5
  br i1 %68, label %69, label %141

69:                                               ; preds = %66
  %70 = zext i32 %5 to i64
  %71 = zext i32 %9 to i64
  %72 = sub nsw i64 %71, %70
  %73 = icmp ult i64 %72, 8
  br i1 %73, label %133, label %74

74:                                               ; preds = %69
  %75 = and i64 %72, -8
  %76 = add nsw i64 %75, %70
  %77 = insertelement <4 x i32> undef, i32 %67, i32 0
  %78 = shufflevector <4 x i32> %77, <4 x i32> undef, <4 x i32> zeroinitializer
  %79 = insertelement <4 x i32> undef, i32 %67, i32 0
  %80 = shufflevector <4 x i32> %79, <4 x i32> undef, <4 x i32> zeroinitializer
  %81 = add nsw i64 %75, -8
  %82 = lshr exact i64 %81, 3
  %83 = add nuw nsw i64 %82, 1
  %84 = and i64 %83, 3
  %85 = icmp ult i64 %81, 24
  br i1 %85, label %117, label %86

86:                                               ; preds = %74
  %87 = sub nsw i64 %83, %84
  br label %88

88:                                               ; preds = %88, %86
  %89 = phi i64 [ 0, %86 ], [ %114, %88 ]
  %90 = phi i64 [ %87, %86 ], [ %115, %88 ]
  %91 = add i64 %89, %70
  %92 = getelementptr inbounds float, float* %2, i64 %91
  %93 = bitcast float* %92 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %93, align 4
  %94 = getelementptr inbounds float, float* %92, i64 4
  %95 = bitcast float* %94 to <4 x i32>*
  store <4 x i32> %80, <4 x i32>* %95, align 4
  %96 = or i64 %89, 8
  %97 = add i64 %96, %70
  %98 = getelementptr inbounds float, float* %2, i64 %97
  %99 = bitcast float* %98 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %99, align 4
  %100 = getelementptr inbounds float, float* %98, i64 4
  %101 = bitcast float* %100 to <4 x i32>*
  store <4 x i32> %80, <4 x i32>* %101, align 4
  %102 = or i64 %89, 16
  %103 = add i64 %102, %70
  %104 = getelementptr inbounds float, float* %2, i64 %103
  %105 = bitcast float* %104 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %105, align 4
  %106 = getelementptr inbounds float, float* %104, i64 4
  %107 = bitcast float* %106 to <4 x i32>*
  store <4 x i32> %80, <4 x i32>* %107, align 4
  %108 = or i64 %89, 24
  %109 = add i64 %108, %70
  %110 = getelementptr inbounds float, float* %2, i64 %109
  %111 = bitcast float* %110 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %111, align 4
  %112 = getelementptr inbounds float, float* %110, i64 4
  %113 = bitcast float* %112 to <4 x i32>*
  store <4 x i32> %80, <4 x i32>* %113, align 4
  %114 = add i64 %89, 32
  %115 = add i64 %90, -4
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %88, !llvm.loop !61

117:                                              ; preds = %88, %74
  %118 = phi i64 [ 0, %74 ], [ %114, %88 ]
  %119 = icmp eq i64 %84, 0
  br i1 %119, label %131, label %120

120:                                              ; preds = %117, %120
  %121 = phi i64 [ %128, %120 ], [ %118, %117 ]
  %122 = phi i64 [ %129, %120 ], [ %84, %117 ]
  %123 = add i64 %121, %70
  %124 = getelementptr inbounds float, float* %2, i64 %123
  %125 = bitcast float* %124 to <4 x i32>*
  store <4 x i32> %78, <4 x i32>* %125, align 4
  %126 = getelementptr inbounds float, float* %124, i64 4
  %127 = bitcast float* %126 to <4 x i32>*
  store <4 x i32> %80, <4 x i32>* %127, align 4
  %128 = add i64 %121, 8
  %129 = add i64 %122, -1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %120, !llvm.loop !62

131:                                              ; preds = %120, %117
  %132 = icmp eq i64 %72, %75
  br i1 %132, label %141, label %133

133:                                              ; preds = %131, %69
  %134 = phi i64 [ %70, %69 ], [ %76, %131 ]
  br label %135

135:                                              ; preds = %133, %135
  %136 = phi i64 [ %139, %135 ], [ %134, %133 ]
  %137 = getelementptr inbounds float, float* %2, i64 %136
  %138 = bitcast float* %137 to i32*
  store i32 %67, i32* %138, align 4
  %139 = add nuw nsw i64 %136, 1
  %140 = icmp eq i64 %139, %71
  br i1 %140, label %141, label %135, !llvm.loop !63

141:                                              ; preds = %135, %131, %66
  %142 = phi i32 [ %5, %66 ], [ %9, %131 ], [ %9, %135 ]
  %143 = insertvalue { i64, i64 } undef, i64 %13, 0
  %144 = zext i32 %142 to i64
  %145 = shl nuw i64 %144, 32
  %146 = zext i32 %67 to i64
  %147 = or i64 %145, %146
  %148 = insertvalue { i64, i64 } %143, i64 %147, 1
  ret { i64, i64 } %148
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink18AudioParamTimeline16ProcessSetTargetERKNS0_15AutomationStateEPfmfj(%"class.blink::AudioParamTimeline"* nocapture readnone, %"struct.blink::AudioParamTimeline::AutomationState"* nocapture readonly dereferenceable(104), float* nocapture, i64, float, i32) local_unnamed_addr #9 align 2 {
  %7 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 5
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 8
  %10 = load double, double* %9, align 8
  %11 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 7
  %12 = load float, float* %11, align 8
  %13 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 3
  %14 = load double, double* %13, align 8
  %15 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 4
  %16 = load double, double* %15, align 8
  %17 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 6
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 11
  %20 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %20, i64 0, i32 6
  %22 = load double, double* %21, align 8
  %23 = fptrunc double %22 to float
  %24 = fpext float %23 to double
  %25 = tail call double @_ZN5blink15audio_utilities33DiscreteTimeConstantForSampleRateEdd(double %24, double %16) #18
  %26 = fptrunc double %25 to float
  %27 = fmul double %10, %14
  %28 = uitofp i64 %3 to double
  %29 = fcmp ole double %27, %28
  %30 = fadd double %27, 1.000000e+00
  %31 = fcmp ogt double %30, %28
  %32 = and i1 %29, %31
  br i1 %32, label %33, label %45

33:                                               ; preds = %6
  %34 = fpext float %12 to double
  %35 = fsub float %4, %12
  %36 = fpext float %35 to double
  %37 = fdiv double %28, %14
  %38 = fsub double %37, %10
  %39 = fsub double -0.000000e+00, %38
  %40 = fdiv double %39, %24
  %41 = tail call double @_ZN6fdlibm3expEd(double %40) #18
  %42 = fmul double %41, %36
  %43 = fadd double %42, %34
  %44 = fptrunc double %43 to float
  br label %50

45:                                               ; preds = %6
  %46 = fsub float %12, %4
  %47 = fmul float %46, %26
  %48 = fadd float %47, %4
  %49 = fdiv double %28, %14
  br label %50

50:                                               ; preds = %45, %33
  %51 = phi double [ %49, %45 ], [ %37, %33 ]
  %52 = phi float [ %48, %45 ], [ %44, %33 ]
  %53 = bitcast float %52 to i32
  %54 = fmul double %24, 1.000000e+01
  %55 = fadd double %10, %54
  %56 = fcmp olt double %55, %51
  br i1 %56, label %69, label %57

57:                                               ; preds = %50
  %58 = fcmp oeq float %12, 0.000000e+00
  %59 = tail call float @llvm.fabs.f32(float %52) #18
  %60 = fcmp olt float %59, 0x3F07CD79C0000000
  %61 = and i1 %58, %60
  br i1 %61, label %69, label %62

62:                                               ; preds = %57
  %63 = fcmp une float %12, 0.000000e+00
  br i1 %63, label %64, label %145

64:                                               ; preds = %62
  %65 = fsub float %12, %52
  %66 = tail call float @llvm.fabs.f32(float %65) #18
  %67 = fmul float %59, 0x3F07CD79C0000000
  %68 = fcmp olt float %66, %67
  br i1 %68, label %69, label %145

69:                                               ; preds = %50, %64, %57
  %70 = sub i32 %8, %5
  %71 = zext i32 %70 to i64
  %72 = add i64 %71, %3
  %73 = icmp ugt i32 %8, %5
  br i1 %73, label %74, label %252

74:                                               ; preds = %69
  %75 = zext i32 %5 to i64
  %76 = zext i32 %8 to i64
  %77 = sub nsw i64 %76, %75
  %78 = icmp ult i64 %77, 8
  br i1 %78, label %138, label %79

79:                                               ; preds = %74
  %80 = and i64 %77, -8
  %81 = add nsw i64 %80, %75
  %82 = insertelement <4 x float> undef, float %12, i32 0
  %83 = shufflevector <4 x float> %82, <4 x float> undef, <4 x i32> zeroinitializer
  %84 = insertelement <4 x float> undef, float %12, i32 0
  %85 = shufflevector <4 x float> %84, <4 x float> undef, <4 x i32> zeroinitializer
  %86 = add nsw i64 %80, -8
  %87 = lshr exact i64 %86, 3
  %88 = add nuw nsw i64 %87, 1
  %89 = and i64 %88, 3
  %90 = icmp ult i64 %86, 24
  br i1 %90, label %122, label %91

91:                                               ; preds = %79
  %92 = sub nsw i64 %88, %89
  br label %93

93:                                               ; preds = %93, %91
  %94 = phi i64 [ 0, %91 ], [ %119, %93 ]
  %95 = phi i64 [ %92, %91 ], [ %120, %93 ]
  %96 = add i64 %94, %75
  %97 = getelementptr inbounds float, float* %2, i64 %96
  %98 = bitcast float* %97 to <4 x float>*
  store <4 x float> %83, <4 x float>* %98, align 4
  %99 = getelementptr inbounds float, float* %97, i64 4
  %100 = bitcast float* %99 to <4 x float>*
  store <4 x float> %85, <4 x float>* %100, align 4
  %101 = or i64 %94, 8
  %102 = add i64 %101, %75
  %103 = getelementptr inbounds float, float* %2, i64 %102
  %104 = bitcast float* %103 to <4 x float>*
  store <4 x float> %83, <4 x float>* %104, align 4
  %105 = getelementptr inbounds float, float* %103, i64 4
  %106 = bitcast float* %105 to <4 x float>*
  store <4 x float> %85, <4 x float>* %106, align 4
  %107 = or i64 %94, 16
  %108 = add i64 %107, %75
  %109 = getelementptr inbounds float, float* %2, i64 %108
  %110 = bitcast float* %109 to <4 x float>*
  store <4 x float> %83, <4 x float>* %110, align 4
  %111 = getelementptr inbounds float, float* %109, i64 4
  %112 = bitcast float* %111 to <4 x float>*
  store <4 x float> %85, <4 x float>* %112, align 4
  %113 = or i64 %94, 24
  %114 = add i64 %113, %75
  %115 = getelementptr inbounds float, float* %2, i64 %114
  %116 = bitcast float* %115 to <4 x float>*
  store <4 x float> %83, <4 x float>* %116, align 4
  %117 = getelementptr inbounds float, float* %115, i64 4
  %118 = bitcast float* %117 to <4 x float>*
  store <4 x float> %85, <4 x float>* %118, align 4
  %119 = add i64 %94, 32
  %120 = add i64 %95, -4
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %122, label %93, !llvm.loop !64

122:                                              ; preds = %93, %79
  %123 = phi i64 [ 0, %79 ], [ %119, %93 ]
  %124 = icmp eq i64 %89, 0
  br i1 %124, label %136, label %125

125:                                              ; preds = %122, %125
  %126 = phi i64 [ %133, %125 ], [ %123, %122 ]
  %127 = phi i64 [ %134, %125 ], [ %89, %122 ]
  %128 = add i64 %126, %75
  %129 = getelementptr inbounds float, float* %2, i64 %128
  %130 = bitcast float* %129 to <4 x float>*
  store <4 x float> %83, <4 x float>* %130, align 4
  %131 = getelementptr inbounds float, float* %129, i64 4
  %132 = bitcast float* %131 to <4 x float>*
  store <4 x float> %85, <4 x float>* %132, align 4
  %133 = add i64 %126, 8
  %134 = add i64 %127, -1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %125, !llvm.loop !65

136:                                              ; preds = %125, %122
  %137 = icmp eq i64 %77, %80
  br i1 %137, label %252, label %138

138:                                              ; preds = %136, %74
  %139 = phi i64 [ %75, %74 ], [ %81, %136 ]
  br label %140

140:                                              ; preds = %138, %140
  %141 = phi i64 [ %143, %140 ], [ %139, %138 ]
  %142 = getelementptr inbounds float, float* %2, i64 %141
  store float %12, float* %142, align 4
  %143 = add nuw nsw i64 %141, 1
  %144 = icmp eq i64 %143, %76
  br i1 %144, label %252, label %140, !llvm.loop !66

145:                                              ; preds = %64, %62
  %146 = icmp ugt i32 %8, %5
  br i1 %146, label %147, label %186

147:                                              ; preds = %145
  %148 = fsub float 2.000000e+00, %26
  %149 = fmul float %148, %26
  %150 = fadd float %26, -3.000000e+00
  %151 = fmul float %150, %26
  %152 = fadd float %151, 3.000000e+00
  %153 = fmul float %152, %26
  %154 = fsub float 4.000000e+00, %26
  %155 = fmul float %154, %26
  %156 = fadd float %155, -6.000000e+00
  %157 = fmul float %156, %26
  %158 = fadd float %157, 4.000000e+00
  %159 = fmul float %158, %26
  %160 = insertelement <4 x float> <float 0.000000e+00, float undef, float undef, float undef>, float %26, i32 1
  %161 = insertelement <4 x float> %160, float %149, i32 2
  %162 = insertelement <4 x float> %161, float %153, i32 3
  %163 = sub i32 %8, %5
  %164 = and i32 %163, -4
  %165 = add i32 %164, %5
  %166 = icmp ugt i32 %165, %5
  br i1 %166, label %167, label %186

167:                                              ; preds = %147, %167
  %168 = phi i32 [ %182, %167 ], [ %5, %147 ]
  %169 = phi float [ %181, %167 ], [ %52, %147 ]
  %170 = fsub float %12, %169
  %171 = insertelement <4 x float> undef, float %170, i32 0
  %172 = shufflevector <4 x float> %171, <4 x float> undef, <4 x i32> zeroinitializer
  %173 = insertelement <4 x float> undef, float %169, i32 0
  %174 = shufflevector <4 x float> %173, <4 x float> undef, <4 x i32> zeroinitializer
  %175 = fmul <4 x float> %162, %172
  %176 = fadd <4 x float> %174, %175
  %177 = zext i32 %168 to i64
  %178 = getelementptr inbounds float, float* %2, i64 %177
  %179 = bitcast float* %178 to <4 x float>*
  store <4 x float> %176, <4 x float>* %179, align 1
  %180 = fmul float %159, %170
  %181 = fadd float %169, %180
  %182 = add i32 %168, 4
  %183 = icmp ult i32 %182, %165
  br i1 %183, label %167, label %184

184:                                              ; preds = %167
  %185 = bitcast float %181 to i32
  br label %186

186:                                              ; preds = %147, %184, %145
  %187 = phi float [ %52, %145 ], [ %181, %184 ], [ %52, %147 ]
  %188 = phi i32 [ %53, %145 ], [ %185, %184 ], [ %53, %147 ]
  %189 = phi i32 [ %5, %145 ], [ %182, %184 ], [ %5, %147 ]
  %190 = icmp ult i32 %189, %8
  br i1 %190, label %191, label %242

191:                                              ; preds = %186
  %192 = zext i32 %189 to i64
  %193 = zext i32 %8 to i64
  %194 = sub nsw i64 %193, %192
  %195 = xor i64 %192, -1
  %196 = add nsw i64 %195, %193
  %197 = and i64 %194, 3
  %198 = icmp eq i64 %197, 0
  br i1 %198, label %210, label %199

199:                                              ; preds = %191, %199
  %200 = phi i64 [ %207, %199 ], [ %192, %191 ]
  %201 = phi float [ %206, %199 ], [ %187, %191 ]
  %202 = phi i64 [ %208, %199 ], [ %197, %191 ]
  %203 = getelementptr inbounds float, float* %2, i64 %200
  store float %201, float* %203, align 4
  %204 = fsub float %12, %201
  %205 = fmul float %204, %26
  %206 = fadd float %201, %205
  %207 = add nuw nsw i64 %200, 1
  %208 = add i64 %202, -1
  %209 = icmp eq i64 %208, 0
  br i1 %209, label %210, label %199, !llvm.loop !67

210:                                              ; preds = %199, %191
  %211 = phi float [ undef, %191 ], [ %206, %199 ]
  %212 = phi i64 [ %192, %191 ], [ %207, %199 ]
  %213 = phi float [ %187, %191 ], [ %206, %199 ]
  %214 = icmp ult i64 %196, 3
  br i1 %214, label %239, label %215

215:                                              ; preds = %210, %215
  %216 = phi i64 [ %237, %215 ], [ %212, %210 ]
  %217 = phi float [ %236, %215 ], [ %213, %210 ]
  %218 = getelementptr inbounds float, float* %2, i64 %216
  store float %217, float* %218, align 4
  %219 = fsub float %12, %217
  %220 = fmul float %219, %26
  %221 = fadd float %217, %220
  %222 = add nuw nsw i64 %216, 1
  %223 = getelementptr inbounds float, float* %2, i64 %222
  store float %221, float* %223, align 4
  %224 = fsub float %12, %221
  %225 = fmul float %224, %26
  %226 = fadd float %221, %225
  %227 = add nuw nsw i64 %216, 2
  %228 = getelementptr inbounds float, float* %2, i64 %227
  store float %226, float* %228, align 4
  %229 = fsub float %12, %226
  %230 = fmul float %229, %26
  %231 = fadd float %226, %230
  %232 = add nuw nsw i64 %216, 3
  %233 = getelementptr inbounds float, float* %2, i64 %232
  store float %231, float* %233, align 4
  %234 = fsub float %12, %231
  %235 = fmul float %234, %26
  %236 = fadd float %231, %235
  %237 = add nuw nsw i64 %216, 4
  %238 = icmp eq i64 %237, %193
  br i1 %238, label %239, label %215

239:                                              ; preds = %215, %210
  %240 = phi float [ %211, %210 ], [ %236, %215 ]
  %241 = bitcast float %240 to i32
  br label %242

242:                                              ; preds = %239, %186
  %243 = phi i32 [ %241, %239 ], [ %188, %186 ]
  %244 = phi i32 [ %8, %239 ], [ %189, %186 ]
  %245 = icmp eq i32 %244, 0
  br i1 %245, label %252, label %246

246:                                              ; preds = %242
  %247 = add i32 %244, -1
  %248 = zext i32 %247 to i64
  %249 = getelementptr inbounds float, float* %2, i64 %248
  %250 = bitcast float* %249 to i32*
  %251 = load i32, i32* %250, align 4
  br label %252

252:                                              ; preds = %140, %136, %69, %246, %242
  %253 = phi i64 [ %18, %242 ], [ %18, %246 ], [ %72, %69 ], [ %72, %136 ], [ %72, %140 ]
  %254 = phi i32 [ %243, %242 ], [ %251, %246 ], [ %53, %69 ], [ %53, %136 ], [ %53, %140 ]
  %255 = phi i32 [ 0, %242 ], [ %244, %246 ], [ %5, %69 ], [ %8, %136 ], [ %8, %140 ]
  %256 = insertvalue { i64, i64 } undef, i64 %253, 0
  %257 = zext i32 %255 to i64
  %258 = shl nuw i64 %257, 32
  %259 = zext i32 %254 to i64
  %260 = or i64 %258, %259
  %261 = insertvalue { i64, i64 } %256, i64 %260, 1
  ret { i64, i64 } %261
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN5blink18AudioParamTimeline20ProcessSetValueCurveERKNS0_15AutomationStateEPfmfj(%"class.blink::AudioParamTimeline"* nocapture readnone, %"struct.blink::AudioParamTimeline::AutomationState"* nocapture readonly dereferenceable(104), float* nocapture, i64, float, i32) local_unnamed_addr #9 align 2 {
  %7 = bitcast float %4 to i32
  %8 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 5
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 8
  %13 = load double, double* %12, align 8
  %14 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 3
  %15 = load double, double* %14, align 8
  %16 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 6
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"struct.blink::AudioParamTimeline::AutomationState", %"struct.blink::AudioParamTimeline::AutomationState"* %1, i64 0, i32 11
  %23 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %23, i64 0, i32 8, i32 0, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %6
  %28 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %23, i64 0, i32 8, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  br label %46

30:                                               ; preds = %6
  %31 = zext i32 %25 to i64
  %32 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64 %31) #18
  %33 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %32, i8* getelementptr inbounds ([53 x i8], [53 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIfEEPKcv, i64 0, i64 0)) #18
  %34 = ptrtoint i8* %33 to i64
  %35 = icmp ne i8* %33, null
  %36 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %23, i64 0, i32 8, i32 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %23, i64 0, i32 8, i32 0, i32 0, i32 0
  %39 = load float*, float** %38, align 8
  %40 = icmp ne float* %39, null
  %41 = and i1 %35, %40
  br i1 %41, label %42, label %46, !prof !9

42:                                               ; preds = %30
  %43 = zext i32 %37 to i64
  %44 = bitcast float* %39 to i8*
  %45 = shl nuw nsw i64 %43, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %33, i8* nonnull align 4 %44, i64 %45, i1 false) #18
  br label %46

46:                                               ; preds = %27, %30, %42
  %47 = phi i32 [ %29, %27 ], [ %37, %30 ], [ %37, %42 ]
  %48 = phi i64 [ 0, %27 ], [ %34, %30 ], [ %34, %42 ]
  %49 = inttoptr i64 %48 to float*
  %50 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %23, i64 0, i32 10
  %51 = bitcast float* %50 to i32*
  %52 = load i32, i32* %51, align 8
  %53 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %23, i64 0, i32 7
  %54 = load double, double* %53, align 8
  %55 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %23, i64 0, i32 9
  %56 = load double, double* %55, align 8
  %57 = fdiv double %56, %15
  %58 = icmp eq i32 %47, 0
  %59 = fcmp ole double %54, 0.000000e+00
  %60 = or i1 %58, %59
  %61 = fcmp ole double %15, 0.000000e+00
  %62 = or i1 %61, %60
  br i1 %62, label %63, label %136

63:                                               ; preds = %46
  %64 = icmp ugt i32 %11, %5
  %65 = zext i32 %5 to i64
  br i1 %64, label %66, label %370

66:                                               ; preds = %63
  %67 = zext i32 %11 to i64
  %68 = sub nsw i64 %67, %65
  %69 = icmp ult i64 %68, 8
  br i1 %69, label %129, label %70

70:                                               ; preds = %66
  %71 = and i64 %68, -8
  %72 = add nsw i64 %71, %65
  %73 = insertelement <4 x float> undef, float %4, i32 0
  %74 = shufflevector <4 x float> %73, <4 x float> undef, <4 x i32> zeroinitializer
  %75 = insertelement <4 x float> undef, float %4, i32 0
  %76 = shufflevector <4 x float> %75, <4 x float> undef, <4 x i32> zeroinitializer
  %77 = add nsw i64 %71, -8
  %78 = lshr exact i64 %77, 3
  %79 = add nuw nsw i64 %78, 1
  %80 = and i64 %79, 3
  %81 = icmp ult i64 %77, 24
  br i1 %81, label %113, label %82

82:                                               ; preds = %70
  %83 = sub nsw i64 %79, %80
  br label %84

84:                                               ; preds = %84, %82
  %85 = phi i64 [ 0, %82 ], [ %110, %84 ]
  %86 = phi i64 [ %83, %82 ], [ %111, %84 ]
  %87 = add i64 %85, %65
  %88 = getelementptr inbounds float, float* %2, i64 %87
  %89 = bitcast float* %88 to <4 x float>*
  store <4 x float> %74, <4 x float>* %89, align 4
  %90 = getelementptr inbounds float, float* %88, i64 4
  %91 = bitcast float* %90 to <4 x float>*
  store <4 x float> %76, <4 x float>* %91, align 4
  %92 = or i64 %85, 8
  %93 = add i64 %92, %65
  %94 = getelementptr inbounds float, float* %2, i64 %93
  %95 = bitcast float* %94 to <4 x float>*
  store <4 x float> %74, <4 x float>* %95, align 4
  %96 = getelementptr inbounds float, float* %94, i64 4
  %97 = bitcast float* %96 to <4 x float>*
  store <4 x float> %76, <4 x float>* %97, align 4
  %98 = or i64 %85, 16
  %99 = add i64 %98, %65
  %100 = getelementptr inbounds float, float* %2, i64 %99
  %101 = bitcast float* %100 to <4 x float>*
  store <4 x float> %74, <4 x float>* %101, align 4
  %102 = getelementptr inbounds float, float* %100, i64 4
  %103 = bitcast float* %102 to <4 x float>*
  store <4 x float> %76, <4 x float>* %103, align 4
  %104 = or i64 %85, 24
  %105 = add i64 %104, %65
  %106 = getelementptr inbounds float, float* %2, i64 %105
  %107 = bitcast float* %106 to <4 x float>*
  store <4 x float> %74, <4 x float>* %107, align 4
  %108 = getelementptr inbounds float, float* %106, i64 4
  %109 = bitcast float* %108 to <4 x float>*
  store <4 x float> %76, <4 x float>* %109, align 4
  %110 = add i64 %85, 32
  %111 = add i64 %86, -4
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %84, !llvm.loop !68

113:                                              ; preds = %84, %70
  %114 = phi i64 [ 0, %70 ], [ %110, %84 ]
  %115 = icmp eq i64 %80, 0
  br i1 %115, label %127, label %116

116:                                              ; preds = %113, %116
  %117 = phi i64 [ %124, %116 ], [ %114, %113 ]
  %118 = phi i64 [ %125, %116 ], [ %80, %113 ]
  %119 = add i64 %117, %65
  %120 = getelementptr inbounds float, float* %2, i64 %119
  %121 = bitcast float* %120 to <4 x float>*
  store <4 x float> %74, <4 x float>* %121, align 4
  %122 = getelementptr inbounds float, float* %120, i64 4
  %123 = bitcast float* %122 to <4 x float>*
  store <4 x float> %76, <4 x float>* %123, align 4
  %124 = add i64 %117, 8
  %125 = add i64 %118, -1
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %127, label %116, !llvm.loop !69

127:                                              ; preds = %116, %113
  %128 = icmp eq i64 %68, %71
  br i1 %128, label %370, label %129

129:                                              ; preds = %127, %66
  %130 = phi i64 [ %65, %66 ], [ %72, %127 ]
  br label %131

131:                                              ; preds = %129, %131
  %132 = phi i64 [ %134, %131 ], [ %130, %129 ]
  %133 = getelementptr inbounds float, float* %2, i64 %132
  store float %4, float* %133, align 4
  %134 = add nuw nsw i64 %132, 1
  %135 = icmp eq i64 %134, %67
  br i1 %135, label %370, label %131, !llvm.loop !70

136:                                              ; preds = %46
  %137 = zext i32 %11 to i64
  %138 = fadd double %13, %54
  %139 = fmul double %15, %138
  %140 = tail call double @llvm.ceil.f64(double %139)
  %141 = uitofp i64 %19 to double
  %142 = fcmp olt double %140, %141
  %143 = fptoui double %140 to i64
  %144 = select i1 %142, i64 %143, i64 %19
  %145 = icmp ult i64 %144, %17
  %146 = sub i64 %144, %17
  %147 = trunc i64 %146 to i32
  %148 = select i1 %145, i32 0, i32 %147
  %149 = icmp ult i32 %9, %148
  %150 = select i1 %149, i32 %9, i32 %148
  %151 = uitofp i64 %3 to double
  %152 = fdiv double %151, %15
  %153 = fcmp olt double %13, %152
  br i1 %153, label %154, label %158

154:                                              ; preds = %136
  %155 = fmul double %13, %15
  %156 = fsub double %151, %155
  %157 = fmul double %156, %57
  br label %158

158:                                              ; preds = %154, %136
  %159 = phi double [ %157, %154 ], [ 0.000000e+00, %136 ]
  %160 = icmp ugt i32 %150, %5
  br i1 %160, label %161, label %238

161:                                              ; preds = %158
  %162 = fptrunc double %159 to float
  %163 = insertelement <4 x float> undef, float %162, i32 0
  %164 = shufflevector <4 x float> %163, <4 x float> undef, <4 x i32> zeroinitializer
  %165 = fptrunc double %57 to float
  %166 = insertelement <4 x float> undef, float %165, i32 0
  %167 = shufflevector <4 x float> %166, <4 x float> undef, <4 x i32> zeroinitializer
  %168 = add i32 %47, -1
  %169 = uitofp i32 %168 to float
  %170 = insertelement <4 x float> undef, float %169, i32 0
  %171 = shufflevector <4 x float> %170, <4 x float> undef, <4 x i32> zeroinitializer
  %172 = sub i32 %150, %5
  %173 = and i32 %172, -4
  %174 = add i32 %173, %5
  %175 = icmp ugt i32 %174, %5
  br i1 %175, label %176, label %238

176:                                              ; preds = %161, %176
  %177 = phi <4 x float> [ %181, %176 ], [ <float 0.000000e+00, float 1.000000e+00, float 2.000000e+00, float 3.000000e+00>, %161 ]
  %178 = phi i32 [ %236, %176 ], [ %5, %161 ]
  %179 = fmul <4 x float> %167, %177
  %180 = fadd <4 x float> %164, %179
  %181 = fadd <4 x float> %177, <float 4.000000e+00, float 4.000000e+00, float 4.000000e+00, float 4.000000e+00>
  %182 = tail call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %180, <4 x float> %171) #18
  %183 = tail call <4 x i32> @llvm.x86.sse2.cvttps2dq(<4 x float> %182) #18
  %184 = fadd <4 x float> %180, <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>
  %185 = tail call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %184, <4 x float> %171) #18
  %186 = tail call <4 x i32> @llvm.x86.sse2.cvttps2dq(<4 x float> %185) #18
  %187 = extractelement <4 x i32> %183, i32 3
  %188 = sext i32 %187 to i64
  %189 = getelementptr inbounds float, float* %49, i64 %188
  %190 = load float, float* %189, align 4
  %191 = extractelement <4 x i32> %183, i32 2
  %192 = sext i32 %191 to i64
  %193 = getelementptr inbounds float, float* %49, i64 %192
  %194 = load float, float* %193, align 4
  %195 = extractelement <4 x i32> %183, i32 1
  %196 = sext i32 %195 to i64
  %197 = getelementptr inbounds float, float* %49, i64 %196
  %198 = load float, float* %197, align 4
  %199 = extractelement <4 x i32> %183, i32 0
  %200 = sext i32 %199 to i64
  %201 = getelementptr inbounds float, float* %49, i64 %200
  %202 = load float, float* %201, align 4
  %203 = insertelement <4 x float> undef, float %202, i32 0
  %204 = insertelement <4 x float> %203, float %198, i32 1
  %205 = insertelement <4 x float> %204, float %194, i32 2
  %206 = insertelement <4 x float> %205, float %190, i32 3
  %207 = extractelement <4 x i32> %186, i32 3
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds float, float* %49, i64 %208
  %210 = load float, float* %209, align 4
  %211 = extractelement <4 x i32> %186, i32 2
  %212 = sext i32 %211 to i64
  %213 = getelementptr inbounds float, float* %49, i64 %212
  %214 = load float, float* %213, align 4
  %215 = extractelement <4 x i32> %186, i32 1
  %216 = sext i32 %215 to i64
  %217 = getelementptr inbounds float, float* %49, i64 %216
  %218 = load float, float* %217, align 4
  %219 = extractelement <4 x i32> %186, i32 0
  %220 = sext i32 %219 to i64
  %221 = getelementptr inbounds float, float* %49, i64 %220
  %222 = load float, float* %221, align 4
  %223 = insertelement <4 x float> undef, float %222, i32 0
  %224 = insertelement <4 x float> %223, float %218, i32 1
  %225 = insertelement <4 x float> %224, float %214, i32 2
  %226 = insertelement <4 x float> %225, float %210, i32 3
  %227 = sitofp <4 x i32> %183 to <4 x float>
  %228 = fsub <4 x float> %180, %227
  %229 = tail call <4 x float> @llvm.x86.sse.min.ps(<4 x float> %228, <4 x float> <float 1.000000e+00, float 1.000000e+00, float 1.000000e+00, float 1.000000e+00>) #18
  %230 = fsub <4 x float> %226, %206
  %231 = fmul <4 x float> %229, %230
  %232 = fadd <4 x float> %206, %231
  %233 = zext i32 %178 to i64
  %234 = getelementptr inbounds float, float* %2, i64 %233
  %235 = bitcast float* %234 to <4 x float>*
  store <4 x float> %232, <4 x float>* %235, align 1
  %236 = add i32 %178, 4
  %237 = icmp ult i32 %236, %174
  br i1 %237, label %176, label %238

238:                                              ; preds = %176, %161, %158
  %239 = phi i32 [ %5, %158 ], [ %5, %161 ], [ %236, %176 ]
  %240 = phi i32 [ 0, %158 ], [ %173, %161 ], [ %173, %176 ]
  %241 = icmp eq i32 %239, 0
  br i1 %241, label %248, label %242

242:                                              ; preds = %238
  %243 = add i32 %239, -1
  %244 = zext i32 %243 to i64
  %245 = getelementptr inbounds float, float* %2, i64 %244
  %246 = bitcast float* %245 to i32*
  %247 = load i32, i32* %246, align 4
  br label %248

248:                                              ; preds = %238, %242
  %249 = phi i32 [ %52, %238 ], [ %247, %242 ]
  %250 = icmp ult i32 %239, %150
  br i1 %250, label %251, label %291

251:                                              ; preds = %248
  %252 = uitofp i32 %47 to double
  %253 = add i32 %47, -1
  %254 = zext i32 %239 to i64
  %255 = zext i32 %150 to i64
  br label %256

256:                                              ; preds = %251, %256
  %257 = phi i64 [ %254, %251 ], [ %285, %256 ]
  %258 = phi i32 [ %240, %251 ], [ %286, %256 ]
  %259 = uitofp i32 %258 to double
  %260 = fmul double %57, %259
  %261 = fadd double %159, %260
  %262 = fcmp olt double %261, %252
  %263 = fptoui double %261 to i32
  %264 = select i1 %262, i32 %263, i32 %253
  %265 = add i32 %264, 1
  %266 = icmp ult i32 %253, %265
  %267 = select i1 %266, i32 %253, i32 %265
  %268 = zext i32 %264 to i64
  %269 = getelementptr inbounds float, float* %49, i64 %268
  %270 = load float, float* %269, align 4
  %271 = zext i32 %267 to i64
  %272 = getelementptr inbounds float, float* %49, i64 %271
  %273 = load float, float* %272, align 4
  %274 = uitofp i32 %264 to double
  %275 = fsub double %261, %274
  %276 = fcmp ogt double %275, 1.000000e+00
  %277 = select i1 %276, double 1.000000e+00, double %275
  %278 = fpext float %270 to double
  %279 = fsub float %273, %270
  %280 = fpext float %279 to double
  %281 = fmul double %277, %280
  %282 = fadd double %281, %278
  %283 = fptrunc double %282 to float
  %284 = getelementptr inbounds float, float* %2, i64 %257
  store float %283, float* %284, align 4
  %285 = add nuw nsw i64 %257, 1
  %286 = add i32 %258, 1
  %287 = icmp ult i64 %285, %255
  br i1 %287, label %256, label %288

288:                                              ; preds = %256
  %289 = trunc i64 %285 to i32
  %290 = bitcast float %283 to i32
  br label %291

291:                                              ; preds = %288, %248
  %292 = phi i32 [ %289, %288 ], [ %239, %248 ]
  %293 = phi i32 [ %290, %288 ], [ %249, %248 ]
  %294 = icmp ult i32 %292, %11
  %295 = zext i32 %292 to i64
  br i1 %294, label %296, label %366

296:                                              ; preds = %291
  %297 = sub nsw i64 %137, %295
  %298 = icmp ult i64 %297, 8
  br i1 %298, label %358, label %299

299:                                              ; preds = %296
  %300 = and i64 %297, -8
  %301 = add nsw i64 %300, %295
  %302 = insertelement <4 x i32> undef, i32 %52, i32 0
  %303 = shufflevector <4 x i32> %302, <4 x i32> undef, <4 x i32> zeroinitializer
  %304 = insertelement <4 x i32> undef, i32 %52, i32 0
  %305 = shufflevector <4 x i32> %304, <4 x i32> undef, <4 x i32> zeroinitializer
  %306 = add nsw i64 %300, -8
  %307 = lshr exact i64 %306, 3
  %308 = add nuw nsw i64 %307, 1
  %309 = and i64 %308, 3
  %310 = icmp ult i64 %306, 24
  br i1 %310, label %342, label %311

311:                                              ; preds = %299
  %312 = sub nsw i64 %308, %309
  br label %313

313:                                              ; preds = %313, %311
  %314 = phi i64 [ 0, %311 ], [ %339, %313 ]
  %315 = phi i64 [ %312, %311 ], [ %340, %313 ]
  %316 = add i64 %314, %295
  %317 = getelementptr inbounds float, float* %2, i64 %316
  %318 = bitcast float* %317 to <4 x i32>*
  store <4 x i32> %303, <4 x i32>* %318, align 4
  %319 = getelementptr inbounds float, float* %317, i64 4
  %320 = bitcast float* %319 to <4 x i32>*
  store <4 x i32> %305, <4 x i32>* %320, align 4
  %321 = or i64 %314, 8
  %322 = add i64 %321, %295
  %323 = getelementptr inbounds float, float* %2, i64 %322
  %324 = bitcast float* %323 to <4 x i32>*
  store <4 x i32> %303, <4 x i32>* %324, align 4
  %325 = getelementptr inbounds float, float* %323, i64 4
  %326 = bitcast float* %325 to <4 x i32>*
  store <4 x i32> %305, <4 x i32>* %326, align 4
  %327 = or i64 %314, 16
  %328 = add i64 %327, %295
  %329 = getelementptr inbounds float, float* %2, i64 %328
  %330 = bitcast float* %329 to <4 x i32>*
  store <4 x i32> %303, <4 x i32>* %330, align 4
  %331 = getelementptr inbounds float, float* %329, i64 4
  %332 = bitcast float* %331 to <4 x i32>*
  store <4 x i32> %305, <4 x i32>* %332, align 4
  %333 = or i64 %314, 24
  %334 = add i64 %333, %295
  %335 = getelementptr inbounds float, float* %2, i64 %334
  %336 = bitcast float* %335 to <4 x i32>*
  store <4 x i32> %303, <4 x i32>* %336, align 4
  %337 = getelementptr inbounds float, float* %335, i64 4
  %338 = bitcast float* %337 to <4 x i32>*
  store <4 x i32> %305, <4 x i32>* %338, align 4
  %339 = add i64 %314, 32
  %340 = add i64 %315, -4
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %342, label %313, !llvm.loop !71

342:                                              ; preds = %313, %299
  %343 = phi i64 [ 0, %299 ], [ %339, %313 ]
  %344 = icmp eq i64 %309, 0
  br i1 %344, label %356, label %345

345:                                              ; preds = %342, %345
  %346 = phi i64 [ %353, %345 ], [ %343, %342 ]
  %347 = phi i64 [ %354, %345 ], [ %309, %342 ]
  %348 = add i64 %346, %295
  %349 = getelementptr inbounds float, float* %2, i64 %348
  %350 = bitcast float* %349 to <4 x i32>*
  store <4 x i32> %303, <4 x i32>* %350, align 4
  %351 = getelementptr inbounds float, float* %349, i64 4
  %352 = bitcast float* %351 to <4 x i32>*
  store <4 x i32> %305, <4 x i32>* %352, align 4
  %353 = add i64 %346, 8
  %354 = add i64 %347, -1
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %345, !llvm.loop !72

356:                                              ; preds = %345, %342
  %357 = icmp eq i64 %297, %300
  br i1 %357, label %366, label %358

358:                                              ; preds = %356, %296
  %359 = phi i64 [ %295, %296 ], [ %301, %356 ]
  br label %360

360:                                              ; preds = %358, %360
  %361 = phi i64 [ %364, %360 ], [ %359, %358 ]
  %362 = getelementptr inbounds float, float* %2, i64 %361
  %363 = bitcast float* %362 to i32*
  store i32 %52, i32* %363, align 4
  %364 = add nuw nsw i64 %361, 1
  %365 = icmp eq i64 %364, %137
  br i1 %365, label %366, label %360, !llvm.loop !73

366:                                              ; preds = %360, %356, %291
  %367 = phi i64 [ %295, %291 ], [ %137, %356 ], [ %137, %360 ]
  %368 = phi i32 [ %293, %291 ], [ %52, %356 ], [ %52, %360 ]
  %369 = add i64 %137, %3
  br label %370

370:                                              ; preds = %131, %63, %127, %366
  %371 = phi i64 [ %367, %366 ], [ %65, %63 ], [ %67, %127 ], [ %67, %131 ]
  %372 = phi i32 [ %368, %366 ], [ %7, %63 ], [ %7, %127 ], [ %7, %131 ]
  %373 = phi i64 [ %369, %366 ], [ %21, %63 ], [ %21, %127 ], [ %21, %131 ]
  %374 = shl nuw i64 %371, 32
  %375 = zext i32 %372 to i64
  %376 = or i64 %374, %375
  %377 = icmp eq i64 %48, 0
  br i1 %377, label %380, label %378, !prof !9

378:                                              ; preds = %370
  %379 = inttoptr i64 %48 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %379) #18
  br label %380

380:                                              ; preds = %370, %378
  %381 = insertvalue { i64, i64 } undef, i64 %373, 0
  %382 = insertvalue { i64, i64 } %381, i64 %376, 1
  ret { i64, i64 } %382
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18AudioParamTimeline15RemoveOldEventsEj(%"class.blink::AudioParamTimeline"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = icmp ugt i32 %4, 1
  br i1 %5, label %6, label %11

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::AudioParamTimeline", %"class.blink::AudioParamTimeline"* %0, i64 0, i32 0
  %8 = add i32 %4, -1
  %9 = icmp ult i32 %8, %1
  %10 = select i1 %9, i32 %8, i32 %1
  tail call void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE7EraseAtEjj(%"class.WTF::Vector"* %7, i32 0, i32 %10)
  br label %11

11:                                               ; preds = %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink18AudioParamTimeline10ParamEvent13EventPreceedsERKNSt3__110unique_ptrIS1_NS2_14default_deleteIS1_EEEES8_(%"class.std::__1::unique_ptr"* dereferenceable(8), %"class.std::__1::unique_ptr"* dereferenceable(8)) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %4, i64 0, i32 2
  %6 = load double, double* %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %8, i64 0, i32 2
  %10 = load double, double* %9, align 8
  %11 = fcmp olt double %6, %10
  ret i1 %11
}

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #10

declare double @_ZN5blink15audio_utilities33DiscreteTimeConstantForSampleRateEdd(double, double) local_unnamed_addr #2

declare float @_ZN6fdlibm4powfEff(float, float) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE7EraseAtEjj(%"class.WTF::Vector"*, i32, i32) local_unnamed_addr #8 comdat align 2 {
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = icmp eq i32 %2, 0
  br i1 %7, label %54, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #18
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = add i32 %2, %1
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  %15 = icmp ugt i32 %11, %13
  br i1 %15, label %17, label %16

16:                                               ; preds = %8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i8* null, i8** %10, align 8
  br label %26

17:                                               ; preds = %8
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %11) #18
  %19 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.37, i64 0, i64 0), i8* %18, i8* %19) #18
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  store i8* %21, i8** %10, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %17
  %24 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0), i32 2085, %"class.logging::CheckOpResult"* nonnull %5) #18
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #18
  br label %26

26:                                               ; preds = %23, %17, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #18
  %27 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %27, align 8
  %29 = zext i32 %1 to i64
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 %29
  %31 = zext i32 %2 to i64
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %30, i64 %31
  br label %33

33:                                               ; preds = %26, %33
  %34 = phi %"class.std::__1::unique_ptr"* [ %35, %33 ], [ %30, %26 ]
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* %34) #18
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %34, i64 1
  %36 = icmp eq %"class.std::__1::unique_ptr"* %35, %32
  br i1 %36, label %37, label %33

37:                                               ; preds = %33
  %38 = icmp ne %"class.std::__1::unique_ptr"* %30, null
  %39 = icmp ne %"class.std::__1::unique_ptr"* %32, null
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %51, !prof !9

41:                                               ; preds = %37
  %42 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %27, align 8
  %43 = load i32, i32* %12, align 4
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %42, i64 %44
  %46 = bitcast %"class.std::__1::unique_ptr"* %30 to i8*
  %47 = bitcast %"class.std::__1::unique_ptr"* %32 to i8*
  %48 = ptrtoint %"class.std::__1::unique_ptr"* %45 to i64
  %49 = ptrtoint %"class.std::__1::unique_ptr"* %32 to i64
  %50 = sub i64 %48, %49
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* nonnull align 8 %47, i64 %50, i1 false) #18
  br label %51

51:                                               ; preds = %37, %41
  %52 = load i32, i32* %12, align 4
  %53 = sub i32 %52, %2
  store i32 %53, i32* %12, align 4
  br label %54

54:                                               ; preds = %3, %51
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #10

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #13

declare void @_ZN3WTF9MutexBase4lockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #2

declare void @_ZN3WTF9MutexBase6unlockEv(%"class.WTF::MutexBase"*) local_unnamed_addr #2

declare zeroext i1 @_ZN3WTF5Mutex7TryLockEv(%"class.WTF::Mutex"*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #10

; Function Attrs: nounwind readnone
declare <4 x i32> @llvm.x86.sse2.cvttps2dq(<4 x float>) #14

; Function Attrs: nounwind readnone
declare <4 x float> @llvm.x86.sse.min.ps(<4 x float>, <4 x float>) #14

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend"*, %"class.WTF::StringImpl"*, i8*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #18
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #18
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %4, %8, %23
  %26 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #18
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %37
  tail call void @llvm.trap() #18
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %30, %45
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %54 = add i32 %48, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #18
  br label %59

59:                                               ; preds = %25, %55, %58
  br i1 %7, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #18
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.9"* %8) #18
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #18
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.9"* %8) #18
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #18
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %26, i8* %27) #18
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #18
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #18
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #18
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #18
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #18
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %41, i8* %42) #18
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #18
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #18
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #18
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.519", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.519", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.519"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #18
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.519"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.519"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.519"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #18
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #18
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.519"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #18
  %47 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #18
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %4, i8* %48) #18
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.520"* nonnull %49, i8* %1) #18
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.521"* nonnull %4, i8* %52) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #18
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.9"* %6) #18
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.520"* nonnull %53, i8* %56) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #18
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.519", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.519", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.519"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #18
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.519"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.519"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.519"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #18
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #18
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.519"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #18
  %47 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #18
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %4, i8* %48) #18
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.520"* nonnull %49, i16* %1) #18
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.521"* nonnull %4, i16* %52) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #18
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.9"* %6) #18
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.520"* nonnull %53, i16* %56) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #18
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"*, i8*) unnamed_addr #2

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.9"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.9", %"class.WTF::StringAppend.9"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #18
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.521", %"class.WTF::StringTypeAdapter.521"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.9", %"class.WTF::StringAppend.9"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %4, i8* %21) #18
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #18
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #18
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %30, i8* %31) #18
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #18
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #18
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #18
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #18
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #18
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %46, i8* %47) #18
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #18
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #18
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #18
  ret i32 %23
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.520"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.521"*, i8*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.520"*, i16*) local_unnamed_addr #2

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.521"*, i16*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.10"*, %"class.WTF::StringAppend.11"* byval(%"class.WTF::StringAppend.11") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.11"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.10"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #18
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #18
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #18
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !2

50:                                               ; preds = %43
  tail call void @llvm.trap() #18
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #18
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #18
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.10"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.11"* %8) #18
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #18
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.11"* %8) #18
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #18
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %26, i8* %27) #18
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #18
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #18
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #18
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #18
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #18
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %41, i8* %42) #18
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #18
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #18
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #18
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.11"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #18
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.521", %"class.WTF::StringTypeAdapter.521"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %4, i8* %14) #18
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.12"* %9) #18
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #18
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.12"* %9) #18
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #18
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %25, i8* %26) #18
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #18
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #18
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #18
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #18
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #18
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %41, i8* %42) #18
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #18
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #18
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #18
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.12"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #18
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.521", %"class.WTF::StringTypeAdapter.521"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.12", %"class.WTF::StringAppend.12"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %4, i8* %13) #18
  %14 = getelementptr inbounds %"class.WTF::StringAppend.12", %"class.WTF::StringAppend.12"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #18
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #18
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %30, i8* %31) #18
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #18
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #18
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #18
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #18
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #18
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %45, i8* %46) #18
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #18
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #18
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #18
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.11"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.519", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.521"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #18
  %8 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.521"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %5, i8* %10) #18
  %11 = bitcast %"class.WTF::StringTypeAdapter.521"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #18
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.521", %"class.WTF::StringTypeAdapter.521"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #18
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %3, i8* %14) #18
  %15 = bitcast %"class.WTF::StringTypeAdapter.519"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #18
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #18
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.519"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.521"* nonnull %3, i8* %1) #18
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.520"* nonnull %34, i8* %37) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #18
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.12"* %6) #18
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.521"* nonnull %5, i8* %40) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.11"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.519", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.521"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #18
  %8 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.521"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %5, i8* %10) #18
  %11 = bitcast %"class.WTF::StringTypeAdapter.521"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #18
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.521", %"class.WTF::StringTypeAdapter.521"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #18
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %3, i8* %14) #18
  %15 = bitcast %"class.WTF::StringTypeAdapter.519"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #18
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.11", %"class.WTF::StringAppend.11"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #18
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.519"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.521"* nonnull %3, i16* %1) #18
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.520"* nonnull %34, i16* %37) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #18
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.12"* %6) #18
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.521"* nonnull %5, i16* %40) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.13"*, %"class.WTF::StringAppend"* byval(%"class.WTF::StringAppend") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.13", %"class.WTF::StringAppend.13"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #18
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !2

22:                                               ; preds = %13
  tail call void @llvm.trap() #18
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %3
  %26 = getelementptr inbounds %"class.WTF::StringAppend.13", %"class.WTF::StringAppend.13"* %0, i64 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8** %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %1, i64 0, i32 1, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.WTF::StringAppend.13", %"class.WTF::StringAppend.13"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %54

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #18
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !2

49:                                               ; preds = %40
  tail call void @llvm.trap() #18
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %54

52:                                               ; preds = %25
  %53 = getelementptr inbounds %"class.WTF::StringAppend.13", %"class.WTF::StringAppend.13"* %0, i64 0, i32 1
  store i8* %2, i8** %53, align 8
  br label %67

54:                                               ; preds = %35, %50
  %55 = getelementptr inbounds %"class.WTF::StringAppend.13", %"class.WTF::StringAppend.13"* %0, i64 0, i32 1
  store i8* %2, i8** %55, align 8
  %56 = load atomic i32, i32* %36 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #18
  br label %67

67:                                               ; preds = %52, %66, %63
  br i1 %7, label %81, label %68

68:                                               ; preds = %67
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #18
  br label %81

81:                                               ; preds = %67, %77, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.13"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.13", %"class.WTF::StringAppend.13"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #18
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.521", %"class.WTF::StringTypeAdapter.521"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.13", %"class.WTF::StringAppend.13"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %4, i8* %14) #18
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"* %9) #18
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #18
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"* %9) #18
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #18
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %25, i8* %26) #18
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #18
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #18
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #18
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #18
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #18
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %41, i8* %42) #18
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #18
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #18
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #18
  ret i32 %17
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #16

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIfEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #18
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.22, i64 0, i64 0), i8* %11, i8* %12) #18
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.23, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #18
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #18
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #18
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.16"*, %"class.WTF::StringAppend.10"* byval(%"class.WTF::StringAppend.10") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.10"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.16"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #18
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #18
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.10", %"class.WTF::StringAppend.10"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #18
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  tail call void @llvm.trap() #18
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %0, i64 0, i32 1
  store i8* %2, i8** %56, align 8
  br label %70

57:                                               ; preds = %38, %53
  %58 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #18
  br label %70

70:                                               ; preds = %55, %69, %66
  br i1 %10, label %84, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #18
  br label %84

84:                                               ; preds = %70, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EC2ES7_S3_(%"class.WTF::StringAppend.15"*, %"class.WTF::StringAppend.16"* byval(%"class.WTF::StringAppend.16") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.16"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.15"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #18
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #18
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %1, i64 0, i32 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #18
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  tail call void @llvm.trap() #18
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %28, %38, %53
  %56 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %0, i64 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %1, i64 0, i32 1
  %58 = bitcast i8** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast i8** %56 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %61, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %62, label %92, label %63

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %80

70:                                               ; preds = %63
  %71 = zext i32 %69 to i33
  %72 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %71, i33 1) #18
  %73 = extractvalue { i33, i1 } %72, 1
  %74 = extractvalue { i33, i1 } %72, 0
  %75 = icmp slt i33 %74, 0
  %76 = or i1 %73, %75
  br i1 %76, label %77, label %78, !prof !2

77:                                               ; preds = %70
  tail call void @llvm.trap() #18
  unreachable

78:                                               ; preds = %70
  %79 = trunc i33 %74 to i32
  store i32 %79, i32* %68, align 4
  br label %80

80:                                               ; preds = %63, %78
  %81 = phi i32 [ %79, %78 ], [ %69, %63 ]
  %82 = load atomic i32, i32* %64 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %88

85:                                               ; preds = %80
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %87 = add i32 %81, -1
  store i32 %87, i32* %86, align 4
  br label %88

88:                                               ; preds = %85, %80
  %89 = phi i32 [ %87, %85 ], [ %81, %80 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #18
  br label %92

92:                                               ; preds = %55, %88, %91
  br i1 %37, label %106, label %93

93:                                               ; preds = %92
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #18
  br label %106

106:                                              ; preds = %105, %102, %92
  br i1 %10, label %120, label %107

107:                                              ; preds = %106
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = load atomic i32, i32* %108 monotonic, align 4
  %110 = and i32 %109, 2
  %111 = icmp eq i32 %110, 0
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %113 = load i32, i32* %112, align 4
  br i1 %111, label %114, label %116

114:                                              ; preds = %107
  %115 = add i32 %113, -1
  store i32 %115, i32* %112, align 4
  br label %116

116:                                              ; preds = %114, %107
  %117 = phi i32 [ %115, %114 ], [ %113, %107 ]
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %116
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #18
  br label %120

120:                                              ; preds = %106, %116, %119
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_EC2ES8_S2_(%"class.WTF::StringAppend.14"*, %"class.WTF::StringAppend.15"* byval(%"class.WTF::StringAppend.15") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.15"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.14"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #18
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !2

25:                                               ; preds = %16
  tail call void @llvm.trap() #18
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #18
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !2

52:                                               ; preds = %43
  tail call void @llvm.trap() #18
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %38, %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %0, i64 0, i32 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %1, i64 0, i32 0, i32 1
  %58 = bitcast i8** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast i8** %56 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %1, i64 0, i32 1, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %63, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %64, label %82, label %65

65:                                               ; preds = %55
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %84

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i33
  %74 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %73, i33 1) #18
  %75 = extractvalue { i33, i1 } %74, 1
  %76 = extractvalue { i33, i1 } %74, 0
  %77 = icmp slt i33 %76, 0
  %78 = or i1 %75, %77
  br i1 %78, label %79, label %80, !prof !2

79:                                               ; preds = %70
  tail call void @llvm.trap() #18
  unreachable

80:                                               ; preds = %70
  %81 = trunc i33 %76 to i32
  store i32 %81, i32* %71, align 4
  br label %84

82:                                               ; preds = %55
  %83 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %0, i64 0, i32 1
  store i8* %2, i8** %83, align 8
  br label %97

84:                                               ; preds = %65, %80
  %85 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %0, i64 0, i32 1
  store i8* %2, i8** %85, align 8
  %86 = load atomic i32, i32* %66 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #18
  br label %97

97:                                               ; preds = %82, %96, %93
  br i1 %37, label %111, label %98

98:                                               ; preds = %97
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %98
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %106, %105 ], [ %104, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #18
  br label %111

111:                                              ; preds = %110, %107, %97
  br i1 %10, label %125, label %112

112:                                              ; preds = %111
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load atomic i32, i32* %113 monotonic, align 4
  %115 = and i32 %114, 2
  %116 = icmp eq i32 %115, 0
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %118 = load i32, i32* %117, align 4
  br i1 %116, label %119, label %121

119:                                              ; preds = %112
  %120 = add i32 %118, -1
  store i32 %120, i32* %117, align 4
  br label %121

121:                                              ; preds = %119, %112
  %122 = phi i32 [ %120, %119 ], [ %118, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #18
  br label %125

125:                                              ; preds = %111, %121, %124
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.14"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #18
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.521", %"class.WTF::StringTypeAdapter.521"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %4, i8* %14) #18
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.15"* %9) #18
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #18
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.15"* %9) #18
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #18
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %25, i8* %26) #18
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #18
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #18
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #18
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #18
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #18
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %41, i8* %42) #18
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #18
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #18
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #18
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.14"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.519", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %4, i8* %9) #18
  %10 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.519"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #18
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #18
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.519"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.16"* %10, i8* %1) #18
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.16"* %10) #18
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.520"* nonnull %30, i8* %33) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #18
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.15"* %5) #18
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.521"* nonnull %4, i8* %36) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.14"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.519", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %4, i8* %9) #18
  %10 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.519"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #18
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.14", %"class.WTF::StringAppend.14"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #18
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.519"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.16"* %10, i16* %1) #18
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.16"* %10) #18
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.520"* nonnull %30, i16* %33) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #18
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.15"* %5) #18
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.521"* nonnull %4, i16* %36) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES3_E6lengthEv(%"class.WTF::StringAppend.15"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.15", %"class.WTF::StringAppend.15"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.16"* %8) #18
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #18
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.16"* %8) #18
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #18
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %26, i8* %27) #18
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #18
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #18
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #18
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #18
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #18
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %41, i8* %42) #18
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #18
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #18
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #18
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.16"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #18
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.521", %"class.WTF::StringTypeAdapter.521"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %4, i8* %14) #18
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.10"* %9) #18
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #18
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.10"* %9) #18
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #18
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i8* %25, i8* %26) #18
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #18
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #18
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #18
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #18
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #18
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.21, i64 0, i64 0), i8* %41, i8* %42) #18
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.20, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #18
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #18
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #18
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.16"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.519", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %4, i8* %9) #18
  %10 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.519"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #18
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #18
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.519"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.11"* %10, i8* %1) #18
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.11"* %10) #18
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.520"* nonnull %30, i8* %33) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #18
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.10"* %5) #18
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.521"* nonnull %4, i8* %36) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.16"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.519", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.521", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.521"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.521"* nonnull %4, i8* %9) #18
  %10 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.519"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #18
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.16", %"class.WTF::StringAppend.16"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #18
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.519"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.11"* %10, i16* %1) #18
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.519", %"class.WTF::StringTypeAdapter.519"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.11"* %10) #18
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.520"* nonnull %30, i16* %33) #18
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #18
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.10"* %5) #18
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.521"* nonnull %4, i16* %36) #18
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF13StringBuilder6AppendERKNS_10StringViewE(%"class.WTF::StringBuilder"*, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %81, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 1
  %10 = bitcast %"class.WTF::StringImpl"* %9 to i8*
  %11 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %1, i64 0, i32 1
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, %10
  %14 = bitcast i8* %12 to i16*
  br i1 %13, label %15, label %20

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %4, %17
  %19 = select i1 %18, %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"* null
  br label %20

20:                                               ; preds = %6, %15
  %21 = phi %"class.WTF::StringImpl"* [ %19, %15 ], [ null, %6 ]
  %22 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 2
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %74

25:                                               ; preds = %20
  %26 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 4
  %27 = load i8, i8* %26, align 1, !range !10
  %28 = icmp eq i8 %27, 0
  %29 = icmp ne %"class.WTF::StringImpl"* %21, null
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %74

31:                                               ; preds = %25
  %32 = ptrtoint %"class.WTF::StringImpl"* %21 to i64
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #18
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !2

46:                                               ; preds = %37
  tail call void @llvm.trap() #18
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %31, %47
  %50 = bitcast %"class.WTF::StringBuilder"* %0 to i64*
  %51 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %51, align 8
  store i64 %32, i64* %50, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %67, label %54

54:                                               ; preds = %49
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #18
  br label %67

67:                                               ; preds = %66, %63, %49
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 1
  %69 = load i32, i32* %68, align 4
  store i32 %69, i32* %22, align 8
  %70 = load atomic i32, i32* %33 monotonic, align 4
  %71 = getelementptr inbounds %"class.WTF::StringBuilder", %"class.WTF::StringBuilder"* %0, i64 0, i32 3
  %72 = trunc i32 %70 to i8
  %73 = and i8 %72, 1
  store i8 %73, i8* %71, align 4
  br label %81

74:                                               ; preds = %20, %25
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 1
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %80, label %79

79:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"* %0, i8* %12, i32 %4) #18
  br label %81

80:                                               ; preds = %74
  tail call void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"* %0, i16* %14, i32 %4) #18
  br label %81

81:                                               ; preds = %67, %80, %79, %2
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF13StringBuilder8ToStringEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKhj(%"class.WTF::StringBuilder"*, i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder6AppendEPKDsj(%"class.WTF::StringBuilder"*, i16*, i32) local_unnamed_addr #2

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #2

declare void @_ZN3WTF13StringBuilder5ClearEv(%"class.WTF::StringBuilder"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS2_14default_deleteIS6_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #18
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #18
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.22, i64 0, i64 0), i8* %11, i8* %12) #18
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.23, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #18
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #18
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #18
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #18
  ret i64 %21
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZN3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %25
  ret %"class.std::__1::unique_ptr"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::AudioParamTimeline::ParamEvent"**, i8 } @_ZN3WTF9HashTableIPN5blink18AudioParamTimeline10ParamEventES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_S4_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable"*, %"class.blink::AudioParamTimeline::ParamEvent"** dereferenceable(8), %"class.blink::AudioParamTimeline::ParamEvent"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  %5 = load %"class.blink::AudioParamTimeline::ParamEvent"**, %"class.blink::AudioParamTimeline::ParamEvent"*** %4, align 8
  %6 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"** %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::AudioParamTimeline::ParamEvent"** @_ZN3WTF9HashTableIPN5blink18AudioParamTimeline10ParamEventES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"* %0, %"class.blink::AudioParamTimeline::ParamEvent"** null)
  %9 = load %"class.blink::AudioParamTimeline::ParamEvent"**, %"class.blink::AudioParamTimeline::ParamEvent"*** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::AudioParamTimeline::ParamEvent"** [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %11, i64 %38
  %40 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %39, align 8
  %41 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %40, null
  %42 = inttoptr i64 %17 to %"class.blink::AudioParamTimeline::ParamEvent"*
  br i1 %41, label %76, label %43

43:                                               ; preds = %10
  %44 = xor i32 %36, -1
  %45 = lshr i32 %36, 23
  %46 = add i32 %45, %44
  %47 = shl i32 %46, 12
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 7
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 2
  %52 = xor i32 %51, %50
  %53 = lshr i32 %52, 20
  %54 = xor i32 %53, %52
  %55 = or i32 %54, 1
  %56 = zext i32 %55 to i64
  br label %57

57:                                               ; preds = %43, %64
  %58 = phi %"class.blink::AudioParamTimeline::ParamEvent"* [ %40, %43 ], [ %72, %64 ]
  %59 = phi %"class.blink::AudioParamTimeline::ParamEvent"** [ %39, %43 ], [ %71, %64 ]
  %60 = phi %"class.blink::AudioParamTimeline::ParamEvent"** [ null, %43 ], [ %66, %64 ]
  %61 = phi i64 [ %38, %43 ], [ %70, %64 ]
  %62 = phi i64 [ 0, %43 ], [ %68, %64 ]
  %63 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %58, %42
  br i1 %63, label %103, label %64

64:                                               ; preds = %57
  %65 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %58, inttoptr (i64 -1 to %"class.blink::AudioParamTimeline::ParamEvent"*)
  %66 = select i1 %65, %"class.blink::AudioParamTimeline::ParamEvent"** %59, %"class.blink::AudioParamTimeline::ParamEvent"** %60
  %67 = icmp eq i64 %62, 0
  %68 = select i1 %67, i64 %56, i64 %62
  %69 = add i64 %68, %61
  %70 = and i64 %69, %15
  %71 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %11, i64 %70
  %72 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %71, align 8
  %73 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %72, null
  br i1 %73, label %74, label %57

74:                                               ; preds = %64
  %75 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"** %66, null
  br i1 %75, label %76, label %79

76:                                               ; preds = %10, %74
  %77 = phi %"class.blink::AudioParamTimeline::ParamEvent"** [ %71, %74 ], [ %39, %10 ]
  %78 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"** %77 to i64*
  br label %87

79:                                               ; preds = %74
  %80 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"** %66 to i64*
  store i64 0, i64* %80, align 8
  %81 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  br label %87

87:                                               ; preds = %76, %79
  %88 = phi i64* [ %78, %76 ], [ %80, %79 ]
  %89 = phi %"class.blink::AudioParamTimeline::ParamEvent"** [ %77, %76 ], [ %66, %79 ]
  %90 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"** %2 to i64*
  %91 = load i64, i64* %90, align 8
  store i64 %91, i64* %88, align 8
  %92 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %93 = load i32, i32* %92, align 4
  %94 = add i32 %93, 1
  store i32 %94, i32* %92, align 4
  %95 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %96 = load i32, i32* %95, align 8
  %97 = add i32 %96, %94
  %98 = shl i32 %97, 1
  %99 = load i32, i32* %12, align 8
  %100 = icmp ult i32 %98, %99
  br i1 %100, label %103, label %101

101:                                              ; preds = %87
  %102 = tail call %"class.blink::AudioParamTimeline::ParamEvent"** @_ZN3WTF9HashTableIPN5blink18AudioParamTimeline10ParamEventES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"* %0, %"class.blink::AudioParamTimeline::ParamEvent"** %89)
  br label %103

103:                                              ; preds = %57, %87, %101
  %104 = phi i8 [ 1, %87 ], [ 1, %101 ], [ 0, %57 ]
  %105 = phi %"class.blink::AudioParamTimeline::ParamEvent"** [ %89, %87 ], [ %102, %101 ], [ %59, %57 ]
  %106 = insertvalue { %"class.blink::AudioParamTimeline::ParamEvent"**, i8 } undef, %"class.blink::AudioParamTimeline::ParamEvent"** %105, 0
  %107 = insertvalue { %"class.blink::AudioParamTimeline::ParamEvent"**, i8 } %106, i8 %104, 1
  ret { %"class.blink::AudioParamTimeline::ParamEvent"**, i8 } %107
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AudioParamTimeline::ParamEvent"** @_ZN3WTF9HashTableIPN5blink18AudioParamTimeline10ParamEventES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable"*, %"class.blink::AudioParamTimeline::ParamEvent"**) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #18
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #18
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.35, i64 0, i64 0), i8* %22, i8* %23) #18
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.36, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #18
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #18
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #18
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink18AudioParamTimeline10ParamEventEEEPKcv, i64 0, i64 0)) #18
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #18
  %36 = bitcast i8* %35 to %"class.blink::AudioParamTimeline::ParamEvent"**
  %37 = call %"class.blink::AudioParamTimeline::ParamEvent"** @_ZN3WTF9HashTableIPN5blink18AudioParamTimeline10ParamEventES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"* %0, %"class.blink::AudioParamTimeline::ParamEvent"** %36, i32 %32, %"class.blink::AudioParamTimeline::ParamEvent"** %1) #18
  ret %"class.blink::AudioParamTimeline::ParamEvent"** %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::AudioParamTimeline::ParamEvent"** @_ZN3WTF9HashTableIPN5blink18AudioParamTimeline10ParamEventES4_NS_17IdentityExtractorENS_7PtrHashIS3_EENS_10HashTraitsIS4_EES9_NS_18PartitionAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable"*, %"class.blink::AudioParamTimeline::ParamEvent"**, i32, %"class.blink::AudioParamTimeline::ParamEvent"**) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::AudioParamTimeline::ParamEvent"** %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.blink::AudioParamTimeline::ParamEvent"**, %"class.blink::AudioParamTimeline::ParamEvent"*** %9, align 8
  %17 = ptrtoint %"class.blink::AudioParamTimeline::ParamEvent"** %16 to i64
  br label %31

18:                                               ; preds = %119
  %19 = bitcast %"class.WTF::HashTable"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %120, %18 ]
  %23 = phi %"class.blink::AudioParamTimeline::ParamEvent"** [ null, %10 ], [ %123, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #18
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable", %"class.WTF::HashTable"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"class.blink::AudioParamTimeline::ParamEvent"** %23

31:                                               ; preds = %13, %119
  %32 = phi i64 [ %17, %13 ], [ %120, %119 ]
  %33 = phi i32 [ %7, %13 ], [ %121, %119 ]
  %34 = phi %"class.blink::AudioParamTimeline::ParamEvent"** [ %16, %13 ], [ %122, %119 ]
  %35 = phi %"class.blink::AudioParamTimeline::ParamEvent"** [ null, %13 ], [ %123, %119 ]
  %36 = phi i32 [ 0, %13 ], [ %124, %119 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %34, i64 %37
  %39 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %41 [
    i64 -1, label %119
    i64 0, label %119
  ]

41:                                               ; preds = %31
  %42 = shl i64 %40, 32
  %43 = xor i64 %42, -1
  %44 = add i64 %40, %43
  %45 = lshr i64 %44, 22
  %46 = xor i64 %45, %44
  %47 = shl i64 %46, 13
  %48 = xor i64 %47, -1
  %49 = add i64 %46, %48
  %50 = lshr i64 %49, 8
  %51 = xor i64 %50, %49
  %52 = mul i64 %51, 9
  %53 = lshr i64 %52, 15
  %54 = xor i64 %53, %52
  %55 = shl i64 %54, 27
  %56 = xor i64 %55, -1
  %57 = add i64 %54, %56
  %58 = lshr i64 %57, 31
  %59 = xor i64 %58, %57
  %60 = trunc i64 %59 to i32
  %61 = and i32 %14, %60
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %1, i64 %62
  %64 = ptrtoint %"class.blink::AudioParamTimeline::ParamEvent"** %63 to i64
  %65 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %63, align 8
  %66 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %65, null
  %67 = inttoptr i64 %40 to %"class.blink::AudioParamTimeline::ParamEvent"*
  br i1 %66, label %85, label %68

68:                                               ; preds = %41
  %69 = xor i32 %60, -1
  %70 = lshr i32 %60, 23
  %71 = add i32 %70, %69
  %72 = shl i32 %71, 12
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 7
  %75 = xor i32 %74, %73
  %76 = shl i32 %75, 2
  %77 = xor i32 %76, %75
  %78 = lshr i32 %77, 20
  %79 = xor i32 %78, %77
  %80 = or i32 %79, 1
  %81 = zext i32 %80 to i64
  br label %91

82:                                               ; preds = %98
  %83 = ptrtoint %"class.blink::AudioParamTimeline::ParamEvent"** %105 to i64
  %84 = inttoptr i64 %100 to %"class.blink::AudioParamTimeline::ParamEvent"**
  br label %85

85:                                               ; preds = %82, %41
  %86 = phi i64 [ %83, %82 ], [ %64, %41 ]
  %87 = phi %"class.blink::AudioParamTimeline::ParamEvent"** [ %84, %82 ], [ null, %41 ]
  %88 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"** %87, null
  %89 = ptrtoint %"class.blink::AudioParamTimeline::ParamEvent"** %87 to i64
  %90 = select i1 %88, i64 %86, i64 %89
  br label %109

91:                                               ; preds = %98, %68
  %92 = phi i64 [ 0, %68 ], [ %100, %98 ]
  %93 = phi %"class.blink::AudioParamTimeline::ParamEvent"* [ %65, %68 ], [ %107, %98 ]
  %94 = phi i64 [ %64, %68 ], [ %106, %98 ]
  %95 = phi i64 [ %62, %68 ], [ %104, %98 ]
  %96 = phi i64 [ 0, %68 ], [ %102, %98 ]
  %97 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %93, %67
  br i1 %97, label %109, label %98

98:                                               ; preds = %91
  %99 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %93, inttoptr (i64 -1 to %"class.blink::AudioParamTimeline::ParamEvent"*)
  %100 = select i1 %99, i64 %94, i64 %92
  %101 = icmp eq i64 %96, 0
  %102 = select i1 %101, i64 %81, i64 %96
  %103 = add i64 %102, %95
  %104 = and i64 %103, %15
  %105 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %1, i64 %104
  %106 = ptrtoint %"class.blink::AudioParamTimeline::ParamEvent"** %105 to i64
  %107 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %105, align 8
  %108 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %107, null
  br i1 %108, label %82, label %91

109:                                              ; preds = %91, %85
  %110 = phi i64 [ %90, %85 ], [ %94, %91 ]
  %111 = inttoptr i64 %110 to %"class.blink::AudioParamTimeline::ParamEvent"**
  %112 = inttoptr i64 %110 to i64*
  store i64 %40, i64* %112, align 8
  %113 = load %"class.blink::AudioParamTimeline::ParamEvent"**, %"class.blink::AudioParamTimeline::ParamEvent"*** %9, align 8
  %114 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %113, i64 %37
  %115 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"** %114, %3
  %116 = select i1 %115, %"class.blink::AudioParamTimeline::ParamEvent"** %111, %"class.blink::AudioParamTimeline::ParamEvent"** %35
  %117 = load i32, i32* %6, align 8
  %118 = ptrtoint %"class.blink::AudioParamTimeline::ParamEvent"** %113 to i64
  br label %119

119:                                              ; preds = %31, %31, %109
  %120 = phi i64 [ %32, %31 ], [ %118, %109 ], [ %32, %31 ]
  %121 = phi i32 [ %33, %31 ], [ %117, %109 ], [ %33, %31 ]
  %122 = phi %"class.blink::AudioParamTimeline::ParamEvent"** [ %34, %31 ], [ %113, %109 ], [ %34, %31 ]
  %123 = phi %"class.blink::AudioParamTimeline::ParamEvent"** [ %35, %31 ], [ %116, %109 ], [ %35, %31 ]
  %124 = add i32 %36, 1
  %125 = icmp eq i32 %124, %121
  br i1 %125, label %18, label %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #18
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #18
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #18
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.34, i64 0, i64 0), i8* %14, i8* %15) #18
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #18
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.24, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #18
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #18
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #18
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #18
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %25
  ret %"class.std::__1::unique_ptr"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeEl(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8), i64, %"class.std::__1::unique_ptr"*, i64) local_unnamed_addr #0 comdat {
  switch i64 %3, label %16 [
    i64 0, label %36
    i64 1, label %36
    i64 2, label %7
  ]

7:                                                ; preds = %6
  %8 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %2, align 8
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1
  %10 = tail call zeroext i1 %8(%"class.std::__1::unique_ptr"* dereferenceable(8) %9, %"class.std::__1::unique_ptr"* dereferenceable(8) %0) #18
  br i1 %10, label %11, label %36

11:                                               ; preds = %7
  %12 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 %13, i64* %14, align 8
  br label %36

16:                                               ; preds = %6
  %17 = icmp slt i64 %3, 1
  br i1 %17, label %18, label %19

18:                                               ; preds = %16
  tail call void @_ZNSt3__116__insertion_sortIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_T_(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %1, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2)
  br label %36

19:                                               ; preds = %16
  %20 = lshr i64 %3, 1
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 %20
  %22 = icmp sgt i64 %3, %5
  br i1 %22, label %34, label %23

23:                                               ; preds = %19
  tail call void @_ZNSt3__118__stable_sort_moveIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeE(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %21, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %20, %"class.std::__1::unique_ptr"* %4)
  %24 = sub nsw i64 %3, %20
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 %20
  tail call void @_ZNSt3__118__stable_sort_moveIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeE(%"class.std::__1::unique_ptr"* %21, %"class.std::__1::unique_ptr"* %1, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %24, %"class.std::__1::unique_ptr"* %25)
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 %3
  tail call void @_ZNSt3__119__merge_move_assignIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_SD_SD_EEvT0_SE_T1_SF_T2_T_(%"class.std::__1::unique_ptr"* %4, %"class.std::__1::unique_ptr"* %25, %"class.std::__1::unique_ptr"* %25, %"class.std::__1::unique_ptr"* %26, %"class.std::__1::unique_ptr"* %0, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2)
  %27 = icmp eq %"class.std::__1::unique_ptr"* %4, null
  br i1 %27, label %36, label %28

28:                                               ; preds = %23, %28
  %29 = phi i64 [ %31, %28 ], [ 0, %23 ]
  %30 = phi %"class.std::__1::unique_ptr"* [ %32, %28 ], [ %4, %23 ]
  tail call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* %30) #18
  %31 = add nuw i64 %29, 1
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %30, i64 1
  %33 = icmp eq i64 %31, %3
  br i1 %33, label %36, label %28

34:                                               ; preds = %19
  tail call void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeEl(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %21, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %20, %"class.std::__1::unique_ptr"* %4, i64 %5)
  %35 = sub nsw i64 %3, %20
  tail call void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeEl(%"class.std::__1::unique_ptr"* %21, %"class.std::__1::unique_ptr"* %1, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %35, %"class.std::__1::unique_ptr"* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_SE_T_NS_15iterator_traitsISE_E15difference_typeESI_PNSH_10value_typeEl(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %21, %"class.std::__1::unique_ptr"* %1, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %20, i64 %35, %"class.std::__1::unique_ptr"* %4, i64 %5)
  ret void

36:                                               ; preds = %28, %23, %7, %11, %6, %6, %18
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #17

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__insertion_sortIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_T_(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::unique_ptr", align 8
  %5 = icmp eq %"class.std::__1::unique_ptr"* %0, %1
  br i1 %5, label %75, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 1
  %8 = icmp eq %"class.std::__1::unique_ptr"* %7, %1
  br i1 %8, label %75, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.std::__1::unique_ptr"* %4 to i8*
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  br label %13

13:                                               ; preds = %9, %48
  %14 = phi %"class.std::__1::unique_ptr"* [ %7, %9 ], [ %49, %48 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #18
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  %17 = load i64, i64* %16, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %15, align 8
  store i64 %17, i64* %12, align 8
  %18 = icmp eq %"class.std::__1::unique_ptr"* %14, %0
  br i1 %18, label %27, label %19

19:                                               ; preds = %13, %73
  %20 = phi %"class.std::__1::unique_ptr"* [ %22, %73 ], [ %14, %13 ]
  %21 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %2, align 8
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 -1
  %23 = call zeroext i1 %21(%"class.std::__1::unique_ptr"* nonnull dereferenceable(8) %4, %"class.std::__1::unique_ptr"* dereferenceable(8) %22) #18
  br i1 %23, label %51, label %24

24:                                               ; preds = %73, %19
  %25 = phi %"class.std::__1::unique_ptr"* [ %20, %19 ], [ %0, %73 ]
  %26 = load i64, i64* %12, align 8
  br label %27

27:                                               ; preds = %24, %13
  %28 = phi i64 [ %17, %13 ], [ %26, %24 ]
  %29 = phi %"class.std::__1::unique_ptr"* [ %0, %13 ], [ %25, %24 ]
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %11, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr"* %29 to i64*
  store i64 %28, i64* %32, align 8
  %33 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %31, null
  br i1 %33, label %48, label %34

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %31, i64 0, i32 12
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* %35) #18
  %36 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %31, i64 0, i32 8, i32 0, i32 0, i32 0
  %37 = load float*, float** %36, align 8
  %38 = icmp eq float* %37, null
  %39 = bitcast float* %37 to i8*
  br i1 %38, label %46, label %40, !prof !9

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %31, i64 0, i32 8, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !2

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #18
  br label %46

46:                                               ; preds = %45, %34
  %47 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"* %31 to i8*
  call void @_ZdlPv(i8* %47) #19
  br label %48

48:                                               ; preds = %27, %46
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* nonnull %4) #18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #18
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 1
  %50 = icmp eq %"class.std::__1::unique_ptr"* %49, %1
  br i1 %50, label %75, label %13

51:                                               ; preds = %19
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %22, i64 0, i32 0, i32 0, i32 0
  %53 = bitcast %"class.std::__1::unique_ptr"* %22 to i64*
  %54 = load i64, i64* %53, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %52, align 8
  %55 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 0, i32 0, i32 0, i32 0
  %56 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %55, align 8
  %57 = bitcast %"class.std::__1::unique_ptr"* %20 to i64*
  store i64 %54, i64* %57, align 8
  %58 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %56, null
  br i1 %58, label %73, label %59

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %56, i64 0, i32 12
  call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* %60) #18
  %61 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %56, i64 0, i32 8, i32 0, i32 0, i32 0
  %62 = load float*, float** %61, align 8
  %63 = icmp eq float* %62, null
  %64 = bitcast float* %62 to i8*
  br i1 %63, label %71, label %65, !prof !9

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %56, i64 0, i32 8, i32 0, i32 0, i32 2
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %70, label %69, !prof !2

69:                                               ; preds = %65
  store i32 0, i32* %66, align 4
  br label %70

70:                                               ; preds = %69, %65
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %64) #18
  br label %71

71:                                               ; preds = %70, %59
  %72 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"* %56 to i8*
  call void @_ZdlPv(i8* %72) #19
  br label %73

73:                                               ; preds = %51, %71
  %74 = icmp eq %"class.std::__1::unique_ptr"* %22, %0
  br i1 %74, label %24, label %19

75:                                               ; preds = %48, %6, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeE(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8), i64, %"class.std::__1::unique_ptr"*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %35 [
    i64 0, label %230
    i64 1, label %6
    i64 2, label %11
  ]

6:                                                ; preds = %5
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %7, align 8
  %10 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %9, i64* %10, align 8
  br label %230

11:                                               ; preds = %5
  %12 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %2, align 8
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1
  %14 = tail call zeroext i1 %12(%"class.std::__1::unique_ptr"* dereferenceable(8) %13, %"class.std::__1::unique_ptr"* dereferenceable(8) %0) #18
  br i1 %14, label %15, label %25

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %16, align 8
  %19 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %18, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 1
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %22 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %23 = load i64, i64* %22, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %21, align 8
  %24 = bitcast %"class.std::__1::unique_ptr"* %20 to i64*
  store i64 %23, i64* %24, align 8
  br label %230

25:                                               ; preds = %11
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %28 = load i64, i64* %27, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %26, align 8
  %29 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  store i64 %28, i64* %29, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 1
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  %33 = load i64, i64* %32, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %31, align 8
  %34 = bitcast %"class.std::__1::unique_ptr"* %30 to i64*
  store i64 %33, i64* %34, align 8
  br label %230

35:                                               ; preds = %5
  %36 = icmp slt i64 %3, 9
  br i1 %36, label %37, label %38

37:                                               ; preds = %35
  tail call void @_ZNSt3__121__insertion_sort_moveIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_PNS_15iterator_traitsISE_E10value_typeET_(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %1, %"class.std::__1::unique_ptr"* %4, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2)
  br label %230

38:                                               ; preds = %35
  %39 = lshr i64 %3, 1
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 %39
  tail call void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeEl(%"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"* %40, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %39, %"class.std::__1::unique_ptr"* %4, i64 %39)
  %41 = sub nsw i64 %3, %39
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 %39
  tail call void @_ZNSt3__113__stable_sortIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_T_NS_15iterator_traitsISE_E15difference_typeEPNSH_10value_typeEl(%"class.std::__1::unique_ptr"* %40, %"class.std::__1::unique_ptr"* %1, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %2, i64 %41, %"class.std::__1::unique_ptr"* %42, i64 %41)
  %43 = icmp eq i64 %39, 0
  br i1 %43, label %44, label %125

44:                                               ; preds = %225, %38
  %45 = phi %"class.std::__1::unique_ptr"* [ %40, %38 ], [ %226, %225 ]
  %46 = phi %"class.std::__1::unique_ptr"* [ %4, %38 ], [ %228, %225 ]
  %47 = icmp eq %"class.std::__1::unique_ptr"* %45, %1
  br i1 %47, label %230, label %48

48:                                               ; preds = %44
  %49 = ptrtoint %"class.std::__1::unique_ptr"* %45 to i64
  %50 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1, i32 0, i32 0, i32 0
  %51 = ptrtoint %"class.blink::AudioParamTimeline::ParamEvent"** %50 to i64
  %52 = sub i64 %51, %49
  %53 = lshr i64 %52, 3
  %54 = add nuw nsw i64 %53, 1
  %55 = and i64 %54, 7
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %48, %57
  %58 = phi %"class.std::__1::unique_ptr"* [ %66, %57 ], [ %46, %48 ]
  %59 = phi %"class.std::__1::unique_ptr"* [ %65, %57 ], [ %45, %48 ]
  %60 = phi i64 [ %67, %57 ], [ %55, %48 ]
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 0, i32 0, i32 0, i32 0
  %62 = bitcast %"class.std::__1::unique_ptr"* %59 to i64*
  %63 = load i64, i64* %62, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %61, align 8
  %64 = bitcast %"class.std::__1::unique_ptr"* %58 to i64*
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 1
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 1
  %67 = add i64 %60, -1
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %69, label %57, !llvm.loop !74

69:                                               ; preds = %57, %48
  %70 = phi %"class.std::__1::unique_ptr"* [ %46, %48 ], [ %66, %57 ]
  %71 = phi %"class.std::__1::unique_ptr"* [ %45, %48 ], [ %65, %57 ]
  %72 = icmp ult i64 %52, 56
  br i1 %72, label %230, label %73

73:                                               ; preds = %69, %73
  %74 = phi %"class.std::__1::unique_ptr"* [ %123, %73 ], [ %70, %69 ]
  %75 = phi %"class.std::__1::unique_ptr"* [ %122, %73 ], [ %71, %69 ]
  %76 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 0, i32 0, i32 0, i32 0
  %77 = bitcast %"class.std::__1::unique_ptr"* %75 to i64*
  %78 = load i64, i64* %77, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %76, align 8
  %79 = bitcast %"class.std::__1::unique_ptr"* %74 to i64*
  store i64 %78, i64* %79, align 8
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %74, i64 1
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 0, i32 0, i32 0, i32 0
  %83 = bitcast %"class.std::__1::unique_ptr"* %80 to i64*
  %84 = load i64, i64* %83, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %82, align 8
  %85 = bitcast %"class.std::__1::unique_ptr"* %81 to i64*
  store i64 %84, i64* %85, align 8
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %74, i64 2
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %86, i64 0, i32 0, i32 0, i32 0
  %89 = bitcast %"class.std::__1::unique_ptr"* %86 to i64*
  %90 = load i64, i64* %89, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %88, align 8
  %91 = bitcast %"class.std::__1::unique_ptr"* %87 to i64*
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %74, i64 3
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %92, i64 0, i32 0, i32 0, i32 0
  %95 = bitcast %"class.std::__1::unique_ptr"* %92 to i64*
  %96 = load i64, i64* %95, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %94, align 8
  %97 = bitcast %"class.std::__1::unique_ptr"* %93 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %74, i64 4
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %98, i64 0, i32 0, i32 0, i32 0
  %101 = bitcast %"class.std::__1::unique_ptr"* %98 to i64*
  %102 = load i64, i64* %101, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %100, align 8
  %103 = bitcast %"class.std::__1::unique_ptr"* %99 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %74, i64 5
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %107 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  %108 = load i64, i64* %107, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %106, align 8
  %109 = bitcast %"class.std::__1::unique_ptr"* %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %74, i64 6
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %110, i64 0, i32 0, i32 0, i32 0
  %113 = bitcast %"class.std::__1::unique_ptr"* %110 to i64*
  %114 = load i64, i64* %113, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %112, align 8
  %115 = bitcast %"class.std::__1::unique_ptr"* %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %74, i64 7
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %116, i64 0, i32 0, i32 0, i32 0
  %119 = bitcast %"class.std::__1::unique_ptr"* %116 to i64*
  %120 = load i64, i64* %119, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %118, align 8
  %121 = bitcast %"class.std::__1::unique_ptr"* %117 to i64*
  store i64 %120, i64* %121, align 8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %75, i64 8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %74, i64 8
  %124 = icmp eq %"class.std::__1::unique_ptr"* %122, %1
  br i1 %124, label %230, label %73

125:                                              ; preds = %38, %225
  %126 = phi %"class.std::__1::unique_ptr"* [ %227, %225 ], [ %0, %38 ]
  %127 = phi %"class.std::__1::unique_ptr"* [ %228, %225 ], [ %4, %38 ]
  %128 = phi %"class.std::__1::unique_ptr"* [ %226, %225 ], [ %40, %38 ]
  %129 = icmp eq %"class.std::__1::unique_ptr"* %128, %1
  br i1 %129, label %130, label %210

130:                                              ; preds = %125
  %131 = icmp eq %"class.std::__1::unique_ptr"* %126, %40
  br i1 %131, label %230, label %132

132:                                              ; preds = %130
  %133 = ptrtoint %"class.std::__1::unique_ptr"* %126 to i64
  %134 = add nsw i64 %39, -1
  %135 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 %134, i32 0, i32 0, i32 0
  %136 = ptrtoint %"class.blink::AudioParamTimeline::ParamEvent"** %135 to i64
  %137 = sub i64 %136, %133
  %138 = lshr i64 %137, 3
  %139 = add nuw nsw i64 %138, 1
  %140 = and i64 %139, 7
  %141 = icmp eq i64 %140, 0
  br i1 %141, label %154, label %142

142:                                              ; preds = %132, %142
  %143 = phi %"class.std::__1::unique_ptr"* [ %150, %142 ], [ %126, %132 ]
  %144 = phi %"class.std::__1::unique_ptr"* [ %151, %142 ], [ %127, %132 ]
  %145 = phi i64 [ %152, %142 ], [ %140, %132 ]
  %146 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %143, i64 0, i32 0, i32 0, i32 0
  %147 = bitcast %"class.std::__1::unique_ptr"* %143 to i64*
  %148 = load i64, i64* %147, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %146, align 8
  %149 = bitcast %"class.std::__1::unique_ptr"* %144 to i64*
  store i64 %148, i64* %149, align 8
  %150 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %143, i64 1
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %144, i64 1
  %152 = add i64 %145, -1
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %154, label %142, !llvm.loop !75

154:                                              ; preds = %142, %132
  %155 = phi %"class.std::__1::unique_ptr"* [ %126, %132 ], [ %150, %142 ]
  %156 = phi %"class.std::__1::unique_ptr"* [ %127, %132 ], [ %151, %142 ]
  %157 = icmp ult i64 %137, 56
  br i1 %157, label %230, label %158

158:                                              ; preds = %154, %158
  %159 = phi %"class.std::__1::unique_ptr"* [ %207, %158 ], [ %155, %154 ]
  %160 = phi %"class.std::__1::unique_ptr"* [ %208, %158 ], [ %156, %154 ]
  %161 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 0, i32 0, i32 0, i32 0
  %162 = bitcast %"class.std::__1::unique_ptr"* %159 to i64*
  %163 = load i64, i64* %162, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %161, align 8
  %164 = bitcast %"class.std::__1::unique_ptr"* %160 to i64*
  store i64 %163, i64* %164, align 8
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 1
  %166 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 1
  %167 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %165, i64 0, i32 0, i32 0, i32 0
  %168 = bitcast %"class.std::__1::unique_ptr"* %165 to i64*
  %169 = load i64, i64* %168, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %167, align 8
  %170 = bitcast %"class.std::__1::unique_ptr"* %166 to i64*
  store i64 %169, i64* %170, align 8
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 2
  %172 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 2
  %173 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %171, i64 0, i32 0, i32 0, i32 0
  %174 = bitcast %"class.std::__1::unique_ptr"* %171 to i64*
  %175 = load i64, i64* %174, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %173, align 8
  %176 = bitcast %"class.std::__1::unique_ptr"* %172 to i64*
  store i64 %175, i64* %176, align 8
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 3
  %178 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 3
  %179 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %177, i64 0, i32 0, i32 0, i32 0
  %180 = bitcast %"class.std::__1::unique_ptr"* %177 to i64*
  %181 = load i64, i64* %180, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %179, align 8
  %182 = bitcast %"class.std::__1::unique_ptr"* %178 to i64*
  store i64 %181, i64* %182, align 8
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 4
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 4
  %185 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %183, i64 0, i32 0, i32 0, i32 0
  %186 = bitcast %"class.std::__1::unique_ptr"* %183 to i64*
  %187 = load i64, i64* %186, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %185, align 8
  %188 = bitcast %"class.std::__1::unique_ptr"* %184 to i64*
  store i64 %187, i64* %188, align 8
  %189 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 5
  %190 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 5
  %191 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %189, i64 0, i32 0, i32 0, i32 0
  %192 = bitcast %"class.std::__1::unique_ptr"* %189 to i64*
  %193 = load i64, i64* %192, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %191, align 8
  %194 = bitcast %"class.std::__1::unique_ptr"* %190 to i64*
  store i64 %193, i64* %194, align 8
  %195 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 6
  %196 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 6
  %197 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %195, i64 0, i32 0, i32 0, i32 0
  %198 = bitcast %"class.std::__1::unique_ptr"* %195 to i64*
  %199 = load i64, i64* %198, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %197, align 8
  %200 = bitcast %"class.std::__1::unique_ptr"* %196 to i64*
  store i64 %199, i64* %200, align 8
  %201 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 7
  %202 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 7
  %203 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %201, i64 0, i32 0, i32 0, i32 0
  %204 = bitcast %"class.std::__1::unique_ptr"* %201 to i64*
  %205 = load i64, i64* %204, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %203, align 8
  %206 = bitcast %"class.std::__1::unique_ptr"* %202 to i64*
  store i64 %205, i64* %206, align 8
  %207 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %159, i64 8
  %208 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %160, i64 8
  %209 = icmp eq %"class.std::__1::unique_ptr"* %207, %40
  br i1 %209, label %230, label %158

210:                                              ; preds = %125
  %211 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %2, align 8
  %212 = tail call zeroext i1 %211(%"class.std::__1::unique_ptr"* dereferenceable(8) %128, %"class.std::__1::unique_ptr"* dereferenceable(8) %126) #18
  br i1 %212, label %213, label %219

213:                                              ; preds = %210
  %214 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %128, i64 0, i32 0, i32 0, i32 0
  %215 = bitcast %"class.std::__1::unique_ptr"* %128 to i64*
  %216 = load i64, i64* %215, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %214, align 8
  %217 = bitcast %"class.std::__1::unique_ptr"* %127 to i64*
  store i64 %216, i64* %217, align 8
  %218 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %128, i64 1
  br label %225

219:                                              ; preds = %210
  %220 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %126, i64 0, i32 0, i32 0, i32 0
  %221 = bitcast %"class.std::__1::unique_ptr"* %126 to i64*
  %222 = load i64, i64* %221, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %220, align 8
  %223 = bitcast %"class.std::__1::unique_ptr"* %127 to i64*
  store i64 %222, i64* %223, align 8
  %224 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %126, i64 1
  br label %225

225:                                              ; preds = %219, %213
  %226 = phi %"class.std::__1::unique_ptr"* [ %218, %213 ], [ %128, %219 ]
  %227 = phi %"class.std::__1::unique_ptr"* [ %126, %213 ], [ %224, %219 ]
  %228 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %127, i64 1
  %229 = icmp eq %"class.std::__1::unique_ptr"* %227, %40
  br i1 %229, label %44, label %125

230:                                              ; preds = %154, %158, %69, %73, %130, %44, %25, %15, %5, %37, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__119__merge_move_assignIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_SD_SD_EEvT0_SE_T1_SF_T2_T_(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = icmp eq %"class.std::__1::unique_ptr"* %0, %1
  br i1 %7, label %8, label %12

8:                                                ; preds = %98, %6
  %9 = phi %"class.std::__1::unique_ptr"* [ %2, %6 ], [ %99, %98 ]
  %10 = phi %"class.std::__1::unique_ptr"* [ %4, %6 ], [ %101, %98 ]
  %11 = icmp eq %"class.std::__1::unique_ptr"* %9, %3
  br i1 %11, label %131, label %103

12:                                               ; preds = %6, %98
  %13 = phi %"class.std::__1::unique_ptr"* [ %100, %98 ], [ %0, %6 ]
  %14 = phi %"class.std::__1::unique_ptr"* [ %101, %98 ], [ %4, %6 ]
  %15 = phi %"class.std::__1::unique_ptr"* [ %99, %98 ], [ %2, %6 ]
  %16 = icmp eq %"class.std::__1::unique_ptr"* %15, %3
  br i1 %16, label %17, label %47

17:                                               ; preds = %12
  %18 = icmp eq %"class.std::__1::unique_ptr"* %13, %1
  br i1 %18, label %131, label %19

19:                                               ; preds = %17, %43
  %20 = phi %"class.std::__1::unique_ptr"* [ %44, %43 ], [ %13, %17 ]
  %21 = phi %"class.std::__1::unique_ptr"* [ %45, %43 ], [ %14, %17 ]
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"class.std::__1::unique_ptr"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %22, align 8
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %25, align 8
  %27 = bitcast %"class.std::__1::unique_ptr"* %21 to i64*
  store i64 %24, i64* %27, align 8
  %28 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %26, null
  br i1 %28, label %43, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %26, i64 0, i32 12
  tail call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* %30) #18
  %31 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %26, i64 0, i32 8, i32 0, i32 0, i32 0
  %32 = load float*, float** %31, align 8
  %33 = icmp eq float* %32, null
  %34 = bitcast float* %32 to i8*
  br i1 %33, label %41, label %35, !prof !9

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %26, i64 0, i32 8, i32 0, i32 0, i32 2
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %40, label %39, !prof !2

39:                                               ; preds = %35
  store i32 0, i32* %36, align 4
  br label %40

40:                                               ; preds = %39, %35
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %34) #18
  br label %41

41:                                               ; preds = %40, %29
  %42 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"* %26 to i8*
  tail call void @_ZdlPv(i8* %42) #19
  br label %43

43:                                               ; preds = %19, %41
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 1
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %21, i64 1
  %46 = icmp eq %"class.std::__1::unique_ptr"* %44, %1
  br i1 %46, label %131, label %19

47:                                               ; preds = %12
  %48 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %5, align 8
  %49 = tail call zeroext i1 %48(%"class.std::__1::unique_ptr"* dereferenceable(8) %15, %"class.std::__1::unique_ptr"* dereferenceable(8) %13) #18
  br i1 %49, label %50, label %74

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::unique_ptr"* %15 to i64*
  %53 = load i64, i64* %52, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %51, align 8
  %54 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %54, align 8
  %56 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  store i64 %53, i64* %56, align 8
  %57 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %55, null
  br i1 %57, label %72, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %55, i64 0, i32 12
  tail call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* %59) #18
  %60 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %55, i64 0, i32 8, i32 0, i32 0, i32 0
  %61 = load float*, float** %60, align 8
  %62 = icmp eq float* %61, null
  %63 = bitcast float* %61 to i8*
  br i1 %62, label %70, label %64, !prof !9

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %55, i64 0, i32 8, i32 0, i32 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %69, label %68, !prof !2

68:                                               ; preds = %64
  store i32 0, i32* %65, align 4
  br label %69

69:                                               ; preds = %68, %64
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %63) #18
  br label %70

70:                                               ; preds = %69, %58
  %71 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"* %55 to i8*
  tail call void @_ZdlPv(i8* %71) #19
  br label %72

72:                                               ; preds = %50, %70
  %73 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 1
  br label %98

74:                                               ; preds = %47
  %75 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 0, i32 0, i32 0, i32 0
  %76 = bitcast %"class.std::__1::unique_ptr"* %13 to i64*
  %77 = load i64, i64* %76, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %75, align 8
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %78, align 8
  %80 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  store i64 %77, i64* %80, align 8
  %81 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %79, null
  br i1 %81, label %96, label %82

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %79, i64 0, i32 12
  tail call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* %83) #18
  %84 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %79, i64 0, i32 8, i32 0, i32 0, i32 0
  %85 = load float*, float** %84, align 8
  %86 = icmp eq float* %85, null
  %87 = bitcast float* %85 to i8*
  br i1 %86, label %94, label %88, !prof !9

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %79, i64 0, i32 8, i32 0, i32 0, i32 2
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %93, label %92, !prof !2

92:                                               ; preds = %88
  store i32 0, i32* %89, align 4
  br label %93

93:                                               ; preds = %92, %88
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %87) #18
  br label %94

94:                                               ; preds = %93, %82
  %95 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"* %79 to i8*
  tail call void @_ZdlPv(i8* %95) #19
  br label %96

96:                                               ; preds = %74, %94
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %13, i64 1
  br label %98

98:                                               ; preds = %72, %96
  %99 = phi %"class.std::__1::unique_ptr"* [ %73, %72 ], [ %15, %96 ]
  %100 = phi %"class.std::__1::unique_ptr"* [ %13, %72 ], [ %97, %96 ]
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 1
  %102 = icmp eq %"class.std::__1::unique_ptr"* %100, %1
  br i1 %102, label %8, label %12

103:                                              ; preds = %8, %127
  %104 = phi %"class.std::__1::unique_ptr"* [ %129, %127 ], [ %10, %8 ]
  %105 = phi %"class.std::__1::unique_ptr"* [ %128, %127 ], [ %9, %8 ]
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %105, i64 0, i32 0, i32 0, i32 0
  %107 = bitcast %"class.std::__1::unique_ptr"* %105 to i64*
  %108 = load i64, i64* %107, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %106, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %109, align 8
  %111 = bitcast %"class.std::__1::unique_ptr"* %104 to i64*
  store i64 %108, i64* %111, align 8
  %112 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %110, null
  br i1 %112, label %127, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %110, i64 0, i32 12
  tail call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* %114) #18
  %115 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %110, i64 0, i32 8, i32 0, i32 0, i32 0
  %116 = load float*, float** %115, align 8
  %117 = icmp eq float* %116, null
  %118 = bitcast float* %116 to i8*
  br i1 %117, label %125, label %119, !prof !9

119:                                              ; preds = %113
  %120 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %110, i64 0, i32 8, i32 0, i32 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %124, label %123, !prof !2

123:                                              ; preds = %119
  store i32 0, i32* %120, align 4
  br label %124

124:                                              ; preds = %123, %119
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %118) #18
  br label %125

125:                                              ; preds = %124, %113
  %126 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"* %110 to i8*
  tail call void @_ZdlPv(i8* %126) #19
  br label %127

127:                                              ; preds = %103, %125
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %105, i64 1
  %129 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 1
  %130 = icmp eq %"class.std::__1::unique_ptr"* %128, %3
  br i1 %130, label %131, label %103

131:                                              ; preds = %43, %127, %17, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_SE_T_NS_15iterator_traitsISE_E15difference_typeESI_PNSH_10value_typeEl(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8), i64, i64, %"class.std::__1::unique_ptr"*, i64) local_unnamed_addr #0 comdat {
  %9 = icmp eq i64 %5, 0
  br i1 %9, label %224, label %10

10:                                               ; preds = %8, %217
  %11 = phi %"class.std::__1::unique_ptr"* [ %222, %217 ], [ %0, %8 ]
  %12 = phi %"class.std::__1::unique_ptr"* [ %221, %217 ], [ %1, %8 ]
  %13 = phi i64 [ %220, %217 ], [ %5, %8 ]
  %14 = phi i64 [ %219, %217 ], [ %4, %8 ]
  %15 = phi %"class.std::__1::unique_ptr"* [ %218, %217 ], [ %2, %8 ]
  %16 = ptrtoint %"class.std::__1::unique_ptr"* %12 to i64
  %17 = icmp sgt i64 %14, %7
  %18 = icmp sgt i64 %13, %7
  %19 = and i1 %17, %18
  br i1 %19, label %20, label %22

20:                                               ; preds = %10
  %21 = icmp eq i64 %14, 0
  br i1 %21, label %224, label %23

22:                                               ; preds = %10
  tail call void @_ZNSt3__124__buffered_inplace_mergeIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_SE_T_NS_15iterator_traitsISE_E15difference_typeESI_PNSH_10value_typeE(%"class.std::__1::unique_ptr"* %11, %"class.std::__1::unique_ptr"* %12, %"class.std::__1::unique_ptr"* %15, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %3, i64 %14, i64 %13, %"class.std::__1::unique_ptr"* %6)
  br label %224

23:                                               ; preds = %20, %28
  %24 = phi %"class.std::__1::unique_ptr"* [ %29, %28 ], [ %11, %20 ]
  %25 = phi i64 [ %30, %28 ], [ %14, %20 ]
  %26 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %3, align 8
  %27 = tail call zeroext i1 %26(%"class.std::__1::unique_ptr"* dereferenceable(8) %12, %"class.std::__1::unique_ptr"* dereferenceable(8) %24) #18
  br i1 %27, label %32, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 1
  %30 = add nsw i64 %25, -1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %224, label %23

32:                                               ; preds = %23
  %33 = icmp slt i64 %25, %13
  br i1 %33, label %34, label %62

34:                                               ; preds = %32
  %35 = sdiv i64 %13, 2
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 %35
  %37 = ptrtoint %"class.std::__1::unique_ptr"* %24 to i64
  %38 = sub i64 %16, %37
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %57, label %40

40:                                               ; preds = %34
  %41 = ashr exact i64 %38, 3
  br label %42

42:                                               ; preds = %42, %40
  %43 = phi i64 [ %53, %42 ], [ %41, %40 ]
  %44 = phi %"class.std::__1::unique_ptr"* [ %52, %42 ], [ %24, %40 ]
  %45 = lshr i64 %43, 1
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %44, i64 %45
  %47 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %3, align 8
  %48 = tail call zeroext i1 %47(%"class.std::__1::unique_ptr"* dereferenceable(8) %36, %"class.std::__1::unique_ptr"* dereferenceable(8) %46) #18
  %49 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %46, i64 1
  %50 = xor i64 %45, -1
  %51 = add i64 %43, %50
  %52 = select i1 %48, %"class.std::__1::unique_ptr"* %44, %"class.std::__1::unique_ptr"* %49
  %53 = select i1 %48, i64 %45, i64 %51
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %55, label %42

55:                                               ; preds = %42
  %56 = ptrtoint %"class.std::__1::unique_ptr"* %52 to i64
  br label %57

57:                                               ; preds = %55, %34
  %58 = phi i64 [ %56, %55 ], [ %37, %34 ]
  %59 = phi %"class.std::__1::unique_ptr"* [ %52, %55 ], [ %24, %34 ]
  %60 = sub i64 %58, %37
  %61 = ashr exact i64 %60, 3
  br label %98

62:                                               ; preds = %32
  %63 = icmp eq i64 %25, 1
  br i1 %63, label %64, label %69

64:                                               ; preds = %62
  %65 = bitcast %"class.std::__1::unique_ptr"* %24 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  %68 = load i64, i64* %67, align 8
  store i64 %68, i64* %65, align 8
  store i64 %66, i64* %67, align 8
  br label %224

69:                                               ; preds = %62
  %70 = sdiv i64 %25, 2
  %71 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 %70
  %72 = ptrtoint %"class.std::__1::unique_ptr"* %15 to i64
  %73 = ptrtoint %"class.std::__1::unique_ptr"* %12 to i64
  %74 = sub i64 %72, %73
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %93, label %76

76:                                               ; preds = %69
  %77 = ashr exact i64 %74, 3
  br label %78

78:                                               ; preds = %78, %76
  %79 = phi i64 [ %89, %78 ], [ %77, %76 ]
  %80 = phi %"class.std::__1::unique_ptr"* [ %88, %78 ], [ %12, %76 ]
  %81 = lshr i64 %79, 1
  %82 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %80, i64 %81
  %83 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %3, align 8
  %84 = tail call zeroext i1 %83(%"class.std::__1::unique_ptr"* dereferenceable(8) %82, %"class.std::__1::unique_ptr"* dereferenceable(8) %71) #18
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 1
  %86 = xor i64 %81, -1
  %87 = add i64 %79, %86
  %88 = select i1 %84, %"class.std::__1::unique_ptr"* %85, %"class.std::__1::unique_ptr"* %80
  %89 = select i1 %84, i64 %87, i64 %81
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %78

91:                                               ; preds = %78
  %92 = ptrtoint %"class.std::__1::unique_ptr"* %88 to i64
  br label %93

93:                                               ; preds = %91, %69
  %94 = phi i64 [ %92, %91 ], [ %73, %69 ]
  %95 = phi %"class.std::__1::unique_ptr"* [ %88, %91 ], [ %12, %69 ]
  %96 = sub i64 %94, %73
  %97 = ashr exact i64 %96, 3
  br label %98

98:                                               ; preds = %93, %57
  %99 = phi %"class.std::__1::unique_ptr"* [ %59, %57 ], [ %71, %93 ]
  %100 = phi %"class.std::__1::unique_ptr"* [ %36, %57 ], [ %95, %93 ]
  %101 = phi i64 [ %61, %57 ], [ %70, %93 ]
  %102 = phi i64 [ %35, %57 ], [ %97, %93 ]
  %103 = sub nsw i64 %25, %101
  %104 = sub nsw i64 %13, %102
  %105 = icmp eq %"class.std::__1::unique_ptr"* %99, %12
  br i1 %105, label %210, label %106

106:                                              ; preds = %98
  %107 = icmp eq %"class.std::__1::unique_ptr"* %12, %100
  br i1 %107, label %210, label %108

108:                                              ; preds = %106
  %109 = bitcast %"class.std::__1::unique_ptr"* %99 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  %112 = load i64, i64* %111, align 8
  store i64 %112, i64* %109, align 8
  store i64 %110, i64* %111, align 8
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %99, i64 1
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 1
  %115 = icmp eq %"class.std::__1::unique_ptr"* %114, %100
  %116 = icmp eq %"class.std::__1::unique_ptr"* %113, %12
  br i1 %115, label %188, label %117

117:                                              ; preds = %108
  %118 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %100, i64 -2
  %119 = ptrtoint %"class.std::__1::unique_ptr"* %118 to i64
  %120 = sub i64 %119, %16
  %121 = lshr i64 %120, 3
  %122 = add nuw nsw i64 %121, 1
  %123 = and i64 %122, 3
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %141, label %125

125:                                              ; preds = %117, %125
  %126 = phi i1 [ %138, %125 ], [ %116, %117 ]
  %127 = phi %"class.std::__1::unique_ptr"* [ %137, %125 ], [ %114, %117 ]
  %128 = phi %"class.std::__1::unique_ptr"* [ %136, %125 ], [ %113, %117 ]
  %129 = phi %"class.std::__1::unique_ptr"* [ %131, %125 ], [ %12, %117 ]
  %130 = phi i64 [ %139, %125 ], [ %123, %117 ]
  %131 = select i1 %126, %"class.std::__1::unique_ptr"* %127, %"class.std::__1::unique_ptr"* %129
  %132 = bitcast %"class.std::__1::unique_ptr"* %128 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = bitcast %"class.std::__1::unique_ptr"* %127 to i64*
  %135 = load i64, i64* %134, align 8
  store i64 %135, i64* %132, align 8
  store i64 %133, i64* %134, align 8
  %136 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %128, i64 1
  %137 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %127, i64 1
  %138 = icmp eq %"class.std::__1::unique_ptr"* %136, %131
  %139 = add i64 %130, -1
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %125, !llvm.loop !76

141:                                              ; preds = %125, %117
  %142 = phi %"class.std::__1::unique_ptr"* [ undef, %117 ], [ %131, %125 ]
  %143 = phi %"class.std::__1::unique_ptr"* [ undef, %117 ], [ %136, %125 ]
  %144 = phi i1 [ undef, %117 ], [ %138, %125 ]
  %145 = phi i1 [ %116, %117 ], [ %138, %125 ]
  %146 = phi %"class.std::__1::unique_ptr"* [ %114, %117 ], [ %137, %125 ]
  %147 = phi %"class.std::__1::unique_ptr"* [ %113, %117 ], [ %136, %125 ]
  %148 = phi %"class.std::__1::unique_ptr"* [ %12, %117 ], [ %131, %125 ]
  %149 = icmp ult i64 %120, 24
  br i1 %149, label %188, label %150

150:                                              ; preds = %141, %150
  %151 = phi i1 [ %187, %150 ], [ %145, %141 ]
  %152 = phi %"class.std::__1::unique_ptr"* [ %185, %150 ], [ %146, %141 ]
  %153 = phi %"class.std::__1::unique_ptr"* [ %184, %150 ], [ %147, %141 ]
  %154 = phi %"class.std::__1::unique_ptr"* [ %179, %150 ], [ %148, %141 ]
  %155 = select i1 %151, %"class.std::__1::unique_ptr"* %152, %"class.std::__1::unique_ptr"* %154
  %156 = bitcast %"class.std::__1::unique_ptr"* %153 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.std::__1::unique_ptr"* %152 to i64*
  %159 = load i64, i64* %158, align 8
  store i64 %159, i64* %156, align 8
  store i64 %157, i64* %158, align 8
  %160 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %153, i64 1
  %161 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %152, i64 1
  %162 = icmp eq %"class.std::__1::unique_ptr"* %160, %155
  %163 = select i1 %162, %"class.std::__1::unique_ptr"* %161, %"class.std::__1::unique_ptr"* %155
  %164 = bitcast %"class.std::__1::unique_ptr"* %160 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = bitcast %"class.std::__1::unique_ptr"* %161 to i64*
  %167 = load i64, i64* %166, align 8
  store i64 %167, i64* %164, align 8
  store i64 %165, i64* %166, align 8
  %168 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %153, i64 2
  %169 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %152, i64 2
  %170 = icmp eq %"class.std::__1::unique_ptr"* %168, %163
  %171 = select i1 %170, %"class.std::__1::unique_ptr"* %169, %"class.std::__1::unique_ptr"* %163
  %172 = bitcast %"class.std::__1::unique_ptr"* %168 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.std::__1::unique_ptr"* %169 to i64*
  %175 = load i64, i64* %174, align 8
  store i64 %175, i64* %172, align 8
  store i64 %173, i64* %174, align 8
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %153, i64 3
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %152, i64 3
  %178 = icmp eq %"class.std::__1::unique_ptr"* %176, %171
  %179 = select i1 %178, %"class.std::__1::unique_ptr"* %177, %"class.std::__1::unique_ptr"* %171
  %180 = bitcast %"class.std::__1::unique_ptr"* %176 to i64*
  %181 = load i64, i64* %180, align 8
  %182 = bitcast %"class.std::__1::unique_ptr"* %177 to i64*
  %183 = load i64, i64* %182, align 8
  store i64 %183, i64* %180, align 8
  store i64 %181, i64* %182, align 8
  %184 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %153, i64 4
  %185 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %152, i64 4
  %186 = icmp eq %"class.std::__1::unique_ptr"* %185, %100
  %187 = icmp eq %"class.std::__1::unique_ptr"* %184, %179
  br i1 %186, label %188, label %150

188:                                              ; preds = %141, %150, %108
  %189 = phi %"class.std::__1::unique_ptr"* [ %12, %108 ], [ %142, %141 ], [ %179, %150 ]
  %190 = phi %"class.std::__1::unique_ptr"* [ %113, %108 ], [ %143, %141 ], [ %184, %150 ]
  %191 = phi i1 [ %116, %108 ], [ %144, %141 ], [ %187, %150 ]
  br i1 %191, label %210, label %192

192:                                              ; preds = %188, %208
  %193 = phi %"class.std::__1::unique_ptr"* [ %209, %208 ], [ %189, %188 ]
  %194 = phi %"class.std::__1::unique_ptr"* [ %203, %208 ], [ %190, %188 ]
  %195 = phi %"class.std::__1::unique_ptr"* [ %204, %208 ], [ %189, %188 ]
  br label %196

196:                                              ; preds = %192, %207
  %197 = phi %"class.std::__1::unique_ptr"* [ %203, %207 ], [ %194, %192 ]
  %198 = phi %"class.std::__1::unique_ptr"* [ %193, %207 ], [ %195, %192 ]
  %199 = bitcast %"class.std::__1::unique_ptr"* %197 to i64*
  %200 = load i64, i64* %199, align 8
  %201 = bitcast %"class.std::__1::unique_ptr"* %198 to i64*
  %202 = load i64, i64* %201, align 8
  store i64 %202, i64* %199, align 8
  store i64 %200, i64* %201, align 8
  %203 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %197, i64 1
  %204 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %198, i64 1
  %205 = icmp eq %"class.std::__1::unique_ptr"* %204, %100
  %206 = icmp eq %"class.std::__1::unique_ptr"* %203, %193
  br i1 %205, label %207, label %208

207:                                              ; preds = %196
  br i1 %206, label %210, label %196

208:                                              ; preds = %196
  %209 = select i1 %206, %"class.std::__1::unique_ptr"* %204, %"class.std::__1::unique_ptr"* %193
  br label %192

210:                                              ; preds = %207, %98, %106, %188
  %211 = phi %"class.std::__1::unique_ptr"* [ %100, %98 ], [ %99, %106 ], [ %190, %188 ], [ %190, %207 ]
  %212 = add nsw i64 %102, %101
  %213 = add nsw i64 %104, %103
  %214 = icmp slt i64 %212, %213
  br i1 %214, label %215, label %216

215:                                              ; preds = %210
  tail call void @_ZNSt3__115__inplace_mergeIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_SE_T_NS_15iterator_traitsISE_E15difference_typeESI_PNSH_10value_typeEl(%"class.std::__1::unique_ptr"* %24, %"class.std::__1::unique_ptr"* %99, %"class.std::__1::unique_ptr"* %211, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %3, i64 %101, i64 %102, %"class.std::__1::unique_ptr"* %6, i64 %7)
  br label %217

216:                                              ; preds = %210
  tail call void @_ZNSt3__115__inplace_mergeIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_SE_T_NS_15iterator_traitsISE_E15difference_typeESI_PNSH_10value_typeEl(%"class.std::__1::unique_ptr"* %211, %"class.std::__1::unique_ptr"* %100, %"class.std::__1::unique_ptr"* %15, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %3, i64 %103, i64 %104, %"class.std::__1::unique_ptr"* %6, i64 %7)
  br label %217

217:                                              ; preds = %215, %216
  %218 = phi %"class.std::__1::unique_ptr"* [ %15, %215 ], [ %211, %216 ]
  %219 = phi i64 [ %103, %215 ], [ %101, %216 ]
  %220 = phi i64 [ %104, %215 ], [ %102, %216 ]
  %221 = phi %"class.std::__1::unique_ptr"* [ %100, %215 ], [ %99, %216 ]
  %222 = phi %"class.std::__1::unique_ptr"* [ %211, %215 ], [ %24, %216 ]
  %223 = icmp eq i64 %220, 0
  br i1 %223, label %224, label %10

224:                                              ; preds = %217, %20, %28, %8, %64, %22
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__121__insertion_sort_moveIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_PNS_15iterator_traitsISE_E10value_typeET_(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %5 = icmp eq %"class.std::__1::unique_ptr"* %0, %1
  br i1 %5, label %87, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.std::__1::unique_ptr"* %0 to i64*
  %9 = load i64, i64* %8, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %7, align 8
  %10 = bitcast %"class.std::__1::unique_ptr"* %2 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %0, i64 1
  %12 = icmp eq %"class.std::__1::unique_ptr"* %11, %1
  br i1 %12, label %87, label %13

13:                                               ; preds = %6, %84
  %14 = phi %"class.std::__1::unique_ptr"* [ %85, %84 ], [ %11, %6 ]
  %15 = phi %"class.std::__1::unique_ptr"* [ %16, %84 ], [ %2, %6 ]
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 1
  %17 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %3, align 8
  %18 = tail call zeroext i1 %17(%"class.std::__1::unique_ptr"* dereferenceable(8) %14, %"class.std::__1::unique_ptr"* dereferenceable(8) %15) #18
  br i1 %18, label %19, label %79

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %21 = bitcast %"class.std::__1::unique_ptr"* %15 to i64*
  %22 = load i64, i64* %21, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %20, align 8
  %23 = bitcast %"class.std::__1::unique_ptr"* %16 to i64*
  store i64 %22, i64* %23, align 8
  %24 = icmp eq %"class.std::__1::unique_ptr"* %15, %2
  br i1 %24, label %56, label %25

25:                                               ; preds = %19, %54
  %26 = phi %"class.std::__1::unique_ptr"* [ %28, %54 ], [ %15, %19 ]
  %27 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %3, align 8
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 -1
  %29 = tail call zeroext i1 %27(%"class.std::__1::unique_ptr"* dereferenceable(8) %14, %"class.std::__1::unique_ptr"* dereferenceable(8) %28) #18
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = bitcast %"class.std::__1::unique_ptr"* %26 to i64*
  br label %56

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.std::__1::unique_ptr"* %28 to i64*
  %35 = load i64, i64* %34, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %33, align 8
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %36, align 8
  %38 = bitcast %"class.std::__1::unique_ptr"* %26 to i64*
  store i64 %35, i64* %38, align 8
  %39 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %37, null
  br i1 %39, label %54, label %40

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %37, i64 0, i32 12
  tail call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* %41) #18
  %42 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %37, i64 0, i32 8, i32 0, i32 0, i32 0
  %43 = load float*, float** %42, align 8
  %44 = icmp eq float* %43, null
  %45 = bitcast float* %43 to i8*
  br i1 %44, label %52, label %46, !prof !9

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %37, i64 0, i32 8, i32 0, i32 0, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %51, label %50, !prof !2

50:                                               ; preds = %46
  store i32 0, i32* %47, align 4
  br label %51

51:                                               ; preds = %50, %46
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %45) #18
  br label %52

52:                                               ; preds = %51, %40
  %53 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"* %37 to i8*
  tail call void @_ZdlPv(i8* %53) #19
  br label %54

54:                                               ; preds = %32, %52
  %55 = icmp eq %"class.std::__1::unique_ptr"* %28, %2
  br i1 %55, label %56, label %25

56:                                               ; preds = %54, %30, %19
  %57 = phi i64* [ %10, %19 ], [ %31, %30 ], [ %10, %54 ]
  %58 = phi %"class.std::__1::unique_ptr"* [ %2, %19 ], [ %26, %30 ], [ %2, %54 ]
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %60 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  %61 = load i64, i64* %60, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %59, align 8
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %58, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %62, align 8
  store i64 %61, i64* %57, align 8
  %64 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %63, null
  br i1 %64, label %84, label %65

65:                                               ; preds = %56
  %66 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %63, i64 0, i32 12
  tail call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* %66) #18
  %67 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %63, i64 0, i32 8, i32 0, i32 0, i32 0
  %68 = load float*, float** %67, align 8
  %69 = icmp eq float* %68, null
  %70 = bitcast float* %68 to i8*
  br i1 %69, label %77, label %71, !prof !9

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %63, i64 0, i32 8, i32 0, i32 0, i32 2
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75, !prof !2

75:                                               ; preds = %71
  store i32 0, i32* %72, align 4
  br label %76

76:                                               ; preds = %75, %71
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %70) #18
  br label %77

77:                                               ; preds = %76, %65
  %78 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"* %63 to i8*
  tail call void @_ZdlPv(i8* %78) #19
  br label %84

79:                                               ; preds = %13
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %81 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  %82 = load i64, i64* %81, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %80, align 8
  %83 = bitcast %"class.std::__1::unique_ptr"* %16 to i64*
  store i64 %82, i64* %83, align 8
  br label %84

84:                                               ; preds = %77, %56, %79
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 1
  %86 = icmp eq %"class.std::__1::unique_ptr"* %85, %1
  br i1 %86, label %87, label %13

87:                                               ; preds = %84, %6, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__124__buffered_inplace_mergeIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_EEvT0_SE_SE_T_NS_15iterator_traitsISE_E15difference_typeESI_PNSH_10value_typeE(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8), i64, i64, %"class.std::__1::unique_ptr"*) local_unnamed_addr #0 comdat {
  %8 = ptrtoint %"class.std::__1::unique_ptr"* %0 to i64
  %9 = ptrtoint %"class.std::__1::unique_ptr"* %1 to i64
  %10 = alloca %"class.std::__1::reverse_iterator", align 8
  %11 = alloca %"class.std::__1::reverse_iterator", align 8
  %12 = icmp sgt i64 %4, %5
  br i1 %12, label %44, label %13

13:                                               ; preds = %7
  %14 = icmp eq %"class.std::__1::unique_ptr"* %0, %1
  br i1 %14, label %78, label %15

15:                                               ; preds = %13
  %16 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1, i32 0, i32 0, i32 0
  %17 = ptrtoint %"class.blink::AudioParamTimeline::ParamEvent"** %16 to i64
  %18 = sub i64 %17, %8
  %19 = lshr i64 %18, 3
  %20 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %1, i64 -1, i32 0, i32 0, i32 0
  %21 = ptrtoint %"class.blink::AudioParamTimeline::ParamEvent"** %20 to i64
  %22 = sub i64 %21, %8
  %23 = lshr i64 %22, 3
  %24 = add nuw nsw i64 %23, 1
  %25 = and i64 %24, 7
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %15, %27
  %28 = phi %"class.std::__1::unique_ptr"* [ %35, %27 ], [ %0, %15 ]
  %29 = phi %"class.std::__1::unique_ptr"* [ %36, %27 ], [ %6, %15 ]
  %30 = phi i64 [ %37, %27 ], [ %25, %15 ]
  %31 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 0, i32 0, i32 0, i32 0
  %32 = bitcast %"class.std::__1::unique_ptr"* %28 to i64*
  %33 = load i64, i64* %32, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %31, align 8
  %34 = bitcast %"class.std::__1::unique_ptr"* %29 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %28, i64 1
  %36 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %29, i64 1
  %37 = add i64 %30, -1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %27, !llvm.loop !77

39:                                               ; preds = %27, %15
  %40 = phi %"class.std::__1::unique_ptr"* [ undef, %15 ], [ %36, %27 ]
  %41 = phi %"class.std::__1::unique_ptr"* [ %0, %15 ], [ %35, %27 ]
  %42 = phi %"class.std::__1::unique_ptr"* [ %6, %15 ], [ %36, %27 ]
  %43 = icmp ult i64 %22, 56
  br i1 %43, label %75, label %81

44:                                               ; preds = %7
  %45 = icmp eq %"class.std::__1::unique_ptr"* %1, %2
  br i1 %45, label %136, label %46

46:                                               ; preds = %44
  %47 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 -1, i32 0, i32 0, i32 0
  %48 = ptrtoint %"class.blink::AudioParamTimeline::ParamEvent"** %47 to i64
  %49 = sub i64 %48, %9
  %50 = lshr i64 %49, 3
  %51 = getelementptr %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %2, i64 -1, i32 0, i32 0, i32 0
  %52 = ptrtoint %"class.blink::AudioParamTimeline::ParamEvent"** %51 to i64
  %53 = sub i64 %52, %9
  %54 = lshr i64 %53, 3
  %55 = add nuw nsw i64 %54, 1
  %56 = and i64 %55, 7
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %70, label %58

58:                                               ; preds = %46, %58
  %59 = phi %"class.std::__1::unique_ptr"* [ %66, %58 ], [ %1, %46 ]
  %60 = phi %"class.std::__1::unique_ptr"* [ %67, %58 ], [ %6, %46 ]
  %61 = phi i64 [ %68, %58 ], [ %56, %46 ]
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 0, i32 0, i32 0, i32 0
  %63 = bitcast %"class.std::__1::unique_ptr"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %62, align 8
  %65 = bitcast %"class.std::__1::unique_ptr"* %60 to i64*
  store i64 %64, i64* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %59, i64 1
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %60, i64 1
  %68 = add i64 %61, -1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %58, !llvm.loop !78

70:                                               ; preds = %58, %46
  %71 = phi %"class.std::__1::unique_ptr"* [ undef, %46 ], [ %67, %58 ]
  %72 = phi %"class.std::__1::unique_ptr"* [ %1, %46 ], [ %66, %58 ]
  %73 = phi %"class.std::__1::unique_ptr"* [ %6, %46 ], [ %67, %58 ]
  %74 = icmp ult i64 %53, 56
  br i1 %74, label %133, label %144

75:                                               ; preds = %81, %39
  %76 = phi %"class.std::__1::unique_ptr"* [ %40, %39 ], [ %131, %81 ]
  %77 = add nuw nsw i64 %19, 1
  br label %78

78:                                               ; preds = %75, %13
  %79 = phi i64 [ 0, %13 ], [ %77, %75 ]
  %80 = phi %"class.std::__1::unique_ptr"* [ %6, %13 ], [ %76, %75 ]
  tail call void @_ZNSt3__120__half_inplace_mergeIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_SD_SD_EEvT0_SE_T1_SF_T2_T_(%"class.std::__1::unique_ptr"* %6, %"class.std::__1::unique_ptr"* %80, %"class.std::__1::unique_ptr"* %1, %"class.std::__1::unique_ptr"* %2, %"class.std::__1::unique_ptr"* %0, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8) %3)
  br label %196

81:                                               ; preds = %39, %81
  %82 = phi %"class.std::__1::unique_ptr"* [ %130, %81 ], [ %41, %39 ]
  %83 = phi %"class.std::__1::unique_ptr"* [ %131, %81 ], [ %42, %39 ]
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.std::__1::unique_ptr"* %82 to i64*
  %86 = load i64, i64* %85, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %84, align 8
  %87 = bitcast %"class.std::__1::unique_ptr"* %83 to i64*
  store i64 %86, i64* %87, align 8
  %88 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 1
  %89 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 1
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %88, i64 0, i32 0, i32 0, i32 0
  %91 = bitcast %"class.std::__1::unique_ptr"* %88 to i64*
  %92 = load i64, i64* %91, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %90, align 8
  %93 = bitcast %"class.std::__1::unique_ptr"* %89 to i64*
  store i64 %92, i64* %93, align 8
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 2
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 2
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %94, i64 0, i32 0, i32 0, i32 0
  %97 = bitcast %"class.std::__1::unique_ptr"* %94 to i64*
  %98 = load i64, i64* %97, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %96, align 8
  %99 = bitcast %"class.std::__1::unique_ptr"* %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 3
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 3
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %100, i64 0, i32 0, i32 0, i32 0
  %103 = bitcast %"class.std::__1::unique_ptr"* %100 to i64*
  %104 = load i64, i64* %103, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %102, align 8
  %105 = bitcast %"class.std::__1::unique_ptr"* %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 4
  %107 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 4
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %106, i64 0, i32 0, i32 0, i32 0
  %109 = bitcast %"class.std::__1::unique_ptr"* %106 to i64*
  %110 = load i64, i64* %109, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %108, align 8
  %111 = bitcast %"class.std::__1::unique_ptr"* %107 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 5
  %113 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 5
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %112, i64 0, i32 0, i32 0, i32 0
  %115 = bitcast %"class.std::__1::unique_ptr"* %112 to i64*
  %116 = load i64, i64* %115, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %114, align 8
  %117 = bitcast %"class.std::__1::unique_ptr"* %113 to i64*
  store i64 %116, i64* %117, align 8
  %118 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 6
  %119 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 6
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %118, i64 0, i32 0, i32 0, i32 0
  %121 = bitcast %"class.std::__1::unique_ptr"* %118 to i64*
  %122 = load i64, i64* %121, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %120, align 8
  %123 = bitcast %"class.std::__1::unique_ptr"* %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 7
  %125 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 7
  %126 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %124, i64 0, i32 0, i32 0, i32 0
  %127 = bitcast %"class.std::__1::unique_ptr"* %124 to i64*
  %128 = load i64, i64* %127, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %126, align 8
  %129 = bitcast %"class.std::__1::unique_ptr"* %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %82, i64 8
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %83, i64 8
  %132 = icmp eq %"class.std::__1::unique_ptr"* %130, %1
  br i1 %132, label %75, label %81

133:                                              ; preds = %144, %70
  %134 = phi %"class.std::__1::unique_ptr"* [ %71, %70 ], [ %194, %144 ]
  %135 = add nuw nsw i64 %50, 1
  br label %136

136:                                              ; preds = %133, %44
  %137 = phi i64 [ 0, %44 ], [ %135, %133 ]
  %138 = phi %"class.std::__1::unique_ptr"* [ %6, %44 ], [ %134, %133 ]
  %139 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %10, i64 0, i32 0
  store %"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"** %139, align 8
  %140 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %10, i64 0, i32 1
  store %"class.std::__1::unique_ptr"* %0, %"class.std::__1::unique_ptr"** %140, align 8
  %141 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %11, i64 0, i32 0
  store %"class.std::__1::unique_ptr"* %2, %"class.std::__1::unique_ptr"** %141, align 8
  %142 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %11, i64 0, i32 1
  store %"class.std::__1::unique_ptr"* %2, %"class.std::__1::unique_ptr"** %142, align 8
  %143 = ptrtoint i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %3 to i64
  tail call void @_ZNSt3__120__half_inplace_mergeINS_8__invertIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS5_EEEESA_EEENS_16reverse_iteratorIPS8_EESH_SH_EEvT0_SI_T1_SJ_T2_T_(%"class.std::__1::unique_ptr"* %138, %"class.std::__1::unique_ptr"* %138, %"class.std::__1::unique_ptr"* %6, %"class.std::__1::unique_ptr"* %6, %"class.std::__1::unique_ptr"* %1, %"class.std::__1::unique_ptr"* %1, %"class.std::__1::reverse_iterator"* nonnull byval(%"class.std::__1::reverse_iterator") align 8 %10, %"class.std::__1::reverse_iterator"* nonnull byval(%"class.std::__1::reverse_iterator") align 8 %11, i64 %143)
  br label %196

144:                                              ; preds = %70, %144
  %145 = phi %"class.std::__1::unique_ptr"* [ %193, %144 ], [ %72, %70 ]
  %146 = phi %"class.std::__1::unique_ptr"* [ %194, %144 ], [ %73, %70 ]
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %145, i64 0, i32 0, i32 0, i32 0
  %148 = bitcast %"class.std::__1::unique_ptr"* %145 to i64*
  %149 = load i64, i64* %148, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %147, align 8
  %150 = bitcast %"class.std::__1::unique_ptr"* %146 to i64*
  store i64 %149, i64* %150, align 8
  %151 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %145, i64 1
  %152 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %146, i64 1
  %153 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %151, i64 0, i32 0, i32 0, i32 0
  %154 = bitcast %"class.std::__1::unique_ptr"* %151 to i64*
  %155 = load i64, i64* %154, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %153, align 8
  %156 = bitcast %"class.std::__1::unique_ptr"* %152 to i64*
  store i64 %155, i64* %156, align 8
  %157 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %145, i64 2
  %158 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %146, i64 2
  %159 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %157, i64 0, i32 0, i32 0, i32 0
  %160 = bitcast %"class.std::__1::unique_ptr"* %157 to i64*
  %161 = load i64, i64* %160, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %159, align 8
  %162 = bitcast %"class.std::__1::unique_ptr"* %158 to i64*
  store i64 %161, i64* %162, align 8
  %163 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %145, i64 3
  %164 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %146, i64 3
  %165 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %163, i64 0, i32 0, i32 0, i32 0
  %166 = bitcast %"class.std::__1::unique_ptr"* %163 to i64*
  %167 = load i64, i64* %166, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %165, align 8
  %168 = bitcast %"class.std::__1::unique_ptr"* %164 to i64*
  store i64 %167, i64* %168, align 8
  %169 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %145, i64 4
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %146, i64 4
  %171 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %169, i64 0, i32 0, i32 0, i32 0
  %172 = bitcast %"class.std::__1::unique_ptr"* %169 to i64*
  %173 = load i64, i64* %172, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %171, align 8
  %174 = bitcast %"class.std::__1::unique_ptr"* %170 to i64*
  store i64 %173, i64* %174, align 8
  %175 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %145, i64 5
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %146, i64 5
  %177 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %175, i64 0, i32 0, i32 0, i32 0
  %178 = bitcast %"class.std::__1::unique_ptr"* %175 to i64*
  %179 = load i64, i64* %178, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %177, align 8
  %180 = bitcast %"class.std::__1::unique_ptr"* %176 to i64*
  store i64 %179, i64* %180, align 8
  %181 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %145, i64 6
  %182 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %146, i64 6
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %181, i64 0, i32 0, i32 0, i32 0
  %184 = bitcast %"class.std::__1::unique_ptr"* %181 to i64*
  %185 = load i64, i64* %184, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %183, align 8
  %186 = bitcast %"class.std::__1::unique_ptr"* %182 to i64*
  store i64 %185, i64* %186, align 8
  %187 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %145, i64 7
  %188 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %146, i64 7
  %189 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %187, i64 0, i32 0, i32 0, i32 0
  %190 = bitcast %"class.std::__1::unique_ptr"* %187 to i64*
  %191 = load i64, i64* %190, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %189, align 8
  %192 = bitcast %"class.std::__1::unique_ptr"* %188 to i64*
  store i64 %191, i64* %192, align 8
  %193 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %145, i64 8
  %194 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %146, i64 8
  %195 = icmp eq %"class.std::__1::unique_ptr"* %193, %2
  br i1 %195, label %133, label %144

196:                                              ; preds = %136, %78
  %197 = phi i64 [ %137, %136 ], [ %79, %78 ]
  %198 = icmp eq %"class.std::__1::unique_ptr"* %6, null
  %199 = icmp eq i64 %197, 0
  %200 = or i1 %198, %199
  br i1 %200, label %207, label %201

201:                                              ; preds = %196, %201
  %202 = phi i64 [ %204, %201 ], [ 0, %196 ]
  %203 = phi %"class.std::__1::unique_ptr"* [ %205, %201 ], [ %6, %196 ]
  tail call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* %203) #18
  %204 = add nuw nsw i64 %202, 1
  %205 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %203, i64 1
  %206 = icmp eq i64 %204, %197
  br i1 %206, label %207, label %201

207:                                              ; preds = %201, %196
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__half_inplace_mergeIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS4_EEEES9_EPS7_SD_SD_EEvT0_SE_T1_SF_T2_T_(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** dereferenceable(8)) local_unnamed_addr #0 comdat {
  %7 = icmp eq %"class.std::__1::unique_ptr"* %0, %1
  br i1 %7, label %97, label %8

8:                                                ; preds = %6, %92
  %9 = phi %"class.std::__1::unique_ptr"* [ %94, %92 ], [ %0, %6 ]
  %10 = phi %"class.std::__1::unique_ptr"* [ %95, %92 ], [ %4, %6 ]
  %11 = phi %"class.std::__1::unique_ptr"* [ %93, %92 ], [ %2, %6 ]
  %12 = icmp eq %"class.std::__1::unique_ptr"* %11, %3
  br i1 %12, label %13, label %41

13:                                               ; preds = %8, %37
  %14 = phi %"class.std::__1::unique_ptr"* [ %39, %37 ], [ %10, %8 ]
  %15 = phi %"class.std::__1::unique_ptr"* [ %38, %37 ], [ %9, %8 ]
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = bitcast %"class.std::__1::unique_ptr"* %15 to i64*
  %18 = load i64, i64* %17, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %16, align 8
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr"* %14 to i64*
  store i64 %18, i64* %21, align 8
  %22 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %20, null
  br i1 %22, label %37, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %20, i64 0, i32 12
  tail call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* %24) #18
  %25 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %20, i64 0, i32 8, i32 0, i32 0, i32 0
  %26 = load float*, float** %25, align 8
  %27 = icmp eq float* %26, null
  %28 = bitcast float* %26 to i8*
  br i1 %27, label %35, label %29, !prof !9

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %20, i64 0, i32 8, i32 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %34, label %33, !prof !2

33:                                               ; preds = %29
  store i32 0, i32* %30, align 4
  br label %34

34:                                               ; preds = %33, %29
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %28) #18
  br label %35

35:                                               ; preds = %34, %23
  %36 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"* %20 to i8*
  tail call void @_ZdlPv(i8* %36) #19
  br label %37

37:                                               ; preds = %35, %13
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %15, i64 1
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %14, i64 1
  %40 = icmp eq %"class.std::__1::unique_ptr"* %38, %1
  br i1 %40, label %97, label %13

41:                                               ; preds = %8
  %42 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %5, align 8
  %43 = tail call zeroext i1 %42(%"class.std::__1::unique_ptr"* dereferenceable(8) %11, %"class.std::__1::unique_ptr"* dereferenceable(8) %9) #18
  br i1 %43, label %44, label %68

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 0, i32 0, i32 0, i32 0
  %46 = bitcast %"class.std::__1::unique_ptr"* %11 to i64*
  %47 = load i64, i64* %46, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %45, align 8
  %48 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %48, align 8
  %50 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 %47, i64* %50, align 8
  %51 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %49, null
  br i1 %51, label %66, label %52

52:                                               ; preds = %44
  %53 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %49, i64 0, i32 12
  tail call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* %53) #18
  %54 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %49, i64 0, i32 8, i32 0, i32 0, i32 0
  %55 = load float*, float** %54, align 8
  %56 = icmp eq float* %55, null
  %57 = bitcast float* %55 to i8*
  br i1 %56, label %64, label %58, !prof !9

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %49, i64 0, i32 8, i32 0, i32 0, i32 2
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %63, label %62, !prof !2

62:                                               ; preds = %58
  store i32 0, i32* %59, align 4
  br label %63

63:                                               ; preds = %62, %58
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %57) #18
  br label %64

64:                                               ; preds = %63, %52
  %65 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"* %49 to i8*
  tail call void @_ZdlPv(i8* %65) #19
  br label %66

66:                                               ; preds = %44, %64
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %11, i64 1
  br label %92

68:                                               ; preds = %41
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 0, i32 0, i32 0, i32 0
  %70 = bitcast %"class.std::__1::unique_ptr"* %9 to i64*
  %71 = load i64, i64* %70, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %69, align 8
  %72 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %72, align 8
  %74 = bitcast %"class.std::__1::unique_ptr"* %10 to i64*
  store i64 %71, i64* %74, align 8
  %75 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %73, null
  br i1 %75, label %90, label %76

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %73, i64 0, i32 12
  tail call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* %77) #18
  %78 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %73, i64 0, i32 8, i32 0, i32 0, i32 0
  %79 = load float*, float** %78, align 8
  %80 = icmp eq float* %79, null
  %81 = bitcast float* %79 to i8*
  br i1 %80, label %88, label %82, !prof !9

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %73, i64 0, i32 8, i32 0, i32 0, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %87, label %86, !prof !2

86:                                               ; preds = %82
  store i32 0, i32* %83, align 4
  br label %87

87:                                               ; preds = %86, %82
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %81) #18
  br label %88

88:                                               ; preds = %87, %76
  %89 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"* %73 to i8*
  tail call void @_ZdlPv(i8* %89) #19
  br label %90

90:                                               ; preds = %68, %88
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %9, i64 1
  br label %92

92:                                               ; preds = %66, %90
  %93 = phi %"class.std::__1::unique_ptr"* [ %67, %66 ], [ %11, %90 ]
  %94 = phi %"class.std::__1::unique_ptr"* [ %9, %66 ], [ %91, %90 ]
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %10, i64 1
  %96 = icmp eq %"class.std::__1::unique_ptr"* %94, %1
  br i1 %96, label %97, label %8

97:                                               ; preds = %92, %37, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__half_inplace_mergeINS_8__invertIRPFbRKNS_10unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS5_EEEESA_EEENS_16reverse_iteratorIPS8_EESH_SH_EEvT0_SI_T1_SJ_T2_T_(%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::reverse_iterator"* byval(%"class.std::__1::reverse_iterator") align 8, %"class.std::__1::reverse_iterator"* byval(%"class.std::__1::reverse_iterator") align 8, i64) local_unnamed_addr #0 comdat {
  %10 = inttoptr i64 %8 to i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)**
  %11 = icmp eq %"class.std::__1::unique_ptr"* %1, %3
  br i1 %11, label %107, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %6, i64 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::reverse_iterator", %"class.std::__1::reverse_iterator"* %7, i64 0, i32 1
  br label %15

15:                                               ; preds = %12, %101
  %16 = phi %"class.std::__1::unique_ptr"* [ %1, %12 ], [ %103, %101 ]
  %17 = phi %"class.std::__1::unique_ptr"* [ %5, %12 ], [ %102, %101 ]
  %18 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %13, align 8
  %19 = icmp eq %"class.std::__1::unique_ptr"* %17, %18
  br i1 %19, label %20, label %50

20:                                               ; preds = %15
  %21 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %14, align 8
  br label %22

22:                                               ; preds = %20, %48
  %23 = phi %"class.std::__1::unique_ptr"* [ %25, %48 ], [ %16, %20 ]
  %24 = phi %"class.std::__1::unique_ptr"* [ %26, %48 ], [ %21, %20 ]
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %23, i64 -1
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %24, i64 -1
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr"* %25 to i64*
  %29 = load i64, i64* %28, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %27, align 8
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %26, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr"* %26 to i64*
  store i64 %29, i64* %32, align 8
  %33 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %31, null
  br i1 %33, label %48, label %34

34:                                               ; preds = %22
  %35 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %31, i64 0, i32 12
  tail call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* %35) #18
  %36 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %31, i64 0, i32 8, i32 0, i32 0, i32 0
  %37 = load float*, float** %36, align 8
  %38 = icmp eq float* %37, null
  %39 = bitcast float* %37 to i8*
  br i1 %38, label %46, label %40, !prof !9

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %31, i64 0, i32 8, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !2

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #18
  br label %46

46:                                               ; preds = %45, %34
  %47 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"* %31 to i8*
  tail call void @_ZdlPv(i8* %47) #19
  br label %48

48:                                               ; preds = %46, %22
  %49 = icmp eq %"class.std::__1::unique_ptr"* %25, %3
  br i1 %49, label %107, label %22

50:                                               ; preds = %15
  %51 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %17, i64 -1
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %16, i64 -1
  %53 = load i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)*, i1 (%"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*)** %10, align 8
  %54 = tail call zeroext i1 %53(%"class.std::__1::unique_ptr"* dereferenceable(8) %52, %"class.std::__1::unique_ptr"* dereferenceable(8) %51) #18
  %55 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %14, align 8
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %55, i64 -1
  br i1 %54, label %57, label %79

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %51, i64 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.std::__1::unique_ptr"* %51 to i64*
  %60 = load i64, i64* %59, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %58, align 8
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %56, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %61, align 8
  %63 = bitcast %"class.std::__1::unique_ptr"* %56 to i64*
  store i64 %60, i64* %63, align 8
  %64 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %62, null
  br i1 %64, label %101, label %65

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %62, i64 0, i32 12
  tail call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* %66) #18
  %67 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %62, i64 0, i32 8, i32 0, i32 0, i32 0
  %68 = load float*, float** %67, align 8
  %69 = icmp eq float* %68, null
  %70 = bitcast float* %68 to i8*
  br i1 %69, label %77, label %71, !prof !9

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %62, i64 0, i32 8, i32 0, i32 0, i32 2
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %76, label %75, !prof !2

75:                                               ; preds = %71
  store i32 0, i32* %72, align 4
  br label %76

76:                                               ; preds = %75, %71
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %70) #18
  br label %77

77:                                               ; preds = %76, %65
  %78 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"* %62 to i8*
  tail call void @_ZdlPv(i8* %78) #19
  br label %101

79:                                               ; preds = %50
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %52, i64 0, i32 0, i32 0, i32 0
  %81 = bitcast %"class.std::__1::unique_ptr"* %52 to i64*
  %82 = load i64, i64* %81, align 8
  store %"class.blink::AudioParamTimeline::ParamEvent"* null, %"class.blink::AudioParamTimeline::ParamEvent"** %80, align 8
  %83 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %56, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.blink::AudioParamTimeline::ParamEvent"*, %"class.blink::AudioParamTimeline::ParamEvent"** %83, align 8
  %85 = bitcast %"class.std::__1::unique_ptr"* %56 to i64*
  store i64 %82, i64* %85, align 8
  %86 = icmp eq %"class.blink::AudioParamTimeline::ParamEvent"* %84, null
  br i1 %86, label %101, label %87

87:                                               ; preds = %79
  %88 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %84, i64 0, i32 12
  tail call void @_ZNSt3__110unique_ptrIN5blink18AudioParamTimeline10ParamEventENS_14default_deleteIS3_EEED2Ev(%"class.std::__1::unique_ptr"* %88) #18
  %89 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %84, i64 0, i32 8, i32 0, i32 0, i32 0
  %90 = load float*, float** %89, align 8
  %91 = icmp eq float* %90, null
  %92 = bitcast float* %90 to i8*
  br i1 %91, label %99, label %93, !prof !9

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"class.blink::AudioParamTimeline::ParamEvent", %"class.blink::AudioParamTimeline::ParamEvent"* %84, i64 0, i32 8, i32 0, i32 0, i32 2
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %98, label %97, !prof !2

97:                                               ; preds = %93
  store i32 0, i32* %94, align 4
  br label %98

98:                                               ; preds = %97, %93
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %92) #18
  br label %99

99:                                               ; preds = %98, %87
  %100 = bitcast %"class.blink::AudioParamTimeline::ParamEvent"* %84 to i8*
  tail call void @_ZdlPv(i8* %100) #19
  br label %101

101:                                              ; preds = %99, %79, %77, %57
  %102 = phi %"class.std::__1::unique_ptr"* [ %51, %57 ], [ %51, %77 ], [ %17, %79 ], [ %17, %99 ]
  %103 = phi %"class.std::__1::unique_ptr"* [ %16, %57 ], [ %16, %77 ], [ %52, %79 ], [ %52, %99 ]
  %104 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %14, align 8
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %104, i64 -1
  store %"class.std::__1::unique_ptr"* %105, %"class.std::__1::unique_ptr"** %14, align 8
  %106 = icmp eq %"class.std::__1::unique_ptr"* %103, %3
  br i1 %106, label %107, label %15

107:                                              ; preds = %101, %48, %9
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { cold noreturn nounwind }
attributes #14 = { nounwind readnone }
attributes #15 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #18 = { nounwind }
attributes #19 = { builtin nounwind }
attributes #20 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!5 = distinct !{!5, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_: argument 0"}
!8 = distinct !{!8, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_"}
!9 = !{!"branch_weights", i32 2000, i32 1}
!10 = !{i8 0, i8 2}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!13 = distinct !{!13, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!16 = distinct !{!16, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.isvectorized", i32 1}
!19 = distinct !{!19, !20}
!20 = !{!"llvm.loop.unroll.disable"}
!21 = distinct !{!21, !22, !18}
!22 = !{!"llvm.loop.unroll.runtime.disable"}
!23 = distinct !{!23, !18}
!24 = distinct !{!24, !20}
!25 = distinct !{!25, !22, !18}
!26 = distinct !{!26, !18}
!27 = distinct !{!27, !20}
!28 = distinct !{!28, !22, !18}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN5blink18AudioParamTimeline18HandleCancelValuesEPKNS0_10ParamEventEPS1_fd: argument 0"}
!31 = distinct !{!31, !"_ZN5blink18AudioParamTimeline18HandleCancelValuesEPKNS0_10ParamEventEPS1_fd"}
!32 = distinct !{!32, !18}
!33 = distinct !{!33, !22, !18}
!34 = distinct !{!34, !18}
!35 = distinct !{!35, !20}
!36 = distinct !{!36, !22, !18}
!37 = distinct !{!37, !18}
!38 = distinct !{!38, !20}
!39 = distinct !{!39, !22, !18}
!40 = distinct !{!40, !18}
!41 = distinct !{!41, !20}
!42 = distinct !{!42, !22, !18}
!43 = distinct !{!43, !18}
!44 = distinct !{!44, !20}
!45 = distinct !{!45, !22, !18}
!46 = distinct !{!46, !18}
!47 = distinct !{!47, !20}
!48 = distinct !{!48, !22, !18}
!49 = distinct !{!49, !18}
!50 = distinct !{!50, !20}
!51 = distinct !{!51, !22, !18}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZNSt3__110make_tupleIJRfRdRN5blink18AudioParamTimeline10ParamEvent4TypeEEEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOSA_: argument 0"}
!54 = distinct !{!54, !"_ZNSt3__110make_tupleIJRfRdRN5blink18AudioParamTimeline10ParamEvent4TypeEEEENS_5tupleIJDpNS_18__unwrap_ref_decayIT_E4typeEEEEDpOSA_"}
!55 = distinct !{!55, !18}
!56 = distinct !{!56, !22, !18}
!57 = distinct !{!57, !18}
!58 = distinct !{!58, !20}
!59 = distinct !{!59, !22, !18}
!60 = distinct !{!60, !20}
!61 = distinct !{!61, !18}
!62 = distinct !{!62, !20}
!63 = distinct !{!63, !22, !18}
!64 = distinct !{!64, !18}
!65 = distinct !{!65, !20}
!66 = distinct !{!66, !22, !18}
!67 = distinct !{!67, !20}
!68 = distinct !{!68, !18}
!69 = distinct !{!69, !20}
!70 = distinct !{!70, !22, !18}
!71 = distinct !{!71, !18}
!72 = distinct !{!72, !20}
!73 = distinct !{!73, !22, !18}
!74 = distinct !{!74, !20}
!75 = distinct !{!75, !20}
!76 = distinct !{!76, !20}
!77 = distinct !{!77, !20}
!78 = distinct !{!78, !20}
