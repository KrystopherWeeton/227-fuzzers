; ModuleID = '../../content/browser/renderer_host/input/synthetic_tap_gesture.cc'
source_filename = "../../content/browser/renderer_host/input/synthetic_tap_gesture.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.content::SyntheticTapGesture" = type { %"class.content::SyntheticGesture", %"struct.content::SyntheticTapGestureParams", %"class.std::__1::unique_ptr", %"class.base::TimeTicks", i32, i32 }
%"class.content::SyntheticGesture" = type { i32 (...)** }
%"struct.content::SyntheticTapGestureParams" = type { %"struct.content::SyntheticGestureParams.base", %"class.gfx::PointF", float }
%"struct.content::SyntheticGestureParams.base" = type <{ i32 (...)**, i32 }>
%"class.gfx::PointF" = type { float, float }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.content::SyntheticPointerDriver"* }
%"class.content::SyntheticPointerDriver" = type { i32 (...)** }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.content::SyntheticGestureTarget" = type { i32 (...)** }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

@_ZTVN7content19SyntheticTapGestureE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.content::SyntheticTapGesture"*)* @_ZN7content19SyntheticTapGestureD2Ev to i8*), i8* bitcast (void (%"class.content::SyntheticTapGesture"*)* @_ZN7content19SyntheticTapGestureD0Ev to i8*), i8* bitcast (i32 (%"class.content::SyntheticTapGesture"*, %"class.base::TimeTicks"*, %"class.content::SyntheticGestureTarget"*)* @_ZN7content19SyntheticTapGesture18ForwardInputEventsERKN4base9TimeTicksEPNS_22SyntheticGestureTargetE to i8*), i8* bitcast (void (%"class.content::SyntheticTapGesture"*, %"class.base::OnceCallback"*, %"class.content::SyntheticGestureTarget"*)* @_ZNK7content19SyntheticTapGesture16WaitForTargetAckEN4base12OnceCallbackIFvvEEEPNS_22SyntheticGestureTargetE to i8*), i8* bitcast (i1 (%"class.content::SyntheticTapGesture"*)* @_ZNK7content19SyntheticTapGesture26AllowHighFrequencyDispatchEv to i8*)] }, align 8
@.str = private unnamed_addr constant [23 x i8] c"../../base/time/time.h\00", align 1
@.str.1 = private unnamed_addr constant [38 x i8] c"!is_inf() || (delta_ == other.delta_)\00", align 1

@_ZN7content19SyntheticTapGestureC1ERKNS_25SyntheticTapGestureParamsE = hidden unnamed_addr alias void (%"class.content::SyntheticTapGesture"*, %"struct.content::SyntheticTapGestureParams"*), void (%"class.content::SyntheticTapGesture"*, %"struct.content::SyntheticTapGestureParams"*)* @_ZN7content19SyntheticTapGestureC2ERKNS_25SyntheticTapGestureParamsE
@_ZN7content19SyntheticTapGestureD1Ev = hidden unnamed_addr alias void (%"class.content::SyntheticTapGesture"*), void (%"class.content::SyntheticTapGesture"*)* @_ZN7content19SyntheticTapGestureD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19SyntheticTapGestureC2ERKNS_25SyntheticTapGestureParamsE(%"class.content::SyntheticTapGesture"*, %"struct.content::SyntheticTapGestureParams"* dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 0
  tail call void @_ZN7content16SyntheticGestureC2Ev(%"class.content::SyntheticGesture"* %3) #8
  %4 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content19SyntheticTapGestureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 1
  tail call void @_ZN7content25SyntheticTapGestureParamsC1ERKS0_(%"struct.content::SyntheticTapGestureParams"* %5, %"struct.content::SyntheticTapGestureParams"* dereferenceable(24) %1) #8
  %6 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 2
  %7 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false)
  %9 = load i32, i32* %7, align 8
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %2
  store i32 1, i32* %7, align 8
  br label %12

12:                                               ; preds = %11, %2
  ret void
}

declare void @_ZN7content16SyntheticGestureC2Ev(%"class.content::SyntheticGesture"*) unnamed_addr #1

declare void @_ZN7content25SyntheticTapGestureParamsC1ERKS0_(%"struct.content::SyntheticTapGestureParams"*, %"struct.content::SyntheticTapGestureParams"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19SyntheticTapGestureD2Ev(%"class.content::SyntheticTapGesture"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content19SyntheticTapGestureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %3, align 8
  store %"class.content::SyntheticPointerDriver"* null, %"class.content::SyntheticPointerDriver"** %3, align 8
  %5 = icmp eq %"class.content::SyntheticPointerDriver"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.content::SyntheticPointerDriver"* %4 to void (%"class.content::SyntheticPointerDriver"*)***
  %8 = load void (%"class.content::SyntheticPointerDriver"*)**, void (%"class.content::SyntheticPointerDriver"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*)*, void (%"class.content::SyntheticPointerDriver"*)** %8, i64 1
  %10 = load void (%"class.content::SyntheticPointerDriver"*)*, void (%"class.content::SyntheticPointerDriver"*)** %9, align 8
  tail call void %10(%"class.content::SyntheticPointerDriver"* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 1
  tail call void @_ZN7content25SyntheticTapGestureParamsD1Ev(%"struct.content::SyntheticTapGestureParams"* %12) #8
  %13 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 0
  tail call void @_ZN7content16SyntheticGestureD2Ev(%"class.content::SyntheticGesture"* %13) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7content25SyntheticTapGestureParamsD1Ev(%"struct.content::SyntheticTapGestureParams"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7content16SyntheticGestureD2Ev(%"class.content::SyntheticGesture"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19SyntheticTapGestureD0Ev(%"class.content::SyntheticTapGesture"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN7content19SyntheticTapGestureE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %4 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %3, align 8
  store %"class.content::SyntheticPointerDriver"* null, %"class.content::SyntheticPointerDriver"** %3, align 8
  %5 = icmp eq %"class.content::SyntheticPointerDriver"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.content::SyntheticPointerDriver"* %4 to void (%"class.content::SyntheticPointerDriver"*)***
  %8 = load void (%"class.content::SyntheticPointerDriver"*)**, void (%"class.content::SyntheticPointerDriver"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*)*, void (%"class.content::SyntheticPointerDriver"*)** %8, i64 1
  %10 = load void (%"class.content::SyntheticPointerDriver"*)*, void (%"class.content::SyntheticPointerDriver"*)** %9, align 8
  tail call void %10(%"class.content::SyntheticPointerDriver"* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 1
  tail call void @_ZN7content25SyntheticTapGestureParamsD1Ev(%"struct.content::SyntheticTapGestureParams"* %12) #8
  %13 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 0
  tail call void @_ZN7content16SyntheticGestureD2Ev(%"class.content::SyntheticGesture"* %13) #8
  %14 = bitcast %"class.content::SyntheticTapGesture"* %0 to i8*
  tail call void @_ZdlPv(i8* %14) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN7content19SyntheticTapGesture18ForwardInputEventsERKN4base9TimeTicksEPNS_22SyntheticGestureTargetE(%"class.content::SyntheticTapGesture"* nocapture, %"class.base::TimeTicks"* dereferenceable(8), %"class.content::SyntheticGestureTarget"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 5
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %19

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 4
  store i32 %9, i32* %10, align 8
  %11 = icmp eq i32 %9, 0
  br i1 %11, label %12, label %18

12:                                               ; preds = %7
  %13 = bitcast %"class.content::SyntheticGestureTarget"* %2 to i32 (%"class.content::SyntheticGestureTarget"*)***
  %14 = load i32 (%"class.content::SyntheticGestureTarget"*)**, i32 (%"class.content::SyntheticGestureTarget"*)*** %13, align 8
  %15 = getelementptr inbounds i32 (%"class.content::SyntheticGestureTarget"*)*, i32 (%"class.content::SyntheticGestureTarget"*)** %14, i64 3
  %16 = load i32 (%"class.content::SyntheticGestureTarget"*)*, i32 (%"class.content::SyntheticGestureTarget"*)** %15, align 8
  %17 = tail call i32 %16(%"class.content::SyntheticGestureTarget"* %2) #8
  store i32 %17, i32* %10, align 8
  br label %18

18:                                               ; preds = %12, %7
  store i32 1, i32* %4, align 4
  br label %19

19:                                               ; preds = %18, %3
  %20 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 2
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %21, align 8
  %23 = icmp eq %"class.content::SyntheticPointerDriver"* %22, null
  br i1 %23, label %24, label %37

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 4
  %26 = load i32, i32* %25, align 8
  %27 = tail call %"class.content::SyntheticPointerDriver"* @_ZN7content22SyntheticPointerDriver6CreateENS_5mojom17GestureSourceTypeE(i32 %26) #8
  %28 = ptrtoint %"class.content::SyntheticPointerDriver"* %27 to i64
  %29 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %21, align 8
  %30 = bitcast %"class.std::__1::unique_ptr"* %20 to i64*
  store i64 %28, i64* %30, align 8
  %31 = icmp eq %"class.content::SyntheticPointerDriver"* %29, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %24
  %33 = bitcast %"class.content::SyntheticPointerDriver"* %29 to void (%"class.content::SyntheticPointerDriver"*)***
  %34 = load void (%"class.content::SyntheticPointerDriver"*)**, void (%"class.content::SyntheticPointerDriver"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*)*, void (%"class.content::SyntheticPointerDriver"*)** %34, i64 1
  %36 = load void (%"class.content::SyntheticPointerDriver"*)*, void (%"class.content::SyntheticPointerDriver"*)** %35, align 8
  tail call void %36(%"class.content::SyntheticPointerDriver"* nonnull %29) #8
  br label %37

37:                                               ; preds = %19, %24, %32
  %38 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 4
  %39 = load i32, i32* %38, align 8
  %40 = add i32 %39, -1
  %41 = icmp ult i32 %40, 2
  br i1 %41, label %42, label %46

42:                                               ; preds = %37
  tail call void @_ZN7content19SyntheticTapGesture30ForwardTouchOrMouseInputEventsERKN4base9TimeTicksEPNS_22SyntheticGestureTargetE(%"class.content::SyntheticTapGesture"* %0, %"class.base::TimeTicks"* dereferenceable(8) %1, %"class.content::SyntheticGestureTarget"* %2)
  %43 = load i32, i32* %4, align 4
  %44 = icmp eq i32 %43, 3
  %45 = zext i1 %44 to i32
  br label %46

46:                                               ; preds = %37, %42
  %47 = phi i32 [ %45, %42 ], [ 3, %37 ]
  ret i32 %47
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare %"class.content::SyntheticPointerDriver"* @_ZN7content22SyntheticPointerDriver6CreateENS_5mojom17GestureSourceTypeE(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7content19SyntheticTapGesture30ForwardTouchOrMouseInputEventsERKN4base9TimeTicksEPNS_22SyntheticGestureTargetE(%"class.content::SyntheticTapGesture"* nocapture, %"class.base::TimeTicks"* dereferenceable(8), %"class.content::SyntheticGestureTarget"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = alloca %"class.base::TimeTicks", align 8
  %6 = alloca %"class.base::TimeTicks", align 8
  %7 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 5
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %104 [
    i32 1, label %9
    i32 2, label %46
  ]

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %11 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %10, align 8
  %12 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 1, i32 1, i32 0
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 1, i32 1, i32 1
  %15 = load float, float* %14, align 4
  %16 = bitcast %"class.base::TimeTicks"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #8
  %17 = tail call i64 @_ZN4base9TimeTicks3NowEv() #8
  %18 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %5, i64 0, i32 0, i32 0
  store i64 %17, i64* %18, align 8
  %19 = bitcast %"class.content::SyntheticPointerDriver"* %11 to void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)***
  %20 = load void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)**, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)** %20, i64 3
  %22 = load void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, float, float, i32, i32, i32, float, float, float, float, float, i32, i32, %"class.base::TimeTicks"*)** %21, align 8
  call void %22(%"class.content::SyntheticPointerDriver"* %11, float %13, float %15, i32 0, i32 1, i32 0, float 1.000000e+00, float 1.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, i32 0, i32 0, %"class.base::TimeTicks"* nonnull dereferenceable(8) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #8
  %23 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %10, align 8
  %24 = bitcast %"class.content::SyntheticPointerDriver"* %23 to void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)***
  %25 = load void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)**, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)** %25, i64 2
  %27 = load void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)** %26, align 8
  call void %27(%"class.content::SyntheticPointerDriver"* %23, %"class.content::SyntheticGestureTarget"* %2, %"class.base::TimeTicks"* dereferenceable(8) %1) #8
  %28 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 1, i32 2
  %29 = load float, float* %28, align 4
  %30 = fcmp oeq float %29, 0.000000e+00
  br i1 %30, label %31, label %42

31:                                               ; preds = %9
  %32 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %10, align 8
  %33 = bitcast %"class.content::SyntheticPointerDriver"* %32 to void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)***
  %34 = load void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)**, void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)*, void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)** %34, i64 5
  %36 = load void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)*, void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)** %35, align 8
  call void %36(%"class.content::SyntheticPointerDriver"* %32, i32 0, i32 1, i32 0) #8
  %37 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %10, align 8
  %38 = bitcast %"class.content::SyntheticPointerDriver"* %37 to void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)***
  %39 = load void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)**, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)** %39, i64 2
  %41 = load void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)** %40, align 8
  call void %41(%"class.content::SyntheticPointerDriver"* %37, %"class.content::SyntheticGestureTarget"* %2, %"class.base::TimeTicks"* dereferenceable(8) %1) #8
  store i32 3, i32* %7, align 4
  br label %104

42:                                               ; preds = %9
  %43 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  %44 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 3, i32 0, i32 0
  %45 = load i64, i64* %43, align 8
  store i64 %45, i64* %44, align 8
  store i32 2, i32* %7, align 4
  br label %104

46:                                               ; preds = %3
  %47 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 3, i32 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %1, i64 0, i32 0, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = sub nsw i64 %50, %48
  %52 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 1, i32 2
  %53 = load float, float* %52, align 4
  %54 = fptosi float %53 to i64
  %55 = icmp slt i64 %54, 0
  %56 = select i1 %55, i64 -9223372036854775808, i64 9223372036854775807
  %57 = tail call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %54, i64 1000) #8
  %58 = extractvalue { i64, i1 } %57, 1
  %59 = extractvalue { i64, i1 } %57, 0
  %60 = select i1 %58, i64 %56, i64 %59, !prof !2
  %61 = icmp slt i64 %51, %60
  br i1 %61, label %104, label %62

62:                                               ; preds = %46
  %63 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %64 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %63, align 8
  %65 = bitcast %"class.content::SyntheticPointerDriver"* %64 to void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)***
  %66 = load void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)**, void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)*, void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)** %66, i64 5
  %68 = load void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)*, void (%"class.content::SyntheticPointerDriver"*, i32, i32, i32)** %67, align 8
  tail call void %68(%"class.content::SyntheticPointerDriver"* %64, i32 0, i32 1, i32 0) #8
  %69 = load %"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticPointerDriver"** %63, align 8
  %70 = bitcast %"class.base::TimeTicks"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #8
  %71 = load float, float* %52, align 4
  %72 = fptosi float %71 to i64
  %73 = icmp slt i64 %72, 0
  %74 = select i1 %73, i64 -9223372036854775808, i64 9223372036854775807
  %75 = tail call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %72, i64 1000) #8
  %76 = extractvalue { i64, i1 } %75, 1
  %77 = extractvalue { i64, i1 } %75, 0
  %78 = select i1 %76, i64 %74, i64 %77, !prof !2
  %79 = load i64, i64* %47, align 8
  %80 = add i64 %78, -9223372036854775807
  %81 = icmp ult i64 %80, 2
  br i1 %81, label %89, label %82

82:                                               ; preds = %62
  %83 = icmp slt i64 %78, 0
  %84 = select i1 %83, i64 -9223372036854775808, i64 9223372036854775807
  %85 = tail call { i64, i1 } @llvm.sadd.with.overflow.i64(i64 %79, i64 %78) #8
  %86 = extractvalue { i64, i1 } %85, 1
  %87 = extractvalue { i64, i1 } %85, 0
  %88 = select i1 %86, i64 %84, i64 %87, !prof !2
  br label %97

89:                                               ; preds = %62
  %90 = add i64 %79, -9223372036854775807
  %91 = icmp ugt i64 %90, 1
  %92 = icmp eq i64 %79, %78
  %93 = or i1 %91, %92
  br i1 %93, label %97, label %94

94:                                               ; preds = %89
  %95 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #8
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str, i64 0, i64 0), i32 378, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.1, i64 0, i64 0)) #8
  %96 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #8
  br label %97

97:                                               ; preds = %82, %89, %94
  %98 = phi i64 [ %88, %82 ], [ %78, %89 ], [ %78, %94 ]
  %99 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %6, i64 0, i32 0, i32 0
  store i64 %98, i64* %99, align 8
  %100 = bitcast %"class.content::SyntheticPointerDriver"* %69 to void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)***
  %101 = load void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)**, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)** %101, i64 2
  %103 = load void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)*, void (%"class.content::SyntheticPointerDriver"*, %"class.content::SyntheticGestureTarget"*, %"class.base::TimeTicks"*)** %102, align 8
  call void %103(%"class.content::SyntheticPointerDriver"* %69, %"class.content::SyntheticGestureTarget"* %2, %"class.base::TimeTicks"* nonnull dereferenceable(8) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #8
  store i32 3, i32* %7, align 4
  br label %104

104:                                              ; preds = %46, %97, %31, %42, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK7content19SyntheticTapGesture16WaitForTargetAckEN4base12OnceCallbackIFvvEEEPNS_22SyntheticGestureTargetE(%"class.content::SyntheticTapGesture"*, %"class.base::OnceCallback"* nocapture, %"class.content::SyntheticGestureTarget"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 1
  %6 = tail call i32 @_ZNK7content25SyntheticTapGestureParams14GetGestureTypeEv(%"struct.content::SyntheticTapGestureParams"* %5) #8
  %7 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = bitcast %"class.content::SyntheticGestureTarget"* %2 to void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)***
  %14 = load void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)**, void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)*, void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)** %14, i64 9
  %16 = load void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)*, void (%"class.content::SyntheticGestureTarget"*, i32, i32, %"class.base::OnceCallback"*)** %15, align 8
  call void %16(%"class.content::SyntheticGestureTarget"* %2, i32 %6, i32 %8, %"class.base::OnceCallback"* nonnull %4) #8
  %17 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %17) #8
  ret void
}

declare i32 @_ZNK7content25SyntheticTapGestureParams14GetGestureTypeEv(%"struct.content::SyntheticTapGestureParams"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK7content19SyntheticTapGesture26AllowHighFrequencyDispatchEv(%"class.content::SyntheticTapGesture"* nocapture readnone) unnamed_addr #5 align 2 {
  ret i1 false
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i64 @_ZNK7content19SyntheticTapGesture11GetDurationEv(%"class.content::SyntheticTapGesture"* nocapture readonly) local_unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.content::SyntheticTapGesture", %"class.content::SyntheticTapGesture"* %0, i64 0, i32 1, i32 2
  %3 = load float, float* %2, align 4
  %4 = fptosi float %3 to i64
  %5 = icmp slt i64 %4, 0
  %6 = select i1 %5, i64 -9223372036854775808, i64 9223372036854775807
  %7 = tail call { i64, i1 } @llvm.smul.with.overflow.i64(i64 %4, i64 1000) #8
  %8 = extractvalue { i64, i1 } %7, 1
  %9 = extractvalue { i64, i1 } %7, 0
  %10 = select i1 %8, i64 %6, i64 %9, !prof !2
  ret i64 %10
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.sadd.with.overflow.i64(i64, i64) #7

; Function Attrs: nounwind readnone speculatable
declare { i64, i1 } @llvm.smul.with.overflow.i64(i64, i64) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
