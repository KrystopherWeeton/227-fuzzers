; ModuleID = '../../third_party/webrtc/rtc_base/task_utils/pending_task_safety_flag.cc'
source_filename = "../../third_party/webrtc/rtc_base/task_utils/pending_task_safety_flag.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.rtc::scoped_refptr" = type { %"class.webrtc::PendingTaskSafetyFlag"* }
%"class.webrtc::PendingTaskSafetyFlag" = type <{ %"class.rtc::RefCountedNonVirtual", i8, [3 x i8] }>
%"class.rtc::RefCountedNonVirtual" = type { %"class.webrtc::webrtc_impl::RefCounter" }
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN6webrtc21PendingTaskSafetyFlag6CreateEv(%"class.rtc::scoped_refptr"* noalias nocapture sret) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 8) #4
  %3 = bitcast i8* %2 to i32*
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds i8, i8* %2, i64 4
  store i8 1, i8* %4, align 4
  %5 = bitcast %"class.rtc::scoped_refptr"* %0 to i8**
  store i8* %2, i8** %5, align 8
  %6 = atomicrmw add i32* %3, i32 1 monotonic
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN6webrtc21PendingTaskSafetyFlag14CreateDetachedEv(%"class.rtc::scoped_refptr"* noalias nocapture sret) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 8) #4
  %3 = bitcast i8* %2 to i32*
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds i8, i8* %2, i64 4
  store i8 1, i8* %4, align 4
  %5 = bitcast %"class.rtc::scoped_refptr"* %0 to i8**
  store i8* %2, i8** %5, align 8
  %6 = atomicrmw add i32* %3, i32 1 monotonic
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_ZN6webrtc21PendingTaskSafetyFlag22CreateDetachedInactiveEv(%"class.rtc::scoped_refptr"* noalias nocapture sret) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 8) #4
  %3 = bitcast i8* %2 to i32*
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds i8, i8* %2, i64 4
  store i8 0, i8* %4, align 4
  %5 = bitcast %"class.rtc::scoped_refptr"* %0 to i8**
  store i8* %2, i8** %5, align 8
  %6 = atomicrmw add i32* %3, i32 1 monotonic
  ret void
}

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc21PendingTaskSafetyFlag11SetNotAliveEv(%"class.webrtc::PendingTaskSafetyFlag"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::PendingTaskSafetyFlag", %"class.webrtc::PendingTaskSafetyFlag"* %0, i64 0, i32 1
  store i8 0, i8* %2, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc21PendingTaskSafetyFlag8SetAliveEv(%"class.webrtc::PendingTaskSafetyFlag"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::PendingTaskSafetyFlag", %"class.webrtc::PendingTaskSafetyFlag"* %0, i64 0, i32 1
  store i8 1, i8* %2, align 4
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6webrtc21PendingTaskSafetyFlag5aliveEv(%"class.webrtc::PendingTaskSafetyFlag"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::PendingTaskSafetyFlag", %"class.webrtc::PendingTaskSafetyFlag"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
