; ModuleID = '../../components/policy/core/common/legacy_chrome_policy_migrator.cc'
source_filename = "../../components/policy/core/common/legacy_chrome_policy_migrator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.policy::LegacyChromePolicyMigrator" = type { %"class.policy::PolicyMigrator", %"struct.policy::PolicyMigrator::Migration" }
%"class.policy::PolicyMigrator" = type { i32 (...)** }
%"struct.policy::PolicyMigrator::Migration" = type { i8*, i8*, %"class.base::RepeatingCallback" }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.policy::PolicyBundle" = type { i32 (...)**, %"class.std::__1::map", %"class.policy::PolicyMap" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i64 }
%"class.policy::PolicyMap" = type { %"class.std::__1::map.5", i8, %"class.base::internal::flat_tree", %"class.base::internal::flat_tree" }
%"class.std::__1::map.5" = type { %"class.std::__1::__tree.6" }
%"class.std::__1::__tree.6" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.7", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"class.std::__1::basic_string"* }
%"struct.policy::PolicyNamespace" = type { i32, %"class.std::__1::basic_string" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZTVN6policy26LegacyChromePolicyMigratorE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.policy::LegacyChromePolicyMigrator"*)* @_ZN6policy26LegacyChromePolicyMigratorD2Ev to i8*), i8* bitcast (void (%"class.policy::LegacyChromePolicyMigrator"*)* @_ZN6policy26LegacyChromePolicyMigratorD0Ev to i8*), i8* bitcast (void (%"class.policy::LegacyChromePolicyMigrator"*, %"class.policy::PolicyBundle"*)* @_ZN6policy26LegacyChromePolicyMigrator7MigrateEPNS_12PolicyBundleE to i8*)] }, align 8

@_ZN6policy26LegacyChromePolicyMigratorC1EPKcS2_ = hidden unnamed_addr alias void (%"class.policy::LegacyChromePolicyMigrator"*, i8*, i8*), void (%"class.policy::LegacyChromePolicyMigrator"*, i8*, i8*)* @_ZN6policy26LegacyChromePolicyMigratorC2EPKcS2_
@_ZN6policy26LegacyChromePolicyMigratorC1EPKcS2_N4base17RepeatingCallbackIFvPNS3_5ValueEEEE = hidden unnamed_addr alias void (%"class.policy::LegacyChromePolicyMigrator"*, i8*, i8*, %"class.base::RepeatingCallback"*), void (%"class.policy::LegacyChromePolicyMigrator"*, i8*, i8*, %"class.base::RepeatingCallback"*)* @_ZN6policy26LegacyChromePolicyMigratorC2EPKcS2_N4base17RepeatingCallbackIFvPNS3_5ValueEEEE
@_ZN6policy26LegacyChromePolicyMigratorD1Ev = hidden unnamed_addr alias void (%"class.policy::LegacyChromePolicyMigrator"*), void (%"class.policy::LegacyChromePolicyMigrator"*)* @_ZN6policy26LegacyChromePolicyMigratorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy26LegacyChromePolicyMigratorC2EPKcS2_(%"class.policy::LegacyChromePolicyMigrator"*, i8*, i8*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.policy::LegacyChromePolicyMigrator", %"class.policy::LegacyChromePolicyMigrator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6policy26LegacyChromePolicyMigratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.policy::LegacyChromePolicyMigrator", %"class.policy::LegacyChromePolicyMigrator"* %0, i64 0, i32 1
  tail call void @_ZN6policy14PolicyMigrator9MigrationC1EPKcS3_(%"struct.policy::PolicyMigrator::Migration"* %5, i8* %1, i8* %2) #5
  ret void
}

declare void @_ZN6policy14PolicyMigrator9MigrationC1EPKcS3_(%"struct.policy::PolicyMigrator::Migration"*, i8*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy26LegacyChromePolicyMigratorC2EPKcS2_N4base17RepeatingCallbackIFvPNS3_5ValueEEEE(%"class.policy::LegacyChromePolicyMigrator"*, i8*, i8*, %"class.base::RepeatingCallback"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::RepeatingCallback", align 8
  %6 = getelementptr inbounds %"class.policy::LegacyChromePolicyMigrator", %"class.policy::LegacyChromePolicyMigrator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6policy26LegacyChromePolicyMigratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.policy::LegacyChromePolicyMigrator", %"class.policy::LegacyChromePolicyMigrator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0
  %9 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %3, i64 0, i32 0
  call void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"* nonnull %8, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8) %9) #5
  call void @_ZN6policy14PolicyMigrator9MigrationC1EPKcS3_N4base17RepeatingCallbackIFvPNS4_5ValueEEEE(%"struct.policy::PolicyMigrator::Migration"* %7, i8* %1, i8* %2, %"class.base::RepeatingCallback"* nonnull %5) #5
  %10 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %10) #5
  ret void
}

declare void @_ZN6policy14PolicyMigrator9MigrationC1EPKcS3_N4base17RepeatingCallbackIFvPNS4_5ValueEEEE(%"struct.policy::PolicyMigrator::Migration"*, i8*, i8*, %"class.base::RepeatingCallback"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy26LegacyChromePolicyMigratorD2Ev(%"class.policy::LegacyChromePolicyMigrator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.policy::LegacyChromePolicyMigrator", %"class.policy::LegacyChromePolicyMigrator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6policy26LegacyChromePolicyMigratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.policy::LegacyChromePolicyMigrator", %"class.policy::LegacyChromePolicyMigrator"* %0, i64 0, i32 1
  tail call void @_ZN6policy14PolicyMigrator9MigrationD1Ev(%"struct.policy::PolicyMigrator::Migration"* %3) #5
  %4 = getelementptr inbounds %"class.policy::LegacyChromePolicyMigrator", %"class.policy::LegacyChromePolicyMigrator"* %0, i64 0, i32 0
  tail call void @_ZN6policy14PolicyMigratorD2Ev(%"class.policy::PolicyMigrator"* %4) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZN6policy14PolicyMigrator9MigrationD1Ev(%"struct.policy::PolicyMigrator::Migration"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN6policy14PolicyMigratorD2Ev(%"class.policy::PolicyMigrator"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy26LegacyChromePolicyMigratorD0Ev(%"class.policy::LegacyChromePolicyMigrator"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.policy::LegacyChromePolicyMigrator", %"class.policy::LegacyChromePolicyMigrator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6policy26LegacyChromePolicyMigratorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.policy::LegacyChromePolicyMigrator", %"class.policy::LegacyChromePolicyMigrator"* %0, i64 0, i32 1
  tail call void @_ZN6policy14PolicyMigrator9MigrationD1Ev(%"struct.policy::PolicyMigrator::Migration"* %3) #5
  %4 = getelementptr inbounds %"class.policy::LegacyChromePolicyMigrator", %"class.policy::LegacyChromePolicyMigrator"* %0, i64 0, i32 0
  tail call void @_ZN6policy14PolicyMigratorD2Ev(%"class.policy::PolicyMigrator"* %4) #5
  %5 = bitcast %"class.policy::LegacyChromePolicyMigrator"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy26LegacyChromePolicyMigrator7MigrateEPNS_12PolicyBundleE(%"class.policy::LegacyChromePolicyMigrator"*, %"class.policy::PolicyBundle"*) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.policy::PolicyNamespace", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = bitcast %"struct.policy::PolicyNamespace"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %5) #5
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #5
  %7 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 0, i8* %8, align 1
  store i8 0, i8* %6, align 8
  call void @_ZN6policy15PolicyNamespaceC1ENS_12PolicyDomainERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.policy::PolicyNamespace"* nonnull %3, i32 0, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #5
  %9 = call dereferenceable(80) %"class.policy::PolicyMap"* @_ZN6policy12PolicyBundle3GetERKNS_15PolicyNamespaceE(%"class.policy::PolicyBundle"* %1, %"struct.policy::PolicyNamespace"* nonnull dereferenceable(32) %3) #5
  call void @_ZN6policy15PolicyNamespaceD1Ev(%"struct.policy::PolicyNamespace"* nonnull %3) #5
  %10 = load i8, i8* %8, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %14) #6
  br label %15

15:                                               ; preds = %2, %12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %5) #5
  %16 = getelementptr inbounds %"class.policy::LegacyChromePolicyMigrator", %"class.policy::LegacyChromePolicyMigrator"* %0, i64 0, i32 1
  call void @_ZN6policy14PolicyMigrator17CopyPolicyIfUnsetERNS_9PolicyMapEPS1_RKNS0_9MigrationE(%"class.policy::PolicyMap"* dereferenceable(80) %9, %"class.policy::PolicyMap"* %9, %"struct.policy::PolicyMigrator::Migration"* dereferenceable(24) %16) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare dereferenceable(80) %"class.policy::PolicyMap"* @_ZN6policy12PolicyBundle3GetERKNS_15PolicyNamespaceE(%"class.policy::PolicyBundle"*, %"struct.policy::PolicyNamespace"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZN6policy15PolicyNamespaceC1ENS_12PolicyDomainERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"struct.policy::PolicyNamespace"*, i32, %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6policy15PolicyNamespaceD1Ev(%"struct.policy::PolicyNamespace"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN6policy14PolicyMigrator17CopyPolicyIfUnsetERNS_9PolicyMapEPS1_RKNS0_9MigrationE(%"class.policy::PolicyMap"* dereferenceable(80), %"class.policy::PolicyMap"*, %"struct.policy::PolicyMigrator::Migration"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZN4base8internal20CallbackBaseCopyableC2ERKS1_(%"class.base::internal::CallbackBaseCopyable"*, %"class.base::internal::CallbackBaseCopyable"* dereferenceable(8)) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
