; ModuleID = '../../third_party/libaom/source/libaom/av1/common/av1_rtcd.c'
source_filename = "../../third_party/libaom/source/libaom/av1/common/av1_rtcd.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.ConvolveParams = type { i32, i16*, i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.InterpFilterParams = type { i16*, i16, i8 }
%struct.txfm_param = type { i8, i8, i32, i32, i32, i8, i32 }
%struct.NN_CONFIG = type opaque
%struct.yv12_buffer_config = type { %union.anon, %union.anon.0, %union.anon.2, %union.anon.4, %union.anon.6, %union.anon.8, i32, [3 x i8*], i8*, i32, i8*, i64, i32, i64, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, %struct.aom_metadata_array* }
%union.anon = type { %struct.anon }
%struct.anon = type { i32, i32 }
%union.anon.0 = type { %struct.anon.1 }
%struct.anon.1 = type { i32, i32 }
%union.anon.2 = type { %struct.anon.3 }
%struct.anon.3 = type { i32, i32 }
%union.anon.4 = type { %struct.anon.5 }
%struct.anon.5 = type { i32, i32 }
%union.anon.6 = type { %struct.anon.7 }
%struct.anon.7 = type { i32, i32 }
%union.anon.8 = type { %struct.anon.9 }
%struct.anon.9 = type { i8*, i8*, i8* }
%struct.aom_metadata_array = type { i64, %struct.aom_metadata** }
%struct.aom_metadata = type { i32, i8*, i64, i32 }

@av1_block_error = common hidden local_unnamed_addr global i64 (i32*, i32*, i64, i64*)* null, align 8
@av1_block_error_lp = common hidden local_unnamed_addr global i64 (i16*, i16*, i64)* null, align 8
@av1_build_compound_diffwtd_mask = common hidden local_unnamed_addr global void (i8*, i8, i8*, i32, i8*, i32, i32, i32)* null, align 8
@av1_build_compound_diffwtd_mask_d16 = common hidden local_unnamed_addr global void (i8*, i8, i16*, i32, i16*, i32, i32, i32, %struct.ConvolveParams*, i32)* null, align 8
@av1_build_compound_diffwtd_mask_highbd = common hidden local_unnamed_addr global void (i8*, i8, i8*, i32, i8*, i32, i32, i32, i32)* null, align 8
@av1_calc_indices_dim1 = common hidden local_unnamed_addr global void (i32*, i32*, i8*, i32, i32)* null, align 8
@av1_calc_indices_dim2 = common hidden local_unnamed_addr global void (i32*, i32*, i8*, i32, i32)* null, align 8
@av1_compute_cross_correlation = common hidden local_unnamed_addr global double (i8*, i32, i32, i32, i8*, i32, i32, i32)* null, align 8
@av1_convolve_2d_scale = common hidden local_unnamed_addr global void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, %struct.InterpFilterParams*, i32, i32, i32, i32, %struct.ConvolveParams*)* null, align 8
@av1_convolve_2d_sr = common hidden local_unnamed_addr global void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, %struct.InterpFilterParams*, i32, i32, %struct.ConvolveParams*)* null, align 8
@av1_convolve_horiz_rs = common hidden local_unnamed_addr global void (i8*, i32, i8*, i32, i32, i32, i16*, i32, i32)* null, align 8
@av1_convolve_x_sr = common hidden local_unnamed_addr global void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32, %struct.ConvolveParams*)* null, align 8
@av1_convolve_y_sr = common hidden local_unnamed_addr global void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32)* null, align 8
@av1_dist_wtd_convolve_2d = common hidden local_unnamed_addr global void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, %struct.InterpFilterParams*, i32, i32, %struct.ConvolveParams*)* null, align 8
@av1_dist_wtd_convolve_2d_copy = common hidden local_unnamed_addr global void (i8*, i32, i8*, i32, i32, i32, %struct.ConvolveParams*)* null, align 8
@av1_dist_wtd_convolve_x = common hidden local_unnamed_addr global void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32, %struct.ConvolveParams*)* null, align 8
@av1_dist_wtd_convolve_y = common hidden local_unnamed_addr global void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32, %struct.ConvolveParams*)* null, align 8
@av1_dr_prediction_z1 = common hidden local_unnamed_addr global void (i8*, i64, i32, i32, i8*, i8*, i32, i32, i32)* null, align 8
@av1_dr_prediction_z2 = common hidden local_unnamed_addr global void (i8*, i64, i32, i32, i8*, i8*, i32, i32, i32, i32)* null, align 8
@av1_dr_prediction_z3 = common hidden local_unnamed_addr global void (i8*, i64, i32, i32, i8*, i8*, i32, i32, i32)* null, align 8
@av1_filter_intra_edge = common hidden local_unnamed_addr global void (i8*, i32, i32)* null, align 8
@av1_filter_intra_edge_high = common hidden local_unnamed_addr global void (i16*, i32, i32)* null, align 8
@av1_filter_intra_predictor = common hidden local_unnamed_addr global void (i8*, i64, i8, i8*, i8*, i32)* null, align 8
@av1_fwd_txfm2d_16x16 = common hidden local_unnamed_addr global void (i16*, i32*, i32, i8, i32)* null, align 8
@av1_fwd_txfm2d_16x32 = common hidden local_unnamed_addr global void (i16*, i32*, i32, i8, i32)* null, align 8
@av1_fwd_txfm2d_16x4 = common hidden local_unnamed_addr global void (i16*, i32*, i32, i8, i32)* null, align 8
@av1_fwd_txfm2d_16x8 = common hidden local_unnamed_addr global void (i16*, i32*, i32, i8, i32)* null, align 8
@av1_fwd_txfm2d_32x16 = common hidden local_unnamed_addr global void (i16*, i32*, i32, i8, i32)* null, align 8
@av1_fwd_txfm2d_32x32 = common hidden local_unnamed_addr global void (i16*, i32*, i32, i8, i32)* null, align 8
@av1_fwd_txfm2d_32x64 = common hidden local_unnamed_addr global void (i16*, i32*, i32, i8, i32)* null, align 8
@av1_fwd_txfm2d_4x4 = common hidden local_unnamed_addr global void (i16*, i32*, i32, i8, i32)* null, align 8
@av1_fwd_txfm2d_4x8 = common hidden local_unnamed_addr global void (i16*, i32*, i32, i8, i32)* null, align 8
@av1_fwd_txfm2d_64x32 = common hidden local_unnamed_addr global void (i16*, i32*, i32, i8, i32)* null, align 8
@av1_fwd_txfm2d_64x64 = common hidden local_unnamed_addr global void (i16*, i32*, i32, i8, i32)* null, align 8
@av1_fwd_txfm2d_8x16 = common hidden local_unnamed_addr global void (i16*, i32*, i32, i8, i32)* null, align 8
@av1_fwd_txfm2d_8x4 = common hidden local_unnamed_addr global void (i16*, i32*, i32, i8, i32)* null, align 8
@av1_fwd_txfm2d_8x8 = common hidden local_unnamed_addr global void (i16*, i32*, i32, i8, i32)* null, align 8
@av1_get_crc32c_value = common hidden local_unnamed_addr global i32 (i8*, i8*, i64)* null, align 8
@av1_get_horver_correlation_full = common hidden local_unnamed_addr global void (i16*, i32, i32, i32, float*, float*)* null, align 8
@av1_highbd_inv_txfm_add = common hidden local_unnamed_addr global void (i32*, i8*, i32, %struct.txfm_param*)* null, align 8
@av1_highbd_inv_txfm_add_16x4 = common hidden local_unnamed_addr global void (i32*, i8*, i32, %struct.txfm_param*)* null, align 8
@av1_highbd_inv_txfm_add_4x16 = common hidden local_unnamed_addr global void (i32*, i8*, i32, %struct.txfm_param*)* null, align 8
@av1_highbd_inv_txfm_add_4x4 = common hidden local_unnamed_addr global void (i32*, i8*, i32, %struct.txfm_param*)* null, align 8
@av1_highbd_inv_txfm_add_4x8 = common hidden local_unnamed_addr global void (i32*, i8*, i32, %struct.txfm_param*)* null, align 8
@av1_highbd_inv_txfm_add_8x4 = common hidden local_unnamed_addr global void (i32*, i8*, i32, %struct.txfm_param*)* null, align 8
@av1_highbd_inv_txfm_add_8x8 = common hidden local_unnamed_addr global void (i32*, i8*, i32, %struct.txfm_param*)* null, align 8
@av1_inv_txfm2d_add_4x4 = common hidden local_unnamed_addr global void (i32*, i16*, i32, i8, i32)* null, align 8
@av1_inv_txfm2d_add_8x8 = common hidden local_unnamed_addr global void (i32*, i16*, i32, i8, i32)* null, align 8
@av1_inv_txfm_add = common hidden local_unnamed_addr global void (i32*, i8*, i32, %struct.txfm_param*)* null, align 8
@av1_lowbd_fwd_txfm = common hidden local_unnamed_addr global void (i16*, i32*, i32, %struct.txfm_param*)* null, align 8
@av1_nn_predict = common hidden local_unnamed_addr global void (float*, %struct.NN_CONFIG*, i32, float*)* null, align 8
@av1_quantize_fp = common hidden local_unnamed_addr global void (i32*, i64, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)* null, align 8
@av1_quantize_fp_32x32 = common hidden local_unnamed_addr global void (i32*, i64, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)* null, align 8
@av1_quantize_fp_64x64 = common hidden local_unnamed_addr global void (i32*, i64, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)* null, align 8
@av1_quantize_lp = common hidden local_unnamed_addr global void (i16*, i64, i16*, i16*, i16*, i16*, i16*, i16*, i16*)* null, align 8
@av1_resize_and_extend_frame = common hidden local_unnamed_addr global void (%struct.yv12_buffer_config*, %struct.yv12_buffer_config*, i8, i32, i32)* null, align 8
@av1_round_shift_array = common hidden local_unnamed_addr global void (i32*, i32, i32)* null, align 8
@av1_txb_init_levels = common hidden local_unnamed_addr global void (i32*, i32, i32, i8*)* null, align 8
@av1_upsample_intra_edge = common hidden local_unnamed_addr global void (i8*, i32)* null, align 8
@av1_upsample_intra_edge_high = common hidden local_unnamed_addr global void (i16*, i32, i32)* null, align 8
@av1_wedge_compute_delta_squares = common hidden local_unnamed_addr global void (i16*, i16*, i16*, i32)* null, align 8
@av1_wedge_sign_from_residuals = common hidden local_unnamed_addr global i8 (i16*, i8*, i32, i64)* null, align 8
@av1_wedge_sse_from_residuals = common hidden local_unnamed_addr global i64 (i16*, i16*, i8*, i32)* null, align 8
@av1_wiener_convolve_add_src = common hidden local_unnamed_addr global void (i8*, i64, i8*, i64, i16*, i32, i16*, i32, i32, i32, %struct.ConvolveParams*)* null, align 8
@cdef_copy_rect8_16bit_to_16bit = common hidden local_unnamed_addr global void (i16*, i32, i16*, i32, i32, i32)* null, align 8
@cdef_copy_rect8_8bit_to_16bit = common hidden local_unnamed_addr global void (i16*, i32, i8*, i32, i32, i32)* null, align 8
@cdef_filter_block = common hidden local_unnamed_addr global void (i8*, i16*, i32, i16*, i32, i32, i32, i32, i32, i32, i32)* null, align 8
@cdef_find_dir = common hidden local_unnamed_addr global i32 (i16*, i32, i32*, i32)* null, align 8
@cfl_get_luma_subsampling_420_lbd = common hidden local_unnamed_addr global void (i8*, i32, i16*)* (i8)* null, align 8
@cfl_get_luma_subsampling_422_lbd = common hidden local_unnamed_addr global void (i8*, i32, i16*)* (i8)* null, align 8
@cfl_get_luma_subsampling_444_lbd = common hidden local_unnamed_addr global void (i8*, i32, i16*)* (i8)* null, align 8
@cfl_get_predict_lbd_fn = common hidden local_unnamed_addr global void (i16*, i8*, i32, i32)* (i8)* null, align 8
@cfl_get_subtract_average_fn = common hidden local_unnamed_addr global void (i16*, i16*)* (i8)* null, align 8
@aom_once.lock = internal global i32 0, align 4
@.str = private unnamed_addr constant [14 x i8] c"AOM_SIMD_CAPS\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"AOM_SIMD_CAPS_MASK\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @av1_rtcd() local_unnamed_addr #0 {
  %1 = tail call i32 @pthread_once(i32* nonnull @aom_once.lock, void ()* nonnull @setup_rtcd_internal) #4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @setup_rtcd_internal() #0 {
  %1 = tail call i8* @getenv(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str, i64 0, i64 0)) #4
  %2 = icmp eq i8* %1, null
  br i1 %2, label %9, label %3

3:                                                ; preds = %0
  %4 = load i8, i8* %1, align 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %9, label %6

6:                                                ; preds = %3
  %7 = tail call i64 @strtol(i8* nocapture nonnull %1, i8** null, i32 0) #4
  %8 = trunc i64 %7 to i32
  br label %66

9:                                                ; preds = %3, %0
  %10 = tail call i8* @getenv(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)) #4
  %11 = icmp eq i8* %10, null
  br i1 %11, label %18, label %12

12:                                               ; preds = %9
  %13 = load i8, i8* %10, align 1
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = tail call i64 @strtoul(i8* nocapture nonnull %10, i8** null, i32 0) #4
  %17 = trunc i64 %16 to i32
  br label %18

18:                                               ; preds = %15, %12, %9
  %19 = phi i32 [ %17, %15 ], [ -1, %12 ], [ -1, %9 ]
  %20 = tail call { i32, i32, i32, i32 } asm sideeffect "cpuid           \0A\09", "={ax},={bx},={cx},={dx},{ax},{cx},~{dirflag},~{fpsr},~{flags}"(i32 0, i32 0) #4, !srcloc !2
  %21 = extractvalue { i32, i32, i32, i32 } %20, 0
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %66, label %23

23:                                               ; preds = %18
  %24 = tail call { i32, i32, i32, i32 } asm sideeffect "cpuid           \0A\09", "={ax},={bx},={cx},={dx},{ax},{cx},~{dirflag},~{fpsr},~{flags}"(i32 1, i32 0) #4, !srcloc !3
  %25 = extractvalue { i32, i32, i32, i32 } %24, 2
  %26 = extractvalue { i32, i32, i32, i32 } %24, 3
  %27 = lshr i32 %26, 23
  %28 = and i32 %27, 1
  %29 = lshr i32 %26, 24
  %30 = and i32 %29, 2
  %31 = or i32 %30, %28
  %32 = and i32 %29, 4
  %33 = or i32 %31, %32
  %34 = shl i32 %25, 3
  %35 = and i32 %34, 8
  %36 = or i32 %33, %35
  %37 = lshr i32 %25, 5
  %38 = and i32 %37, 16
  %39 = or i32 %36, %38
  %40 = lshr i32 %25, 14
  %41 = and i32 %40, 32
  %42 = or i32 %39, %41
  %43 = lshr i32 %25, 12
  %44 = and i32 %43, 256
  %45 = or i32 %42, %44
  %46 = and i32 %25, 402653184
  %47 = icmp eq i32 %46, 402653184
  br i1 %47, label %48, label %63

48:                                               ; preds = %23
  %49 = tail call { i32, i32 } asm sideeffect ".byte 0x0f, 0x01, 0xd0\0A", "={ax},={dx},{cx},~{dirflag},~{fpsr},~{flags}"(i32 0) #4, !srcloc !4
  %50 = extractvalue { i32, i32 } %49, 0
  %51 = and i32 %50, 6
  %52 = icmp eq i32 %51, 6
  br i1 %52, label %53, label %63

53:                                               ; preds = %48
  %54 = or i32 %45, 64
  %55 = icmp ugt i32 %21, 6
  br i1 %55, label %56, label %63

56:                                               ; preds = %53
  %57 = tail call { i32, i32, i32, i32 } asm sideeffect "cpuid           \0A\09", "={ax},={bx},={cx},={dx},{ax},{cx},~{dirflag},~{fpsr},~{flags}"(i32 7, i32 0) #4, !srcloc !5
  %58 = extractvalue { i32, i32, i32, i32 } %57, 1
  %59 = and i32 %58, 32
  %60 = icmp eq i32 %59, 0
  %61 = or i32 %45, 192
  %62 = select i1 %60, i32 %54, i32 %61
  br label %63

63:                                               ; preds = %56, %53, %48, %23
  %64 = phi i32 [ %54, %53 ], [ %45, %48 ], [ %45, %23 ], [ %62, %56 ]
  %65 = and i32 %64, %19
  br label %66

66:                                               ; preds = %6, %18, %63
  %67 = phi i32 [ %8, %6 ], [ %65, %63 ], [ 0, %18 ]
  %68 = trunc i32 %67 to i8
  %69 = icmp slt i8 %68, 0
  %70 = select i1 %69, i64 (i32*, i32*, i64, i64*)* @av1_block_error_avx2, i64 (i32*, i32*, i64, i64*)* @av1_block_error_sse2
  store i64 (i32*, i32*, i64, i64*)* %70, i64 (i32*, i32*, i64, i64*)** @av1_block_error, align 8
  %71 = select i1 %69, i64 (i16*, i16*, i64)* @av1_block_error_lp_avx2, i64 (i16*, i16*, i64)* @av1_block_error_lp_c
  store i64 (i16*, i16*, i64)* %71, i64 (i16*, i16*, i64)** @av1_block_error_lp, align 8
  %72 = and i32 %67, 32
  %73 = icmp ne i32 %72, 0
  %74 = select i1 %73, void (i8*, i8, i8*, i32, i8*, i32, i32, i32)* @av1_build_compound_diffwtd_mask_sse4_1, void (i8*, i8, i8*, i32, i8*, i32, i32, i32)* @av1_build_compound_diffwtd_mask_c
  %75 = select i1 %69, void (i8*, i8, i8*, i32, i8*, i32, i32, i32)* @av1_build_compound_diffwtd_mask_avx2, void (i8*, i8, i8*, i32, i8*, i32, i32, i32)* %74
  store void (i8*, i8, i8*, i32, i8*, i32, i32, i32)* %75, void (i8*, i8, i8*, i32, i8*, i32, i32, i32)** @av1_build_compound_diffwtd_mask, align 8
  %76 = select i1 %73, void (i8*, i8, i16*, i32, i16*, i32, i32, i32, %struct.ConvolveParams*, i32)* @av1_build_compound_diffwtd_mask_d16_sse4_1, void (i8*, i8, i16*, i32, i16*, i32, i32, i32, %struct.ConvolveParams*, i32)* @av1_build_compound_diffwtd_mask_d16_c
  %77 = select i1 %69, void (i8*, i8, i16*, i32, i16*, i32, i32, i32, %struct.ConvolveParams*, i32)* @av1_build_compound_diffwtd_mask_d16_avx2, void (i8*, i8, i16*, i32, i16*, i32, i32, i32, %struct.ConvolveParams*, i32)* %76
  store void (i8*, i8, i16*, i32, i16*, i32, i32, i32, %struct.ConvolveParams*, i32)* %77, void (i8*, i8, i16*, i32, i16*, i32, i32, i32, %struct.ConvolveParams*, i32)** @av1_build_compound_diffwtd_mask_d16, align 8
  %78 = and i32 %67, 16
  %79 = icmp ne i32 %78, 0
  %80 = select i1 %79, void (i8*, i8, i8*, i32, i8*, i32, i32, i32, i32)* @av1_build_compound_diffwtd_mask_highbd_ssse3, void (i8*, i8, i8*, i32, i8*, i32, i32, i32, i32)* @av1_build_compound_diffwtd_mask_highbd_c
  %81 = select i1 %69, void (i8*, i8, i8*, i32, i8*, i32, i32, i32, i32)* @av1_build_compound_diffwtd_mask_highbd_avx2, void (i8*, i8, i8*, i32, i8*, i32, i32, i32, i32)* %80
  store void (i8*, i8, i8*, i32, i8*, i32, i32, i32, i32)* %81, void (i8*, i8, i8*, i32, i8*, i32, i32, i32, i32)** @av1_build_compound_diffwtd_mask_highbd, align 8
  %82 = select i1 %69, void (i32*, i32*, i8*, i32, i32)* @av1_calc_indices_dim1_avx2, void (i32*, i32*, i8*, i32, i32)* @av1_calc_indices_dim1_sse2
  store void (i32*, i32*, i8*, i32, i32)* %82, void (i32*, i32*, i8*, i32, i32)** @av1_calc_indices_dim1, align 8
  %83 = select i1 %69, void (i32*, i32*, i8*, i32, i32)* @av1_calc_indices_dim2_avx2, void (i32*, i32*, i8*, i32, i32)* @av1_calc_indices_dim2_c
  store void (i32*, i32*, i8*, i32, i32)* %83, void (i32*, i32*, i8*, i32, i32)** @av1_calc_indices_dim2, align 8
  %84 = select i1 %73, double (i8*, i32, i32, i32, i8*, i32, i32, i32)* @av1_compute_cross_correlation_sse4_1, double (i8*, i32, i32, i32, i8*, i32, i32, i32)* @av1_compute_cross_correlation_c
  %85 = select i1 %69, double (i8*, i32, i32, i32, i8*, i32, i32, i32)* @av1_compute_cross_correlation_avx2, double (i8*, i32, i32, i32, i8*, i32, i32, i32)* %84
  store double (i8*, i32, i32, i32, i8*, i32, i32, i32)* %85, double (i8*, i32, i32, i32, i8*, i32, i32, i32)** @av1_compute_cross_correlation, align 8
  %86 = select i1 %73, void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, %struct.InterpFilterParams*, i32, i32, i32, i32, %struct.ConvolveParams*)* @av1_convolve_2d_scale_sse4_1, void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, %struct.InterpFilterParams*, i32, i32, i32, i32, %struct.ConvolveParams*)* @av1_convolve_2d_scale_c
  store void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, %struct.InterpFilterParams*, i32, i32, i32, i32, %struct.ConvolveParams*)* %86, void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, %struct.InterpFilterParams*, i32, i32, i32, i32, %struct.ConvolveParams*)** @av1_convolve_2d_scale, align 8
  %87 = select i1 %69, void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, %struct.InterpFilterParams*, i32, i32, %struct.ConvolveParams*)* @av1_convolve_2d_sr_avx2, void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, %struct.InterpFilterParams*, i32, i32, %struct.ConvolveParams*)* @av1_convolve_2d_sr_sse2
  store void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, %struct.InterpFilterParams*, i32, i32, %struct.ConvolveParams*)* %87, void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, %struct.InterpFilterParams*, i32, i32, %struct.ConvolveParams*)** @av1_convolve_2d_sr, align 8
  %88 = select i1 %73, void (i8*, i32, i8*, i32, i32, i32, i16*, i32, i32)* @av1_convolve_horiz_rs_sse4_1, void (i8*, i32, i8*, i32, i32, i32, i16*, i32, i32)* @av1_convolve_horiz_rs_c
  store void (i8*, i32, i8*, i32, i32, i32, i16*, i32, i32)* %88, void (i8*, i32, i8*, i32, i32, i32, i16*, i32, i32)** @av1_convolve_horiz_rs, align 8
  %89 = select i1 %69, void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32, %struct.ConvolveParams*)* @av1_convolve_x_sr_avx2, void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32, %struct.ConvolveParams*)* @av1_convolve_x_sr_sse2
  store void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32, %struct.ConvolveParams*)* %89, void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32, %struct.ConvolveParams*)** @av1_convolve_x_sr, align 8
  %90 = select i1 %69, void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32)* @av1_convolve_y_sr_avx2, void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32)* @av1_convolve_y_sr_sse2
  store void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32)* %90, void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32)** @av1_convolve_y_sr, align 8
  %91 = select i1 %79, void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, %struct.InterpFilterParams*, i32, i32, %struct.ConvolveParams*)* @av1_dist_wtd_convolve_2d_ssse3, void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, %struct.InterpFilterParams*, i32, i32, %struct.ConvolveParams*)* @av1_dist_wtd_convolve_2d_sse2
  %92 = select i1 %69, void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, %struct.InterpFilterParams*, i32, i32, %struct.ConvolveParams*)* @av1_dist_wtd_convolve_2d_avx2, void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, %struct.InterpFilterParams*, i32, i32, %struct.ConvolveParams*)* %91
  store void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, %struct.InterpFilterParams*, i32, i32, %struct.ConvolveParams*)* %92, void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, %struct.InterpFilterParams*, i32, i32, %struct.ConvolveParams*)** @av1_dist_wtd_convolve_2d, align 8
  %93 = select i1 %69, void (i8*, i32, i8*, i32, i32, i32, %struct.ConvolveParams*)* @av1_dist_wtd_convolve_2d_copy_avx2, void (i8*, i32, i8*, i32, i32, i32, %struct.ConvolveParams*)* @av1_dist_wtd_convolve_2d_copy_sse2
  store void (i8*, i32, i8*, i32, i32, i32, %struct.ConvolveParams*)* %93, void (i8*, i32, i8*, i32, i32, i32, %struct.ConvolveParams*)** @av1_dist_wtd_convolve_2d_copy, align 8
  %94 = select i1 %69, void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32, %struct.ConvolveParams*)* @av1_dist_wtd_convolve_x_avx2, void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32, %struct.ConvolveParams*)* @av1_dist_wtd_convolve_x_sse2
  store void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32, %struct.ConvolveParams*)* %94, void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32, %struct.ConvolveParams*)** @av1_dist_wtd_convolve_x, align 8
  %95 = select i1 %69, void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32, %struct.ConvolveParams*)* @av1_dist_wtd_convolve_y_avx2, void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32, %struct.ConvolveParams*)* @av1_dist_wtd_convolve_y_sse2
  store void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32, %struct.ConvolveParams*)* %95, void (i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32, %struct.ConvolveParams*)** @av1_dist_wtd_convolve_y, align 8
  %96 = select i1 %69, void (i8*, i64, i32, i32, i8*, i8*, i32, i32, i32)* @av1_dr_prediction_z1_avx2, void (i8*, i64, i32, i32, i8*, i8*, i32, i32, i32)* @av1_dr_prediction_z1_c
  store void (i8*, i64, i32, i32, i8*, i8*, i32, i32, i32)* %96, void (i8*, i64, i32, i32, i8*, i8*, i32, i32, i32)** @av1_dr_prediction_z1, align 8
  %97 = select i1 %69, void (i8*, i64, i32, i32, i8*, i8*, i32, i32, i32, i32)* @av1_dr_prediction_z2_avx2, void (i8*, i64, i32, i32, i8*, i8*, i32, i32, i32, i32)* @av1_dr_prediction_z2_c
  store void (i8*, i64, i32, i32, i8*, i8*, i32, i32, i32, i32)* %97, void (i8*, i64, i32, i32, i8*, i8*, i32, i32, i32, i32)** @av1_dr_prediction_z2, align 8
  %98 = select i1 %69, void (i8*, i64, i32, i32, i8*, i8*, i32, i32, i32)* @av1_dr_prediction_z3_avx2, void (i8*, i64, i32, i32, i8*, i8*, i32, i32, i32)* @av1_dr_prediction_z3_c
  store void (i8*, i64, i32, i32, i8*, i8*, i32, i32, i32)* %98, void (i8*, i64, i32, i32, i8*, i8*, i32, i32, i32)** @av1_dr_prediction_z3, align 8
  %99 = select i1 %73, void (i8*, i32, i32)* @av1_filter_intra_edge_sse4_1, void (i8*, i32, i32)* @av1_filter_intra_edge_c
  store void (i8*, i32, i32)* %99, void (i8*, i32, i32)** @av1_filter_intra_edge, align 8
  %100 = select i1 %73, void (i16*, i32, i32)* @av1_filter_intra_edge_high_sse4_1, void (i16*, i32, i32)* @av1_filter_intra_edge_high_c
  store void (i16*, i32, i32)* %100, void (i16*, i32, i32)** @av1_filter_intra_edge_high, align 8
  %101 = select i1 %73, void (i8*, i64, i8, i8*, i8*, i32)* @av1_filter_intra_predictor_sse4_1, void (i8*, i64, i8, i8*, i8*, i32)* @av1_filter_intra_predictor_c
  store void (i8*, i64, i8, i8*, i8*, i32)* %101, void (i8*, i64, i8, i8*, i8*, i32)** @av1_filter_intra_predictor, align 8
  %102 = select i1 %73, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_16x16_sse4_1, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_16x16_c
  %103 = select i1 %69, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_16x16_avx2, void (i16*, i32*, i32, i8, i32)* %102
  store void (i16*, i32*, i32, i8, i32)* %103, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_16x16, align 8
  %104 = select i1 %73, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_16x32_sse4_1, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_16x32_c
  store void (i16*, i32*, i32, i8, i32)* %104, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_16x32, align 8
  %105 = select i1 %73, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_16x4_sse4_1, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_16x4_c
  store void (i16*, i32*, i32, i8, i32)* %105, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_16x4, align 8
  %106 = select i1 %73, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_16x8_sse4_1, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_16x8_c
  %107 = select i1 %69, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_16x8_avx2, void (i16*, i32*, i32, i8, i32)* %106
  store void (i16*, i32*, i32, i8, i32)* %107, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_16x8, align 8
  %108 = select i1 %73, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_32x16_sse4_1, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_32x16_c
  store void (i16*, i32*, i32, i8, i32)* %108, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_32x16, align 8
  %109 = select i1 %73, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_32x32_sse4_1, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_32x32_c
  %110 = select i1 %69, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_32x32_avx2, void (i16*, i32*, i32, i8, i32)* %109
  store void (i16*, i32*, i32, i8, i32)* %110, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_32x32, align 8
  %111 = select i1 %73, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_32x64_sse4_1, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_32x64_c
  store void (i16*, i32*, i32, i8, i32)* %111, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_32x64, align 8
  %112 = select i1 %73, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_4x4_sse4_1, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_4x4_c
  store void (i16*, i32*, i32, i8, i32)* %112, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_4x4, align 8
  %113 = select i1 %73, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_4x8_sse4_1, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_4x8_c
  store void (i16*, i32*, i32, i8, i32)* %113, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_4x8, align 8
  %114 = select i1 %73, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_64x32_sse4_1, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_64x32_c
  store void (i16*, i32*, i32, i8, i32)* %114, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_64x32, align 8
  %115 = select i1 %73, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_64x64_sse4_1, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_64x64_c
  %116 = select i1 %69, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_64x64_avx2, void (i16*, i32*, i32, i8, i32)* %115
  store void (i16*, i32*, i32, i8, i32)* %116, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_64x64, align 8
  %117 = select i1 %73, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_8x16_sse4_1, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_8x16_c
  %118 = select i1 %69, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_8x16_avx2, void (i16*, i32*, i32, i8, i32)* %117
  store void (i16*, i32*, i32, i8, i32)* %118, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_8x16, align 8
  %119 = select i1 %73, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_8x4_sse4_1, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_8x4_c
  store void (i16*, i32*, i32, i8, i32)* %119, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_8x4, align 8
  %120 = select i1 %73, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_8x8_sse4_1, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_8x8_c
  %121 = select i1 %69, void (i16*, i32*, i32, i8, i32)* @av1_fwd_txfm2d_8x8_avx2, void (i16*, i32*, i32, i8, i32)* %120
  store void (i16*, i32*, i32, i8, i32)* %121, void (i16*, i32*, i32, i8, i32)** @av1_fwd_txfm2d_8x8, align 8
  %122 = and i32 %67, 256
  %123 = icmp eq i32 %122, 0
  %124 = select i1 %123, i32 (i8*, i8*, i64)* @av1_get_crc32c_value_c, i32 (i8*, i8*, i64)* @av1_get_crc32c_value_sse4_2
  store i32 (i8*, i8*, i64)* %124, i32 (i8*, i8*, i64)** @av1_get_crc32c_value, align 8
  %125 = select i1 %73, void (i16*, i32, i32, i32, float*, float*)* @av1_get_horver_correlation_full_sse4_1, void (i16*, i32, i32, i32, float*, float*)* @av1_get_horver_correlation_full_c
  %126 = select i1 %69, void (i16*, i32, i32, i32, float*, float*)* @av1_get_horver_correlation_full_avx2, void (i16*, i32, i32, i32, float*, float*)* %125
  store void (i16*, i32, i32, i32, float*, float*)* %126, void (i16*, i32, i32, i32, float*, float*)** @av1_get_horver_correlation_full, align 8
  %127 = select i1 %73, void (i32*, i8*, i32, %struct.txfm_param*)* @av1_highbd_inv_txfm_add_sse4_1, void (i32*, i8*, i32, %struct.txfm_param*)* @av1_highbd_inv_txfm_add_c
  %128 = select i1 %69, void (i32*, i8*, i32, %struct.txfm_param*)* @av1_highbd_inv_txfm_add_avx2, void (i32*, i8*, i32, %struct.txfm_param*)* %127
  store void (i32*, i8*, i32, %struct.txfm_param*)* %128, void (i32*, i8*, i32, %struct.txfm_param*)** @av1_highbd_inv_txfm_add, align 8
  %129 = select i1 %73, void (i32*, i8*, i32, %struct.txfm_param*)* @av1_highbd_inv_txfm_add_16x4_sse4_1, void (i32*, i8*, i32, %struct.txfm_param*)* @av1_highbd_inv_txfm_add_16x4_c
  store void (i32*, i8*, i32, %struct.txfm_param*)* %129, void (i32*, i8*, i32, %struct.txfm_param*)** @av1_highbd_inv_txfm_add_16x4, align 8
  %130 = select i1 %73, void (i32*, i8*, i32, %struct.txfm_param*)* @av1_highbd_inv_txfm_add_4x16_sse4_1, void (i32*, i8*, i32, %struct.txfm_param*)* @av1_highbd_inv_txfm_add_4x16_c
  store void (i32*, i8*, i32, %struct.txfm_param*)* %130, void (i32*, i8*, i32, %struct.txfm_param*)** @av1_highbd_inv_txfm_add_4x16, align 8
  %131 = select i1 %73, void (i32*, i8*, i32, %struct.txfm_param*)* @av1_highbd_inv_txfm_add_4x4_sse4_1, void (i32*, i8*, i32, %struct.txfm_param*)* @av1_highbd_inv_txfm_add_4x4_c
  store void (i32*, i8*, i32, %struct.txfm_param*)* %131, void (i32*, i8*, i32, %struct.txfm_param*)** @av1_highbd_inv_txfm_add_4x4, align 8
  %132 = select i1 %73, void (i32*, i8*, i32, %struct.txfm_param*)* @av1_highbd_inv_txfm_add_4x8_sse4_1, void (i32*, i8*, i32, %struct.txfm_param*)* @av1_highbd_inv_txfm_add_4x8_c
  store void (i32*, i8*, i32, %struct.txfm_param*)* %132, void (i32*, i8*, i32, %struct.txfm_param*)** @av1_highbd_inv_txfm_add_4x8, align 8
  %133 = select i1 %73, void (i32*, i8*, i32, %struct.txfm_param*)* @av1_highbd_inv_txfm_add_8x4_sse4_1, void (i32*, i8*, i32, %struct.txfm_param*)* @av1_highbd_inv_txfm_add_8x4_c
  store void (i32*, i8*, i32, %struct.txfm_param*)* %133, void (i32*, i8*, i32, %struct.txfm_param*)** @av1_highbd_inv_txfm_add_8x4, align 8
  %134 = select i1 %73, void (i32*, i8*, i32, %struct.txfm_param*)* @av1_highbd_inv_txfm_add_8x8_sse4_1, void (i32*, i8*, i32, %struct.txfm_param*)* @av1_highbd_inv_txfm_add_8x8_c
  store void (i32*, i8*, i32, %struct.txfm_param*)* %134, void (i32*, i8*, i32, %struct.txfm_param*)** @av1_highbd_inv_txfm_add_8x8, align 8
  %135 = select i1 %73, void (i32*, i16*, i32, i8, i32)* @av1_inv_txfm2d_add_4x4_sse4_1, void (i32*, i16*, i32, i8, i32)* @av1_inv_txfm2d_add_4x4_c
  store void (i32*, i16*, i32, i8, i32)* %135, void (i32*, i16*, i32, i8, i32)** @av1_inv_txfm2d_add_4x4, align 8
  %136 = select i1 %73, void (i32*, i16*, i32, i8, i32)* @av1_inv_txfm2d_add_8x8_sse4_1, void (i32*, i16*, i32, i8, i32)* @av1_inv_txfm2d_add_8x8_c
  store void (i32*, i16*, i32, i8, i32)* %136, void (i32*, i16*, i32, i8, i32)** @av1_inv_txfm2d_add_8x8, align 8
  %137 = select i1 %79, void (i32*, i8*, i32, %struct.txfm_param*)* @av1_inv_txfm_add_ssse3, void (i32*, i8*, i32, %struct.txfm_param*)* @av1_inv_txfm_add_c
  %138 = select i1 %69, void (i32*, i8*, i32, %struct.txfm_param*)* @av1_inv_txfm_add_avx2, void (i32*, i8*, i32, %struct.txfm_param*)* %137
  store void (i32*, i8*, i32, %struct.txfm_param*)* %138, void (i32*, i8*, i32, %struct.txfm_param*)** @av1_inv_txfm_add, align 8
  %139 = select i1 %73, void (i16*, i32*, i32, %struct.txfm_param*)* @av1_lowbd_fwd_txfm_sse4_1, void (i16*, i32*, i32, %struct.txfm_param*)* @av1_lowbd_fwd_txfm_sse2
  %140 = select i1 %69, void (i16*, i32*, i32, %struct.txfm_param*)* @av1_lowbd_fwd_txfm_avx2, void (i16*, i32*, i32, %struct.txfm_param*)* %139
  store void (i16*, i32*, i32, %struct.txfm_param*)* %140, void (i16*, i32*, i32, %struct.txfm_param*)** @av1_lowbd_fwd_txfm, align 8
  %141 = and i32 %67, 8
  %142 = icmp eq i32 %141, 0
  %143 = select i1 %142, void (float*, %struct.NN_CONFIG*, i32, float*)* @av1_nn_predict_c, void (float*, %struct.NN_CONFIG*, i32, float*)* @av1_nn_predict_sse3
  store void (float*, %struct.NN_CONFIG*, i32, float*)* %143, void (float*, %struct.NN_CONFIG*, i32, float*)** @av1_nn_predict, align 8
  %144 = select i1 %69, void (i32*, i64, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)* @av1_quantize_fp_avx2, void (i32*, i64, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)* @av1_quantize_fp_sse2
  store void (i32*, i64, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)* %144, void (i32*, i64, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)** @av1_quantize_fp, align 8
  %145 = select i1 %69, void (i32*, i64, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)* @av1_quantize_fp_32x32_avx2, void (i32*, i64, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)* @av1_quantize_fp_32x32_c
  store void (i32*, i64, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)* %145, void (i32*, i64, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)** @av1_quantize_fp_32x32, align 8
  %146 = select i1 %69, void (i32*, i64, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)* @av1_quantize_fp_64x64_avx2, void (i32*, i64, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)* @av1_quantize_fp_64x64_c
  store void (i32*, i64, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)* %146, void (i32*, i64, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*)** @av1_quantize_fp_64x64, align 8
  %147 = select i1 %69, void (i16*, i64, i16*, i16*, i16*, i16*, i16*, i16*, i16*)* @av1_quantize_lp_avx2, void (i16*, i64, i16*, i16*, i16*, i16*, i16*, i16*, i16*)* @av1_quantize_lp_c
  store void (i16*, i64, i16*, i16*, i16*, i16*, i16*, i16*, i16*)* %147, void (i16*, i64, i16*, i16*, i16*, i16*, i16*, i16*, i16*)** @av1_quantize_lp, align 8
  %148 = select i1 %79, void (%struct.yv12_buffer_config*, %struct.yv12_buffer_config*, i8, i32, i32)* @av1_resize_and_extend_frame_ssse3, void (%struct.yv12_buffer_config*, %struct.yv12_buffer_config*, i8, i32, i32)* @av1_resize_and_extend_frame_c
  store void (%struct.yv12_buffer_config*, %struct.yv12_buffer_config*, i8, i32, i32)* %148, void (%struct.yv12_buffer_config*, %struct.yv12_buffer_config*, i8, i32, i32)** @av1_resize_and_extend_frame, align 8
  %149 = select i1 %73, void (i32*, i32, i32)* @av1_round_shift_array_sse4_1, void (i32*, i32, i32)* @av1_round_shift_array_c
  store void (i32*, i32, i32)* %149, void (i32*, i32, i32)** @av1_round_shift_array, align 8
  %150 = select i1 %73, void (i32*, i32, i32, i8*)* @av1_txb_init_levels_sse4_1, void (i32*, i32, i32, i8*)* @av1_txb_init_levels_c
  %151 = select i1 %69, void (i32*, i32, i32, i8*)* @av1_txb_init_levels_avx2, void (i32*, i32, i32, i8*)* %150
  store void (i32*, i32, i32, i8*)* %151, void (i32*, i32, i32, i8*)** @av1_txb_init_levels, align 8
  %152 = select i1 %73, void (i8*, i32)* @av1_upsample_intra_edge_sse4_1, void (i8*, i32)* @av1_upsample_intra_edge_c
  store void (i8*, i32)* %152, void (i8*, i32)** @av1_upsample_intra_edge, align 8
  %153 = select i1 %73, void (i16*, i32, i32)* @av1_upsample_intra_edge_high_sse4_1, void (i16*, i32, i32)* @av1_upsample_intra_edge_high_c
  store void (i16*, i32, i32)* %153, void (i16*, i32, i32)** @av1_upsample_intra_edge_high, align 8
  %154 = select i1 %69, void (i16*, i16*, i16*, i32)* @av1_wedge_compute_delta_squares_avx2, void (i16*, i16*, i16*, i32)* @av1_wedge_compute_delta_squares_sse2
  store void (i16*, i16*, i16*, i32)* %154, void (i16*, i16*, i16*, i32)** @av1_wedge_compute_delta_squares, align 8
  %155 = select i1 %69, i8 (i16*, i8*, i32, i64)* @av1_wedge_sign_from_residuals_avx2, i8 (i16*, i8*, i32, i64)* @av1_wedge_sign_from_residuals_sse2
  store i8 (i16*, i8*, i32, i64)* %155, i8 (i16*, i8*, i32, i64)** @av1_wedge_sign_from_residuals, align 8
  %156 = select i1 %69, i64 (i16*, i16*, i8*, i32)* @av1_wedge_sse_from_residuals_avx2, i64 (i16*, i16*, i8*, i32)* @av1_wedge_sse_from_residuals_sse2
  store i64 (i16*, i16*, i8*, i32)* %156, i64 (i16*, i16*, i8*, i32)** @av1_wedge_sse_from_residuals, align 8
  %157 = select i1 %69, void (i8*, i64, i8*, i64, i16*, i32, i16*, i32, i32, i32, %struct.ConvolveParams*)* @av1_wiener_convolve_add_src_avx2, void (i8*, i64, i8*, i64, i16*, i32, i16*, i32, i32, i32, %struct.ConvolveParams*)* @av1_wiener_convolve_add_src_sse2
  store void (i8*, i64, i8*, i64, i16*, i32, i16*, i32, i32, i32, %struct.ConvolveParams*)* %157, void (i8*, i64, i8*, i64, i16*, i32, i16*, i32, i32, i32, %struct.ConvolveParams*)** @av1_wiener_convolve_add_src, align 8
  %158 = select i1 %79, void (i16*, i32, i16*, i32, i32, i32)* @cdef_copy_rect8_16bit_to_16bit_ssse3, void (i16*, i32, i16*, i32, i32, i32)* @cdef_copy_rect8_16bit_to_16bit_sse2
  %159 = select i1 %73, void (i16*, i32, i16*, i32, i32, i32)* @cdef_copy_rect8_16bit_to_16bit_sse4_1, void (i16*, i32, i16*, i32, i32, i32)* %158
  %160 = select i1 %69, void (i16*, i32, i16*, i32, i32, i32)* @cdef_copy_rect8_16bit_to_16bit_avx2, void (i16*, i32, i16*, i32, i32, i32)* %159
  store void (i16*, i32, i16*, i32, i32, i32)* %160, void (i16*, i32, i16*, i32, i32, i32)** @cdef_copy_rect8_16bit_to_16bit, align 8
  %161 = select i1 %79, void (i16*, i32, i8*, i32, i32, i32)* @cdef_copy_rect8_8bit_to_16bit_ssse3, void (i16*, i32, i8*, i32, i32, i32)* @cdef_copy_rect8_8bit_to_16bit_sse2
  %162 = select i1 %73, void (i16*, i32, i8*, i32, i32, i32)* @cdef_copy_rect8_8bit_to_16bit_sse4_1, void (i16*, i32, i8*, i32, i32, i32)* %161
  %163 = select i1 %69, void (i16*, i32, i8*, i32, i32, i32)* @cdef_copy_rect8_8bit_to_16bit_avx2, void (i16*, i32, i8*, i32, i32, i32)* %162
  store void (i16*, i32, i8*, i32, i32, i32)* %163, void (i16*, i32, i8*, i32, i32, i32)** @cdef_copy_rect8_8bit_to_16bit, align 8
  %164 = select i1 %79, void (i8*, i16*, i32, i16*, i32, i32, i32, i32, i32, i32, i32)* @cdef_filter_block_ssse3, void (i8*, i16*, i32, i16*, i32, i32, i32, i32, i32, i32, i32)* @cdef_filter_block_sse2
  %165 = select i1 %73, void (i8*, i16*, i32, i16*, i32, i32, i32, i32, i32, i32, i32)* @cdef_filter_block_sse4_1, void (i8*, i16*, i32, i16*, i32, i32, i32, i32, i32, i32, i32)* %164
  %166 = select i1 %69, void (i8*, i16*, i32, i16*, i32, i32, i32, i32, i32, i32, i32)* @cdef_filter_block_avx2, void (i8*, i16*, i32, i16*, i32, i32, i32, i32, i32, i32, i32)* %165
  store void (i8*, i16*, i32, i16*, i32, i32, i32, i32, i32, i32, i32)* %166, void (i8*, i16*, i32, i16*, i32, i32, i32, i32, i32, i32, i32)** @cdef_filter_block, align 8
  %167 = select i1 %79, i32 (i16*, i32, i32*, i32)* @cdef_find_dir_ssse3, i32 (i16*, i32, i32*, i32)* @cdef_find_dir_sse2
  %168 = select i1 %73, i32 (i16*, i32, i32*, i32)* @cdef_find_dir_sse4_1, i32 (i16*, i32, i32*, i32)* %167
  %169 = select i1 %69, i32 (i16*, i32, i32*, i32)* @cdef_find_dir_avx2, i32 (i16*, i32, i32*, i32)* %168
  store i32 (i16*, i32, i32*, i32)* %169, i32 (i16*, i32, i32*, i32)** @cdef_find_dir, align 8
  %170 = select i1 %79, void (i8*, i32, i16*)* (i8)* @cfl_get_luma_subsampling_420_lbd_ssse3, void (i8*, i32, i16*)* (i8)* @cfl_get_luma_subsampling_420_lbd_c
  %171 = select i1 %69, void (i8*, i32, i16*)* (i8)* @cfl_get_luma_subsampling_420_lbd_avx2, void (i8*, i32, i16*)* (i8)* %170
  store void (i8*, i32, i16*)* (i8)* %171, void (i8*, i32, i16*)* (i8)** @cfl_get_luma_subsampling_420_lbd, align 8
  %172 = select i1 %79, void (i8*, i32, i16*)* (i8)* @cfl_get_luma_subsampling_422_lbd_ssse3, void (i8*, i32, i16*)* (i8)* @cfl_get_luma_subsampling_422_lbd_c
  %173 = select i1 %69, void (i8*, i32, i16*)* (i8)* @cfl_get_luma_subsampling_422_lbd_avx2, void (i8*, i32, i16*)* (i8)* %172
  store void (i8*, i32, i16*)* (i8)* %173, void (i8*, i32, i16*)* (i8)** @cfl_get_luma_subsampling_422_lbd, align 8
  %174 = select i1 %79, void (i8*, i32, i16*)* (i8)* @cfl_get_luma_subsampling_444_lbd_ssse3, void (i8*, i32, i16*)* (i8)* @cfl_get_luma_subsampling_444_lbd_c
  %175 = select i1 %69, void (i8*, i32, i16*)* (i8)* @cfl_get_luma_subsampling_444_lbd_avx2, void (i8*, i32, i16*)* (i8)* %174
  store void (i8*, i32, i16*)* (i8)* %175, void (i8*, i32, i16*)* (i8)** @cfl_get_luma_subsampling_444_lbd, align 8
  %176 = select i1 %79, void (i16*, i8*, i32, i32)* (i8)* @cfl_get_predict_lbd_fn_ssse3, void (i16*, i8*, i32, i32)* (i8)* @cfl_get_predict_lbd_fn_c
  %177 = select i1 %69, void (i16*, i8*, i32, i32)* (i8)* @cfl_get_predict_lbd_fn_avx2, void (i16*, i8*, i32, i32)* (i8)* %176
  store void (i16*, i8*, i32, i32)* (i8)* %177, void (i16*, i8*, i32, i32)* (i8)** @cfl_get_predict_lbd_fn, align 8
  %178 = select i1 %69, void (i16*, i16*)* (i8)* @cfl_get_subtract_average_fn_avx2, void (i16*, i16*)* (i8)* @cfl_get_subtract_average_fn_sse2
  store void (i16*, i16*)* (i8)* %178, void (i16*, i16*)* (i8)** @cfl_get_subtract_average_fn, align 8
  ret void
}

declare i32 @pthread_once(i32*, void ()*) local_unnamed_addr #1

declare i64 @av1_block_error_sse2(i32*, i32*, i64, i64*) #1

declare i64 @av1_block_error_avx2(i32*, i32*, i64, i64*) #1

declare i64 @av1_block_error_lp_c(i16*, i16*, i64) #1

declare i64 @av1_block_error_lp_avx2(i16*, i16*, i64) #1

declare void @av1_build_compound_diffwtd_mask_c(i8*, i8 zeroext, i8*, i32, i8*, i32, i32, i32) #1

declare void @av1_build_compound_diffwtd_mask_sse4_1(i8*, i8 zeroext, i8*, i32, i8*, i32, i32, i32) #1

declare void @av1_build_compound_diffwtd_mask_avx2(i8*, i8 zeroext, i8*, i32, i8*, i32, i32, i32) #1

declare void @av1_build_compound_diffwtd_mask_d16_c(i8*, i8 zeroext, i16*, i32, i16*, i32, i32, i32, %struct.ConvolveParams*, i32) #1

declare void @av1_build_compound_diffwtd_mask_d16_sse4_1(i8*, i8 zeroext, i16*, i32, i16*, i32, i32, i32, %struct.ConvolveParams*, i32) #1

declare void @av1_build_compound_diffwtd_mask_d16_avx2(i8*, i8 zeroext, i16*, i32, i16*, i32, i32, i32, %struct.ConvolveParams*, i32) #1

declare void @av1_build_compound_diffwtd_mask_highbd_c(i8*, i8 zeroext, i8*, i32, i8*, i32, i32, i32, i32) #1

declare void @av1_build_compound_diffwtd_mask_highbd_ssse3(i8*, i8 zeroext, i8*, i32, i8*, i32, i32, i32, i32) #1

declare void @av1_build_compound_diffwtd_mask_highbd_avx2(i8*, i8 zeroext, i8*, i32, i8*, i32, i32, i32, i32) #1

declare void @av1_calc_indices_dim1_sse2(i32*, i32*, i8*, i32, i32) #1

declare void @av1_calc_indices_dim1_avx2(i32*, i32*, i8*, i32, i32) #1

declare void @av1_calc_indices_dim2_c(i32*, i32*, i8*, i32, i32) #1

declare void @av1_calc_indices_dim2_avx2(i32*, i32*, i8*, i32, i32) #1

declare double @av1_compute_cross_correlation_c(i8*, i32, i32, i32, i8*, i32, i32, i32) #1

declare double @av1_compute_cross_correlation_sse4_1(i8*, i32, i32, i32, i8*, i32, i32, i32) #1

declare double @av1_compute_cross_correlation_avx2(i8*, i32, i32, i32, i8*, i32, i32, i32) #1

declare void @av1_convolve_2d_scale_c(i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, %struct.InterpFilterParams*, i32, i32, i32, i32, %struct.ConvolveParams*) #1

declare void @av1_convolve_2d_scale_sse4_1(i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, %struct.InterpFilterParams*, i32, i32, i32, i32, %struct.ConvolveParams*) #1

declare void @av1_convolve_2d_sr_sse2(i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, %struct.InterpFilterParams*, i32, i32, %struct.ConvolveParams*) #1

declare void @av1_convolve_2d_sr_avx2(i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, %struct.InterpFilterParams*, i32, i32, %struct.ConvolveParams*) #1

declare void @av1_convolve_horiz_rs_c(i8*, i32, i8*, i32, i32, i32, i16*, i32, i32) #1

declare void @av1_convolve_horiz_rs_sse4_1(i8*, i32, i8*, i32, i32, i32, i16*, i32, i32) #1

declare void @av1_convolve_x_sr_sse2(i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32, %struct.ConvolveParams*) #1

declare void @av1_convolve_x_sr_avx2(i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32, %struct.ConvolveParams*) #1

declare void @av1_convolve_y_sr_sse2(i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32) #1

declare void @av1_convolve_y_sr_avx2(i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32) #1

declare void @av1_dist_wtd_convolve_2d_sse2(i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, %struct.InterpFilterParams*, i32, i32, %struct.ConvolveParams*) #1

declare void @av1_dist_wtd_convolve_2d_ssse3(i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, %struct.InterpFilterParams*, i32, i32, %struct.ConvolveParams*) #1

declare void @av1_dist_wtd_convolve_2d_avx2(i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, %struct.InterpFilterParams*, i32, i32, %struct.ConvolveParams*) #1

declare void @av1_dist_wtd_convolve_2d_copy_sse2(i8*, i32, i8*, i32, i32, i32, %struct.ConvolveParams*) #1

declare void @av1_dist_wtd_convolve_2d_copy_avx2(i8*, i32, i8*, i32, i32, i32, %struct.ConvolveParams*) #1

declare void @av1_dist_wtd_convolve_x_sse2(i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32, %struct.ConvolveParams*) #1

declare void @av1_dist_wtd_convolve_x_avx2(i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32, %struct.ConvolveParams*) #1

declare void @av1_dist_wtd_convolve_y_sse2(i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32, %struct.ConvolveParams*) #1

declare void @av1_dist_wtd_convolve_y_avx2(i8*, i32, i8*, i32, i32, i32, %struct.InterpFilterParams*, i32, %struct.ConvolveParams*) #1

declare void @av1_dr_prediction_z1_c(i8*, i64, i32, i32, i8*, i8*, i32, i32, i32) #1

declare void @av1_dr_prediction_z1_avx2(i8*, i64, i32, i32, i8*, i8*, i32, i32, i32) #1

declare void @av1_dr_prediction_z2_c(i8*, i64, i32, i32, i8*, i8*, i32, i32, i32, i32) #1

declare void @av1_dr_prediction_z2_avx2(i8*, i64, i32, i32, i8*, i8*, i32, i32, i32, i32) #1

declare void @av1_dr_prediction_z3_c(i8*, i64, i32, i32, i8*, i8*, i32, i32, i32) #1

declare void @av1_dr_prediction_z3_avx2(i8*, i64, i32, i32, i8*, i8*, i32, i32, i32) #1

declare void @av1_filter_intra_edge_c(i8*, i32, i32) #1

declare void @av1_filter_intra_edge_sse4_1(i8*, i32, i32) #1

declare void @av1_filter_intra_edge_high_c(i16*, i32, i32) #1

declare void @av1_filter_intra_edge_high_sse4_1(i16*, i32, i32) #1

declare void @av1_filter_intra_predictor_c(i8*, i64, i8 zeroext, i8*, i8*, i32) #1

declare void @av1_filter_intra_predictor_sse4_1(i8*, i64, i8 zeroext, i8*, i8*, i32) #1

declare void @av1_fwd_txfm2d_16x16_c(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_16x16_sse4_1(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_16x16_avx2(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_16x32_c(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_16x32_sse4_1(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_16x4_c(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_16x4_sse4_1(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_16x8_c(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_16x8_sse4_1(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_16x8_avx2(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_32x16_c(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_32x16_sse4_1(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_32x32_c(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_32x32_sse4_1(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_32x32_avx2(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_32x64_c(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_32x64_sse4_1(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_4x4_c(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_4x4_sse4_1(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_4x8_c(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_4x8_sse4_1(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_64x32_c(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_64x32_sse4_1(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_64x64_c(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_64x64_sse4_1(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_64x64_avx2(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_8x16_c(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_8x16_sse4_1(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_8x16_avx2(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_8x4_c(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_8x4_sse4_1(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_8x8_c(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_8x8_sse4_1(i16*, i32*, i32, i8 zeroext, i32) #1

declare void @av1_fwd_txfm2d_8x8_avx2(i16*, i32*, i32, i8 zeroext, i32) #1

declare i32 @av1_get_crc32c_value_c(i8*, i8*, i64) #1

declare i32 @av1_get_crc32c_value_sse4_2(i8*, i8*, i64) #1

declare void @av1_get_horver_correlation_full_c(i16*, i32, i32, i32, float*, float*) #1

declare void @av1_get_horver_correlation_full_sse4_1(i16*, i32, i32, i32, float*, float*) #1

declare void @av1_get_horver_correlation_full_avx2(i16*, i32, i32, i32, float*, float*) #1

declare void @av1_highbd_inv_txfm_add_c(i32*, i8*, i32, %struct.txfm_param*) #1

declare void @av1_highbd_inv_txfm_add_sse4_1(i32*, i8*, i32, %struct.txfm_param*) #1

declare void @av1_highbd_inv_txfm_add_avx2(i32*, i8*, i32, %struct.txfm_param*) #1

declare void @av1_highbd_inv_txfm_add_16x4_c(i32*, i8*, i32, %struct.txfm_param*) #1

declare void @av1_highbd_inv_txfm_add_16x4_sse4_1(i32*, i8*, i32, %struct.txfm_param*) #1

declare void @av1_highbd_inv_txfm_add_4x16_c(i32*, i8*, i32, %struct.txfm_param*) #1

declare void @av1_highbd_inv_txfm_add_4x16_sse4_1(i32*, i8*, i32, %struct.txfm_param*) #1

declare void @av1_highbd_inv_txfm_add_4x4_c(i32*, i8*, i32, %struct.txfm_param*) #1

declare void @av1_highbd_inv_txfm_add_4x4_sse4_1(i32*, i8*, i32, %struct.txfm_param*) #1

declare void @av1_highbd_inv_txfm_add_4x8_c(i32*, i8*, i32, %struct.txfm_param*) #1

declare void @av1_highbd_inv_txfm_add_4x8_sse4_1(i32*, i8*, i32, %struct.txfm_param*) #1

declare void @av1_highbd_inv_txfm_add_8x4_c(i32*, i8*, i32, %struct.txfm_param*) #1

declare void @av1_highbd_inv_txfm_add_8x4_sse4_1(i32*, i8*, i32, %struct.txfm_param*) #1

declare void @av1_highbd_inv_txfm_add_8x8_c(i32*, i8*, i32, %struct.txfm_param*) #1

declare void @av1_highbd_inv_txfm_add_8x8_sse4_1(i32*, i8*, i32, %struct.txfm_param*) #1

declare void @av1_inv_txfm2d_add_4x4_c(i32*, i16*, i32, i8 zeroext, i32) #1

declare void @av1_inv_txfm2d_add_4x4_sse4_1(i32*, i16*, i32, i8 zeroext, i32) #1

declare void @av1_inv_txfm2d_add_8x8_c(i32*, i16*, i32, i8 zeroext, i32) #1

declare void @av1_inv_txfm2d_add_8x8_sse4_1(i32*, i16*, i32, i8 zeroext, i32) #1

declare void @av1_inv_txfm_add_c(i32*, i8*, i32, %struct.txfm_param*) #1

declare void @av1_inv_txfm_add_ssse3(i32*, i8*, i32, %struct.txfm_param*) #1

declare void @av1_inv_txfm_add_avx2(i32*, i8*, i32, %struct.txfm_param*) #1

declare void @av1_lowbd_fwd_txfm_sse2(i16*, i32*, i32, %struct.txfm_param*) #1

declare void @av1_lowbd_fwd_txfm_sse4_1(i16*, i32*, i32, %struct.txfm_param*) #1

declare void @av1_lowbd_fwd_txfm_avx2(i16*, i32*, i32, %struct.txfm_param*) #1

declare void @av1_nn_predict_c(float*, %struct.NN_CONFIG*, i32, float*) #1

declare void @av1_nn_predict_sse3(float*, %struct.NN_CONFIG*, i32, float*) #1

declare void @av1_quantize_fp_sse2(i32*, i64, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*) #1

declare void @av1_quantize_fp_avx2(i32*, i64, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*) #1

declare void @av1_quantize_fp_32x32_c(i32*, i64, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*) #1

declare void @av1_quantize_fp_32x32_avx2(i32*, i64, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*) #1

declare void @av1_quantize_fp_64x64_c(i32*, i64, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*) #1

declare void @av1_quantize_fp_64x64_avx2(i32*, i64, i16*, i16*, i16*, i16*, i32*, i32*, i16*, i16*, i16*, i16*) #1

declare void @av1_quantize_lp_c(i16*, i64, i16*, i16*, i16*, i16*, i16*, i16*, i16*) #1

declare void @av1_quantize_lp_avx2(i16*, i64, i16*, i16*, i16*, i16*, i16*, i16*, i16*) #1

declare void @av1_resize_and_extend_frame_c(%struct.yv12_buffer_config*, %struct.yv12_buffer_config*, i8 zeroext, i32, i32) #1

declare void @av1_resize_and_extend_frame_ssse3(%struct.yv12_buffer_config*, %struct.yv12_buffer_config*, i8 zeroext, i32, i32) #1

declare void @av1_round_shift_array_c(i32*, i32, i32) #1

declare void @av1_round_shift_array_sse4_1(i32*, i32, i32) #1

declare void @av1_txb_init_levels_c(i32*, i32, i32, i8*) #1

declare void @av1_txb_init_levels_sse4_1(i32*, i32, i32, i8*) #1

declare void @av1_txb_init_levels_avx2(i32*, i32, i32, i8*) #1

declare void @av1_upsample_intra_edge_c(i8*, i32) #1

declare void @av1_upsample_intra_edge_sse4_1(i8*, i32) #1

declare void @av1_upsample_intra_edge_high_c(i16*, i32, i32) #1

declare void @av1_upsample_intra_edge_high_sse4_1(i16*, i32, i32) #1

declare void @av1_wedge_compute_delta_squares_sse2(i16*, i16*, i16*, i32) #1

declare void @av1_wedge_compute_delta_squares_avx2(i16*, i16*, i16*, i32) #1

declare signext i8 @av1_wedge_sign_from_residuals_sse2(i16*, i8*, i32, i64) #1

declare signext i8 @av1_wedge_sign_from_residuals_avx2(i16*, i8*, i32, i64) #1

declare i64 @av1_wedge_sse_from_residuals_sse2(i16*, i16*, i8*, i32) #1

declare i64 @av1_wedge_sse_from_residuals_avx2(i16*, i16*, i8*, i32) #1

declare void @av1_wiener_convolve_add_src_sse2(i8*, i64, i8*, i64, i16*, i32, i16*, i32, i32, i32, %struct.ConvolveParams*) #1

declare void @av1_wiener_convolve_add_src_avx2(i8*, i64, i8*, i64, i16*, i32, i16*, i32, i32, i32, %struct.ConvolveParams*) #1

declare void @cdef_copy_rect8_16bit_to_16bit_sse2(i16*, i32, i16*, i32, i32, i32) #1

declare void @cdef_copy_rect8_16bit_to_16bit_ssse3(i16*, i32, i16*, i32, i32, i32) #1

declare void @cdef_copy_rect8_16bit_to_16bit_sse4_1(i16*, i32, i16*, i32, i32, i32) #1

declare void @cdef_copy_rect8_16bit_to_16bit_avx2(i16*, i32, i16*, i32, i32, i32) #1

declare void @cdef_copy_rect8_8bit_to_16bit_sse2(i16*, i32, i8*, i32, i32, i32) #1

declare void @cdef_copy_rect8_8bit_to_16bit_ssse3(i16*, i32, i8*, i32, i32, i32) #1

declare void @cdef_copy_rect8_8bit_to_16bit_sse4_1(i16*, i32, i8*, i32, i32, i32) #1

declare void @cdef_copy_rect8_8bit_to_16bit_avx2(i16*, i32, i8*, i32, i32, i32) #1

declare void @cdef_filter_block_sse2(i8*, i16*, i32, i16*, i32, i32, i32, i32, i32, i32, i32) #1

declare void @cdef_filter_block_ssse3(i8*, i16*, i32, i16*, i32, i32, i32, i32, i32, i32, i32) #1

declare void @cdef_filter_block_sse4_1(i8*, i16*, i32, i16*, i32, i32, i32, i32, i32, i32, i32) #1

declare void @cdef_filter_block_avx2(i8*, i16*, i32, i16*, i32, i32, i32, i32, i32, i32, i32) #1

declare i32 @cdef_find_dir_sse2(i16*, i32, i32*, i32) #1

declare i32 @cdef_find_dir_ssse3(i16*, i32, i32*, i32) #1

declare i32 @cdef_find_dir_sse4_1(i16*, i32, i32*, i32) #1

declare i32 @cdef_find_dir_avx2(i16*, i32, i32*, i32) #1

declare void (i8*, i32, i16*)* @cfl_get_luma_subsampling_420_lbd_c(i8 zeroext) #1

declare void (i8*, i32, i16*)* @cfl_get_luma_subsampling_420_lbd_ssse3(i8 zeroext) #1

declare void (i8*, i32, i16*)* @cfl_get_luma_subsampling_420_lbd_avx2(i8 zeroext) #1

declare void (i8*, i32, i16*)* @cfl_get_luma_subsampling_422_lbd_c(i8 zeroext) #1

declare void (i8*, i32, i16*)* @cfl_get_luma_subsampling_422_lbd_ssse3(i8 zeroext) #1

declare void (i8*, i32, i16*)* @cfl_get_luma_subsampling_422_lbd_avx2(i8 zeroext) #1

declare void (i8*, i32, i16*)* @cfl_get_luma_subsampling_444_lbd_c(i8 zeroext) #1

declare void (i8*, i32, i16*)* @cfl_get_luma_subsampling_444_lbd_ssse3(i8 zeroext) #1

declare void (i8*, i32, i16*)* @cfl_get_luma_subsampling_444_lbd_avx2(i8 zeroext) #1

declare void (i16*, i8*, i32, i32)* @cfl_get_predict_lbd_fn_c(i8 zeroext) #1

declare void (i16*, i8*, i32, i32)* @cfl_get_predict_lbd_fn_ssse3(i8 zeroext) #1

declare void (i16*, i8*, i32, i32)* @cfl_get_predict_lbd_fn_avx2(i8 zeroext) #1

declare void (i16*, i16*)* @cfl_get_subtract_average_fn_sse2(i8 zeroext) #1

declare void (i16*, i16*)* @cfl_get_subtract_average_fn_avx2(i8 zeroext) #1

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nofree nounwind
declare i64 @strtol(i8* readonly, i8** nocapture, i32) local_unnamed_addr #3

; Function Attrs: nofree nounwind
declare i64 @strtoul(i8* readonly, i8** nocapture, i32) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 -2146011702, i32 -2146011683}
!3 = !{i32 -2146011481, i32 -2146011462}
!4 = !{i32 1464898}
!5 = !{i32 -2146011095, i32 -2146011076}
