; ModuleID = '../../net/third_party/quiche/src/quic/core/qpack/qpack_decoded_headers_accumulator.cc'
source_filename = "../../net/third_party/quiche/src/quic/core/qpack/qpack_decoded_headers_accumulator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.quic::QpackDecodedHeadersAccumulator" = type <{ %"class.quic::QpackProgressiveDecoder::HeadersHandlerInterface", %"class.std::__1::unique_ptr", %"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, i64, i64, %"class.quic::QuicHeaderList", i64, i64, i8, i8, i8, [5 x i8] }>
%"class.quic::QpackProgressiveDecoder::HeadersHandlerInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.quic::QpackProgressiveDecoder"* }
%"class.quic::QpackProgressiveDecoder" = type <{ %"class.quic::QpackInstructionDecoder::Delegate", %"class.quic::QpackDecoderHeaderTable::Observer", i32, [4 x i8], %"class.std::__1::unique_ptr.0", %"class.quic::QpackInstructionDecoder", %"class.quic::QpackProgressiveDecoder::BlockedStreamLimitEnforcer"*, %"class.quic::QpackProgressiveDecoder::DecodingCompletedVisitor"*, %"class.quic::QpackDecoderHeaderTable"*, %"class.quic::QpackProgressiveDecoder::HeadersHandlerInterface"*, i64, i64, i64, i8, i8, [6 x i8], %"class.std::__1::basic_string", i8, i8, i8, [5 x i8] }>
%"class.quic::QpackInstructionDecoder::Delegate" = type { i32 (...)** }
%"class.quic::QpackDecoderHeaderTable::Observer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.0" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.quic::QpackInstructionDecoder"* }
%"class.quic::QpackInstructionDecoder" = type { %"class.std::__1::vector"*, %"class.quic::QpackInstructionDecoder::Delegate"*, i8, i64, i64, %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i64, %"class.http2::HpackVarintDecoder", %"class.http2::HpackHuffmanDecoder", i8, i32, %"struct.quic::QpackInstruction"*, %"class.std::__1::__wrap_iter" }
%"class.std::__1::vector" = type opaque
%"class.http2::HpackVarintDecoder" = type <{ i64, i8, [7 x i8] }>
%"class.http2::HpackHuffmanDecoder" = type { %"class.http2::HuffmanBitBuffer" }
%"class.http2::HuffmanBitBuffer" = type { i64, i64 }
%"struct.quic::QpackInstruction" = type { %"struct.quic::QpackInstructionOpcode", %"class.std::__1::vector.6" }
%"struct.quic::QpackInstructionOpcode" = type { i8, i8 }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.quic::QpackInstructionField"*, %"struct.quic::QpackInstructionField"*, %"class.std::__1::__compressed_pair.7" }
%"struct.quic::QpackInstructionField" = type { i32, i8 }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { %"struct.quic::QpackInstructionField"* }
%"class.std::__1::__wrap_iter" = type { %"struct.quic::QpackInstructionField"* }
%"class.quic::QpackProgressiveDecoder::BlockedStreamLimitEnforcer" = type { i32 (...)** }
%"class.quic::QpackProgressiveDecoder::DecodingCompletedVisitor" = type { i32 (...)** }
%"class.quic::QpackDecoderHeaderTable" = type { %"class.quic::QpackHeaderTableBase.base", %"class.std::__1::vector.15"*, %"class.std::__1::multimap" }
%"class.quic::QpackHeaderTableBase.base" = type <{ i32 (...)**, %"class.quiche::QuicheCircularDeque", i64, i64, i64, i64, i64, i8 }>
%"class.quiche::QuicheCircularDeque" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<spdy::HpackEntry, 3, std::__1::allocator<spdy::HpackEntry> >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<spdy::HpackEntry, 3, std::__1::allocator<spdy::HpackEntry> >::AllocatorAndData" = type { %"class.spdy::HpackEntry"*, i64 }
%"class.spdy::HpackEntry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.std::__1::vector.15" = type opaque
%"class.std::__1::multimap" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.16", %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.quic::QuicHeaderList" = type { %"class.spdy::SpdyHeadersHandlerInterface", %"class.quiche::QuicheCircularDeque.27", i64, i64, i64, i64 }
%"class.spdy::SpdyHeadersHandlerInterface" = type { i32 (...)** }
%"class.quiche::QuicheCircularDeque.27" = type { i64, i64, %"struct.quiche::QuicheCircularDeque<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, 3, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::AllocatorAndData" }
%"struct.quiche::QuicheCircularDeque<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > >, 3, std::__1::allocator<std::__1::pair<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::AllocatorAndData" = type { %"struct.std::__1::pair"*, i64 }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.quic::QpackDecoder" = type { %"class.quic::QpackEncoderStreamReceiver::Delegate", %"class.quic::QpackProgressiveDecoder::BlockedStreamLimitEnforcer", %"class.quic::QpackProgressiveDecoder::DecodingCompletedVisitor", %"class.quic::QpackDecoder::EncoderStreamErrorDelegate"*, %"class.quic::QpackEncoderStreamReceiver", %"class.quic::QpackDecoderStreamSender", %"class.quic::QpackDecoderHeaderTable", %"class.std::__1::set", i64, i64 }
%"class.quic::QpackEncoderStreamReceiver::Delegate" = type { i32 (...)** }
%"class.quic::QpackDecoder::EncoderStreamErrorDelegate" = type { i32 (...)** }
%"class.quic::QpackEncoderStreamReceiver" = type <{ %"class.quic::QpackInstructionDecoder::Delegate", %"class.quic::QpackStreamReceiver", %"class.quic::QpackInstructionDecoder", %"class.quic::QpackEncoderStreamReceiver::Delegate"*, i8, [7 x i8] }>
%"class.quic::QpackStreamReceiver" = type { i32 (...)** }
%"class.quic::QpackDecoderStreamSender" = type { %"class.quic::QpackStreamSenderDelegate"*, %"class.quic::QpackInstructionEncoder", %"class.std::__1::basic_string" }
%"class.quic::QpackStreamSenderDelegate" = type { i32 (...)** }
%"class.quic::QpackInstructionEncoder" = type { i8, i64, i8, i32, %"struct.quic::QpackInstruction"*, %"class.std::__1::__wrap_iter" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.30" }
%"class.std::__1::__tree.30" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.31", %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.quic::QpackDecodedHeadersAccumulator::Visitor" = type { i32 (...)** }

$_ZN4quic30QpackDecodedHeadersAccumulatorD2Ev = comdat any

$_ZN4quic30QpackDecodedHeadersAccumulatorD0Ev = comdat any

@_ZTVN4quic30QpackDecodedHeadersAccumulatorE = hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.quic::QpackDecodedHeadersAccumulator"*)* @_ZN4quic30QpackDecodedHeadersAccumulatorD2Ev to i8*), i8* bitcast (void (%"class.quic::QpackDecodedHeadersAccumulator"*)* @_ZN4quic30QpackDecodedHeadersAccumulatorD0Ev to i8*), i8* bitcast (void (%"class.quic::QpackDecodedHeadersAccumulator"*, i8*, i64, i8*, i64)* @_ZN4quic30QpackDecodedHeadersAccumulator15OnHeaderDecodedEN4absl11string_viewES2_ to i8*), i8* bitcast (void (%"class.quic::QpackDecodedHeadersAccumulator"*)* @_ZN4quic30QpackDecodedHeadersAccumulator19OnDecodingCompletedEv to i8*), i8* bitcast (void (%"class.quic::QpackDecodedHeadersAccumulator"*, i8*, i64)* @_ZN4quic30QpackDecodedHeadersAccumulator23OnDecodingErrorDetectedEN4absl11string_viewE to i8*)] }, align 8
@FLAGS_quic_header_size_limit_includes_overhead = external local_unnamed_addr global i8, align 1

@_ZN4quic30QpackDecodedHeadersAccumulatorC1EjPNS_12QpackDecoderEPNS0_7VisitorEm = hidden unnamed_addr alias void (%"class.quic::QpackDecodedHeadersAccumulator"*, i32, %"class.quic::QpackDecoder"*, %"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, i64), void (%"class.quic::QpackDecodedHeadersAccumulator"*, i32, %"class.quic::QpackDecoder"*, %"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, i64)* @_ZN4quic30QpackDecodedHeadersAccumulatorC2EjPNS_12QpackDecoderEPNS0_7VisitorEm

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic30QpackDecodedHeadersAccumulatorC2EjPNS_12QpackDecoderEPNS0_7VisitorEm(%"class.quic::QpackDecodedHeadersAccumulator"*, i32, %"class.quic::QpackDecoder"*, %"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, i64) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 0
  %7 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4quic30QpackDecodedHeadersAccumulatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = tail call %"class.quic::QpackProgressiveDecoder"* @_ZN4quic12QpackDecoder24CreateProgressiveDecoderEjPNS_23QpackProgressiveDecoder23HeadersHandlerInterfaceE(%"class.quic::QpackDecoder"* %2, i32 %1, %"class.quic::QpackProgressiveDecoder::HeadersHandlerInterface"* %6) #5
  %9 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.quic::QpackProgressiveDecoder"* %8, %"class.quic::QpackProgressiveDecoder"** %9, align 8
  %10 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 2
  store %"class.quic::QpackDecodedHeadersAccumulator::Visitor"* %3, %"class.quic::QpackDecodedHeadersAccumulator::Visitor"** %10, align 8
  %11 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 3
  store i64 %4, i64* %11, align 8
  %12 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 4
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 5
  tail call void @_ZN4quic14QuicHeaderListC1Ev(%"class.quic::QuicHeaderList"* %13) #5
  %14 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 6
  %15 = bitcast i64* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 19, i1 false)
  tail call void @_ZN4quic14QuicHeaderList18OnHeaderBlockStartEv(%"class.quic::QuicHeaderList"* %13) #5
  ret void
}

declare %"class.quic::QpackProgressiveDecoder"* @_ZN4quic12QpackDecoder24CreateProgressiveDecoderEjPNS_23QpackProgressiveDecoder23HeadersHandlerInterfaceE(%"class.quic::QpackDecoder"*, i32, %"class.quic::QpackProgressiveDecoder::HeadersHandlerInterface"*) local_unnamed_addr #1

declare void @_ZN4quic14QuicHeaderListC1Ev(%"class.quic::QuicHeaderList"*) unnamed_addr #1

declare void @_ZN4quic14QuicHeaderList18OnHeaderBlockStartEv(%"class.quic::QuicHeaderList"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic30QpackDecodedHeadersAccumulator15OnHeaderDecodedEN4absl11string_viewES2_(%"class.quic::QpackDecodedHeadersAccumulator"*, i8*, i64, i8*, i64) unnamed_addr #0 align 2 {
  %6 = add i64 %4, %2
  %7 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 6
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, %6
  store i64 %9, i64* %7, align 8
  %10 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 8
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %29

13:                                               ; preds = %5
  %14 = add i64 %6, 32
  %15 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 4
  %16 = load i64, i64* %15, align 8
  %17 = add i64 %14, %16
  store i64 %17, i64* %15, align 8
  %18 = load i8, i8* @FLAGS_quic_header_size_limit_includes_overhead, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  %20 = select i1 %19, i64* %7, i64* %15
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 3
  %23 = load i64, i64* %22, align 8
  %24 = icmp ugt i64 %21, %23
  br i1 %24, label %25, label %27

25:                                               ; preds = %13
  store i8 1, i8* %10, align 8
  %26 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 5
  tail call void @_ZN4quic14QuicHeaderList5ClearEv(%"class.quic::QuicHeaderList"* %26) #5
  br label %29

27:                                               ; preds = %13
  %28 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 5
  tail call void @_ZN4quic14QuicHeaderList8OnHeaderEN4absl11string_viewES2_(%"class.quic::QuicHeaderList"* %28, i8* %1, i64 %2, i8* %3, i64 %4) #5
  br label %29

29:                                               ; preds = %25, %27, %5
  ret void
}

declare void @_ZN4quic14QuicHeaderList5ClearEv(%"class.quic::QuicHeaderList"*) local_unnamed_addr #1

declare void @_ZN4quic14QuicHeaderList8OnHeaderEN4absl11string_viewES2_(%"class.quic::QuicHeaderList"*, i8*, i64, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic30QpackDecodedHeadersAccumulator19OnDecodingCompletedEv(%"class.quic::QpackDecodedHeadersAccumulator"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.quic::QuicHeaderList", align 8
  %3 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 9
  store i8 1, i8* %3, align 1
  %4 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 5
  %5 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 6
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 7
  %8 = load i64, i64* %7, align 8
  tail call void @_ZN4quic14QuicHeaderList16OnHeaderBlockEndEmm(%"class.quic::QuicHeaderList"* %4, i64 %6, i64 %8) #5
  %9 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 2
  %10 = load %"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, %"class.quic::QpackDecodedHeadersAccumulator::Visitor"** %9, align 8
  call void @_ZN4quic14QuicHeaderListC1EOS0_(%"class.quic::QuicHeaderList"* nonnull %2, %"class.quic::QuicHeaderList"* dereferenceable(72) %4) #5
  %11 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 8
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp ne i8 %12, 0
  %14 = bitcast %"class.quic::QpackDecodedHeadersAccumulator::Visitor"* %10 to void (%"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, %"class.quic::QuicHeaderList"*, i1)***
  %15 = load void (%"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, %"class.quic::QuicHeaderList"*, i1)**, void (%"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, %"class.quic::QuicHeaderList"*, i1)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, %"class.quic::QuicHeaderList"*, i1)*, void (%"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, %"class.quic::QuicHeaderList"*, i1)** %15, i64 2
  %17 = load void (%"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, %"class.quic::QuicHeaderList"*, i1)*, void (%"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, %"class.quic::QuicHeaderList"*, i1)** %16, align 8
  call void %17(%"class.quic::QpackDecodedHeadersAccumulator::Visitor"* %10, %"class.quic::QuicHeaderList"* nonnull %2, i1 zeroext %13) #5
  call void @_ZN4quic14QuicHeaderListD1Ev(%"class.quic::QuicHeaderList"* nonnull %2) #5
  ret void
}

declare void @_ZN4quic14QuicHeaderList16OnHeaderBlockEndEmm(%"class.quic::QuicHeaderList"*, i64, i64) unnamed_addr #1

declare void @_ZN4quic14QuicHeaderListC1EOS0_(%"class.quic::QuicHeaderList"*, %"class.quic::QuicHeaderList"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4quic14QuicHeaderListD1Ev(%"class.quic::QuicHeaderList"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic30QpackDecodedHeadersAccumulator23OnDecodingErrorDetectedEN4absl11string_viewE(%"class.quic::QpackDecodedHeadersAccumulator"* nocapture, i8*, i64) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 10
  store i8 1, i8* %4, align 2
  %5 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 2
  %6 = load %"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, %"class.quic::QpackDecodedHeadersAccumulator::Visitor"** %5, align 8
  %7 = bitcast %"class.quic::QpackDecodedHeadersAccumulator::Visitor"* %6 to void (%"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, i8*, i64)***
  %8 = load void (%"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, i8*, i64)**, void (%"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, i8*, i64)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, i8*, i64)*, void (%"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, i8*, i64)** %8, i64 3
  %10 = load void (%"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, i8*, i64)*, void (%"class.quic::QpackDecodedHeadersAccumulator::Visitor"*, i8*, i64)** %9, align 8
  tail call void %10(%"class.quic::QpackDecodedHeadersAccumulator::Visitor"* %6, i8* %1, i64 %2) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic30QpackDecodedHeadersAccumulator6DecodeEN4absl11string_viewE(%"class.quic::QpackDecodedHeadersAccumulator"* nocapture, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 7
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, %2
  store i64 %6, i64* %4, align 8
  %7 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %8 = load %"class.quic::QpackProgressiveDecoder"*, %"class.quic::QpackProgressiveDecoder"** %7, align 8
  tail call void @_ZN4quic23QpackProgressiveDecoder6DecodeEN4absl11string_viewE(%"class.quic::QpackProgressiveDecoder"* %8, i8* %1, i64 %2) #5
  ret void
}

declare void @_ZN4quic23QpackProgressiveDecoder6DecodeEN4absl11string_viewE(%"class.quic::QpackProgressiveDecoder"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4quic30QpackDecodedHeadersAccumulator14EndHeaderBlockEv(%"class.quic::QpackDecodedHeadersAccumulator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.quic::QpackProgressiveDecoder"*, %"class.quic::QpackProgressiveDecoder"** %2, align 8
  tail call void @_ZN4quic23QpackProgressiveDecoder14EndHeaderBlockEv(%"class.quic::QpackProgressiveDecoder"* %3) #5
  ret void
}

declare void @_ZN4quic23QpackProgressiveDecoder14EndHeaderBlockEv(%"class.quic::QpackProgressiveDecoder"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic30QpackDecodedHeadersAccumulatorD2Ev(%"class.quic::QpackDecodedHeadersAccumulator"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4quic30QpackDecodedHeadersAccumulatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 5
  tail call void @_ZN4quic14QuicHeaderListD1Ev(%"class.quic::QuicHeaderList"* %3) #5
  %4 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.quic::QpackProgressiveDecoder"*, %"class.quic::QpackProgressiveDecoder"** %4, align 8
  store %"class.quic::QpackProgressiveDecoder"* null, %"class.quic::QpackProgressiveDecoder"** %4, align 8
  %6 = icmp eq %"class.quic::QpackProgressiveDecoder"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.quic::QpackProgressiveDecoder"* %5 to void (%"class.quic::QpackProgressiveDecoder"*)***
  %9 = load void (%"class.quic::QpackProgressiveDecoder"*)**, void (%"class.quic::QpackProgressiveDecoder"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.quic::QpackProgressiveDecoder"*)*, void (%"class.quic::QpackProgressiveDecoder"*)** %9, i64 1
  %11 = load void (%"class.quic::QpackProgressiveDecoder"*)*, void (%"class.quic::QpackProgressiveDecoder"*)** %10, align 8
  tail call void %11(%"class.quic::QpackProgressiveDecoder"* nonnull %5) #5
  br label %12

12:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4quic30QpackDecodedHeadersAccumulatorD0Ev(%"class.quic::QpackDecodedHeadersAccumulator"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN4quic30QpackDecodedHeadersAccumulatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 5
  tail call void @_ZN4quic14QuicHeaderListD1Ev(%"class.quic::QuicHeaderList"* %3) #5
  %4 = getelementptr inbounds %"class.quic::QpackDecodedHeadersAccumulator", %"class.quic::QpackDecodedHeadersAccumulator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %5 = load %"class.quic::QpackProgressiveDecoder"*, %"class.quic::QpackProgressiveDecoder"** %4, align 8
  store %"class.quic::QpackProgressiveDecoder"* null, %"class.quic::QpackProgressiveDecoder"** %4, align 8
  %6 = icmp eq %"class.quic::QpackProgressiveDecoder"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.quic::QpackProgressiveDecoder"* %5 to void (%"class.quic::QpackProgressiveDecoder"*)***
  %9 = load void (%"class.quic::QpackProgressiveDecoder"*)**, void (%"class.quic::QpackProgressiveDecoder"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.quic::QpackProgressiveDecoder"*)*, void (%"class.quic::QpackProgressiveDecoder"*)** %9, i64 1
  %11 = load void (%"class.quic::QpackProgressiveDecoder"*)*, void (%"class.quic::QpackProgressiveDecoder"*)** %10, align 8
  tail call void %11(%"class.quic::QpackProgressiveDecoder"* nonnull %5) #5
  br label %12

12:                                               ; preds = %1, %7
  %13 = bitcast %"class.quic::QpackDecodedHeadersAccumulator"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #6
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }
attributes #6 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
