; ModuleID = '../../third_party/swiftshader/src/Vulkan/VkFormat.cpp'
source_filename = "../../third_party/swiftshader/src/Vulkan/VkFormat.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.VkNonDispatchableHandle = type { i64 }
%class.VkNonDispatchableHandle.0 = type { i64 }
%class.VkNonDispatchableHandle.1 = type { i64 }
%class.VkNonDispatchableHandle.2 = type { i64 }
%class.VkNonDispatchableHandle.3 = type { i64 }
%class.VkNonDispatchableHandle.4 = type { i64 }
%class.VkNonDispatchableHandle.5 = type { i64 }
%class.VkNonDispatchableHandle.6 = type { i64 }
%class.VkNonDispatchableHandle.7 = type { i64 }
%class.VkNonDispatchableHandle.8 = type { i64 }
%class.VkNonDispatchableHandle.9 = type { i64 }
%class.VkNonDispatchableHandle.10 = type { i64 }
%class.VkNonDispatchableHandle.11 = type { i64 }
%class.VkNonDispatchableHandle.12 = type { i64 }
%class.VkNonDispatchableHandle.13 = type { i64 }
%class.VkNonDispatchableHandle.14 = type { i64 }
%class.VkNonDispatchableHandle.15 = type { i64 }
%class.VkNonDispatchableHandle.16 = type { i64 }
%class.VkNonDispatchableHandle.17 = type { i64 }
%class.VkNonDispatchableHandle.18 = type { i64 }
%class.VkNonDispatchableHandle.19 = type { i64 }
%class.VkNonDispatchableHandle.20 = type { i64 }
%class.VkNonDispatchableHandle.21 = type { i64 }
%class.VkNonDispatchableHandle.22 = type { i64 }
%class.VkNonDispatchableHandle.23 = type { i64 }
%class.VkNonDispatchableHandle.24 = type { i64 }
%class.VkNonDispatchableHandle.25 = type { i64 }
%class.VkNonDispatchableHandle.26 = type { i64 }
%class.VkNonDispatchableHandle.27 = type { i64 }
%class.VkNonDispatchableHandle.28 = type { i64 }
%class.VkNonDispatchableHandle.29 = type { i64 }
%class.VkNonDispatchableHandle.30 = type { i64 }
%class.VkNonDispatchableHandle.31 = type { i64 }
%class.VkNonDispatchableHandle.32 = type { i64 }
%class.VkNonDispatchableHandle.33 = type { i64 }
%class.VkNonDispatchableHandle.34 = type { i64 }
%class.VkNonDispatchableHandle.35 = type { i64 }
%"class.vk::Format" = type { i32 }

$_ZNK23VkNonDispatchableHandleIP10VkBuffer_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP10VkBuffer_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkImage_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkImage_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkSemaphore_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkSemaphore_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkFence_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkFence_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkDeviceMemory_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkDeviceMemory_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP9VkEvent_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP9VkEvent_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkQueryPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkQueryPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkBufferView_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkBufferView_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP13VkImageView_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP13VkImageView_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkShaderModule_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkShaderModule_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkPipelineCache_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkPipelineCache_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkPipelineLayout_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkPipelineLayout_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP12VkPipeline_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP12VkPipeline_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkRenderPass_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkRenderPass_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP11VkSampler_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP11VkSampler_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkDescriptorSet_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkDescriptorSet_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkDescriptorPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkDescriptorPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkFramebuffer_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkFramebuffer_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkCommandPool_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkCommandPool_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkSurfaceKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkSurfaceKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP16VkSwapchainKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP16VkSwapchainKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP14VkDisplayKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP14VkDisplayKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP15VkCuModuleNVX_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP15VkCuModuleNVX_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEaSEm = comdat any

$_ZNK23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEcvPvEv = comdat any

$_ZN23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEaSEm = comdat any

@.str = private unnamed_addr constant [39 x i8] c"%s:%d WARNING: UNSUPPORTED: format %d\0A\00", align 1
@.str.1 = private unnamed_addr constant [54 x i8] c"../../third_party/swiftshader/src/Vulkan/VkFormat.cpp\00", align 1
@.str.2 = private unnamed_addr constant [39 x i8] c"%s:%d WARNING: UNSUPPORTED: aspect %x\0A\00", align 1
@.str.3 = private unnamed_addr constant [40 x i8] c"%s:%d WARNING: UNSUPPORTED: Format: %d\0A\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"%s:%d WARNING: UNSUPPORTED: format: %d\0A\00", align 1
@switch.table._ZNK2vk6Format10getAspectsEv = private unnamed_addr constant [7 x i32] [i32 2, i32 2, i32 2, i32 0, i32 2, i32 2, i32 2], align 4
@switch.table._ZNK2vk6Format15getAspectFormatEj = private unnamed_addr constant [7 x i32] [i32 124, i32 124, i32 126, i32 124, i32 124, i32 125, i32 126], align 4
@switch.table._ZNK2vk6Format21getDecompressedFormatEv = private unnamed_addr constant [54 x i32] [i32 44, i32 50, i32 44, i32 50, i32 44, i32 50, i32 44, i32 50, i32 9, i32 10, i32 16, i32 17, i32 97, i32 97, i32 44, i32 50, i32 44, i32 50, i32 44, i32 50, i32 44, i32 50, i32 70, i32 71, i32 77, i32 78, i32 37, i32 43, i32 37, i32 43, i32 37, i32 43, i32 37, i32 43, i32 37, i32 43, i32 37, i32 43, i32 37, i32 43, i32 37, i32 43, i32 37, i32 43, i32 37, i32 43, i32 37, i32 43, i32 37, i32 43, i32 37, i32 43, i32 37, i32 43], align 4
@switch.table._ZNK2vk6Format10blockWidthEv = private unnamed_addr constant [54 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 5, i32 5, i32 5, i32 5, i32 6, i32 6, i32 6, i32 6, i32 8, i32 8, i32 8, i32 8, i32 8, i32 8, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 10, i32 12, i32 12, i32 12, i32 12], align 4
@switch.table._ZNK2vk6Format11blockHeightEv = private unnamed_addr constant [54 x i32] [i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 4, i32 5, i32 5, i32 5, i32 5, i32 6, i32 6, i32 5, i32 5, i32 6, i32 6, i32 8, i32 8, i32 5, i32 5, i32 6, i32 6, i32 8, i32 8, i32 10, i32 10, i32 10, i32 10, i32 12, i32 12], align 4
@switch.table._ZNK2vk6Format13bytesPerBlockEv = private unnamed_addr constant [54 x i32] [i32 8, i32 8, i32 8, i32 8, i32 16, i32 16, i32 16, i32 16, i32 8, i32 8, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 8, i32 8, i32 8, i32 8, i32 16, i32 16, i32 8, i32 8, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16, i32 16], align 4

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP10VkBuffer_TEcvPvEv(%class.VkNonDispatchableHandle*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP10VkBuffer_TEaSEm(%class.VkNonDispatchableHandle*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle, %class.VkNonDispatchableHandle* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkImage_TEcvPvEv(%class.VkNonDispatchableHandle.0*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.0* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkImage_TEaSEm(%class.VkNonDispatchableHandle.0*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.0, %class.VkNonDispatchableHandle.0* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkSemaphore_TEcvPvEv(%class.VkNonDispatchableHandle.1*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.1* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkSemaphore_TEaSEm(%class.VkNonDispatchableHandle.1*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.1, %class.VkNonDispatchableHandle.1* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkFence_TEcvPvEv(%class.VkNonDispatchableHandle.2*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.2* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkFence_TEaSEm(%class.VkNonDispatchableHandle.2*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.2, %class.VkNonDispatchableHandle.2* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkDeviceMemory_TEcvPvEv(%class.VkNonDispatchableHandle.3*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.3* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkDeviceMemory_TEaSEm(%class.VkNonDispatchableHandle.3*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.3, %class.VkNonDispatchableHandle.3* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP9VkEvent_TEcvPvEv(%class.VkNonDispatchableHandle.4*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.4* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP9VkEvent_TEaSEm(%class.VkNonDispatchableHandle.4*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.4, %class.VkNonDispatchableHandle.4* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkQueryPool_TEcvPvEv(%class.VkNonDispatchableHandle.5*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.5* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkQueryPool_TEaSEm(%class.VkNonDispatchableHandle.5*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.5, %class.VkNonDispatchableHandle.5* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkBufferView_TEcvPvEv(%class.VkNonDispatchableHandle.6*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.6* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkBufferView_TEaSEm(%class.VkNonDispatchableHandle.6*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.6, %class.VkNonDispatchableHandle.6* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP13VkImageView_TEcvPvEv(%class.VkNonDispatchableHandle.7*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.7* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP13VkImageView_TEaSEm(%class.VkNonDispatchableHandle.7*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.7, %class.VkNonDispatchableHandle.7* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkShaderModule_TEcvPvEv(%class.VkNonDispatchableHandle.8*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.8* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkShaderModule_TEaSEm(%class.VkNonDispatchableHandle.8*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.8, %class.VkNonDispatchableHandle.8* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkPipelineCache_TEcvPvEv(%class.VkNonDispatchableHandle.9*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.9* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkPipelineCache_TEaSEm(%class.VkNonDispatchableHandle.9*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.9, %class.VkNonDispatchableHandle.9* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkPipelineLayout_TEcvPvEv(%class.VkNonDispatchableHandle.10*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.10* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkPipelineLayout_TEaSEm(%class.VkNonDispatchableHandle.10*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.10, %class.VkNonDispatchableHandle.10* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP12VkPipeline_TEcvPvEv(%class.VkNonDispatchableHandle.11*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.11* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP12VkPipeline_TEaSEm(%class.VkNonDispatchableHandle.11*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.11, %class.VkNonDispatchableHandle.11* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkRenderPass_TEcvPvEv(%class.VkNonDispatchableHandle.12*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.12* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkRenderPass_TEaSEm(%class.VkNonDispatchableHandle.12*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.12, %class.VkNonDispatchableHandle.12* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEcvPvEv(%class.VkNonDispatchableHandle.13*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.13* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP23VkDescriptorSetLayout_TEaSEm(%class.VkNonDispatchableHandle.13*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.13, %class.VkNonDispatchableHandle.13* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP11VkSampler_TEcvPvEv(%class.VkNonDispatchableHandle.14*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.14* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP11VkSampler_TEaSEm(%class.VkNonDispatchableHandle.14*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.14, %class.VkNonDispatchableHandle.14* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkDescriptorSet_TEcvPvEv(%class.VkNonDispatchableHandle.15*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.15* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkDescriptorSet_TEaSEm(%class.VkNonDispatchableHandle.15*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.15, %class.VkNonDispatchableHandle.15* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkDescriptorPool_TEcvPvEv(%class.VkNonDispatchableHandle.16*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.16* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkDescriptorPool_TEaSEm(%class.VkNonDispatchableHandle.16*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.16, %class.VkNonDispatchableHandle.16* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkFramebuffer_TEcvPvEv(%class.VkNonDispatchableHandle.17*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.17* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkFramebuffer_TEaSEm(%class.VkNonDispatchableHandle.17*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.17, %class.VkNonDispatchableHandle.17* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkCommandPool_TEcvPvEv(%class.VkNonDispatchableHandle.18*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.18* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkCommandPool_TEaSEm(%class.VkNonDispatchableHandle.18*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.18, %class.VkNonDispatchableHandle.18* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEcvPvEv(%class.VkNonDispatchableHandle.19*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.19* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkSamplerYcbcrConversion_TEaSEm(%class.VkNonDispatchableHandle.19*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.19, %class.VkNonDispatchableHandle.19* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEcvPvEv(%class.VkNonDispatchableHandle.20*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.20* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkDescriptorUpdateTemplate_TEaSEm(%class.VkNonDispatchableHandle.20*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.20, %class.VkNonDispatchableHandle.20* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkSurfaceKHR_TEcvPvEv(%class.VkNonDispatchableHandle.21*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.21* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkSurfaceKHR_TEaSEm(%class.VkNonDispatchableHandle.21*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.21, %class.VkNonDispatchableHandle.21* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP16VkSwapchainKHR_TEcvPvEv(%class.VkNonDispatchableHandle.22*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.22* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP16VkSwapchainKHR_TEaSEm(%class.VkNonDispatchableHandle.22*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.22, %class.VkNonDispatchableHandle.22* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP14VkDisplayKHR_TEcvPvEv(%class.VkNonDispatchableHandle.23*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.23* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP14VkDisplayKHR_TEaSEm(%class.VkNonDispatchableHandle.23*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.23, %class.VkNonDispatchableHandle.23* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEcvPvEv(%class.VkNonDispatchableHandle.24*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.24* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP18VkDisplayModeKHR_TEaSEm(%class.VkNonDispatchableHandle.24*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.24, %class.VkNonDispatchableHandle.24* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEcvPvEv(%class.VkNonDispatchableHandle.25*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.25* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP24VkDeferredOperationKHR_TEaSEm(%class.VkNonDispatchableHandle.25*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.25, %class.VkNonDispatchableHandle.25* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEcvPvEv(%class.VkNonDispatchableHandle.26*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.26* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkDebugReportCallbackEXT_TEaSEm(%class.VkNonDispatchableHandle.26*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.26, %class.VkNonDispatchableHandle.26* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP15VkCuModuleNVX_TEcvPvEv(%class.VkNonDispatchableHandle.27*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.27* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP15VkCuModuleNVX_TEaSEm(%class.VkNonDispatchableHandle.27*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.27, %class.VkNonDispatchableHandle.27* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEcvPvEv(%class.VkNonDispatchableHandle.28*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.28* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP17VkCuFunctionNVX_TEaSEm(%class.VkNonDispatchableHandle.28*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.28, %class.VkNonDispatchableHandle.28* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEcvPvEv(%class.VkNonDispatchableHandle.29*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.29* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP26VkDebugUtilsMessengerEXT_TEaSEm(%class.VkNonDispatchableHandle.29*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.29, %class.VkNonDispatchableHandle.29* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEcvPvEv(%class.VkNonDispatchableHandle.30*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.30* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP22VkValidationCacheEXT_TEaSEm(%class.VkNonDispatchableHandle.30*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.30, %class.VkNonDispatchableHandle.30* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEcvPvEv(%class.VkNonDispatchableHandle.31*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.31* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP27VkAccelerationStructureNV_TEaSEm(%class.VkNonDispatchableHandle.31*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.31, %class.VkNonDispatchableHandle.31* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEcvPvEv(%class.VkNonDispatchableHandle.32*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.32* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP33VkPerformanceConfigurationINTEL_TEaSEm(%class.VkNonDispatchableHandle.32*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.32, %class.VkNonDispatchableHandle.32* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEcvPvEv(%class.VkNonDispatchableHandle.33*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.33* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkIndirectCommandsLayoutNV_TEaSEm(%class.VkNonDispatchableHandle.33*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.33, %class.VkNonDispatchableHandle.33* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEcvPvEv(%class.VkNonDispatchableHandle.34*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.34* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP22VkPrivateDataSlotEXT_TEaSEm(%class.VkNonDispatchableHandle.34*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.34, %class.VkNonDispatchableHandle.34* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden i8* @_ZNK23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEcvPvEv(%class.VkNonDispatchableHandle.35*) local_unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.VkNonDispatchableHandle.35* %0 to i8**
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nounwind optsize ssp uwtable
define weak_odr hidden void @_ZN23VkNonDispatchableHandleIP28VkAccelerationStructureKHR_TEaSEm(%class.VkNonDispatchableHandle.35*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.VkNonDispatchableHandle.35, %class.VkNonDispatchableHandle.35* %0, i64 0, i32 0
  store i64 %1, i64* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2vk6Format20isUnsignedNormalizedEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %4 [
    i32 1, label %5
    i32 2, label %5
    i32 3, label %5
    i32 8, label %5
    i32 6, label %5
    i32 7, label %5
    i32 4, label %5
    i32 5, label %5
    i32 9, label %5
    i32 16, label %5
    i32 37, label %5
    i32 51, label %5
    i32 44, label %5
    i32 58, label %5
    i32 64, label %5
    i32 70, label %5
    i32 77, label %5
    i32 84, label %5
    i32 91, label %5
  ]

4:                                                ; preds = %1
  br label %5

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %4
  %6 = phi i1 [ false, %4 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %6
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2vk6Format18isSignedNormalizedEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %4 [
    i32 10, label %5
    i32 17, label %5
    i32 38, label %5
    i32 52, label %5
    i32 45, label %5
    i32 59, label %5
    i32 65, label %5
    i32 71, label %5
    i32 78, label %5
    i32 85, label %5
    i32 92, label %5
  ]

4:                                                ; preds = %1
  br label %5

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %4
  %6 = phi i1 [ false, %4 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %6
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2vk6Format27isSignedUnnormalizedIntegerEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %4 [
    i32 14, label %5
    i32 21, label %5
    i32 42, label %5
    i32 49, label %5
    i32 56, label %5
    i32 63, label %5
    i32 69, label %5
    i32 75, label %5
    i32 82, label %5
    i32 89, label %5
    i32 96, label %5
    i32 99, label %5
    i32 102, label %5
    i32 105, label %5
    i32 108, label %5
    i32 111, label %5
    i32 114, label %5
    i32 117, label %5
    i32 120, label %5
  ]

4:                                                ; preds = %1
  br label %5

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %4
  %6 = phi i1 [ false, %4 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %6
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2vk6Format29isUnsignedUnnormalizedIntegerEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %4 [
    i32 13, label %5
    i32 20, label %5
    i32 41, label %5
    i32 48, label %5
    i32 55, label %5
    i32 62, label %5
    i32 68, label %5
    i32 74, label %5
    i32 81, label %5
    i32 88, label %5
    i32 95, label %5
    i32 98, label %5
    i32 101, label %5
    i32 104, label %5
    i32 107, label %5
    i32 110, label %5
    i32 113, label %5
    i32 116, label %5
    i32 119, label %5
    i32 127, label %5
  ]

4:                                                ; preds = %1
  br label %5

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %4
  %6 = phi i1 [ false, %4 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %6
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2vk6Format21isUnnormalizedIntegerEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = tail call zeroext i1 @_ZNK2vk6Format27isSignedUnnormalizedIntegerEv(%"class.vk::Format"* %0) #4
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = tail call zeroext i1 @_ZNK2vk6Format29isUnsignedUnnormalizedIntegerEv(%"class.vk::Format"* %0) #4
  br label %5

5:                                                ; preds = %3, %1
  %6 = phi i1 [ true, %1 ], [ %4, %3 ]
  ret i1 %6
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK2vk6Format10getAspectsEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -124
  %5 = icmp ult i32 %4, 7
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds [7 x i32], [7 x i32]* @switch.table._ZNK2vk6Format10getAspectsEv, i64 0, i64 %7
  %9 = load i32, i32* %8, align 4
  br label %10

10:                                               ; preds = %6, %1
  %11 = phi i32 [ 0, %1 ], [ %9, %6 ]
  %12 = add i32 %3, -127
  %13 = icmp ult i32 %12, 4
  %14 = or i32 %11, 4
  %15 = select i1 %13, i32 %14, i32 %11
  switch i32 %3, label %17 [
    i32 1000156002, label %20
    i32 1000156003, label %16
  ]

16:                                               ; preds = %10
  br label %20

17:                                               ; preds = %10
  %18 = icmp eq i32 %15, 0
  %19 = select i1 %18, i32 1, i32 %15
  ret i32 %19

20:                                               ; preds = %10, %16
  %21 = phi i32 [ 48, %16 ], [ 112, %10 ]
  ret i32 %21
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2vk6Format7isDepthEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -124
  %5 = icmp ult i32 %4, 7
  br i1 %5, label %6, label %11

6:                                                ; preds = %1
  %7 = trunc i32 %4 to i7
  %8 = lshr i7 -9, %7
  %9 = and i7 %8, 1
  %10 = icmp ne i7 %9, 0
  ret i1 %10

11:                                               ; preds = %1
  ret i1 false
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2vk6Format9isStencilEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -127
  %5 = icmp ult i32 %4, 4
  ret i1 %5
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK2vk6Format15getAspectFormatEj(%"class.vk::Format"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %31 [
    i32 1, label %3
    i32 6, label %3
    i32 48, label %3
    i32 112, label %3
    i32 2, label %6
    i32 4, label %12
    i32 16, label %18
    i32 32, label %22
    i32 64, label %27
  ]

3:                                                ; preds = %2, %2, %2, %2
  %4 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %5 = load i32, i32* %4, align 4
  br label %44

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = add i32 %8, -124
  %10 = icmp ult i32 %9, 7
  br i1 %10, label %35, label %11

11:                                               ; preds = %35, %6
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 186, i32 %8) #5
  br label %32

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = add i32 %14, -127
  %16 = icmp ult i32 %15, 4
  br i1 %16, label %44, label %17

17:                                               ; preds = %12
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 200, i32 %14) #5
  br label %32

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  switch i32 %20, label %21 [
    i32 9, label %44
    i32 1000156002, label %44
    i32 1000156003, label %44
  ]

21:                                               ; preds = %18
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 215, i32 %20) #5
  br label %32

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  switch i32 %24, label %26 [
    i32 9, label %44
    i32 1000156002, label %44
    i32 16, label %25
    i32 1000156003, label %25
  ]

25:                                               ; preds = %22, %22
  br label %44

26:                                               ; preds = %22
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 230, i32 %24) #5
  br label %32

27:                                               ; preds = %2
  %28 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  switch i32 %29, label %30 [
    i32 9, label %44
    i32 1000156002, label %44
  ]

30:                                               ; preds = %27
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 242, i32 %29) #5
  br label %32

31:                                               ; preds = %2
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 248, i32 %1) #5
  br label %32

32:                                               ; preds = %31, %30, %26, %21, %17, %11
  %33 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br label %44

35:                                               ; preds = %6
  %36 = trunc i32 %9 to i8
  %37 = lshr i8 117, %36
  %38 = and i8 %37, 1
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %11, label %40

40:                                               ; preds = %35
  %41 = sext i32 %9 to i64
  %42 = getelementptr inbounds [7 x i32], [7 x i32]* @switch.table._ZNK2vk6Format15getAspectFormatEj, i64 0, i64 %41
  %43 = load i32, i32* %42, align 4
  ret i32 %43

44:                                               ; preds = %27, %27, %22, %22, %18, %18, %18, %12, %32, %25, %3
  %45 = phi i32 [ %34, %32 ], [ 16, %25 ], [ %5, %3 ], [ 127, %12 ], [ 9, %18 ], [ 9, %18 ], [ 9, %18 ], [ 9, %22 ], [ 9, %22 ], [ 9, %27 ], [ 9, %27 ]
  ret i32 %45
}

; Function Attrs: optsize
declare void @_ZN2sw4warnEPKcz(i8*, ...) local_unnamed_addr #2

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2vk6Format12isSRGBformatEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %4 [
    i32 15, label %5
    i32 22, label %5
    i32 43, label %5
    i32 50, label %5
    i32 57, label %5
    i32 148, label %5
    i32 150, label %5
    i32 152, label %5
    i32 132, label %5
    i32 134, label %5
    i32 136, label %5
    i32 138, label %5
    i32 158, label %5
    i32 160, label %5
    i32 162, label %5
    i32 164, label %5
    i32 166, label %5
    i32 168, label %5
    i32 170, label %5
    i32 172, label %5
    i32 174, label %5
    i32 176, label %5
    i32 178, label %5
    i32 180, label %5
    i32 182, label %5
    i32 184, label %5
  ]

4:                                                ; preds = %1
  br label %5

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %4
  %6 = phi i1 [ false, %4 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %6
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK2vk6Format13isFloatFormatEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %5 [
    i32 1, label %6
    i32 2, label %6
    i32 3, label %6
    i32 4, label %6
    i32 5, label %6
    i32 6, label %6
    i32 7, label %6
    i32 8, label %6
    i32 9, label %6
    i32 10, label %6
    i32 11, label %6
    i32 12, label %6
    i32 13, label %6
    i32 14, label %6
    i32 15, label %6
    i32 16, label %6
    i32 17, label %6
    i32 18, label %6
    i32 19, label %6
    i32 20, label %6
    i32 21, label %6
    i32 22, label %6
    i32 37, label %6
    i32 38, label %6
    i32 39, label %6
    i32 40, label %6
    i32 41, label %6
    i32 42, label %6
    i32 43, label %6
    i32 44, label %6
    i32 45, label %6
    i32 46, label %6
    i32 47, label %6
    i32 48, label %6
    i32 49, label %6
    i32 50, label %6
    i32 51, label %6
    i32 52, label %6
    i32 53, label %6
    i32 54, label %6
    i32 55, label %6
    i32 56, label %6
    i32 57, label %6
    i32 58, label %6
    i32 59, label %6
    i32 60, label %6
    i32 61, label %6
    i32 62, label %6
    i32 63, label %6
    i32 64, label %6
    i32 65, label %6
    i32 66, label %6
    i32 67, label %6
    i32 68, label %6
    i32 69, label %6
    i32 70, label %6
    i32 71, label %6
    i32 72, label %6
    i32 73, label %6
    i32 74, label %6
    i32 75, label %6
    i32 77, label %6
    i32 78, label %6
    i32 79, label %6
    i32 80, label %6
    i32 81, label %6
    i32 82, label %6
    i32 84, label %6
    i32 85, label %6
    i32 86, label %6
    i32 87, label %6
    i32 88, label %6
    i32 89, label %6
    i32 91, label %6
    i32 92, label %6
    i32 93, label %6
    i32 94, label %6
    i32 95, label %6
    i32 96, label %6
    i32 98, label %6
    i32 99, label %6
    i32 101, label %6
    i32 102, label %6
    i32 104, label %6
    i32 105, label %6
    i32 107, label %6
    i32 108, label %6
    i32 110, label %6
    i32 111, label %6
    i32 113, label %6
    i32 114, label %6
    i32 116, label %6
    i32 117, label %6
    i32 119, label %6
    i32 120, label %6
    i32 124, label %6
    i32 125, label %6
    i32 127, label %6
    i32 128, label %6
    i32 129, label %6
    i32 1000156002, label %6
    i32 1000156003, label %6
    i32 76, label %4
    i32 83, label %4
    i32 90, label %4
    i32 97, label %4
    i32 100, label %4
    i32 103, label %4
    i32 106, label %4
    i32 109, label %4
    i32 112, label %4
    i32 115, label %4
    i32 118, label %4
    i32 121, label %4
    i32 122, label %4
    i32 123, label %4
    i32 126, label %4
    i32 130, label %4
  ]

4:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %6

5:                                                ; preds = %1
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 450, i32 %3) #5
  br label %6

6:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %5, %4
  %7 = phi i1 [ false, %5 ], [ true, %4 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ]
  ret i1 %7
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2vk6Format13isYcbcrFormatEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = and i32 %3, -2
  %5 = icmp eq i32 %4, 1000156002
  ret i1 %5
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2vk6Format12isCompressedEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -131
  %5 = icmp ult i32 %4, 54
  ret i1 %5
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK2vk6Format21getDecompressedFormatEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -131
  %5 = icmp ult i32 %4, 54
  br i1 %5, label %7, label %6

6:                                                ; preds = %1
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 609, i32 %3) #5
  ret i32 0

7:                                                ; preds = %1
  %8 = sext i32 %4 to i64
  %9 = getelementptr inbounds [54 x i32], [54 x i32]* @switch.table._ZNK2vk6Format21getDecompressedFormatEv, i64 0, i64 %8
  %10 = load i32, i32* %9, align 4
  ret i32 %10
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK2vk6Format16compatibleFormatEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %39 [
    i32 1, label %40
    i32 9, label %40
    i32 10, label %40
    i32 11, label %40
    i32 12, label %40
    i32 13, label %40
    i32 14, label %40
    i32 15, label %40
    i32 2, label %4
    i32 3, label %4
    i32 4, label %4
    i32 5, label %4
    i32 6, label %4
    i32 7, label %4
    i32 8, label %4
    i32 16, label %4
    i32 17, label %4
    i32 18, label %4
    i32 19, label %4
    i32 20, label %4
    i32 21, label %4
    i32 22, label %4
    i32 70, label %4
    i32 71, label %4
    i32 72, label %4
    i32 73, label %4
    i32 74, label %4
    i32 75, label %4
    i32 76, label %4
    i32 1000156007, label %4
    i32 1000156017, label %4
    i32 37, label %5
    i32 38, label %5
    i32 39, label %5
    i32 40, label %5
    i32 41, label %5
    i32 42, label %5
    i32 43, label %5
    i32 44, label %5
    i32 45, label %5
    i32 46, label %5
    i32 47, label %5
    i32 48, label %5
    i32 49, label %5
    i32 50, label %5
    i32 51, label %5
    i32 52, label %5
    i32 53, label %5
    i32 54, label %5
    i32 55, label %5
    i32 56, label %5
    i32 57, label %5
    i32 58, label %5
    i32 59, label %5
    i32 60, label %5
    i32 61, label %5
    i32 62, label %5
    i32 63, label %5
    i32 64, label %5
    i32 65, label %5
    i32 66, label %5
    i32 67, label %5
    i32 68, label %5
    i32 69, label %5
    i32 77, label %5
    i32 78, label %5
    i32 79, label %5
    i32 80, label %5
    i32 81, label %5
    i32 82, label %5
    i32 83, label %5
    i32 98, label %5
    i32 99, label %5
    i32 100, label %5
    i32 122, label %5
    i32 123, label %5
    i32 1000156008, label %5
    i32 1000156018, label %5
    i32 84, label %6
    i32 85, label %6
    i32 86, label %6
    i32 87, label %6
    i32 88, label %6
    i32 89, label %6
    i32 90, label %6
    i32 91, label %7
    i32 92, label %7
    i32 93, label %7
    i32 94, label %7
    i32 95, label %7
    i32 96, label %7
    i32 97, label %7
    i32 101, label %7
    i32 102, label %7
    i32 103, label %7
    i32 110, label %7
    i32 111, label %7
    i32 112, label %7
    i32 104, label %8
    i32 105, label %8
    i32 106, label %8
    i32 107, label %9
    i32 108, label %9
    i32 109, label %9
    i32 113, label %9
    i32 114, label %9
    i32 115, label %9
    i32 116, label %10
    i32 117, label %10
    i32 118, label %10
    i32 119, label %11
    i32 120, label %11
    i32 121, label %11
    i32 131, label %12
    i32 132, label %12
    i32 133, label %13
    i32 134, label %13
    i32 135, label %14
    i32 136, label %14
    i32 137, label %15
    i32 138, label %15
    i32 139, label %16
    i32 140, label %16
    i32 141, label %17
    i32 142, label %17
    i32 143, label %18
    i32 144, label %18
    i32 145, label %19
    i32 146, label %19
    i32 147, label %20
    i32 148, label %20
    i32 149, label %21
    i32 150, label %21
    i32 151, label %22
    i32 152, label %22
    i32 153, label %23
    i32 154, label %23
    i32 155, label %24
    i32 156, label %24
    i32 157, label %25
    i32 158, label %25
    i32 159, label %26
    i32 160, label %26
    i32 161, label %27
    i32 162, label %27
    i32 163, label %28
    i32 164, label %28
    i32 165, label %29
    i32 166, label %29
    i32 167, label %30
    i32 168, label %30
    i32 169, label %31
    i32 170, label %31
    i32 171, label %32
    i32 172, label %32
    i32 173, label %33
    i32 174, label %33
    i32 175, label %34
    i32 176, label %34
    i32 177, label %35
    i32 178, label %35
    i32 179, label %36
    i32 180, label %36
    i32 181, label %37
    i32 182, label %37
    i32 183, label %38
    i32 184, label %38
  ]

4:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %40

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %40

6:                                                ; preds = %1, %1, %1, %1, %1, %1, %1
  br label %40

7:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %40

8:                                                ; preds = %1, %1, %1
  br label %40

9:                                                ; preds = %1, %1, %1, %1, %1, %1
  br label %40

10:                                               ; preds = %1, %1, %1
  br label %40

11:                                               ; preds = %1, %1, %1
  br label %40

12:                                               ; preds = %1, %1
  br label %40

13:                                               ; preds = %1, %1
  br label %40

14:                                               ; preds = %1, %1
  br label %40

15:                                               ; preds = %1, %1
  br label %40

16:                                               ; preds = %1, %1
  br label %40

17:                                               ; preds = %1, %1
  br label %40

18:                                               ; preds = %1, %1
  br label %40

19:                                               ; preds = %1, %1
  br label %40

20:                                               ; preds = %1, %1
  br label %40

21:                                               ; preds = %1, %1
  br label %40

22:                                               ; preds = %1, %1
  br label %40

23:                                               ; preds = %1, %1
  br label %40

24:                                               ; preds = %1, %1
  br label %40

25:                                               ; preds = %1, %1
  br label %40

26:                                               ; preds = %1, %1
  br label %40

27:                                               ; preds = %1, %1
  br label %40

28:                                               ; preds = %1, %1
  br label %40

29:                                               ; preds = %1, %1
  br label %40

30:                                               ; preds = %1, %1
  br label %40

31:                                               ; preds = %1, %1
  br label %40

32:                                               ; preds = %1, %1
  br label %40

33:                                               ; preds = %1, %1
  br label %40

34:                                               ; preds = %1, %1
  br label %40

35:                                               ; preds = %1, %1
  br label %40

36:                                               ; preds = %1, %1
  br label %40

37:                                               ; preds = %1, %1
  br label %40

38:                                               ; preds = %1, %1
  br label %40

39:                                               ; preds = %1
  br label %40

40:                                               ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %39, %38, %37, %36, %35, %34, %33, %32, %31, %30, %29, %28, %27, %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4
  %41 = phi i32 [ %3, %39 ], [ 183, %38 ], [ 181, %37 ], [ 179, %36 ], [ 177, %35 ], [ 175, %34 ], [ 173, %33 ], [ 171, %32 ], [ 169, %31 ], [ 167, %30 ], [ 165, %29 ], [ 163, %28 ], [ 161, %27 ], [ 159, %26 ], [ 157, %25 ], [ 155, %24 ], [ 153, %23 ], [ 151, %22 ], [ 149, %21 ], [ 147, %20 ], [ 145, %19 ], [ 143, %18 ], [ 141, %17 ], [ 139, %16 ], [ 137, %15 ], [ 135, %14 ], [ 133, %13 ], [ 131, %12 ], [ 119, %11 ], [ 116, %10 ], [ 107, %9 ], [ 104, %8 ], [ 91, %7 ], [ 84, %6 ], [ 37, %5 ], [ 70, %4 ], [ 9, %1 ], [ 9, %1 ], [ 9, %1 ], [ 9, %1 ], [ 9, %1 ], [ 9, %1 ], [ 9, %1 ], [ 9, %1 ]
  ret i32 %41
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2vk6Format12isCompatibleERKS0_(%"class.vk::Format"* nocapture readonly, %"class.vk::Format"* nocapture readonly dereferenceable(4)) local_unnamed_addr #1 align 2 {
  %3 = tail call i32 @_ZNK2vk6Format16compatibleFormatEv(%"class.vk::Format"* %0) #4
  %4 = tail call i32 @_ZNK2vk6Format16compatibleFormatEv(%"class.vk::Format"* %1) #4
  %5 = icmp eq i32 %3, %4
  ret i1 %5
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK2vk6Format10blockWidthEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -131
  %5 = icmp ult i32 %4, 54
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds [54 x i32], [54 x i32]* @switch.table._ZNK2vk6Format10blockWidthEv, i64 0, i64 %7
  %9 = load i32, i32* %8, align 4
  ret i32 %9

10:                                               ; preds = %1
  ret i32 1
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK2vk6Format11blockHeightEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -131
  %5 = icmp ult i32 %4, 54
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds [54 x i32], [54 x i32]* @switch.table._ZNK2vk6Format11blockHeightEv, i64 0, i64 %7
  %9 = load i32, i32* %8, align 4
  ret i32 %9

10:                                               ; preds = %1
  ret i32 1
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK2vk6Format13bytesPerBlockEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  %4 = add i32 %3, -131
  %5 = icmp ult i32 %4, 54
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = tail call i32 @_ZNK2vk6Format5bytesEv(%"class.vk::Format"* %0) #4
  ret i32 %7

8:                                                ; preds = %1
  %9 = sext i32 %4 to i64
  %10 = getelementptr inbounds [54 x i32], [54 x i32]* @switch.table._ZNK2vk6Format13bytesPerBlockEv, i64 0, i64 %9
  %11 = load i32, i32* %10, align 4
  ret i32 %11
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK2vk6Format5bytesEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %60 [
    i32 0, label %61
    i32 1, label %4
    i32 2, label %5
    i32 3, label %5
    i32 4, label %5
    i32 5, label %5
    i32 6, label %5
    i32 7, label %5
    i32 8, label %5
    i32 9, label %6
    i32 10, label %6
    i32 11, label %6
    i32 12, label %6
    i32 13, label %6
    i32 14, label %6
    i32 15, label %6
    i32 16, label %7
    i32 17, label %7
    i32 18, label %7
    i32 19, label %7
    i32 20, label %7
    i32 21, label %7
    i32 22, label %7
    i32 37, label %8
    i32 38, label %8
    i32 39, label %8
    i32 40, label %8
    i32 41, label %8
    i32 42, label %8
    i32 43, label %8
    i32 44, label %8
    i32 45, label %8
    i32 46, label %8
    i32 47, label %8
    i32 48, label %8
    i32 49, label %8
    i32 50, label %8
    i32 51, label %8
    i32 52, label %8
    i32 53, label %8
    i32 54, label %8
    i32 55, label %8
    i32 56, label %8
    i32 57, label %8
    i32 58, label %8
    i32 59, label %8
    i32 60, label %8
    i32 61, label %8
    i32 62, label %8
    i32 63, label %8
    i32 64, label %8
    i32 65, label %8
    i32 66, label %8
    i32 67, label %8
    i32 68, label %8
    i32 69, label %8
    i32 70, label %9
    i32 71, label %9
    i32 72, label %9
    i32 73, label %9
    i32 74, label %9
    i32 75, label %9
    i32 76, label %9
    i32 77, label %10
    i32 78, label %10
    i32 79, label %10
    i32 80, label %10
    i32 81, label %10
    i32 82, label %10
    i32 83, label %10
    i32 84, label %11
    i32 85, label %11
    i32 86, label %11
    i32 87, label %11
    i32 88, label %11
    i32 89, label %11
    i32 90, label %11
    i32 91, label %12
    i32 92, label %12
    i32 93, label %12
    i32 94, label %12
    i32 95, label %12
    i32 96, label %12
    i32 97, label %12
    i32 98, label %13
    i32 99, label %13
    i32 100, label %13
    i32 101, label %14
    i32 102, label %14
    i32 103, label %14
    i32 104, label %15
    i32 105, label %15
    i32 106, label %15
    i32 107, label %16
    i32 108, label %16
    i32 109, label %16
    i32 110, label %17
    i32 111, label %17
    i32 112, label %17
    i32 113, label %18
    i32 114, label %18
    i32 115, label %18
    i32 116, label %19
    i32 117, label %19
    i32 118, label %19
    i32 119, label %20
    i32 120, label %20
    i32 121, label %20
    i32 122, label %21
    i32 123, label %22
    i32 124, label %23
    i32 125, label %24
    i32 126, label %25
    i32 127, label %26
    i32 128, label %27
    i32 129, label %28
    i32 130, label %29
    i32 131, label %30
    i32 132, label %31
    i32 133, label %32
    i32 134, label %33
    i32 135, label %34
    i32 136, label %35
    i32 137, label %36
    i32 138, label %37
    i32 139, label %38
    i32 140, label %39
    i32 141, label %40
    i32 142, label %41
    i32 143, label %42
    i32 144, label %43
    i32 145, label %44
    i32 146, label %45
    i32 147, label %46
    i32 148, label %47
    i32 149, label %48
    i32 150, label %49
    i32 151, label %50
    i32 152, label %51
    i32 153, label %52
    i32 154, label %53
    i32 155, label %54
    i32 156, label %55
    i32 157, label %56
    i32 158, label %57
    i32 159, label %58
    i32 160, label %58
    i32 161, label %58
    i32 162, label %58
    i32 163, label %58
    i32 164, label %58
    i32 165, label %58
    i32 166, label %58
    i32 167, label %58
    i32 168, label %58
    i32 169, label %58
    i32 170, label %58
    i32 171, label %58
    i32 172, label %58
    i32 173, label %58
    i32 174, label %58
    i32 175, label %58
    i32 176, label %58
    i32 177, label %58
    i32 178, label %58
    i32 179, label %58
    i32 180, label %58
    i32 181, label %58
    i32 182, label %58
    i32 183, label %58
    i32 184, label %58
    i32 1000156002, label %59
    i32 1000156003, label %59
  ]

4:                                                ; preds = %1
  br label %61

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1
  br label %61

6:                                                ; preds = %1, %1, %1, %1, %1, %1, %1
  br label %61

7:                                                ; preds = %1, %1, %1, %1, %1, %1, %1
  br label %61

8:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %61

9:                                                ; preds = %1, %1, %1, %1, %1, %1, %1
  br label %61

10:                                               ; preds = %1, %1, %1, %1, %1, %1, %1
  br label %61

11:                                               ; preds = %1, %1, %1, %1, %1, %1, %1
  br label %61

12:                                               ; preds = %1, %1, %1, %1, %1, %1, %1
  br label %61

13:                                               ; preds = %1, %1, %1
  br label %61

14:                                               ; preds = %1, %1, %1
  br label %61

15:                                               ; preds = %1, %1, %1
  br label %61

16:                                               ; preds = %1, %1, %1
  br label %61

17:                                               ; preds = %1, %1, %1
  br label %61

18:                                               ; preds = %1, %1, %1
  br label %61

19:                                               ; preds = %1, %1, %1
  br label %61

20:                                               ; preds = %1, %1, %1
  br label %61

21:                                               ; preds = %1
  br label %61

22:                                               ; preds = %1
  br label %61

23:                                               ; preds = %1
  br label %61

24:                                               ; preds = %1
  br label %61

25:                                               ; preds = %1
  br label %61

26:                                               ; preds = %1
  br label %61

27:                                               ; preds = %1
  br label %61

28:                                               ; preds = %1
  br label %61

29:                                               ; preds = %1
  br label %61

30:                                               ; preds = %1
  br label %61

31:                                               ; preds = %1
  br label %61

32:                                               ; preds = %1
  br label %61

33:                                               ; preds = %1
  br label %61

34:                                               ; preds = %1
  br label %61

35:                                               ; preds = %1
  br label %61

36:                                               ; preds = %1
  br label %61

37:                                               ; preds = %1
  br label %61

38:                                               ; preds = %1
  br label %61

39:                                               ; preds = %1
  br label %61

40:                                               ; preds = %1
  br label %61

41:                                               ; preds = %1
  br label %61

42:                                               ; preds = %1
  br label %61

43:                                               ; preds = %1
  br label %61

44:                                               ; preds = %1
  br label %61

45:                                               ; preds = %1
  br label %61

46:                                               ; preds = %1
  br label %61

47:                                               ; preds = %1
  br label %61

48:                                               ; preds = %1
  br label %61

49:                                               ; preds = %1
  br label %61

50:                                               ; preds = %1
  br label %61

51:                                               ; preds = %1
  br label %61

52:                                               ; preds = %1
  br label %61

53:                                               ; preds = %1
  br label %61

54:                                               ; preds = %1
  br label %61

55:                                               ; preds = %1
  br label %61

56:                                               ; preds = %1
  br label %61

57:                                               ; preds = %1
  br label %61

58:                                               ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 1693, i32 %3) #5
  br label %61

59:                                               ; preds = %1, %1
  br label %61

60:                                               ; preds = %1
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 1700, i32 %3) #5
  br label %61

61:                                               ; preds = %1, %60, %59, %58, %57, %56, %55, %54, %53, %52, %51, %50, %49, %48, %47, %46, %45, %44, %43, %42, %41, %40, %39, %38, %37, %36, %35, %34, %33, %32, %31, %30, %29, %28, %27, %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4
  %62 = phi i32 [ 0, %60 ], [ 1, %59 ], [ 0, %58 ], [ 4, %57 ], [ 4, %56 ], [ 4, %55 ], [ 4, %54 ], [ 2, %53 ], [ 2, %52 ], [ 4, %51 ], [ 4, %50 ], [ 2, %49 ], [ 2, %48 ], [ 2, %47 ], [ 2, %46 ], [ 4, %45 ], [ 4, %44 ], [ 4, %43 ], [ 4, %42 ], [ 4, %41 ], [ 4, %40 ], [ 2, %39 ], [ 2, %38 ], [ 4, %37 ], [ 4, %36 ], [ 4, %35 ], [ 4, %34 ], [ 2, %33 ], [ 2, %32 ], [ 2, %31 ], [ 2, %30 ], [ 4, %29 ], [ 4, %28 ], [ 2, %27 ], [ 1, %26 ], [ 4, %25 ], [ 4, %24 ], [ 2, %23 ], [ 4, %22 ], [ 4, %21 ], [ 32, %20 ], [ 24, %19 ], [ 16, %18 ], [ 8, %17 ], [ 16, %16 ], [ 12, %15 ], [ 8, %14 ], [ 4, %13 ], [ 8, %12 ], [ 6, %11 ], [ 4, %10 ], [ 2, %9 ], [ 4, %8 ], [ 2, %7 ], [ 1, %6 ], [ 2, %5 ], [ 1, %4 ], [ %3, %1 ]
  ret i32 %62
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK2vk6Format14componentCountEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %7 [
    i32 9, label %8
    i32 10, label %8
    i32 11, label %8
    i32 12, label %8
    i32 13, label %8
    i32 14, label %8
    i32 15, label %8
    i32 70, label %8
    i32 71, label %8
    i32 72, label %8
    i32 73, label %8
    i32 74, label %8
    i32 75, label %8
    i32 76, label %8
    i32 98, label %8
    i32 99, label %8
    i32 100, label %8
    i32 110, label %8
    i32 111, label %8
    i32 112, label %8
    i32 124, label %8
    i32 125, label %8
    i32 126, label %8
    i32 127, label %8
    i32 128, label %8
    i32 129, label %8
    i32 130, label %8
    i32 139, label %8
    i32 140, label %8
    i32 153, label %8
    i32 154, label %8
    i32 1, label %4
    i32 16, label %4
    i32 17, label %4
    i32 18, label %4
    i32 19, label %4
    i32 20, label %4
    i32 21, label %4
    i32 22, label %4
    i32 77, label %4
    i32 78, label %4
    i32 79, label %4
    i32 80, label %4
    i32 81, label %4
    i32 82, label %4
    i32 83, label %4
    i32 101, label %4
    i32 102, label %4
    i32 103, label %4
    i32 113, label %4
    i32 114, label %4
    i32 115, label %4
    i32 141, label %4
    i32 142, label %4
    i32 155, label %4
    i32 156, label %4
    i32 4, label %5
    i32 5, label %5
    i32 84, label %5
    i32 85, label %5
    i32 86, label %5
    i32 87, label %5
    i32 88, label %5
    i32 89, label %5
    i32 90, label %5
    i32 104, label %5
    i32 105, label %5
    i32 106, label %5
    i32 116, label %5
    i32 117, label %5
    i32 118, label %5
    i32 122, label %5
    i32 123, label %5
    i32 1000156002, label %5
    i32 1000156003, label %5
    i32 131, label %5
    i32 132, label %5
    i32 143, label %5
    i32 144, label %5
    i32 147, label %5
    i32 148, label %5
    i32 2, label %6
    i32 3, label %6
    i32 6, label %6
    i32 7, label %6
    i32 8, label %6
    i32 37, label %6
    i32 38, label %6
    i32 39, label %6
    i32 40, label %6
    i32 41, label %6
    i32 42, label %6
    i32 43, label %6
    i32 44, label %6
    i32 45, label %6
    i32 46, label %6
    i32 47, label %6
    i32 48, label %6
    i32 49, label %6
    i32 50, label %6
    i32 51, label %6
    i32 52, label %6
    i32 53, label %6
    i32 54, label %6
    i32 55, label %6
    i32 56, label %6
    i32 57, label %6
    i32 58, label %6
    i32 59, label %6
    i32 60, label %6
    i32 61, label %6
    i32 62, label %6
    i32 63, label %6
    i32 64, label %6
    i32 65, label %6
    i32 66, label %6
    i32 67, label %6
    i32 68, label %6
    i32 69, label %6
    i32 91, label %6
    i32 92, label %6
    i32 93, label %6
    i32 94, label %6
    i32 95, label %6
    i32 96, label %6
    i32 97, label %6
    i32 107, label %6
    i32 108, label %6
    i32 109, label %6
    i32 119, label %6
    i32 120, label %6
    i32 121, label %6
    i32 133, label %6
    i32 134, label %6
    i32 135, label %6
    i32 136, label %6
    i32 137, label %6
    i32 138, label %6
    i32 145, label %6
    i32 146, label %6
    i32 149, label %6
    i32 150, label %6
    i32 151, label %6
    i32 152, label %6
    i32 157, label %6
    i32 159, label %6
    i32 161, label %6
    i32 163, label %6
    i32 165, label %6
    i32 167, label %6
    i32 169, label %6
    i32 171, label %6
    i32 173, label %6
    i32 175, label %6
    i32 177, label %6
    i32 179, label %6
    i32 181, label %6
    i32 183, label %6
    i32 158, label %6
    i32 160, label %6
    i32 162, label %6
    i32 164, label %6
    i32 166, label %6
    i32 168, label %6
    i32 170, label %6
    i32 172, label %6
    i32 174, label %6
    i32 176, label %6
    i32 178, label %6
    i32 180, label %6
    i32 182, label %6
    i32 184, label %6
  ]

4:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %8

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %8

6:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %8

7:                                                ; preds = %1
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 1298, i32 %3) #5
  br label %8

8:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %7, %6, %5, %4
  %9 = phi i32 [ 1, %7 ], [ 4, %6 ], [ 3, %5 ], [ 2, %4 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ], [ 1, %1 ]
  ret i32 %9
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK2vk6Format19isUnsignedComponentEi(%"class.vk::Format"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %12 [
    i32 0, label %13
    i32 1, label %13
    i32 2, label %13
    i32 3, label %13
    i32 4, label %13
    i32 5, label %13
    i32 6, label %13
    i32 7, label %13
    i32 8, label %13
    i32 9, label %13
    i32 13, label %13
    i32 15, label %13
    i32 16, label %13
    i32 18, label %13
    i32 20, label %13
    i32 22, label %13
    i32 37, label %13
    i32 39, label %13
    i32 41, label %13
    i32 43, label %13
    i32 44, label %13
    i32 46, label %13
    i32 48, label %13
    i32 50, label %13
    i32 51, label %13
    i32 53, label %13
    i32 55, label %13
    i32 57, label %13
    i32 58, label %13
    i32 60, label %13
    i32 62, label %13
    i32 64, label %13
    i32 66, label %13
    i32 68, label %13
    i32 70, label %13
    i32 72, label %13
    i32 74, label %13
    i32 77, label %13
    i32 79, label %13
    i32 81, label %13
    i32 84, label %13
    i32 86, label %13
    i32 88, label %13
    i32 91, label %13
    i32 93, label %13
    i32 95, label %13
    i32 98, label %13
    i32 101, label %13
    i32 104, label %13
    i32 107, label %13
    i32 110, label %13
    i32 113, label %13
    i32 116, label %13
    i32 119, label %13
    i32 122, label %13
    i32 123, label %13
    i32 124, label %13
    i32 125, label %13
    i32 127, label %13
    i32 128, label %13
    i32 129, label %13
    i32 126, label %13
    i32 130, label %13
    i32 131, label %13
    i32 132, label %13
    i32 133, label %13
    i32 134, label %13
    i32 135, label %13
    i32 136, label %13
    i32 137, label %13
    i32 138, label %13
    i32 139, label %13
    i32 141, label %13
    i32 143, label %13
    i32 145, label %13
    i32 146, label %13
    i32 153, label %13
    i32 155, label %13
    i32 147, label %13
    i32 148, label %13
    i32 149, label %13
    i32 150, label %13
    i32 151, label %13
    i32 152, label %13
    i32 157, label %13
    i32 159, label %13
    i32 161, label %13
    i32 163, label %13
    i32 165, label %13
    i32 167, label %13
    i32 169, label %13
    i32 171, label %13
    i32 173, label %13
    i32 175, label %13
    i32 177, label %13
    i32 179, label %13
    i32 181, label %13
    i32 183, label %13
    i32 158, label %13
    i32 160, label %13
    i32 162, label %13
    i32 164, label %13
    i32 166, label %13
    i32 168, label %13
    i32 170, label %13
    i32 172, label %13
    i32 174, label %13
    i32 176, label %13
    i32 178, label %13
    i32 180, label %13
    i32 182, label %13
    i32 184, label %13
    i32 38, label %5
    i32 40, label %5
    i32 42, label %5
    i32 45, label %5
    i32 47, label %5
    i32 49, label %5
    i32 52, label %5
    i32 54, label %5
    i32 56, label %5
    i32 59, label %5
    i32 61, label %5
    i32 63, label %5
    i32 65, label %5
    i32 67, label %5
    i32 69, label %5
    i32 92, label %5
    i32 94, label %5
    i32 96, label %5
    i32 97, label %5
    i32 108, label %5
    i32 109, label %5
    i32 120, label %5
    i32 121, label %5
    i32 140, label %5
    i32 142, label %5
    i32 144, label %5
    i32 154, label %5
    i32 156, label %5
    i32 1000156002, label %5
    i32 1000156003, label %5
    i32 10, label %6
    i32 11, label %6
    i32 12, label %6
    i32 14, label %6
    i32 71, label %6
    i32 73, label %6
    i32 75, label %6
    i32 76, label %6
    i32 99, label %6
    i32 100, label %6
    i32 111, label %6
    i32 112, label %6
    i32 17, label %8
    i32 19, label %8
    i32 21, label %8
    i32 78, label %8
    i32 80, label %8
    i32 82, label %8
    i32 83, label %8
    i32 102, label %8
    i32 103, label %8
    i32 114, label %8
    i32 115, label %8
    i32 85, label %10
    i32 87, label %10
    i32 89, label %10
    i32 90, label %10
    i32 105, label %10
    i32 106, label %10
    i32 117, label %10
    i32 118, label %10
  ]

5:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  br label %13

6:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  %7 = icmp sgt i32 %1, 0
  br label %13

8:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  %9 = icmp sgt i32 %1, 1
  br label %13

10:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2
  %11 = icmp sgt i32 %1, 2
  br label %13

12:                                               ; preds = %2
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 1489, i32 %4) #5
  br label %13

13:                                               ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %12, %10, %8, %6, %5
  %14 = phi i1 [ false, %12 ], [ %11, %10 ], [ %9, %8 ], [ %7, %6 ], [ false, %5 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ], [ true, %2 ]
  ret i1 %14
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK2vk6Format6pitchBEiib(%"class.vk::Format"* nocapture readonly, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = shl nsw i32 %2, 1
  %6 = add nsw i32 %5, %1
  %7 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  br i1 %3, label %13, label %9

9:                                                ; preds = %4
  switch i32 %8, label %10 [
    i32 124, label %13
    i32 128, label %13
    i32 125, label %13
    i32 129, label %13
    i32 126, label %13
    i32 130, label %13
  ]

10:                                               ; preds = %9
  %11 = add i32 %8, -127
  %12 = icmp ult i32 %11, 4
  br i1 %12, label %13, label %16

13:                                               ; preds = %4, %9, %9, %9, %9, %9, %9, %10
  %14 = add i32 %6, 1
  %15 = and i32 %14, -2
  br label %16

16:                                               ; preds = %13, %10
  %17 = phi i32 [ %15, %13 ], [ %6, %10 ]
  switch i32 %8, label %49 [
    i32 131, label %18
    i32 132, label %18
    i32 133, label %18
    i32 134, label %18
    i32 139, label %18
    i32 140, label %18
    i32 153, label %18
    i32 154, label %18
    i32 147, label %18
    i32 148, label %18
    i32 149, label %18
    i32 150, label %18
    i32 135, label %22
    i32 136, label %22
    i32 137, label %22
    i32 138, label %22
    i32 141, label %22
    i32 142, label %22
    i32 143, label %22
    i32 144, label %22
    i32 145, label %22
    i32 146, label %22
    i32 155, label %22
    i32 156, label %22
    i32 151, label %22
    i32 152, label %22
    i32 157, label %22
    i32 158, label %22
    i32 159, label %26
    i32 160, label %26
    i32 161, label %26
    i32 162, label %26
    i32 163, label %30
    i32 164, label %30
    i32 165, label %30
    i32 166, label %30
    i32 167, label %34
    i32 168, label %34
    i32 169, label %34
    i32 170, label %34
    i32 171, label %34
    i32 172, label %34
    i32 173, label %38
    i32 174, label %38
    i32 175, label %38
    i32 176, label %38
    i32 177, label %38
    i32 178, label %38
    i32 179, label %38
    i32 180, label %38
    i32 181, label %42
    i32 182, label %42
    i32 183, label %42
    i32 184, label %42
    i32 1000156002, label %46
    i32 1000156003, label %46
  ]

18:                                               ; preds = %16, %16, %16, %16, %16, %16, %16, %16, %16, %16, %16, %16
  %19 = add nsw i32 %17, 3
  %20 = sdiv i32 %19, 4
  %21 = shl nsw i32 %20, 3
  br label %52

22:                                               ; preds = %16, %16, %16, %16, %16, %16, %16, %16, %16, %16, %16, %16, %16, %16, %16, %16
  %23 = add nsw i32 %17, 3
  %24 = sdiv i32 %23, 4
  %25 = shl nsw i32 %24, 4
  br label %52

26:                                               ; preds = %16, %16, %16, %16
  %27 = add nsw i32 %17, 4
  %28 = sdiv i32 %27, 5
  %29 = shl nsw i32 %28, 4
  br label %52

30:                                               ; preds = %16, %16, %16, %16
  %31 = add nsw i32 %17, 5
  %32 = sdiv i32 %31, 6
  %33 = shl nsw i32 %32, 4
  br label %52

34:                                               ; preds = %16, %16, %16, %16, %16, %16
  %35 = add nsw i32 %17, 7
  %36 = sdiv i32 %35, 8
  %37 = shl nsw i32 %36, 4
  br label %52

38:                                               ; preds = %16, %16, %16, %16, %16, %16, %16, %16
  %39 = add nsw i32 %17, 9
  %40 = sdiv i32 %39, 10
  %41 = shl nsw i32 %40, 4
  br label %52

42:                                               ; preds = %16, %16, %16, %16
  %43 = add nsw i32 %17, 11
  %44 = sdiv i32 %43, 12
  %45 = shl nsw i32 %44, 4
  br label %52

46:                                               ; preds = %16, %16
  %47 = add i32 %17, 15
  %48 = and i32 %47, -16
  br label %52

49:                                               ; preds = %16
  %50 = tail call i32 @_ZNK2vk6Format5bytesEv(%"class.vk::Format"* %0) #4
  %51 = mul nsw i32 %50, %17
  br label %52

52:                                               ; preds = %49, %46, %42, %38, %34, %30, %26, %22, %18
  %53 = phi i32 [ %51, %49 ], [ %48, %46 ], [ %45, %42 ], [ %41, %38 ], [ %37, %34 ], [ %33, %30 ], [ %29, %26 ], [ %25, %22 ], [ %21, %18 ]
  ret i32 %53
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK2vk6Format14sliceBUnpaddedEiiib(%"class.vk::Format"* nocapture readonly, i32, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = shl nsw i32 %3, 1
  %7 = add nsw i32 %6, %2
  %8 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 4
  br i1 %4, label %14, label %10

10:                                               ; preds = %5
  switch i32 %9, label %11 [
    i32 124, label %14
    i32 128, label %14
    i32 125, label %14
    i32 129, label %14
    i32 126, label %14
    i32 130, label %14
  ]

11:                                               ; preds = %10
  %12 = add i32 %9, -127
  %13 = icmp ult i32 %12, 4
  br i1 %13, label %14, label %17

14:                                               ; preds = %5, %10, %10, %10, %10, %10, %10, %11
  %15 = add i32 %7, 1
  %16 = and i32 %15, -2
  br label %17

17:                                               ; preds = %14, %11
  %18 = phi i32 [ %16, %14 ], [ %7, %11 ]
  switch i32 %9, label %54 [
    i32 131, label %19
    i32 132, label %19
    i32 133, label %19
    i32 134, label %19
    i32 135, label %19
    i32 136, label %19
    i32 137, label %19
    i32 138, label %19
    i32 139, label %19
    i32 140, label %19
    i32 141, label %19
    i32 142, label %19
    i32 153, label %19
    i32 154, label %19
    i32 155, label %19
    i32 156, label %19
    i32 147, label %19
    i32 148, label %19
    i32 149, label %19
    i32 150, label %19
    i32 151, label %19
    i32 152, label %19
    i32 157, label %19
    i32 158, label %19
    i32 159, label %19
    i32 160, label %19
    i32 161, label %24
    i32 162, label %24
    i32 163, label %24
    i32 164, label %24
    i32 167, label %24
    i32 168, label %24
    i32 173, label %24
    i32 174, label %24
    i32 165, label %29
    i32 166, label %29
    i32 169, label %29
    i32 170, label %29
    i32 175, label %29
    i32 176, label %29
    i32 171, label %34
    i32 172, label %34
    i32 177, label %34
    i32 178, label %34
    i32 179, label %39
    i32 180, label %39
    i32 181, label %39
    i32 182, label %39
    i32 183, label %44
    i32 184, label %44
    i32 1000156002, label %49
    i32 1000156003, label %49
  ]

19:                                               ; preds = %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17, %17
  %20 = tail call i32 @_ZNK2vk6Format6pitchBEiib(%"class.vk::Format"* %0, i32 %1, i32 %3, i1 zeroext %4) #4
  %21 = add nsw i32 %18, 3
  %22 = sdiv i32 %21, 4
  %23 = mul nsw i32 %20, %22
  br label %57

24:                                               ; preds = %17, %17, %17, %17, %17, %17, %17, %17
  %25 = tail call i32 @_ZNK2vk6Format6pitchBEiib(%"class.vk::Format"* %0, i32 %1, i32 %3, i1 zeroext %4) #4
  %26 = add nsw i32 %18, 4
  %27 = sdiv i32 %26, 5
  %28 = mul nsw i32 %25, %27
  br label %57

29:                                               ; preds = %17, %17, %17, %17, %17, %17
  %30 = tail call i32 @_ZNK2vk6Format6pitchBEiib(%"class.vk::Format"* %0, i32 %1, i32 %3, i1 zeroext %4) #4
  %31 = add nsw i32 %18, 5
  %32 = sdiv i32 %31, 6
  %33 = mul nsw i32 %30, %32
  br label %57

34:                                               ; preds = %17, %17, %17, %17
  %35 = tail call i32 @_ZNK2vk6Format6pitchBEiib(%"class.vk::Format"* %0, i32 %1, i32 %3, i1 zeroext %4) #4
  %36 = add nsw i32 %18, 7
  %37 = sdiv i32 %36, 8
  %38 = mul nsw i32 %35, %37
  br label %57

39:                                               ; preds = %17, %17, %17, %17
  %40 = tail call i32 @_ZNK2vk6Format6pitchBEiib(%"class.vk::Format"* %0, i32 %1, i32 %3, i1 zeroext %4) #4
  %41 = add nsw i32 %18, 9
  %42 = sdiv i32 %41, 10
  %43 = mul nsw i32 %40, %42
  br label %57

44:                                               ; preds = %17, %17
  %45 = tail call i32 @_ZNK2vk6Format6pitchBEiib(%"class.vk::Format"* %0, i32 %1, i32 %3, i1 zeroext %4) #4
  %46 = add nsw i32 %18, 11
  %47 = sdiv i32 %46, 12
  %48 = mul nsw i32 %45, %47
  br label %57

49:                                               ; preds = %17, %17
  %50 = tail call i32 @_ZNK2vk6Format6pitchBEiib(%"class.vk::Format"* %0, i32 %1, i32 %3, i1 zeroext %4) #4
  %51 = sdiv i32 %18, 2
  %52 = add nsw i32 %51, %18
  %53 = mul nsw i32 %50, %52
  br label %57

54:                                               ; preds = %17
  %55 = tail call i32 @_ZNK2vk6Format6pitchBEiib(%"class.vk::Format"* %0, i32 %1, i32 %3, i1 zeroext %4) #4
  %56 = mul nsw i32 %55, %18
  br label %57

57:                                               ; preds = %54, %49, %44, %39, %34, %29, %24, %19
  %58 = phi i32 [ %56, %54 ], [ %53, %49 ], [ %48, %44 ], [ %43, %39 ], [ %38, %34 ], [ %33, %29 ], [ %28, %24 ], [ %23, %19 ]
  ret i32 %58
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK2vk6Format6sliceBEiiib(%"class.vk::Format"* nocapture readonly, i32, i32, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %6 = tail call i32 @_ZNK2vk6Format14sliceBUnpaddedEiiib(%"class.vk::Format"* %0, i32 %1, i32 %2, i32 %3, i1 zeroext %4) #4
  %7 = add i32 %6, 30
  %8 = and i32 %7, -16
  ret i32 %8
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden { <2 x float>, <2 x float> } @_ZNK2vk6Format8getScaleEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %16 [
    i32 1, label %17
    i32 2, label %17
    i32 3, label %17
    i32 9, label %4
    i32 16, label %4
    i32 51, label %4
    i32 37, label %4
    i32 44, label %4
    i32 15, label %4
    i32 22, label %4
    i32 57, label %4
    i32 43, label %4
    i32 50, label %4
    i32 10, label %5
    i32 17, label %5
    i32 52, label %5
    i32 38, label %5
    i32 45, label %5
    i32 70, label %6
    i32 77, label %6
    i32 84, label %6
    i32 91, label %6
    i32 71, label %7
    i32 78, label %7
    i32 85, label %7
    i32 92, label %7
    i32 14, label %8
    i32 13, label %8
    i32 21, label %8
    i32 20, label %8
    i32 42, label %8
    i32 41, label %8
    i32 56, label %8
    i32 55, label %8
    i32 49, label %8
    i32 48, label %8
    i32 11, label %8
    i32 18, label %8
    i32 39, label %8
    i32 46, label %8
    i32 53, label %8
    i32 12, label %8
    i32 19, label %8
    i32 40, label %8
    i32 47, label %8
    i32 54, label %8
    i32 75, label %8
    i32 74, label %8
    i32 82, label %8
    i32 81, label %8
    i32 96, label %8
    i32 95, label %8
    i32 73, label %8
    i32 80, label %8
    i32 87, label %8
    i32 94, label %8
    i32 72, label %8
    i32 79, label %8
    i32 86, label %8
    i32 93, label %8
    i32 99, label %8
    i32 98, label %8
    i32 102, label %8
    i32 101, label %8
    i32 105, label %8
    i32 104, label %8
    i32 108, label %8
    i32 107, label %8
    i32 109, label %8
    i32 106, label %8
    i32 103, label %8
    i32 100, label %8
    i32 97, label %8
    i32 90, label %8
    i32 83, label %8
    i32 76, label %8
    i32 122, label %8
    i32 123, label %8
    i32 60, label %8
    i32 61, label %8
    i32 62, label %8
    i32 63, label %8
    i32 66, label %8
    i32 67, label %8
    i32 68, label %8
    i32 69, label %8
    i32 6, label %9
    i32 7, label %9
    i32 8, label %9
    i32 4, label %10
    i32 5, label %10
    i32 58, label %11
    i32 64, label %11
    i32 59, label %12
    i32 65, label %12
    i32 124, label %13
    i32 129, label %14
    i32 125, label %14
    i32 126, label %15
    i32 130, label %15
    i32 127, label %15
  ]

4:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %17

5:                                                ; preds = %1, %1, %1, %1, %1
  br label %17

6:                                                ; preds = %1, %1, %1, %1
  br label %17

7:                                                ; preds = %1, %1, %1, %1
  br label %17

8:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %17

9:                                                ; preds = %1, %1, %1
  br label %17

10:                                               ; preds = %1, %1
  br label %17

11:                                               ; preds = %1, %1
  br label %17

12:                                               ; preds = %1, %1
  br label %17

13:                                               ; preds = %1
  br label %17

14:                                               ; preds = %1, %1
  br label %17

15:                                               ; preds = %1, %1, %1
  br label %17

16:                                               ; preds = %1
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 1988, i32 %3) #5
  br label %17

17:                                               ; preds = %1, %1, %1, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4
  %18 = phi <2 x float> [ <float 1.000000e+00, float 1.000000e+00>, %16 ], [ <float 1.000000e+00, float 1.000000e+00>, %15 ], [ zeroinitializer, %14 ], [ zeroinitializer, %13 ], [ <float 5.110000e+02, float 1.000000e+00>, %12 ], [ <float 1.023000e+03, float 3.000000e+00>, %11 ], [ <float 3.100000e+01, float 1.000000e+00>, %10 ], [ <float 3.100000e+01, float 1.000000e+00>, %9 ], [ <float 1.000000e+00, float 1.000000e+00>, %8 ], [ <float 3.276700e+04, float 3.276700e+04>, %7 ], [ <float 6.553500e+04, float 6.553500e+04>, %6 ], [ <float 1.270000e+02, float 1.270000e+02>, %5 ], [ <float 2.550000e+02, float 2.550000e+02>, %4 ], [ <float 1.500000e+01, float 1.500000e+01>, %1 ], [ <float 1.500000e+01, float 1.500000e+01>, %1 ], [ <float 1.500000e+01, float 1.500000e+01>, %1 ]
  %19 = phi <2 x float> [ <float 1.000000e+00, float 1.000000e+00>, %16 ], [ <float 1.000000e+00, float 1.000000e+00>, %15 ], [ <float 0x416FFFFFE0000000, float 0.000000e+00>, %14 ], [ <float 6.553500e+04, float 0.000000e+00>, %13 ], [ <float 5.110000e+02, float 5.110000e+02>, %12 ], [ <float 1.023000e+03, float 1.023000e+03>, %11 ], [ <float 3.100000e+01, float 6.300000e+01>, %10 ], [ <float 3.100000e+01, float 3.100000e+01>, %9 ], [ <float 1.000000e+00, float 1.000000e+00>, %8 ], [ <float 3.276700e+04, float 3.276700e+04>, %7 ], [ <float 6.553500e+04, float 6.553500e+04>, %6 ], [ <float 1.270000e+02, float 1.270000e+02>, %5 ], [ <float 2.550000e+02, float 2.550000e+02>, %4 ], [ <float 1.500000e+01, float 1.500000e+01>, %1 ], [ <float 1.500000e+01, float 1.500000e+01>, %1 ], [ <float 1.500000e+01, float 1.500000e+01>, %1 ]
  %20 = insertvalue { <2 x float>, <2 x float> } undef, <2 x float> %19, 0
  %21 = insertvalue { <2 x float>, <2 x float> } %20, <2 x float> %18, 1
  ret { <2 x float>, <2 x float> } %21
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK2vk6Format28supportsColorAttachmentBlendEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %4 [
    i32 4, label %5
    i32 8, label %5
    i32 9, label %5
    i32 16, label %5
    i32 37, label %5
    i32 43, label %5
    i32 44, label %5
    i32 50, label %5
    i32 51, label %5
    i32 57, label %5
    i32 64, label %5
    i32 76, label %5
    i32 83, label %5
    i32 97, label %5
    i32 58, label %5
    i32 100, label %5
    i32 103, label %5
    i32 109, label %5
    i32 122, label %5
  ]

4:                                                ; preds = %1
  br label %5

5:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %4
  %6 = phi i1 [ false, %4 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %6
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK2vk6Format27has16bitPackedTextureFormatEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZNK2vk6Format5bytesEv(%"class.vk::Format"* %0) #4
  %3 = icmp eq i32 %2, 2
  br i1 %3, label %4, label %9

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  switch i32 %6, label %8 [
    i32 3, label %9
    i32 4, label %9
    i32 8, label %9
    i32 21, label %7
    i32 20, label %7
    i32 16, label %7
    i32 17, label %7
    i32 22, label %7
    i32 70, label %7
    i32 71, label %7
    i32 75, label %7
    i32 74, label %7
    i32 76, label %7
    i32 124, label %7
  ]

7:                                                ; preds = %4, %4, %4, %4, %4, %4, %4, %4, %4, %4, %4
  br label %9

8:                                                ; preds = %4
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 2052, i32 %6) #5
  br label %9

9:                                                ; preds = %4, %4, %4, %1, %8, %7
  %10 = phi i1 [ false, %8 ], [ false, %7 ], [ false, %1 ], [ true, %4 ], [ true, %4 ], [ true, %4 ]
  ret i1 %10
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK2vk6Format24has8bitTextureComponentsEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %5 [
    i32 9, label %6
    i32 10, label %6
    i32 13, label %6
    i32 14, label %6
    i32 15, label %6
    i32 16, label %6
    i32 17, label %6
    i32 20, label %6
    i32 21, label %6
    i32 22, label %6
    i32 37, label %6
    i32 38, label %6
    i32 41, label %6
    i32 42, label %6
    i32 43, label %6
    i32 44, label %6
    i32 45, label %6
    i32 48, label %6
    i32 49, label %6
    i32 50, label %6
    i32 51, label %6
    i32 52, label %6
    i32 55, label %6
    i32 56, label %6
    i32 57, label %6
    i32 127, label %6
    i32 8, label %4
    i32 3, label %4
    i32 4, label %4
    i32 100, label %4
    i32 103, label %4
    i32 109, label %4
    i32 70, label %4
    i32 71, label %4
    i32 77, label %4
    i32 78, label %4
    i32 91, label %4
    i32 92, label %4
    i32 99, label %4
    i32 98, label %4
    i32 102, label %4
    i32 101, label %4
    i32 108, label %4
    i32 107, label %4
    i32 75, label %4
    i32 74, label %4
    i32 76, label %4
    i32 82, label %4
    i32 81, label %4
    i32 83, label %4
    i32 96, label %4
    i32 95, label %4
    i32 97, label %4
    i32 1000156002, label %4
    i32 1000156003, label %4
    i32 64, label %4
    i32 68, label %4
    i32 58, label %4
    i32 62, label %4
    i32 123, label %4
    i32 122, label %4
    i32 124, label %4
  ]

4:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %6

5:                                                ; preds = %1
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 2127, i32 %3) #5
  br label %6

6:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %5, %4
  %7 = phi i1 [ false, %5 ], [ false, %4 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %7
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK2vk6Format25has16bitTextureComponentsEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %5 [
    i32 8, label %6
    i32 3, label %6
    i32 4, label %6
    i32 9, label %6
    i32 10, label %6
    i32 13, label %6
    i32 14, label %6
    i32 15, label %6
    i32 16, label %6
    i32 17, label %6
    i32 20, label %6
    i32 21, label %6
    i32 22, label %6
    i32 37, label %6
    i32 38, label %6
    i32 41, label %6
    i32 42, label %6
    i32 43, label %6
    i32 44, label %6
    i32 45, label %6
    i32 48, label %6
    i32 49, label %6
    i32 50, label %6
    i32 51, label %6
    i32 52, label %6
    i32 55, label %6
    i32 56, label %6
    i32 57, label %6
    i32 98, label %6
    i32 99, label %6
    i32 100, label %6
    i32 101, label %6
    i32 102, label %6
    i32 103, label %6
    i32 107, label %6
    i32 108, label %6
    i32 109, label %6
    i32 1000156002, label %6
    i32 1000156003, label %6
    i32 64, label %6
    i32 68, label %6
    i32 58, label %6
    i32 62, label %6
    i32 123, label %6
    i32 122, label %6
    i32 127, label %6
    i32 70, label %4
    i32 71, label %4
    i32 74, label %4
    i32 75, label %4
    i32 76, label %4
    i32 77, label %4
    i32 78, label %4
    i32 81, label %4
    i32 82, label %4
    i32 83, label %4
    i32 91, label %4
    i32 92, label %4
    i32 95, label %4
    i32 96, label %4
    i32 97, label %4
    i32 124, label %4
  ]

4:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1
  br label %6

5:                                                ; preds = %1
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 2202, i32 %3) #5
  br label %6

6:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %5, %4
  %7 = phi i1 [ false, %5 ], [ true, %4 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ]
  ret i1 %7
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK2vk6Format32has32bitIntegerTextureComponentsEv(%"class.vk::Format"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 4
  switch i32 %3, label %5 [
    i32 8, label %6
    i32 3, label %6
    i32 4, label %6
    i32 9, label %6
    i32 10, label %6
    i32 13, label %6
    i32 14, label %6
    i32 15, label %6
    i32 16, label %6
    i32 17, label %6
    i32 20, label %6
    i32 21, label %6
    i32 22, label %6
    i32 37, label %6
    i32 38, label %6
    i32 41, label %6
    i32 42, label %6
    i32 43, label %6
    i32 44, label %6
    i32 45, label %6
    i32 48, label %6
    i32 49, label %6
    i32 50, label %6
    i32 51, label %6
    i32 52, label %6
    i32 55, label %6
    i32 56, label %6
    i32 57, label %6
    i32 70, label %6
    i32 71, label %6
    i32 74, label %6
    i32 75, label %6
    i32 76, label %6
    i32 77, label %6
    i32 78, label %6
    i32 81, label %6
    i32 82, label %6
    i32 83, label %6
    i32 91, label %6
    i32 92, label %6
    i32 95, label %6
    i32 96, label %6
    i32 97, label %6
    i32 100, label %6
    i32 103, label %6
    i32 109, label %6
    i32 1000156002, label %6
    i32 1000156003, label %6
    i32 64, label %6
    i32 68, label %6
    i32 58, label %6
    i32 62, label %6
    i32 123, label %6
    i32 122, label %6
    i32 124, label %6
    i32 127, label %6
    i32 99, label %4
    i32 98, label %4
    i32 102, label %4
    i32 101, label %4
    i32 108, label %4
    i32 107, label %4
  ]

4:                                                ; preds = %1, %1, %1, %1, %1, %1
  br label %6

5:                                                ; preds = %1
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 2277, i32 %3) #5
  br label %6

6:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %5, %4
  %7 = phi i1 [ false, %5 ], [ true, %4 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ], [ false, %1 ]
  ret i1 %7
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZNK2vk6Format14isRGBComponentEi(%"class.vk::Format"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.vk::Format", %"class.vk::Format"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  switch i32 %4, label %11 [
    i32 9, label %5
    i32 10, label %5
    i32 13, label %5
    i32 14, label %5
    i32 15, label %5
    i32 70, label %5
    i32 71, label %5
    i32 74, label %5
    i32 75, label %5
    i32 76, label %5
    i32 98, label %5
    i32 99, label %5
    i32 100, label %5
    i32 16, label %7
    i32 17, label %7
    i32 20, label %7
    i32 21, label %7
    i32 22, label %7
    i32 77, label %7
    i32 78, label %7
    i32 81, label %7
    i32 82, label %7
    i32 83, label %7
    i32 101, label %7
    i32 102, label %7
    i32 103, label %7
    i32 8, label %9
    i32 3, label %9
    i32 4, label %9
    i32 37, label %9
    i32 38, label %9
    i32 41, label %9
    i32 42, label %9
    i32 43, label %9
    i32 44, label %9
    i32 45, label %9
    i32 48, label %9
    i32 49, label %9
    i32 50, label %9
    i32 51, label %9
    i32 52, label %9
    i32 55, label %9
    i32 56, label %9
    i32 57, label %9
    i32 91, label %9
    i32 96, label %9
    i32 95, label %9
    i32 97, label %9
    i32 108, label %9
    i32 107, label %9
    i32 109, label %9
    i32 1000156002, label %9
    i32 1000156003, label %9
    i32 123, label %9
    i32 122, label %9
    i32 126, label %12
    i32 124, label %12
    i32 127, label %12
  ]

5:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  %6 = icmp slt i32 %1, 1
  br label %12

7:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  %8 = icmp slt i32 %1, 2
  br label %12

9:                                                ; preds = %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2, %2
  %10 = icmp slt i32 %1, 3
  br label %12

11:                                               ; preds = %2
  tail call void (i8*, ...) @_ZN2sw4warnEPKcz(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.1, i64 0, i64 0), i32 2350, i32 %4) #5
  br label %12

12:                                               ; preds = %2, %2, %2, %11, %9, %7, %5
  %13 = phi i1 [ false, %11 ], [ %10, %9 ], [ %8, %7 ], [ %6, %5 ], [ false, %2 ], [ false, %2 ], [ false, %2 ]
  ret i1 %13
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden zeroext i8 @_ZN2vk6Format9mapTo8bitE8VkFormat(i32) local_unnamed_addr #3 align 2 {
  %2 = icmp sgt i32 %0, 1000156033
  br i1 %2, label %25, label %3

3:                                                ; preds = %1
  %4 = icmp ult i32 %0, 185
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = trunc i32 %0 to i8
  br label %25

7:                                                ; preds = %3
  %8 = add i32 %0, -1000156000
  %9 = icmp ult i32 %8, 34
  br i1 %9, label %10, label %13

10:                                               ; preds = %7
  %11 = trunc i32 %0 to i8
  %12 = add nuw i8 %11, 89
  br label %25

13:                                               ; preds = %7
  %14 = and i32 %0, -8
  %15 = icmp eq i32 %14, 1000054000
  br i1 %15, label %16, label %19

16:                                               ; preds = %13
  %17 = trunc i32 %0 to i8
  %18 = add i8 %17, -21
  br label %25

19:                                               ; preds = %13
  %20 = add i32 %0, -1000066000
  %21 = icmp ult i32 %20, 14
  br i1 %21, label %22, label %25

22:                                               ; preds = %19
  %23 = trunc i32 %0 to i8
  %24 = add nuw nsw i8 %23, 19
  br label %25

25:                                               ; preds = %1, %5, %10, %16, %19, %22
  %26 = phi i8 [ %6, %5 ], [ %12, %10 ], [ %18, %16 ], [ %24, %22 ], [ 0, %1 ], [ 0, %19 ]
  ret i8 %26
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i32 @_ZN2vk6Format11mapFrom8bitEh(i8 zeroext) local_unnamed_addr #3 align 2 {
  %2 = zext i8 %0 to i32
  %3 = icmp ult i8 %0, -71
  br i1 %3, label %16, label %4

4:                                                ; preds = %1
  %5 = icmp ult i8 %0, -37
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = add nuw nsw i32 %2, 1000155815
  br label %16

8:                                                ; preds = %4
  %9 = icmp ult i8 %0, -29
  br i1 %9, label %10, label %12

10:                                               ; preds = %8
  %11 = add nuw nsw i32 %2, 1000053781
  br label %16

12:                                               ; preds = %8
  %13 = icmp ult i8 %0, -15
  %14 = add nuw nsw i32 %2, 1000065773
  %15 = select i1 %13, i32 %14, i32 0
  br label %16

16:                                               ; preds = %1, %6, %10, %12
  %17 = phi i32 [ %15, %12 ], [ %7, %6 ], [ %11, %10 ], [ %2, %1 ]
  ret i32 %17
}

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { optsize }
attributes #5 = { nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
