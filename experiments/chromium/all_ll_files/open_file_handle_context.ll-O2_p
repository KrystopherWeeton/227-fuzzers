; ModuleID = '../../storage/browser/file_system/quota/open_file_handle_context.cc'
source_filename = "../../storage/browser/file_system/quota/open_file_handle_context.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.storage::OpenFileHandleContext" = type <{ i32 (...)**, %"class.base::RefCounted", [4 x i8], i64, i64, i64, %"class.base::FilePath", %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", [7 x i8] }>
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::FilePath" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.scoped_refptr = type { %"class.storage::QuotaReservationBuffer"* }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.storage::QuotaReservationBuffer" = type <{ i32 (...)**, %"class.base::RefCounted.1", [4 x i8], %"class.std::__1::map", %"class.base::WeakPtr", %"class.url::Origin", i32, [4 x i8], i64, %"class.base::SequenceCheckerDoNothing", [7 x i8] }>
%"class.base::RefCounted.1" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2", %"class.std::__1::__compressed_pair.7" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.7" = type { %"struct.std::__1::__compressed_pair_elem.8" }
%"struct.std::__1::__compressed_pair_elem.8" = type { i64 }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.10 }
%class.scoped_refptr.10 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.12" }
%"struct.std::__1::atomic.12" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__atomic_base.14" }
%"struct.std::__1::__atomic_base.14" = type { %"struct.std::__1::__cxx_atomic_impl.15" }
%"struct.std::__1::__cxx_atomic_impl.15" = type { %"struct.std::__1::__cxx_atomic_base_impl.16" }
%"struct.std::__1::__cxx_atomic_base_impl.16" = type { i8 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.17 }
%union.anon.17 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }

@_ZTVN7storage21OpenFileHandleContextE = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.storage::OpenFileHandleContext"*)* @_ZN7storage21OpenFileHandleContextD2Ev to i8*), i8* bitcast (void (%"class.storage::OpenFileHandleContext"*)* @_ZN7storage21OpenFileHandleContextD0Ev to i8*)] }, align 8

@_ZN7storage21OpenFileHandleContextC1ERKN4base8FilePathEPNS_22QuotaReservationBufferE = hidden unnamed_addr alias void (%"class.storage::OpenFileHandleContext"*, %"class.base::FilePath"*, %"class.storage::QuotaReservationBuffer"*), void (%"class.storage::OpenFileHandleContext"*, %"class.base::FilePath"*, %"class.storage::QuotaReservationBuffer"*)* @_ZN7storage21OpenFileHandleContextC2ERKN4base8FilePathEPNS_22QuotaReservationBufferE
@_ZN7storage21OpenFileHandleContextD1Ev = hidden unnamed_addr alias void (%"class.storage::OpenFileHandleContext"*), void (%"class.storage::OpenFileHandleContext"*)* @_ZN7storage21OpenFileHandleContextD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7storage21OpenFileHandleContextC2ERKN4base8FilePathEPNS_22QuotaReservationBufferE(%"class.storage::OpenFileHandleContext"*, %"class.base::FilePath"* dereferenceable(24), %"class.storage::QuotaReservationBuffer"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.storage::OpenFileHandleContext", %"class.storage::OpenFileHandleContext"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 0, i32* %4, align 4
  %5 = getelementptr inbounds %"class.storage::OpenFileHandleContext", %"class.storage::OpenFileHandleContext"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7storage21OpenFileHandleContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.storage::OpenFileHandleContext", %"class.storage::OpenFileHandleContext"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.storage::OpenFileHandleContext", %"class.storage::OpenFileHandleContext"* %0, i64 0, i32 4
  %8 = getelementptr inbounds %"class.storage::OpenFileHandleContext", %"class.storage::OpenFileHandleContext"* %0, i64 0, i32 6
  %9 = bitcast i64* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false)
  tail call void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"* %8, %"class.base::FilePath"* dereferenceable(24) %1) #7
  %10 = getelementptr inbounds %"class.storage::OpenFileHandleContext", %"class.storage::OpenFileHandleContext"* %0, i64 0, i32 7, i32 0
  store %"class.storage::QuotaReservationBuffer"* %2, %"class.storage::QuotaReservationBuffer"** %10, align 8
  %11 = icmp eq %"class.storage::QuotaReservationBuffer"* %2, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.storage::QuotaReservationBuffer", %"class.storage::QuotaReservationBuffer"* %2, i64 0, i32 1, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %13) #7
  br label %14

14:                                               ; preds = %3, %12
  %15 = tail call zeroext i1 @_ZN4base11GetFileSizeERKNS_8FilePathEPl(%"class.base::FilePath"* dereferenceable(24) %1, i64* %6) #7
  %16 = load i64, i64* %6, align 8
  store i64 %16, i64* %7, align 8
  ret void
}

declare void @_ZN4base8FilePathC1ERKS0_(%"class.base::FilePath"*, %"class.base::FilePath"* dereferenceable(24)) unnamed_addr #1

declare zeroext i1 @_ZN4base11GetFileSizeERKNS_8FilePathEPl(%"class.base::FilePath"* dereferenceable(24), i64*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i64 @_ZN7storage21OpenFileHandleContext22UpdateMaxWrittenOffsetEl(%"class.storage::OpenFileHandleContext"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.storage::OpenFileHandleContext", %"class.storage::OpenFileHandleContext"* %0, i64 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = icmp slt i64 %4, %1
  br i1 %5, label %6, label %8

6:                                                ; preds = %2
  %7 = sub nsw i64 %1, %4
  store i64 %1, i64* %3, align 8
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i64 [ %7, %6 ], [ 0, %2 ]
  ret i64 %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN7storage21OpenFileHandleContext24AddAppendModeWriteAmountEl(%"class.storage::OpenFileHandleContext"* nocapture, i64) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.storage::OpenFileHandleContext", %"class.storage::OpenFileHandleContext"* %0, i64 0, i32 5
  %4 = load i64, i64* %3, align 8
  %5 = add nsw i64 %4, %1
  store i64 %5, i64* %3, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK7storage21OpenFileHandleContext20GetEstimatedFileSizeEv(%"class.storage::OpenFileHandleContext"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.storage::OpenFileHandleContext", %"class.storage::OpenFileHandleContext"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.storage::OpenFileHandleContext", %"class.storage::OpenFileHandleContext"* %0, i64 0, i32 5
  %5 = load i64, i64* %4, align 8
  %6 = add nsw i64 %5, %3
  ret i64 %6
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK7storage21OpenFileHandleContext19GetMaxWrittenOffsetEv(%"class.storage::OpenFileHandleContext"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.storage::OpenFileHandleContext", %"class.storage::OpenFileHandleContext"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7storage21OpenFileHandleContextD2Ev(%"class.storage::OpenFileHandleContext"*) unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.storage::OpenFileHandleContext", %"class.storage::OpenFileHandleContext"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN7storage21OpenFileHandleContextE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #7
  store i64 0, i64* %2, align 8
  %5 = getelementptr inbounds %"class.storage::OpenFileHandleContext", %"class.storage::OpenFileHandleContext"* %0, i64 0, i32 6
  %6 = call zeroext i1 @_ZN4base11GetFileSizeERKNS_8FilePathEPl(%"class.base::FilePath"* dereferenceable(24) %5, i64* nonnull %2) #7
  %7 = load i64, i64* %2, align 8
  %8 = getelementptr inbounds %"class.storage::OpenFileHandleContext", %"class.storage::OpenFileHandleContext"* %0, i64 0, i32 3
  %9 = load i64, i64* %8, align 8
  %10 = sub nsw i64 %7, %9
  %11 = getelementptr inbounds %"class.storage::OpenFileHandleContext", %"class.storage::OpenFileHandleContext"* %0, i64 0, i32 4
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.storage::OpenFileHandleContext", %"class.storage::OpenFileHandleContext"* %0, i64 0, i32 5
  %14 = load i64, i64* %13, align 8
  %15 = add nsw i64 %14, %12
  %16 = icmp slt i64 %15, %7
  %17 = select i1 %16, i64 %7, i64 %15
  %18 = sub nsw i64 %17, %9
  %19 = getelementptr inbounds %"class.storage::OpenFileHandleContext", %"class.storage::OpenFileHandleContext"* %0, i64 0, i32 7, i32 0
  %20 = load %"class.storage::QuotaReservationBuffer"*, %"class.storage::QuotaReservationBuffer"** %19, align 8
  call void @_ZN7storage22QuotaReservationBuffer16CommitFileGrowthEll(%"class.storage::QuotaReservationBuffer"* %20, i64 %18, i64 %10) #7
  %21 = load %"class.storage::QuotaReservationBuffer"*, %"class.storage::QuotaReservationBuffer"** %19, align 8
  call void @_ZN7storage22QuotaReservationBuffer27DetachOpenFileHandleContextEPNS_21OpenFileHandleContextE(%"class.storage::QuotaReservationBuffer"* %21, %"class.storage::OpenFileHandleContext"* %0) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #7
  %22 = load %"class.storage::QuotaReservationBuffer"*, %"class.storage::QuotaReservationBuffer"** %19, align 8
  %23 = icmp eq %"class.storage::QuotaReservationBuffer"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %1
  %25 = getelementptr inbounds %"class.storage::QuotaReservationBuffer", %"class.storage::QuotaReservationBuffer"* %22, i64 0, i32 1
  %26 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %25, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %26) #7
  %27 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %25, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %37

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.base::RefCounted.1", %"class.base::RefCounted.1"* %25, i64 -2
  %32 = bitcast %"class.base::RefCounted.1"* %31 to %"class.storage::QuotaReservationBuffer"*
  %33 = bitcast %"class.base::RefCounted.1"* %31 to void (%"class.storage::QuotaReservationBuffer"*)***
  %34 = load void (%"class.storage::QuotaReservationBuffer"*)**, void (%"class.storage::QuotaReservationBuffer"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.storage::QuotaReservationBuffer"*)*, void (%"class.storage::QuotaReservationBuffer"*)** %34, i64 1
  %36 = load void (%"class.storage::QuotaReservationBuffer"*)*, void (%"class.storage::QuotaReservationBuffer"*)** %35, align 8
  call void %36(%"class.storage::QuotaReservationBuffer"* nonnull %32) #7
  br label %37

37:                                               ; preds = %1, %24, %30
  call void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"* %5) #7
  ret void
}

declare void @_ZN7storage22QuotaReservationBuffer16CommitFileGrowthEll(%"class.storage::QuotaReservationBuffer"*, i64, i64) local_unnamed_addr #1

declare void @_ZN7storage22QuotaReservationBuffer27DetachOpenFileHandleContextEPNS_21OpenFileHandleContextE(%"class.storage::QuotaReservationBuffer"*, %"class.storage::OpenFileHandleContext"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8FilePathD1Ev(%"class.base::FilePath"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN7storage21OpenFileHandleContextD0Ev(%"class.storage::OpenFileHandleContext"*) unnamed_addr #0 align 2 {
  tail call void @_ZN7storage21OpenFileHandleContextD2Ev(%"class.storage::OpenFileHandleContext"* %0) #7
  %2 = bitcast %"class.storage::OpenFileHandleContext"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
