; ModuleID = '../../ui/views/animation/installable_ink_drop_painter.cc'
source_filename = "../../ui/views/animation/installable_ink_drop_painter.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.cc::PaintFlags" = type <{ %class.sk_sp.32, %class.sk_sp.33, %class.sk_sp.67, %class.sk_sp.68, %class.sk_sp.69, %class.sk_sp.70, i32, float, float, i32, %union.anon.71, [4 x i8] }>
%class.sk_sp.32 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp.33 = type { %"class.cc::PaintShader"* }
%"class.cc::PaintShader" = type <{ %class.SkRefCnt.base, i8, [3 x i8], i32, float, float, i32, i32, i32, i8, [3 x i8], %"class.absl::optional.34", %struct.SkPoint, %struct.SkRect, %struct.SkPoint, %struct.SkPoint, float, float, %"class.cc::PaintImage", %class.sk_sp.40, i32, %"class.absl::optional.47", %"class.std::__1::vector", %"class.std::__1::vector.55", %class.sk_sp.62, %class.sk_sp.39, i32, [4 x i8] }>
%"class.absl::optional.34" = type { %"class.absl::optional_internal::optional_data.35" }
%"class.absl::optional_internal::optional_data.35" = type { %"class.absl::optional_internal::optional_data_base.36" }
%"class.absl::optional_internal::optional_data_base.36" = type { %"class.absl::optional_internal::optional_data_dtor_base.37" }
%"class.absl::optional_internal::optional_data_dtor_base.37" = type { i8, %union.anon.38 }
%union.anon.38 = type { %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkPoint = type { float, float }
%"class.cc::PaintImage" = type { %class.sk_sp.39, %class.sk_sp.40, %"class.gfx::Rect", i32, %class.sk_sp.45, %class.sk_sp.46, i32, i32, i32, i32, i8, i8, i32, i32, %class.sk_sp.39, %class.scoped_refptr }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%class.sk_sp.45 = type { %"class.cc::PaintImageGenerator"* }
%"class.cc::PaintImageGenerator" = type opaque
%class.sk_sp.46 = type { %"class.cc::TextureBacking"* }
%"class.cc::TextureBacking" = type opaque
%class.scoped_refptr = type { %"class.cc::PaintWorkletInput"* }
%"class.cc::PaintWorkletInput" = type opaque
%class.sk_sp.40 = type { %"class.cc::PaintOpBuffer"* }
%"class.cc::PaintOpBuffer" = type <{ %class.SkRefCnt.base, [4 x i8], %"class.std::__1::unique_ptr.41", i64, i64, i64, i64, i64, i32, i8, [3 x i8] }>
%"class.std::__1::unique_ptr.41" = type { %"class.std::__1::__compressed_pair.42" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.43" }
%"struct.std::__1::__compressed_pair_elem.43" = type { i8* }
%"class.absl::optional.47" = type { %"class.absl::optional_internal::optional_data.48" }
%"class.absl::optional_internal::optional_data.48" = type { %"class.absl::optional_internal::optional_data_base.49" }
%"class.absl::optional_internal::optional_data_base.49" = type { %"class.absl::optional_internal::optional_data_dtor_base.50" }
%"class.absl::optional_internal::optional_data_dtor_base.50" = type { i8, %union.anon.51 }
%union.anon.51 = type { %"class.gfx::SizeF" }
%"class.gfx::SizeF" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { i32* }
%"class.std::__1::vector.55" = type { %"class.std::__1::__vector_base.56" }
%"class.std::__1::__vector_base.56" = type { float*, float*, %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { float* }
%class.sk_sp.62 = type { %class.SkPicture* }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.63", [7 x i8] }>
%"struct.std::__1::atomic.63" = type { %"struct.std::__1::__atomic_base.64" }
%"struct.std::__1::__atomic_base.64" = type { %"struct.std::__1::__cxx_atomic_impl.65" }
%"struct.std::__1::__cxx_atomic_impl.65" = type { %"struct.std::__1::__cxx_atomic_base_impl.66" }
%"struct.std::__1::__cxx_atomic_base_impl.66" = type { i8 }
%class.sk_sp.39 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp.0, i32, i32 }
%class.sk_sp.0 = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.2" }
%"struct.std::__1::atomic.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__cxx_atomic_impl.5" }
%"struct.std::__1::__cxx_atomic_impl.5" = type { %"struct.std::__1::__cxx_atomic_base_impl.6" }
%"struct.std::__1::__cxx_atomic_base_impl.6" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.sk_sp.67 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.68 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.69 = type { %class.SkDrawLooper* }
%class.SkDrawLooper = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.70 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type opaque
%union.anon.71 = type { i32 }
%"struct.views::InstallableInkDropPainter::State" = type { %"class.gfx::PointF", float, float }
%"class.gfx::PointF" = type { float, float }
%"class.views::InstallableInkDropPainter" = type { %"class.views::Painter", %"struct.views::InstallableInkDropConfig"*, %"struct.views::InstallableInkDropPainter::State"* }
%"class.views::Painter" = type { i32 (...)** }
%"struct.views::InstallableInkDropConfig" = type { i32, float, float }
%"class.gfx::Canvas" = type { i32 (...)**, float, %"class.absl::optional", %"class.absl::optional.8", %"class.cc::PaintCanvas"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %class.SkBitmap }
%class.SkBitmap = type { %class.sk_sp, %class.SkPixmap, %class.sk_sp.7 }
%class.sk_sp = type { %class.SkPixelRef* }
%class.SkPixelRef = type opaque
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.7 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%"class.absl::optional.8" = type { %"class.absl::optional_internal::optional_data.9" }
%"class.absl::optional_internal::optional_data.9" = type { %"class.absl::optional_internal::optional_data_base.10" }
%"class.absl::optional_internal::optional_data_base.10" = type { %"class.absl::optional_internal::optional_data_dtor_base.11" }
%"class.absl::optional_internal::optional_data_dtor_base.11" = type { i8, [7 x i8], %union.anon.12 }
%union.anon.12 = type { %"class.cc::SkiaPaintCanvas" }
%"class.cc::SkiaPaintCanvas" = type <{ %"class.cc::PaintCanvas", %class.SkCanvas*, %class.SkBitmap, %"class.std::__1::unique_ptr.22", %"class.cc::ImageProvider"*, %"struct.cc::SkiaPaintCanvas::ContextFlushes", i32, [4 x i8] }>
%"class.cc::PaintCanvas" = type { i32 (...)**, %"class.printing::MetafileSkia"*, %"class.paint_preview::PaintPreviewTracker"* }
%"class.printing::MetafileSkia" = type opaque
%"class.paint_preview::PaintPreviewTracker" = type opaque
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.13, [384 x i64], %class.sk_sp.14, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.16" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.13 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.14 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type opaque
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%class.SkSurface_Base = type opaque
%struct.SkIRect = type { i32, i32, i32, i32 }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %class.SkCanvas* }
%"class.cc::ImageProvider" = type opaque
%"struct.cc::SkiaPaintCanvas::ContextFlushes" = type { i8, i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.gfx::Vector2dF" = type { float, float }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }

$_ZN5views25InstallableInkDropPainterD0Ev = comdat any

@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str = private unnamed_addr constant [33 x i8] c"InstallableInkDropPainter::Paint\00", align 1
@__const._ZN5views25InstallableInkDropPainter5PaintEPN3gfx6CanvasERKNS1_4SizeE.flags = private unnamed_addr constant %"class.cc::PaintFlags" <{ %class.sk_sp.32 { %class.SkPathEffect* inttoptr (i64 -6148914691236517206 to %class.SkPathEffect*) }, %class.sk_sp.33 { %"class.cc::PaintShader"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintShader"*) }, %class.sk_sp.67 { %class.SkMaskFilter* inttoptr (i64 -6148914691236517206 to %class.SkMaskFilter*) }, %class.sk_sp.68 { %class.SkColorFilter* inttoptr (i64 -6148914691236517206 to %class.SkColorFilter*) }, %class.sk_sp.69 { %class.SkDrawLooper* inttoptr (i64 -6148914691236517206 to %class.SkDrawLooper*) }, %class.sk_sp.70 { %"class.cc::PaintFilter"* inttoptr (i64 -6148914691236517206 to %"class.cc::PaintFilter"*) }, i32 -1431655766, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i32 -1431655766, %union.anon.71 { i32 -1431655766 }, [4 x i8] c"\AA\AA\AA\AA" }>, align 8
@_ZTVN5views25InstallableInkDropPainterE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.views::Painter"*)* @_ZN5views7PainterD2Ev to i8*), i8* bitcast (void (%"class.views::InstallableInkDropPainter"*)* @_ZN5views25InstallableInkDropPainterD0Ev to i8*), i8* bitcast (i64 (%"class.views::InstallableInkDropPainter"*)* @_ZNK5views25InstallableInkDropPainter14GetMinimumSizeEv to i8*), i8* bitcast (void (%"class.views::InstallableInkDropPainter"*, %"class.gfx::Canvas"*, %"class.gfx::Size"*)* @_ZN5views25InstallableInkDropPainter5PaintEPN3gfx6CanvasERKNS1_4SizeE to i8*)] }, align 8

@_ZN5views25InstallableInkDropPainter5StateC1Ev = hidden unnamed_addr alias void (%"struct.views::InstallableInkDropPainter::State"*), void (%"struct.views::InstallableInkDropPainter::State"*)* @_ZN5views25InstallableInkDropPainter5StateC2Ev
@_ZN5views25InstallableInkDropPainter5StateD1Ev = hidden unnamed_addr alias void (%"struct.views::InstallableInkDropPainter::State"*), void (%"struct.views::InstallableInkDropPainter::State"*)* @_ZN5views25InstallableInkDropPainter5StateD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5views25InstallableInkDropPainter5StateC2Ev(%"struct.views::InstallableInkDropPainter::State"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.views::InstallableInkDropPainter::State"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %2, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5views25InstallableInkDropPainter5StateD2Ev(%"struct.views::InstallableInkDropPainter::State"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK5views25InstallableInkDropPainter14GetMinimumSizeEv(%"class.views::InstallableInkDropPainter"* nocapture readnone) unnamed_addr #1 align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5views25InstallableInkDropPainter5PaintEPN3gfx6CanvasERKNS1_4SizeE(%"class.views::InstallableInkDropPainter"* nocapture readonly, %"class.gfx::Canvas"*, %"class.gfx::Size"* nocapture readonly dereferenceable(8)) unnamed_addr #2 align 2 {
  %4 = alloca %"class.base::TimeTicks", align 8
  %5 = alloca %"class.gfx::Rect", align 4
  %6 = alloca %"class.gfx::Rect", align 4
  %7 = alloca %"class.gfx::Vector2dF", align 4
  %8 = alloca %"class.cc::PaintFlags", align 8
  %9 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 134, i32 0), align 16
  %10 = and i8 %9, 25
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %18, label %12, !prof !2

12:                                               ; preds = %3
  %13 = tail call i32 @_ZN4base14PlatformThread9CurrentIdEv() #7
  %14 = bitcast %"class.base::TimeTicks"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #7
  %15 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %4, i64 0, i32 0, i32 0
  %16 = tail call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #7
  store i64 %16, i64* %15, align 8
  %17 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext 88, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 134, i32 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), i8* null, i64 0, i64 0, i32 %13, %"class.base::TimeTicks"* nonnull dereferenceable(8) %4, %"class.base::trace_event::TraceArguments"* null, i32 0) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #7
  br label %18

18:                                               ; preds = %3, %12
  %19 = phi i64 [ -6148914691236517206, %3 ], [ %17, %12 ]
  %20 = phi i8* [ inttoptr (i64 -6148914691236517206 to i8*), %3 ], [ getelementptr inbounds ([33 x i8], [33 x i8]* @.str, i64 0, i64 0), %12 ]
  %21 = phi i8* [ null, %3 ], [ getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 134, i32 0), %12 ]
  %22 = getelementptr inbounds %"class.views::InstallableInkDropPainter", %"class.views::InstallableInkDropPainter"* %0, i64 0, i32 2
  %23 = load %"struct.views::InstallableInkDropPainter::State"*, %"struct.views::InstallableInkDropPainter::State"** %22, align 8
  %24 = getelementptr inbounds %"struct.views::InstallableInkDropPainter::State", %"struct.views::InstallableInkDropPainter::State"* %23, i64 0, i32 2
  %25 = load float, float* %24, align 4
  %26 = fcmp ogt float %25, 0.000000e+00
  br i1 %26, label %27, label %49

27:                                               ; preds = %18
  %28 = bitcast %"class.gfx::Rect"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #7
  %29 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 0
  store i32 0, i32* %29, align 4
  %30 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 0, i32 1
  store i32 0, i32* %30, align 4
  %31 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %5, i64 0, i32 1
  %32 = bitcast %"class.gfx::Size"* %2 to i64*
  %33 = bitcast %"class.gfx::Size"* %31 to i64*
  %34 = load i64, i64* %32, align 4
  store i64 %34, i64* %33, align 4
  %35 = getelementptr inbounds %"class.views::InstallableInkDropPainter", %"class.views::InstallableInkDropPainter"* %0, i64 0, i32 1
  %36 = load %"struct.views::InstallableInkDropConfig"*, %"struct.views::InstallableInkDropConfig"** %35, align 8
  %37 = getelementptr inbounds %"struct.views::InstallableInkDropConfig", %"struct.views::InstallableInkDropConfig"* %36, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"struct.views::InstallableInkDropConfig", %"struct.views::InstallableInkDropConfig"* %36, i64 0, i32 2
  %40 = load float, float* %39, align 4
  %41 = load float, float* %24, align 4
  %42 = fmul float %40, %41
  %43 = fmul float %42, 2.550000e+02
  %44 = fptoui float %43 to i32
  %45 = and i32 %38, 16777215
  %46 = shl i32 %44, 24
  %47 = or i32 %46, %45
  call void @_ZN3gfx6Canvas8FillRectERKNS_4RectEj(%"class.gfx::Canvas"* %1, %"class.gfx::Rect"* nonnull dereferenceable(16) %5, i32 %47) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #7
  %48 = load %"struct.views::InstallableInkDropPainter::State"*, %"struct.views::InstallableInkDropPainter::State"** %22, align 8
  br label %49

49:                                               ; preds = %27, %18
  %50 = phi %"struct.views::InstallableInkDropPainter::State"* [ %48, %27 ], [ %23, %18 ]
  %51 = getelementptr inbounds %"struct.views::InstallableInkDropPainter::State", %"struct.views::InstallableInkDropPainter::State"* %50, i64 0, i32 1
  %52 = load float, float* %51, align 4
  %53 = fcmp oeq float %52, 1.000000e+00
  br i1 %53, label %54, label %73

54:                                               ; preds = %49
  %55 = bitcast %"class.gfx::Rect"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %55) #7
  %56 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 0, i32 0
  store i32 0, i32* %56, align 4
  %57 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 0, i32 1
  store i32 0, i32* %57, align 4
  %58 = getelementptr inbounds %"class.gfx::Rect", %"class.gfx::Rect"* %6, i64 0, i32 1
  %59 = bitcast %"class.gfx::Size"* %2 to i64*
  %60 = bitcast %"class.gfx::Size"* %58 to i64*
  %61 = load i64, i64* %59, align 4
  store i64 %61, i64* %60, align 4
  %62 = getelementptr inbounds %"class.views::InstallableInkDropPainter", %"class.views::InstallableInkDropPainter"* %0, i64 0, i32 1
  %63 = load %"struct.views::InstallableInkDropConfig"*, %"struct.views::InstallableInkDropConfig"** %62, align 8
  %64 = getelementptr inbounds %"struct.views::InstallableInkDropConfig", %"struct.views::InstallableInkDropConfig"* %63, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = getelementptr inbounds %"struct.views::InstallableInkDropConfig", %"struct.views::InstallableInkDropConfig"* %63, i64 0, i32 1
  %67 = load float, float* %66, align 4
  %68 = fmul float %67, 2.550000e+02
  %69 = fptoui float %68 to i32
  %70 = and i32 %65, 16777215
  %71 = shl i32 %69, 24
  %72 = or i32 %71, %70
  call void @_ZN3gfx6Canvas8FillRectERKNS_4RectEj(%"class.gfx::Canvas"* %1, %"class.gfx::Rect"* nonnull dereferenceable(16) %6, i32 %72) #7
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %55) #7
  br label %110

73:                                               ; preds = %49
  %74 = fcmp ogt float %52, 0.000000e+00
  br i1 %74, label %75, label %110

75:                                               ; preds = %73
  %76 = bitcast %"class.gfx::Vector2dF"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #7
  %77 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = sitofp i32 %78 to float
  %80 = getelementptr inbounds %"class.gfx::Size", %"class.gfx::Size"* %2, i64 0, i32 1
  %81 = load i32, i32* %80, align 4
  %82 = sitofp i32 %81 to float
  %83 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %7, i64 0, i32 0
  store float %79, float* %83, align 4
  %84 = getelementptr inbounds %"class.gfx::Vector2dF", %"class.gfx::Vector2dF"* %7, i64 0, i32 1
  store float %82, float* %84, align 4
  %85 = call float @_ZNK3gfx9Vector2dF6LengthEv(%"class.gfx::Vector2dF"* nonnull %7) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #7
  %86 = load %"struct.views::InstallableInkDropPainter::State"*, %"struct.views::InstallableInkDropPainter::State"** %22, align 8
  %87 = getelementptr inbounds %"struct.views::InstallableInkDropPainter::State", %"struct.views::InstallableInkDropPainter::State"* %86, i64 0, i32 1
  %88 = load float, float* %87, align 4
  %89 = fpext float %88 to double
  %90 = call float @_ZN3gfx5Tween17FloatValueBetweenEdff(double %89, float 2.000000e+00, float %85) #7
  %91 = bitcast %"class.cc::PaintFlags"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %91) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %91, i8* align 8 bitcast (%"class.cc::PaintFlags"* @__const._ZN5views25InstallableInkDropPainter5PaintEPN3gfx6CanvasERKNS1_4SizeE.flags to i8*), i64 72, i1 false)
  call void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"* nonnull %8) #7
  %92 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %8, i64 0, i32 10
  %93 = bitcast %union.anon.71* %92 to i16*
  %94 = load i16, i16* %93, align 8
  %95 = and i16 %94, -193
  store i16 %95, i16* %93, align 8
  %96 = getelementptr inbounds %"class.views::InstallableInkDropPainter", %"class.views::InstallableInkDropPainter"* %0, i64 0, i32 1
  %97 = load %"struct.views::InstallableInkDropConfig"*, %"struct.views::InstallableInkDropConfig"** %96, align 8
  %98 = getelementptr inbounds %"struct.views::InstallableInkDropConfig", %"struct.views::InstallableInkDropConfig"* %97, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = getelementptr inbounds %"struct.views::InstallableInkDropConfig", %"struct.views::InstallableInkDropConfig"* %97, i64 0, i32 1
  %101 = load float, float* %100, align 4
  %102 = fmul float %101, 2.550000e+02
  %103 = fptoui float %102 to i32
  %104 = and i32 %99, 16777215
  %105 = shl i32 %103, 24
  %106 = or i32 %105, %104
  %107 = getelementptr inbounds %"class.cc::PaintFlags", %"class.cc::PaintFlags"* %8, i64 0, i32 6
  store i32 %106, i32* %107, align 8
  %108 = load %"struct.views::InstallableInkDropPainter::State"*, %"struct.views::InstallableInkDropPainter::State"** %22, align 8
  %109 = getelementptr inbounds %"struct.views::InstallableInkDropPainter::State", %"struct.views::InstallableInkDropPainter::State"* %108, i64 0, i32 0
  call void @_ZN3gfx6Canvas10DrawCircleERKNS_6PointFEfRKN2cc10PaintFlagsE(%"class.gfx::Canvas"* %1, %"class.gfx::PointF"* dereferenceable(8) %109, float %90, %"class.cc::PaintFlags"* nonnull dereferenceable(72) %8) #7
  call void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"* nonnull %8) #7
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %91) #7
  br label %110

110:                                              ; preds = %73, %75, %54
  %111 = icmp eq i8* %21, null
  br i1 %111, label %116, label %112

112:                                              ; preds = %110
  %113 = load i8, i8* %21, align 1
  %114 = icmp eq i8 %113, 0
  br i1 %114, label %116, label %115

115:                                              ; preds = %112
  call void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8* nonnull %21, i8* %20, i64 %19) #7
  br label %116

116:                                              ; preds = %110, %112, %115
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare void @_ZN3gfx6Canvas8FillRectERKNS_4RectEj(%"class.gfx::Canvas"*, %"class.gfx::Rect"* dereferenceable(16), i32) local_unnamed_addr #4

declare float @_ZNK3gfx9Vector2dF6LengthEv(%"class.gfx::Vector2dF"*) local_unnamed_addr #4

declare float @_ZN3gfx5Tween17FloatValueBetweenEdff(double, float, float) local_unnamed_addr #4

declare void @_ZN2cc10PaintFlagsC1Ev(%"class.cc::PaintFlags"*) unnamed_addr #4

declare void @_ZN3gfx6Canvas10DrawCircleERKNS_6PointFEfRKN2cc10PaintFlagsE(%"class.gfx::Canvas"*, %"class.gfx::PointF"* dereferenceable(8), float, %"class.cc::PaintFlags"* dereferenceable(72)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN2cc10PaintFlagsD1Ev(%"class.cc::PaintFlags"*) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN5views7PainterD2Ev(%"class.views::Painter"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5views25InstallableInkDropPainterD0Ev(%"class.views::InstallableInkDropPainter"*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %"class.views::InstallableInkDropPainter", %"class.views::InstallableInkDropPainter"* %0, i64 0, i32 0
  tail call void @_ZN5views7PainterD2Ev(%"class.views::Painter"* %2) #7
  %3 = bitcast %"class.views::InstallableInkDropPainter"* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #4

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #4

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #4

declare void @_ZN20trace_event_internal24UpdateTraceEventDurationEPKhPKcN4base11trace_event16TraceEventHandleE(i8*, i8*, i64) local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
