; ModuleID = '../../third_party/skia/src/gpu/effects/GrCoverageSetOpXP.cpp'
source_filename = "../../third_party/skia/src/gpu/effects/GrCoverageSetOpXP.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CoverageSetOpXP = type <{ %class.GrXferProcessor.base, [2 x i8], i32, i8, [3 x i8] }>
%class.GrXferProcessor.base = type <{ %class.GrProcessor, %class.GrNonAtomicRef, i8, i8 }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.GrNonAtomicRef = type { i32 }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray*, i32, i32 }
%class.SkTArray = type { i32*, i64 }
%class.GrGLSLXferProcessor = type { i32 (...)**, %class.GrResourceHandle, %class.GrResourceHandle }
%class.GrResourceHandle = type { i32 }
%"struct.GrXferProcessor::BlendInfo" = type <{ i32, i32, i32, %struct.SkRGBA4f, i8, [3 x i8] }>
%struct.SkRGBA4f = type { float, float, float, float }
%class.GrXPFactory = type { i32 (...)** }
%class.sk_sp.1 = type { %class.GrXferProcessor* }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef, i8, i8, [2 x i8] }>
%class.GrCoverageSetOpXPFactory = type <{ %class.GrXPFactory, i32, i8, [3 x i8] }>
%class.GrProcessorAnalysisColor = type { i32, %struct.SkRGBA4f }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.sk_sp = type { %class.GrShaderCaps* }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.GLCoverageSetOpXP = type { %class.GrGLSLXferProcessor }
%"struct.GrGLSLXferProcessor::EmitArgs" = type <{ %class.GrGLSLXPFragmentBuilder*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrXferProcessor*, i8*, i8*, i8*, i8*, i32, %class.GrResourceHandle.14, i32, %class.GrSwizzle, [2 x i8] }>
%class.GrGLSLXPFragmentBuilder = type { i32 (...)**, [8 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.6, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.12], i32, i8, [3 x i8], i32 }>
%class.GrGLSLProgramBuilder = type opaque
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.4 }
%class.SkAlignedSTStorage = type { [120 x i8] }
%class.SkTArray.4 = type { %class.SkString*, i64 }
%class.SkString = type { %class.sk_sp.5 }
%class.sk_sp.5 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkSTArray.6 = type { %class.SkAlignedSTStorage.7, %class.SkTArray.8 }
%class.SkAlignedSTStorage.7 = type { [16 x i8] }
%class.SkTArray.8 = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.12 = type { %class.SkAlignedSTStorage.13, %class.SkTArray.4 }
%class.SkAlignedSTStorage.13 = type { [8 x i8] }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%class.GrResourceHandle.14 = type { i32 }
%class.GrSwizzle = type { i16 }
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.6, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.12], i32, i8, [3 x i8], i32, [12 x i8] }>
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%struct.__va_list_tag = type { i32, i32, i8*, i8* }

$_ZN11GrProcessorD2Ev = comdat any

$_ZN15CoverageSetOpXPD0Ev = comdat any

$_ZNK15CoverageSetOpXP4nameEv = comdat any

$_ZNK15GrXferProcessor15xferBarrierTypeERK6GrCaps = comdat any

$_ZNK15GrXferProcessor20onHasSecondaryOutputEv = comdat any

$_ZNK15CoverageSetOpXP9onIsEqualERK15GrXferProcessor = comdat any

$_ZNK24GrCoverageSetOpXPFactory18analysisPropertiesERK24GrProcessorAnalysisColorRK27GrProcessorAnalysisCoverageRK6GrCaps11GrClampType = comdat any

$_ZN19GrGLSLXferProcessorD2Ev = comdat any

$_ZN17GLCoverageSetOpXPD0Ev = comdat any

$_ZN17GLCoverageSetOpXP24emitOutputsForBlendStateERKN19GrGLSLXferProcessor8EmitArgsE = comdat any

$_ZN19GrGLSLXferProcessor23emitBlendCodeForDstReadEP23GrGLSLXPFragmentBuilderP20GrGLSLUniformHandlerPKcS5_S5_S5_S5_RK15GrXferProcessor = comdat any

$_ZN17GLCoverageSetOpXP9onSetDataERK24GrGLSLProgramDataManagerRK15GrXferProcessor = comdat any

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZTV17GLCoverageSetOpXP = comdat any

@_ZZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEbE14gReplaceCDXPFI = internal constant { i8**, i32, i8 } { i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV24GrCoverageSetOpXPFactory, i32 0, inrange i32 0, i32 2), i32 5, i8 1 }, align 8
@_ZTV24GrCoverageSetOpXPFactory = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.sk_sp.1*, %class.GrCoverageSetOpXPFactory*, %class.GrProcessorAnalysisColor*, i32, %class.GrCaps*, i32)* @_ZNK24GrCoverageSetOpXPFactory17makeXferProcessorERK24GrProcessorAnalysisColor27GrProcessorAnalysisCoverageRK6GrCaps11GrClampType to i8*), i8* bitcast (i32 (%class.GrCoverageSetOpXPFactory*, %class.GrProcessorAnalysisColor*, i32*, %class.GrCaps*, i32)* @_ZNK24GrCoverageSetOpXPFactory18analysisPropertiesERK24GrProcessorAnalysisColorRK27GrProcessorAnalysisCoverageRK6GrCaps11GrClampType to i8*)] }, align 8
@_ZZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEbE13gReplaceCDXPF = internal constant { i8**, i32, i8 } { i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV24GrCoverageSetOpXPFactory, i32 0, inrange i32 0, i32 2), i32 5, i8 0 }, align 8
@_ZZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEbE16gIntersectCDXPFI = internal constant { i8**, i32, i8 } { i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV24GrCoverageSetOpXPFactory, i32 0, inrange i32 0, i32 2), i32 1, i8 1 }, align 8
@_ZZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEbE15gIntersectCDXPF = internal constant { i8**, i32, i8 } { i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV24GrCoverageSetOpXPFactory, i32 0, inrange i32 0, i32 2), i32 1, i8 0 }, align 8
@_ZZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEbE12gUnionCDXPFI = internal constant { i8**, i32, i8 } { i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV24GrCoverageSetOpXPFactory, i32 0, inrange i32 0, i32 2), i32 2, i8 1 }, align 8
@_ZZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEbE11gUnionCDXPF = internal constant { i8**, i32, i8 } { i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV24GrCoverageSetOpXPFactory, i32 0, inrange i32 0, i32 2), i32 2, i8 0 }, align 8
@_ZZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEbE10gXORCDXPFI = internal constant { i8**, i32, i8 } { i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV24GrCoverageSetOpXPFactory, i32 0, inrange i32 0, i32 2), i32 3, i8 1 }, align 8
@_ZZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEbE9gXORCDXPF = internal constant { i8**, i32, i8 } { i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV24GrCoverageSetOpXPFactory, i32 0, inrange i32 0, i32 2), i32 3, i8 0 }, align 8
@_ZZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEbE17gDifferenceCDXPFI = internal constant { i8**, i32, i8 } { i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV24GrCoverageSetOpXPFactory, i32 0, inrange i32 0, i32 2), i32 0, i8 1 }, align 8
@_ZZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEbE16gDifferenceCDXPF = internal constant { i8**, i32, i8 } { i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV24GrCoverageSetOpXPFactory, i32 0, inrange i32 0, i32 2), i32 0, i8 0 }, align 8
@_ZZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEbE14gRevDiffCDXPFI = internal constant { i8**, i32, i8 } { i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV24GrCoverageSetOpXPFactory, i32 0, inrange i32 0, i32 2), i32 4, i8 1 }, align 8
@_ZZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEbE13gRevDiffCDXPF = internal constant { i8**, i32, i8 } { i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV24GrCoverageSetOpXPFactory, i32 0, inrange i32 0, i32 2), i32 4, i8 0 }, align 8
@.str = private unnamed_addr constant [61 x i8] c"../../third_party/skia/src/gpu/effects/GrCoverageSetOpXP.cpp\00", align 1
@.str.1 = private unnamed_addr constant [19 x i8] c"Unknown region op.\00", align 1
@_ZTV15CoverageSetOpXP = hidden unnamed_addr constant { [11 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrProcessor*)* @_ZN11GrProcessorD2Ev to i8*), i8* bitcast (void (%class.CoverageSetOpXP*)* @_ZN15CoverageSetOpXPD0Ev to i8*), i8* bitcast (i8* (%class.CoverageSetOpXP*)* @_ZNK15CoverageSetOpXP4nameEv to i8*), i8* bitcast (%class.GrGLSLXferProcessor* (%class.CoverageSetOpXP*)* @_ZNK15CoverageSetOpXP18createGLSLInstanceEv to i8*), i8* bitcast (i32 (%class.GrXferProcessor*, %class.GrCaps*)* @_ZNK15GrXferProcessor15xferBarrierTypeERK6GrCaps to i8*), i8* bitcast (void (%class.CoverageSetOpXP*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK15CoverageSetOpXP21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (i1 (%class.GrXferProcessor*)* @_ZNK15GrXferProcessor20onHasSecondaryOutputEv to i8*), i8* bitcast (void (%class.CoverageSetOpXP*, %"struct.GrXferProcessor::BlendInfo"*)* @_ZNK15CoverageSetOpXP14onGetBlendInfoEPN15GrXferProcessor9BlendInfoE to i8*), i8* bitcast (i1 (%class.CoverageSetOpXP*, %class.GrXferProcessor*)* @_ZNK15CoverageSetOpXP9onIsEqualERK15GrXferProcessor to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [8 x i8] c"unknown\00", align 1
@_ZTV17GLCoverageSetOpXP = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLXferProcessor*)* @_ZN19GrGLSLXferProcessorD2Ev to i8*), i8* bitcast (void (%class.GLCoverageSetOpXP*)* @_ZN17GLCoverageSetOpXPD0Ev to i8*), i8* bitcast (void (%class.GLCoverageSetOpXP*, %"struct.GrGLSLXferProcessor::EmitArgs"*)* @_ZN17GLCoverageSetOpXP24emitOutputsForBlendStateERKN19GrGLSLXferProcessor8EmitArgsE to i8*), i8* bitcast (void (%class.GrGLSLXferProcessor*, %class.GrGLSLXPFragmentBuilder*, %class.GrGLSLUniformHandler*, i8*, i8*, i8*, i8*, i8*, %class.GrXferProcessor*)* @_ZN19GrGLSLXferProcessor23emitBlendCodeForDstReadEP23GrGLSLXPFragmentBuilderP20GrGLSLUniformHandlerPKcS5_S5_S5_S5_RK15GrXferProcessor to i8*), i8* bitcast (void (%class.GrGLSLXferProcessor*, %class.GrGLSLXPFragmentBuilder*, %class.GrSwizzle*, i8*, i8*)* @_ZNK19GrGLSLXferProcessor16emitWriteSwizzleEP23GrGLSLXPFragmentBuilderRK9GrSwizzlePKcS6_ to i8*), i8* bitcast (void (%class.GLCoverageSetOpXP*, %class.GrGLSLProgramDataManager*, %class.GrXferProcessor*)* @_ZN17GLCoverageSetOpXP9onSetDataERK24GrGLSLProgramDataManagerRK15GrXferProcessor to i8*)] }, comdat, align 8
@.str.3 = private unnamed_addr constant [15 x i8] c"%s = 1.0 - %s;\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"%s = %s;\00", align 1
@.str.5 = private unnamed_addr constant [58 x i8] c"../../third_party/skia/src/gpu/glsl/GrGLSLXferProcessor.h\00", align 1
@.str.6 = private unnamed_addr constant [41 x i8] c"emitBlendCodeForDstRead not implemented.\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"Coverage Set Op\00", align 1
@switch.table._ZNK15CoverageSetOpXP14onGetBlendInfoEPN15GrXferProcessor9BlendInfoE = private unnamed_addr constant [6 x i32] [i32 0, i32 4, i32 1, i32 5, i32 5, i32 1], align 4
@switch.table._ZNK15CoverageSetOpXP14onGetBlendInfoEPN15GrXferProcessor9BlendInfoE.8 = private unnamed_addr constant [6 x i32] [i32 3, i32 0, i32 3, i32 3, i32 0, i32 0], align 4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15CoverageSetOpXP21onGetGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.CoverageSetOpXP* nocapture readonly, %class.GrShaderCaps* nocapture readnone dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CoverageSetOpXP, %class.CoverageSetOpXP* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %class.GrProcessor, %class.GrProcessor* %4, i64 1, i32 2
  %6 = bitcast i32* %5 to i8*
  %7 = load i8, i8* %6, align 4, !range !2
  %8 = xor i8 %7, 1
  %9 = zext i8 %8 to i32
  %10 = bitcast %class.GrProcessorKeyBuilder* %2 to void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)***
  %11 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)**, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*** %10, align 8
  %12 = getelementptr inbounds void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %11, i64 2
  %13 = load void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)*, void (%class.GrProcessorKeyBuilder*, i32, i32, i8*)** %12, align 8
  tail call void %13(%class.GrProcessorKeyBuilder* %2, i32 32, i32 %9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0)) #8
  ret void
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull %class.GrGLSLXferProcessor* @_ZNK15CoverageSetOpXP18createGLSLInstanceEv(%class.CoverageSetOpXP* nocapture readnone) unnamed_addr #1 align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #10
  %3 = bitcast i8* %2 to i32 (...)***
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to i32*
  store i32 -1, i32* %5, align 4
  %6 = getelementptr inbounds i8, i8* %2, i64 12
  %7 = bitcast i8* %6 to i32*
  store i32 -1, i32* %7, align 4
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV17GLCoverageSetOpXP, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %8 = bitcast i8* %2 to %class.GrGLSLXferProcessor*
  ret %class.GrGLSLXferProcessor* %8
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK15CoverageSetOpXP14onGetBlendInfoEPN15GrXferProcessor9BlendInfoE(%class.CoverageSetOpXP* nocapture readonly, %"struct.GrXferProcessor::BlendInfo"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CoverageSetOpXP, %class.CoverageSetOpXP* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 6
  br i1 %5, label %6, label %15

6:                                                ; preds = %2
  %7 = sext i32 %4 to i64
  %8 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZNK15CoverageSetOpXP14onGetBlendInfoEPN15GrXferProcessor9BlendInfoE, i64 0, i64 %7
  %9 = load i32, i32* %8, align 4
  %10 = sext i32 %4 to i64
  %11 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZNK15CoverageSetOpXP14onGetBlendInfoEPN15GrXferProcessor9BlendInfoE.8, i64 0, i64 %10
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"struct.GrXferProcessor::BlendInfo", %"struct.GrXferProcessor::BlendInfo"* %1, i64 0, i32 1
  store i32 %9, i32* %13, align 4
  %14 = getelementptr inbounds %"struct.GrXferProcessor::BlendInfo", %"struct.GrXferProcessor::BlendInfo"* %1, i64 0, i32 2
  store i32 %12, i32* %14, align 4
  br label %15

15:                                               ; preds = %2, %6
  %16 = getelementptr inbounds %"struct.GrXferProcessor::BlendInfo", %"struct.GrXferProcessor::BlendInfo"* %1, i64 0, i32 3
  %17 = bitcast %struct.SkRGBA4f* %16 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %17, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrXPFactory* @_ZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEb(i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  switch i32 %0, label %15 [
    i32 5, label %3
    i32 1, label %5
    i32 2, label %7
    i32 3, label %9
    i32 0, label %11
    i32 4, label %13
  ]

3:                                                ; preds = %2
  %4 = select i1 %1, %class.GrXPFactory* bitcast ({ i8**, i32, i8 }* @_ZZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEbE14gReplaceCDXPFI to %class.GrXPFactory*), %class.GrXPFactory* bitcast ({ i8**, i32, i8 }* @_ZZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEbE13gReplaceCDXPF to %class.GrXPFactory*)
  br label %16

5:                                                ; preds = %2
  %6 = select i1 %1, %class.GrXPFactory* bitcast ({ i8**, i32, i8 }* @_ZZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEbE16gIntersectCDXPFI to %class.GrXPFactory*), %class.GrXPFactory* bitcast ({ i8**, i32, i8 }* @_ZZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEbE15gIntersectCDXPF to %class.GrXPFactory*)
  br label %16

7:                                                ; preds = %2
  %8 = select i1 %1, %class.GrXPFactory* bitcast ({ i8**, i32, i8 }* @_ZZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEbE12gUnionCDXPFI to %class.GrXPFactory*), %class.GrXPFactory* bitcast ({ i8**, i32, i8 }* @_ZZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEbE11gUnionCDXPF to %class.GrXPFactory*)
  br label %16

9:                                                ; preds = %2
  %10 = select i1 %1, %class.GrXPFactory* bitcast ({ i8**, i32, i8 }* @_ZZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEbE10gXORCDXPFI to %class.GrXPFactory*), %class.GrXPFactory* bitcast ({ i8**, i32, i8 }* @_ZZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEbE9gXORCDXPF to %class.GrXPFactory*)
  br label %16

11:                                               ; preds = %2
  %12 = select i1 %1, %class.GrXPFactory* bitcast ({ i8**, i32, i8 }* @_ZZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEbE17gDifferenceCDXPFI to %class.GrXPFactory*), %class.GrXPFactory* bitcast ({ i8**, i32, i8 }* @_ZZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEbE16gDifferenceCDXPF to %class.GrXPFactory*)
  br label %16

13:                                               ; preds = %2
  %14 = select i1 %1, %class.GrXPFactory* bitcast ({ i8**, i32, i8 }* @_ZZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEbE14gRevDiffCDXPFI to %class.GrXPFactory*), %class.GrXPFactory* bitcast ({ i8**, i32, i8 }* @_ZZN24GrCoverageSetOpXPFactory3GetEN8SkRegion2OpEbE13gRevDiffCDXPF to %class.GrXPFactory*)
  br label %16

15:                                               ; preds = %2
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str, i64 0, i64 0), i32 196, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.1, i64 0, i64 0)) #11
  unreachable

16:                                               ; preds = %13, %11, %9, %7, %5, %3
  %17 = phi %class.GrXPFactory* [ %4, %3 ], [ %6, %5 ], [ %8, %7 ], [ %10, %9 ], [ %12, %11 ], [ %14, %13 ]
  ret %class.GrXPFactory* %17
}

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK24GrCoverageSetOpXPFactory17makeXferProcessorERK24GrProcessorAnalysisColor27GrProcessorAnalysisCoverageRK6GrCaps11GrClampType(%class.sk_sp.1* noalias nocapture sret, %class.GrCoverageSetOpXPFactory* nocapture readonly, %class.GrProcessorAnalysisColor* nocapture readnone dereferenceable(20), i32, %class.GrCaps* nocapture readnone dereferenceable(232), i32) unnamed_addr #0 align 2 {
  %7 = tail call i8* @_ZN11GrProcessornwEm(i64 32) #8
  %8 = getelementptr inbounds %class.GrCoverageSetOpXPFactory, %class.GrCoverageSetOpXPFactory* %1, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %class.GrCoverageSetOpXPFactory, %class.GrCoverageSetOpXPFactory* %1, i64 0, i32 2
  %11 = load i8, i8* %10, align 4, !range !2
  %12 = bitcast i8* %7 to %class.GrXferProcessor*
  tail call void @_ZN15GrXferProcessorC2EN11GrProcessor7ClassIDE(%class.GrXferProcessor* %12, i32 9) #8
  %13 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*] }, { [11 x i8*] }* @_ZTV15CoverageSetOpXP, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds i8, i8* %7, i64 24
  %15 = bitcast i8* %14 to i32*
  store i32 %9, i32* %15, align 8
  %16 = getelementptr inbounds i8, i8* %7, i64 28
  store i8 %11, i8* %16, align 4
  %17 = ptrtoint i8* %7 to i64
  %18 = bitcast %class.sk_sp.1* %0 to i64*
  store i64 %17, i64* %18, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11GrProcessorD2Ev(%class.GrProcessor*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN15CoverageSetOpXPD0Ev(%class.CoverageSetOpXP*) unnamed_addr #6 comdat align 2 {
  %2 = bitcast %class.CoverageSetOpXP* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %2) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK15CoverageSetOpXP4nameEv(%class.CoverageSetOpXP*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK15GrXferProcessor15xferBarrierTypeERK6GrCaps(%class.GrXferProcessor*, %class.GrCaps* dereferenceable(232)) unnamed_addr #0 comdat align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK15GrXferProcessor20onHasSecondaryOutputEv(%class.GrXferProcessor*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK15CoverageSetOpXP9onIsEqualERK15GrXferProcessor(%class.CoverageSetOpXP*, %class.GrXferProcessor* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %class.CoverageSetOpXP, %class.CoverageSetOpXP* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %1, i64 1
  %6 = bitcast %class.GrXferProcessor* %5 to i32*
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %4, %7
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = bitcast %class.GrXferProcessor* %1 to %class.CoverageSetOpXP*
  %11 = getelementptr inbounds %class.CoverageSetOpXP, %class.CoverageSetOpXP* %0, i64 0, i32 3
  %12 = load i8, i8* %11, align 4, !range !2
  %13 = getelementptr inbounds %class.CoverageSetOpXP, %class.CoverageSetOpXP* %10, i64 0, i32 3
  %14 = load i8, i8* %13, align 4, !range !2
  %15 = icmp eq i8 %12, %14
  br label %16

16:                                               ; preds = %9, %2
  %17 = phi i1 [ false, %2 ], [ %15, %9 ]
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK24GrCoverageSetOpXPFactory18analysisPropertiesERK24GrProcessorAnalysisColorRK27GrProcessorAnalysisCoverageRK6GrCaps11GrClampType(%class.GrCoverageSetOpXPFactory*, %class.GrProcessorAnalysisColor* dereferenceable(20), i32* dereferenceable(4), %class.GrCaps* dereferenceable(232), i32) unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %class.GrCoverageSetOpXPFactory, %class.GrCoverageSetOpXPFactory* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 5
  %9 = select i1 %8, i32 132, i32 4
  ret i32 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLXferProcessorD2Ev(%class.GrGLSLXferProcessor*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17GLCoverageSetOpXPD0Ev(%class.GLCoverageSetOpXP*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %class.GLCoverageSetOpXP* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17GLCoverageSetOpXP24emitOutputsForBlendStateERKN19GrGLSLXferProcessor8EmitArgsE(%class.GLCoverageSetOpXP*, %"struct.GrGLSLXferProcessor::EmitArgs"* dereferenceable(80)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %1, i64 0, i32 3
  %4 = bitcast %class.GrXferProcessor** %3 to %class.CoverageSetOpXP**
  %5 = load %class.CoverageSetOpXP*, %class.CoverageSetOpXP** %4, align 8
  %6 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %1, i64 0, i32 0
  %7 = load %class.GrGLSLXPFragmentBuilder*, %class.GrGLSLXPFragmentBuilder** %6, align 8
  %8 = getelementptr inbounds %class.CoverageSetOpXP, %class.CoverageSetOpXP* %5, i64 0, i32 3
  %9 = load i8, i8* %8, align 4, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = bitcast %class.GrGLSLXPFragmentBuilder* %7 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr i8, i8* %12, i64 -24
  %14 = bitcast i8* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %class.GrGLSLXPFragmentBuilder* %7 to i8*
  %17 = getelementptr inbounds i8, i8* %16, i64 %15
  %18 = bitcast i8* %17 to %class.GrGLSLShaderBuilder*
  %19 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %1, i64 0, i32 6
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"struct.GrGLSLXferProcessor::EmitArgs", %"struct.GrGLSLXferProcessor::EmitArgs"* %1, i64 0, i32 5
  %22 = load i8*, i8** %21, align 8
  %23 = select i1 %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0)
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %18, i8* %23, i8* %20, i8* %22)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLXferProcessor23emitBlendCodeForDstReadEP23GrGLSLXPFragmentBuilderP20GrGLSLUniformHandlerPKcS5_S5_S5_S5_RK15GrXferProcessor(%class.GrGLSLXferProcessor*, %class.GrGLSLXPFragmentBuilder*, %class.GrGLSLUniformHandler*, i8*, i8*, i8*, i8*, i8*, %class.GrXferProcessor* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([58 x i8], [58 x i8]* @.str.5, i64 0, i64 0), i32 113, i8* getelementptr inbounds ([41 x i8], [41 x i8]* @.str.6, i64 0, i64 0)) #11
  unreachable
}

declare void @_ZNK19GrGLSLXferProcessor16emitWriteSwizzleEP23GrGLSLXPFragmentBuilderRK9GrSwizzlePKcS6_(%class.GrGLSLXferProcessor*, %class.GrGLSLXPFragmentBuilder*, %class.GrSwizzle* dereferenceable(2), i8*, i8*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN17GLCoverageSetOpXP9onSetDataERK24GrGLSLProgramDataManagerRK15GrXferProcessor(%class.GLCoverageSetOpXP*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrXferProcessor* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #8
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8
  ret void
}

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #8

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #8

declare void @_ZN15GrXferProcessorC2EN11GrProcessor7ClassIDE(%class.GrXferProcessor*, i32) unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
