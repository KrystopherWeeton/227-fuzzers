; ModuleID = 'gen/ui/accessibility/mojom/ax_action_data.mojom-blink.cc'
source_filename = "gen/ui/accessibility/mojom/ax_action_data.mojom-blink.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.ax::mojom::blink::AXActionData" = type { i32, %"class.mojo::StructPtr", %"class.WTF::String", i32, i32, i32, i32, i32, i32, i32, i32, %"class.gfx::Rect", %"class.gfx::Point", %"class.WTF::String", i32, i32, i32, i32 }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.ax::mojom::blink::AXTreeID"* }
%"class.ax::mojom::blink::AXTreeID" = type { i32, %"union.ax::mojom::blink::AXTreeID::Union_" }
%"union.ax::mojom::blink::AXTreeID::Union_" = type { %"class.base::UnguessableToken"* }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.1" }
%"struct.std::__1::__atomic_base.1" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.2" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { i64 }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.perfetto::TracedDictionary" = type <{ %"class.protozero::Message"*, i32, %"class.perfetto::internal::CheckedScope", [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.mojo::internal::ValidationContext" = type <{ %"class.mojo::Message"*, i8*, i32, [4 x i8], i64, i64, i32, i32, i32, i32, i32, [4 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.16", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.10"*, %"class.mojo::ScopedHandleBase.10"*, %"class.std::__1::__compressed_pair.11" }
%"class.mojo::ScopedHandleBase.10" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.mojo::ScopedHandleBase.10"* }
%"class.std::__1::vector.16" = type { %"class.std::__1::__vector_base.17" }
%"class.std::__1::__vector_base.17" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.19" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.18 }
%class.scoped_refptr.18 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.24 }
%class.scoped_refptr.24 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.32, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.25" }
%"struct.std::__1::atomic.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__atomic_base.27" }
%"struct.std::__1::__atomic_base.27" = type { %"struct.std::__1::__cxx_atomic_impl.28" }
%"struct.std::__1::__cxx_atomic_impl.28" = type { %"struct.std::__1::__cxx_atomic_base_impl.29" }
%"struct.std::__1::__cxx_atomic_base_impl.29" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.30 }
%class.scoped_refptr.30 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.31", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.31" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.32 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.33" }>
%"class.base::RefCountedThreadSafe.33" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.ax::mojom::internal::AXActionData_Data" = type { %"struct.mojo::internal::StructHeader", i32, i32, %"class.ax::mojom::internal::AXTreeID_Data", %"struct.mojo::internal::Pointer.34", i32, i32, i32, i32, i32, i32, i32, i32, %"struct.mojo::internal::Pointer.35", %"struct.mojo::internal::Pointer.36", %"struct.mojo::internal::Pointer.34", i32, i32, i32, [4 x i8] }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"class.ax::mojom::internal::AXTreeID_Data" = type { i32, i32, %"union.ax::mojom::internal::AXTreeID_Data::Union_" }
%"union.ax::mojom::internal::AXTreeID_Data::Union_" = type { %"struct.mojo::internal::Pointer" }
%"struct.mojo::internal::Pointer" = type { i64 }
%"struct.mojo::internal::Pointer.35" = type { i64 }
%"struct.mojo::internal::Pointer.36" = type { i64 }
%"struct.mojo::internal::Pointer.34" = type { i64 }
%"class.mojo::StructPtr.37" = type { %"class.std::__1::unique_ptr.38" }
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.ax::mojom::blink::AXActionData"* }
%"class.mojo::internal::Array_Data" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }

@.str = private unnamed_addr constant [7 x i8] c"action\00", align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"<value>\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"target_tree_id\00", align 1
@.str.3 = private unnamed_addr constant [20 x i8] c"source_extension_id\00", align 1
@.str.4 = private unnamed_addr constant [15 x i8] c"target_node_id\00", align 1
@.str.5 = private unnamed_addr constant [11 x i8] c"request_id\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"flags\00", align 1
@.str.7 = private unnamed_addr constant [15 x i8] c"anchor_node_id\00", align 1
@.str.8 = private unnamed_addr constant [14 x i8] c"anchor_offset\00", align 1
@.str.9 = private unnamed_addr constant [14 x i8] c"focus_node_id\00", align 1
@.str.10 = private unnamed_addr constant [13 x i8] c"focus_offset\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"custom_action_id\00", align 1
@.str.12 = private unnamed_addr constant [12 x i8] c"target_rect\00", align 1
@.str.13 = private unnamed_addr constant [13 x i8] c"target_point\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"value\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"hit_test_event_to_fire\00", align 1
@.str.16 = private unnamed_addr constant [28 x i8] c"horizontal_scroll_alignment\00", align 1
@.str.17 = private unnamed_addr constant [26 x i8] c"vertical_scroll_alignment\00", align 1
@.str.18 = private unnamed_addr constant [16 x i8] c"scroll_behavior\00", align 1

@_ZN2ax5mojom5blink12AXActionDataC1Ev = hidden unnamed_addr alias void (%"class.ax::mojom::blink::AXActionData"*), void (%"class.ax::mojom::blink::AXActionData"*)* @_ZN2ax5mojom5blink12AXActionDataC2Ev
@_ZN2ax5mojom5blink12AXActionDataC1ENS0_6ActionEN4mojo9StructPtrINS1_8AXTreeIDEEERKN3WTF6StringEiiiiiiiiRKN3gfx4RectERKNSC_5PointESB_NS0_5EventENS0_15ScrollAlignmentESK_NS0_14ScrollBehaviorE = hidden unnamed_addr alias void (%"class.ax::mojom::blink::AXActionData"*, i32, %"class.mojo::StructPtr"*, %"class.WTF::String"*, i32, i32, i32, i32, i32, i32, i32, i32, %"class.gfx::Rect"*, %"class.gfx::Point"*, %"class.WTF::String"*, i32, i32, i32, i32), void (%"class.ax::mojom::blink::AXActionData"*, i32, %"class.mojo::StructPtr"*, %"class.WTF::String"*, i32, i32, i32, i32, i32, i32, i32, i32, %"class.gfx::Rect"*, %"class.gfx::Point"*, %"class.WTF::String"*, i32, i32, i32, i32)* @_ZN2ax5mojom5blink12AXActionDataC2ENS0_6ActionEN4mojo9StructPtrINS1_8AXTreeIDEEERKN3WTF6StringEiiiiiiiiRKN3gfx4RectERKNSC_5PointESB_NS0_5EventENS0_15ScrollAlignmentESK_NS0_14ScrollBehaviorE
@_ZN2ax5mojom5blink12AXActionDataD1Ev = hidden unnamed_addr alias void (%"class.ax::mojom::blink::AXActionData"*), void (%"class.ax::mojom::blink::AXActionData"*)* @_ZN2ax5mojom5blink12AXActionDataD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ax5mojom5blink12AXActionDataC2Ev(%"class.ax::mojom::blink::AXActionData"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 0
  store i32 0, i32* %2, align 8
  %3 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 1
  %4 = bitcast %"class.mojo::StructPtr"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 96, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ax5mojom5blink12AXActionDataC2ENS0_6ActionEN4mojo9StructPtrINS1_8AXTreeIDEEERKN3WTF6StringEiiiiiiiiRKN3gfx4RectERKNSC_5PointESB_NS0_5EventENS0_15ScrollAlignmentESK_NS0_14ScrollBehaviorE(%"class.ax::mojom::blink::AXActionData"* nocapture, i32, %"class.mojo::StructPtr"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), i32, i32, i32, i32, i32, i32, i32, i32, %"class.gfx::Rect"* nocapture readonly dereferenceable(16), %"class.gfx::Point"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), i32, i32, i32, i32) unnamed_addr #0 align 2 {
  %20 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 0
  store i32 %1, i32* %20, align 8
  %21 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 1
  %22 = bitcast %"class.mojo::StructPtr"* %21 to i64*
  %23 = getelementptr inbounds %"class.mojo::StructPtr", %"class.mojo::StructPtr"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.ax::mojom::blink::AXTreeID"* null, %"class.ax::mojom::blink::AXTreeID"** %23, align 8
  %24 = bitcast %"class.mojo::StructPtr"* %2 to i64*
  %25 = load i64, i64* %24, align 8
  store i64 %25, i64* %22, align 8
  store i64 0, i64* %24, align 8
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %19
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #8
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !2

44:                                               ; preds = %35
  tail call void @llvm.trap() #8
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %19, %30, %45
  %48 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 3
  store i32 %4, i32* %48, align 8
  %49 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 4
  store i32 %5, i32* %49, align 4
  %50 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 5
  store i32 %6, i32* %50, align 8
  %51 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 6
  store i32 %7, i32* %51, align 4
  %52 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 7
  store i32 %8, i32* %52, align 8
  %53 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 8
  store i32 %9, i32* %53, align 4
  %54 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 9
  store i32 %10, i32* %54, align 8
  %55 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 10
  store i32 %11, i32* %55, align 4
  %56 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 11
  %57 = bitcast %"class.gfx::Rect"* %56 to i8*
  %58 = bitcast %"class.gfx::Rect"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 4 %58, i64 16, i1 false)
  %59 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 12
  %60 = bitcast %"class.gfx::Point"* %13 to i64*
  %61 = bitcast %"class.gfx::Point"* %59 to i64*
  %62 = load i64, i64* %60, align 4
  store i64 %62, i64* %61, align 8
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %65 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 13, i32 0, i32 0
  store %"class.WTF::StringImpl"* %64, %"class.WTF::StringImpl"** %65, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %66, label %84, label %67

67:                                               ; preds = %47
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %67
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = zext i32 %74 to i33
  %76 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %75, i33 1) #8
  %77 = extractvalue { i33, i1 } %76, 1
  %78 = extractvalue { i33, i1 } %76, 0
  %79 = icmp slt i33 %78, 0
  %80 = or i1 %77, %79
  br i1 %80, label %81, label %82, !prof !2

81:                                               ; preds = %72
  tail call void @llvm.trap() #8
  unreachable

82:                                               ; preds = %72
  %83 = trunc i33 %78 to i32
  store i32 %83, i32* %73, align 4
  br label %84

84:                                               ; preds = %47, %67, %82
  %85 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 14
  store i32 %15, i32* %85, align 8
  %86 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 15
  store i32 %16, i32* %86, align 4
  %87 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 16
  store i32 %17, i32* %87, align 8
  %88 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 17
  store i32 %18, i32* %88, align 4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2ax5mojom5blink12AXActionDataD2Ev(%"class.ax::mojom::blink::AXActionData"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 13, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #8
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #8
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %37 = load %"class.ax::mojom::blink::AXTreeID"*, %"class.ax::mojom::blink::AXTreeID"** %36, align 8
  store %"class.ax::mojom::blink::AXTreeID"* null, %"class.ax::mojom::blink::AXTreeID"** %36, align 8
  %38 = icmp eq %"class.ax::mojom::blink::AXTreeID"* %37, null
  br i1 %38, label %41, label %39

39:                                               ; preds = %35
  tail call void @_ZN2ax5mojom5blink8AXTreeIDD1Ev(%"class.ax::mojom::blink::AXTreeID"* nonnull %37) #8
  %40 = bitcast %"class.ax::mojom::blink::AXTreeID"* %37 to i8*
  tail call void @_ZdlPv(i8* %40) #9
  br label %41

41:                                               ; preds = %35, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2ax5mojom5blink12AXActionData14WriteIntoTraceEN8perfetto11TracedValueE(%"class.ax::mojom::blink::AXActionData"*, %"class.perfetto::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.perfetto::TracedValue", align 8
  %4 = alloca %"class.perfetto::TracedValue", align 8
  %5 = alloca %"class.perfetto::TracedValue", align 8
  %6 = alloca %"class.perfetto::TracedValue", align 8
  %7 = alloca %"class.perfetto::TracedValue", align 8
  %8 = alloca %"class.perfetto::TracedValue", align 8
  %9 = alloca %"class.perfetto::TracedValue", align 8
  %10 = alloca %"class.perfetto::TracedValue", align 8
  %11 = alloca %"class.perfetto::TracedValue", align 8
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.perfetto::TracedValue", align 8
  %15 = alloca %"class.perfetto::TracedValue", align 8
  %16 = alloca %"class.perfetto::TracedValue", align 8
  %17 = alloca %"class.perfetto::TracedValue", align 8
  %18 = alloca %"class.perfetto::TracedDictionary", align 8
  %19 = alloca %"class.perfetto::TracedValue", align 8
  %20 = alloca %"class.perfetto::TracedValue", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.perfetto::TracedValue", align 8
  %23 = alloca %"class.perfetto::TracedValue", align 8
  %24 = alloca %"class.perfetto::TracedValue", align 8
  %25 = alloca %"class.perfetto::TracedValue", align 8
  %26 = alloca %"class.perfetto::TracedValue", align 8
  %27 = alloca %"class.perfetto::TracedValue", align 8
  %28 = alloca %"class.perfetto::TracedValue", align 8
  %29 = alloca %"class.perfetto::TracedValue", align 8
  %30 = alloca %"class.perfetto::TracedValue", align 8
  %31 = alloca %"class.perfetto::TracedValue", align 8
  %32 = alloca %"class.std::__1::basic_string", align 8
  %33 = alloca %"class.perfetto::TracedValue", align 8
  %34 = alloca %"class.std::__1::basic_string", align 8
  %35 = alloca %"class.perfetto::TracedValue", align 8
  %36 = alloca %"class.perfetto::TracedValue", align 8
  %37 = alloca %"class.perfetto::TracedValue", align 8
  %38 = alloca %"class.perfetto::TracedValue", align 8
  %39 = alloca %"class.perfetto::TracedValue", align 8
  %40 = bitcast %"class.perfetto::TracedDictionary"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #8
  %41 = bitcast %"class.perfetto::TracedDictionary"* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 16, i1 false)
  call void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* nonnull sret %18, %"class.perfetto::TracedValue"* %1) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %19, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i64 0, i64 0)) #8
  %42 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 0
  %43 = bitcast %"class.perfetto::TracedValue"* %19 to i8*
  %44 = bitcast %"class.perfetto::TracedValue"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %44, i8* nonnull align 8 %43, i64 16, i1 false) #8
  %45 = load i32, i32* %42, align 4
  call void @_ZN8perfetto17TraceFormatTraitsIN2ax5mojom6ActionEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"* nonnull %16, i32 %45) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %20, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0)) #8
  %46 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #8
  %47 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  store i8 7, i8* %48, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %46, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #8
  %49 = getelementptr inbounds i8, i8* %46, i64 7
  store i8 0, i8* %49, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %20, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %21) #8
  %50 = load i8, i8* %48, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %2
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #9
  br label %55

55:                                               ; preds = %52, %2
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %22, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.3, i64 0, i64 0)) #8
  %56 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 2
  %57 = bitcast %"class.perfetto::TracedValue"* %22 to i8*
  %58 = bitcast %"class.perfetto::TracedValue"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %58) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %58, i8* nonnull align 8 %57, i64 16, i1 false) #8
  call void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"* %56, %"class.perfetto::TracedValue"* nonnull %15) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %58) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %23, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.4, i64 0, i64 0)) #8
  %59 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 3
  %60 = bitcast %"class.perfetto::TracedValue"* %23 to i8*
  %61 = bitcast %"class.perfetto::TracedValue"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %61) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %61, i8* nonnull align 8 %60, i64 16, i1 false) #8
  %62 = load i32, i32* %59, align 4
  %63 = sext i32 %62 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %14, i64 %63) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %61) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %24, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.5, i64 0, i64 0)) #8
  %64 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 4
  %65 = bitcast %"class.perfetto::TracedValue"* %24 to i8*
  %66 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %66, i8* nonnull align 8 %65, i64 16, i1 false) #8
  %67 = load i32, i32* %64, align 4
  %68 = sext i32 %67 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %13, i64 %68) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %25, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0)) #8
  %69 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 5
  %70 = bitcast %"class.perfetto::TracedValue"* %25 to i8*
  %71 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %70, i64 16, i1 false) #8
  %72 = load i32, i32* %69, align 4
  %73 = sext i32 %72 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %12, i64 %73) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %26, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.7, i64 0, i64 0)) #8
  %74 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 6
  %75 = bitcast %"class.perfetto::TracedValue"* %26 to i8*
  %76 = bitcast %"class.perfetto::TracedValue"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %76, i8* nonnull align 8 %75, i64 16, i1 false) #8
  %77 = load i32, i32* %74, align 4
  %78 = sext i32 %77 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %11, i64 %78) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %27, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.8, i64 0, i64 0)) #8
  %79 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 7
  %80 = bitcast %"class.perfetto::TracedValue"* %27 to i8*
  %81 = bitcast %"class.perfetto::TracedValue"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %81) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %81, i8* nonnull align 8 %80, i64 16, i1 false) #8
  %82 = load i32, i32* %79, align 4
  %83 = sext i32 %82 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %10, i64 %83) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %81) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %28, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.9, i64 0, i64 0)) #8
  %84 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 8
  %85 = bitcast %"class.perfetto::TracedValue"* %28 to i8*
  %86 = bitcast %"class.perfetto::TracedValue"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %86) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %86, i8* nonnull align 8 %85, i64 16, i1 false) #8
  %87 = load i32, i32* %84, align 4
  %88 = sext i32 %87 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %9, i64 %88) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %86) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %29, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.10, i64 0, i64 0)) #8
  %89 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 9
  %90 = bitcast %"class.perfetto::TracedValue"* %29 to i8*
  %91 = bitcast %"class.perfetto::TracedValue"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %91) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %91, i8* nonnull align 8 %90, i64 16, i1 false) #8
  %92 = load i32, i32* %89, align 4
  %93 = sext i32 %92 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %8, i64 %93) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %91) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %30, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0)) #8
  %94 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 10
  %95 = bitcast %"class.perfetto::TracedValue"* %30 to i8*
  %96 = bitcast %"class.perfetto::TracedValue"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %96, i8* nonnull align 8 %95, i64 16, i1 false) #8
  %97 = load i32, i32* %94, align 4
  %98 = sext i32 %97 to i64
  call void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"* nonnull %7, i64 %98) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %31, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.12, i64 0, i64 0)) #8
  %99 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %99) #8
  %100 = bitcast %"class.std::__1::basic_string"* %32 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  store i8 7, i8* %101, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %99, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #8
  %102 = getelementptr inbounds i8, i8* %99, i64 7
  store i8 0, i8* %102, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %31, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %32) #8
  %103 = load i8, i8* %101, align 1
  %104 = icmp slt i8 %103, 0
  br i1 %104, label %105, label %108

105:                                              ; preds = %55
  %106 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %32, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load i8*, i8** %106, align 8
  call void @_ZdlPv(i8* %107) #9
  br label %108

108:                                              ; preds = %55, %105
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %99) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %33, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.13, i64 0, i64 0)) #8
  %109 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %109) #8
  %110 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %111 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %110, i64 0, i32 1, i32 0
  store i8 7, i8* %111, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %109, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #8
  %112 = getelementptr inbounds i8, i8* %109, i64 7
  store i8 0, i8* %112, align 1
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* nonnull %33, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %34) #8
  %113 = load i8, i8* %111, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  call void @_ZdlPv(i8* %117) #9
  br label %118

118:                                              ; preds = %115, %108
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %109) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %35, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0)) #8
  %119 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 13
  %120 = bitcast %"class.perfetto::TracedValue"* %35 to i8*
  %121 = bitcast %"class.perfetto::TracedValue"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %121) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %121, i8* nonnull align 8 %120, i64 16, i1 false) #8
  call void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"* %119, %"class.perfetto::TracedValue"* nonnull %6) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %121) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %36, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0)) #8
  %122 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 14
  %123 = bitcast %"class.perfetto::TracedValue"* %36 to i8*
  %124 = bitcast %"class.perfetto::TracedValue"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %124) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %124, i8* nonnull align 8 %123, i64 16, i1 false) #8
  %125 = load i32, i32* %122, align 4
  call void @_ZN8perfetto17TraceFormatTraitsIN2ax5mojom5EventEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"* nonnull %5, i32 %125) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %124) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %37, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.16, i64 0, i64 0)) #8
  %126 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 15
  %127 = bitcast %"class.perfetto::TracedValue"* %37 to i8*
  %128 = bitcast %"class.perfetto::TracedValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %128) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %128, i8* nonnull align 8 %127, i64 16, i1 false) #8
  %129 = load i32, i32* %126, align 4
  call void @_ZN8perfetto17TraceFormatTraitsIN2ax5mojom15ScrollAlignmentEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"* nonnull %4, i32 %129) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %128) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %38, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i64 0, i64 0)) #8
  %130 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 16
  %131 = bitcast %"class.perfetto::TracedValue"* %38 to i8*
  %132 = bitcast %"class.perfetto::TracedValue"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %132) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %132, i8* nonnull align 8 %131, i64 16, i1 false) #8
  %133 = load i32, i32* %130, align 4
  call void @_ZN8perfetto17TraceFormatTraitsIN2ax5mojom15ScrollAlignmentEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"* nonnull %3, i32 %133) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %132) #8
  call void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* nonnull sret %39, %"class.perfetto::TracedDictionary"* nonnull %18, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.18, i64 0, i64 0)) #8
  %134 = getelementptr inbounds %"class.ax::mojom::blink::AXActionData", %"class.ax::mojom::blink::AXActionData"* %0, i64 0, i32 17
  %135 = bitcast %"class.perfetto::TracedValue"* %39 to i8*
  %136 = bitcast %"class.perfetto::TracedValue"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %136) #8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %136, i8* nonnull align 8 %135, i64 16, i1 false) #8
  %137 = load i32, i32* %134, align 4
  call void @_ZN8perfetto17TraceFormatTraitsIN2ax5mojom14ScrollBehaviorEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"* nonnull %17, i32 %137) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %136) #8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNO8perfetto11TracedValue15WriteDictionaryEv(%"class.perfetto::TracedDictionary"* sret, %"class.perfetto::TracedValue"*) local_unnamed_addr #2

declare void @_ZN8perfetto16TracedDictionary7AddItemENS_12StaticStringE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::TracedDictionary"*, i8*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2ax5mojom5blink12AXActionData8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZN2ax5mojom8internal17AXActionData_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8* %0, %"class.mojo::internal::ValidationContext"* %1) #8
  ret i1 %3
}

declare zeroext i1 @_ZN2ax5mojom8internal17AXActionData_Data8ValidateEPKvPN4mojo8internal17ValidationContextE(i8*, %"class.mojo::internal::ValidationContext"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN2ax5mojom20AXActionDataDataViewENS_9StructPtrINS2_5blink12AXActionDataEEEE4ReadES3_PS7_(%"class.ax::mojom::internal::AXActionData_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr.37"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 104) #9, !noalias !3
  %5 = bitcast i8* %4 to i32*
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 96, i1 false) #8, !noalias !3
  %7 = ptrtoint i8* %4 to i64
  %8 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 1
  %10 = icmp ult i32 %9, 38
  %11 = select i1 %10, i32 %9, i32 0
  store i32 %11, i32* %5, align 4
  %12 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"class.ax::mojom::internal::AXTreeID_Data", %"class.ax::mojom::internal::AXTreeID_Data"* %12, i64 0, i32 0
  %14 = load i32, i32* %13, align 1
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %3
  %17 = bitcast i8* %6 to %"class.ax::mojom::blink::AXTreeID"**
  store %"class.ax::mojom::blink::AXTreeID"* null, %"class.ax::mojom::blink::AXTreeID"** %17, align 8
  br label %21

18:                                               ; preds = %3
  %19 = bitcast i8* %6 to %"class.mojo::StructPtr"*
  %20 = tail call zeroext i1 @_ZN4mojo11UnionTraitsIN2ax5mojom16AXTreeIDDataViewENS_9StructPtrINS2_5blink8AXTreeIDEEEE4ReadES3_PS7_(%"class.ax::mojom::internal::AXTreeID_Data"* nonnull %12, %"class.mojo::Message"* %1, %"class.mojo::StructPtr"* %19) #8
  br i1 %20, label %21, label %157

21:                                               ; preds = %16, %18
  %22 = getelementptr inbounds i8, i8* %4, i64 16
  %23 = bitcast i8* %22 to %"class.WTF::String"*
  %24 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 4
  %25 = getelementptr inbounds %"struct.mojo::internal::Pointer.34", %"struct.mojo::internal::Pointer.34"* %24, i64 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %21
  tail call void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"* %23) #8
  br label %37

29:                                               ; preds = %21
  %30 = bitcast %"struct.mojo::internal::Pointer.34"* %24 to i8*
  %31 = getelementptr inbounds i8, i8* %30, i64 %26
  %32 = bitcast i8* %31 to %"class.mojo::internal::Array_Data"*
  %33 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data"* nonnull %32, %"class.WTF::String"* %23) #8
  br i1 %33, label %34, label %157

34:                                               ; preds = %29
  %35 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* dereferenceable(8) %23) #8
  br i1 %35, label %37, label %36

36:                                               ; preds = %34
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #8
  br label %37

37:                                               ; preds = %28, %36, %34
  %38 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 2
  %39 = load i32, i32* %38, align 1
  %40 = getelementptr inbounds i8, i8* %4, i64 24
  %41 = bitcast i8* %40 to i32*
  store i32 %39, i32* %41, align 8
  %42 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 5
  %43 = getelementptr inbounds i8, i8* %4, i64 28
  %44 = bitcast i32* %42 to <4 x i32>*
  %45 = load <4 x i32>, <4 x i32>* %44, align 1
  %46 = bitcast i8* %43 to <4 x i32>*
  store <4 x i32> %45, <4 x i32>* %46, align 4
  %47 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 9
  %48 = load i32, i32* %47, align 1
  %49 = getelementptr inbounds i8, i8* %4, i64 44
  %50 = bitcast i8* %49 to i32*
  store i32 %48, i32* %50, align 4
  %51 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 10
  %52 = load i32, i32* %51, align 1
  %53 = getelementptr inbounds i8, i8* %4, i64 48
  %54 = bitcast i8* %53 to i32*
  store i32 %52, i32* %54, align 8
  %55 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 11
  %56 = load i32, i32* %55, align 1
  %57 = getelementptr inbounds i8, i8* %4, i64 52
  %58 = bitcast i8* %57 to i32*
  store i32 %56, i32* %58, align 4
  %59 = getelementptr inbounds i8, i8* %4, i64 56
  %60 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 13
  %61 = getelementptr inbounds %"struct.mojo::internal::Pointer.35", %"struct.mojo::internal::Pointer.35"* %60, i64 0, i32 0
  %62 = load i64, i64* %61, align 8
  %63 = icmp eq i64 %62, 0
  %64 = bitcast %"struct.mojo::internal::Pointer.35"* %60 to i8*
  %65 = getelementptr inbounds i8, i8* %64, i64 %62
  br i1 %63, label %106, label %66

66:                                               ; preds = %37
  %67 = getelementptr inbounds i8, i8* %65, i64 16
  %68 = bitcast i8* %67 to i32*
  %69 = load i32, i32* %68, align 1
  %70 = icmp slt i32 %69, 0
  br i1 %70, label %157, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds i8, i8* %65, i64 20
  %73 = bitcast i8* %72 to i32*
  %74 = load i32, i32* %73, align 1
  %75 = icmp slt i32 %74, 0
  br i1 %75, label %157, label %76

76:                                               ; preds = %71
  %77 = getelementptr inbounds i8, i8* %65, i64 8
  %78 = bitcast i8* %77 to i32*
  %79 = load i32, i32* %78, align 1
  %80 = getelementptr inbounds i8, i8* %65, i64 12
  %81 = bitcast i8* %80 to i32*
  %82 = load i32, i32* %81, align 1
  %83 = bitcast i8* %59 to i32*
  store i32 %79, i32* %83, align 4
  %84 = getelementptr inbounds i8, i8* %4, i64 60
  %85 = bitcast i8* %84 to i32*
  store i32 %82, i32* %85, align 4
  %86 = icmp sgt i32 %79, 0
  %87 = icmp sgt i32 %69, 0
  %88 = and i1 %87, %86
  %89 = sub nuw nsw i32 2147483647, %79
  %90 = icmp ult i32 %89, %69
  %91 = and i1 %90, %88
  %92 = select i1 %91, i32 %89, i32 %69
  %93 = icmp sgt i32 %92, 0
  %94 = select i1 %93, i32 %92, i32 0
  %95 = getelementptr inbounds i8, i8* %4, i64 64
  %96 = bitcast i8* %95 to i32*
  store i32 %94, i32* %96, align 4
  %97 = icmp sgt i32 %82, 0
  %98 = sub nuw nsw i32 2147483647, %82
  %99 = icmp ult i32 %98, %74
  %100 = and i1 %97, %99
  %101 = select i1 %100, i32 %98, i32 %74
  %102 = icmp sgt i32 %101, 0
  %103 = select i1 %102, i32 %101, i32 0
  %104 = getelementptr inbounds i8, i8* %4, i64 68
  %105 = bitcast i8* %104 to i32*
  store i32 %103, i32* %105, align 4
  br label %106

106:                                              ; preds = %76, %37
  %107 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 14
  %108 = getelementptr inbounds %"struct.mojo::internal::Pointer.36", %"struct.mojo::internal::Pointer.36"* %107, i64 0, i32 0
  %109 = load i64, i64* %108, align 8
  %110 = icmp eq i64 %109, 0
  %111 = bitcast %"struct.mojo::internal::Pointer.36"* %107 to i8*
  %112 = getelementptr inbounds i8, i8* %111, i64 %109
  br i1 %110, label %124, label %113

113:                                              ; preds = %106
  %114 = getelementptr inbounds i8, i8* %4, i64 72
  %115 = getelementptr inbounds i8, i8* %112, i64 8
  %116 = bitcast i8* %115 to i32*
  %117 = load i32, i32* %116, align 1
  %118 = getelementptr inbounds i8, i8* %112, i64 12
  %119 = bitcast i8* %118 to i32*
  %120 = load i32, i32* %119, align 1
  %121 = bitcast i8* %114 to i32*
  store i32 %117, i32* %121, align 4
  %122 = getelementptr inbounds i8, i8* %4, i64 76
  %123 = bitcast i8* %122 to i32*
  store i32 %120, i32* %123, align 4
  br label %124

124:                                              ; preds = %106, %113
  %125 = getelementptr inbounds i8, i8* %4, i64 80
  %126 = bitcast i8* %125 to %"class.WTF::String"*
  %127 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 15
  %128 = getelementptr inbounds %"struct.mojo::internal::Pointer.34", %"struct.mojo::internal::Pointer.34"* %127, i64 0, i32 0
  %129 = load i64, i64* %128, align 8
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %124
  tail call void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"* %126) #8
  br label %140

132:                                              ; preds = %124
  %133 = bitcast %"struct.mojo::internal::Pointer.34"* %127 to i8*
  %134 = getelementptr inbounds i8, i8* %133, i64 %129
  %135 = bitcast i8* %134 to %"class.mojo::internal::Array_Data"*
  %136 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data"* nonnull %135, %"class.WTF::String"* %126) #8
  br i1 %136, label %137, label %157

137:                                              ; preds = %132
  %138 = tail call zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* dereferenceable(8) %126) #8
  br i1 %138, label %140, label %139

139:                                              ; preds = %137
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #8
  br label %140

140:                                              ; preds = %131, %139, %137
  %141 = getelementptr inbounds i8, i8* %4, i64 88
  %142 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 12
  %143 = load i32, i32* %142, align 1
  %144 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 16
  %145 = load i32, i32* %144, align 1
  %146 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 17
  %147 = load i32, i32* %146, align 1
  %148 = getelementptr inbounds %"class.ax::mojom::internal::AXActionData_Data", %"class.ax::mojom::internal::AXActionData_Data"* %0, i64 0, i32 18
  %149 = load i32, i32* %148, align 1
  %150 = insertelement <4 x i32> undef, i32 %143, i32 0
  %151 = insertelement <4 x i32> %150, i32 %145, i32 1
  %152 = insertelement <4 x i32> %151, i32 %147, i32 2
  %153 = insertelement <4 x i32> %152, i32 %149, i32 3
  %154 = icmp ult <4 x i32> %153, <i32 59, i32 7, i32 7, i32 3>
  %155 = select <4 x i1> %154, <4 x i32> %153, <4 x i32> zeroinitializer
  %156 = bitcast i8* %141 to <4 x i32>*
  store <4 x i32> %155, <4 x i32>* %156, align 4
  br label %157

157:                                              ; preds = %132, %29, %18, %66, %71, %140
  %158 = phi i8 [ 1, %140 ], [ 0, %71 ], [ 0, %66 ], [ 0, %18 ], [ 0, %29 ], [ 0, %132 ]
  %159 = getelementptr inbounds %"class.mojo::StructPtr.37", %"class.mojo::StructPtr.37"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load %"class.ax::mojom::blink::AXActionData"*, %"class.ax::mojom::blink::AXActionData"** %159, align 8
  store %"class.ax::mojom::blink::AXActionData"* null, %"class.ax::mojom::blink::AXActionData"** %159, align 8
  %161 = icmp eq %"class.ax::mojom::blink::AXActionData"* %160, null
  br i1 %161, label %162, label %165

162:                                              ; preds = %157
  %163 = bitcast %"class.mojo::StructPtr.37"* %2 to i64*
  store i64 %7, i64* %163, align 8
  %164 = icmp ne i8 %158, 0
  br label %173

165:                                              ; preds = %157
  tail call void @_ZN2ax5mojom5blink12AXActionDataD2Ev(%"class.ax::mojom::blink::AXActionData"* nonnull %160) #8
  %166 = bitcast %"class.ax::mojom::blink::AXActionData"* %160 to i8*
  tail call void @_ZdlPv(i8* %166) #9
  %167 = bitcast %"class.mojo::StructPtr.37"* %2 to i64*
  %168 = load %"class.ax::mojom::blink::AXActionData"*, %"class.ax::mojom::blink::AXActionData"** %159, align 8
  store i64 %7, i64* %167, align 8
  %169 = icmp ne i8 %158, 0
  %170 = icmp eq %"class.ax::mojom::blink::AXActionData"* %168, null
  br i1 %170, label %173, label %171

171:                                              ; preds = %165
  tail call void @_ZN2ax5mojom5blink12AXActionDataD2Ev(%"class.ax::mojom::blink::AXActionData"* nonnull %168) #8
  %172 = bitcast %"class.ax::mojom::blink::AXActionData"* %168 to i8*
  tail call void @_ZdlPv(i8* %172) #9
  br label %173

173:                                              ; preds = %162, %165, %171
  %174 = phi i1 [ %164, %162 ], [ %169, %165 ], [ %169, %171 ]
  ret i1 %174
}

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #3

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2ax5mojom5blink8AXTreeIDD1Ev(%"class.ax::mojom::blink::AXTreeID"*) unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZN8perfetto17TraceFormatTraitsIN2ax5mojom6ActionEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"*, i32) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2

declare void @_ZNK3WTF6String14WriteIntoTraceEN8perfetto11TracedValueE(%"class.WTF::String"*, %"class.perfetto::TracedValue"*) local_unnamed_addr #2

declare void @_ZNO8perfetto11TracedValue10WriteInt64El(%"class.perfetto::TracedValue"*, i64) local_unnamed_addr #2

declare void @_ZN8perfetto17TraceFormatTraitsIN2ax5mojom5EventEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"*, i32) local_unnamed_addr #2

declare void @_ZN8perfetto17TraceFormatTraitsIN2ax5mojom15ScrollAlignmentEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"*, i32) local_unnamed_addr #2

declare void @_ZN8perfetto17TraceFormatTraitsIN2ax5mojom14ScrollBehaviorEvE14WriteIntoTraceENS_11TracedValueES3_(%"class.perfetto::TracedValue"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZN4mojo11UnionTraitsIN2ax5mojom16AXTreeIDDataViewENS_9StructPtrINS2_5blink8AXTreeIDEEEE4ReadES3_PS7_(%"class.ax::mojom::internal::AXTreeID_Data"*, %"class.mojo::Message"*, %"class.mojo::StructPtr"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE4ReadENS_14StringDataViewEPS2_(%"class.mojo::internal::Array_Data"*, %"class.WTF::String"*) local_unnamed_addr #2

declare zeroext i1 @_ZN4mojo12StringTraitsIN3WTF6StringEE11IsValidUTF8ERKS2_(%"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() local_unnamed_addr #2

declare void @_ZN4mojo12StringTraitsIN3WTF6StringEE9SetToNullEPS2_(%"class.WTF::String"*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN2ax5mojom5blink12AXActionData3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZN2ax5mojom5blink12AXActionData3NewIJEEEN4mojo9StructPtrIS2_EEDpOT_"}
