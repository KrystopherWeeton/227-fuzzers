; ModuleID = '../../third_party/libavif/src/src/colr.c'
source_filename = "../../third_party/libavif/src/src/colr.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.avifColorPrimariesTable = type { i16, i8*, [8 x float] }
%struct.avifMatrixCoefficientsTable = type { i16, i8*, float, float }
%struct.avifImage = type { i32, i32, i32, i32, i32, i32, [3 x i8*], [3 x i32], i32, i32, i8*, i32, i32, i32, %struct.avifRWData, i16, i16, i16, i32, %struct.avifPixelAspectRatioBox, %struct.avifCleanApertureBox, %struct.avifImageRotation, %struct.avifImageMirror, %struct.avifRWData, %struct.avifRWData }
%struct.avifPixelAspectRatioBox = type { i32, i32 }
%struct.avifCleanApertureBox = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%struct.avifImageRotation = type { i8 }
%struct.avifImageMirror = type { i8 }
%struct.avifRWData = type { i8*, i64 }

@avifColorPrimariesTables = internal unnamed_addr constant [11 x %struct.avifColorPrimariesTable] [%struct.avifColorPrimariesTable { i16 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), [8 x float] [float 0x3FE47AE140000000, float 0x3FD51EB860000000, float 0x3FD3333340000000, float 0x3FE3333340000000, float 0x3FC3333340000000, float 0x3FAEB851E0000000, float 0x3FD40346E0000000, float 0x3FD50E5600000000] }, %struct.avifColorPrimariesTable { i16 4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i32 0, i32 0), [8 x float] [float 0x3FE570A3E0000000, float 0x3FD51EB860000000, float 0x3FCAE147A0000000, float 0x3FE6B851E0000000, float 0x3FC1EB8520000000, float 0x3FB47AE140000000, float 0x3FD3D70A40000000, float 0x3FD4395820000000] }, %struct.avifColorPrimariesTable { i16 5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0), [8 x float] [float 0x3FE47AE140000000, float 0x3FD51EB860000000, float 0x3FD28F5C20000000, float 0x3FE3333340000000, float 0x3FC3333340000000, float 0x3FAEB851E0000000, float 0x3FD40346E0000000, float 0x3FD50E5600000000] }, %struct.avifColorPrimariesTable { i16 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), [8 x float] [float 0x3FE428F5C0000000, float 0x3FD5C28F60000000, float 0x3FD3D70A40000000, float 0x3FE30A3D80000000, float 0x3FC3D70A40000000, float 0x3FB1EB8520000000, float 0x3FD40346E0000000, float 0x3FD50E5600000000] }, %struct.avifColorPrimariesTable { i16 7, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.4, i32 0, i32 0), [8 x float] [float 0x3FE428F5C0000000, float 0x3FD5C28F60000000, float 0x3FD3D70A40000000, float 0x3FE30A3D80000000, float 0x3FC3D70A40000000, float 0x3FB1EB8520000000, float 0x3FD40346E0000000, float 0x3FD50E5600000000] }, %struct.avifColorPrimariesTable { i16 8, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i32 0, i32 0), [8 x float] [float 0x3FE5CAC080000000, float 0x3FD46A7F00000000, float 0x3FCF1A9FC0000000, float 0x3FE624DD20000000, float 0x3FC28F5C20000000, float 0x3FA9168720000000, float 0x3FD3D70A40000000, float 0x3FD4395820000000] }, %struct.avifColorPrimariesTable { i16 9, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.6, i32 0, i32 0), [8 x float] [float 0x3FE6A7EFA0000000, float 0x3FD2B020C0000000, float 0x3FC5C28F60000000, float 0x3FE9810620000000, float 0x3FC0C49BA0000000, float 0x3FA78D4FE0000000, float 0x3FD40346E0000000, float 0x3FD50E5600000000] }, %struct.avifColorPrimariesTable { i16 10, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.7, i32 0, i32 0), [8 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0x3FD554C980000000, float 0x3FD554C980000000] }, %struct.avifColorPrimariesTable { i16 11, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.8, i32 0, i32 0), [8 x float] [float 0x3FE5C28F60000000, float 0x3FD47AE140000000, float 0x3FD0F5C280000000, float 0x3FE6147AE0000000, float 0x3FC3333340000000, float 0x3FAEB851E0000000, float 0x3FD4189380000000, float 0x3FD676C8C0000000] }, %struct.avifColorPrimariesTable { i16 12, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.9, i32 0, i32 0), [8 x float] [float 0x3FE5C28F60000000, float 0x3FD47AE140000000, float 0x3FD0F5C280000000, float 0x3FE6147AE0000000, float 0x3FC3333340000000, float 0x3FAEB851E0000000, float 0x3FD40346E0000000, float 0x3FD50E5600000000] }, %struct.avifColorPrimariesTable { i16 22, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.10, i32 0, i32 0), [8 x float] [float 0x3FE428F5C0000000, float 0x3FD5C28F60000000, float 0x3FD2E147A0000000, float 0x3FE35C2900000000, float 0x3FC3D70A40000000, float 0x3FB3B645A0000000, float 0x3FD40346E0000000, float 0x3FD50E5600000000] }], align 16
@.str = private unnamed_addr constant [7 x i8] c"BT.709\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"BT.470-6 System M\00", align 1
@.str.2 = private unnamed_addr constant [19 x i8] c"BT.470-6 System BG\00", align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"BT.601\00", align 1
@.str.4 = private unnamed_addr constant [11 x i8] c"SMPTE 240M\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"Generic film\00", align 1
@.str.6 = private unnamed_addr constant [8 x i8] c"BT.2020\00", align 1
@.str.7 = private unnamed_addr constant [4 x i8] c"XYZ\00", align 1
@.str.8 = private unnamed_addr constant [15 x i8] c"SMPTE RP 431-2\00", align 1
@.str.9 = private unnamed_addr constant [24 x i8] c"SMPTE EG 432-1 (DCI P3)\00", align 1
@.str.10 = private unnamed_addr constant [17 x i8] c"EBU Tech. 3213-E\00", align 1
@matrixCoefficientsTables = internal unnamed_addr constant [6 x %struct.avifMatrixCoefficientsTable] [%struct.avifMatrixCoefficientsTable { i16 1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str, i32 0, i32 0), float 0x3FCB367A00000000, float 0x3FB27BB300000000 }, %struct.avifMatrixCoefficientsTable { i16 4, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.11, i32 0, i32 0), float 0x3FD3333340000000, float 0x3FBC28F5C0000000 }, %struct.avifMatrixCoefficientsTable { i16 5, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.2, i32 0, i32 0), float 0x3FD322D0E0000000, float 0x3FBD2F1AA0000000 }, %struct.avifMatrixCoefficientsTable { i16 6, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i32 0, i32 0), float 0x3FD322D0E0000000, float 0x3FBD2F1AA0000000 }, %struct.avifMatrixCoefficientsTable { i16 7, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.12, i32 0, i32 0), float 0x3FCB22D0E0000000, float 0x3FB645A1C0000000 }, %struct.avifMatrixCoefficientsTable { i16 9, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.13, i32 0, i32 0), float 0x3FD0D013A0000000, float 0x3FAE5C91E0000000 }], align 16
@.str.11 = private unnamed_addr constant [16 x i8] c"FCC USFC 73.682\00", align 1
@.str.12 = private unnamed_addr constant [13 x i8] c"SMPTE ST 240\00", align 1
@.str.13 = private unnamed_addr constant [33 x i8] c"BT.2020 (non-constant luminance)\00", align 1
@switch.table.avifCalcYUVCoefficients = private unnamed_addr constant [22 x i64] [i64 0, i64 0, i64 0, i64 1, i64 2, i64 3, i64 4, i64 5, i64 6, i64 7, i64 8, i64 9, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 0, i64 10], align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @avifColorPrimariesGetValues(i16 zeroext, float* nocapture) local_unnamed_addr #0 {
  %3 = add i16 %0, -1
  %4 = icmp ult i16 %3, 22
  br i1 %4, label %5, label %16

5:                                                ; preds = %2
  %6 = zext i16 %3 to i32
  %7 = lshr i32 2101241, %6
  %8 = and i32 %7, 1
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %5
  %11 = sext i16 %3 to i64
  %12 = getelementptr inbounds [22 x i64], [22 x i64]* @switch.table.avifCalcYUVCoefficients, i64 0, i64 %11
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds [11 x %struct.avifColorPrimariesTable], [11 x %struct.avifColorPrimariesTable]* @avifColorPrimariesTables, i64 0, i64 %13, i32 2, i64 0
  %15 = bitcast float* %14 to i8*
  br label %16

16:                                               ; preds = %2, %5, %10
  %17 = phi i8* [ %15, %10 ], [ bitcast (float* getelementptr inbounds ([11 x %struct.avifColorPrimariesTable], [11 x %struct.avifColorPrimariesTable]* @avifColorPrimariesTables, i64 0, i64 0, i32 2, i64 0) to i8*), %5 ], [ bitcast (float* getelementptr inbounds ([11 x %struct.avifColorPrimariesTable], [11 x %struct.avifColorPrimariesTable]* @avifColorPrimariesTables, i64 0, i64 0, i32 2, i64 0) to i8*), %2 ]
  %18 = bitcast float* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %18, i8* align 16 %17, i64 32, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree nounwind ssp uwtable
define hidden zeroext i16 @avifColorPrimariesFind(float* nocapture readonly, i8**) local_unnamed_addr #2 {
  %3 = icmp ne i8** %1, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  store i8* null, i8** %1, align 8
  br label %5

5:                                                ; preds = %4, %2
  %6 = load float, float* %0, align 4
  %7 = getelementptr inbounds float, float* %0, i64 1
  %8 = getelementptr inbounds float, float* %0, i64 2
  %9 = getelementptr inbounds float, float* %0, i64 3
  %10 = getelementptr inbounds float, float* %0, i64 4
  %11 = getelementptr inbounds float, float* %0, i64 5
  %12 = getelementptr inbounds float, float* %0, i64 6
  %13 = getelementptr inbounds float, float* %0, i64 7
  br label %14

14:                                               ; preds = %77, %5
  %15 = phi i64 [ 0, %5 ], [ %78, %77 ]
  %16 = getelementptr inbounds [11 x %struct.avifColorPrimariesTable], [11 x %struct.avifColorPrimariesTable]* @avifColorPrimariesTables, i64 0, i64 %15, i32 2, i64 0
  %17 = load float, float* %16, align 16
  %18 = fsub float %6, %17
  %19 = tail call float @llvm.fabs.f32(float %18) #4
  %20 = fcmp uge float %19, 0x3F50624DE0000000
  br i1 %20, label %77, label %21

21:                                               ; preds = %14
  %22 = load float, float* %7, align 4
  %23 = getelementptr inbounds [11 x %struct.avifColorPrimariesTable], [11 x %struct.avifColorPrimariesTable]* @avifColorPrimariesTables, i64 0, i64 %15, i32 2, i64 1
  %24 = load float, float* %23, align 4
  %25 = fsub float %22, %24
  %26 = tail call float @llvm.fabs.f32(float %25) #4
  %27 = fcmp uge float %26, 0x3F50624DE0000000
  br i1 %27, label %77, label %28

28:                                               ; preds = %21
  %29 = load float, float* %8, align 4
  %30 = getelementptr inbounds [11 x %struct.avifColorPrimariesTable], [11 x %struct.avifColorPrimariesTable]* @avifColorPrimariesTables, i64 0, i64 %15, i32 2, i64 2
  %31 = load float, float* %30, align 8
  %32 = fsub float %29, %31
  %33 = tail call float @llvm.fabs.f32(float %32) #4
  %34 = fcmp uge float %33, 0x3F50624DE0000000
  br i1 %34, label %77, label %35

35:                                               ; preds = %28
  %36 = load float, float* %9, align 4
  %37 = getelementptr inbounds [11 x %struct.avifColorPrimariesTable], [11 x %struct.avifColorPrimariesTable]* @avifColorPrimariesTables, i64 0, i64 %15, i32 2, i64 3
  %38 = load float, float* %37, align 4
  %39 = fsub float %36, %38
  %40 = tail call float @llvm.fabs.f32(float %39) #4
  %41 = fcmp uge float %40, 0x3F50624DE0000000
  br i1 %41, label %77, label %42

42:                                               ; preds = %35
  %43 = load float, float* %10, align 4
  %44 = getelementptr inbounds [11 x %struct.avifColorPrimariesTable], [11 x %struct.avifColorPrimariesTable]* @avifColorPrimariesTables, i64 0, i64 %15, i32 2, i64 4
  %45 = load float, float* %44, align 16
  %46 = fsub float %43, %45
  %47 = tail call float @llvm.fabs.f32(float %46) #4
  %48 = fcmp uge float %47, 0x3F50624DE0000000
  br i1 %48, label %77, label %49

49:                                               ; preds = %42
  %50 = load float, float* %11, align 4
  %51 = getelementptr inbounds [11 x %struct.avifColorPrimariesTable], [11 x %struct.avifColorPrimariesTable]* @avifColorPrimariesTables, i64 0, i64 %15, i32 2, i64 5
  %52 = load float, float* %51, align 4
  %53 = fsub float %50, %52
  %54 = tail call float @llvm.fabs.f32(float %53) #4
  %55 = fcmp uge float %54, 0x3F50624DE0000000
  br i1 %55, label %77, label %56

56:                                               ; preds = %49
  %57 = load float, float* %12, align 4
  %58 = getelementptr inbounds [11 x %struct.avifColorPrimariesTable], [11 x %struct.avifColorPrimariesTable]* @avifColorPrimariesTables, i64 0, i64 %15, i32 2, i64 6
  %59 = load float, float* %58, align 8
  %60 = fsub float %57, %59
  %61 = tail call float @llvm.fabs.f32(float %60) #4
  %62 = fcmp uge float %61, 0x3F50624DE0000000
  br i1 %62, label %77, label %63

63:                                               ; preds = %56
  %64 = load float, float* %13, align 4
  %65 = getelementptr inbounds [11 x %struct.avifColorPrimariesTable], [11 x %struct.avifColorPrimariesTable]* @avifColorPrimariesTables, i64 0, i64 %15, i32 2, i64 7
  %66 = load float, float* %65, align 4
  %67 = fsub float %64, %66
  %68 = tail call float @llvm.fabs.f32(float %67) #4
  %69 = fcmp uge float %68, 0x3F50624DE0000000
  br i1 %69, label %77, label %70

70:                                               ; preds = %63
  %71 = and i64 %15, 4294967295
  br i1 %3, label %72, label %80

72:                                               ; preds = %70
  %73 = getelementptr inbounds [11 x %struct.avifColorPrimariesTable], [11 x %struct.avifColorPrimariesTable]* @avifColorPrimariesTables, i64 0, i64 %71, i32 1
  %74 = bitcast i8** %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast i8** %1 to i64*
  store i64 %75, i64* %76, align 8
  br label %80

77:                                               ; preds = %14, %21, %28, %35, %42, %49, %56, %63
  %78 = add nuw nsw i64 %15, 1
  %79 = icmp eq i64 %78, 11
  br i1 %79, label %83, label %14

80:                                               ; preds = %70, %72
  %81 = getelementptr inbounds [11 x %struct.avifColorPrimariesTable], [11 x %struct.avifColorPrimariesTable]* @avifColorPrimariesTables, i64 0, i64 %71, i32 0
  %82 = load i16, i16* %81, align 16
  br label %83

83:                                               ; preds = %77, %80
  %84 = phi i16 [ %82, %80 ], [ 0, %77 ]
  ret i16 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden void @avifCalcYUVCoefficients(%struct.avifImage* nocapture readonly, float* nocapture, float* nocapture, float* nocapture) local_unnamed_addr #0 {
  %5 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %0, i64 0, i32 17
  %6 = load i16, i16* %5, align 4
  switch i16 %6, label %110 [
    i16 12, label %7
    i16 1, label %102
    i16 4, label %97
    i16 5, label %98
    i16 6, label %99
    i16 7, label %100
    i16 9, label %101
  ]

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.avifImage, %struct.avifImage* %0, i64 0, i32 15
  %9 = load i16, i16* %8, align 8
  %10 = add i16 %9, -1
  %11 = icmp ult i16 %10, 22
  br i1 %11, label %12, label %37

12:                                               ; preds = %7
  %13 = zext i16 %10 to i32
  %14 = lshr i32 2101241, %13
  %15 = and i32 %14, 1
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %37, label %17

17:                                               ; preds = %12
  %18 = sext i16 %10 to i64
  %19 = getelementptr inbounds [22 x i64], [22 x i64]* @switch.table.avifCalcYUVCoefficients, i64 0, i64 %18
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds [11 x %struct.avifColorPrimariesTable], [11 x %struct.avifColorPrimariesTable]* @avifColorPrimariesTables, i64 0, i64 %20, i32 2, i64 0
  %22 = load float, float* %21, align 16
  %23 = getelementptr inbounds [11 x %struct.avifColorPrimariesTable], [11 x %struct.avifColorPrimariesTable]* @avifColorPrimariesTables, i64 0, i64 %20, i32 2, i64 1
  %24 = load float, float* %23, align 4
  %25 = getelementptr inbounds [11 x %struct.avifColorPrimariesTable], [11 x %struct.avifColorPrimariesTable]* @avifColorPrimariesTables, i64 0, i64 %20, i32 2, i64 2
  %26 = load float, float* %25, align 8
  %27 = getelementptr inbounds [11 x %struct.avifColorPrimariesTable], [11 x %struct.avifColorPrimariesTable]* @avifColorPrimariesTables, i64 0, i64 %20, i32 2, i64 3
  %28 = load float, float* %27, align 4
  %29 = getelementptr inbounds [11 x %struct.avifColorPrimariesTable], [11 x %struct.avifColorPrimariesTable]* @avifColorPrimariesTables, i64 0, i64 %20, i32 2, i64 4
  %30 = load float, float* %29, align 16
  %31 = getelementptr inbounds [11 x %struct.avifColorPrimariesTable], [11 x %struct.avifColorPrimariesTable]* @avifColorPrimariesTables, i64 0, i64 %20, i32 2, i64 5
  %32 = load float, float* %31, align 4
  %33 = getelementptr inbounds [11 x %struct.avifColorPrimariesTable], [11 x %struct.avifColorPrimariesTable]* @avifColorPrimariesTables, i64 0, i64 %20, i32 2, i64 6
  %34 = load float, float* %33, align 8
  %35 = getelementptr inbounds [11 x %struct.avifColorPrimariesTable], [11 x %struct.avifColorPrimariesTable]* @avifColorPrimariesTables, i64 0, i64 %20, i32 2, i64 7
  %36 = load float, float* %35, align 4
  br label %37

37:                                               ; preds = %12, %7, %17
  %38 = phi float [ %36, %17 ], [ 0x3FD50E5600000000, %7 ], [ 0x3FD50E5600000000, %12 ]
  %39 = phi float [ %34, %17 ], [ 0x3FD40346E0000000, %7 ], [ 0x3FD40346E0000000, %12 ]
  %40 = phi float [ %32, %17 ], [ 0x3FAEB851E0000000, %7 ], [ 0x3FAEB851E0000000, %12 ]
  %41 = phi float [ %30, %17 ], [ 0x3FC3333340000000, %7 ], [ 0x3FC3333340000000, %12 ]
  %42 = phi float [ %28, %17 ], [ 0x3FE3333340000000, %7 ], [ 0x3FE3333340000000, %12 ]
  %43 = phi float [ %26, %17 ], [ 0x3FD3333340000000, %7 ], [ 0x3FD3333340000000, %12 ]
  %44 = phi float [ %24, %17 ], [ 0x3FD51EB860000000, %7 ], [ 0x3FD51EB860000000, %12 ]
  %45 = phi float [ %22, %17 ], [ 0x3FE47AE140000000, %7 ], [ 0x3FE47AE140000000, %12 ]
  %46 = fadd float %44, %45
  %47 = fsub float 1.000000e+00, %46
  %48 = fadd float %42, %43
  %49 = fsub float 1.000000e+00, %48
  %50 = fadd float %40, %41
  %51 = fsub float 1.000000e+00, %50
  %52 = fadd float %38, %39
  %53 = fsub float 1.000000e+00, %52
  %54 = fmul float %42, %51
  %55 = fmul float %40, %49
  %56 = fsub float %54, %55
  %57 = fmul float %39, %56
  %58 = fmul float %41, %49
  %59 = fmul float %43, %51
  %60 = fsub float %58, %59
  %61 = fmul float %38, %60
  %62 = fadd float %57, %61
  %63 = fmul float %40, %43
  %64 = fmul float %41, %42
  %65 = fsub float %63, %64
  %66 = fmul float %53, %65
  %67 = fadd float %66, %62
  %68 = fmul float %44, %67
  %69 = fmul float %45, %56
  %70 = fmul float %40, %47
  %71 = fmul float %51, %44
  %72 = fsub float %70, %71
  %73 = fmul float %43, %72
  %74 = fadd float %69, %73
  %75 = fmul float %44, %49
  %76 = fmul float %42, %47
  %77 = fsub float %75, %76
  %78 = fmul float %41, %77
  %79 = fadd float %78, %74
  %80 = fmul float %38, %79
  %81 = fdiv float %68, %80
  %82 = fmul float %39, %77
  %83 = fmul float %43, %47
  %84 = fmul float %45, %49
  %85 = fsub float %83, %84
  %86 = fmul float %38, %85
  %87 = fadd float %82, %86
  %88 = fmul float %42, %45
  %89 = fmul float %43, %44
  %90 = fsub float %88, %89
  %91 = fmul float %53, %90
  %92 = fadd float %91, %87
  %93 = fmul float %40, %92
  %94 = fdiv float %93, %80
  %95 = fsub float 1.000000e+00, %81
  %96 = fsub float %95, %94
  br label %110

97:                                               ; preds = %4
  br label %102

98:                                               ; preds = %4
  br label %102

99:                                               ; preds = %4
  br label %102

100:                                              ; preds = %4
  br label %102

101:                                              ; preds = %4
  br label %102

102:                                              ; preds = %101, %100, %99, %98, %97, %4
  %103 = phi i64 [ 0, %4 ], [ 1, %97 ], [ 2, %98 ], [ 3, %99 ], [ 4, %100 ], [ 5, %101 ]
  %104 = getelementptr inbounds [6 x %struct.avifMatrixCoefficientsTable], [6 x %struct.avifMatrixCoefficientsTable]* @matrixCoefficientsTables, i64 0, i64 %103, i32 2
  %105 = load float, float* %104, align 8
  %106 = getelementptr inbounds [6 x %struct.avifMatrixCoefficientsTable], [6 x %struct.avifMatrixCoefficientsTable]* @matrixCoefficientsTables, i64 0, i64 %103, i32 3
  %107 = load float, float* %106, align 4
  %108 = fsub float 1.000000e+00, %105
  %109 = fsub float %108, %107
  br label %110

110:                                              ; preds = %102, %37, %4
  %111 = phi float [ 0x3FD322D0E0000000, %4 ], [ %81, %37 ], [ %105, %102 ]
  %112 = phi float [ 0x3FBD2F1AA0000000, %4 ], [ %94, %37 ], [ %107, %102 ]
  %113 = phi float [ 0x3FE2C8B420000000, %4 ], [ %96, %37 ], [ %109, %102 ]
  store float %111, float* %1, align 4
  store float %113, float* %2, align 4
  store float %112, float* %3, align 4
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
