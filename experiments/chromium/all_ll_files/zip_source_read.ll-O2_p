; ModuleID = '../../third_party/libzip/src/lib/zip_source_read.c'
source_filename = "../../third_party/libzip/src/lib/zip_source_read.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.zip_source = type { %struct.zip_source*, %union.anon, i8*, %struct.zip_error, i64, i32, i32, i8, %struct.zip*, i32, i8, i8 }
%union.anon = type { i64 (i8*, i8*, i64, i32)* }
%struct.zip_error = type { i32, i32, i8* }
%struct.zip = type { %struct.zip_source*, i32, %struct.zip_error, i32, i32, i8*, %struct.zip_string*, %struct.zip_string*, i8, i64, i64, %struct.zip_entry*, i32, i32, %struct.zip_source**, %struct.zip_hash*, %struct.zip_progress* }
%struct.zip_string = type { i8*, i16, i32, i8*, i32 }
%struct.zip_entry = type { %struct.zip_dirent*, %struct.zip_dirent*, %struct.zip_source*, i8 }
%struct.zip_dirent = type { i32, i8, i8, i8, i16, i16, i16, i32, i64, i32, i64, i64, %struct.zip_string*, %struct.zip_extra_field*, %struct.zip_string*, i32, i16, i32, i64, i16, i16, i8* }
%struct.zip_extra_field = type { %struct.zip_extra_field*, i32, i16, i16, i8* }
%struct.zip_hash = type opaque
%struct.zip_progress = type opaque

; Function Attrs: nounwind ssp uwtable
define hidden i64 @zip_source_read(%struct.zip_source*, i8*, i64) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %0, i64 0, i32 7
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %43

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %0, i64 0, i32 5
  %9 = load i32, i32* %8, align 8
  %10 = icmp eq i32 %9, 0
  %11 = icmp slt i64 %2, 0
  %12 = or i1 %11, %10
  br i1 %12, label %17, label %13

13:                                               ; preds = %7
  %14 = icmp ne i64 %2, 0
  %15 = icmp eq i8* %1, null
  %16 = and i1 %15, %14
  br i1 %16, label %17, label %19

17:                                               ; preds = %13, %7
  %18 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %0, i64 0, i32 3
  tail call void @zip_error_set(%struct.zip_error* %18, i32 18, i32 0) #3
  br label %43

19:                                               ; preds = %13
  %20 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %0, i64 0, i32 11
  %21 = load i8, i8* %20, align 1, !range !2
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %43

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %0, i64 0, i32 10
  %25 = load i8, i8* %24, align 4, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = and i1 %26, %14
  br i1 %27, label %30, label %43

28:                                               ; preds = %39
  %29 = icmp ult i64 %41, %2
  br i1 %29, label %30, label %43

30:                                               ; preds = %23, %28
  %31 = phi i64 [ %41, %28 ], [ 0, %23 ]
  %32 = getelementptr inbounds i8, i8* %1, i64 %31
  %33 = sub i64 %2, %31
  %34 = tail call i64 @_zip_source_call(%struct.zip_source* %0, i8* %32, i64 %33, i32 1) #3
  %35 = icmp slt i64 %34, 0
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  store i8 1, i8* %20, align 1
  %37 = icmp eq i64 %31, 0
  %38 = select i1 %37, i64 -1, i64 %31
  br label %43

39:                                               ; preds = %30
  %40 = icmp eq i64 %34, 0
  %41 = add i64 %34, %31
  br i1 %40, label %42, label %28

42:                                               ; preds = %39
  store i8 1, i8* %24, align 4
  br label %43

43:                                               ; preds = %28, %23, %42, %36, %19, %3, %17
  %44 = phi i64 [ -1, %17 ], [ -1, %3 ], [ -1, %19 ], [ 0, %23 ], [ %38, %36 ], [ %31, %42 ], [ %41, %28 ]
  ret i64 %44
}

declare void @zip_error_set(%struct.zip_error*, i32, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_zip_source_eof(%struct.zip_source* nocapture readonly) local_unnamed_addr #2 {
  %2 = getelementptr inbounds %struct.zip_source, %struct.zip_source* %0, i64 0, i32 10
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

declare i64 @_zip_source_call(%struct.zip_source*, i8*, i64, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
