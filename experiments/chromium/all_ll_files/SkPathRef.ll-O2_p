; ModuleID = '../../third_party/skia/src/core/SkPathRef.cpp'
source_filename = "../../third_party/skia/src/core/SkPathRef.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.1, %class.SkTDArray.2, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.1 = type { i8*, i32, i32 }
%class.SkTDArray.2 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.8 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%class.SkOnce = type { %"struct.std::__1::atomic.3" }
%"struct.std::__1::atomic.3" = type { %"struct.std::__1::__atomic_base.4" }
%"struct.std::__1::__atomic_base.4" = type { %"struct.std::__1::__atomic_base.5" }
%"struct.std::__1::__atomic_base.5" = type { %"struct.std::__1::__cxx_atomic_impl.6" }
%"struct.std::__1::__cxx_atomic_impl.6" = type { %"struct.std::__1::__cxx_atomic_base_impl.7" }
%"struct.std::__1::__cxx_atomic_base_impl.7" = type { i8 }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.8 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.9", [3 x i8] }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic.9" = type { %"struct.std::__1::__atomic_base.10" }
%"struct.std::__1::__atomic_base.10" = type { %"struct.std::__1::__cxx_atomic_impl.11" }
%"struct.std::__1::__cxx_atomic_impl.11" = type { %"struct.std::__1::__cxx_atomic_base_impl.12" }
%"struct.std::__1::__cxx_atomic_base_impl.12" = type { i8 }
%"class.SkPathRef::Editor" = type { %class.SkPathRef* }
%class.sk_sp = type { %class.SkPathRef* }
%"class.SkPathRef::Iter" = type { %struct.SkPoint*, i8*, i8*, float* }
%class.SkPathEdgeIter = type <{ i8*, i8*, %struct.SkPoint*, %struct.SkPoint*, float*, [2 x %struct.SkPoint], i8, i8, [6 x i8] }>
%class.SkPath = type <{ %class.sk_sp, i32, %"struct.std::__1::atomic.3", %"struct.std::__1::atomic.3", i8, i8 }>
%class.SkMatrix = type { [9 x float], i32 }
%class.SkWBuffer = type { i8*, i8*, i8* }
%class.sk_sp.20 = type { %class.SkIDChangeListener* }
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }

$_ZN9SkPathRef10incReserveEii = comdat any

$_ZN9SkPathRef11resetToSizeEiiiii = comdat any

@_ZZN9SkPathRef11CreateEmptyEvE4once = internal global { { { i8 } } } zeroinitializer, align 1
@_ZL6gEmpty = internal unnamed_addr global %class.SkPathRef* null, align 8
@_ZZNK9SkPathRef5genIDEvE6nextID = internal global { { i32 } } { { i32 } { i32 2 } }, align 4
@.str = private unnamed_addr constant [51 x i8] c"../../third_party/skia/include/private/SkTDArray.h\00", align 1
@.str.1 = private unnamed_addr constant [11 x i8] c"assert(%s)\00", align 1
@.str.2 = private unnamed_addr constant [24 x i8] c"SkTFitsIn<int>(reserve)\00", align 1
@.str.3 = private unnamed_addr constant [22 x i8] c"SkTFitsIn<int>(count)\00", align 1
@switch.table._ZN9SkPathRef11growForVerbEif = private unnamed_addr constant [7 x i32] [i32 1, i32 1, i32 2, i32 2, i32 3, i32 0, i32 0], align 4

@_ZN9SkPathRef6EditorC1EP5sk_spIS_Eii = hidden unnamed_addr alias void (%"class.SkPathRef::Editor"*, %class.sk_sp*, i32, i32), void (%"class.SkPathRef::Editor"*, %class.sk_sp*, i32, i32)* @_ZN9SkPathRef6EditorC2EP5sk_spIS_Eii
@_ZN9SkPathRefD1Ev = hidden unnamed_addr alias void (%class.SkPathRef*), void (%class.SkPathRef*)* @_ZN9SkPathRefD2Ev
@_ZN9SkPathRef4IterC1Ev = hidden unnamed_addr alias void (%"class.SkPathRef::Iter"*), void (%"class.SkPathRef::Iter"*)* @_ZN9SkPathRef4IterC2Ev
@_ZN9SkPathRef4IterC1ERKS_ = hidden unnamed_addr alias void (%"class.SkPathRef::Iter"*, %class.SkPathRef*), void (%"class.SkPathRef::Iter"*, %class.SkPathRef*)* @_ZN9SkPathRef4IterC2ERKS_
@_ZN14SkPathEdgeIterC1ERK6SkPath = hidden unnamed_addr alias void (%class.SkPathEdgeIter*, %class.SkPath*), void (%class.SkPathEdgeIter*, %class.SkPath*)* @_ZN14SkPathEdgeIterC2ERK6SkPath

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkPathRef6EditorC2EP5sk_spIS_Eii(%"class.SkPathRef::Editor"* nocapture, %class.sk_sp* nocapture, i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %1, i64 0, i32 0
  %6 = load %class.SkPathRef*, %class.SkPathRef** %5, align 8
  %7 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 acquire, align 4
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %12

10:                                               ; preds = %4
  %11 = load %class.SkPathRef*, %class.SkPathRef** %5, align 8
  tail call void @_ZN9SkPathRef10incReserveEii(%class.SkPathRef* %11, i32 %2, i32 %3)
  br label %49

12:                                               ; preds = %4
  %13 = tail call i8* @_Znwm(i64 120) #15
  %14 = bitcast i8* %13 to %class.SkPathRef*
  %15 = bitcast i8* %13 to i32*
  store i32 1, i32* %15, align 4
  %16 = getelementptr inbounds i8, i8* %13, i64 24
  %17 = getelementptr inbounds i8, i8* %13, i64 80
  %18 = bitcast i8* %17 to %"class.SkIDChangeListener::List"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 48, i1 false) #16
  tail call void @_ZN18SkIDChangeListener4ListC1Ev(%"class.SkIDChangeListener::List"* %18) #16
  %19 = getelementptr inbounds i8, i8* %13, i64 112
  store i8 1, i8* %19, align 8
  %20 = getelementptr inbounds i8, i8* %13, i64 72
  %21 = bitcast i8* %20 to i32*
  store i32 1, i32* %21, align 8
  %22 = getelementptr inbounds i8, i8* %13, i64 118
  store i8 0, i8* %22, align 2
  %23 = getelementptr inbounds i8, i8* %13, i64 114
  store i8 0, i8* %23, align 2
  %24 = getelementptr inbounds i8, i8* %13, i64 115
  store i8 0, i8* %24, align 1
  %25 = getelementptr inbounds i8, i8* %13, i64 116
  store i8 0, i8* %25, align 4
  %26 = getelementptr inbounds i8, i8* %13, i64 117
  store i8 -84, i8* %26, align 1
  %27 = load %class.SkPathRef*, %class.SkPathRef** %5, align 8
  tail call void @_ZN9SkPathRef4copyERKS_ii(%class.SkPathRef* nonnull %14, %class.SkPathRef* dereferenceable(120) %27, i32 %2, i32 %3)
  %28 = load %class.SkPathRef*, %class.SkPathRef** %5, align 8
  %29 = bitcast %class.sk_sp* %1 to i8**
  store i8* %13, i8** %29, align 8
  %30 = icmp eq %class.SkPathRef* %28, null
  br i1 %30, label %49, label %31

31:                                               ; preds = %12
  %32 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %28, i64 0, i32 0
  %33 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %28, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 -1 acq_rel
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %36, label %49

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %32, i64 20
  %38 = bitcast %class.SkNVRefCnt* %37 to %"class.SkIDChangeListener::List"*
  tail call void @_ZN18SkIDChangeListener4ListD1Ev(%"class.SkIDChangeListener::List"* %38) #16
  %39 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %32, i64 14
  %40 = bitcast %class.SkNVRefCnt* %39 to i8**
  %41 = load i8*, i8** %40, align 8
  tail call void @_Z7sk_freePv(i8* %41) #16
  %42 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %32, i64 10
  %43 = bitcast %class.SkNVRefCnt* %42 to i8**
  %44 = load i8*, i8** %43, align 8
  tail call void @_Z7sk_freePv(i8* %44) #16
  %45 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %32, i64 6
  %46 = bitcast %class.SkNVRefCnt* %45 to i8**
  %47 = load i8*, i8** %46, align 8
  tail call void @_Z7sk_freePv(i8* %47) #16
  %48 = bitcast %class.SkPathRef* %28 to i8*
  tail call void @_ZdlPv(i8* %48) #15
  br label %49

49:                                               ; preds = %36, %31, %12, %10
  %50 = load %class.SkPathRef*, %class.SkPathRef** %5, align 8
  %51 = getelementptr inbounds %"class.SkPathRef::Editor", %"class.SkPathRef::Editor"* %0, i64 0, i32 0
  store %class.SkPathRef* %50, %class.SkPathRef** %51, align 8
  %52 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %50, i64 0, i32 8
  tail call void @_ZN18SkIDChangeListener4List7changedEv(%"class.SkIDChangeListener::List"* %52) #16
  %53 = load %class.SkPathRef*, %class.SkPathRef** %51, align 8
  %54 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %53, i64 0, i32 6
  store i32 0, i32* %54, align 8
  %55 = load %class.SkPathRef*, %class.SkPathRef** %51, align 8
  %56 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %55, i64 0, i32 9
  store i8 1, i8* %56, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkPathRef10incReserveEii(%class.SkPathRef*, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3
  %5 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = add nsw i32 %6, %2
  %8 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp slt i32 %9, %7
  br i1 %10, label %11, label %23

11:                                               ; preds = %3
  %12 = add i32 %7, 4
  %13 = lshr i32 %12, 2
  %14 = add i32 %13, %12
  %15 = icmp sgt i32 %14, -1
  br i1 %15, label %17, label %16

16:                                               ; preds = %11
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #17
  unreachable

17:                                               ; preds = %11
  store i32 %14, i32* %8, align 8
  %18 = bitcast %class.SkTDArray* %4 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = sext i32 %14 to i64
  %21 = shl nsw i64 %20, 3
  %22 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %19, i64 %21) #16
  store i8* %22, i8** %18, align 8
  br label %23

23:                                               ; preds = %3, %17
  %24 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = add nsw i32 %25, %1
  %27 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = icmp slt i32 %28, %26
  br i1 %29, label %30, label %41

30:                                               ; preds = %23
  %31 = add i32 %26, 4
  %32 = lshr i32 %31, 2
  %33 = add i32 %32, %31
  %34 = icmp sgt i32 %33, -1
  br i1 %34, label %36, label %35

35:                                               ; preds = %30
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #17
  unreachable

36:                                               ; preds = %30
  store i32 %33, i32* %27, align 8
  %37 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = sext i32 %33 to i64
  %40 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %38, i64 %39) #16
  store i8* %40, i8** %37, align 8
  br label %41

41:                                               ; preds = %23, %36
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkPathRef4copyERKS_ii(%class.SkPathRef*, %class.SkPathRef* readonly dereferenceable(120), i32, i32) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 4
  %6 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 4, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 3
  %9 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 3, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 5
  %12 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 5, i32 2
  %13 = load i32, i32* %12, align 4
  tail call void @_ZN9SkPathRef11resetToSizeEiiiii(%class.SkPathRef* %0, i32 %7, i32 %10, i32 %13, i32 %2, i32 %3)
  %14 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4
  %15 = icmp eq %class.SkPathRef* %0, %1
  br i1 %15, label %112, label %16

16:                                               ; preds = %4
  %17 = load i32, i32* %6, align 4
  %18 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp sgt i32 %17, %19
  %21 = icmp eq i32 %17, 0
  br i1 %20, label %22, label %35

22:                                               ; preds = %16
  br i1 %21, label %29, label %23

23:                                               ; preds = %22
  %24 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %5, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = sext i32 %17 to i64
  %27 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %26, i32 2) #16
  %28 = ptrtoint i8* %27 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %27, i8* align 1 %25, i64 %26, i1 false) #16
  br label %29

29:                                               ; preds = %23, %22
  %30 = phi i64 [ 0, %22 ], [ %28, %23 ]
  %31 = bitcast %class.SkTDArray.1* %14 to i64*
  %32 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %14, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  store i64 %30, i64* %31, align 8
  store i32 %17, i32* %18, align 4
  %34 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4, i32 2
  store i32 %17, i32* %34, align 4
  tail call void @_Z7sk_freePv(i8* %33) #16
  br label %46

35:                                               ; preds = %16
  br i1 %21, label %43, label %36

36:                                               ; preds = %35
  %37 = sext i32 %17 to i64
  %38 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %5, i64 0, i32 0
  %39 = load i8*, i8** %38, align 8
  %40 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %14, i64 0, i32 0
  %41 = load i8*, i8** %40, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %41, i8* align 1 %39, i64 %37, i1 false) #16
  %42 = load i32, i32* %6, align 4
  br label %43

43:                                               ; preds = %36, %35
  %44 = phi i32 [ 0, %35 ], [ %42, %36 ]
  %45 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4, i32 2
  store i32 %44, i32* %45, align 4
  br label %46

46:                                               ; preds = %29, %43
  %47 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3
  %48 = load i32, i32* %9, align 4
  %49 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = icmp sgt i32 %48, %50
  %52 = icmp eq i32 %48, 0
  br i1 %51, label %53, label %67

53:                                               ; preds = %46
  br i1 %52, label %61, label %54

54:                                               ; preds = %53
  %55 = bitcast %class.SkTDArray* %8 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = sext i32 %48 to i64
  %58 = shl nsw i64 %57, 3
  %59 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %58, i32 2) #16
  %60 = ptrtoint i8* %59 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %56, i64 %58, i1 false) #16
  br label %61

61:                                               ; preds = %54, %53
  %62 = phi i64 [ 0, %53 ], [ %60, %54 ]
  %63 = bitcast %class.SkTDArray* %47 to i64*
  %64 = bitcast %class.SkTDArray* %47 to i8**
  %65 = load i8*, i8** %64, align 8
  store i64 %62, i64* %63, align 8
  store i32 %48, i32* %49, align 4
  %66 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3, i32 2
  store i32 %48, i32* %66, align 4
  tail call void @_Z7sk_freePv(i8* %65) #16
  br label %79

67:                                               ; preds = %46
  br i1 %52, label %76, label %68

68:                                               ; preds = %67
  %69 = sext i32 %48 to i64
  %70 = shl nsw i64 %69, 3
  %71 = bitcast %class.SkTDArray* %8 to i8**
  %72 = load i8*, i8** %71, align 8
  %73 = bitcast %class.SkTDArray* %47 to i8**
  %74 = load i8*, i8** %73, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %74, i8* align 1 %72, i64 %70, i1 false) #16
  %75 = load i32, i32* %9, align 4
  br label %76

76:                                               ; preds = %68, %67
  %77 = phi i32 [ 0, %67 ], [ %75, %68 ]
  %78 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3, i32 2
  store i32 %77, i32* %78, align 4
  br label %79

79:                                               ; preds = %61, %76
  %80 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 5
  %81 = load i32, i32* %12, align 4
  %82 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 5, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = icmp sgt i32 %81, %83
  %85 = icmp eq i32 %81, 0
  br i1 %84, label %86, label %100

86:                                               ; preds = %79
  br i1 %85, label %94, label %87

87:                                               ; preds = %86
  %88 = bitcast %class.SkTDArray.2* %11 to i8**
  %89 = load i8*, i8** %88, align 8
  %90 = sext i32 %81 to i64
  %91 = shl nsw i64 %90, 2
  %92 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %91, i32 2) #16
  %93 = ptrtoint i8* %92 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %92, i8* align 4 %89, i64 %91, i1 false) #16
  br label %94

94:                                               ; preds = %87, %86
  %95 = phi i64 [ 0, %86 ], [ %93, %87 ]
  %96 = bitcast %class.SkTDArray.2* %80 to i64*
  %97 = bitcast %class.SkTDArray.2* %80 to i8**
  %98 = load i8*, i8** %97, align 8
  store i64 %95, i64* %96, align 8
  store i32 %81, i32* %82, align 4
  %99 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 5, i32 2
  store i32 %81, i32* %99, align 4
  tail call void @_Z7sk_freePv(i8* %98) #16
  br label %112

100:                                              ; preds = %79
  br i1 %85, label %109, label %101

101:                                              ; preds = %100
  %102 = sext i32 %81 to i64
  %103 = shl nsw i64 %102, 2
  %104 = bitcast %class.SkTDArray.2* %11 to i8**
  %105 = load i8*, i8** %104, align 8
  %106 = bitcast %class.SkTDArray.2* %80 to i8**
  %107 = load i8*, i8** %106, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %107, i8* align 1 %105, i64 %103, i1 false) #16
  %108 = load i32, i32* %12, align 4
  br label %109

109:                                              ; preds = %101, %100
  %110 = phi i32 [ 0, %100 ], [ %108, %101 ]
  %111 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 5, i32 2
  store i32 %110, i32* %111, align 4
  br label %112

112:                                              ; preds = %4, %94, %109
  %113 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 9
  %114 = load i8, i8* %113, align 8
  %115 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 9
  store i8 %114, i8* %115, align 8
  %116 = icmp eq i8 %114, 0
  br i1 %116, label %117, label %125

117:                                              ; preds = %112
  %118 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 1
  %119 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 1
  %120 = bitcast %struct.SkRect* %119 to i8*
  %121 = bitcast %struct.SkRect* %118 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %120, i8* align 4 %121, i64 16, i1 false)
  %122 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 10
  %123 = load i8, i8* %122, align 1, !range !2
  %124 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 10
  store i8 %123, i8* %124, align 1
  br label %125

125:                                              ; preds = %112, %117
  %126 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 15
  %127 = load i8, i8* %126, align 2
  %128 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 15
  store i8 %127, i8* %128, align 2
  %129 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 11
  %130 = load i8, i8* %129, align 2, !range !2
  %131 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 11
  store i8 %130, i8* %131, align 2
  %132 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 12
  %133 = load i8, i8* %132, align 1, !range !2
  %134 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 12
  store i8 %133, i8* %134, align 1
  %135 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 13
  %136 = load i8, i8* %135, align 4, !range !2
  %137 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 13
  store i8 %136, i8* %137, align 4
  %138 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 14
  %139 = load i8, i8* %138, align 1
  %140 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 14
  store i8 %139, i8* %140, align 1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkPathRef24callGenIDChangeListenersEv(%class.SkPathRef*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 8
  tail call void @_ZN18SkIDChangeListener4List7changedEv(%"class.SkIDChangeListener::List"* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6SkPath11shrinkToFitEv(%class.SkPath* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPath, %class.SkPath* %0, i64 0, i32 0, i32 0
  %3 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %4 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i32, i32* %4 acquire, align 4
  %6 = icmp eq i32 %5, 1
  br i1 %6, label %44, label %7

7:                                                ; preds = %1
  %8 = tail call i8* @_Znwm(i64 120) #15
  %9 = bitcast i8* %8 to %class.SkPathRef*
  %10 = bitcast i8* %8 to i32*
  store i32 1, i32* %10, align 4
  %11 = getelementptr inbounds i8, i8* %8, i64 24
  %12 = getelementptr inbounds i8, i8* %8, i64 80
  %13 = bitcast i8* %12 to %"class.SkIDChangeListener::List"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 48, i1 false) #16
  tail call void @_ZN18SkIDChangeListener4ListC1Ev(%"class.SkIDChangeListener::List"* %13) #16
  %14 = getelementptr inbounds i8, i8* %8, i64 112
  store i8 1, i8* %14, align 8
  %15 = getelementptr inbounds i8, i8* %8, i64 72
  %16 = bitcast i8* %15 to i32*
  store i32 1, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %8, i64 118
  store i8 0, i8* %17, align 2
  %18 = getelementptr inbounds i8, i8* %8, i64 114
  store i8 0, i8* %18, align 2
  %19 = getelementptr inbounds i8, i8* %8, i64 115
  store i8 0, i8* %19, align 1
  %20 = getelementptr inbounds i8, i8* %8, i64 116
  store i8 0, i8* %20, align 4
  %21 = getelementptr inbounds i8, i8* %8, i64 117
  store i8 -84, i8* %21, align 1
  %22 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  tail call void @_ZN9SkPathRef4copyERKS_ii(%class.SkPathRef* nonnull %9, %class.SkPathRef* dereferenceable(120) %22, i32 0, i32 0)
  %23 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %24 = bitcast %class.SkPath* %0 to i8**
  store i8* %8, i8** %24, align 8
  %25 = icmp eq %class.SkPathRef* %23, null
  br i1 %25, label %44, label %26

26:                                               ; preds = %7
  %27 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %23, i64 0, i32 0
  %28 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = atomicrmw add i32* %28, i32 -1 acq_rel
  %30 = icmp eq i32 %29, 1
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %27, i64 20
  %33 = bitcast %class.SkNVRefCnt* %32 to %"class.SkIDChangeListener::List"*
  tail call void @_ZN18SkIDChangeListener4ListD1Ev(%"class.SkIDChangeListener::List"* %33) #16
  %34 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %27, i64 14
  %35 = bitcast %class.SkNVRefCnt* %34 to i8**
  %36 = load i8*, i8** %35, align 8
  tail call void @_Z7sk_freePv(i8* %36) #16
  %37 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %27, i64 10
  %38 = bitcast %class.SkNVRefCnt* %37 to i8**
  %39 = load i8*, i8** %38, align 8
  tail call void @_Z7sk_freePv(i8* %39) #16
  %40 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %27, i64 6
  %41 = bitcast %class.SkNVRefCnt* %40 to i8**
  %42 = load i8*, i8** %41, align 8
  tail call void @_Z7sk_freePv(i8* %42) #16
  %43 = bitcast %class.SkPathRef* %23 to i8*
  tail call void @_ZdlPv(i8* %43) #15
  br label %44

44:                                               ; preds = %31, %26, %7, %1
  %45 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %46 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %45, i64 0, i32 3, i32 1
  %47 = load i32, i32* %46, align 8
  %48 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %45, i64 0, i32 3, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %47, %49
  br i1 %50, label %59, label %51

51:                                               ; preds = %44
  %52 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %45, i64 0, i32 3
  store i32 %49, i32* %46, align 8
  %53 = bitcast %class.SkTDArray* %52 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = sext i32 %49 to i64
  %56 = shl nsw i64 %55, 3
  %57 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %54, i64 %56) #16
  store i8* %57, i8** %53, align 8
  %58 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  br label %59

59:                                               ; preds = %44, %51
  %60 = phi %class.SkPathRef* [ %45, %44 ], [ %58, %51 ]
  %61 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %60, i64 0, i32 4, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %60, i64 0, i32 4, i32 2
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %62, %64
  br i1 %65, label %72, label %66

66:                                               ; preds = %59
  store i32 %64, i32* %61, align 8
  %67 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %60, i64 0, i32 4, i32 0
  %68 = load i8*, i8** %67, align 8
  %69 = sext i32 %64 to i64
  %70 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %68, i64 %69) #16
  store i8* %70, i8** %67, align 8
  %71 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  br label %72

72:                                               ; preds = %59, %66
  %73 = phi %class.SkPathRef* [ %60, %59 ], [ %71, %66 ]
  %74 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %73, i64 0, i32 5, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %73, i64 0, i32 5, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %75, %77
  br i1 %78, label %86, label %79

79:                                               ; preds = %72
  %80 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %73, i64 0, i32 5
  store i32 %77, i32* %74, align 8
  %81 = bitcast %class.SkTDArray.2* %80 to i8**
  %82 = load i8*, i8** %81, align 8
  %83 = sext i32 %77 to i64
  %84 = shl nsw i64 %83, 2
  %85 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %82, i64 %84) #16
  store i8* %85, i8** %81, align 8
  br label %86

86:                                               ; preds = %72, %79
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK9SkPathRef20approximateBytesUsedEv(%class.SkPathRef* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = sext i32 %3 to i64
  %5 = shl nsw i64 %4, 3
  %6 = add nsw i64 %5, 120
  %7 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = sext i32 %8 to i64
  %10 = add nsw i64 %6, %9
  %11 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 5, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = sext i32 %12 to i64
  %14 = shl nsw i64 %13, 2
  %15 = add nsw i64 %10, %14
  ret i64 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkPathRefD2Ev(%class.SkPathRef*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 8
  tail call void @_ZN18SkIDChangeListener4ListD1Ev(%"class.SkIDChangeListener::List"* %2) #16
  %3 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 5
  %4 = bitcast %class.SkTDArray.2* %3 to i8**
  %5 = load i8*, i8** %4, align 8
  tail call void @_Z7sk_freePv(i8* %5) #16
  %6 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4, i32 0
  %7 = load i8*, i8** %6, align 8
  tail call void @_Z7sk_freePv(i8* %7) #16
  %8 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3
  %9 = bitcast %class.SkTDArray* %8 to i8**
  %10 = load i8*, i8** %9, align 8
  tail call void @_Z7sk_freePv(i8* %10) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN18SkIDChangeListener4ListD1Ev(%"class.SkIDChangeListener::List"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %class.SkPathRef* @_ZN9SkPathRef11CreateEmptyEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN9SkPathRef11CreateEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  switch i8 %1, label %2 [
    i8 2, label %33
    i8 0, label %3
  ]

2:                                                ; preds = %3, %0
  br label %30

3:                                                ; preds = %0
  %4 = cmpxchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN9SkPathRef11CreateEmptyEvE4once, i64 0, i32 0, i32 0, i32 0), i8 0, i8 1 monotonic monotonic
  %5 = extractvalue { i8, i1 } %4, 1
  br i1 %5, label %6, label %2

6:                                                ; preds = %3
  %7 = tail call i8* @_Znwm(i64 120) #15
  %8 = bitcast i8* %7 to i32*
  store i32 1, i32* %8, align 4
  %9 = getelementptr inbounds i8, i8* %7, i64 24
  %10 = getelementptr inbounds i8, i8* %7, i64 80
  %11 = bitcast i8* %10 to %"class.SkIDChangeListener::List"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 48, i1 false) #16
  tail call void @_ZN18SkIDChangeListener4ListC1Ev(%"class.SkIDChangeListener::List"* %11) #16
  %12 = getelementptr inbounds i8, i8* %7, i64 112
  store i8 1, i8* %12, align 8
  %13 = getelementptr inbounds i8, i8* %7, i64 72
  %14 = bitcast i8* %13 to i32*
  store i32 1, i32* %14, align 8
  %15 = getelementptr inbounds i8, i8* %7, i64 118
  store i8 0, i8* %15, align 2
  %16 = getelementptr inbounds i8, i8* %7, i64 114
  store i8 0, i8* %16, align 2
  %17 = getelementptr inbounds i8, i8* %7, i64 115
  store i8 0, i8* %17, align 1
  %18 = getelementptr inbounds i8, i8* %7, i64 116
  store i8 0, i8* %18, align 4
  %19 = getelementptr inbounds i8, i8* %7, i64 117
  store i8 -84, i8* %19, align 1
  store i8* %7, i8** bitcast (%class.SkPathRef** @_ZL6gEmpty to i8**), align 8
  %20 = getelementptr inbounds i8, i8* %7, i64 4
  %21 = bitcast i8* %20 to %struct.SkRect*
  %22 = bitcast i8* %9 to %struct.SkPoint**
  %23 = load %struct.SkPoint*, %struct.SkPoint** %22, align 8
  %24 = getelementptr inbounds i8, i8* %7, i64 36
  %25 = bitcast i8* %24 to i32*
  %26 = load i32, i32* %25, align 4
  %27 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %21, %struct.SkPoint* %23, i32 %26) #16
  %28 = getelementptr inbounds i8, i8* %7, i64 113
  %29 = zext i1 %27 to i8
  store i8 %29, i8* %28, align 1
  store i8 0, i8* %12, align 8
  store atomic i8 2, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN9SkPathRef11CreateEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) release, align 1
  br label %33

30:                                               ; preds = %2, %30
  %31 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN9SkPathRef11CreateEmptyEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  %32 = icmp eq i8 %31, 2
  br i1 %32, label %33, label %30

33:                                               ; preds = %30, %0, %6
  %34 = load %class.SkPathRef*, %class.SkPathRef** @_ZL6gEmpty, align 8
  %35 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i32* %35, i32 1 monotonic
  ret %class.SkPathRef* %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkPathRef21CreateTransformedCopyEP5sk_spIS_ERKS_RK8SkMatrix(%class.sk_sp*, %class.SkPathRef* dereferenceable(120), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 1
  %5 = load i32, i32* %4, align 4
  %6 = trunc i32 %5 to i8
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %2) #16
  %10 = zext i8 %9 to i32
  store i32 %10, i32* %4, align 4
  br label %11

11:                                               ; preds = %3, %8
  %12 = phi i32 [ %10, %8 ], [ %5, %3 ]
  %13 = and i32 %12, 15
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %16 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  br i1 %14, label %17, label %42

17:                                               ; preds = %11
  %18 = icmp eq %class.SkPathRef* %16, %1
  br i1 %18, label %398, label %19

19:                                               ; preds = %17
  %20 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = atomicrmw add i32* %20, i32 1 monotonic
  %22 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  store %class.SkPathRef* %1, %class.SkPathRef** %15, align 8
  %23 = icmp eq %class.SkPathRef* %22, null
  br i1 %23, label %398, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %22, i64 0, i32 0
  %26 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %398

29:                                               ; preds = %24
  %30 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %25, i64 20
  %31 = bitcast %class.SkNVRefCnt* %30 to %"class.SkIDChangeListener::List"*
  tail call void @_ZN18SkIDChangeListener4ListD1Ev(%"class.SkIDChangeListener::List"* %31) #16
  %32 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %25, i64 14
  %33 = bitcast %class.SkNVRefCnt* %32 to i8**
  %34 = load i8*, i8** %33, align 8
  tail call void @_Z7sk_freePv(i8* %34) #16
  %35 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %25, i64 10
  %36 = bitcast %class.SkNVRefCnt* %35 to i8**
  %37 = load i8*, i8** %36, align 8
  tail call void @_Z7sk_freePv(i8* %37) #16
  %38 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %25, i64 6
  %39 = bitcast %class.SkNVRefCnt* %38 to i8**
  %40 = load i8*, i8** %39, align 8
  tail call void @_Z7sk_freePv(i8* %40) #16
  %41 = bitcast %class.SkPathRef* %22 to i8*
  tail call void @_ZdlPv(i8* %41) #15
  br label %398

42:                                               ; preds = %11
  %43 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 acquire, align 4
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %88, label %46

46:                                               ; preds = %42
  %47 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %48 = icmp eq %class.SkPathRef* %47, %1
  br i1 %48, label %49, label %52

49:                                               ; preds = %46
  %50 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = atomicrmw add i32* %50, i32 1 monotonic
  br label %52

52:                                               ; preds = %49, %46
  %53 = phi %class.SkPathRef* [ %1, %49 ], [ null, %46 ]
  %54 = tail call i8* @_Znwm(i64 120) #15
  %55 = bitcast i8* %54 to i32*
  store i32 1, i32* %55, align 4
  %56 = getelementptr inbounds i8, i8* %54, i64 24
  %57 = getelementptr inbounds i8, i8* %54, i64 80
  %58 = bitcast i8* %57 to %"class.SkIDChangeListener::List"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 48, i1 false) #16
  tail call void @_ZN18SkIDChangeListener4ListC1Ev(%"class.SkIDChangeListener::List"* %58) #16
  %59 = getelementptr inbounds i8, i8* %54, i64 112
  store i8 1, i8* %59, align 8
  %60 = getelementptr inbounds i8, i8* %54, i64 72
  %61 = bitcast i8* %60 to i32*
  store i32 1, i32* %61, align 8
  %62 = getelementptr inbounds i8, i8* %54, i64 118
  store i8 0, i8* %62, align 2
  %63 = getelementptr inbounds i8, i8* %54, i64 114
  store i8 0, i8* %63, align 2
  %64 = getelementptr inbounds i8, i8* %54, i64 115
  store i8 0, i8* %64, align 1
  %65 = getelementptr inbounds i8, i8* %54, i64 116
  store i8 0, i8* %65, align 4
  %66 = getelementptr inbounds i8, i8* %54, i64 117
  store i8 -84, i8* %66, align 1
  %67 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %68 = bitcast %class.sk_sp* %0 to i8**
  store i8* %54, i8** %68, align 8
  %69 = icmp eq %class.SkPathRef* %67, null
  br i1 %69, label %88, label %70

70:                                               ; preds = %52
  %71 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %67, i64 0, i32 0
  %72 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = atomicrmw add i32* %72, i32 -1 acq_rel
  %74 = icmp eq i32 %73, 1
  br i1 %74, label %75, label %88

75:                                               ; preds = %70
  %76 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %71, i64 20
  %77 = bitcast %class.SkNVRefCnt* %76 to %"class.SkIDChangeListener::List"*
  tail call void @_ZN18SkIDChangeListener4ListD1Ev(%"class.SkIDChangeListener::List"* %77) #16
  %78 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %71, i64 14
  %79 = bitcast %class.SkNVRefCnt* %78 to i8**
  %80 = load i8*, i8** %79, align 8
  tail call void @_Z7sk_freePv(i8* %80) #16
  %81 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %71, i64 10
  %82 = bitcast %class.SkNVRefCnt* %81 to i8**
  %83 = load i8*, i8** %82, align 8
  tail call void @_Z7sk_freePv(i8* %83) #16
  %84 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %71, i64 6
  %85 = bitcast %class.SkNVRefCnt* %84 to i8**
  %86 = load i8*, i8** %85, align 8
  tail call void @_Z7sk_freePv(i8* %86) #16
  %87 = bitcast %class.SkPathRef* %67 to i8*
  tail call void @_ZdlPv(i8* %87) #15
  br label %88

88:                                               ; preds = %75, %70, %52, %42
  %89 = phi %class.SkPathRef* [ null, %42 ], [ %53, %52 ], [ %53, %70 ], [ %53, %75 ]
  %90 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %91 = icmp eq %class.SkPathRef* %90, %1
  br i1 %91, label %190, label %92

92:                                               ; preds = %88
  %93 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 4
  %94 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %90, i64 0, i32 4
  %95 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 4, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %90, i64 0, i32 4, i32 1
  %98 = load i32, i32* %97, align 8
  %99 = icmp sgt i32 %96, %98
  %100 = icmp eq i32 %96, 0
  br i1 %99, label %101, label %114

101:                                              ; preds = %92
  br i1 %100, label %108, label %102

102:                                              ; preds = %101
  %103 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %93, i64 0, i32 0
  %104 = load i8*, i8** %103, align 8
  %105 = sext i32 %96 to i64
  %106 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %105, i32 2) #16
  %107 = ptrtoint i8* %106 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %106, i8* align 1 %104, i64 %105, i1 false) #16
  br label %108

108:                                              ; preds = %102, %101
  %109 = phi i64 [ 0, %101 ], [ %107, %102 ]
  %110 = bitcast %class.SkTDArray.1* %94 to i64*
  %111 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %94, i64 0, i32 0
  %112 = load i8*, i8** %111, align 8
  store i64 %109, i64* %110, align 8
  store i32 %96, i32* %97, align 4
  %113 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %90, i64 0, i32 4, i32 2
  store i32 %96, i32* %113, align 4
  tail call void @_Z7sk_freePv(i8* %112) #16
  br label %125

114:                                              ; preds = %92
  br i1 %100, label %122, label %115

115:                                              ; preds = %114
  %116 = sext i32 %96 to i64
  %117 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %93, i64 0, i32 0
  %118 = load i8*, i8** %117, align 8
  %119 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %94, i64 0, i32 0
  %120 = load i8*, i8** %119, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %120, i8* align 1 %118, i64 %116, i1 false) #16
  %121 = load i32, i32* %95, align 4
  br label %122

122:                                              ; preds = %115, %114
  %123 = phi i32 [ 0, %114 ], [ %121, %115 ]
  %124 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %90, i64 0, i32 4, i32 2
  store i32 %123, i32* %124, align 4
  br label %125

125:                                              ; preds = %108, %122
  %126 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 5
  %127 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %128 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %127, i64 0, i32 5
  %129 = icmp eq %class.SkPathRef* %127, %1
  br i1 %129, label %163, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 5, i32 2
  %132 = load i32, i32* %131, align 4
  %133 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %127, i64 0, i32 5, i32 1
  %134 = load i32, i32* %133, align 8
  %135 = icmp sgt i32 %132, %134
  %136 = icmp eq i32 %132, 0
  br i1 %135, label %137, label %151

137:                                              ; preds = %130
  br i1 %136, label %145, label %138

138:                                              ; preds = %137
  %139 = bitcast %class.SkTDArray.2* %126 to i8**
  %140 = load i8*, i8** %139, align 8
  %141 = sext i32 %132 to i64
  %142 = shl nsw i64 %141, 2
  %143 = tail call i8* @_Z15sk_malloc_flagsmj(i64 %142, i32 2) #16
  %144 = ptrtoint i8* %143 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %143, i8* align 4 %140, i64 %142, i1 false) #16
  br label %145

145:                                              ; preds = %138, %137
  %146 = phi i64 [ 0, %137 ], [ %144, %138 ]
  %147 = bitcast %class.SkTDArray.2* %128 to i64*
  %148 = bitcast %class.SkTDArray.2* %128 to i8**
  %149 = load i8*, i8** %148, align 8
  store i64 %146, i64* %147, align 8
  store i32 %132, i32* %133, align 4
  %150 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %127, i64 0, i32 5, i32 2
  store i32 %132, i32* %150, align 4
  tail call void @_Z7sk_freePv(i8* %149) #16
  br label %163

151:                                              ; preds = %130
  br i1 %136, label %160, label %152

152:                                              ; preds = %151
  %153 = sext i32 %132 to i64
  %154 = shl nsw i64 %153, 2
  %155 = bitcast %class.SkTDArray.2* %126 to i8**
  %156 = load i8*, i8** %155, align 8
  %157 = bitcast %class.SkTDArray.2* %128 to i8**
  %158 = load i8*, i8** %157, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %158, i8* align 1 %156, i64 %154, i1 false) #16
  %159 = load i32, i32* %131, align 4
  br label %160

160:                                              ; preds = %152, %151
  %161 = phi i32 [ 0, %151 ], [ %159, %152 ]
  %162 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %127, i64 0, i32 5, i32 2
  store i32 %161, i32* %162, align 4
  br label %163

163:                                              ; preds = %125, %145, %160
  %164 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %165 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %164, i64 0, i32 8
  tail call void @_ZN18SkIDChangeListener4List7changedEv(%"class.SkIDChangeListener::List"* %165) #16
  %166 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %167 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %166, i64 0, i32 6
  store i32 0, i32* %167, align 8
  %168 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %169 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %168, i64 0, i32 3
  %170 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 3, i32 2
  %171 = load i32, i32* %170, align 4
  %172 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %168, i64 0, i32 3, i32 1
  %173 = load i32, i32* %172, align 8
  %174 = icmp slt i32 %173, %171
  br i1 %174, label %175, label %187

175:                                              ; preds = %163
  %176 = add i32 %171, 4
  %177 = lshr i32 %176, 2
  %178 = add i32 %177, %176
  %179 = icmp sgt i32 %178, -1
  br i1 %179, label %181, label %180

180:                                              ; preds = %175
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #17
  unreachable

181:                                              ; preds = %175
  store i32 %178, i32* %172, align 8
  %182 = bitcast %class.SkTDArray* %169 to i8**
  %183 = load i8*, i8** %182, align 8
  %184 = sext i32 %178 to i64
  %185 = shl nsw i64 %184, 3
  %186 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %183, i64 %185) #16
  store i8* %186, i8** %182, align 8
  br label %187

187:                                              ; preds = %163, %181
  %188 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %168, i64 0, i32 3, i32 2
  store i32 %171, i32* %188, align 4
  %189 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  br label %190

190:                                              ; preds = %88, %187
  %191 = phi %class.SkPathRef* [ %1, %88 ], [ %189, %187 ]
  %192 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %191, i64 0, i32 3, i32 0
  %193 = load %struct.SkPoint*, %struct.SkPoint** %192, align 8
  %194 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 3, i32 0
  %195 = load %struct.SkPoint*, %struct.SkPoint** %194, align 8
  %196 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 3, i32 2
  %197 = load i32, i32* %196, align 4
  tail call void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix* %2, %struct.SkPoint* %193, %struct.SkPoint* %195, i32 %197) #16
  %198 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 9
  %199 = load i8, i8* %198, align 8
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %201, label %212

201:                                              ; preds = %190
  %202 = load i32, i32* %4, align 4
  %203 = trunc i32 %202 to i8
  %204 = icmp slt i8 %203, 0
  br i1 %204, label %205, label %208

205:                                              ; preds = %201
  %206 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %2) #16
  %207 = zext i8 %206 to i32
  store i32 %207, i32* %4, align 4
  br label %208

208:                                              ; preds = %201, %205
  %209 = phi i32 [ %207, %205 ], [ %202, %201 ]
  %210 = and i32 %209, 16
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %215

212:                                              ; preds = %208, %190
  %213 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %214 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %213, i64 0, i32 9
  br label %254

215:                                              ; preds = %208
  %216 = load i32, i32* %196, align 4
  %217 = icmp sgt i32 %216, 1
  %218 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %219 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %218, i64 0, i32 9
  br i1 %217, label %220, label %254

220:                                              ; preds = %215
  store i8 0, i8* %219, align 8
  %221 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 10
  %222 = load i8, i8* %221, align 1, !range !2
  %223 = icmp eq i8 %222, 0
  %224 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  br i1 %223, label %249, label %225

225:                                              ; preds = %220
  %226 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %224, i64 0, i32 1
  %227 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 1
  %228 = tail call zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix* %2, %struct.SkRect* %226, %struct.SkRect* dereferenceable(16) %227, i32 1) #16
  %229 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %230 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %229, i64 0, i32 1, i32 0
  %231 = load float, float* %230, align 4
  %232 = fmul float %231, 0.000000e+00
  %233 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %229, i64 0, i32 1, i32 1
  %234 = load float, float* %233, align 4
  %235 = fmul float %232, %234
  %236 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %229, i64 0, i32 1, i32 2
  %237 = load float, float* %236, align 4
  %238 = fmul float %235, %237
  %239 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %229, i64 0, i32 1, i32 3
  %240 = load float, float* %239, align 4
  %241 = fmul float %238, %240
  %242 = fcmp ord float %241, 0.000000e+00
  %243 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %229, i64 0, i32 10
  %244 = zext i1 %242 to i8
  store i8 %244, i8* %243, align 1
  br i1 %242, label %256, label %245

245:                                              ; preds = %225
  %246 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %247 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %246, i64 0, i32 1
  %248 = bitcast %struct.SkRect* %247 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %248, i8 0, i64 16, i1 false) #16
  br label %256

249:                                              ; preds = %220
  %250 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %224, i64 0, i32 10
  store i8 0, i8* %250, align 1
  %251 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %252 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %251, i64 0, i32 1
  %253 = bitcast %struct.SkRect* %252 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %253, i8 0, i64 16, i1 false) #16
  br label %256

254:                                              ; preds = %212, %215
  %255 = phi i8* [ %214, %212 ], [ %219, %215 ]
  store i8 1, i8* %255, align 8
  br label %256

256:                                              ; preds = %249, %245, %225, %254
  %257 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 15
  %258 = load i8, i8* %257, align 2
  %259 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %260 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %259, i64 0, i32 15
  store i8 %258, i8* %260, align 2
  %261 = load i32, i32* %4, align 4
  %262 = trunc i32 %261 to i8
  %263 = icmp slt i8 %262, 0
  br i1 %263, label %264, label %267

264:                                              ; preds = %256
  %265 = tail call zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix* %2) #16
  %266 = zext i8 %265 to i32
  store i32 %266, i32* %4, align 4
  br label %267

267:                                              ; preds = %256, %264
  %268 = phi i32 [ %266, %264 ], [ %261, %256 ]
  %269 = and i32 %268, 16
  %270 = icmp ne i32 %269, 0
  %271 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 11
  %272 = load i8, i8* %271, align 2, !range !2
  %273 = icmp ne i8 %272, 0
  %274 = and i1 %270, %273
  %275 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %276 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %275, i64 0, i32 11
  %277 = zext i1 %274 to i8
  store i8 %277, i8* %276, align 2
  %278 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 12
  %279 = load i8, i8* %278, align 1, !range !2
  %280 = icmp ne i8 %279, 0
  %281 = and i1 %270, %280
  %282 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %283 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %282, i64 0, i32 12
  %284 = zext i1 %281 to i8
  store i8 %284, i8* %283, align 1
  %285 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %286 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %285, i64 0, i32 11
  %287 = load i8, i8* %286, align 2, !range !2
  %288 = icmp eq i8 %287, 0
  %289 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %285, i64 0, i32 12
  %290 = load i8, i8* %289, align 1, !range !2
  br i1 %288, label %291, label %299

291:                                              ; preds = %267
  %292 = icmp eq i8 %290, 0
  br i1 %292, label %371, label %293

293:                                              ; preds = %291
  %294 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 14
  %295 = load i8, i8* %294, align 1
  %296 = zext i8 %295 to i32
  %297 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 13
  %298 = load i8, i8* %297, align 1, !range !2
  br label %306

299:                                              ; preds = %267
  %300 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 14
  %301 = load i8, i8* %300, align 1
  %302 = zext i8 %301 to i32
  %303 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 13
  %304 = load i8, i8* %303, align 1, !range !2
  %305 = icmp eq i8 %290, 0
  br i1 %305, label %313, label %306

306:                                              ; preds = %299, %293
  %307 = phi i8 [ %298, %293 ], [ %304, %299 ]
  %308 = phi i32 [ %296, %293 ], [ %302, %299 ]
  %309 = phi i8 [ %295, %293 ], [ %301, %299 ]
  %310 = and i32 %308, 1
  %311 = lshr i8 %309, 1
  %312 = zext i8 %311 to i32
  br label %313

313:                                              ; preds = %299, %306
  %314 = phi i1 [ true, %306 ], [ false, %299 ]
  %315 = phi i8 [ %307, %306 ], [ %304, %299 ]
  %316 = phi i32 [ %312, %306 ], [ %302, %299 ]
  %317 = phi i32 [ %310, %306 ], [ 0, %299 ]
  %318 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 0
  %319 = load float, float* %318, align 4
  %320 = fcmp une float %319, 0.000000e+00
  br i1 %320, label %321, label %329

321:                                              ; preds = %313
  %322 = fcmp ogt float %319, 0.000000e+00
  %323 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 4
  %324 = load float, float* %323, align 4
  br i1 %322, label %325, label %327

325:                                              ; preds = %321
  %326 = fcmp ogt float %324, 0.000000e+00
  br label %339

327:                                              ; preds = %321
  %328 = fcmp ule float %324, 0.000000e+00
  br label %339

329:                                              ; preds = %313
  %330 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 1
  %331 = load float, float* %330, align 4
  %332 = fcmp ogt float %331, 0.000000e+00
  %333 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %2, i64 0, i32 0, i64 3
  %334 = load float, float* %333, align 4
  br i1 %332, label %335, label %337

335:                                              ; preds = %329
  %336 = fcmp ogt float %334, 0.000000e+00
  br label %339

337:                                              ; preds = %329
  %338 = fcmp ule float %334, 0.000000e+00
  br label %339

339:                                              ; preds = %337, %335, %327, %325
  %340 = phi i32 [ 0, %325 ], [ 0, %327 ], [ 1, %335 ], [ 1, %337 ]
  %341 = phi i32 [ 0, %325 ], [ 2, %327 ], [ 0, %335 ], [ 2, %337 ]
  %342 = phi i1 [ %326, %325 ], [ %328, %327 ], [ %336, %335 ], [ %338, %337 ]
  %343 = zext i1 %342 to i32
  %344 = icmp eq i32 %340, %343
  br i1 %344, label %353, label %345

345:                                              ; preds = %339
  %346 = add nuw nsw i32 %316, 4
  %347 = or i32 %341, %340
  %348 = sub nuw nsw i32 %346, %347
  %349 = srem i32 %348, 4
  br i1 %314, label %350, label %363

350:                                              ; preds = %345
  %351 = shl nsw i32 %349, 1
  %352 = or i32 %351, %317
  br label %363

353:                                              ; preds = %339
  %354 = xor i8 %315, 1
  %355 = or i32 %341, %340
  %356 = sub nsw i32 6, %316
  %357 = add nsw i32 %356, %355
  %358 = srem i32 %357, 4
  br i1 %314, label %359, label %363

359:                                              ; preds = %353
  %360 = shl nsw i32 %358, 1
  %361 = or i32 %360, %317
  %362 = xor i32 %361, 1
  br label %363

363:                                              ; preds = %345, %350, %353, %359
  %364 = phi i32 [ %362, %359 ], [ %358, %353 ], [ %352, %350 ], [ %349, %345 ]
  %365 = phi i8 [ %354, %359 ], [ %354, %353 ], [ %315, %350 ], [ %315, %345 ]
  %366 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %285, i64 0, i32 13
  store i8 %365, i8* %366, align 4
  %367 = trunc i32 %364 to i8
  %368 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %369 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %368, i64 0, i32 14
  store i8 %367, i8* %369, align 1
  %370 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  br label %371

371:                                              ; preds = %291, %363
  %372 = phi %class.SkPathRef* [ %285, %291 ], [ %370, %363 ]
  %373 = icmp eq %class.SkPathRef* %372, %1
  br i1 %373, label %374, label %378

374:                                              ; preds = %371
  %375 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 8
  tail call void @_ZN18SkIDChangeListener4List7changedEv(%"class.SkIDChangeListener::List"* %375) #16
  %376 = load %class.SkPathRef*, %class.SkPathRef** %15, align 8
  %377 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %376, i64 0, i32 6
  store i32 0, i32* %377, align 8
  br label %378

378:                                              ; preds = %374, %371
  %379 = icmp eq %class.SkPathRef* %89, null
  br i1 %379, label %398, label %380

380:                                              ; preds = %378
  %381 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %89, i64 0, i32 0
  %382 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %383 = atomicrmw add i32* %382, i32 -1 acq_rel
  %384 = icmp eq i32 %383, 1
  br i1 %384, label %385, label %398

385:                                              ; preds = %380
  %386 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %381, i64 20
  %387 = bitcast %class.SkNVRefCnt* %386 to %"class.SkIDChangeListener::List"*
  tail call void @_ZN18SkIDChangeListener4ListD1Ev(%"class.SkIDChangeListener::List"* %387) #16
  %388 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %381, i64 14
  %389 = bitcast %class.SkNVRefCnt* %388 to i8**
  %390 = load i8*, i8** %389, align 8
  tail call void @_Z7sk_freePv(i8* %390) #16
  %391 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %381, i64 10
  %392 = bitcast %class.SkNVRefCnt* %391 to i8**
  %393 = load i8*, i8** %392, align 8
  tail call void @_Z7sk_freePv(i8* %393) #16
  %394 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %381, i64 6
  %395 = bitcast %class.SkNVRefCnt* %394 to i8**
  %396 = load i8*, i8** %395, align 8
  tail call void @_Z7sk_freePv(i8* %396) #16
  %397 = bitcast %class.SkPathRef* %89 to i8*
  tail call void @_ZdlPv(i8* %397) #15
  br label %398

398:                                              ; preds = %385, %380, %378, %29, %24, %19, %17
  ret void
}

declare void @_ZNK8SkMatrix9mapPointsEP7SkPointPKS0_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #5

declare zeroext i1 @_ZNK8SkMatrix7mapRectEP6SkRectRKS0_22SkApplyPerspectiveClip(%class.SkMatrix*, %struct.SkRect*, %struct.SkRect* dereferenceable(16), i32) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkPathRef6RewindEP5sk_spIS_E(%class.sk_sp* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %0, i64 0, i32 0
  %3 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %4 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i32, i32* %4 acquire, align 4
  %6 = icmp eq i32 %5, 1
  %7 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  br i1 %6, label %8, label %26

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 8
  tail call void @_ZN18SkIDChangeListener4List7changedEv(%"class.SkIDChangeListener::List"* %9) #16
  %10 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %11 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %10, i64 0, i32 9
  store i8 1, i8* %11, align 8
  %12 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %13 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %12, i64 0, i32 6
  store i32 0, i32* %13, align 8
  %14 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %15 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %14, i64 0, i32 3, i32 2
  store i32 0, i32* %15, align 4
  %16 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %17 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %16, i64 0, i32 4, i32 2
  store i32 0, i32* %17, align 4
  %18 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %19 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %18, i64 0, i32 5, i32 2
  store i32 0, i32* %19, align 4
  %20 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %21 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %20, i64 0, i32 15
  store i8 0, i8* %21, align 2
  %22 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %23 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %22, i64 0, i32 11
  store i8 0, i8* %23, align 2
  %24 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %25 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %24, i64 0, i32 12
  store i8 0, i8* %25, align 1
  br label %67

26:                                               ; preds = %1
  %27 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 4, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %7, i64 0, i32 3, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = tail call i8* @_Znwm(i64 120) #15
  %32 = bitcast i8* %31 to i32*
  store i32 1, i32* %32, align 4
  %33 = getelementptr inbounds i8, i8* %31, i64 24
  %34 = getelementptr inbounds i8, i8* %31, i64 80
  %35 = bitcast i8* %34 to %"class.SkIDChangeListener::List"*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 48, i1 false) #16
  tail call void @_ZN18SkIDChangeListener4ListC1Ev(%"class.SkIDChangeListener::List"* %35) #16
  %36 = getelementptr inbounds i8, i8* %31, i64 112
  store i8 1, i8* %36, align 8
  %37 = getelementptr inbounds i8, i8* %31, i64 72
  %38 = bitcast i8* %37 to i32*
  store i32 1, i32* %38, align 8
  %39 = getelementptr inbounds i8, i8* %31, i64 118
  store i8 0, i8* %39, align 2
  %40 = getelementptr inbounds i8, i8* %31, i64 114
  store i8 0, i8* %40, align 2
  %41 = getelementptr inbounds i8, i8* %31, i64 115
  store i8 0, i8* %41, align 1
  %42 = getelementptr inbounds i8, i8* %31, i64 116
  store i8 0, i8* %42, align 4
  %43 = getelementptr inbounds i8, i8* %31, i64 117
  store i8 -84, i8* %43, align 1
  %44 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  %45 = bitcast %class.sk_sp* %0 to i8**
  store i8* %31, i8** %45, align 8
  %46 = icmp eq %class.SkPathRef* %44, null
  br i1 %46, label %65, label %47

47:                                               ; preds = %26
  %48 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %44, i64 0, i32 0
  %49 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %50 = atomicrmw add i32* %49, i32 -1 acq_rel
  %51 = icmp eq i32 %50, 1
  br i1 %51, label %52, label %65

52:                                               ; preds = %47
  %53 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %48, i64 20
  %54 = bitcast %class.SkNVRefCnt* %53 to %"class.SkIDChangeListener::List"*
  tail call void @_ZN18SkIDChangeListener4ListD1Ev(%"class.SkIDChangeListener::List"* %54) #16
  %55 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %48, i64 14
  %56 = bitcast %class.SkNVRefCnt* %55 to i8**
  %57 = load i8*, i8** %56, align 8
  tail call void @_Z7sk_freePv(i8* %57) #16
  %58 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %48, i64 10
  %59 = bitcast %class.SkNVRefCnt* %58 to i8**
  %60 = load i8*, i8** %59, align 8
  tail call void @_Z7sk_freePv(i8* %60) #16
  %61 = getelementptr inbounds %class.SkNVRefCnt, %class.SkNVRefCnt* %48, i64 6
  %62 = bitcast %class.SkNVRefCnt* %61 to i8**
  %63 = load i8*, i8** %62, align 8
  tail call void @_Z7sk_freePv(i8* %63) #16
  %64 = bitcast %class.SkPathRef* %44 to i8*
  tail call void @_ZdlPv(i8* %64) #15
  br label %65

65:                                               ; preds = %26, %47, %52
  %66 = load %class.SkPathRef*, %class.SkPathRef** %2, align 8
  tail call void @_ZN9SkPathRef11resetToSizeEiiiii(%class.SkPathRef* %66, i32 0, i32 0, i32 0, i32 %28, i32 %30)
  br label %67

67:                                               ; preds = %65, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN9SkPathRef11resetToSizeEiiiii(%class.SkPathRef*, i32, i32, i32, i32, i32) local_unnamed_addr #0 comdat align 2 {
  %7 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 8
  tail call void @_ZN18SkIDChangeListener4List7changedEv(%"class.SkIDChangeListener::List"* %7) #16
  %8 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 9
  store i8 1, i8* %8, align 8
  %9 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 6
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 15
  store i8 0, i8* %10, align 2
  %11 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 11
  store i8 0, i8* %11, align 2
  %12 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 12
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3
  %14 = add nsw i32 %5, %2
  %15 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp slt i32 %16, %14
  br i1 %17, label %18, label %31

18:                                               ; preds = %6
  %19 = add i32 %14, 4
  %20 = lshr i32 %19, 2
  %21 = add i32 %20, %19
  %22 = icmp sgt i32 %21, -1
  br i1 %22, label %24, label %23

23:                                               ; preds = %18
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #17
  unreachable

24:                                               ; preds = %18
  store i32 %21, i32* %15, align 8
  %25 = bitcast %class.SkTDArray* %13 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = sext i32 %21 to i64
  %28 = shl nsw i64 %27, 3
  %29 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %26, i64 %28) #16
  store i8* %29, i8** %25, align 8
  %30 = load i32, i32* %15, align 8
  br label %31

31:                                               ; preds = %6, %24
  %32 = phi i32 [ %16, %6 ], [ %30, %24 ]
  %33 = icmp slt i32 %32, %2
  br i1 %33, label %34, label %46

34:                                               ; preds = %31
  %35 = add i32 %2, 4
  %36 = lshr i32 %35, 2
  %37 = add i32 %36, %35
  %38 = icmp sgt i32 %37, -1
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #17
  unreachable

40:                                               ; preds = %34
  store i32 %37, i32* %15, align 8
  %41 = bitcast %class.SkTDArray* %13 to i8**
  %42 = load i8*, i8** %41, align 8
  %43 = sext i32 %37 to i64
  %44 = shl nsw i64 %43, 3
  %45 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %42, i64 %44) #16
  store i8* %45, i8** %41, align 8
  br label %46

46:                                               ; preds = %31, %40
  %47 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3, i32 2
  store i32 %2, i32* %47, align 4
  %48 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4
  %49 = add nsw i32 %4, %1
  %50 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = icmp slt i32 %51, %49
  br i1 %52, label %53, label %65

53:                                               ; preds = %46
  %54 = add i32 %49, 4
  %55 = lshr i32 %54, 2
  %56 = add i32 %55, %54
  %57 = icmp sgt i32 %56, -1
  br i1 %57, label %59, label %58

58:                                               ; preds = %53
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #17
  unreachable

59:                                               ; preds = %53
  store i32 %56, i32* %50, align 8
  %60 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %48, i64 0, i32 0
  %61 = load i8*, i8** %60, align 8
  %62 = sext i32 %56 to i64
  %63 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %61, i64 %62) #16
  store i8* %63, i8** %60, align 8
  %64 = load i32, i32* %50, align 8
  br label %65

65:                                               ; preds = %46, %59
  %66 = phi i32 [ %51, %46 ], [ %64, %59 ]
  %67 = icmp slt i32 %66, %1
  br i1 %67, label %68, label %79

68:                                               ; preds = %65
  %69 = add i32 %1, 4
  %70 = lshr i32 %69, 2
  %71 = add i32 %70, %69
  %72 = icmp sgt i32 %71, -1
  br i1 %72, label %74, label %73

73:                                               ; preds = %68
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #17
  unreachable

74:                                               ; preds = %68
  store i32 %71, i32* %50, align 8
  %75 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %48, i64 0, i32 0
  %76 = load i8*, i8** %75, align 8
  %77 = sext i32 %71 to i64
  %78 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %76, i64 %77) #16
  store i8* %78, i8** %75, align 8
  br label %79

79:                                               ; preds = %65, %74
  %80 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4, i32 2
  store i32 %1, i32* %80, align 4
  %81 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 5
  %82 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 5, i32 1
  %83 = load i32, i32* %82, align 8
  %84 = icmp slt i32 %83, %3
  br i1 %84, label %85, label %97

85:                                               ; preds = %79
  %86 = add i32 %3, 4
  %87 = lshr i32 %86, 2
  %88 = add i32 %87, %86
  %89 = icmp sgt i32 %88, -1
  br i1 %89, label %91, label %90

90:                                               ; preds = %85
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #17
  unreachable

91:                                               ; preds = %85
  store i32 %88, i32* %82, align 8
  %92 = bitcast %class.SkTDArray.2* %81 to i8**
  %93 = load i8*, i8** %92, align 8
  %94 = sext i32 %88 to i64
  %95 = shl nsw i64 %94, 2
  %96 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %93, i64 %95) #16
  store i8* %96, i8** %92, align 8
  br label %97

97:                                               ; preds = %79, %91
  %98 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 5, i32 2
  store i32 %3, i32* %98, align 4
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK9SkPathRefeqERKS_(%class.SkPathRef* nocapture readonly, %class.SkPathRef* nocapture readonly dereferenceable(120)) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 15
  %4 = load i8, i8* %3, align 2
  %5 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 15
  %6 = load i8, i8* %5, align 2
  %7 = icmp eq i8 %4, %6
  br i1 %7, label %8, label %71

8:                                                ; preds = %2
  %9 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 6
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %16, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 6
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %10, %14
  br i1 %15, label %71, label %16

16:                                               ; preds = %8, %12
  %17 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3
  %18 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 3
  %19 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 3, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %20, %22
  br i1 %23, label %24, label %71

24:                                               ; preds = %16
  %25 = icmp eq i32 %20, 0
  br i1 %25, label %35, label %26

26:                                               ; preds = %24
  %27 = bitcast %class.SkTDArray* %17 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast %class.SkTDArray* %18 to i8**
  %30 = load i8*, i8** %29, align 8
  %31 = sext i32 %20 to i64
  %32 = shl nsw i64 %31, 3
  %33 = tail call i32 @bcmp(i8* %28, i8* %30, i64 %32) #16
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %71

35:                                               ; preds = %26, %24
  %36 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 5
  %37 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 5
  %38 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 5, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 5, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %39, %41
  br i1 %42, label %43, label %71

43:                                               ; preds = %35
  %44 = icmp eq i32 %39, 0
  br i1 %44, label %54, label %45

45:                                               ; preds = %43
  %46 = bitcast %class.SkTDArray.2* %36 to i8**
  %47 = load i8*, i8** %46, align 8
  %48 = bitcast %class.SkTDArray.2* %37 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = sext i32 %39 to i64
  %51 = shl nsw i64 %50, 2
  %52 = tail call i32 @bcmp(i8* %47, i8* %49, i64 %51) #16
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %71

54:                                               ; preds = %45, %43
  %55 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4, i32 2
  %56 = load i32, i32* %55, align 4
  %57 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 4, i32 2
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %56, %58
  br i1 %59, label %60, label %71

60:                                               ; preds = %54
  %61 = icmp eq i32 %56, 0
  br i1 %61, label %70, label %62

62:                                               ; preds = %60
  %63 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 4, i32 0
  %66 = load i8*, i8** %65, align 8
  %67 = sext i32 %56 to i64
  %68 = tail call i32 @bcmp(i8* %64, i8* %66, i64 %67) #16
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %62, %60
  br label %71

71:                                               ; preds = %62, %45, %26, %54, %35, %16, %70, %12, %2
  %72 = phi i1 [ false, %2 ], [ true, %70 ], [ true, %12 ], [ false, %62 ], [ false, %45 ], [ false, %26 ], [ false, %16 ], [ false, %35 ], [ false, %54 ]
  ret i1 %72
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9SkPathRef13writeToBufferEP9SkWBuffer(%class.SkPathRef*, %class.SkWBuffer*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 9
  %9 = load i8, i8* %8, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %2
  %12 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 10
  %13 = load i8, i8* %12, align 1, !range !2
  br label %23

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 1
  %16 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3, i32 0
  %17 = load %struct.SkPoint*, %struct.SkPoint** %16, align 8
  %18 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %15, %struct.SkPoint* %17, i32 %19) #16
  %21 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 10
  %22 = zext i1 %20 to i8
  store i8 %22, i8* %21, align 1
  store i8 0, i8* %8, align 8
  br label %23

23:                                               ; preds = %11, %14
  %24 = phi i8 [ %13, %11 ], [ %22, %14 ]
  %25 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 1
  %26 = zext i8 %24 to i32
  %27 = shl nuw nsw i32 %26, 25
  %28 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 15
  %29 = load i8, i8* %28, align 2
  %30 = zext i8 %29 to i32
  %31 = or i32 %27, %30
  %32 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32)
  store i32 %31, i32* %7, align 4
  call void @_ZN9SkWBuffer16writeNoSizeCheckEPKvm(%class.SkWBuffer* %1, i8* nonnull %32, i64 4) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32)
  %33 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33)
  store i32 0, i32* %6, align 4
  call void @_ZN9SkWBuffer16writeNoSizeCheckEPKvm(%class.SkWBuffer* %1, i8* nonnull %33, i64 4) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33)
  %34 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36)
  store i32 %35, i32* %5, align 4
  call void @_ZN9SkWBuffer16writeNoSizeCheckEPKvm(%class.SkWBuffer* %1, i8* nonnull %36, i64 4) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36)
  %37 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %39)
  store i32 %38, i32* %4, align 4
  call void @_ZN9SkWBuffer16writeNoSizeCheckEPKvm(%class.SkWBuffer* %1, i8* nonnull %39, i64 4) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %39)
  %40 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 5, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %42)
  store i32 %41, i32* %3, align 4
  call void @_ZN9SkWBuffer16writeNoSizeCheckEPKvm(%class.SkWBuffer* %1, i8* nonnull %42, i64 4) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %42)
  %43 = load i32, i32* %34, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %56, label %45

45:                                               ; preds = %23
  %46 = sext i32 %43 to i64
  %47 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @_ZN9SkWBuffer16writeNoSizeCheckEPKvm(%class.SkWBuffer* %1, i8* %48, i64 %46) #16
  %49 = load i32, i32* %34, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %45
  %52 = sext i32 %49 to i64
  %53 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3, i32 0
  %54 = bitcast %struct.SkPoint** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  call void @_ZN9SkWBuffer16writeNoSizeCheckEPKvm(%class.SkWBuffer* %1, i8* %55, i64 %52) #16
  br label %56

56:                                               ; preds = %23, %45, %51
  %57 = load i32, i32* %40, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %65, label %59

59:                                               ; preds = %56
  %60 = sext i32 %57 to i64
  %61 = shl nsw i64 %60, 2
  %62 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 5, i32 0
  %63 = bitcast float** %62 to i8**
  %64 = load i8*, i8** %63, align 8
  call void @_ZN9SkWBuffer16writeNoSizeCheckEPKvm(%class.SkWBuffer* %1, i8* %64, i64 %61) #16
  br label %65

65:                                               ; preds = %56, %59
  %66 = bitcast %struct.SkRect* %25 to i8*
  call void @_ZN9SkWBuffer16writeNoSizeCheckEPKvm(%class.SkWBuffer* %1, i8* %66, i64 16) #16
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK9SkPathRef9writeSizeEv(%class.SkPathRef* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4, i32 2
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = shl i32 %5, 3
  %7 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 5, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = shl i32 %8, 2
  %10 = add i32 %3, 36
  %11 = add i32 %10, %6
  %12 = add i32 %11, %9
  ret i32 %12
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZNK9SkPathRef11interpolateERKS_fPS_(%class.SkPathRef* nocapture readnone, %class.SkPathRef* nocapture readonly dereferenceable(120), float, %class.SkPathRef* nocapture) local_unnamed_addr #7 align 2 {
  %5 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 3, i32 0
  %6 = load %struct.SkPoint*, %struct.SkPoint** %5, align 8
  %7 = bitcast %struct.SkPoint* %6 to i8*
  %8 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %6, i64 0, i32 0
  %9 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 11
  store i8 0, i8* %9, align 2
  %10 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 12
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 3, i32 0
  %12 = load %struct.SkPoint*, %struct.SkPoint** %11, align 8
  %13 = bitcast %struct.SkPoint* %12 to i8*
  %14 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 0, i32 0
  %15 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 3, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = icmp sgt i32 %16, 0
  br i1 %17, label %18, label %126

18:                                               ; preds = %4
  %19 = shl nsw i32 %16, 1
  %20 = fsub float 1.000000e+00, %2
  %21 = sext i32 %19 to i64
  %22 = icmp sgt i64 %21, 1
  %23 = select i1 %22, i64 %21, i64 1
  %24 = icmp ult i64 %23, 8
  br i1 %24, label %25, label %27

25:                                               ; preds = %124, %27, %18
  %26 = phi i64 [ 0, %27 ], [ 0, %18 ], [ %37, %124 ]
  br label %128

27:                                               ; preds = %18
  %28 = icmp sgt i64 %21, 1
  %29 = select i1 %28, i64 %21, i64 1
  %30 = shl nsw i64 %29, 2
  %31 = getelementptr i8, i8* %13, i64 %30
  %32 = getelementptr i8, i8* %7, i64 %30
  %33 = icmp ugt i8* %32, %13
  %34 = icmp ugt i8* %31, %7
  %35 = and i1 %33, %34
  br i1 %35, label %25, label %36

36:                                               ; preds = %27
  %37 = and i64 %23, 9223372036854775800
  %38 = insertelement <4 x float> undef, float %2, i32 0
  %39 = shufflevector <4 x float> %38, <4 x float> undef, <4 x i32> zeroinitializer
  %40 = insertelement <4 x float> undef, float %2, i32 0
  %41 = shufflevector <4 x float> %40, <4 x float> undef, <4 x i32> zeroinitializer
  %42 = insertelement <4 x float> undef, float %20, i32 0
  %43 = shufflevector <4 x float> %42, <4 x float> undef, <4 x i32> zeroinitializer
  %44 = insertelement <4 x float> undef, float %20, i32 0
  %45 = shufflevector <4 x float> %44, <4 x float> undef, <4 x i32> zeroinitializer
  %46 = add nsw i64 %37, -8
  %47 = lshr exact i64 %46, 3
  %48 = add nuw nsw i64 %47, 1
  %49 = and i64 %48, 1
  %50 = icmp eq i64 %46, 0
  br i1 %50, label %100, label %51

51:                                               ; preds = %36
  %52 = sub nuw nsw i64 %48, %49
  br label %53

53:                                               ; preds = %53, %51
  %54 = phi i64 [ 0, %51 ], [ %97, %53 ]
  %55 = phi i64 [ %52, %51 ], [ %98, %53 ]
  %56 = getelementptr inbounds float, float* %14, i64 %54
  %57 = bitcast float* %56 to <4 x float>*
  %58 = load <4 x float>, <4 x float>* %57, align 4, !alias.scope !3, !noalias !6
  %59 = getelementptr inbounds float, float* %56, i64 4
  %60 = bitcast float* %59 to <4 x float>*
  %61 = load <4 x float>, <4 x float>* %60, align 4, !alias.scope !3, !noalias !6
  %62 = fmul <4 x float> %58, %39
  %63 = fmul <4 x float> %61, %41
  %64 = getelementptr inbounds float, float* %8, i64 %54
  %65 = bitcast float* %64 to <4 x float>*
  %66 = load <4 x float>, <4 x float>* %65, align 4, !alias.scope !6
  %67 = getelementptr inbounds float, float* %64, i64 4
  %68 = bitcast float* %67 to <4 x float>*
  %69 = load <4 x float>, <4 x float>* %68, align 4, !alias.scope !6
  %70 = fmul <4 x float> %43, %66
  %71 = fmul <4 x float> %45, %69
  %72 = fadd <4 x float> %62, %70
  %73 = fadd <4 x float> %63, %71
  %74 = bitcast float* %56 to <4 x float>*
  store <4 x float> %72, <4 x float>* %74, align 4, !alias.scope !3, !noalias !6
  %75 = bitcast float* %59 to <4 x float>*
  store <4 x float> %73, <4 x float>* %75, align 4, !alias.scope !3, !noalias !6
  %76 = or i64 %54, 8
  %77 = getelementptr inbounds float, float* %14, i64 %76
  %78 = bitcast float* %77 to <4 x float>*
  %79 = load <4 x float>, <4 x float>* %78, align 4, !alias.scope !3, !noalias !6
  %80 = getelementptr inbounds float, float* %77, i64 4
  %81 = bitcast float* %80 to <4 x float>*
  %82 = load <4 x float>, <4 x float>* %81, align 4, !alias.scope !3, !noalias !6
  %83 = fmul <4 x float> %79, %39
  %84 = fmul <4 x float> %82, %41
  %85 = getelementptr inbounds float, float* %8, i64 %76
  %86 = bitcast float* %85 to <4 x float>*
  %87 = load <4 x float>, <4 x float>* %86, align 4, !alias.scope !6
  %88 = getelementptr inbounds float, float* %85, i64 4
  %89 = bitcast float* %88 to <4 x float>*
  %90 = load <4 x float>, <4 x float>* %89, align 4, !alias.scope !6
  %91 = fmul <4 x float> %43, %87
  %92 = fmul <4 x float> %45, %90
  %93 = fadd <4 x float> %83, %91
  %94 = fadd <4 x float> %84, %92
  %95 = bitcast float* %77 to <4 x float>*
  store <4 x float> %93, <4 x float>* %95, align 4, !alias.scope !3, !noalias !6
  %96 = bitcast float* %80 to <4 x float>*
  store <4 x float> %94, <4 x float>* %96, align 4, !alias.scope !3, !noalias !6
  %97 = add i64 %54, 16
  %98 = add i64 %55, -2
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %100, label %53, !llvm.loop !8

100:                                              ; preds = %53, %36
  %101 = phi i64 [ 0, %36 ], [ %97, %53 ]
  %102 = icmp eq i64 %49, 0
  br i1 %102, label %124, label %103

103:                                              ; preds = %100
  %104 = getelementptr inbounds float, float* %14, i64 %101
  %105 = bitcast float* %104 to <4 x float>*
  %106 = load <4 x float>, <4 x float>* %105, align 4, !alias.scope !3, !noalias !6
  %107 = getelementptr inbounds float, float* %104, i64 4
  %108 = bitcast float* %107 to <4 x float>*
  %109 = load <4 x float>, <4 x float>* %108, align 4, !alias.scope !3, !noalias !6
  %110 = fmul <4 x float> %106, %39
  %111 = fmul <4 x float> %109, %41
  %112 = getelementptr inbounds float, float* %8, i64 %101
  %113 = bitcast float* %112 to <4 x float>*
  %114 = load <4 x float>, <4 x float>* %113, align 4, !alias.scope !6
  %115 = getelementptr inbounds float, float* %112, i64 4
  %116 = bitcast float* %115 to <4 x float>*
  %117 = load <4 x float>, <4 x float>* %116, align 4, !alias.scope !6
  %118 = fmul <4 x float> %43, %114
  %119 = fmul <4 x float> %45, %117
  %120 = fadd <4 x float> %110, %118
  %121 = fadd <4 x float> %111, %119
  %122 = bitcast float* %104 to <4 x float>*
  store <4 x float> %120, <4 x float>* %122, align 4, !alias.scope !3, !noalias !6
  %123 = bitcast float* %107 to <4 x float>*
  store <4 x float> %121, <4 x float>* %123, align 4, !alias.scope !3, !noalias !6
  br label %124

124:                                              ; preds = %100, %103
  %125 = icmp eq i64 %23, %37
  br i1 %125, label %126, label %25

126:                                              ; preds = %128, %124, %4
  %127 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %3, i64 0, i32 9
  store i8 1, i8* %127, align 8
  store i8 0, i8* %9, align 2
  store i8 0, i8* %10, align 1
  ret void

128:                                              ; preds = %25, %128
  %129 = phi i64 [ %137, %128 ], [ %26, %25 ]
  %130 = getelementptr inbounds float, float* %14, i64 %129
  %131 = load float, float* %130, align 4
  %132 = fmul float %131, %2
  %133 = getelementptr inbounds float, float* %8, i64 %129
  %134 = load float, float* %133, align 4
  %135 = fmul float %20, %134
  %136 = fadd float %132, %135
  store float %136, float* %130, align 4
  %137 = add nuw nsw i64 %129, 1
  %138 = icmp slt i64 %137, %21
  br i1 %138, label %128, label %126, !llvm.loop !10
}

; Function Attrs: nounwind ssp uwtable
define hidden { %struct.SkPoint*, float* } @_ZN9SkPathRef18growForVerbsInPathERKS_(%class.SkPathRef* nocapture, %class.SkPathRef* nocapture readonly dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 15
  %4 = load i8, i8* %3, align 2
  %5 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 15
  %6 = load i8, i8* %5, align 2
  %7 = or i8 %6, %4
  store i8 %7, i8* %5, align 2
  %8 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 9
  store i8 1, i8* %8, align 8
  %9 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 11
  store i8 0, i8* %9, align 2
  %10 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 12
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 4, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %46, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4
  %16 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4, i32 2
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, %12
  %19 = icmp sgt i32 %18, -1
  br i1 %19, label %21, label %20

20:                                               ; preds = %14
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #17
  unreachable

21:                                               ; preds = %14
  %22 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = icmp slt i32 %23, %18
  br i1 %24, label %28, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %15, i64 0, i32 0
  %27 = load i8*, i8** %26, align 8
  br label %39

28:                                               ; preds = %21
  %29 = add nuw i32 %18, 4
  %30 = lshr i32 %29, 2
  %31 = add nuw i32 %30, %29
  %32 = icmp sgt i32 %31, -1
  br i1 %32, label %34, label %33

33:                                               ; preds = %28
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #17
  unreachable

34:                                               ; preds = %28
  store i32 %31, i32* %22, align 8
  %35 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %15, i64 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = sext i32 %31 to i64
  %38 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %36, i64 %37) #16
  store i8* %38, i8** %35, align 8
  br label %39

39:                                               ; preds = %25, %34
  %40 = phi i8* [ %27, %25 ], [ %38, %34 ]
  store i32 %18, i32* %16, align 4
  %41 = sext i32 %17 to i64
  %42 = getelementptr inbounds i8, i8* %40, i64 %41
  %43 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 4, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = sext i32 %12 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %42, i8* align 1 %44, i64 %45, i1 false)
  br label %46

46:                                               ; preds = %2, %39
  %47 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 3, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %81, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3
  %52 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = add i32 %53, %48
  %55 = icmp sgt i32 %54, -1
  br i1 %55, label %57, label %56

56:                                               ; preds = %50
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #17
  unreachable

57:                                               ; preds = %50
  %58 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = icmp slt i32 %59, %54
  br i1 %60, label %64, label %61

61:                                               ; preds = %57
  %62 = getelementptr inbounds %class.SkTDArray, %class.SkTDArray* %51, i64 0, i32 0
  %63 = load %struct.SkPoint*, %struct.SkPoint** %62, align 8
  br label %77

64:                                               ; preds = %57
  %65 = add nuw i32 %54, 4
  %66 = lshr i32 %65, 2
  %67 = add nuw i32 %66, %65
  %68 = icmp sgt i32 %67, -1
  br i1 %68, label %70, label %69

69:                                               ; preds = %64
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #17
  unreachable

70:                                               ; preds = %64
  store i32 %67, i32* %58, align 8
  %71 = bitcast %class.SkTDArray* %51 to i8**
  %72 = load i8*, i8** %71, align 8
  %73 = sext i32 %67 to i64
  %74 = shl nsw i64 %73, 3
  %75 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %72, i64 %74) #16
  store i8* %75, i8** %71, align 8
  %76 = bitcast i8* %75 to %struct.SkPoint*
  br label %77

77:                                               ; preds = %61, %70
  %78 = phi %struct.SkPoint* [ %63, %61 ], [ %76, %70 ]
  store i32 %54, i32* %52, align 4
  %79 = sext i32 %53 to i64
  %80 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %78, i64 %79
  br label %81

81:                                               ; preds = %46, %77
  %82 = phi %struct.SkPoint* [ null, %46 ], [ %80, %77 ]
  %83 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 5, i32 2
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %117, label %86

86:                                               ; preds = %81
  %87 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 5
  %88 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 5, i32 2
  %89 = load i32, i32* %88, align 4
  %90 = add i32 %89, %84
  %91 = icmp sgt i32 %90, -1
  br i1 %91, label %93, label %92

92:                                               ; preds = %86
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #17
  unreachable

93:                                               ; preds = %86
  %94 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 5, i32 1
  %95 = load i32, i32* %94, align 8
  %96 = icmp slt i32 %95, %90
  br i1 %96, label %100, label %97

97:                                               ; preds = %93
  %98 = getelementptr inbounds %class.SkTDArray.2, %class.SkTDArray.2* %87, i64 0, i32 0
  %99 = load float*, float** %98, align 8
  br label %113

100:                                              ; preds = %93
  %101 = add nuw i32 %90, 4
  %102 = lshr i32 %101, 2
  %103 = add nuw i32 %102, %101
  %104 = icmp sgt i32 %103, -1
  br i1 %104, label %106, label %105

105:                                              ; preds = %100
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #17
  unreachable

106:                                              ; preds = %100
  store i32 %103, i32* %94, align 8
  %107 = bitcast %class.SkTDArray.2* %87 to i8**
  %108 = load i8*, i8** %107, align 8
  %109 = sext i32 %103 to i64
  %110 = shl nsw i64 %109, 2
  %111 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %108, i64 %110) #16
  store i8* %111, i8** %107, align 8
  %112 = bitcast i8* %111 to float*
  br label %113

113:                                              ; preds = %97, %106
  %114 = phi float* [ %99, %97 ], [ %112, %106 ]
  store i32 %90, i32* %88, align 4
  %115 = sext i32 %89 to i64
  %116 = getelementptr inbounds float, float* %114, i64 %115
  br label %117

117:                                              ; preds = %81, %113
  %118 = phi float* [ null, %81 ], [ %116, %113 ]
  %119 = insertvalue { %struct.SkPoint*, float* } undef, %struct.SkPoint* %82, 0
  %120 = insertvalue { %struct.SkPoint*, float* } %119, float* %118, 1
  ret { %struct.SkPoint*, float* } %120
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.SkPoint* @_ZN9SkPathRef19growForRepeatedVerbEiiPPf(%class.SkPathRef* nocapture, i32, i32, float** nocapture) local_unnamed_addr #0 align 2 {
  switch i32 %1, label %26 [
    i32 0, label %27
    i32 1, label %5
    i32 2, label %9
    i32 3, label %14
    i32 4, label %19
    i32 5, label %24
    i32 6, label %25
  ]

5:                                                ; preds = %4
  %6 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 15
  %7 = load i8, i8* %6, align 2
  %8 = or i8 %7, 1
  store i8 %8, i8* %6, align 2
  br label %27

9:                                                ; preds = %4
  %10 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 15
  %11 = load i8, i8* %10, align 2
  %12 = or i8 %11, 2
  store i8 %12, i8* %10, align 2
  %13 = shl nsw i32 %2, 1
  br label %27

14:                                               ; preds = %4
  %15 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 15
  %16 = load i8, i8* %15, align 2
  %17 = or i8 %16, 4
  store i8 %17, i8* %15, align 2
  %18 = shl nsw i32 %2, 1
  br label %27

19:                                               ; preds = %4
  %20 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 15
  %21 = load i8, i8* %20, align 2
  %22 = or i8 %21, 8
  store i8 %22, i8* %20, align 2
  %23 = mul nsw i32 %2, 3
  br label %27

24:                                               ; preds = %4
  br label %27

25:                                               ; preds = %4
  br label %27

26:                                               ; preds = %4
  br label %27

27:                                               ; preds = %4, %26, %25, %24, %19, %14, %9, %5
  %28 = phi i32 [ 0, %26 ], [ 0, %25 ], [ 0, %24 ], [ %23, %19 ], [ %18, %14 ], [ %13, %9 ], [ %2, %5 ], [ %2, %4 ]
  %29 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 9
  store i8 1, i8* %29, align 8
  %30 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 11
  store i8 0, i8* %30, align 2
  %31 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 12
  store i8 0, i8* %31, align 1
  %32 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4
  %33 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %2, 0
  br i1 %35, label %56, label %36

36:                                               ; preds = %27
  %37 = add i32 %34, %2
  %38 = icmp sgt i32 %37, -1
  br i1 %38, label %40, label %39

39:                                               ; preds = %36
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #17
  unreachable

40:                                               ; preds = %36
  %41 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = icmp slt i32 %42, %37
  br i1 %43, label %44, label %55

44:                                               ; preds = %40
  %45 = add nuw i32 %37, 4
  %46 = lshr i32 %45, 2
  %47 = add nuw i32 %46, %45
  %48 = icmp sgt i32 %47, -1
  br i1 %48, label %50, label %49

49:                                               ; preds = %44
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #17
  unreachable

50:                                               ; preds = %44
  store i32 %47, i32* %41, align 8
  %51 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %32, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = sext i32 %47 to i64
  %54 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %52, i64 %53) #16
  store i8* %54, i8** %51, align 8
  br label %55

55:                                               ; preds = %50, %40
  store i32 %37, i32* %33, align 4
  br label %56

56:                                               ; preds = %27, %55
  %57 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %32, i64 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = sext i32 %34 to i64
  %60 = getelementptr inbounds i8, i8* %58, i64 %59
  %61 = trunc i32 %1 to i8
  %62 = sext i32 %2 to i64
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %60, i8 %61, i64 %62, i1 false)
  %63 = icmp eq i32 %1, 3
  br i1 %63, label %64, label %94

64:                                               ; preds = %56
  %65 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 5
  %66 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 5, i32 2
  %67 = load i32, i32* %66, align 4
  br i1 %35, label %89, label %68

68:                                               ; preds = %64
  %69 = add i32 %67, %2
  %70 = icmp sgt i32 %69, -1
  br i1 %70, label %72, label %71

71:                                               ; preds = %68
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #17
  unreachable

72:                                               ; preds = %68
  %73 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 5, i32 1
  %74 = load i32, i32* %73, align 8
  %75 = icmp slt i32 %74, %69
  br i1 %75, label %76, label %88

76:                                               ; preds = %72
  %77 = add nuw i32 %69, 4
  %78 = lshr i32 %77, 2
  %79 = add nuw i32 %78, %77
  %80 = icmp sgt i32 %79, -1
  br i1 %80, label %82, label %81

81:                                               ; preds = %76
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #17
  unreachable

82:                                               ; preds = %76
  store i32 %79, i32* %73, align 8
  %83 = bitcast %class.SkTDArray.2* %65 to i8**
  %84 = load i8*, i8** %83, align 8
  %85 = sext i32 %79 to i64
  %86 = shl nsw i64 %85, 2
  %87 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %84, i64 %86) #16
  store i8* %87, i8** %83, align 8
  br label %88

88:                                               ; preds = %82, %72
  store i32 %69, i32* %66, align 4
  br label %89

89:                                               ; preds = %64, %88
  %90 = getelementptr inbounds %class.SkTDArray.2, %class.SkTDArray.2* %65, i64 0, i32 0
  %91 = load float*, float** %90, align 8
  %92 = sext i32 %67 to i64
  %93 = getelementptr inbounds float, float* %91, i64 %92
  store float* %93, float** %3, align 8
  br label %94

94:                                               ; preds = %89, %56
  %95 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3
  %96 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3, i32 2
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %28, 0
  br i1 %98, label %120, label %99

99:                                               ; preds = %94
  %100 = add i32 %97, %28
  %101 = icmp sgt i32 %100, -1
  br i1 %101, label %103, label %102

102:                                              ; preds = %99
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #17
  unreachable

103:                                              ; preds = %99
  %104 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3, i32 1
  %105 = load i32, i32* %104, align 8
  %106 = icmp slt i32 %105, %100
  br i1 %106, label %107, label %119

107:                                              ; preds = %103
  %108 = add nuw i32 %100, 4
  %109 = lshr i32 %108, 2
  %110 = add nuw i32 %109, %108
  %111 = icmp sgt i32 %110, -1
  br i1 %111, label %113, label %112

112:                                              ; preds = %107
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #17
  unreachable

113:                                              ; preds = %107
  store i32 %110, i32* %104, align 8
  %114 = bitcast %class.SkTDArray* %95 to i8**
  %115 = load i8*, i8** %114, align 8
  %116 = sext i32 %110 to i64
  %117 = shl nsw i64 %116, 3
  %118 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %115, i64 %117) #16
  store i8* %118, i8** %114, align 8
  br label %119

119:                                              ; preds = %113, %103
  store i32 %100, i32* %96, align 4
  br label %120

120:                                              ; preds = %94, %119
  %121 = getelementptr inbounds %class.SkTDArray, %class.SkTDArray* %95, i64 0, i32 0
  %122 = load %struct.SkPoint*, %struct.SkPoint** %121, align 8
  %123 = sext i32 %97 to i64
  %124 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %122, i64 %123
  ret %struct.SkPoint* %124
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.SkPoint* @_ZN9SkPathRef11growForVerbEif(%class.SkPathRef* nocapture, i32, float) local_unnamed_addr #0 align 2 {
  %4 = icmp ult i32 %1, 7
  br i1 %4, label %5, label %13

5:                                                ; preds = %3
  %6 = zext i32 %1 to i56
  %7 = shl nuw nsw i56 %6, 3
  %8 = lshr i56 34426978560, %7
  %9 = trunc i56 %8 to i8
  %10 = sext i32 %1 to i64
  %11 = getelementptr inbounds [7 x i32], [7 x i32]* @switch.table._ZN9SkPathRef11growForVerbEif, i64 0, i64 %10
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %3, %5
  %14 = phi i8 [ %9, %5 ], [ 0, %3 ]
  %15 = phi i32 [ %12, %5 ], [ 0, %3 ]
  %16 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 15
  %17 = load i8, i8* %16, align 2
  %18 = or i8 %17, %14
  store i8 %18, i8* %16, align 2
  %19 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 9
  store i8 1, i8* %19, align 8
  %20 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 11
  store i8 0, i8* %20, align 2
  %21 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 12
  store i8 0, i8* %21, align 1
  %22 = trunc i32 %1 to i8
  %23 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4
  %24 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = add i32 %25, 1
  %27 = icmp sgt i32 %26, -1
  br i1 %27, label %29, label %28

28:                                               ; preds = %13
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #17
  unreachable

29:                                               ; preds = %13
  %30 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = icmp slt i32 %31, %26
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %23, i64 0, i32 0
  %35 = load i8*, i8** %34, align 8
  br label %47

36:                                               ; preds = %29
  %37 = add i32 %25, 5
  %38 = lshr i32 %37, 2
  %39 = add nuw i32 %38, %37
  %40 = icmp sgt i32 %39, -1
  br i1 %40, label %42, label %41

41:                                               ; preds = %36
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #17
  unreachable

42:                                               ; preds = %36
  store i32 %39, i32* %30, align 8
  %43 = getelementptr inbounds %class.SkTDArray.1, %class.SkTDArray.1* %23, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = sext i32 %39 to i64
  %46 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %44, i64 %45) #16
  store i8* %46, i8** %43, align 8
  br label %47

47:                                               ; preds = %33, %42
  %48 = phi i8* [ %35, %33 ], [ %46, %42 ]
  store i32 %26, i32* %24, align 4
  %49 = sext i32 %25 to i64
  %50 = getelementptr inbounds i8, i8* %48, i64 %49
  store i8 %22, i8* %50, align 1
  %51 = icmp eq i32 %1, 3
  br i1 %51, label %52, label %83

52:                                               ; preds = %47
  %53 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 5
  %54 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 5, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = add i32 %55, 1
  %57 = icmp sgt i32 %56, -1
  br i1 %57, label %59, label %58

58:                                               ; preds = %52
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #17
  unreachable

59:                                               ; preds = %52
  %60 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 5, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = icmp slt i32 %61, %56
  br i1 %62, label %66, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %class.SkTDArray.2, %class.SkTDArray.2* %53, i64 0, i32 0
  %65 = load float*, float** %64, align 8
  br label %79

66:                                               ; preds = %59
  %67 = add i32 %55, 5
  %68 = lshr i32 %67, 2
  %69 = add nuw i32 %68, %67
  %70 = icmp sgt i32 %69, -1
  br i1 %70, label %72, label %71

71:                                               ; preds = %66
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #17
  unreachable

72:                                               ; preds = %66
  store i32 %69, i32* %60, align 8
  %73 = bitcast %class.SkTDArray.2* %53 to i8**
  %74 = load i8*, i8** %73, align 8
  %75 = sext i32 %69 to i64
  %76 = shl nsw i64 %75, 2
  %77 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %74, i64 %76) #16
  store i8* %77, i8** %73, align 8
  %78 = bitcast i8* %77 to float*
  br label %79

79:                                               ; preds = %63, %72
  %80 = phi float* [ %65, %63 ], [ %78, %72 ]
  store i32 %56, i32* %54, align 4
  %81 = sext i32 %55 to i64
  %82 = getelementptr inbounds float, float* %80, i64 %81
  store float %2, float* %82, align 4
  br label %83

83:                                               ; preds = %79, %47
  %84 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3
  %85 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = icmp eq i32 %15, 0
  br i1 %87, label %109, label %88

88:                                               ; preds = %83
  %89 = add i32 %86, %15
  %90 = icmp sgt i32 %89, -1
  br i1 %90, label %92, label %91

91:                                               ; preds = %88
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 354, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.3, i64 0, i64 0)) #17
  unreachable

92:                                               ; preds = %88
  %93 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3, i32 1
  %94 = load i32, i32* %93, align 8
  %95 = icmp slt i32 %94, %89
  br i1 %95, label %96, label %108

96:                                               ; preds = %92
  %97 = add nuw i32 %89, 4
  %98 = lshr i32 %97, 2
  %99 = add nuw i32 %98, %97
  %100 = icmp sgt i32 %99, -1
  br i1 %100, label %102, label %101

101:                                              ; preds = %96
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([51 x i8], [51 x i8]* @.str, i64 0, i64 0), i32 374, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.2, i64 0, i64 0)) #17
  unreachable

102:                                              ; preds = %96
  store i32 %99, i32* %93, align 8
  %103 = bitcast %class.SkTDArray* %84 to i8**
  %104 = load i8*, i8** %103, align 8
  %105 = sext i32 %99 to i64
  %106 = shl nsw i64 %105, 3
  %107 = tail call i8* @_Z16sk_realloc_throwPvm(i8* %104, i64 %106) #16
  store i8* %107, i8** %103, align 8
  br label %108

108:                                              ; preds = %102, %92
  store i32 %89, i32* %85, align 4
  br label %109

109:                                              ; preds = %83, %108
  %110 = getelementptr inbounds %class.SkTDArray, %class.SkTDArray* %84, i64 0, i32 0
  %111 = load %struct.SkPoint*, %struct.SkPoint** %110, align 8
  %112 = sext i32 %86 to i64
  %113 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %111, i64 %112
  ret %struct.SkPoint* %113
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @_ZNK9SkPathRef5genIDEv(%class.SkPathRef* nocapture) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 6
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %19

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3, i32 2
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %13

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %9, %5
  br label %14

14:                                               ; preds = %13, %14
  %15 = atomicrmw add i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZNK9SkPathRef5genIDEvE6nextID, i64 0, i32 0, i32 0), i32 1 monotonic
  %16 = icmp ult i32 %15, 2
  br i1 %16, label %14, label %17

17:                                               ; preds = %14, %9
  %18 = phi i32 [ 1, %9 ], [ %15, %14 ]
  store i32 %18, i32* %2, align 8
  br label %19

19:                                               ; preds = %17, %1
  %20 = phi i32 [ %3, %1 ], [ %18, %17 ]
  ret i32 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkPathRef22addGenIDChangeListenerE5sk_spI18SkIDChangeListenerE(%class.SkPathRef*, %class.sk_sp.20* nocapture) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.20, align 8
  %4 = load %class.SkPathRef*, %class.SkPathRef** @_ZL6gEmpty, align 8
  %5 = icmp eq %class.SkPathRef* %4, %0
  br i1 %5, label %25, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 8
  %8 = getelementptr inbounds %class.sk_sp.20, %class.sk_sp.20* %1, i64 0, i32 0
  %9 = bitcast %class.sk_sp.20* %1 to i64*
  %10 = load i64, i64* %9, align 8
  store %class.SkIDChangeListener* null, %class.SkIDChangeListener** %8, align 8
  %11 = bitcast %class.sk_sp.20* %3 to i64*
  store i64 %10, i64* %11, align 8
  call void @_ZN18SkIDChangeListener4List3addE5sk_spIS_E(%"class.SkIDChangeListener::List"* %7, %class.sk_sp.20* nonnull %3) #16
  %12 = getelementptr inbounds %class.sk_sp.20, %class.sk_sp.20* %3, i64 0, i32 0
  %13 = load %class.SkIDChangeListener*, %class.SkIDChangeListener** %12, align 8
  %14 = icmp eq %class.SkIDChangeListener* %13, null
  br i1 %14, label %25, label %15

15:                                               ; preds = %6
  %16 = getelementptr inbounds %class.SkIDChangeListener, %class.SkIDChangeListener* %13, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i32* %16, i32 -1 acq_rel
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %19, label %25

19:                                               ; preds = %15
  %20 = bitcast %class.SkIDChangeListener* %13 to %class.SkRefCntBase*
  %21 = bitcast %class.SkIDChangeListener* %13 to void (%class.SkRefCntBase*)***
  %22 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %21, align 8
  %23 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, i64 2
  %24 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %23, align 8
  call void %24(%class.SkRefCntBase* nonnull %20) #16
  br label %25

25:                                               ; preds = %19, %15, %6, %2
  ret void
}

declare void @_ZN18SkIDChangeListener4List3addE5sk_spIS_E(%"class.SkIDChangeListener::List"*, %class.sk_sp.20*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN9SkPathRef24genIDChangeListenerCountEv(%class.SkPathRef*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 8
  %3 = tail call i32 @_ZNK18SkIDChangeListener4List5countEv(%"class.SkIDChangeListener::List"* %2) #16
  ret i32 %3
}

declare i32 @_ZNK18SkIDChangeListener4List5countEv(%"class.SkIDChangeListener::List"*) local_unnamed_addr #5

declare void @_ZN18SkIDChangeListener4List7changedEv(%"class.SkIDChangeListener::List"*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9SkPathRef8getRRectEv(%class.SkRRect* noalias sret, %class.SkPathRef*) local_unnamed_addr #8 align 2 {
  %3 = alloca [4 x %struct.SkPoint], align 16
  %4 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 9
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 1
  %9 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 3, i32 0
  %10 = load %struct.SkPoint*, %struct.SkPoint** %9, align 8
  %11 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 3, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %8, %struct.SkPoint* %10, i32 %12) #16
  %14 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 10
  %15 = zext i1 %13 to i8
  store i8 %15, i8* %14, align 1
  store i8 0, i8* %4, align 8
  br label %16

16:                                               ; preds = %2, %7
  %17 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 1
  %18 = bitcast [4 x %struct.SkPoint]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %18, i8 0, i64 32, i1 false)
  %19 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 3, i32 0
  %20 = bitcast %struct.SkPoint** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 4, i32 0
  %23 = bitcast i8** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  %26 = inttoptr i64 %21 to %struct.SkPoint*
  br i1 %25, label %34, label %27

27:                                               ; preds = %16
  %28 = inttoptr i64 %24 to i8*
  %29 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 4, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = sext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %28, i64 %31
  %33 = ptrtoint i8* %32 to i64
  br label %34

34:                                               ; preds = %27, %16
  %35 = phi i64 [ %33, %27 ], [ 0, %16 ]
  %36 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 10
  %37 = load i8, i8* %36, align 1, !range !2
  %38 = icmp eq i8 %37, 0
  %39 = select i1 %38, i64 %24, i64 %35
  %40 = inttoptr i64 %24 to i8*
  %41 = inttoptr i64 %39 to i8*
  %42 = icmp eq i8* %40, %41
  br i1 %42, label %105, label %43

43:                                               ; preds = %34
  %44 = getelementptr inbounds i8, i8* %40, i64 1
  %45 = load i8, i8* %40, align 1
  switch i8 %45, label %96 [
    i8 0, label %46
    i8 1, label %52
    i8 3, label %64
    i8 2, label %64
    i8 4, label %80
  ]

46:                                               ; preds = %43
  %47 = inttoptr i64 %21 to float*
  %48 = load float, float* %47, align 4
  %49 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 0, i32 1
  %50 = load float, float* %49, align 4
  %51 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 1
  br label %96

52:                                               ; preds = %43
  %53 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 -1, i32 0
  %54 = load float, float* %53, align 4
  %55 = inttoptr i64 %21 to i8*
  %56 = getelementptr inbounds i8, i8* %55, i64 -4
  %57 = bitcast i8* %56 to float*
  %58 = load float, float* %57, align 4
  %59 = inttoptr i64 %21 to float*
  %60 = load float, float* %59, align 4
  %61 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 0, i32 1
  %62 = load float, float* %61, align 4
  %63 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 1
  br label %96

64:                                               ; preds = %43, %43
  %65 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 -1, i32 0
  %66 = load float, float* %65, align 4
  %67 = inttoptr i64 %21 to i8*
  %68 = getelementptr inbounds i8, i8* %67, i64 -4
  %69 = bitcast i8* %68 to float*
  %70 = load float, float* %69, align 4
  %71 = inttoptr i64 %21 to float*
  %72 = load float, float* %71, align 4
  %73 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 0, i32 1
  %74 = load float, float* %73, align 4
  %75 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 1, i32 0
  %76 = load float, float* %75, align 4
  %77 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 1, i32 1
  %78 = load float, float* %77, align 4
  %79 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 2
  br label %96

80:                                               ; preds = %43
  %81 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 -1, i32 0
  %82 = load float, float* %81, align 4
  %83 = inttoptr i64 %21 to i8*
  %84 = getelementptr inbounds i8, i8* %83, i64 -4
  %85 = bitcast i8* %84 to float*
  %86 = load float, float* %85, align 4
  %87 = inttoptr i64 %21 to float*
  %88 = load float, float* %87, align 4
  %89 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 0, i32 1
  %90 = load float, float* %89, align 4
  %91 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 1, i32 0
  %92 = load float, float* %91, align 4
  %93 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 1, i32 1
  %94 = load float, float* %93, align 4
  %95 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %26, i64 3
  br label %96

96:                                               ; preds = %80, %64, %52, %46, %43
  %97 = phi float [ 0xFFFFFFFFE0000000, %43 ], [ %94, %80 ], [ %78, %64 ], [ 0xFFFFFFFFE0000000, %52 ], [ 0xFFFFFFFFE0000000, %46 ]
  %98 = phi float [ 0xFFFFFFFFE0000000, %43 ], [ %92, %80 ], [ %76, %64 ], [ 0xFFFFFFFFE0000000, %52 ], [ 0xFFFFFFFFE0000000, %46 ]
  %99 = phi float [ 0xFFFFFFFFE0000000, %43 ], [ %90, %80 ], [ %74, %64 ], [ %62, %52 ], [ 0xFFFFFFFFE0000000, %46 ]
  %100 = phi float [ 0xFFFFFFFFE0000000, %43 ], [ %88, %80 ], [ %72, %64 ], [ %60, %52 ], [ 0xFFFFFFFFE0000000, %46 ]
  %101 = phi float [ 0xFFFFFFFFE0000000, %43 ], [ %86, %80 ], [ %70, %64 ], [ %58, %52 ], [ %50, %46 ]
  %102 = phi float [ 0xFFFFFFFFE0000000, %43 ], [ %82, %80 ], [ %66, %64 ], [ %54, %52 ], [ %48, %46 ]
  %103 = phi %struct.SkPoint* [ %26, %43 ], [ %95, %80 ], [ %79, %64 ], [ %63, %52 ], [ %51, %46 ]
  %104 = ptrtoint %struct.SkPoint* %103 to i64
  br label %105

105:                                              ; preds = %34, %96
  %106 = phi i8* [ %40, %34 ], [ %44, %96 ]
  %107 = phi i64 [ %21, %34 ], [ %104, %96 ]
  %108 = phi float [ 0xFFFFFFFFE0000000, %34 ], [ %97, %96 ]
  %109 = phi float [ 0xFFFFFFFFE0000000, %34 ], [ %98, %96 ]
  %110 = phi float [ 0xFFFFFFFFE0000000, %34 ], [ %99, %96 ]
  %111 = phi float [ 0xFFFFFFFFE0000000, %34 ], [ %100, %96 ]
  %112 = phi float [ 0xFFFFFFFFE0000000, %34 ], [ %101, %96 ]
  %113 = phi float [ 0xFFFFFFFFE0000000, %34 ], [ %102, %96 ]
  %114 = icmp eq i8* %106, %41
  br i1 %114, label %231, label %115

115:                                              ; preds = %105
  %116 = getelementptr inbounds %struct.SkRect, %struct.SkRect* %17, i64 0, i32 0
  %117 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 1, i32 1
  br label %118

118:                                              ; preds = %115, %222
  %119 = phi float [ %113, %115 ], [ %224, %222 ]
  %120 = phi float [ %112, %115 ], [ %225, %222 ]
  %121 = phi float [ %111, %115 ], [ %226, %222 ]
  %122 = phi float [ %110, %115 ], [ %227, %222 ]
  %123 = phi float [ %109, %115 ], [ %228, %222 ]
  %124 = phi float [ %108, %115 ], [ %229, %222 ]
  %125 = phi i64 [ %107, %115 ], [ %223, %222 ]
  %126 = phi i8* [ %106, %115 ], [ %127, %222 ]
  %127 = getelementptr inbounds i8, i8* %126, i64 1
  %128 = load i8, i8* %126, align 1
  %129 = inttoptr i64 %125 to %struct.SkPoint*
  switch i8 %128, label %188 [
    i8 0, label %130
    i8 1, label %134
    i8 3, label %144
    i8 2, label %144
    i8 4, label %160
  ]

130:                                              ; preds = %118
  %131 = inttoptr i64 %125 to i32*
  %132 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %129, i64 0, i32 1
  %133 = bitcast float* %132 to i32*
  br label %174

134:                                              ; preds = %118
  %135 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %129, i64 -1
  %136 = bitcast %struct.SkPoint* %135 to i32*
  %137 = inttoptr i64 %125 to i8*
  %138 = getelementptr inbounds i8, i8* %137, i64 -4
  %139 = bitcast i8* %138 to i32*
  %140 = inttoptr i64 %125 to float*
  %141 = load float, float* %140, align 4
  %142 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %129, i64 0, i32 1
  %143 = load float, float* %142, align 4
  br label %174

144:                                              ; preds = %118, %118
  %145 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %129, i64 -1, i32 0
  %146 = load float, float* %145, align 4
  %147 = inttoptr i64 %125 to i8*
  %148 = getelementptr inbounds i8, i8* %147, i64 -4
  %149 = bitcast i8* %148 to float*
  %150 = load float, float* %149, align 4
  %151 = inttoptr i64 %125 to float*
  %152 = load float, float* %151, align 4
  %153 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %129, i64 0, i32 1
  %154 = load float, float* %153, align 4
  %155 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %129, i64 1, i32 0
  %156 = load float, float* %155, align 4
  %157 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %129, i64 1, i32 1
  %158 = load float, float* %157, align 4
  %159 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %129, i64 2
  br label %188

160:                                              ; preds = %118
  %161 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %129, i64 -1
  %162 = bitcast %struct.SkPoint* %161 to i32*
  %163 = inttoptr i64 %125 to i8*
  %164 = getelementptr inbounds i8, i8* %163, i64 -4
  %165 = bitcast i8* %164 to i32*
  %166 = inttoptr i64 %125 to float*
  %167 = load float, float* %166, align 4
  %168 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %129, i64 0, i32 1
  %169 = load float, float* %168, align 4
  %170 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %129, i64 1, i32 0
  %171 = load float, float* %170, align 4
  %172 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %129, i64 1, i32 1
  %173 = load float, float* %172, align 4
  br label %174

174:                                              ; preds = %130, %134, %160
  %175 = phi i64 [ 1, %130 ], [ 1, %134 ], [ 3, %160 ]
  %176 = phi float [ %124, %130 ], [ %124, %134 ], [ %173, %160 ]
  %177 = phi float [ %123, %130 ], [ %123, %134 ], [ %171, %160 ]
  %178 = phi float [ %122, %130 ], [ %143, %134 ], [ %169, %160 ]
  %179 = phi float [ %121, %130 ], [ %141, %134 ], [ %167, %160 ]
  %180 = phi i32* [ %133, %130 ], [ %139, %134 ], [ %165, %160 ]
  %181 = phi i32* [ %131, %130 ], [ %136, %134 ], [ %162, %160 ]
  %182 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %129, i64 %175
  %183 = bitcast i32* %181 to float*
  %184 = load float, float* %183, align 4
  %185 = bitcast i32* %180 to float*
  %186 = load float, float* %185, align 4
  %187 = ptrtoint %struct.SkPoint* %182 to i64
  br label %222

188:                                              ; preds = %118, %144
  %189 = phi float [ %124, %118 ], [ %158, %144 ]
  %190 = phi float [ %123, %118 ], [ %156, %144 ]
  %191 = phi float [ %122, %118 ], [ %154, %144 ]
  %192 = phi float [ %121, %118 ], [ %152, %144 ]
  %193 = phi float [ %120, %118 ], [ %150, %144 ]
  %194 = phi float [ %119, %118 ], [ %146, %144 ]
  %195 = phi %struct.SkPoint* [ %129, %118 ], [ %159, %144 ]
  %196 = ptrtoint %struct.SkPoint* %195 to i64
  switch i8 %128, label %222 [
    i8 6, label %231
    i8 3, label %197
  ]

197:                                              ; preds = %188
  %198 = fsub float %192, %194
  %199 = fsub float %191, %193
  %200 = fsub float %189, %191
  %201 = fcmp une float %198, 0.000000e+00
  br i1 %201, label %202, label %204

202:                                              ; preds = %197
  %203 = tail call float @llvm.fabs.f32(float %198)
  br label %209

204:                                              ; preds = %197
  %205 = fsub float %190, %192
  %206 = fcmp une float %199, 0.000000e+00
  %207 = tail call float @llvm.fabs.f32(float %205)
  %208 = select i1 %206, float %199, float %200
  br label %209

209:                                              ; preds = %204, %202
  %210 = phi float [ %200, %202 ], [ %208, %204 ]
  %211 = phi float [ %203, %202 ], [ %207, %204 ]
  %212 = tail call float @llvm.fabs.f32(float %210)
  %213 = load float, float* %116, align 4
  %214 = fcmp oeq float %192, %213
  %215 = load float, float* %117, align 4
  %216 = fcmp oeq float %191, %215
  %217 = select i1 %216, i64 0, i64 3
  %218 = select i1 %216, i64 1, i64 2
  %219 = select i1 %214, i64 %217, i64 %218
  %220 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 %219, i32 0
  store float %211, float* %220, align 8
  %221 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 %219, i32 1
  store float %212, float* %221, align 4
  br label %222

222:                                              ; preds = %174, %188, %209
  %223 = phi i64 [ %187, %174 ], [ %196, %188 ], [ %196, %209 ]
  %224 = phi float [ %184, %174 ], [ %194, %188 ], [ %194, %209 ]
  %225 = phi float [ %186, %174 ], [ %193, %188 ], [ %193, %209 ]
  %226 = phi float [ %179, %174 ], [ %192, %188 ], [ %192, %209 ]
  %227 = phi float [ %178, %174 ], [ %191, %188 ], [ %191, %209 ]
  %228 = phi float [ %177, %174 ], [ %190, %188 ], [ %190, %209 ]
  %229 = phi float [ %176, %174 ], [ %189, %188 ], [ %189, %209 ]
  %230 = icmp eq i8* %127, %41
  br i1 %230, label %231, label %118

231:                                              ; preds = %188, %222, %105
  %232 = bitcast %class.SkRRect* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %232, i8 0, i64 52, i1 false) #16
  %233 = getelementptr inbounds [4 x %struct.SkPoint], [4 x %struct.SkPoint]* %3, i64 0, i64 0
  call void @_ZN7SkRRect12setRectRadiiERK6SkRectPK7SkPoint(%class.SkRRect* %0, %struct.SkRect* dereferenceable(16) %17, %struct.SkPoint* nonnull %233) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #16
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden zeroext i8 @_ZN9SkPathRef4Iter4nextEP7SkPoint(%"class.SkPathRef::Iter"* nocapture, %struct.SkPoint* nocapture) local_unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.SkPathRef::Iter", %"class.SkPathRef::Iter"* %0, i64 0, i32 1
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds %"class.SkPathRef::Iter", %"class.SkPathRef::Iter"* %0, i64 0, i32 2
  %6 = load i8*, i8** %5, align 8
  %7 = icmp eq i8* %4, %6
  br i1 %7, label %60, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds i8, i8* %4, i64 1
  store i8* %9, i8** %3, align 8
  %10 = load i8, i8* %4, align 1
  %11 = getelementptr inbounds %"class.SkPathRef::Iter", %"class.SkPathRef::Iter"* %0, i64 0, i32 0
  %12 = load %struct.SkPoint*, %struct.SkPoint** %11, align 8
  switch i8 %10, label %58 [
    i8 0, label %50
    i8 1, label %13
    i8 3, label %19
    i8 2, label %23
    i8 4, label %34
  ]

13:                                               ; preds = %8
  %14 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 -1
  %15 = bitcast %struct.SkPoint* %14 to i64*
  %16 = bitcast %struct.SkPoint* %1 to i64*
  %17 = load i64, i64* %15, align 4
  store i64 %17, i64* %16, align 4
  %18 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1
  br label %50

19:                                               ; preds = %8
  %20 = getelementptr inbounds %"class.SkPathRef::Iter", %"class.SkPathRef::Iter"* %0, i64 0, i32 3
  %21 = load float*, float** %20, align 8
  %22 = getelementptr inbounds float, float* %21, i64 1
  store float* %22, float** %20, align 8
  br label %23

23:                                               ; preds = %8, %19
  %24 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 -1
  %25 = bitcast %struct.SkPoint* %24 to i64*
  %26 = bitcast %struct.SkPoint* %1 to i64*
  %27 = load i64, i64* %25, align 4
  store i64 %27, i64* %26, align 4
  %28 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1
  %29 = bitcast %struct.SkPoint* %12 to i64*
  %30 = bitcast %struct.SkPoint* %28 to i64*
  %31 = load i64, i64* %29, align 4
  store i64 %31, i64* %30, align 4
  %32 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 1
  %33 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2
  br label %50

34:                                               ; preds = %8
  %35 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 -1
  %36 = bitcast %struct.SkPoint* %35 to i64*
  %37 = bitcast %struct.SkPoint* %1 to i64*
  %38 = load i64, i64* %36, align 4
  store i64 %38, i64* %37, align 4
  %39 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 1
  %40 = bitcast %struct.SkPoint* %12 to i64*
  %41 = bitcast %struct.SkPoint* %39 to i64*
  %42 = load i64, i64* %40, align 4
  store i64 %42, i64* %41, align 4
  %43 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 1
  %44 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 2
  %45 = bitcast %struct.SkPoint* %43 to i64*
  %46 = bitcast %struct.SkPoint* %44 to i64*
  %47 = load i64, i64* %45, align 4
  store i64 %47, i64* %46, align 4
  %48 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 2
  %49 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 3
  br label %50

50:                                               ; preds = %8, %13, %23, %34
  %51 = phi %struct.SkPoint* [ %48, %34 ], [ %32, %23 ], [ %12, %13 ], [ %12, %8 ]
  %52 = phi %struct.SkPoint* [ %49, %34 ], [ %33, %23 ], [ %18, %13 ], [ %1, %8 ]
  %53 = phi i64 [ 3, %34 ], [ 2, %23 ], [ 1, %13 ], [ 1, %8 ]
  %54 = bitcast %struct.SkPoint* %51 to i64*
  %55 = bitcast %struct.SkPoint* %52 to i64*
  %56 = load i64, i64* %54, align 4
  store i64 %56, i64* %55, align 4
  %57 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %12, i64 %53
  br label %58

58:                                               ; preds = %50, %8
  %59 = phi %struct.SkPoint* [ %12, %8 ], [ %57, %50 ]
  store %struct.SkPoint* %59, %struct.SkPoint** %11, align 8
  br label %60

60:                                               ; preds = %2, %58
  %61 = phi i8 [ %10, %58 ], [ 6, %2 ]
  ret i8 %61
}

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #9

declare void @_ZN7SkRRect12setRectRadiiERK6SkRectPK7SkPoint(%class.SkRRect*, %struct.SkRect* dereferenceable(16), %struct.SkPoint*) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN9SkPathRef4IterC2Ev(%"class.SkPathRef::Iter"* nocapture) unnamed_addr #10 align 2 {
  %2 = getelementptr inbounds %"class.SkPathRef::Iter", %"class.SkPathRef::Iter"* %0, i64 0, i32 1
  %3 = bitcast i8** %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkPathRef4IterC2ERKS_(%"class.SkPathRef::Iter"* nocapture, %class.SkPathRef* dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 3, i32 0
  %4 = bitcast %struct.SkPoint** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.SkPathRef::Iter"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 4, i32 0
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.SkPathRef::Iter", %"class.SkPathRef::Iter"* %0, i64 0, i32 1
  %11 = bitcast i8** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = load i8*, i8** %7, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 4, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %12, i64 %17
  br label %19

19:                                               ; preds = %14, %2
  %20 = phi i8* [ %18, %14 ], [ null, %2 ]
  %21 = getelementptr inbounds %"class.SkPathRef::Iter", %"class.SkPathRef::Iter"* %0, i64 0, i32 2
  store i8* %20, i8** %21, align 8
  %22 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 5, i32 0
  %23 = load float*, float** %22, align 8
  %24 = getelementptr inbounds %"class.SkPathRef::Iter", %"class.SkPathRef::Iter"* %0, i64 0, i32 3
  %25 = icmp eq float* %23, null
  %26 = getelementptr inbounds float, float* %23, i64 -1
  %27 = select i1 %25, float* null, float* %26
  store float* %27, float** %24, align 8
  %28 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 9
  %29 = load i8, i8* %28, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %19
  %32 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 10
  %33 = load i8, i8* %32, align 1, !range !2
  br label %42

34:                                               ; preds = %19
  %35 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 1
  %36 = load %struct.SkPoint*, %struct.SkPoint** %3, align 8
  %37 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 3, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %35, %struct.SkPoint* %36, i32 %38) #16
  %40 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 10
  %41 = zext i1 %39 to i8
  store i8 %41, i8* %40, align 1
  store i8 0, i8* %28, align 8
  br label %42

42:                                               ; preds = %34, %31
  %43 = phi i8 [ %33, %31 ], [ %41, %34 ]
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %42
  %46 = load i64, i64* %11, align 8
  %47 = bitcast i8** %21 to i64*
  store i64 %46, i64* %47, align 8
  br label %48

48:                                               ; preds = %42, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkPathRef4Iter10setPathRefERKS_(%"class.SkPathRef::Iter"* nocapture, %class.SkPathRef* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 3, i32 0
  %4 = bitcast %struct.SkPoint** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.SkPathRef::Iter"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 4, i32 0
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.SkPathRef::Iter", %"class.SkPathRef::Iter"* %0, i64 0, i32 1
  %11 = bitcast i8** %10 to i64*
  store i64 %9, i64* %11, align 8
  %12 = load i8*, i8** %7, align 8
  %13 = icmp eq i8* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %2
  %15 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 4, i32 2
  %16 = load i32, i32* %15, align 4
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %12, i64 %17
  br label %19

19:                                               ; preds = %2, %14
  %20 = phi i8* [ %18, %14 ], [ null, %2 ]
  %21 = getelementptr inbounds %"class.SkPathRef::Iter", %"class.SkPathRef::Iter"* %0, i64 0, i32 2
  store i8* %20, i8** %21, align 8
  %22 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 5, i32 0
  %23 = load float*, float** %22, align 8
  %24 = getelementptr inbounds %"class.SkPathRef::Iter", %"class.SkPathRef::Iter"* %0, i64 0, i32 3
  %25 = icmp eq float* %23, null
  %26 = getelementptr inbounds float, float* %23, i64 -1
  %27 = select i1 %25, float* null, float* %26
  store float* %27, float** %24, align 8
  %28 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 9
  %29 = load i8, i8* %28, align 8
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %34

31:                                               ; preds = %19
  %32 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 10
  %33 = load i8, i8* %32, align 1, !range !2
  br label %42

34:                                               ; preds = %19
  %35 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 1
  %36 = load %struct.SkPoint*, %struct.SkPoint** %3, align 8
  %37 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 3, i32 2
  %38 = load i32, i32* %37, align 4
  %39 = tail call zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect* %35, %struct.SkPoint* %36, i32 %38) #16
  %40 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %1, i64 0, i32 10
  %41 = zext i1 %39 to i8
  store i8 %41, i8* %40, align 1
  store i8 0, i8* %28, align 8
  br label %42

42:                                               ; preds = %31, %34
  %43 = phi i8 [ %33, %31 ], [ %41, %34 ]
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %48

45:                                               ; preds = %42
  %46 = load i64, i64* %11, align 8
  %47 = bitcast i8** %21 to i64*
  store i64 %46, i64* %47, align 8
  br label %48

48:                                               ; preds = %42, %45
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i8 @_ZNK9SkPathRef4Iter4peekEv(%"class.SkPathRef::Iter"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.SkPathRef::Iter", %"class.SkPathRef::Iter"* %0, i64 0, i32 1
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %"class.SkPathRef::Iter", %"class.SkPathRef::Iter"* %0, i64 0, i32 2
  %5 = load i8*, i8** %4, align 8
  %6 = icmp ult i8* %3, %5
  br i1 %6, label %7, label %9

7:                                                ; preds = %1
  %8 = load i8, i8* %3, align 1
  br label %9

9:                                                ; preds = %1, %7
  %10 = phi i8 [ %8, %7 ], [ 6, %1 ]
  ret i8 %10
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK9SkPathRef7isValidEv(%class.SkPathRef* nocapture readonly) local_unnamed_addr #11 align 2 {
  %2 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 11
  %3 = load i8, i8* %2, align 2, !range !2
  %4 = icmp eq i8 %3, 0
  %5 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 12
  %6 = load i8, i8* %5, align 1, !range !2
  br i1 %4, label %7, label %9

7:                                                ; preds = %1
  %8 = icmp eq i8 %6, 0
  br i1 %8, label %19, label %9

9:                                                ; preds = %1, %7
  %10 = phi i8 [ 1, %7 ], [ %6, %1 ]
  %11 = icmp eq i8 %3, %10
  br i1 %11, label %81, label %12

12:                                               ; preds = %9
  %13 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 14
  %14 = load i8, i8* %13, align 1
  br i1 %4, label %17, label %15

15:                                               ; preds = %12
  %16 = icmp ugt i8 %14, 3
  br i1 %16, label %81, label %19

17:                                               ; preds = %12
  %18 = icmp ugt i8 %14, 7
  br i1 %18, label %81, label %19

19:                                               ; preds = %7, %15, %17
  %20 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 9
  %21 = load i8, i8* %20, align 8
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %81

23:                                               ; preds = %19
  %24 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 1, i32 0
  %25 = load float, float* %24, align 4
  %26 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 1, i32 2
  %27 = load float, float* %26, align 4
  %28 = fcmp olt float %25, %27
  br i1 %28, label %29, label %81

29:                                               ; preds = %23
  %30 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 1, i32 1
  %31 = load float, float* %30, align 4
  %32 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 1, i32 3
  %33 = load float, float* %32, align 4
  %34 = fcmp uge float %31, %33
  br i1 %34, label %81, label %35

35:                                               ; preds = %29
  %36 = insertelement <4 x float> <float undef, float undef, float 0.000000e+00, float 0.000000e+00>, float %25, i32 0
  %37 = insertelement <4 x float> %36, float %31, i32 1
  %38 = insertelement <4 x float> <float undef, float undef, float 0.000000e+00, float 0.000000e+00>, float %27, i32 0
  %39 = insertelement <4 x float> %38, float %33, i32 1
  %40 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp sgt i32 %41, 0
  br i1 %42, label %43, label %75

43:                                               ; preds = %35
  %44 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3, i32 0
  %45 = load %struct.SkPoint*, %struct.SkPoint** %44, align 8
  %46 = sext i32 %41 to i64
  br label %47

47:                                               ; preds = %43, %69
  %48 = phi i64 [ 0, %43 ], [ %71, %69 ]
  %49 = phi i8 [ 1, %43 ], [ %70, %69 ]
  %50 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %45, i64 %48, i32 0
  %51 = load float, float* %50, align 4
  %52 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %45, i64 %48, i32 1
  %53 = load float, float* %52, align 4
  %54 = insertelement <4 x float> <float undef, float undef, float 0.000000e+00, float 0.000000e+00>, float %51, i32 0
  %55 = insertelement <4 x float> %54, float %53, i32 1
  %56 = fmul float %51, 0.000000e+00
  %57 = fmul float %56, %53
  %58 = fcmp ord float %57, 0.000000e+00
  br i1 %58, label %59, label %69

59:                                               ; preds = %47
  %60 = fcmp olt <4 x float> %55, %37
  %61 = bitcast <4 x i1> %60 to i4
  %62 = and i4 %61, 3
  %63 = icmp eq i4 %62, 0
  br i1 %63, label %69, label %64

64:                                               ; preds = %59
  %65 = fcmp olt <4 x float> %39, %55
  %66 = bitcast <4 x i1> %65 to i4
  %67 = and i4 %66, 3
  %68 = icmp eq i4 %67, 0
  br i1 %68, label %80, label %69

69:                                               ; preds = %64, %59, %47
  %70 = select i1 %58, i8 %49, i8 0
  %71 = add nuw nsw i64 %48, 1
  %72 = icmp slt i64 %71, %46
  br i1 %72, label %47, label %73

73:                                               ; preds = %69
  %74 = and i8 %70, 1
  br label %75

75:                                               ; preds = %73, %35
  %76 = phi i8 [ 1, %35 ], [ %74, %73 ]
  %77 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 10
  %78 = load i8, i8* %77, align 1, !range !2
  %79 = icmp eq i8 %78, %76
  br i1 %79, label %81, label %80

80:                                               ; preds = %64, %75
  br label %81

81:                                               ; preds = %23, %29, %19, %75, %80, %17, %15, %9
  %82 = phi i1 [ false, %9 ], [ false, %15 ], [ false, %17 ], [ false, %80 ], [ true, %75 ], [ true, %19 ], [ true, %29 ], [ true, %23 ]
  ret i1 %82
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK9SkPathRef16dataMatchesVerbsEv(%class.SkPathRef* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 4, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = tail call { i64, i64 } @_Z21sk_path_analyze_verbsPKhi(i8* %3, i32 %5) #16
  %7 = extractvalue { i64, i64 } %6, 0
  %8 = lshr i64 %7, 32
  %9 = trunc i64 %8 to i32
  %10 = extractvalue { i64, i64 } %6, 1
  %11 = and i64 %7, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %29, label %13

13:                                               ; preds = %1
  %14 = lshr i64 %10, 32
  %15 = trunc i64 %14 to i32
  %16 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 15
  %17 = load i8, i8* %16, align 2
  %18 = zext i8 %17 to i32
  %19 = icmp eq i32 %15, %18
  br i1 %19, label %20, label %29

20:                                               ; preds = %13
  %21 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 3, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, %9
  br i1 %23, label %24, label %29

24:                                               ; preds = %20
  %25 = trunc i64 %10 to i32
  %26 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %0, i64 0, i32 5, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, %25
  br label %29

29:                                               ; preds = %1, %24, %20, %13
  %30 = phi i1 [ false, %20 ], [ false, %13 ], [ false, %1 ], [ %28, %24 ]
  ret i1 %30
}

declare { i64, i64 } @_Z21sk_path_analyze_verbsPKhi(i8*, i32) local_unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN14SkPathEdgeIterC2ERK6SkPath(%class.SkPathEdgeIter* nocapture, %class.SkPath* nocapture readonly dereferenceable(16)) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %class.SkPath, %class.SkPath* %1, i64 0, i32 0, i32 0
  %4 = load %class.SkPathRef*, %class.SkPathRef** %3, align 8
  %5 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %4, i64 0, i32 3, i32 0
  %6 = bitcast %struct.SkPoint** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %0, i64 0, i32 2
  %9 = bitcast %struct.SkPoint** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %0, i64 0, i32 3
  %11 = bitcast %struct.SkPoint** %10 to i64*
  store i64 %7, i64* %11, align 8
  %12 = load %class.SkPathRef*, %class.SkPathRef** %3, align 8
  %13 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %12, i64 0, i32 4, i32 0
  %14 = bitcast i8** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %class.SkPathEdgeIter* %0 to i64*
  store i64 %15, i64* %16, align 8
  %17 = load %class.SkPathRef*, %class.SkPathRef** %3, align 8
  %18 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %17, i64 0, i32 4, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = icmp eq i8* %19, null
  br i1 %20, label %26, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %17, i64 0, i32 4, i32 2
  %23 = load i32, i32* %22, align 4
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %19, i64 %24
  br label %26

26:                                               ; preds = %2, %21
  %27 = phi i8* [ %25, %21 ], [ null, %2 ]
  %28 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %0, i64 0, i32 1
  store i8* %27, i8** %28, align 8
  %29 = load %class.SkPathRef*, %class.SkPathRef** %3, align 8
  %30 = getelementptr inbounds %class.SkPathRef, %class.SkPathRef* %29, i64 0, i32 5, i32 0
  %31 = load float*, float** %30, align 8
  %32 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %0, i64 0, i32 4
  %33 = icmp eq float* %31, null
  %34 = getelementptr inbounds float, float* %31, i64 -1
  %35 = select i1 %33, float* null, float* %34
  store float* %35, float** %32, align 8
  %36 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %0, i64 0, i32 6
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %class.SkPathEdgeIter, %class.SkPathEdgeIter* %0, i64 0, i32 7
  store i8 0, i8* %37, align 1
  ret void
}

declare i8* @_Z16sk_realloc_throwPvm(i8*, i64) local_unnamed_addr #5

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #12

declare void @_ZN18SkIDChangeListener4ListC1Ev(%"class.SkIDChangeListener::List"*) unnamed_addr #5

declare zeroext i8 @_ZNK8SkMatrix15computeTypeMaskEv(%class.SkMatrix*) local_unnamed_addr #5

declare zeroext i1 @_ZN6SkRect14setBoundsCheckEPK7SkPointi(%struct.SkRect*, %struct.SkPoint*, i32) local_unnamed_addr #5

declare void @_ZN9SkWBuffer16writeNoSizeCheckEPKvm(%class.SkWBuffer*, i8*, i64) local_unnamed_addr #5

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #13

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #5

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #14

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind readonly }
attributes #15 = { builtin nounwind }
attributes #16 = { nounwind }
attributes #17 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5}
!5 = distinct !{!5, !"LVerDomain"}
!6 = !{!7}
!7 = distinct !{!7, !5}
!8 = distinct !{!8, !9}
!9 = !{!"llvm.loop.isvectorized", i32 1}
!10 = distinct !{!10, !9}
