; ModuleID = '../../components/viz/common/hit_test/hit_test_region_list.cc'
source_filename = "../../components/viz/common/hit_test/hit_test_region_list.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.viz::HitTestRegionList" = type { i32, i32, %"class.gfx::Rect", %"class.gfx::Transform", %"class.std::__1::vector" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"*, %"class.std::__1::__compressed_pair" }
%"struct.viz::HitTestRegion" = type { i32, i32, %"class.viz::FrameSinkId", %"class.gfx::Rect", %"class.gfx::Transform" }
%"class.viz::FrameSinkId" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.viz::HitTestRegion"* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIN3viz13HitTestRegionENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

@constinit = private unnamed_addr constant [4 x [4 x float]] [[4 x float] [float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 1.000000e+00, float 0.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 1.000000e+00, float 0.000000e+00], [4 x float] [float 0.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00]], align 4

@_ZN3viz17HitTestRegionListC1Ev = hidden unnamed_addr alias void (%"struct.viz::HitTestRegionList"*), void (%"struct.viz::HitTestRegionList"*)* @_ZN3viz17HitTestRegionListC2Ev
@_ZN3viz17HitTestRegionListD1Ev = hidden unnamed_addr alias void (%"struct.viz::HitTestRegionList"*), void (%"struct.viz::HitTestRegionList"*)* @_ZN3viz17HitTestRegionListD2Ev
@_ZN3viz17HitTestRegionListC1ERKS0_ = hidden unnamed_addr alias void (%"struct.viz::HitTestRegionList"*, %"struct.viz::HitTestRegionList"*), void (%"struct.viz::HitTestRegionList"*, %"struct.viz::HitTestRegionList"*)* @_ZN3viz17HitTestRegionListC2ERKS0_
@_ZN3viz17HitTestRegionListC1EOS0_ = hidden unnamed_addr alias void (%"struct.viz::HitTestRegionList"*, %"struct.viz::HitTestRegionList"*), void (%"struct.viz::HitTestRegionList"*, %"struct.viz::HitTestRegionList"*)* @_ZN3viz17HitTestRegionListC2EOS0_

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17HitTestRegionListC2Ev(%"struct.viz::HitTestRegionList"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 3
  %3 = bitcast %"class.gfx::Transform"* %2 to i8*
  %4 = bitcast %"struct.viz::HitTestRegionList"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false)
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %3, i8* align 4 bitcast ([4 x [4 x float]]* @constinit to i8*), i64 64, i1 false) #6
  %5 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 3, i32 0, i32 1
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 4
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17HitTestRegionListD2Ev(%"struct.viz::HitTestRegionList"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 4, i32 0, i32 0
  %3 = load %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"** %2, align 8
  %4 = icmp eq %"struct.viz::HitTestRegion"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = ptrtoint %"struct.viz::HitTestRegion"* %3 to i64
  %7 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 4, i32 0, i32 1
  %8 = bitcast %"struct.viz::HitTestRegion"** %7 to i64*
  store i64 %6, i64* %8, align 8
  %9 = bitcast %"struct.viz::HitTestRegion"* %3 to i8*
  tail call void @_ZdlPv(i8* %9) #7
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17HitTestRegionListC2ERKS0_(%"struct.viz::HitTestRegionList"*, %"struct.viz::HitTestRegionList"* nocapture readonly dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.viz::HitTestRegionList"* %0 to i8*
  %4 = bitcast %"struct.viz::HitTestRegionList"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  %5 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %1, i64 0, i32 3
  %7 = bitcast %"class.gfx::Transform"* %5 to i8*
  %8 = bitcast %"class.gfx::Transform"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 68, i1 false) #6
  %9 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %1, i64 0, i32 4
  %11 = bitcast %"class.std::__1::vector"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #6
  %12 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %1, i64 0, i32 4, i32 0, i32 1
  %13 = bitcast %"struct.viz::HitTestRegion"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector"* %10 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = sdiv exact i64 %17, 100
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %65, label %20

20:                                               ; preds = %2
  %21 = icmp ugt i64 %18, 184467440737095516
  br i1 %21, label %22, label %24

22:                                               ; preds = %20
  %23 = bitcast %"class.std::__1::vector"* %9 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %23) #8
  unreachable

24:                                               ; preds = %20
  %25 = tail call i8* @_Znwm(i64 %17) #7
  %26 = bitcast i8* %25 to %"struct.viz::HitTestRegion"*
  %27 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 4, i32 0, i32 1
  %28 = bitcast %"struct.viz::HitTestRegion"** %27 to i8**
  store i8* %25, i8** %28, align 8
  %29 = bitcast %"class.std::__1::vector"* %9 to i8**
  store i8* %25, i8** %29, align 8
  %30 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %26, i64 %18
  %31 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  store %"struct.viz::HitTestRegion"* %30, %"struct.viz::HitTestRegion"** %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %10, i64 0, i32 0, i32 0
  %33 = load %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"** %32, align 8
  %34 = load %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"** %12, align 8
  %35 = bitcast %"struct.viz::HitTestRegion"** %27 to i64*
  %36 = ptrtoint i8* %25 to i64
  %37 = icmp eq %"struct.viz::HitTestRegion"* %33, %34
  br i1 %37, label %63, label %38

38:                                               ; preds = %24, %38
  %39 = phi %"struct.viz::HitTestRegion"* [ %59, %38 ], [ %26, %24 ]
  %40 = phi %"struct.viz::HitTestRegion"* [ %58, %38 ], [ %33, %24 ]
  %41 = bitcast %"struct.viz::HitTestRegion"* %40 to i64*
  %42 = bitcast %"struct.viz::HitTestRegion"* %39 to i64*
  %43 = load i64, i64* %41, align 4
  store i64 %43, i64* %42, align 4
  %44 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %39, i64 0, i32 2, i32 0
  %45 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %40, i64 0, i32 2, i32 0
  %46 = load i32, i32* %45, align 4
  store i32 %46, i32* %44, align 4
  %47 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %39, i64 0, i32 2, i32 1
  %48 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %40, i64 0, i32 2, i32 1
  %49 = load i32, i32* %48, align 4
  store i32 %49, i32* %47, align 4
  %50 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %39, i64 0, i32 3
  %51 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %40, i64 0, i32 3
  %52 = bitcast %"class.gfx::Rect"* %50 to i8*
  %53 = bitcast %"class.gfx::Rect"* %51 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %52, i8* align 4 %53, i64 16, i1 false) #6
  %54 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %39, i64 0, i32 4
  %55 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %40, i64 0, i32 4
  %56 = bitcast %"class.gfx::Transform"* %54 to i8*
  %57 = bitcast %"class.gfx::Transform"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %56, i8* align 4 %57, i64 68, i1 false) #6
  %58 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %40, i64 1
  %59 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %39, i64 1
  %60 = icmp eq %"struct.viz::HitTestRegion"* %58, %34
  br i1 %60, label %61, label %38

61:                                               ; preds = %38
  %62 = ptrtoint %"struct.viz::HitTestRegion"* %59 to i64
  br label %63

63:                                               ; preds = %61, %24
  %64 = phi i64 [ %36, %24 ], [ %62, %61 ]
  store i64 %64, i64* %35, align 8
  br label %65

65:                                               ; preds = %2, %63
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(120) %"struct.viz::HitTestRegionList"* @_ZN3viz17HitTestRegionListaSERKS0_(%"struct.viz::HitTestRegionList"* returned, %"struct.viz::HitTestRegionList"* readonly dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.viz::HitTestRegionList"* %0 to i8*
  %4 = bitcast %"struct.viz::HitTestRegionList"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 92, i1 false)
  %5 = icmp eq %"struct.viz::HitTestRegionList"* %0, %1
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 4
  %8 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %1, i64 0, i32 4, i32 0, i32 0
  %9 = load %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"** %8, align 8
  %10 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %1, i64 0, i32 4, i32 0, i32 1
  %11 = load %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"** %10, align 8
  tail call void @_ZNSt3__16vectorIN3viz13HitTestRegionENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %7, %"struct.viz::HitTestRegion"* %9, %"struct.viz::HitTestRegion"* %11) #6
  br label %12

12:                                               ; preds = %2, %6
  ret %"struct.viz::HitTestRegionList"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3viz17HitTestRegionListC2EOS0_(%"struct.viz::HitTestRegionList"* nocapture, %"struct.viz::HitTestRegionList"* nocapture dereferenceable(120)) unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.viz::HitTestRegionList"* %0 to i8*
  %4 = bitcast %"struct.viz::HitTestRegionList"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  %5 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %1, i64 0, i32 3
  %7 = bitcast %"class.gfx::Transform"* %5 to i8*
  %8 = bitcast %"class.gfx::Transform"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %7, i8* align 4 %8, i64 68, i1 false) #6
  %9 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %1, i64 0, i32 4
  %11 = bitcast %"class.std::__1::vector"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #6
  %12 = bitcast %"class.std::__1::vector"* %10 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %9 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %1, i64 0, i32 4, i32 0, i32 1
  %16 = bitcast %"struct.viz::HitTestRegion"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 4, i32 0, i32 1
  %19 = bitcast %"struct.viz::HitTestRegion"** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %1, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"struct.viz::HitTestRegion"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"struct.viz::HitTestRegion"** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(120) %"struct.viz::HitTestRegionList"* @_ZN3viz17HitTestRegionListaSEOS0_(%"struct.viz::HitTestRegionList"* returned, %"struct.viz::HitTestRegionList"* nocapture dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"struct.viz::HitTestRegionList"* %0 to i8*
  %4 = bitcast %"struct.viz::HitTestRegionList"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false)
  %5 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %1, i64 0, i32 3
  %7 = bitcast %"class.gfx::Transform"* %5 to i8*
  %8 = bitcast %"class.gfx::Transform"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 68, i1 false)
  %9 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %1, i64 0, i32 4
  %11 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %12 = load %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"** %11, align 8
  %13 = icmp eq %"struct.viz::HitTestRegion"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %2
  %15 = ptrtoint %"struct.viz::HitTestRegion"* %12 to i64
  %16 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 4, i32 0, i32 1
  %17 = bitcast %"struct.viz::HitTestRegion"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"struct.viz::HitTestRegion"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #7
  %19 = bitcast %"class.std::__1::vector"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #6
  br label %20

20:                                               ; preds = %2, %14
  %21 = bitcast %"class.std::__1::vector"* %10 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector"* %9 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %1, i64 0, i32 4, i32 0, i32 1
  %25 = bitcast %"struct.viz::HitTestRegion"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 4, i32 0, i32 1
  %28 = bitcast %"struct.viz::HitTestRegion"** %27 to i64*
  store i64 %26, i64* %28, align 8
  %29 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %1, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %30 = bitcast %"struct.viz::HitTestRegion"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %33 = bitcast %"struct.viz::HitTestRegion"** %32 to i64*
  store i64 %31, i64* %33, align 8
  %34 = bitcast %"class.std::__1::vector"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #6
  ret %"struct.viz::HitTestRegionList"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz17HitTestRegionList7IsEqualERKS0_S2_(%"struct.viz::HitTestRegionList"* dereferenceable(120), %"struct.viz::HitTestRegionList"* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %120

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 2, i32 0, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %1, i64 0, i32 2, i32 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %120

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 2, i32 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %1, i64 0, i32 2, i32 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %120

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 2, i32 1, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %1, i64 0, i32 2, i32 1, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %120

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 2, i32 1, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %1, i64 0, i32 2, i32 1, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %120

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 3, i32 0
  %34 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %1, i64 0, i32 3, i32 0
  %35 = tail call zeroext i1 @_ZNK10SkMatrix44eqERKS_(%class.SkMatrix44* %33, %class.SkMatrix44* dereferenceable(68) %34) #6
  br i1 %35, label %36, label %120

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 4
  %38 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %0, i64 0, i32 4, i32 0, i32 1
  %39 = bitcast %"struct.viz::HitTestRegion"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = bitcast %"class.std::__1::vector"* %37 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = sub i64 %40, %42
  %44 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %1, i64 0, i32 4
  %45 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %1, i64 0, i32 4, i32 0, i32 1
  %46 = bitcast %"struct.viz::HitTestRegion"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.std::__1::vector"* %44 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = sub i64 %47, %49
  %51 = icmp eq i64 %43, %50
  %52 = inttoptr i64 %42 to %"struct.viz::HitTestRegion"*
  %53 = inttoptr i64 %49 to %"struct.viz::HitTestRegion"*
  br i1 %51, label %54, label %120

54:                                               ; preds = %36
  %55 = icmp eq i64 %43, 0
  br i1 %55, label %120, label %56

56:                                               ; preds = %54
  %57 = sdiv exact i64 %43, 100
  %58 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %37, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.viz::HitTestRegionList", %"struct.viz::HitTestRegionList"* %1, i64 0, i32 4, i32 0, i32 0
  %60 = add nsw i64 %57, -1
  %61 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %52, i64 %60, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %53, i64 %60, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %62, %64
  br i1 %65, label %66, label %120

66:                                               ; preds = %56, %111
  %67 = phi i64 [ %114, %111 ], [ %60, %56 ]
  %68 = phi %"struct.viz::HitTestRegion"* [ %112, %111 ], [ %52, %56 ]
  %69 = phi %"struct.viz::HitTestRegion"* [ %113, %111 ], [ %53, %56 ]
  %70 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %68, i64 %67, i32 2, i32 0
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %69, i64 %67, i32 2, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %71, %73
  br i1 %74, label %75, label %120

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %68, i64 %67, i32 2, i32 1
  %77 = load i32, i32* %76, align 4
  %78 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %69, i64 %67, i32 2, i32 1
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %77, %79
  br i1 %80, label %81, label %120

81:                                               ; preds = %75
  %82 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %68, i64 %67, i32 3, i32 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %69, i64 %67, i32 3, i32 0, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = icmp eq i32 %83, %85
  br i1 %86, label %87, label %120

87:                                               ; preds = %81
  %88 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %68, i64 %67, i32 3, i32 0, i32 1
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %69, i64 %67, i32 3, i32 0, i32 1
  %91 = load i32, i32* %90, align 4
  %92 = icmp eq i32 %89, %91
  br i1 %92, label %93, label %120

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %68, i64 %67, i32 3, i32 1, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %69, i64 %67, i32 3, i32 1, i32 0
  %97 = load i32, i32* %96, align 4
  %98 = icmp eq i32 %95, %97
  br i1 %98, label %99, label %120

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %68, i64 %67, i32 3, i32 1, i32 1
  %101 = load i32, i32* %100, align 4
  %102 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %69, i64 %67, i32 3, i32 1, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %101, %103
  br i1 %104, label %105, label %120

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %68, i64 %67, i32 4, i32 0
  %107 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %69, i64 %67, i32 4, i32 0
  %108 = tail call zeroext i1 @_ZNK10SkMatrix44eqERKS_(%class.SkMatrix44* %106, %class.SkMatrix44* dereferenceable(68) %107) #6
  %109 = icmp ne i64 %67, 0
  %110 = and i1 %108, %109
  br i1 %110, label %111, label %120

111:                                              ; preds = %105
  %112 = load %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"** %58, align 8
  %113 = load %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"** %59, align 8
  %114 = add i64 %67, -1
  %115 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %112, i64 %114, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %113, i64 %114, i32 0
  %118 = load i32, i32* %117, align 4
  %119 = icmp eq i32 %116, %118
  br i1 %119, label %66, label %120

120:                                              ; preds = %105, %99, %75, %111, %66, %87, %93, %81, %56, %54, %8, %20, %14, %2, %26, %32, %36
  %121 = phi i1 [ false, %36 ], [ false, %32 ], [ false, %26 ], [ false, %2 ], [ false, %14 ], [ false, %20 ], [ false, %8 ], [ true, %54 ], [ false, %56 ], [ false, %81 ], [ false, %93 ], [ false, %87 ], [ false, %66 ], [ false, %111 ], [ false, %75 ], [ false, %99 ], [ %108, %105 ]
  ret i1 %121
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3viz13HitTestRegion7IsEqualERKS0_S2_(%"struct.viz::HitTestRegion"* dereferenceable(100), %"struct.viz::HitTestRegion"* dereferenceable(100)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %1, i64 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %48

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %0, i64 0, i32 2, i32 0
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %1, i64 0, i32 2, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %48

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %0, i64 0, i32 2, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %1, i64 0, i32 2, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %16, %18
  br i1 %19, label %20, label %48

20:                                               ; preds = %14
  %21 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %0, i64 0, i32 3, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %1, i64 0, i32 3, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %22, %24
  br i1 %25, label %26, label %48

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %0, i64 0, i32 3, i32 0, i32 1
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %1, i64 0, i32 3, i32 0, i32 1
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %28, %30
  br i1 %31, label %32, label %48

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %0, i64 0, i32 3, i32 1, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %1, i64 0, i32 3, i32 1, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %34, %36
  br i1 %37, label %38, label %48

38:                                               ; preds = %32
  %39 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %0, i64 0, i32 3, i32 1, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %1, i64 0, i32 3, i32 1, i32 1
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %40, %42
  br i1 %43, label %44, label %48

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %0, i64 0, i32 4, i32 0
  %46 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %1, i64 0, i32 4, i32 0
  %47 = tail call zeroext i1 @_ZNK10SkMatrix44eqERKS_(%class.SkMatrix44* %45, %class.SkMatrix44* dereferenceable(68) %46) #6
  br label %48

48:                                               ; preds = %20, %32, %26, %8, %44, %38, %14, %2
  %49 = phi i1 [ false, %38 ], [ false, %14 ], [ false, %2 ], [ %47, %44 ], [ false, %8 ], [ false, %26 ], [ false, %32 ], [ false, %20 ]
  ret i1 %49
}

declare zeroext i1 @_ZNK10SkMatrix44eqERKS_(%class.SkMatrix44*, %class.SkMatrix44* dereferenceable(68)) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3viz13HitTestRegionENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"*, %"struct.viz::HitTestRegion"*, %"struct.viz::HitTestRegion"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.viz::HitTestRegion"* %2 to i64
  %5 = ptrtoint %"struct.viz::HitTestRegion"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 100
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.viz::HitTestRegion"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 100
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.viz::HitTestRegion"*
  br i1 %15, label %68, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.viz::HitTestRegion"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 100
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %1, i64 %22
  %25 = select i1 %23, %"struct.viz::HitTestRegion"* %24, %"struct.viz::HitTestRegion"* %2
  %26 = ptrtoint %"struct.viz::HitTestRegion"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = sdiv exact i64 %27, 100
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"struct.viz::HitTestRegion"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #6
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %66

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = icmp eq %"struct.viz::HitTestRegion"* %25, %2
  br i1 %36, label %64, label %37

37:                                               ; preds = %34
  %38 = inttoptr i64 %35 to %"struct.viz::HitTestRegion"*
  br label %39

39:                                               ; preds = %39, %37
  %40 = phi %"struct.viz::HitTestRegion"* [ %60, %39 ], [ %38, %37 ]
  %41 = phi %"struct.viz::HitTestRegion"* [ %59, %39 ], [ %24, %37 ]
  %42 = bitcast %"struct.viz::HitTestRegion"* %41 to i64*
  %43 = bitcast %"struct.viz::HitTestRegion"* %40 to i64*
  %44 = load i64, i64* %42, align 4
  store i64 %44, i64* %43, align 4
  %45 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %40, i64 0, i32 2, i32 0
  %46 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %41, i64 0, i32 2, i32 0
  %47 = load i32, i32* %46, align 4
  store i32 %47, i32* %45, align 4
  %48 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %40, i64 0, i32 2, i32 1
  %49 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %41, i64 0, i32 2, i32 1
  %50 = load i32, i32* %49, align 4
  store i32 %50, i32* %48, align 4
  %51 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %40, i64 0, i32 3
  %52 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %41, i64 0, i32 3
  %53 = bitcast %"class.gfx::Rect"* %51 to i8*
  %54 = bitcast %"class.gfx::Rect"* %52 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %53, i8* align 4 %54, i64 16, i1 false) #6
  %55 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %40, i64 0, i32 4
  %56 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %41, i64 0, i32 4
  %57 = bitcast %"class.gfx::Transform"* %55 to i8*
  %58 = bitcast %"class.gfx::Transform"* %56 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %57, i8* align 4 %58, i64 68, i1 false) #6
  %59 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %41, i64 1
  %60 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %40, i64 1
  %61 = icmp eq %"struct.viz::HitTestRegion"* %59, %2
  br i1 %61, label %62, label %39

62:                                               ; preds = %39
  %63 = ptrtoint %"struct.viz::HitTestRegion"* %60 to i64
  br label %64

64:                                               ; preds = %34, %62
  %65 = phi i64 [ %35, %34 ], [ %63, %62 ]
  store i64 %65, i64* %19, align 8
  br label %126

66:                                               ; preds = %33
  %67 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %16, i64 %28
  store %"struct.viz::HitTestRegion"* %67, %"struct.viz::HitTestRegion"** %18, align 8
  br label %126

68:                                               ; preds = %3
  %69 = icmp eq i64 %12, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %72 = bitcast %"struct.viz::HitTestRegion"** %71 to i64*
  store i64 %12, i64* %72, align 8
  %73 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %73) #7
  %74 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 24, i1 false) #6
  br label %75

75:                                               ; preds = %68, %70
  %76 = phi i64 [ %10, %68 ], [ 0, %70 ]
  %77 = icmp ugt i64 %7, 184467440737095516
  br i1 %77, label %78, label %80

78:                                               ; preds = %75
  %79 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %79) #8
  unreachable

80:                                               ; preds = %75
  %81 = sdiv exact i64 %76, 100
  %82 = icmp ult i64 %81, 92233720368547758
  br i1 %82, label %83, label %87

83:                                               ; preds = %80
  %84 = shl nsw i64 %81, 1
  %85 = icmp ult i64 %84, %7
  %86 = select i1 %85, i64 %7, i64 %84
  br label %87

87:                                               ; preds = %83, %80
  %88 = phi i64 [ %86, %83 ], [ 184467440737095516, %80 ]
  %89 = mul i64 %88, 100
  %90 = tail call i8* @_Znwm(i64 %89) #7
  %91 = bitcast i8* %90 to %"struct.viz::HitTestRegion"*
  %92 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %93 = bitcast %"struct.viz::HitTestRegion"** %92 to i8**
  store i8* %90, i8** %93, align 8
  %94 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %90, i8** %94, align 8
  %95 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %91, i64 %88
  store %"struct.viz::HitTestRegion"* %95, %"struct.viz::HitTestRegion"** %8, align 8
  %96 = bitcast %"struct.viz::HitTestRegion"** %92 to i64*
  %97 = ptrtoint i8* %90 to i64
  %98 = icmp eq %"struct.viz::HitTestRegion"* %1, %2
  br i1 %98, label %124, label %99

99:                                               ; preds = %87, %99
  %100 = phi %"struct.viz::HitTestRegion"* [ %120, %99 ], [ %91, %87 ]
  %101 = phi %"struct.viz::HitTestRegion"* [ %119, %99 ], [ %1, %87 ]
  %102 = bitcast %"struct.viz::HitTestRegion"* %101 to i64*
  %103 = bitcast %"struct.viz::HitTestRegion"* %100 to i64*
  %104 = load i64, i64* %102, align 4
  store i64 %104, i64* %103, align 4
  %105 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %100, i64 0, i32 2, i32 0
  %106 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %101, i64 0, i32 2, i32 0
  %107 = load i32, i32* %106, align 4
  store i32 %107, i32* %105, align 4
  %108 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %100, i64 0, i32 2, i32 1
  %109 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %101, i64 0, i32 2, i32 1
  %110 = load i32, i32* %109, align 4
  store i32 %110, i32* %108, align 4
  %111 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %100, i64 0, i32 3
  %112 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %101, i64 0, i32 3
  %113 = bitcast %"class.gfx::Rect"* %111 to i8*
  %114 = bitcast %"class.gfx::Rect"* %112 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %113, i8* align 4 %114, i64 16, i1 false) #6
  %115 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %100, i64 0, i32 4
  %116 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %101, i64 0, i32 4
  %117 = bitcast %"class.gfx::Transform"* %115 to i8*
  %118 = bitcast %"class.gfx::Transform"* %116 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %117, i8* align 4 %118, i64 68, i1 false) #6
  %119 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %101, i64 1
  %120 = getelementptr inbounds %"struct.viz::HitTestRegion", %"struct.viz::HitTestRegion"* %100, i64 1
  %121 = icmp eq %"struct.viz::HitTestRegion"* %119, %2
  br i1 %121, label %122, label %99

122:                                              ; preds = %99
  %123 = ptrtoint %"struct.viz::HitTestRegion"* %120 to i64
  br label %124

124:                                              ; preds = %87, %122
  %125 = phi i64 [ %97, %87 ], [ %123, %122 ]
  store i64 %125, i64* %96, align 8
  br label %126

126:                                              ; preds = %64, %66, %124
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
