; ModuleID = '../../third_party/angle/src/libANGLE/renderer/gl/VertexArrayGL.cpp'
source_filename = "../../third_party/angle/src/libANGLE/renderer/gl/VertexArrayGL.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.angle::Format" = type { i32, i32, i32, void (i64, i64, i64, i8*, i64, i64, i8*, i64, i64)*, void (i8*, i8*)*, void (i8*, i8*)*, %"class.rx::FastCopyFunctionMap"*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, i32 }
%"class.rx::FastCopyFunctionMap" = type { i64, %"struct.rx::FastCopyFunctionMap::Entry"* }
%"struct.rx::FastCopyFunctionMap::Entry" = type { i32, void (i8*, i8*)* }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.rx::VertexArrayGL" = type { %"class.rx::VertexArrayImpl", i32, i32, %"class.angle::BitSetT", i8, %"struct.rx::VertexArrayStateGL"*, %"class.gl::BindingPointer", %"struct.std::__1::array.629", i64, i32, i64, i32, %"class.angle::BitSetT", %"class.angle::BitSetT", %"struct.std::__1::array.630" }
%"class.rx::VertexArrayImpl" = type { i32 (...)**, %"class.gl::VertexArrayState"* }
%"struct.rx::VertexArrayStateGL" = type { i32, %"class.angle::FixedVector.625", %"class.angle::FixedVector.627" }
%"class.angle::FixedVector.625" = type { %"struct.std::__1::array.626", i64 }
%"struct.std::__1::array.626" = type { [16 x %"struct.rx::VertexAttributeGL"] }
%"struct.rx::VertexAttributeGL" = type { i8, %"struct.angle::Format"*, i8*, i32, i32 }
%"class.angle::FixedVector.627" = type { %"struct.std::__1::array.628", i64 }
%"struct.std::__1::array.628" = type { [16 x %"struct.rx::VertexBindingGL"] }
%"struct.rx::VertexBindingGL" = type <{ i32, i32, i64, i32, [4 x i8] }>
%"class.gl::BindingPointer" = type { %"class.angle::BindingPointer" }
%"class.angle::BindingPointer" = type { i32 (...)**, %"class.gl::Buffer"* }
%"class.gl::Buffer" = type { %"class.gl::RefCountObject.base", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.angle::Subject", %"class.gl::BufferState", %"class.rx::BufferImpl"*, %"class.angle::ObserverBinding", %"class.gl::IndexRangeCache" }
%"class.gl::RefCountObject.base" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::BufferID" }>
%"class.angle::RefCountObject" = type { i32 (...)**, i64 }
%"class.rx::Serial" = type { i64 }
%"struct.gl::BufferID" = type { i32 }
%"class.gl::LabeledObject" = type { i32 (...)** }
%"class.angle::ObserverInterface" = type { i32 (...)** }
%"class.angle::Subject" = type { i32 (...)**, %"class.angle::FastVector" }
%"class.angle::FastVector" = type { %"struct.std::__1::array", %"class.angle::ObserverBindingBase"**, i64, i64 }
%"struct.std::__1::array" = type { [8 x %"class.angle::ObserverBindingBase"*] }
%"class.angle::ObserverBindingBase" = type { i32 (...)**, %"class.angle::ObserverInterface"*, i64 }
%"class.gl::BufferState" = type <{ %"class.std::__1::basic_string", i8, [7 x i8], i64, i32, i32, i8, [7 x i8], i8*, i64, i64, i32, i32, i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.rx::BufferImpl" = type { %"class.angle::Subject", %"class.gl::BufferState"* }
%"class.angle::ObserverBinding" = type { %"class.angle::ObserverBindingBase", %"class.angle::Subject"* }
%"class.gl::IndexRangeCache" = type { %"class.std::__1::map" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.6", %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { i64 }
%"struct.std::__1::array.629" = type { [16 x %"class.gl::BindingPointer"] }
%"class.angle::BitSetT" = type { i64 }
%"struct.std::__1::array.630" = type { [16 x i32] }
%"class.gl::VertexArrayState" = type { %"class.std::__1::basic_string", %"class.std::__1::vector", %"class.gl::SubjectBindingPointer", %"class.std::__1::vector.14", %"class.angle::BitSetT", %"class.angle::BitSetT.21", %"class.angle::BitSetT", %"class.angle::BitSetT", %"class.angle::BitSetT", %"class.angle::BitSetT", %"class.angle::BitSetT" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"*, %"class.std::__1::__compressed_pair.1" }
%"struct.gl::VertexAttribute" = type { i8, %"struct.angle::Format"*, i8*, i32, i32, i32, i64 }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.gl::VertexAttribute"* }
%"class.gl::SubjectBindingPointer" = type { %"class.gl::BindingPointer", %"class.angle::ObserverBindingBase" }
%"class.std::__1::vector.14" = type { %"class.std::__1::__vector_base.15" }
%"class.std::__1::__vector_base.15" = type { %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"*, %"class.std::__1::__compressed_pair.16" }
%"class.gl::VertexBinding" = type { i32, i32, i64, %"class.gl::BindingPointer", %"class.angle::BitSetT" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.gl::VertexBinding"* }
%"class.angle::BitSetT.21" = type { i64 }
%"class.gl::Context" = type <{ %"class.egl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::State", i8, i8, i8, i8, [4 x i8], %"class.gl::ErrorSet", %"class.angle::BitSetT.537", [4 x i8], %"class.std::__1::unique_ptr.538", i8*, %"struct.gl::Extensions", [4 x i8], %"class.gl::BindingPointer.113", %"struct.egl::Config"*, %"class.angle::PackedEnumMap.544", %"class.gl::ResourceMap.546", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.556", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.566", %"class.gl::HandleAllocator", %"class.gl::ResourceMap.576", %"class.gl::HandleAllocator", i8*, i8*, i8*, i8*, %"class.std::__1::vector.586", i8*, %"class.std::__1::vector.586", %"class.std::__1::unique_ptr.593", i8, i8, i8, i8, i32, i8, i8, i8, [5 x i8], %"class.egl::Surface"*, %"class.egl::Surface"*, %"class.egl::Display"*, i8, i8, i8, [5 x i8], %"class.gl::MemoryProgramCache"*, %"class.angle::BitSetT.536", %"class.gl::StateCache", %"class.angle::BitSetT.189", %"class.angle::BitSetT.189", %"class.angle::BitSetT.536", %"class.angle::BitSetT.189", %"class.angle::BitSetT.536", %"class.angle::BitSetT.189", %"class.angle::BitSetT.536", %"class.angle::BitSetT.189", %"class.angle::BitSetT.536", %"class.angle::BitSetT.189", %"class.angle::BitSetT.536", %"class.angle::BitSetT.189", %"class.angle::BitSetT.536", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::vector.356", %"class.std::__1::vector.356", %"class.std::__1::vector.356", %struct.Optional.607, %struct.Optional.607, %"class.std::__1::shared_ptr.608", %"class.std::__1::unique_ptr.609", %"class.std::__1::basic_string", i64, %"class.gl::MockOverlay", i8, i8, i8, [4 x i8] }>
%"class.egl::LabeledObject" = type { i32 (...)** }
%"class.gl::State" = type <{ %"struct.gl::ContextID", i32, i32, %"struct.gl::Version", [4 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", %"class.egl::ShareGroup"*, %"class.gl::BufferManager"*, %"class.gl::ShaderProgramManager"*, %"class.gl::TextureManager"*, %"class.gl::RenderbufferManager"*, %"class.gl::SamplerManager"*, %"class.gl::SyncManager"*, %"class.gl::FramebufferManager"*, %"class.gl::ProgramPipelineManager"*, %"class.gl::MemoryObjectManager"*, %"class.gl::SemaphoreManager"*, i32, i32, %"struct.angle::Color", float, i32, %"struct.gl::RasterizerState", i8, [3 x i8], %"struct.gl::Rectangle", %"struct.gl::BlendState", [4 x i8], %"class.gl::BlendStateExt", %"struct.angle::Color", i8, i8, [2 x i8], float, i8, i8, [2 x i8], i32, %"struct.std::__1::array.392", i8, [3 x i8], float, %"struct.gl::DepthStencilState", i32, i32, float, i32, i32, i32, i8, i8, [2 x i8], %"struct.gl::Rectangle", float, float, i32, i32, %"class.gl::Framebuffer"*, %"class.gl::Framebuffer"*, %"class.gl::BindingPointer.393", %"class.gl::Program"*, %"class.gl::BindingPointer.395", %"class.gl::ProgramExecutable"*, i8, [7 x i8], %"class.std::__1::vector.397", %"class.gl::VertexArray"*, %"class.angle::BitSetT.21", i64, %"class.angle::PackedEnumMap.406", %"class.gl::ActiveTexturesCache", %"class.std::__1::vector.356", %"class.angle::BitSetArray", %"class.std::__1::vector.418", %"class.std::__1::vector.427", %"class.angle::PackedEnumMap.434", %"class.angle::PackedEnumMap.438", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.std::__1::vector.440", %"class.angle::BitSetArray.447", %"class.angle::BitSetT.448", %"class.angle::BitSetT.189", %"class.gl::BindingPointer.449", %"struct.gl::PixelUnpackState", %"struct.gl::PixelPackState", i8, [3 x i8], %"class.gl::Debug", i8, i8, [2 x i8], i32, i8, i8, i8, i8, i32, %"class.angle::BitSetT.476", i32, %"class.gl::GLES1State", %"class.angle::BitSetT.189", %"class.angle::BitSetT.535", [4 x i8], %"class.angle::BitSetT.536", %"class.angle::BitSetT", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.angle::BitSetArray", %"class.gl::MockOverlay"*, %"class.angle::BitSetT.170", %"class.angle::BitSetT.170", i8, [5 x i8] }>
%"struct.gl::ContextID" = type { i32 }
%"struct.gl::Version" = type { i32, i32 }
%"struct.gl::Caps" = type <{ float, float, i32, [4 x i8], i64, i32, i32, i32, i32, float, i32, i32, float, float, float, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, [4 x i8], %"class.std::__1::vector.53", %"class.std::__1::vector.53", %"class.std::__1::vector.53", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"struct.gl::TypePrecision", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap", %"class.angle::PackedEnumMap.62", i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.64", %"struct.std::__1::array.64", i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, float, float, float, i32, i32, [4 x i8] }>
%"class.std::__1::vector.53" = type { %"class.std::__1::__vector_base.54" }
%"class.std::__1::__vector_base.54" = type { i32*, i32*, %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { i32* }
%"struct.gl::TypePrecision" = type { %"struct.std::__1::array.60", i32 }
%"struct.std::__1::array.60" = type { [2 x i32] }
%"class.angle::PackedEnumMap" = type { %"struct.std::__1::array.61" }
%"struct.std::__1::array.61" = type { [6 x i32] }
%"class.angle::PackedEnumMap.62" = type { %"struct.std::__1::array.63" }
%"struct.std::__1::array.63" = type { [6 x i64] }
%"struct.std::__1::array.64" = type { [3 x i32] }
%"class.gl::TextureCapsMap" = type { %"class.angle::PackedEnumMap.65" }
%"class.angle::PackedEnumMap.65" = type { %"struct.std::__1::array.66" }
%"struct.std::__1::array.66" = type { [227 x %"struct.gl::TextureCaps"] }
%"struct.gl::TextureCaps" = type { i8, i8, i8, i8, i8, %"class.std::__1::set.67" }
%"class.std::__1::set.67" = type { %"class.std::__1::__tree.68" }
%"class.std::__1::__tree.68" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.69", %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.gl::Limitations" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.egl::ShareGroup" = type opaque
%"class.gl::BufferManager" = type { %"class.gl::TypedResourceManager" }
%"class.gl::TypedResourceManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap" }
%"class.gl::ResourceManagerBase" = type { i32 (...)**, %"class.gl::HandleAllocator", i64 }
%"class.gl::ResourceMap" = type { i64, %"class.gl::Buffer"**, %"class.absl::flat_hash_map" }
%"class.absl::flat_hash_map" = type { %"class.absl::container_internal::raw_hash_map" }
%"class.absl::container_internal::raw_hash_map" = type { %"class.absl::container_internal::raw_hash_set" }
%"class.absl::container_internal::raw_hash_set" = type { i8*, %"union.absl::container_internal::map_slot_type"*, i64, i64, %"class.absl::container_internal::CompressedTuple" }
%"union.absl::container_internal::map_slot_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, %"class.gl::Buffer"* }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage" = type { i64 }
%"class.gl::ShaderProgramManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.90", %"class.gl::ResourceMap.145" }
%"class.gl::ResourceMap.90" = type { i64, %"class.gl::Shader"**, %"class.absl::flat_hash_map.136" }
%"class.gl::Shader" = type { %"class.gl::LabeledObject", %"class.gl::ShaderState", %"class.std::__1::unique_ptr.107", %"struct.gl::Limitations", %"struct.gl::ShaderProgramID", i8, i32, i8, %"class.std::__1::basic_string", %"class.gl::BindingPointer.113", %"class.std::__1::unique_ptr.130", %"class.std::__1::basic_string", %"class.gl::ShaderProgramManager"*, i32, i32 }
%"class.gl::ShaderState" = type <{ %"class.std::__1::basic_string", i8, [3 x i8], i32, %"class.std::__1::basic_string", %"class.std::__1::vector.53", %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", [4 x i8], %"class.std::__1::vector.91", %"class.std::__1::vector.91", %"class.std::__1::vector.91", %"class.std::__1::vector.98", %"class.std::__1::vector.98", %"class.std::__1::vector.91", %"class.std::__1::vector.91", %"class.std::__1::vector.91", i8, [3 x i8], %"class.angle::BitSetT.105", i32, %struct.Optional, %struct.Optional, %struct.Optional.106, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%"struct.sh::WorkGroupSize" = type { [3 x i32] }
%"class.std::__1::vector.98" = type { %"class.std::__1::__vector_base.99" }
%"class.std::__1::__vector_base.99" = type { %"struct.sh::InterfaceBlock"*, %"struct.sh::InterfaceBlock"*, %"class.std::__1::__compressed_pair.100" }
%"struct.sh::InterfaceBlock" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i32, i8, i32, i8, i8, i32, %"class.std::__1::vector.91" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.sh::InterfaceBlock"* }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %"struct.sh::ShaderVariable"*, %"struct.sh::ShaderVariable"*, %"class.std::__1::__compressed_pair.93" }
%"struct.sh::ShaderVariable" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::vector.53", i8, i8, %"class.std::__1::vector.91", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, i32, i8, i32, i32, i32, i8, i8, i8, i32, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"struct.sh::ShaderVariable"* }
%"class.angle::BitSetT.105" = type { i32 }
%struct.Optional = type { i8, i8 }
%struct.Optional.106 = type { i8, i32 }
%"class.std::__1::unique_ptr.107" = type { %"class.std::__1::__compressed_pair.108" }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %"class.rx::ShaderImpl"* }
%"class.rx::ShaderImpl" = type opaque
%"struct.gl::ShaderProgramID" = type { i32 }
%"class.std::__1::unique_ptr.130" = type { %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { %"struct.gl::Shader::CompilingState"* }
%"struct.gl::Shader::CompilingState" = type opaque
%"class.absl::flat_hash_map.136" = type { %"class.absl::container_internal::raw_hash_map.137" }
%"class.absl::container_internal::raw_hash_map.137" = type { %"class.absl::container_internal::raw_hash_set.138" }
%"class.absl::container_internal::raw_hash_set.138" = type { i8*, %"union.absl::container_internal::map_slot_type.139"*, i64, i64, %"class.absl::container_internal::CompressedTuple.140" }
%"union.absl::container_internal::map_slot_type.139" = type opaque
%"class.absl::container_internal::CompressedTuple.140" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.141" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.141" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.145" = type { i64, %"class.gl::Program"**, %"class.absl::flat_hash_map.262" }
%"class.absl::flat_hash_map.262" = type { %"class.absl::container_internal::raw_hash_map.263" }
%"class.absl::container_internal::raw_hash_map.263" = type { %"class.absl::container_internal::raw_hash_set.264" }
%"class.absl::container_internal::raw_hash_set.264" = type { i8*, %"union.absl::container_internal::map_slot_type.265"*, i64, i64, %"class.absl::container_internal::CompressedTuple.266" }
%"union.absl::container_internal::map_slot_type.265" = type { %"struct.std::__1::pair.691" }
%"struct.std::__1::pair.691" = type { i32, %"class.gl::Program"* }
%"class.absl::container_internal::CompressedTuple.266" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.267" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.267" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::TextureManager" = type { %"class.gl::TypedResourceManager.271" }
%"class.gl::TypedResourceManager.271" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.272" }
%"class.gl::ResourceMap.272" = type { i64, %"class.gl::Texture"**, %"class.absl::flat_hash_map.289" }
%"class.gl::Texture" = type <{ %"class.gl::RefCountObject.base.274", [4 x i8], %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::TextureState", %"class.angle::BitSetT.285", %"class.rx::TextureImpl"*, %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.std::__1::basic_string", %"class.egl::Surface"*, %"class.egl::Stream"*, %"class.angle::FastVector.287", %"struct.gl::Texture::SamplerCompletenessCache", [4 x i8] }>
%"class.gl::RefCountObject.base.274" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TextureID" }>
%"struct.gl::TextureID" = type { i32 }
%"class.egl::ImageSibling" = type { %"class.gl::FramebufferAttachmentObject", %"class.std::__1::set", %"class.angle::BindingPointer.38" }
%"class.gl::FramebufferAttachmentObject" = type { %"class.angle::Subject", %"class.angle::ObserverInterface" }
%"class.std::__1::set" = type { %"class.std::__1::__tree.29" }
%"class.std::__1::__tree.29" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.30", %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.angle::BindingPointer.38" = type { i32 (...)**, %"class.egl::Image"* }
%"class.egl::Image" = type <{ %"class.angle::RefCountObject.39", %"class.egl::LabeledObject", %"struct.egl::ImageState", %"class.rx::ImageImpl"*, i8, [7 x i8] }>
%"class.angle::RefCountObject.39" = type { i32 (...)**, i64 }
%"struct.egl::ImageState" = type { i8*, i32, %"class.gl::ImageIndex", %"class.egl::ImageSibling"*, %"class.std::__1::set.40", %"struct.gl::Format", i8, %"struct.gl::Extents", i64, i32, i32 }
%"class.gl::ImageIndex" = type { i8, i32, i32, i32 }
%"class.std::__1::set.40" = type { %"class.std::__1::__tree.41" }
%"class.std::__1::__tree.41" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.42", %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.42" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.gl::Format" = type { %"struct.gl::InternalFormat"* }
%"struct.gl::InternalFormat" = type { i32, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i32, i32, i32, i32, i32, i32, i32, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)*, i1 (%"struct.gl::Version"*, %"struct.gl::Extensions"*)* }
%"struct.gl::Extents" = type { i32, i32, i32 }
%"class.rx::ImageImpl" = type opaque
%"class.gl::TextureState" = type <{ i8, [3 x i8], %"struct.gl::SwizzleState", %"class.gl::SamplerState", i32, i32, i32, i32, i8, i8, [2 x i8], i32, i32, [4 x i8], %"class.std::__1::vector.278", %"struct.gl::Rectangle", i32, [4 x i8], %"class.gl::OffsetBindingPointer", i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"struct.gl::SwizzleState" = type { i32, i32, i32, i32 }
%"class.gl::SamplerState" = type { i32, i32, i32, i32, i32, float, float, float, i32, i32, i32, %"struct.angle::ColorGeneric", %"union.gl::SamplerState::Completeness" }
%"struct.angle::ColorGeneric" = type <{ %union.anon.275, i8, [3 x i8] }>
%union.anon.275 = type { %"struct.angle::Color" }
%"union.gl::SamplerState::Completeness" = type { i32 }
%"class.std::__1::vector.278" = type { %"class.std::__1::__vector_base.279" }
%"class.std::__1::__vector_base.279" = type { %"struct.gl::ImageDesc"*, %"struct.gl::ImageDesc"*, %"class.std::__1::__compressed_pair.280" }
%"struct.gl::ImageDesc" = type <{ %"struct.gl::Extents", [4 x i8], %"struct.gl::Format", i32, i8, [3 x i8], i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.280" = type { %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"struct.gl::ImageDesc"* }
%"class.gl::OffsetBindingPointer" = type { %"class.gl::BindingPointer", i64, i64 }
%"class.angle::BitSetT.285" = type { i64 }
%"class.rx::TextureImpl" = type opaque
%"class.egl::Stream" = type { %"class.egl::LabeledObject", i8*, %"class.egl::Display"*, %"class.rx::StreamProducerImpl"*, %"class.gl::Context"*, i32, i64, i64, i32, i32, i32, %"struct.std::__1::array.286", i32, i32 }
%"class.rx::StreamProducerImpl" = type opaque
%"struct.std::__1::array.286" = type { [3 x %"struct.egl::Stream::PlaneTexture"] }
%"struct.egl::Stream::PlaneTexture" = type { i32, %"class.gl::Texture"* }
%"class.angle::FastVector.287" = type { %"struct.std::__1::array.288", %"class.rx::Serial"*, i64, i64 }
%"struct.std::__1::array.288" = type { [8 x %"class.rx::Serial"] }
%"struct.gl::Texture::SamplerCompletenessCache" = type <{ %"struct.gl::ContextID", %"class.gl::SamplerState", i8, [3 x i8] }>
%"class.absl::flat_hash_map.289" = type { %"class.absl::container_internal::raw_hash_map.290" }
%"class.absl::container_internal::raw_hash_map.290" = type { %"class.absl::container_internal::raw_hash_set.291" }
%"class.absl::container_internal::raw_hash_set.291" = type { i8*, %"union.absl::container_internal::map_slot_type.292"*, i64, i64, %"class.absl::container_internal::CompressedTuple.293" }
%"union.absl::container_internal::map_slot_type.292" = type { %"struct.std::__1::pair.693" }
%"struct.std::__1::pair.693" = type { i32, %"class.gl::Texture"* }
%"class.absl::container_internal::CompressedTuple.293" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.294" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.294" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::RenderbufferManager" = type { %"class.gl::TypedResourceManager.298" }
%"class.gl::TypedResourceManager.298" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.299" }
%"class.gl::ResourceMap.299" = type { i64, %"class.gl::Renderbuffer"**, %"class.absl::flat_hash_map.300" }
%"class.gl::Renderbuffer" = type { %"class.gl::RefCountObject.base.28", %"class.egl::ImageSibling", %"class.gl::LabeledObject", %"class.gl::RenderbufferState", %"class.std::__1::unique_ptr", %"class.std::__1::basic_string", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.28" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::RenderbufferID" }>
%"struct.gl::RenderbufferID" = type { i32 }
%"class.gl::RenderbufferState" = type <{ i32, i32, %"struct.gl::Format", i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.rx::RenderbufferImpl"* }
%"class.rx::RenderbufferImpl" = type { %"class.rx::FramebufferAttachmentObjectImpl", %"class.gl::RenderbufferState"* }
%"class.rx::FramebufferAttachmentObjectImpl" = type { %"class.angle::Subject" }
%"class.absl::flat_hash_map.300" = type { %"class.absl::container_internal::raw_hash_map.301" }
%"class.absl::container_internal::raw_hash_map.301" = type { %"class.absl::container_internal::raw_hash_set.302" }
%"class.absl::container_internal::raw_hash_set.302" = type { i8*, %"union.absl::container_internal::map_slot_type.303"*, i64, i64, %"class.absl::container_internal::CompressedTuple.304" }
%"union.absl::container_internal::map_slot_type.303" = type { %"struct.std::__1::pair.695" }
%"struct.std::__1::pair.695" = type { i32, %"class.gl::Renderbuffer"* }
%"class.absl::container_internal::CompressedTuple.304" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.305" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.305" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SamplerManager" = type { %"class.gl::TypedResourceManager.309" }
%"class.gl::TypedResourceManager.309" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.310" }
%"class.gl::ResourceMap.310" = type { i64, %"class.gl::Sampler"**, %"class.absl::flat_hash_map.313" }
%"class.gl::Sampler" = type { %"class.gl::RefCountObject.base.312", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::SamplerState", i8, %"class.rx::SamplerImpl"*, %"class.std::__1::basic_string" }
%"class.gl::RefCountObject.base.312" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::SamplerID" }>
%"struct.gl::SamplerID" = type { i32 }
%"class.rx::SamplerImpl" = type opaque
%"class.absl::flat_hash_map.313" = type { %"class.absl::container_internal::raw_hash_map.314" }
%"class.absl::container_internal::raw_hash_map.314" = type { %"class.absl::container_internal::raw_hash_set.315" }
%"class.absl::container_internal::raw_hash_set.315" = type { i8*, %"union.absl::container_internal::map_slot_type.316"*, i64, i64, %"class.absl::container_internal::CompressedTuple.317" }
%"union.absl::container_internal::map_slot_type.316" = type { %"struct.std::__1::pair.697" }
%"struct.std::__1::pair.697" = type { i32, %"class.gl::Sampler"* }
%"class.absl::container_internal::CompressedTuple.317" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.318" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.318" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SyncManager" = type { %"class.gl::TypedResourceManager.322" }
%"class.gl::TypedResourceManager.322" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.323" }
%"class.gl::ResourceMap.323" = type { i64, %"class.gl::Sync"**, %"class.absl::flat_hash_map.324" }
%"class.gl::Sync" = type opaque
%"class.absl::flat_hash_map.324" = type { %"class.absl::container_internal::raw_hash_map.325" }
%"class.absl::container_internal::raw_hash_map.325" = type { %"class.absl::container_internal::raw_hash_set.326" }
%"class.absl::container_internal::raw_hash_set.326" = type { i8*, %"union.absl::container_internal::map_slot_type.327"*, i64, i64, %"class.absl::container_internal::CompressedTuple.328" }
%"union.absl::container_internal::map_slot_type.327" = type opaque
%"class.absl::container_internal::CompressedTuple.328" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.329" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.329" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::FramebufferManager" = type { %"class.gl::TypedResourceManager.333" }
%"class.gl::TypedResourceManager.333" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.334" }
%"class.gl::ResourceMap.334" = type { i64, %"class.gl::Framebuffer"**, %"class.absl::flat_hash_map.335" }
%"class.absl::flat_hash_map.335" = type { %"class.absl::container_internal::raw_hash_map.336" }
%"class.absl::container_internal::raw_hash_map.336" = type { %"class.absl::container_internal::raw_hash_set.337" }
%"class.absl::container_internal::raw_hash_set.337" = type { i8*, %"union.absl::container_internal::map_slot_type.338"*, i64, i64, %"class.absl::container_internal::CompressedTuple.339" }
%"union.absl::container_internal::map_slot_type.338" = type { %"struct.std::__1::pair.699" }
%"struct.std::__1::pair.699" = type { i32, %"class.gl::Framebuffer"* }
%"class.absl::container_internal::CompressedTuple.339" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.340" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.340" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramPipelineManager" = type { %"class.gl::TypedResourceManager.344" }
%"class.gl::TypedResourceManager.344" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.345" }
%"class.gl::ResourceMap.345" = type { i64, %"class.gl::ProgramPipeline"**, %"class.absl::flat_hash_map.363" }
%"class.gl::ProgramPipeline" = type { %"class.gl::RefCountObject.base.347", %"class.gl::LabeledObject", %"class.angle::ObserverInterface", %"class.gl::HasAttachedShaders", %"class.std::__1::unique_ptr.348", %"class.gl::ProgramPipelineState", %"class.std::__1::vector.356", %"class.angle::ObserverBinding" }
%"class.gl::RefCountObject.base.347" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::ProgramPipelineID" }>
%"struct.gl::ProgramPipelineID" = type { i32 }
%"class.gl::HasAttachedShaders" = type { i32 (...)** }
%"class.std::__1::unique_ptr.348" = type { %"class.std::__1::__compressed_pair.349" }
%"class.std::__1::__compressed_pair.349" = type { %"struct.std::__1::__compressed_pair_elem.350" }
%"struct.std::__1::__compressed_pair_elem.350" = type { %"class.rx::ProgramPipelineImpl"* }
%"class.rx::ProgramPipelineImpl" = type opaque
%"class.gl::ProgramPipelineState" = type <{ %"class.std::__1::basic_string", %"class.gl::Program"*, %"class.angle::PackedEnumMap.354", i8, [7 x i8], %"class.gl::ProgramExecutable"*, i8, [7 x i8] }>
%"class.angle::PackedEnumMap.354" = type { %"struct.std::__1::array.355" }
%"struct.std::__1::array.355" = type { [6 x %"class.gl::Program"*] }
%"class.absl::flat_hash_map.363" = type { %"class.absl::container_internal::raw_hash_map.364" }
%"class.absl::container_internal::raw_hash_map.364" = type { %"class.absl::container_internal::raw_hash_set.365" }
%"class.absl::container_internal::raw_hash_set.365" = type { i8*, %"union.absl::container_internal::map_slot_type.366"*, i64, i64, %"class.absl::container_internal::CompressedTuple.367" }
%"union.absl::container_internal::map_slot_type.366" = type { %"struct.std::__1::pair.701" }
%"struct.std::__1::pair.701" = type { i32, %"class.gl::ProgramPipeline"* }
%"class.absl::container_internal::CompressedTuple.367" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.368" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.368" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::MemoryObjectManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.372" }
%"class.gl::ResourceMap.372" = type { i64, %"class.gl::MemoryObject"**, %"class.absl::flat_hash_map.373" }
%"class.gl::MemoryObject" = type opaque
%"class.absl::flat_hash_map.373" = type { %"class.absl::container_internal::raw_hash_map.374" }
%"class.absl::container_internal::raw_hash_map.374" = type { %"class.absl::container_internal::raw_hash_set.375" }
%"class.absl::container_internal::raw_hash_set.375" = type { i8*, %"union.absl::container_internal::map_slot_type.376"*, i64, i64, %"class.absl::container_internal::CompressedTuple.377" }
%"union.absl::container_internal::map_slot_type.376" = type opaque
%"class.absl::container_internal::CompressedTuple.377" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.378" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.378" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::SemaphoreManager" = type { %"class.gl::ResourceManagerBase", %"class.gl::ResourceMap.382" }
%"class.gl::ResourceMap.382" = type { i64, %"class.gl::Semaphore"**, %"class.absl::flat_hash_map.383" }
%"class.gl::Semaphore" = type opaque
%"class.absl::flat_hash_map.383" = type { %"class.absl::container_internal::raw_hash_map.384" }
%"class.absl::container_internal::raw_hash_map.384" = type { %"class.absl::container_internal::raw_hash_set.385" }
%"class.absl::container_internal::raw_hash_set.385" = type { i8*, %"union.absl::container_internal::map_slot_type.386"*, i64, i64, %"class.absl::container_internal::CompressedTuple.387" }
%"union.absl::container_internal::map_slot_type.386" = type opaque
%"class.absl::container_internal::CompressedTuple.387" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.388" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.388" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"struct.gl::RasterizerState" = type { i8, i8, i32, i8, float, float, i8, i8, i8, i8 }
%"struct.gl::BlendState" = type { i8, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8 }
%"class.gl::BlendStateExt" = type { i64, i64, i64, i64, i64, i64, i64, i64, i64, i64, %"class.angle::BitSetT.170", %"class.angle::BitSetT.170", i64 }
%"struct.angle::Color" = type { float, float, float, float }
%"struct.std::__1::array.392" = type { [2 x i32] }
%"struct.gl::DepthStencilState" = type { i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"struct.gl::Rectangle" = type { i32, i32, i32, i32 }
%"class.gl::Framebuffer" = type { %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::FramebufferState", %"class.rx::FramebufferImpl"*, %struct.Optional.622, %"class.std::__1::vector.356", %"class.angle::ObserverBinding", %"class.angle::ObserverBinding", %"class.angle::BitSetT.623", %"class.angle::BitSetT.170", %struct.Optional.624 }
%"class.gl::FramebufferState" = type { %"struct.gl::FramebufferID", %"class.rx::Serial", %"class.std::__1::basic_string", %"class.std::__1::vector.615", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.angle::BitSetT.170", %"class.std::__1::vector.53", i32, %"class.angle::BitSetT.170", %"class.angle::BitSetT.21", i32, i32, i32, i8, i32, %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", %"class.gl::FramebufferAttachment", i8, %"class.angle::BitSetT.536", i8, %"class.gl::FramebufferAttachment", i32, %"struct.gl::Offset" }
%"struct.gl::FramebufferID" = type { i32 }
%"class.std::__1::vector.615" = type { %"class.std::__1::__vector_base.616" }
%"class.std::__1::__vector_base.616" = type { %"class.gl::FramebufferAttachment"*, %"class.gl::FramebufferAttachment"*, %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"class.gl::FramebufferAttachment"* }
%"class.gl::FramebufferAttachment" = type { i32, %"class.gl::FramebufferAttachment::Target", %"class.gl::FramebufferAttachmentObject"*, i32, i8, i32, i32 }
%"class.gl::FramebufferAttachment::Target" = type { i32, %"class.gl::ImageIndex" }
%"struct.gl::Offset" = type { i32, i32, i32 }
%"class.rx::FramebufferImpl" = type opaque
%struct.Optional.622 = type { i8, %"struct.gl::FramebufferStatus" }
%"struct.gl::FramebufferStatus" = type { i32, i8* }
%"class.angle::BitSetT.623" = type { i64 }
%struct.Optional.624 = type { i8, %"class.angle::BitSetT.623" }
%"class.gl::BindingPointer.393" = type { %"class.angle::BindingPointer.394" }
%"class.angle::BindingPointer.394" = type { i32 (...)**, %"class.gl::Renderbuffer"* }
%"class.gl::Program" = type { %"class.gl::LabeledObject", %"class.angle::Subject", %"class.gl::HasAttachedShaders", %"class.rx::Serial", %"class.gl::ProgramState", %"class.rx::ProgramImpl"*, i8, %"class.gl::ProgramBindings", %"class.gl::ProgramAliasedBindings", %"class.gl::ProgramAliasedBindings", i8, %"class.std::__1::unique_ptr.256", i8, i32, %"class.gl::ShaderProgramManager"*, %"struct.gl::ShaderProgramID", %"class.angle::BitSetT.222" }
%"class.gl::ProgramState" = type { %"class.std::__1::basic_string", %"struct.sh::WorkGroupSize", %"class.angle::PackedEnumMap.146", i32, %"class.std::__1::vector.148", %"class.std::__1::vector.155", %"class.std::__1::vector.162", %"class.gl::Range", %"class.angle::BitSetT.170", %"class.std::__1::vector.53", %"class.angle::BitSetT.21", i8, i8, i8, i8, %"class.angle::BitSetT.105", i32, i32, i32, i32, i32, i32, %"class.gl::ProgramAliasedBindings", %"class.std::__1::shared_ptr" }
%"class.angle::PackedEnumMap.146" = type { %"struct.std::__1::array.147" }
%"struct.std::__1::array.147" = type { [6 x %"class.gl::Shader"*] }
%"class.std::__1::vector.148" = type { %"class.std::__1::__vector_base.149" }
%"class.std::__1::__vector_base.149" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::vector.155" = type { %"class.std::__1::__vector_base.156" }
%"class.std::__1::__vector_base.156" = type { %"struct.gl::VariableLocation"*, %"struct.gl::VariableLocation"*, %"class.std::__1::__compressed_pair.157" }
%"struct.gl::VariableLocation" = type <{ i32, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"struct.gl::VariableLocation"* }
%"class.std::__1::vector.162" = type { %"class.std::__1::__vector_base.163" }
%"class.std::__1::__vector_base.163" = type { %"struct.gl::BufferVariable"*, %"struct.gl::BufferVariable"*, %"class.std::__1::__compressed_pair.165" }
%"struct.gl::BufferVariable" = type <{ %"struct.gl::ActiveVariable.base", [7 x i8], %"struct.sh::ShaderVariable", i32, %"struct.sh::BlockMemberInfo", i32, [4 x i8] }>
%"struct.gl::ActiveVariable.base" = type <{ i32 (...)**, %"class.angle::BitSetT.164" }>
%"class.angle::BitSetT.164" = type { i8 }
%"struct.sh::BlockMemberInfo" = type { i32, i32, i32, i8, i32 }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"struct.gl::BufferVariable"* }
%"class.gl::Range" = type { i32, i32 }
%"class.std::__1::shared_ptr" = type { %"class.gl::ProgramExecutable"*, %"class.std::__1::__shared_weak_count"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.rx::ProgramImpl" = type opaque
%"class.gl::ProgramBindings" = type { %"class.absl::flat_hash_map.247" }
%"class.absl::flat_hash_map.247" = type { %"class.absl::container_internal::raw_hash_map.248" }
%"class.absl::container_internal::raw_hash_map.248" = type { %"class.absl::container_internal::raw_hash_set.249" }
%"class.absl::container_internal::raw_hash_set.249" = type { i8*, %"union.absl::container_internal::map_slot_type.250"*, i64, i64, %"class.absl::container_internal::CompressedTuple.251" }
%"union.absl::container_internal::map_slot_type.250" = type opaque
%"class.absl::container_internal::CompressedTuple.251" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.252" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.252" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ProgramAliasedBindings" = type { %"class.absl::flat_hash_map.171" }
%"class.absl::flat_hash_map.171" = type { %"class.absl::container_internal::raw_hash_map.172" }
%"class.absl::container_internal::raw_hash_map.172" = type { %"class.absl::container_internal::raw_hash_set.173" }
%"class.absl::container_internal::raw_hash_set.173" = type { i8*, %"union.absl::container_internal::map_slot_type.174"*, i64, i64, %"class.absl::container_internal::CompressedTuple.175" }
%"union.absl::container_internal::map_slot_type.174" = type opaque
%"class.absl::container_internal::CompressedTuple.175" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.176" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.176" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %"struct.gl::Program::LinkingState"* }
%"struct.gl::Program::LinkingState" = type opaque
%"class.angle::BitSetT.222" = type { i64 }
%"class.gl::BindingPointer.395" = type { %"class.angle::BindingPointer.396" }
%"class.angle::BindingPointer.396" = type { i32 (...)**, %"class.gl::ProgramPipeline"* }
%"class.gl::ProgramExecutable" = type <{ %"class.angle::Subject", %"class.gl::InfoLog", %"class.angle::BitSetT.164", %"class.angle::BitSetT.164", [6 x i8], %"class.angle::BitSetT", i32, [4 x i8], %"class.angle::BitSetT.21", %"class.angle::BitSetT", %"class.angle::BitSetArray", %"struct.std::__1::array.190", %"struct.std::__1::array.191", %"class.angle::BitSetArray", %"struct.std::__1::array.192", %"struct.std::__1::array.193", %"class.angle::BitSetArray", %"struct.std::__1::array.193", i8, [7 x i8], %"class.std::__1::vector.91", %"class.std::__1::vector.155", %"class.std::__1::vector.155", i8, [7 x i8], %"class.std::__1::vector.91", %"class.std::__1::vector.194", %"class.std::__1::vector.201", i32, [4 x i8], %"class.std::__1::vector.208", %"class.gl::Range", %"class.gl::Range", %"class.std::__1::vector.215", %"class.angle::BitSetT.222", %"class.std::__1::vector.223", %"class.gl::Range", %"class.std::__1::vector.215", %"class.std::__1::vector.215", %"class.gl::Range", %"class.std::__1::vector.230", %"class.std::__1::vector.237", %"class.std::__1::vector.237", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.angle::PackedEnumMap.244", %"class.angle::PackedEnumMap.244", %"class.angle::PackedEnumMap", i8, i8, [2 x i8], i32, i32, i32, i32, i32, i32, i32, %struct.Optional.246, [6 x i8] }>
%"class.gl::InfoLog" = type { %"class.std::__1::unique_ptr.182" }
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.std::__1::basic_stringstream"* }
%"class.std::__1::basic_stringstream" = type { %"class.std::__1::basic_iostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_iostream.base" = type { %"class.std::__1::basic_istream.base", %"class.std::__1::basic_ostream.base" }
%"class.std::__1::basic_istream.base" = type { i32 (...)**, i64 }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"struct.std::__1::array.190" = type { [96 x i32] }
%"struct.std::__1::array.191" = type { [96 x i8] }
%"struct.std::__1::array.192" = type { [96 x i8] }
%"struct.std::__1::array.193" = type { [96 x %"class.angle::BitSetT.164"] }
%"class.std::__1::vector.194" = type { %"class.std::__1::__vector_base.195" }
%"class.std::__1::__vector_base.195" = type { %"struct.gl::TransformFeedbackVarying"*, %"struct.gl::TransformFeedbackVarying"*, %"class.std::__1::__compressed_pair.196" }
%"struct.gl::TransformFeedbackVarying" = type <{ %"struct.sh::ShaderVariable", i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.196" = type { %"struct.std::__1::__compressed_pair_elem.197" }
%"struct.std::__1::__compressed_pair_elem.197" = type { %"struct.gl::TransformFeedbackVarying"* }
%"class.std::__1::vector.201" = type { %"class.std::__1::__vector_base.202" }
%"class.std::__1::__vector_base.202" = type { i32*, i32*, %"class.std::__1::__compressed_pair.203" }
%"class.std::__1::__compressed_pair.203" = type { %"struct.std::__1::__compressed_pair_elem.204" }
%"struct.std::__1::__compressed_pair_elem.204" = type { i32* }
%"class.std::__1::vector.208" = type { %"class.std::__1::__vector_base.209" }
%"class.std::__1::__vector_base.209" = type { %"struct.gl::LinkedUniform"*, %"struct.gl::LinkedUniform"*, %"class.std::__1::__compressed_pair.210" }
%"struct.gl::LinkedUniform" = type { %"struct.gl::ActiveVariable.base", %"struct.sh::ShaderVariable", %"struct.gl::UniformTypeInfo"*, i32, %"struct.sh::BlockMemberInfo", %"class.std::__1::vector.53" }
%"struct.gl::UniformTypeInfo" = type <{ i32, i32, i32, i32, i32, i8, [3 x i8], i32, i32, i32, [4 x i8], i64, i64, i64, i8, i8, i8, [5 x i8] }>
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"struct.gl::LinkedUniform"* }
%"class.std::__1::vector.223" = type { %"class.std::__1::__vector_base.224" }
%"class.std::__1::__vector_base.224" = type { %"struct.gl::ShaderVariableBuffer"*, %"struct.gl::ShaderVariableBuffer"*, %"class.std::__1::__compressed_pair.225" }
%"struct.gl::ShaderVariableBuffer" = type { %"struct.gl::ActiveVariable.base", i32, i32, %"class.std::__1::vector.53" }
%"class.std::__1::__compressed_pair.225" = type { %"struct.std::__1::__compressed_pair_elem.226" }
%"struct.std::__1::__compressed_pair_elem.226" = type { %"struct.gl::ShaderVariableBuffer"* }
%"class.std::__1::vector.215" = type { %"class.std::__1::__vector_base.216" }
%"class.std::__1::__vector_base.216" = type { %"struct.gl::InterfaceBlock"*, %"struct.gl::InterfaceBlock"*, %"class.std::__1::__compressed_pair.217" }
%"struct.gl::InterfaceBlock" = type <{ %"struct.gl::ShaderVariableBuffer", %"class.std::__1::basic_string", %"class.std::__1::basic_string", i8, [3 x i8], i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"struct.gl::InterfaceBlock"* }
%"class.std::__1::vector.230" = type { %"class.std::__1::__vector_base.231" }
%"class.std::__1::__vector_base.231" = type { %"struct.gl::SamplerBinding"*, %"struct.gl::SamplerBinding"*, %"class.std::__1::__compressed_pair.232" }
%"struct.gl::SamplerBinding" = type { i8, i32, i8, %"class.std::__1::vector.53" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.gl::SamplerBinding"* }
%"class.std::__1::vector.237" = type { %"class.std::__1::__vector_base.238" }
%"class.std::__1::__vector_base.238" = type { %"struct.gl::ImageBinding"*, %"struct.gl::ImageBinding"*, %"class.std::__1::__compressed_pair.239" }
%"struct.gl::ImageBinding" = type { i8, %"class.std::__1::vector.53" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"struct.gl::ImageBinding"* }
%"class.angle::PackedEnumMap.244" = type { %"struct.std::__1::array.245" }
%"struct.std::__1::array.245" = type { [6 x %"class.std::__1::vector.91"] }
%struct.Optional.246 = type { i8, i8 }
%"class.std::__1::vector.397" = type { %"class.std::__1::__vector_base.398" }
%"class.std::__1::__vector_base.398" = type { %"struct.gl::VertexAttribCurrentValueData"*, %"struct.gl::VertexAttribCurrentValueData"*, %"class.std::__1::__compressed_pair.400" }
%"struct.gl::VertexAttribCurrentValueData" = type { %union.anon.399, i32 }
%union.anon.399 = type { [4 x float] }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"struct.gl::VertexAttribCurrentValueData"* }
%"class.gl::VertexArray" = type <{ %"class.angle::ObserverInterface", %"class.gl::LabeledObject", %"class.angle::Subject", %"struct.gl::VertexArrayID", [4 x i8], %"class.gl::VertexArrayState", %"class.angle::BitSetT.22", %"struct.std::__1::array.23", %"struct.std::__1::array.25", %struct.Optional.405, %"class.rx::VertexArrayImpl"*, %"class.std::__1::vector.356", %"class.angle::BitSetT", %"class.gl::VertexArray::IndexRangeCache", i8, [7 x i8] }>
%"struct.gl::VertexArrayID" = type { i32 }
%"class.angle::BitSetT.22" = type { i64 }
%"struct.std::__1::array.23" = type { [16 x %"class.angle::BitSetT.24"] }
%"class.angle::BitSetT.24" = type { i64 }
%"struct.std::__1::array.25" = type { [16 x %"class.angle::BitSetT.26"] }
%"class.angle::BitSetT.26" = type { i64 }
%struct.Optional.405 = type { i8, %"class.angle::BitSetT.22" }
%"class.gl::VertexArray::IndexRangeCache" = type { i64, i32, i64, %"struct.gl::IndexRange" }
%"struct.gl::IndexRange" = type { i64, i64, i64 }
%"class.angle::PackedEnumMap.406" = type { %"struct.std::__1::array.407" }
%"struct.std::__1::array.407" = type { [11 x %"class.std::__1::vector.408"] }
%"class.std::__1::vector.408" = type { %"class.std::__1::__vector_base.409" }
%"class.std::__1::__vector_base.409" = type { %"class.gl::BindingPointer.410"*, %"class.gl::BindingPointer.410"*, %"class.std::__1::__compressed_pair.412" }
%"class.gl::BindingPointer.410" = type { %"class.angle::BindingPointer.411" }
%"class.angle::BindingPointer.411" = type { i32 (...)**, %"class.gl::Texture"* }
%"class.std::__1::__compressed_pair.412" = type { %"struct.std::__1::__compressed_pair_elem.413" }
%"struct.std::__1::__compressed_pair_elem.413" = type { %"class.gl::BindingPointer.410"* }
%"class.gl::ActiveTexturesCache" = type { %"struct.std::__1::array.417" }
%"struct.std::__1::array.417" = type { [96 x %"class.gl::Texture"*] }
%"class.std::__1::vector.418" = type { %"class.std::__1::__vector_base.419" }
%"class.std::__1::__vector_base.419" = type { %"class.gl::BindingPointer.420"*, %"class.gl::BindingPointer.420"*, %"class.std::__1::__compressed_pair.422" }
%"class.gl::BindingPointer.420" = type { %"class.angle::BindingPointer.421" }
%"class.angle::BindingPointer.421" = type { i32 (...)**, %"class.gl::Sampler"* }
%"class.std::__1::__compressed_pair.422" = type { %"struct.std::__1::__compressed_pair_elem.423" }
%"struct.std::__1::__compressed_pair_elem.423" = type { %"class.gl::BindingPointer.420"* }
%"class.std::__1::vector.427" = type { %"class.std::__1::__vector_base.428" }
%"class.std::__1::__vector_base.428" = type { %"struct.gl::ImageUnit"*, %"struct.gl::ImageUnit"*, %"class.std::__1::__compressed_pair.429" }
%"struct.gl::ImageUnit" = type <{ %"class.gl::BindingPointer.410", i32, i8, [3 x i8], i32, i32, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"struct.gl::ImageUnit"* }
%"class.angle::PackedEnumMap.434" = type { %"struct.std::__1::array.435" }
%"struct.std::__1::array.435" = type { [7 x %"class.gl::BindingPointer.436"] }
%"class.gl::BindingPointer.436" = type { %"class.angle::BindingPointer.437" }
%"class.angle::BindingPointer.437" = type { i32 (...)**, %"class.gl::Query"* }
%"class.gl::Query" = type opaque
%"class.angle::PackedEnumMap.438" = type { %"struct.std::__1::array.439" }
%"struct.std::__1::array.439" = type { [13 x %"class.gl::BindingPointer"] }
%"class.std::__1::vector.440" = type { %"class.std::__1::__vector_base.441" }
%"class.std::__1::__vector_base.441" = type { %"class.gl::OffsetBindingPointer"*, %"class.gl::OffsetBindingPointer"*, %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.gl::OffsetBindingPointer"* }
%"class.angle::BitSetArray.447" = type { %"struct.std::__1::array.188" }
%"struct.std::__1::array.188" = type { [2 x %"class.angle::BitSetT.189"] }
%"class.angle::BitSetT.448" = type { i64 }
%"class.gl::BindingPointer.449" = type { %"class.angle::BindingPointer.450" }
%"class.angle::BindingPointer.450" = type { i32 (...)**, %"class.gl::TransformFeedback"* }
%"class.gl::TransformFeedback" = type { %"class.gl::RefCountObject.base.452", %"class.gl::LabeledObject", %"class.gl::TransformFeedbackState", %"class.rx::TransformFeedbackImpl"* }
%"class.gl::RefCountObject.base.452" = type <{ %"class.angle::RefCountObject", %"class.rx::Serial", %"struct.gl::TransformFeedbackID" }>
%"struct.gl::TransformFeedbackID" = type { i32 }
%"class.gl::TransformFeedbackState" = type { %"class.std::__1::basic_string", i8, i8, i8, i64, i64, %"class.gl::Program"*, %"class.std::__1::vector.440" }
%"class.rx::TransformFeedbackImpl" = type opaque
%"struct.gl::PixelUnpackState" = type { %"struct.gl::PixelStoreStateBase" }
%"struct.gl::PixelStoreStateBase" = type { i32, i32, i32, i32, i32, i32 }
%"struct.gl::PixelPackState" = type <{ %"struct.gl::PixelStoreStateBase", i8, [3 x i8] }>
%"class.gl::Debug" = type { i8, void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*, %"class.std::__1::deque", i32, i8, %"class.std::__1::vector.462" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.458" }
%"struct.std::__1::__split_buffer" = type { %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"struct.gl::Debug::Message"**, %"class.std::__1::__compressed_pair.453" }
%"struct.gl::Debug::Message" = type { i32, i32, i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.453" = type { %"struct.std::__1::__compressed_pair_elem.454" }
%"struct.std::__1::__compressed_pair_elem.454" = type { %"struct.gl::Debug::Message"** }
%"class.std::__1::__compressed_pair.458" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::vector.462" = type { %"class.std::__1::__vector_base.463" }
%"class.std::__1::__vector_base.463" = type { %"struct.gl::Debug::Group"*, %"struct.gl::Debug::Group"*, %"class.std::__1::__compressed_pair.471" }
%"struct.gl::Debug::Group" = type { i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.464" }
%"class.std::__1::vector.464" = type { %"class.std::__1::__vector_base.465" }
%"class.std::__1::__vector_base.465" = type { %"struct.gl::Debug::Control"*, %"struct.gl::Debug::Control"*, %"class.std::__1::__compressed_pair.466" }
%"struct.gl::Debug::Control" = type <{ i32, i32, i32, [4 x i8], %"class.std::__1::vector.53", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.466" = type { %"struct.std::__1::__compressed_pair_elem.467" }
%"struct.std::__1::__compressed_pair_elem.467" = type { %"struct.gl::Debug::Control"* }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"struct.gl::Debug::Group"* }
%"class.angle::BitSetT.476" = type { i32 }
%"class.gl::GLES1State" = type <{ %"class.gl::State"*, %"class.angle::BitSetT", %"class.std::__1::vector.477", i8, i8, i8, i8, [4 x i8], %"class.std::__1::vector.485", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", %"class.angle::Vector", %"class.std::__1::vector.490", i32, i8, [3 x i8], %"class.angle::FixedVector", %"class.angle::FixedVector", %"class.std::__1::vector.505", %"class.std::__1::vector.512", %"struct.gl::MaterialParameters", %"struct.gl::LightModelParameters", %"class.std::__1::vector.519", %"struct.gl::FogParameters", i8, [3 x i8], %"struct.gl::PointParameters", i8, [3 x i8], float, i8, [7 x i8], %"class.std::__1::vector.528", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::vector.477" = type { %"class.std::__1::__vector_base.478" }
%"class.std::__1::__vector_base.478" = type { %"class.angle::BitSetT.479"*, %"class.angle::BitSetT.479"*, %"class.std::__1::__compressed_pair.480" }
%"class.angle::BitSetT.479" = type opaque
%"class.std::__1::__compressed_pair.480" = type { %"struct.std::__1::__compressed_pair_elem.481" }
%"struct.std::__1::__compressed_pair_elem.481" = type { %"class.angle::BitSetT.479"* }
%"class.std::__1::vector.485" = type { i64*, i64, %"class.std::__1::__compressed_pair.486" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.angle::Vector" = type { %"class.angle::VectorBase" }
%"class.angle::VectorBase" = type { [3 x float] }
%"class.std::__1::vector.490" = type { %"class.std::__1::__vector_base.491" }
%"class.std::__1::__vector_base.491" = type { %"struct.gl::TextureCoordF"*, %"struct.gl::TextureCoordF"*, %"class.std::__1::__compressed_pair.492" }
%"struct.gl::TextureCoordF" = type { float, float, float, float }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"struct.gl::TextureCoordF"* }
%"class.angle::FixedVector" = type { %"struct.std::__1::array.497", i64 }
%"struct.std::__1::array.497" = type { [16 x %"class.angle::Mat4"] }
%"class.angle::Mat4" = type { %"class.angle::Matrix" }
%"class.angle::Matrix" = type { %"class.std::__1::vector.498", i32, i32 }
%"class.std::__1::vector.498" = type { %"class.std::__1::__vector_base.499" }
%"class.std::__1::__vector_base.499" = type { float*, float*, %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { float* }
%"class.std::__1::vector.505" = type { %"class.std::__1::__vector_base.506" }
%"class.std::__1::__vector_base.506" = type { %"class.angle::FixedVector"*, %"class.angle::FixedVector"*, %"class.std::__1::__compressed_pair.507" }
%"class.std::__1::__compressed_pair.507" = type { %"struct.std::__1::__compressed_pair_elem.508" }
%"struct.std::__1::__compressed_pair_elem.508" = type { %"class.angle::FixedVector"* }
%"class.std::__1::vector.512" = type { %"class.std::__1::__vector_base.513" }
%"class.std::__1::__vector_base.513" = type { %"struct.gl::TextureEnvironmentParameters"*, %"struct.gl::TextureEnvironmentParameters"*, %"class.std::__1::__compressed_pair.514" }
%"struct.gl::TextureEnvironmentParameters" = type <{ i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"struct.angle::Color", float, float, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.514" = type { %"struct.std::__1::__compressed_pair_elem.515" }
%"struct.std::__1::__compressed_pair_elem.515" = type { %"struct.gl::TextureEnvironmentParameters"* }
%"struct.gl::MaterialParameters" = type { %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", float }
%"struct.gl::LightModelParameters" = type <{ %"struct.angle::Color", i8, [3 x i8] }>
%"class.std::__1::vector.519" = type { %"class.std::__1::__vector_base.520" }
%"class.std::__1::__vector_base.520" = type { %"struct.gl::LightParameters"*, %"struct.gl::LightParameters"*, %"class.std::__1::__compressed_pair.523" }
%"struct.gl::LightParameters" = type { i8, %"struct.angle::Color", %"struct.angle::Color", %"struct.angle::Color", %"class.angle::Vector.521", %"class.angle::Vector", float, float, float, float, float }
%"class.angle::Vector.521" = type { %"class.angle::VectorBase.522" }
%"class.angle::VectorBase.522" = type { [4 x float] }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.524" }
%"struct.std::__1::__compressed_pair_elem.524" = type { %"struct.gl::LightParameters"* }
%"struct.gl::FogParameters" = type { i8, float, float, float, %"struct.angle::Color" }
%"struct.gl::PointParameters" = type { float, float, float, %"class.angle::Vector", float }
%"class.std::__1::vector.528" = type { %"class.std::__1::__vector_base.529" }
%"class.std::__1::__vector_base.529" = type { %"struct.gl::ClipPlaneParameters"*, %"struct.gl::ClipPlaneParameters"*, %"class.std::__1::__compressed_pair.530" }
%"struct.gl::ClipPlaneParameters" = type { i8, %"class.angle::Vector.521" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"struct.gl::ClipPlaneParameters"* }
%"class.angle::BitSetT.535" = type { i32 }
%"class.angle::BitSetArray" = type { %"struct.std::__1::array.188" }
%"class.angle::BitSetT.170" = type { i8 }
%"class.gl::ErrorSet" = type { %"class.gl::Context"*, %"class.std::__1::set.67" }
%"class.angle::BitSetT.537" = type { i32 }
%"class.std::__1::unique_ptr.538" = type { %"class.std::__1::__compressed_pair.539" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"class.rx::ContextImpl"* }
%"class.rx::ContextImpl" = type { %"class.rx::GLImplFactory", %"class.gl::State"*, %"class.gl::MemoryProgramCache"*, %"class.gl::ErrorSet"* }
%"class.rx::GLImplFactory" = type { i32 (...)**, %"class.rx::SerialFactoryBase" }
%"class.rx::SerialFactoryBase" = type { i64 }
%"struct.gl::Extensions" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, float, i8, i8, i8, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i32, i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%"class.gl::BindingPointer.113" = type { %"class.angle::BindingPointer.114" }
%"class.angle::BindingPointer.114" = type { i32 (...)**, %"class.gl::Compiler"* }
%"class.gl::Compiler" = type { %"class.angle::RefCountObject", %"class.std::__1::unique_ptr.115", i32, i32, %struct.ShBuiltInResources, %"class.angle::PackedEnumMap.121" }
%"class.std::__1::unique_ptr.115" = type { %"class.std::__1::__compressed_pair.116" }
%"class.std::__1::__compressed_pair.116" = type { %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.rx::CompilerImpl"* }
%"class.rx::CompilerImpl" = type opaque
%struct.ShBuiltInResources = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i64 (i8*, i64)*, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.std::__1::array.64", %"struct.std::__1::array.64", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, float, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.angle::PackedEnumMap.121" = type { %"struct.std::__1::array.122" }
%"struct.std::__1::array.122" = type { [6 x %"class.std::__1::vector.123"] }
%"class.std::__1::vector.123" = type { %"class.std::__1::__vector_base.124" }
%"class.std::__1::__vector_base.124" = type { %"class.gl::ShCompilerInstance"*, %"class.gl::ShCompilerInstance"*, %"class.std::__1::__compressed_pair.125" }
%"class.gl::ShCompilerInstance" = type <{ i8*, i32, i8, [3 x i8] }>
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.gl::ShCompilerInstance"* }
%"struct.egl::Config" = type opaque
%"class.angle::PackedEnumMap.544" = type { %"struct.std::__1::array.545" }
%"struct.std::__1::array.545" = type { [11 x %"class.gl::BindingPointer.410"] }
%"class.gl::ResourceMap.546" = type { i64, %"class.gl::FenceNV"**, %"class.absl::flat_hash_map.547" }
%"class.gl::FenceNV" = type opaque
%"class.absl::flat_hash_map.547" = type { %"class.absl::container_internal::raw_hash_map.548" }
%"class.absl::container_internal::raw_hash_map.548" = type { %"class.absl::container_internal::raw_hash_set.549" }
%"class.absl::container_internal::raw_hash_set.549" = type { i8*, %"union.absl::container_internal::map_slot_type.550"*, i64, i64, %"class.absl::container_internal::CompressedTuple.551" }
%"union.absl::container_internal::map_slot_type.550" = type opaque
%"class.absl::container_internal::CompressedTuple.551" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.552" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.556" = type { i64, %"class.gl::Query"**, %"class.absl::flat_hash_map.557" }
%"class.absl::flat_hash_map.557" = type { %"class.absl::container_internal::raw_hash_map.558" }
%"class.absl::container_internal::raw_hash_map.558" = type { %"class.absl::container_internal::raw_hash_set.559" }
%"class.absl::container_internal::raw_hash_set.559" = type { i8*, %"union.absl::container_internal::map_slot_type.560"*, i64, i64, %"class.absl::container_internal::CompressedTuple.561" }
%"union.absl::container_internal::map_slot_type.560" = type opaque
%"class.absl::container_internal::CompressedTuple.561" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.562" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.566" = type { i64, %"class.gl::VertexArray"**, %"class.absl::flat_hash_map.567" }
%"class.absl::flat_hash_map.567" = type { %"class.absl::container_internal::raw_hash_map.568" }
%"class.absl::container_internal::raw_hash_map.568" = type { %"class.absl::container_internal::raw_hash_set.569" }
%"class.absl::container_internal::raw_hash_set.569" = type { i8*, %"union.absl::container_internal::map_slot_type.570"*, i64, i64, %"class.absl::container_internal::CompressedTuple.571" }
%"union.absl::container_internal::map_slot_type.570" = type opaque
%"class.absl::container_internal::CompressedTuple.571" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.572" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::ResourceMap.576" = type { i64, %"class.gl::TransformFeedback"**, %"class.absl::flat_hash_map.577" }
%"class.absl::flat_hash_map.577" = type { %"class.absl::container_internal::raw_hash_map.578" }
%"class.absl::container_internal::raw_hash_map.578" = type { %"class.absl::container_internal::raw_hash_set.579" }
%"class.absl::container_internal::raw_hash_set.579" = type { i8*, %"union.absl::container_internal::map_slot_type.580"*, i64, i64, %"class.absl::container_internal::CompressedTuple.581" }
%"union.absl::container_internal::map_slot_type.580" = type opaque
%"class.absl::container_internal::CompressedTuple.581" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.582" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.gl::HandleAllocator" = type <{ i32, i32, %"class.std::__1::vector.53", %"class.std::__1::vector.77", %"class.std::__1::vector.53", i8, [7 x i8] }>
%"class.std::__1::vector.77" = type { %"class.std::__1::__vector_base.78" }
%"class.std::__1::__vector_base.78" = type { %"struct.gl::HandleAllocator::HandleRange"*, %"struct.gl::HandleAllocator::HandleRange"*, %"class.std::__1::__compressed_pair.79" }
%"struct.gl::HandleAllocator::HandleRange" = type { i32, i32 }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"struct.gl::HandleAllocator::HandleRange"* }
%"class.std::__1::vector.586" = type { %"class.std::__1::__vector_base.587" }
%"class.std::__1::__vector_base.587" = type { i8**, i8**, %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.589" }
%"struct.std::__1::__compressed_pair_elem.589" = type { i8** }
%"class.std::__1::unique_ptr.593" = type { %"class.std::__1::__compressed_pair.594" }
%"class.std::__1::__compressed_pair.594" = type { %"struct.std::__1::__compressed_pair_elem.595" }
%"struct.std::__1::__compressed_pair_elem.595" = type { %"class.gl::GLES1Renderer"* }
%"class.gl::GLES1Renderer" = type opaque
%"class.egl::Surface" = type opaque
%"class.egl::Display" = type opaque
%"class.gl::MemoryProgramCache" = type opaque
%"class.gl::StateCache" = type <{ %"class.angle::BitSetT", %"class.angle::BitSetT", %"class.angle::BitSetT", i8, [7 x i8], i64, i64, i64, i64, i8, [7 x i8], %"class.angle::BitSetT.189", %"class.angle::BitSetArray", %"class.angle::PackedEnumMap.599", %"class.angle::PackedEnumMap.601", %"class.angle::PackedEnumMap.603", %"class.angle::PackedEnumMap.605", %"class.angle::PackedEnumMap.605", i8, [7 x i8] }>
%"class.angle::PackedEnumMap.599" = type { %"struct.std::__1::array.600" }
%"struct.std::__1::array.600" = type { [16 x i8] }
%"class.angle::PackedEnumMap.601" = type { %"struct.std::__1::array.602" }
%"struct.std::__1::array.602" = type { [12 x i8] }
%"class.angle::PackedEnumMap.603" = type { %"struct.std::__1::array.604" }
%"struct.std::__1::array.604" = type { [4 x i8] }
%"class.angle::PackedEnumMap.605" = type { %"struct.std::__1::array.606" }
%"struct.std::__1::array.606" = type { [19 x i32] }
%"class.angle::BitSetT.189" = type { i64 }
%"class.angle::BitSetT.536" = type { i64 }
%"class.std::__1::vector.356" = type { %"class.std::__1::__vector_base.357" }
%"class.std::__1::__vector_base.357" = type { %"class.angle::ObserverBinding"*, %"class.angle::ObserverBinding"*, %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.angle::ObserverBinding"* }
%struct.Optional.607 = type { i8, %"class.angle::ScratchBuffer" }
%"class.angle::ScratchBuffer" = type { i32, i32, %"class.angle::MemoryBuffer" }
%"class.angle::MemoryBuffer" = type { i64, i8* }
%"class.std::__1::shared_ptr.608" = type { %"class.angle::WorkerThreadPool"*, %"class.std::__1::__shared_weak_count"* }
%"class.angle::WorkerThreadPool" = type { i32 (...)** }
%"class.std::__1::unique_ptr.609" = type { %"class.std::__1::__compressed_pair.610" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.611" }
%"struct.std::__1::__compressed_pair_elem.611" = type { %"class.angle::FrameCapture"* }
%"class.angle::FrameCapture" = type opaque
%"class.gl::MockOverlay" = type { %"class.gl::overlay::Mock" }
%"class.gl::overlay::Mock" = type { i8 }
%"class.rx::StateManagerGL" = type { %"class.rx::FunctionsGL"*, %"struct.angle::FeaturesGL"*, i32, i32, %"class.std::__1::vector.397", i32, %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"*, %"class.angle::PackedEnumMap.642", %"class.angle::PackedEnumMap.644", i64, %"class.angle::PackedEnumMap.653", %"struct.std::__1::array.190", %"class.std::__1::vector.655", i32, %"class.rx::TransformFeedbackGL"*, %"class.angle::PackedEnumMap.662", %"class.angle::PackedEnumMap.662", %"struct.gl::ContextID", i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.std::__1::vector.53", i32, i8, %"struct.gl::Rectangle", %"struct.gl::Rectangle", float, float, %"struct.angle::Color", %"class.gl::BlendStateExt", i8, i8, i8, float, i8, i8, %"struct.std::__1::array.392", i8, i32, i8, i8, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8, i8, i32, i8, float, float, i8, float, i8, i32, %"struct.angle::Color", float, i32, i8, i8, i8, i8, i8, i8, i8, i32, i8, i32, %"class.angle::BitSetT.476", i64, %"class.angle::BitSetT.189", %"class.angle::BitSetT" }
%"class.rx::FunctionsGL" = type { %"class.rx::DispatchTableGL", %"struct.gl::Version", i32, i32, %"class.std::__1::vector.148" }
%"class.rx::DispatchTableGL" = type { i32 (...)**, void (i32, i32)*, void (i32)*, void (float, float, float, float)*, void (double)*, void (i32)*, void (i8, i8, i8, i8)*, void (i32)*, void (i32)*, void (i8)*, void (double, double)*, void (i32)*, void (i32)*, void (i32)*, void ()*, void ()*, void (i32)*, void (i32, i8*)*, void (i32, double*)*, i32 ()*, void (i32, float*)*, void (i32, i32*)*, i8* (i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32)*, i8 (i32)*, void (float)*, void (i32)*, void (i32, float)*, void (i32, i32)*, void (float)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i8*)*, void (i32, i32*)*, i8 (i32)*, void (float, float)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (float, float, float, float)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32, i32*)*, i8 (i32)*, void (i32, i32)*, i8 (i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i8*)*, void (float, i8)*, void (i32, i32, i32, i32)*, void (i32, i32*, i32*, i32)*, void (i32, i32*, i32, i8**, i32)*, void (i32, float)*, void (i32, float*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i8**)*, void (i32, i64, i64, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, i8 (i32)*, i8 (i32)*, i8* (i32, i32)*, i8 (i32)*, void (i32, i32)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32)*, i32 ()*, i32 (i32)*, void (i32)*, void (i32)*, void (i32, i32)*, void (i32)*, void (i32, i32*)*, void (i32)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*, i32*)*, i32 (i32, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, i32 (i32, i8*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i8**)*, void (i32, i32, double*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, i8 (i32)*, i8 (i32)*, void (i32)*, void (i32, i32, i8**, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, float)*, void (i32, i32, float*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, float, float, float, float)*, void (i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32)*, void (i32)*, void (i32, double)*, void (i32, double*)*, void (i32, float)*, void (i32, float*)*, void (i32, i16)*, void (i32, i16*)*, void (i32, double, double)*, void (i32, double*)*, void (i32, float, float)*, void (i32, float*)*, void (i32, i16, i16)*, void (i32, i16*)*, void (i32, double, double, double)*, void (i32, double*)*, void (i32, float, float, float)*, void (i32, float*)*, void (i32, i16, i16, i16)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i8, i8, i8, i8)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, double, double, double, double)*, void (i32, double*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32*)*, void (i32, i16, i16, i16, i16)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32, i8, float*)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (i32)*, void (i32, i32)*, void (i32, i32, float, i32)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i8, i8, i8, i8)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32)*, void ()*, void ()*, void (i32, i64, i64)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32)*, void (i32, i32, i8*)*, i32 (i32, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, i8* (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, i8 (i32, i32)*, i8 (i32)*, i8 (i32)*, i8 (i32)*, i8* (i32, i64, i64, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i8**, i32)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i8*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i8*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i16*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*, i8*)*, void (i32, i32, i32*, i32, i32*)*, i32 (i32, i8*)*, void (i32, i32, i8**, i32*)*, void (i32)*, void (i32, i32, i32)*, void (i32, i32, i32)*, i32 (%struct.__GLsync*, i32, i64)*, void (%struct.__GLsync*)*, void (i32, i32, i32, i8*, i32)*, void (i32, i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i32, i32, i8*, i32)*, %struct.__GLsync* (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i64*)*, void (i32, i32, i64*)*, void (i32, i64*)*, void (i32, i32, float*)*, void (%struct.__GLsync*, i32, i32, i32*, i32*)*, i8 (%struct.__GLsync*)*, void (i32, i32*, i32, i8**, i32, i32*)*, void (i32)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (%struct.__GLsync*, i32, i64)*, void (i32, i32, i32, i8*)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, i32 (i32, i8*)*, void (i32, i32, i64*)*, void (i32, i32, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, i8 (i32)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i8, i32)*, void (i32, i32, i8, i32*)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32*)*, void (i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, i32 (i32, i32, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, double*)*, i8 (i32)*, void (float)*, void (i32, float*)*, void (i32, i32)*, void ()*, void ()*, void (i32, double)*, void (i32, i32, double*)*, void (i32, double, double)*, void (i32, i32, double*)*, void (i32, double, double, double)*, void (i32, i32, double*)*, void (i32, double, double, double, double)*, void (i32, i32, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i8, double*)*, void (i32, i32, i32*)*, void (i32, i32)*, void (i32)*, void (float)*, i32 (i32, i32, i8**)*, void (i32, i32*)*, void (i32, i32, double*)*, void (i32, double, double)*, void (float, float)*, void (i32, i32*)*, void (i32, i32, double*)*, void (i32, i32, float*)*, void (i32, i32, i32*, i32*, i8*)*, void (i32, i32, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32*)*, void (i32, i32, double*)*, i8 (i32)*, void (i32, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32, i32, double)*, void (i32, i32, i32, double*)*, void (i32, i32, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, double, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, double, double, double, double)*, void (i32, i32, i32, double*)*, void (i32, i32, float, float, float, float)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void (i32, i32, i32, i8, double*)*, void (i32, i32, i32, i8, float*)*, void ()*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*, i32, i8*, i32)*, void (i32, i32, i32)*, void (i32)*, void (i32, double)*, void (i32, double*)*, void (i32, double, double)*, void (i32, double*)*, void (i32, double, double, double)*, void (i32, double*)*, void (i32, double, double, double, double)*, void (i32, double*)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, float*)*, void (i32, float, float, float, float)*, void (i32, float*)*, void (i32, i32, i32, i8, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i8*, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32, i32*)*, void (i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i64, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32)*, void (void (i32, i32, i32, i32, i32, i8*, i8*)*, i8*)*, void (i32, i32, i32, i32, i32*, i8)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32)*, void (i64)*, void (i32, i32, i32)*, i32 (i32, i32, i32*, i32*, i32*, i32*, i32*, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i64*)*, void (i32, i32, i32, i32*, i8*)*, void (i8*, i32, i32*, i8*)*, void (i32, i8**)*, void (i32, i32, i32, i32*)*, i32 (i32, i32, i8*)*, i32 (i32, i32, i8*)*, i32 (i32, i32, i8*)*, void (i32, i32, i32, i32, i32*, i8*)*, void (i32, i32, i32, i32, i32*, i32, i32*, i32*)*, void (i32)*, void (i32, i64, i64)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i8*, i32, i32)*, void (i32, i32, i8*, i32, i32)*, void (i32, i32, i32, i8*)*, void (i8*, i32, i8*)*, void ()*, void (i32, i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*, i64*, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i64*, i32*)*, void (i32, i64, i8*, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, i32 (i32, i32)*, void (i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i32, i32, i8*)*, void (i32, i32, i32, float, i32)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i64, i64, i64)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32)*, void (i32, i32)*, void (i32, i64, i64)*, void (i32)*, void (i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, i32 ()*, void (i32, i32, i64*)*, void (i32, i32, i32*)*, void (i32, i32, i8**)*, void (i32, i64, i64, i8*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, float*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i64*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i64*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, double*)*, void (i32, i32, i32, float*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i32*, i32, i32, i32, i32)*, i8* (i32, i32)*, i8* (i32, i64, i64, i32)*, void (i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i8*, i32)*, void (i32, i64, i64, i8*)*, void (i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i32, i8*)*, void ()*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, float)*, void (i32, i32, float*)*, void (i32, i32, i32)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32, i8)*, void (i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, i8 (i32)*, void (i32, i32, i32)*, void (i32, i32, i32, i32, i8, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32, i32)*, void (i32, i32)*, void (i32, i32, i32, i64, i32)*, void (i32, i32, i32, i32*, i64*, i32*)*, void ()*, void (float, float, float, float, float, float, float, float)*, void (i32)*, void (i32, i8*)*, void ()*, void (i32, i8*)*, void (i32, i32, i32*)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i64, i32, i64)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i32*)*, void (i32, i32, i8*)*, void (i32, i8*)*, i8 (i32)*, void (i32, i32, i32*)*, void (i32, i64, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i8, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i8, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i8, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i32, i64)*, void (i32, i32, i32, i32, i32, i32, i8, i32, i64)*, void (i32, i64, i32, i32)*, void (i32, i64, i32, i8*)*, void (i32, i64, i32, i8*)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32, i32*)*, void (i32, i32*)*, void (i32, i32, i64*)*, i8 (i32)*, void (i32, i32, i64*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32*, i32, i32*, i32*)*, void (i32, i32, i32)*, void (i32, i32, i8*)*, void (i32, i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32)*, void (i32)*, void (i32, i32, i32, i32, i32, i32, i32, i32, i32, i32)*, void (i32, i32, i32, i32, i32, i32*)*, void (i32, i8*)*, void (i32, i8*)*, void (i32, i32, i32)*, void (i32, i32, i32, i64, i64)*, void (i32, i32, i32, i32, i32, i32)* }
%struct.__GLsync = type opaque
%"struct.angle::FeaturesGL" = type { %"struct.angle::FeatureSetBase", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature", %"struct.angle::Feature" }
%"struct.angle::FeatureSetBase" = type { %"class.std::__1::map.631" }
%"class.std::__1::map.631" = type { %"class.std::__1::__tree.632" }
%"class.std::__1::__tree.632" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.633", %"class.std::__1::__compressed_pair.637" }
%"class.std::__1::__compressed_pair.633" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.637" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.angle::Feature" = type { i8*, i32, i8*, i8*, i8, i8* }
%"class.angle::PackedEnumMap.642" = type { %"struct.std::__1::array.643" }
%"struct.std::__1::array.643" = type { [13 x i32] }
%"class.angle::PackedEnumMap.644" = type { %"struct.std::__1::array.645" }
%"struct.std::__1::array.645" = type { [13 x %"class.std::__1::vector.646"] }
%"class.std::__1::vector.646" = type { %"class.std::__1::__vector_base.647" }
%"class.std::__1::__vector_base.647" = type { %"struct.rx::StateManagerGL::IndexedBufferBinding"*, %"struct.rx::StateManagerGL::IndexedBufferBinding"*, %"class.std::__1::__compressed_pair.648" }
%"struct.rx::StateManagerGL::IndexedBufferBinding" = type <{ i64, i64, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.648" = type { %"struct.std::__1::__compressed_pair_elem.649" }
%"struct.std::__1::__compressed_pair_elem.649" = type { %"struct.rx::StateManagerGL::IndexedBufferBinding"* }
%"class.angle::PackedEnumMap.653" = type { %"struct.std::__1::array.654" }
%"struct.std::__1::array.654" = type { [11 x %"struct.std::__1::array.190"] }
%"class.std::__1::vector.655" = type { %"class.std::__1::__vector_base.656" }
%"class.std::__1::__vector_base.656" = type { %"struct.rx::StateManagerGL::ImageUnitBinding"*, %"struct.rx::StateManagerGL::ImageUnitBinding"*, %"class.std::__1::__compressed_pair.657" }
%"struct.rx::StateManagerGL::ImageUnitBinding" = type { i32, i32, i8, i32, i32, i32 }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"struct.rx::StateManagerGL::ImageUnitBinding"* }
%"class.rx::TransformFeedbackGL" = type opaque
%"class.angle::PackedEnumMap.662" = type { %"struct.std::__1::array.663" }
%"struct.std::__1::array.663" = type { [7 x %"class.rx::QueryGL"*] }
%"class.rx::QueryGL" = type opaque
%"class.rx::BufferGL" = type <{ %"class.rx::BufferImpl", i8, [7 x i8], i64, i64, %"class.angle::MemoryBuffer", i64, i32, [4 x i8] }>
%"class.rx::ContextGL" = type <{ %"class.rx::ContextImpl", %"class.std::__1::shared_ptr.664", i32, [4 x i8] }>
%"class.std::__1::shared_ptr.664" = type { %"class.rx::RendererGL"*, %"class.std::__1::__shared_weak_count"* }
%"class.rx::RendererGL" = type <{ i32 (...)**, %"struct.gl::Version", %"class.std::__1::unique_ptr.665", %"class.rx::StateManagerGL"*, %"class.rx::BlitGL"*, %"class.rx::ClearMultiviewGL"*, i8, i8, [6 x i8], %"struct.gl::Caps", %"class.gl::TextureCapsMap", %"struct.gl::Extensions", %"struct.gl::Limitations", i32, [4 x i8], %"class.absl::flat_hash_map.671", %"class.std::__1::list", %"class.std::__1::mutex", i8, [7 x i8], %"struct.angle::FeaturesGL", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.665" = type { %"class.std::__1::__compressed_pair.666" }
%"class.std::__1::__compressed_pair.666" = type { %"struct.std::__1::__compressed_pair_elem.667" }
%"struct.std::__1::__compressed_pair_elem.667" = type { %"class.rx::FunctionsGL"* }
%"class.rx::BlitGL" = type opaque
%"class.rx::ClearMultiviewGL" = type opaque
%"class.absl::flat_hash_map.671" = type { %"class.absl::container_internal::raw_hash_map.672" }
%"class.absl::container_internal::raw_hash_map.672" = type { %"class.absl::container_internal::raw_hash_set.673" }
%"class.absl::container_internal::raw_hash_set.673" = type { i8*, %"union.absl::container_internal::map_slot_type.674"*, i64, i64, %"class.absl::container_internal::CompressedTuple.675" }
%"union.absl::container_internal::map_slot_type.674" = type opaque
%"class.absl::container_internal::CompressedTuple.675" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.676" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.676" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.686" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.686" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"class.std::__1::mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.gl::LogMessage" = type { i8*, i8*, i32, i32, %"class.std::__1::basic_ostringstream" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED2Ev = comdat any

$_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED0Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN2gl14BindingPointerINS_6BufferEED0Ev = comdat any

$_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE = comdat any

$_ZTVN2gl14BindingPointerINS_6BufferEEE = comdat any

@_ZTVN2rx13VertexArrayGLE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (i32 (%"class.rx::VertexArrayGL"*, %"class.gl::Context"*, %"class.angle::BitSetT.22"*, %"struct.std::__1::array.23"*, %"struct.std::__1::array.25"*)* @_ZN2rx13VertexArrayGL9syncStateEPKN2gl7ContextERKN5angle7BitSetTILm50EmmEEPNSt3__15arrayINS6_ILm5EmmEELm16EEEPNSB_INS6_ILm2EmmEELm16EEE to i8*), i8* bitcast (void (%"class.rx::VertexArrayGL"*, %"class.gl::Context"*)* @_ZN2rx13VertexArrayGL7destroyEPKN2gl7ContextE to i8*), i8* bitcast (void (%"class.rx::VertexArrayGL"*)* @_ZN2rx13VertexArrayGLD2Ev to i8*), i8* bitcast (void (%"class.rx::VertexArrayGL"*)* @_ZN2rx13VertexArrayGLD0Ev to i8*)] }, align 8
@.str = private unnamed_addr constant [50 x i8] c"Failed to unmap the client data streaming buffer.\00", align 1
@.str.1 = private unnamed_addr constant [67 x i8] c"../../third_party/angle/src/libANGLE/renderer/gl/VertexArrayGL.cpp\00", align 1
@__func__._ZNK2rx13VertexArrayGL16streamAttributesEPKN2gl7ContextERKN5angle7BitSetTILm16EmmEEiRKNS1_10IndexRangeEb = private unnamed_addr constant [17 x i8] c"streamAttributes\00", align 1
@.str.2 = private unnamed_addr constant [15 x i8] c"mVertexArrayID\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"GL_VERTEX_ARRAY_BINDING\00", align 1
@.str.4 = private unnamed_addr constant [33 x i8] c"mNativeState->elementArrayBuffer\00", align 1
@.str.5 = private unnamed_addr constant [32 x i8] c"GL_ELEMENT_ARRAY_BUFFER_BINDING\00", align 1
@__FUNCTION__._ZNK2rx13VertexArrayGL13validateStateEPKN2gl7ContextE = private unnamed_addr constant [14 x i8] c"validateState\00", align 1
@.str.6 = private unnamed_addr constant [34 x i8] c"mNativeState->attributes.size() (\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c") > GL_MAX_VERTEX_ATTRIBS (\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.9 = private unnamed_addr constant [33 x i8] c"mNativeState->attributes.enabled\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"GL_VERTEX_ATTRIB_ARRAY_ENABLED\00", align 1
@.str.11 = private unnamed_addr constant [50 x i8] c"mNativeState->attributes.format->vertexAttribType\00", align 1
@.str.12 = private unnamed_addr constant [28 x i8] c"GL_VERTEX_ATTRIB_ARRAY_TYPE\00", align 1
@.str.13 = private unnamed_addr constant [31 x i8] c"attribute.format->channelCount\00", align 1
@.str.14 = private unnamed_addr constant [28 x i8] c"GL_VERTEX_ATTRIB_ARRAY_SIZE\00", align 1
@.str.15 = private unnamed_addr constant [27 x i8] c"attribute.format->isNorm()\00", align 1
@.str.16 = private unnamed_addr constant [34 x i8] c"GL_VERTEX_ATTRIB_ARRAY_NORMALIZED\00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"attribute.format->isPureInt()\00", align 1
@.str.18 = private unnamed_addr constant [31 x i8] c"GL_VERTEX_ATTRIB_ARRAY_INTEGER\00", align 1
@.str.19 = private unnamed_addr constant [25 x i8] c"attribute.relativeOffset\00", align 1
@.str.20 = private unnamed_addr constant [33 x i8] c"GL_VERTEX_ATTRIB_RELATIVE_OFFSET\00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"attribute.bindingIndex\00", align 1
@.str.22 = private unnamed_addr constant [25 x i8] c"GL_VERTEX_ATTRIB_BINDING\00", align 1
@.str.23 = private unnamed_addr constant [15 x i8] c"binding.buffer\00", align 1
@.str.24 = private unnamed_addr constant [38 x i8] c"GL_VERTEX_ATTRIB_ARRAY_BUFFER_BINDING\00", align 1
@.str.25 = private unnamed_addr constant [15 x i8] c"binding.stride\00", align 1
@.str.26 = private unnamed_addr constant [30 x i8] c"GL_VERTEX_ATTRIB_ARRAY_STRIDE\00", align 1
@.str.27 = private unnamed_addr constant [16 x i8] c"binding.divisor\00", align 1
@.str.28 = private unnamed_addr constant [31 x i8] c"GL_VERTEX_ATTRIB_ARRAY_DIVISOR\00", align 1
@_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.angle::BindingPointer"*)* @_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED2Ev to i8*), i8* bitcast (void (%"class.angle::BindingPointer"*)* @_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED0Ev to i8*)] }, comdat, align 8
@_ZN5angle16gFormatInfoTableE = external global [0 x %"struct.angle::Format"], align 8
@__FUNCTION__._ZN2rx12_GLOBAL__N_130ValidateStateHelperGetIntegervEPKNS_11FunctionsGLEjjPKcS5_ = private unnamed_addr constant [31 x i8] c"ValidateStateHelperGetIntegerv\00", align 1
@.str.29 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c") != \00", align 1
@__FUNCTION__._ZN2rx12_GLOBAL__N_136ValidateStateHelperGetVertexAttribivEPKNS_11FunctionsGLEijjPKcS5_ = private unnamed_addr constant [37 x i8] c"ValidateStateHelperGetVertexAttribiv\00", align 1
@.str.31 = private unnamed_addr constant [2 x i8] c"[\00", align 1
@.str.32 = private unnamed_addr constant [4 x i8] c"] (\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZTVN2gl14BindingPointerINS_6BufferEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.angle::BindingPointer"*)* @_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED2Ev to i8*), i8* bitcast (void (%"class.gl::BindingPointer"*)* @_ZN2gl14BindingPointerINS_6BufferEED0Ev to i8*)] }, comdat, align 8
@switch.table._ZNK2rx13VertexArrayGL13validateStateEPKN2gl7ContextE = private unnamed_addr constant [5 x i32] [i32 33640, i32 36193, i32 36255, i32 36342, i32 36343], align 4

@_ZN2rx13VertexArrayGLC1ERKN2gl16VertexArrayStateEj = hidden unnamed_addr alias void (%"class.rx::VertexArrayGL"*, %"class.gl::VertexArrayState"*, i32), void (%"class.rx::VertexArrayGL"*, %"class.gl::VertexArrayState"*, i32)* @_ZN2rx13VertexArrayGLC2ERKN2gl16VertexArrayStateEj
@_ZN2rx13VertexArrayGLC1ERKN2gl16VertexArrayStateEjPNS_18VertexArrayStateGLE = hidden unnamed_addr alias void (%"class.rx::VertexArrayGL"*, %"class.gl::VertexArrayState"*, i32, %"struct.rx::VertexArrayStateGL"*), void (%"class.rx::VertexArrayGL"*, %"class.gl::VertexArrayState"*, i32, %"struct.rx::VertexArrayStateGL"*)* @_ZN2rx13VertexArrayGLC2ERKN2gl16VertexArrayStateEjPNS_18VertexArrayStateGLE
@_ZN2rx13VertexArrayGLD1Ev = hidden unnamed_addr alias void (%"class.rx::VertexArrayGL"*), void (%"class.rx::VertexArrayGL"*)* @_ZN2rx13VertexArrayGLD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13VertexArrayGLC2ERKN2gl16VertexArrayStateEj(%"class.rx::VertexArrayGL"*, %"class.gl::VertexArrayState"* dereferenceable(168), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 0, i32 1
  store %"class.gl::VertexArrayState"* %1, %"class.gl::VertexArrayState"** %5, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2rx13VertexArrayGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %6 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 1
  store i32 %2, i32* %6, align 8
  %7 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 2
  store i32 1, i32* %7, align 4
  %8 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 3, i32 0
  store i64 0, i64* %8, align 8
  %9 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 4
  store i8 1, i8* %9, align 8
  %10 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 5
  %11 = tail call i8* @_Znwm(i64 920) #12
  %12 = bitcast i8* %11 to %"struct.rx::VertexArrayStateGL"*
  %13 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %1, i64 0, i32 1
  %14 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %1, i64 0, i32 1, i32 0, i32 1
  %15 = bitcast %"struct.gl::VertexAttribute"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.std::__1::vector"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = sdiv exact i64 %19, 48
  %21 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %1, i64 0, i32 3
  %22 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %1, i64 0, i32 3, i32 0, i32 1
  %23 = bitcast %"class.gl::VertexBinding"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.std::__1::vector.14"* %21 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %24, %26
  %28 = sdiv exact i64 %27, 40
  tail call void @_ZN2rx18VertexArrayStateGLC1Emm(%"struct.rx::VertexArrayStateGL"* nonnull %12, i64 %20, i64 %28) #13
  %29 = bitcast %"struct.rx::VertexArrayStateGL"** %10 to i8**
  store i8* %11, i8** %29, align 8
  %30 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 6, i32 0, i32 0
  %31 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 6, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %31, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %32 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 0, i32 0, i32 0
  %33 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 0, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %33, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %34 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 1, i32 0, i32 0
  %35 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 1, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %35, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %36 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 2, i32 0, i32 0
  %37 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 2, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %37, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %38 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 3, i32 0, i32 0
  %39 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 3, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %39, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %40 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 4, i32 0, i32 0
  %41 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 4, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %41, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %42 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 5, i32 0, i32 0
  %43 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 5, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %43, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %44 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 6, i32 0, i32 0
  %45 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 6, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %45, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %46 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 7, i32 0, i32 0
  %47 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 7, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %47, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %46, align 8
  %48 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 8, i32 0, i32 0
  %49 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 8, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %49, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %50 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 9, i32 0, i32 0
  %51 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 9, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %51, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %50, align 8
  %52 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 10, i32 0, i32 0
  %53 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 10, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %53, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %52, align 8
  %54 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 11, i32 0, i32 0
  %55 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 11, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %55, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %54, align 8
  %56 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 12, i32 0, i32 0
  %57 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 12, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %57, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %58 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 13, i32 0, i32 0
  %59 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 13, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %59, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %58, align 8
  %60 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 14, i32 0, i32 0
  %61 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 14, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %61, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %60, align 8
  %62 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 15, i32 0, i32 0
  %63 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 15, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %63, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %64 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 8
  store i64 0, i64* %64, align 8
  %65 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 9
  store i32 0, i32* %65, align 8
  %66 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 10
  store i64 0, i64* %66, align 8
  %67 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 11
  store i32 0, i32* %67, align 8
  %68 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 12, i32 0
  %69 = bitcast i64* %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 80, i1 false)
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

declare void @_ZN2rx18VertexArrayStateGLC1Emm(%"struct.rx::VertexArrayStateGL"*, i64, i64) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN2rx13VertexArrayGLC2ERKN2gl16VertexArrayStateEjPNS_18VertexArrayStateGLE(%"class.rx::VertexArrayGL"*, %"class.gl::VertexArrayState"* dereferenceable(168), i32, %"struct.rx::VertexArrayStateGL"*) unnamed_addr #4 align 2 {
  %5 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 0, i32 1
  store %"class.gl::VertexArrayState"* %1, %"class.gl::VertexArrayState"** %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2rx13VertexArrayGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %7 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 1
  store i32 %2, i32* %7, align 8
  %8 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 2
  store i32 1, i32* %8, align 4
  %9 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 3, i32 0
  store i64 0, i64* %9, align 8
  %10 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 4
  store i8 0, i8* %10, align 8
  %11 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 5
  store %"struct.rx::VertexArrayStateGL"* %3, %"struct.rx::VertexArrayStateGL"** %11, align 8
  %12 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 6, i32 0, i32 0
  %13 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 6, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %13, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %14 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 0, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %15, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %16 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 1, i32 0, i32 0
  %17 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 1, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %17, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %18 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 2, i32 0, i32 0
  %19 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 2, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %19, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %20 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 3, i32 0, i32 0
  %21 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 3, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %21, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %20, align 8
  %22 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 4, i32 0, i32 0
  %23 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 4, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %23, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %24 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 5, i32 0, i32 0
  %25 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 5, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %25, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %24, align 8
  %26 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 6, i32 0, i32 0
  %27 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 6, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %27, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %26, align 8
  %28 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 7, i32 0, i32 0
  %29 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 7, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %29, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %28, align 8
  %30 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 8, i32 0, i32 0
  %31 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 8, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %31, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %32 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 9, i32 0, i32 0
  %33 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 9, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %33, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %32, align 8
  %34 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 10, i32 0, i32 0
  %35 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 10, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %35, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %36 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 11, i32 0, i32 0
  %37 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 11, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %37, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %36, align 8
  %38 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 12, i32 0, i32 0
  %39 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 12, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %39, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %40 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 13, i32 0, i32 0
  %41 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 13, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %41, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %42 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 14, i32 0, i32 0
  %43 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 14, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %43, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %42, align 8
  %44 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 15, i32 0, i32 0
  %45 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 15, i32 0, i32 1
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %45, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN2gl14BindingPointerINS_6BufferEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %46 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 8
  store i64 0, i64* %46, align 8
  %47 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 9
  store i32 0, i32* %47, align 8
  %48 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 10
  store i64 0, i64* %48, align 8
  %49 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 11
  store i32 0, i32* %49, align 8
  %50 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 12, i32 0
  %51 = bitcast i64* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 80, i1 false)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2rx13VertexArrayGLD2Ev(%"class.rx::VertexArrayGL"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2rx13VertexArrayGLE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 15, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 14, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 13, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 12, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 11, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 10, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 9, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 8, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 7, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 6, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 5, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 4, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 3, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 2, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 6, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %19, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED2Ev(%"class.angle::BindingPointer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.angle::BindingPointer", %"class.angle::BindingPointer"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13VertexArrayGLD0Ev(%"class.rx::VertexArrayGL"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.rx::VertexArrayGL"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13VertexArrayGL7destroyEPKN2gl7ContextE(%"class.rx::VertexArrayGL"*, %"class.gl::Context"*) unnamed_addr #0 align 2 {
  %3 = tail call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %4 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 4
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  tail call void @_ZN2rx14StateManagerGL17deleteVertexArrayEj(%"class.rx::StateManagerGL"* %3, i32 %9) #13
  br label %10

10:                                               ; preds = %2, %7
  %11 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 2
  store i32 1, i32* %12, align 4
  %13 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 6, i32 0, i32 1
  %14 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %13, align 8
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %13, align 8
  %15 = icmp eq %"class.gl::Buffer"* %14, null
  br i1 %15, label %30, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %14, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %14, i64 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %19, -1
  store i64 %20, i64* %18, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %30

22:                                               ; preds = %16
  %23 = bitcast %"class.gl::Buffer"* %14 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %24 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %23, align 8
  %25 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %24, align 8
  tail call void %25(%"class.angle::RefCountObject"* %17, %"class.gl::Context"* %1) #13
  %26 = bitcast %"class.gl::Buffer"* %14 to void (%"class.angle::RefCountObject"*)***
  %27 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %27, i64 2
  %29 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %28, align 8
  tail call void %29(%"class.angle::RefCountObject"* nonnull %17) #13
  br label %30

30:                                               ; preds = %10, %16, %22
  %31 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 0
  %32 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 16
  br label %42

33:                                               ; preds = %61
  %34 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 9
  %35 = load i32, i32* %34, align 8
  tail call void @_ZN2rx14StateManagerGL12deleteBufferEj(%"class.rx::StateManagerGL"* %3, i32 %35) #13
  %36 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 8
  store i64 0, i64* %36, align 8
  store i32 0, i32* %34, align 8
  %37 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 11
  %38 = load i32, i32* %37, align 8
  tail call void @_ZN2rx14StateManagerGL12deleteBufferEj(%"class.rx::StateManagerGL"* %3, i32 %38) #13
  %39 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 10
  store i64 0, i64* %39, align 8
  store i32 0, i32* %37, align 8
  %40 = load i8, i8* %4, align 8, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %96, label %64

42:                                               ; preds = %30, %61
  %43 = phi %"class.gl::BindingPointer"* [ %31, %30 ], [ %62, %61 ]
  %44 = getelementptr inbounds %"class.gl::BindingPointer", %"class.gl::BindingPointer"* %43, i64 0, i32 0, i32 1
  %45 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %44, align 8
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %44, align 8
  %46 = icmp eq %"class.gl::Buffer"* %45, null
  br i1 %46, label %61, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %45, i64 0, i32 0, i32 0
  %49 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %45, i64 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = add i64 %50, -1
  store i64 %51, i64* %49, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %53, label %61

53:                                               ; preds = %47
  %54 = bitcast %"class.gl::Buffer"* %45 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %55 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %54, align 8
  %56 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %55, align 8
  tail call void %56(%"class.angle::RefCountObject"* %48, %"class.gl::Context"* %1) #13
  %57 = bitcast %"class.gl::Buffer"* %45 to void (%"class.angle::RefCountObject"*)***
  %58 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %58, i64 2
  %60 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %59, align 8
  tail call void %60(%"class.angle::RefCountObject"* nonnull %48) #13
  br label %61

61:                                               ; preds = %42, %47, %53
  %62 = getelementptr inbounds %"class.gl::BindingPointer", %"class.gl::BindingPointer"* %43, i64 1
  %63 = icmp eq %"class.gl::BindingPointer"* %62, %32
  br i1 %63, label %33, label %42

64:                                               ; preds = %33
  %65 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 5
  %66 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %65, align 8
  %67 = icmp eq %"struct.rx::VertexArrayStateGL"* %66, null
  br i1 %67, label %96, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %66, i64 0, i32 2, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %80, label %72

72:                                               ; preds = %68, %72
  %73 = phi i64 [ %78, %72 ], [ %70, %68 ]
  %74 = add i64 %73, -1
  store i64 %74, i64* %69, align 8
  %75 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %66, i64 0, i32 2, i32 0, i32 0, i64 %74, i32 0
  store i32 16, i32* %75, align 8
  %76 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %66, i64 0, i32 2, i32 0, i32 0, i64 %74, i32 1
  %77 = bitcast i32* %76 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %77, i8 0, i64 16, i1 false) #13
  %78 = load i64, i64* %69, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %72

80:                                               ; preds = %72, %68
  %81 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %66, i64 0, i32 1, i32 1
  %82 = load i64, i64* %81, align 8
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %94, label %84

84:                                               ; preds = %80, %84
  %85 = phi i64 [ %92, %84 ], [ %82, %80 ]
  %86 = add i64 %85, -1
  store i64 %86, i64* %81, align 8
  %87 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %66, i64 0, i32 1, i32 0, i32 0, i64 %86, i32 0
  store i8 0, i8* %87, align 8
  %88 = getelementptr inbounds i8, i8* %87, i64 1
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %88, i8 0, i64 7, i1 false) #13
  %89 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %66, i64 0, i32 1, i32 0, i32 0, i64 %86, i32 1
  store %"struct.angle::Format"* getelementptr inbounds ([0 x %"struct.angle::Format"], [0 x %"struct.angle::Format"]* @_ZN5angle16gFormatInfoTableE, i64 0, i64 156), %"struct.angle::Format"** %89, align 8
  %90 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %66, i64 0, i32 1, i32 0, i32 0, i64 %86, i32 2
  %91 = bitcast i8** %90 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 16, i1 false) #13
  %92 = load i64, i64* %81, align 8
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %84

94:                                               ; preds = %84, %80
  %95 = bitcast %"struct.rx::VertexArrayStateGL"* %66 to i8*
  tail call void @_ZdlPv(i8* %95) #12
  br label %96

96:                                               ; preds = %33, %64, %94
  %97 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 5
  store %"struct.rx::VertexArrayStateGL"* null, %"struct.rx::VertexArrayStateGL"** %97, align 8
  ret void
}

declare %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"*) local_unnamed_addr #2

declare void @_ZN2rx14StateManagerGL17deleteVertexArrayEj(%"class.rx::StateManagerGL"*, i32) local_unnamed_addr #2

declare void @_ZN2rx14StateManagerGL12deleteBufferEj(%"class.rx::StateManagerGL"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2rx13VertexArrayGL18syncClientSideDataEPKN2gl7ContextERKN5angle7BitSetTILm16EmmEEiii(%"class.rx::VertexArrayGL"*, %"class.gl::Context"*, %"class.angle::BitSetT"* nocapture readnone dereferenceable(8), i32, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = tail call i32 @_ZNK2rx13VertexArrayGL13syncDrawStateEPKN2gl7ContextERKN5angle7BitSetTILm16EmmEEiiNS1_16DrawElementsTypeEPKvibPSC_(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, %"class.angle::BitSetT"* dereferenceable(8) undef, i32 %3, i32 %4, i64 3, i8* null, i32 %5, i1 zeroext false, i8** null)
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2rx13VertexArrayGL13syncDrawStateEPKN2gl7ContextERKN5angle7BitSetTILm16EmmEEiiNS1_16DrawElementsTypeEPKvibPSC_(%"class.rx::VertexArrayGL"*, %"class.gl::Context"*, %"class.angle::BitSetT"* nocapture readnone dereferenceable(8), i32, i32, i64, i8*, i32, i1 zeroext, i8** nocapture) local_unnamed_addr #0 align 2 {
  %11 = alloca %"class.angle::BitSetT", align 8
  %12 = alloca %"struct.gl::IndexRange", align 8
  %13 = alloca %"class.angle::BitSetT", align 8
  %14 = alloca %"class.angle::BitSetT", align 8
  %15 = bitcast %"class.angle::BitSetT"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #13
  %16 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %11, i64 0, i32 0
  %17 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 52, i32 1, i32 0
  %18 = load i64, i64* %17, align 8, !noalias !3
  store i64 %18, i64* %16, align 8, !alias.scope !3
  %19 = bitcast %"struct.gl::IndexRange"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #13
  %20 = tail call dereferenceable(3576) %"struct.angle::FeaturesGL"* @_ZN2rx13GetFeaturesGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %21 = icmp eq i64 %5, 3
  br i1 %21, label %26, label %22

22:                                               ; preds = %10
  %23 = icmp ne i64 %18, 0
  %24 = call i32 @_ZNK2rx13VertexArrayGL13syncIndexDataEPKN2gl7ContextEiNS1_16DrawElementsTypeEPKvbbPNS1_10IndexRangeEPS7_(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i32 %4, i64 %5, i8* %6, i1 zeroext %8, i1 zeroext %23, %"struct.gl::IndexRange"* nonnull %12, i8** %9)
  %25 = icmp eq i32 %24, 1
  br i1 %25, label %94, label %88

26:                                               ; preds = %10
  %27 = getelementptr inbounds %"struct.gl::IndexRange", %"struct.gl::IndexRange"* %12, i64 0, i32 0
  %28 = getelementptr inbounds %"struct.gl::IndexRange", %"struct.gl::IndexRange"* %12, i64 0, i32 1
  %29 = sext i32 %3 to i64
  store i64 %29, i64* %27, align 8
  %30 = add i32 %3, -1
  %31 = add i32 %30, %4
  %32 = sext i32 %31 to i64
  store i64 %32, i64* %28, align 8
  %33 = getelementptr inbounds %"struct.angle::FeaturesGL", %"struct.angle::FeaturesGL"* %20, i64 0, i32 69, i32 4
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp ne i8 %34, 0
  %36 = icmp sgt i32 %3, 0
  %37 = and i1 %36, %35
  br i1 %37, label %38, label %88

38:                                               ; preds = %26
  %39 = bitcast %"class.angle::BitSetT"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #13
  %40 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %13, i64 0, i32 0
  store i64 %18, i64* %40, align 8
  %41 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 13, i32 0
  %42 = load i64, i64* %41, align 8, !noalias !6
  %43 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 3, i32 0
  %44 = load i64, i64* %43, align 8, !noalias !6
  %45 = and i64 %44, %42
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %38
  %48 = tail call i64 @llvm.cttz.i64(i64 %45, i1 true) #13, !range !9
  %49 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 12, i32 0
  br label %60

50:                                               ; preds = %73
  store i64 %74, i64* %40, align 8
  br label %51

51:                                               ; preds = %50, %38
  %52 = phi i64 [ %74, %50 ], [ %18, %38 ]
  %53 = bitcast %"class.angle::BitSetT"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #13
  %54 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %14, i64 0, i32 0
  %55 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 12, i32 0
  %56 = load i64, i64* %55, align 8, !noalias !10
  %57 = and i64 %56, 65535
  %58 = xor i64 %57, %45
  store i64 %58, i64* %54, align 8, !alias.scope !10
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %80, label %79

60:                                               ; preds = %47, %73
  %61 = phi i64 [ %18, %47 ], [ %74, %73 ]
  %62 = phi i64 [ %45, %47 ], [ %76, %73 ]
  %63 = phi i64 [ %48, %47 ], [ %78, %73 ]
  %64 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 14, i32 0, i64 %63
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, %3
  %67 = shl i64 1, %63
  br i1 %66, label %73, label %68

68:                                               ; preds = %60
  %69 = and i64 %67, 65535
  %70 = or i64 %61, %69
  %71 = load i64, i64* %49, align 8
  %72 = or i64 %71, %69
  store i64 %72, i64* %49, align 8
  store i32 %3, i32* %64, align 4
  br label %73

73:                                               ; preds = %60, %68
  %74 = phi i64 [ %70, %68 ], [ %61, %60 ]
  %75 = xor i64 %67, -1
  %76 = and i64 %62, %75
  %77 = icmp eq i64 %76, 0
  %78 = tail call i64 @llvm.cttz.i64(i64 %76, i1 true) #13, !range !9
  br i1 %77, label %50, label %60

79:                                               ; preds = %51
  call void @_ZNK2rx13VertexArrayGL54recoverForcedStreamingAttributesForDrawArraysInstancedEPKN2gl7ContextEPN5angle7BitSetTILm16EmmEE(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, %"class.angle::BitSetT"* nonnull %14)
  store i64 %45, i64* %55, align 8
  br label %80

80:                                               ; preds = %51, %79
  %81 = icmp eq i64 %52, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %80
  %83 = call i32 @_ZNK2rx13VertexArrayGL16streamAttributesEPKN2gl7ContextERKN5angle7BitSetTILm16EmmEEiRKNS1_10IndexRangeEb(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, %"class.angle::BitSetT"* nonnull dereferenceable(8) %13, i32 %7, %"struct.gl::IndexRange"* nonnull dereferenceable(24) %12, i1 zeroext true)
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %86, label %85

85:                                               ; preds = %82, %80
  br label %86

86:                                               ; preds = %82, %85
  %87 = phi i32 [ 0, %85 ], [ 1, %82 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #13
  br label %94

88:                                               ; preds = %22, %26
  %89 = icmp eq i64 %18, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %88
  %91 = call i32 @_ZNK2rx13VertexArrayGL16streamAttributesEPKN2gl7ContextERKN5angle7BitSetTILm16EmmEEiRKNS1_10IndexRangeEb(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, %"class.angle::BitSetT"* nonnull dereferenceable(8) %11, i32 %7, %"struct.gl::IndexRange"* nonnull dereferenceable(24) %12, i1 zeroext false)
  %92 = icmp eq i32 %91, 1
  br i1 %92, label %94, label %93

93:                                               ; preds = %90, %88
  br label %94

94:                                               ; preds = %90, %22, %93, %86
  %95 = phi i32 [ 0, %93 ], [ 1, %90 ], [ 1, %22 ], [ %87, %86 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #13
  ret i32 %95
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2rx13VertexArrayGL31updateElementArrayBufferBindingEPKN2gl7ContextE(%"class.rx::VertexArrayGL"* nocapture, %"class.gl::Context"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 0, i32 1
  %4 = load %"class.gl::VertexArrayState"*, %"class.gl::VertexArrayState"** %3, align 8
  %5 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %4, i64 0, i32 2, i32 0, i32 0, i32 1
  %6 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %5, align 8
  %7 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 5
  %8 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %7, align 8
  %9 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %8, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq %"class.gl::Buffer"* %6, null
  br i1 %11, label %17, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %6, i64 0, i32 5
  %14 = bitcast %"class.rx::BufferImpl"** %13 to %"class.rx::BufferGL"**
  %15 = load %"class.rx::BufferGL"*, %"class.rx::BufferGL"** %14, align 8
  %16 = tail call i32 @_ZNK2rx8BufferGL11getBufferIDEv(%"class.rx::BufferGL"* %15) #13
  br label %17

17:                                               ; preds = %2, %12
  %18 = phi i32 [ %16, %12 ], [ 0, %2 ]
  %19 = icmp eq i32 %10, %18
  br i1 %19, label %54, label %20

20:                                               ; preds = %17
  br i1 %11, label %26, label %21

21:                                               ; preds = %20
  %22 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %6, i64 0, i32 5
  %23 = bitcast %"class.rx::BufferImpl"** %22 to %"class.rx::BufferGL"**
  %24 = load %"class.rx::BufferGL"*, %"class.rx::BufferGL"** %23, align 8
  %25 = tail call i32 @_ZNK2rx8BufferGL11getBufferIDEv(%"class.rx::BufferGL"* %24) #13
  br label %26

26:                                               ; preds = %20, %21
  %27 = phi i32 [ %25, %21 ], [ 0, %20 ]
  %28 = tail call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  tail call void @_ZN2rx14StateManagerGL10bindBufferEN2gl13BufferBindingEj(%"class.rx::StateManagerGL"* %28, i8 zeroext 6, i32 %27) #13
  br i1 %11, label %33, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %6, i64 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 1
  store i64 %32, i64* %30, align 8
  br label %33

33:                                               ; preds = %29, %26
  %34 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 6, i32 0, i32 1
  %35 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %34, align 8
  store %"class.gl::Buffer"* %6, %"class.gl::Buffer"** %34, align 8
  %36 = icmp eq %"class.gl::Buffer"* %35, null
  br i1 %36, label %51, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %35, i64 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %35, i64 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, -1
  store i64 %41, i64* %39, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %51

43:                                               ; preds = %37
  %44 = bitcast %"class.gl::Buffer"* %35 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %45 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %44, align 8
  %46 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %45, align 8
  tail call void %46(%"class.angle::RefCountObject"* %38, %"class.gl::Context"* %1) #13
  %47 = bitcast %"class.gl::Buffer"* %35 to void (%"class.angle::RefCountObject"*)***
  %48 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %47, align 8
  %49 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %48, i64 2
  %50 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %49, align 8
  tail call void %50(%"class.angle::RefCountObject"* nonnull %38) #13
  br label %51

51:                                               ; preds = %33, %37, %43
  %52 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %7, align 8
  %53 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %52, i64 0, i32 0
  store i32 %27, i32* %53, align 8
  br label %54

54:                                               ; preds = %51, %17
  ret void
}

declare void @_ZN2rx14StateManagerGL10bindBufferEN2gl13BufferBindingEj(%"class.rx::StateManagerGL"*, i8 zeroext, i32) local_unnamed_addr #2

declare dereferenceable(3576) %"struct.angle::FeaturesGL"* @_ZN2rx13GetFeaturesGLEPKN2gl7ContextE(%"class.gl::Context"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2rx13VertexArrayGL13syncIndexDataEPKN2gl7ContextEiNS1_16DrawElementsTypeEPKvbbPNS1_10IndexRangeEPS7_(%"class.rx::VertexArrayGL"*, %"class.gl::Context"*, i32, i64, i8*, i1 zeroext, i1 zeroext, %"struct.gl::IndexRange"*, i8** nocapture) local_unnamed_addr #0 align 2 {
  %10 = alloca %"struct.gl::IndexRange", align 8
  %11 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 0, i32 1
  %12 = load %"class.gl::VertexArrayState"*, %"class.gl::VertexArrayState"** %11, align 8
  %13 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %12, i64 0, i32 2, i32 0, i32 0, i32 1
  %14 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %13, align 8
  %15 = icmp eq %"class.gl::Buffer"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %9
  br i1 %6, label %17, label %76

17:                                               ; preds = %16
  %18 = ptrtoint i8* %4 to i64
  %19 = sext i32 %2 to i64
  %20 = tail call i32 @_ZNK2gl6Buffer13getIndexRangeEPKNS_7ContextENS_16DrawElementsTypeEmmbPNS_10IndexRangeE(%"class.gl::Buffer"* nonnull %14, %"class.gl::Context"* %1, i64 %3, i64 %18, i64 %19, i1 zeroext %5, %"struct.gl::IndexRange"* %7) #13
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %78, label %76

22:                                               ; preds = %9
  %23 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %24 = tail call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  br i1 %6, label %25, label %29

25:                                               ; preds = %22
  %26 = bitcast %"struct.gl::IndexRange"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #13
  %27 = sext i32 %2 to i64
  call void @_ZN2gl17ComputeIndexRangeENS_16DrawElementsTypeEPKvmb(%"struct.gl::IndexRange"* nonnull sret %10, i64 %3, i8* %4, i64 %27, i1 zeroext %5) #13
  %28 = bitcast %"struct.gl::IndexRange"* %7 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %28, i8* nonnull align 8 %26, i64 24, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #13
  br label %29

29:                                               ; preds = %25, %22
  %30 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 9
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %23, i64 0, i32 0, i32 98
  %35 = load void (i32, i32*)*, void (i32, i32*)** %34, align 8
  call void %35(i32 1, i32* %30) #13
  %36 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 8
  store i64 0, i64* %36, align 8
  br label %37

37:                                               ; preds = %33, %29
  %38 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 5
  %41 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %40, align 8
  call void @_ZN2rx14StateManagerGL15bindVertexArrayEjPNS_18VertexArrayStateGLE(%"class.rx::StateManagerGL"* %24, i32 %39, %"struct.rx::VertexArrayStateGL"* %41) #13
  %42 = load i32, i32* %30, align 8
  call void @_ZN2rx14StateManagerGL10bindBufferEN2gl13BufferBindingEj(%"class.rx::StateManagerGL"* %24, i8 zeroext 6, i32 %42) #13
  %43 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 6, i32 0, i32 1
  %44 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %43, align 8
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %43, align 8
  %45 = icmp eq %"class.gl::Buffer"* %44, null
  br i1 %45, label %60, label %46

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %44, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %44, i64 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = add i64 %49, -1
  store i64 %50, i64* %48, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %60

52:                                               ; preds = %46
  %53 = bitcast %"class.gl::Buffer"* %44 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %54 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %53, align 8
  %55 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %54, align 8
  call void %55(%"class.angle::RefCountObject"* %47, %"class.gl::Context"* %1) #13
  %56 = bitcast %"class.gl::Buffer"* %44 to void (%"class.angle::RefCountObject"*)***
  %57 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %57, i64 2
  %59 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %58, align 8
  call void %59(%"class.angle::RefCountObject"* nonnull %47) #13
  br label %60

60:                                               ; preds = %37, %46, %52
  %61 = load i32, i32* %30, align 8
  %62 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %40, align 8
  %63 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %62, i64 0, i32 0
  store i32 %61, i32* %63, align 8
  %64 = trunc i64 %3 to i32
  %65 = shl i32 %2, %64
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 8
  %68 = load i64, i64* %67, align 8
  %69 = icmp ult i64 %68, %66
  br i1 %69, label %70, label %73

70:                                               ; preds = %60
  %71 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %23, i64 0, i32 0, i32 93
  %72 = load void (i32, i64, i8*, i32)*, void (i32, i64, i8*, i32)** %71, align 8
  call void %72(i32 34963, i64 %66, i8* %4, i32 35048) #13
  store i64 %66, i64* %67, align 8
  br label %76

73:                                               ; preds = %60
  %74 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %23, i64 0, i32 0, i32 94
  %75 = load void (i32, i64, i64, i8*)*, void (i32, i64, i64, i8*)** %74, align 8
  call void %75(i32 34963, i64 0, i64 %66, i8* %4) #13
  br label %76

76:                                               ; preds = %17, %70, %73, %16
  %77 = phi i8* [ %4, %17 ], [ %4, %16 ], [ null, %73 ], [ null, %70 ]
  store i8* %77, i8** %8, align 8
  br label %78

78:                                               ; preds = %17, %76
  %79 = phi i32 [ 0, %76 ], [ 1, %17 ]
  ret i32 %79
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2rx13VertexArrayGL54recoverForcedStreamingAttributesForDrawArraysInstancedEPKN2gl7ContextEPN5angle7BitSetTILm16EmmEE(%"class.rx::VertexArrayGL"* nocapture, %"class.gl::Context"*, %"class.angle::BitSetT"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %2, i64 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %94, label %7

7:                                                ; preds = %3
  %8 = tail call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %9 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 5
  %12 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %11, align 8
  tail call void @_ZN2rx14StateManagerGL15bindVertexArrayEjPNS_18VertexArrayStateGLE(%"class.rx::StateManagerGL"* %8, i32 %10, %"struct.rx::VertexArrayStateGL"* %12) #13
  %13 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 0, i32 1
  %14 = load %"class.gl::VertexArrayState"*, %"class.gl::VertexArrayState"** %13, align 8
  %15 = load i64, i64* %4, align 8, !noalias !13
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %21, label %17

17:                                               ; preds = %7
  %18 = tail call i64 @llvm.cttz.i64(i64 %15, i1 true) #13, !range !9
  %19 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %14, i64 0, i32 1, i32 0, i32 0
  %20 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %14, i64 0, i32 3, i32 0, i32 0
  br label %24

21:                                               ; preds = %85, %7
  store i64 0, i64* %4, align 8
  %22 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 14, i32 0, i64 0
  %23 = bitcast i32* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 0, i64 64, i1 false)
  br label %94

24:                                               ; preds = %17, %85
  %25 = phi i64 [ %18, %17 ], [ %93, %85 ]
  %26 = phi i64 [ %15, %17 ], [ %91, %85 ]
  %27 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %19, align 8
  %28 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %27, i64 %25
  %29 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %27, i64 %25, i32 5
  %30 = load i32, i32* %29, align 8
  %31 = zext i32 %30 to i64
  %32 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %20, align 8
  %33 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %32, i64 %31, i32 3, i32 0, i32 1
  %34 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %33, align 8
  %35 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %34, i64 0, i32 5
  %36 = bitcast %"class.rx::BufferImpl"** %35 to %"class.rx::BufferGL"**
  %37 = load %"class.rx::BufferGL"*, %"class.rx::BufferGL"** %36, align 8
  %38 = tail call i32 @_ZNK2rx8BufferGL11getBufferIDEv(%"class.rx::BufferGL"* %37) #13
  tail call void @_ZN2rx14StateManagerGL10bindBufferEN2gl13BufferBindingEj(%"class.rx::StateManagerGL"* %8, i8 zeroext 0, i32 %38) #13
  %39 = trunc i64 %25 to i32
  %40 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %32, i64 %31, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %32, i64 %31, i32 2
  %43 = load i64, i64* %42, align 8
  tail call void @_ZNK2rx13VertexArrayGL23callVertexAttribPointerEPKN2gl7ContextEjRKNS1_15VertexAttributeEil(%"class.rx::VertexArrayGL"* undef, %"class.gl::Context"* %1, i32 %39, %"struct.gl::VertexAttribute"* dereferenceable(48) %28, i32 %41, i64 %43)
  %44 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %27, i64 %25, i32 1
  %45 = bitcast %"struct.angle::Format"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %11, align 8
  %48 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %47, i64 0, i32 1, i32 0, i32 0, i64 %25, i32 1
  %49 = bitcast %"struct.angle::Format"** %48 to i64*
  store i64 %46, i64* %49, align 8
  %50 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %11, align 8
  %51 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %50, i64 0, i32 1, i32 0, i32 0, i64 %25, i32 3
  store i32 0, i32* %51, align 8
  %52 = load i32, i32* %29, align 8
  %53 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %11, align 8
  %54 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %53, i64 0, i32 1, i32 0, i32 0, i64 %25, i32 4
  store i32 %52, i32* %54, align 4
  %55 = load i32, i32* %40, align 8
  %56 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %11, align 8
  %57 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %56, i64 0, i32 2, i32 0, i32 0, i64 %25, i32 0
  store i32 %55, i32* %57, align 8
  %58 = load i64, i64* %42, align 8
  %59 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %11, align 8
  %60 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %59, i64 0, i32 2, i32 0, i32 0, i64 %25, i32 2
  store i64 %58, i64* %60, align 8
  %61 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %33, align 8
  %62 = icmp eq %"class.gl::Buffer"* %61, null
  br i1 %62, label %67, label %63

63:                                               ; preds = %24
  %64 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %61, i64 0, i32 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = add i64 %65, 1
  store i64 %66, i64* %64, align 8
  br label %67

67:                                               ; preds = %63, %24
  %68 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 %25, i32 0, i32 1
  %69 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %68, align 8
  store %"class.gl::Buffer"* %61, %"class.gl::Buffer"** %68, align 8
  %70 = icmp eq %"class.gl::Buffer"* %69, null
  br i1 %70, label %85, label %71

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %69, i64 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %69, i64 0, i32 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = add i64 %74, -1
  store i64 %75, i64* %73, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %85

77:                                               ; preds = %71
  %78 = bitcast %"class.gl::Buffer"* %69 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %79 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %78, align 8
  %80 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %79, align 8
  tail call void %80(%"class.angle::RefCountObject"* %72, %"class.gl::Context"* %1) #13
  %81 = bitcast %"class.gl::Buffer"* %69 to void (%"class.angle::RefCountObject"*)***
  %82 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %81, align 8
  %83 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %82, i64 2
  %84 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %83, align 8
  tail call void %84(%"class.angle::RefCountObject"* nonnull %72) #13
  br label %85

85:                                               ; preds = %67, %71, %77
  %86 = tail call i32 @_ZNK2rx8BufferGL11getBufferIDEv(%"class.rx::BufferGL"* %37) #13
  %87 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %11, align 8
  %88 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %87, i64 0, i32 2, i32 0, i32 0, i64 %25, i32 3
  store i32 %86, i32* %88, align 8
  %89 = shl i64 1, %25
  %90 = xor i64 %89, -1
  %91 = and i64 %26, %90
  %92 = icmp eq i64 %91, 0
  %93 = tail call i64 @llvm.cttz.i64(i64 %91, i1 true) #13, !range !9
  br i1 %92, label %21, label %24

94:                                               ; preds = %3, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK2rx13VertexArrayGL16streamAttributesEPKN2gl7ContextERKN5angle7BitSetTILm16EmmEEiRKNS1_10IndexRangeEb(%"class.rx::VertexArrayGL"*, %"class.gl::Context"*, %"class.angle::BitSetT"* nocapture readonly dereferenceable(8), i32, %"struct.gl::IndexRange"* nocapture readonly dereferenceable(24), i1 zeroext) local_unnamed_addr #0 align 2 {
  %7 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %8 = tail call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %9 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 0, i32 1
  %10 = load %"class.gl::VertexArrayState"*, %"class.gl::VertexArrayState"** %9, align 8
  %11 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %2, i64 0, i32 0
  %12 = load i64, i64* %11, align 8, !noalias !16
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %266, label %14

14:                                               ; preds = %6
  %15 = tail call i64 @llvm.cttz.i64(i64 %12, i1 true) #13, !range !9
  %16 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %10, i64 0, i32 1, i32 0, i32 0
  %17 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %10, i64 0, i32 3, i32 0, i32 0
  %18 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 2
  %19 = getelementptr inbounds %"struct.gl::IndexRange", %"struct.gl::IndexRange"* %4, i64 0, i32 1
  %20 = getelementptr inbounds %"struct.gl::IndexRange", %"struct.gl::IndexRange"* %4, i64 0, i32 0
  %21 = sext i32 %3 to i64
  br label %22

22:                                               ; preds = %22, %14
  %23 = phi i64 [ 0, %14 ], [ %49, %22 ]
  %24 = phi i64 [ 0, %14 ], [ %47, %22 ]
  %25 = phi i64 [ %15, %14 ], [ %54, %22 ]
  %26 = phi i64 [ %12, %14 ], [ %52, %22 ]
  %27 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %16, align 8
  %28 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %27, i64 %25, i32 5
  %29 = load i32, i32* %28, align 8
  %30 = zext i32 %29 to i64
  %31 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %17, align 8
  %32 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %27, i64 %25, i32 1
  %33 = load %"struct.angle::Format"*, %"struct.angle::Format"** %32, align 8
  %34 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %33, i64 0, i32 15
  %35 = load i32, i32* %34, align 8
  %36 = zext i32 %35 to i64
  %37 = load i32, i32* %18, align 4
  %38 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %31, i64 %30, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = mul i32 %39, %37
  %41 = load i64, i64* %19, align 8
  %42 = load i64, i64* %20, align 8
  %43 = add i64 %41, 1
  %44 = sub i64 %43, %42
  %45 = tail call i64 @_ZN2gl32ComputeVertexBindingElementCountEjmm(i32 %40, i64 %44, i64 %21) #13
  %46 = mul i64 %45, %36
  %47 = add i64 %46, %24
  %48 = icmp ult i64 %23, %36
  %49 = select i1 %48, i64 %36, i64 %23
  %50 = shl i64 1, %25
  %51 = xor i64 %50, -1
  %52 = and i64 %26, %51
  %53 = icmp eq i64 %52, 0
  %54 = tail call i64 @llvm.cttz.i64(i64 %52, i1 true) #13, !range !9
  br i1 %53, label %55, label %22

55:                                               ; preds = %22
  %56 = icmp eq i64 %47, 0
  br i1 %56, label %266, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 11
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %66

61:                                               ; preds = %57
  %62 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %7, i64 0, i32 0, i32 98
  %63 = load void (i32, i32*)*, void (i32, i32*)** %62, align 8
  tail call void %63(i32 1, i32* %58) #13
  %64 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 10
  store i64 0, i64* %64, align 8
  %65 = load i32, i32* %58, align 8
  br label %66

66:                                               ; preds = %61, %57
  %67 = phi i32 [ %65, %61 ], [ %59, %57 ]
  %68 = load i64, i64* %11, align 8
  %69 = tail call i64 @llvm.ctpop.i64(i64 %68) #13, !range !9
  %70 = mul i64 %69, %49
  %71 = load i64, i64* %20, align 8
  %72 = mul i64 %70, %71
  %73 = add i64 %72, %47
  tail call void @_ZN2rx14StateManagerGL10bindBufferEN2gl13BufferBindingEj(%"class.rx::StateManagerGL"* %8, i8 zeroext 0, i32 %67) #13
  %74 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 10
  %75 = load i64, i64* %74, align 8
  %76 = icmp ugt i64 %73, %75
  br i1 %76, label %77, label %80

77:                                               ; preds = %66
  %78 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %7, i64 0, i32 0, i32 93
  %79 = load void (i32, i64, i8*, i32)*, void (i32, i64, i8*, i32)** %78, align 8
  tail call void %79(i32 34962, i64 %73, i8* null, i32 35048) #13
  store i64 %73, i64* %74, align 8
  br label %80

80:                                               ; preds = %77, %66
  %81 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 1
  %82 = load i32, i32* %81, align 8
  %83 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 5
  %84 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %83, align 8
  tail call void @_ZN2rx14StateManagerGL15bindVertexArrayEjPNS_18VertexArrayStateGLE(%"class.rx::StateManagerGL"* %8, i32 %82, %"struct.rx::VertexArrayStateGL"* %84) #13
  %85 = add nsw i64 %21, -1
  %86 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %7, i64 0, i32 0, i32 109
  br label %87

87:                                               ; preds = %80, %102
  %88 = phi i64 [ 5, %80 ], [ %89, %102 ]
  %89 = add nsw i64 %88, -1
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %261, label %91

91:                                               ; preds = %87
  %92 = tail call i8* @_ZN2rx26MapBufferRangeWithFallbackEPKNS_11FunctionsGLEjmmj(%"class.rx::FunctionsGL"* %7, i32 34962, i64 0, i64 %73, i32 2) #13
  %93 = load %"class.gl::VertexArrayState"*, %"class.gl::VertexArrayState"** %9, align 8
  %94 = load i64, i64* %11, align 8, !noalias !19
  %95 = icmp eq i64 %94, 0
  br i1 %95, label %102, label %96

96:                                               ; preds = %91
  %97 = tail call i64 @llvm.cttz.i64(i64 %94, i1 true) #13, !range !9
  %98 = load i64, i64* %20, align 8
  %99 = mul i64 %98, %49
  %100 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %93, i64 0, i32 1, i32 0, i32 0
  %101 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %93, i64 0, i32 3, i32 0, i32 0
  br label %106

102:                                              ; preds = %253, %91
  %103 = load i8 (i32)*, i8 (i32)** %86, align 8
  %104 = tail call zeroext i8 %103(i32 34962) #13
  %105 = icmp eq i8 %104, 1
  br i1 %105, label %266, label %87, !prof !22

106:                                              ; preds = %96, %253
  %107 = phi i64 [ %98, %96 ], [ %254, %253 ]
  %108 = phi i64 [ %99, %96 ], [ %255, %253 ]
  %109 = phi i64 [ %94, %96 ], [ %258, %253 ]
  %110 = phi i64 [ %97, %96 ], [ %260, %253 ]
  %111 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %100, align 8
  %112 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %111, i64 %110
  %113 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %111, i64 %110, i32 5
  %114 = load i32, i32* %113, align 8
  %115 = zext i32 %114 to i64
  %116 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %101, align 8
  %117 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %116, i64 %115
  %118 = load i32, i32* %18, align 4
  %119 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %116, i64 %115, i32 1
  %120 = load i32, i32* %119, align 4
  %121 = mul i32 %120, %118
  %122 = load i64, i64* %19, align 8
  %123 = add i64 %122, 1
  %124 = sub i64 %123, %107
  %125 = tail call i64 @_ZN2gl32ComputeVertexBindingElementCountEjmm(i32 %121, i64 %124, i64 %21) #13
  %126 = tail call i64 @_ZN2gl28ComputeVertexAttributeStrideERKNS_15VertexAttributeERKNS_13VertexBindingE(%"struct.gl::VertexAttribute"* dereferenceable(48) %112, %"class.gl::VertexBinding"* dereferenceable(40) %117) #13
  %127 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %111, i64 %110, i32 1
  %128 = load %"struct.angle::Format"*, %"struct.angle::Format"** %127, align 8
  %129 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %128, i64 0, i32 15
  %130 = load i32, i32* %129, align 8
  %131 = zext i32 %130 to i64
  %132 = icmp eq i32 %121, 0
  %133 = or i1 %132, %5
  %134 = load i64, i64* %20, align 8
  %135 = select i1 %133, i64 %134, i64 0
  %136 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %111, i64 %110, i32 2
  %137 = load i8*, i8** %136, align 8
  %138 = mul i64 %125, %131
  %139 = mul i64 %135, %126
  %140 = icmp ne i32 %121, 0
  %141 = and i1 %140, %5
  br i1 %141, label %142, label %161

142:                                              ; preds = %106
  %143 = zext i32 %121 to i64
  %144 = add nsw i64 %85, %143
  %145 = add i64 %144, %134
  %146 = udiv i64 %145, %143
  %147 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %116, i64 %115, i32 3, i32 0, i32 1
  %148 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %147, align 8
  %149 = icmp eq %"class.gl::Buffer"* %148, null
  br i1 %149, label %150, label %152

150:                                              ; preds = %142
  %151 = icmp eq i8* %137, null
  br i1 %151, label %253, label %161

152:                                              ; preds = %142
  %153 = mul i64 %126, %125
  %154 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %148, i64 0, i32 5
  %155 = bitcast %"class.rx::BufferImpl"** %154 to %"class.rx::BufferGL"**
  %156 = load %"class.rx::BufferGL"*, %"class.rx::BufferGL"** %155, align 8
  %157 = tail call i32 @_ZNK2rx8BufferGL11getBufferIDEv(%"class.rx::BufferGL"* %156) #13
  tail call void @_ZN2rx14StateManagerGL10bindBufferEN2gl13BufferBindingEj(%"class.rx::StateManagerGL"* %8, i8 zeroext 0, i32 %157) #13
  %158 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %116, i64 %115, i32 2
  %159 = load i64, i64* %158, align 8
  %160 = tail call i8* @_ZN2rx26MapBufferRangeWithFallbackEPKNS_11FunctionsGLEjmmj(%"class.rx::FunctionsGL"* %7, i32 34962, i64 %159, i64 %153, i32 1) #13
  br label %161

161:                                              ; preds = %150, %152, %106
  %162 = phi i64 [ %125, %106 ], [ %146, %152 ], [ %146, %150 ]
  %163 = phi i8* [ %137, %106 ], [ %160, %152 ], [ %137, %150 ]
  %164 = phi i64 [ %139, %106 ], [ 0, %152 ], [ 0, %150 ]
  %165 = phi i1 [ false, %106 ], [ true, %152 ], [ false, %150 ]
  %166 = phi i64 [ %135, %106 ], [ 0, %152 ], [ 0, %150 ]
  %167 = icmp eq i64 %126, %131
  br i1 %167, label %176, label %168

168:                                              ; preds = %161
  %169 = icmp eq i64 %162, 0
  br i1 %169, label %205, label %170

170:                                              ; preds = %168
  %171 = getelementptr inbounds i8, i8* %92, i64 %108
  %172 = and i64 %162, 1
  %173 = icmp eq i64 %162, 1
  br i1 %173, label %196, label %174

174:                                              ; preds = %170
  %175 = sub i64 %162, %172
  br label %179

176:                                              ; preds = %161
  %177 = getelementptr inbounds i8, i8* %92, i64 %108
  %178 = getelementptr inbounds i8, i8* %163, i64 %164
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %177, i8* align 1 %178, i64 %138, i1 false)
  br label %205

179:                                              ; preds = %179, %174
  %180 = phi i64 [ 0, %174 ], [ %193, %179 ]
  %181 = phi i64 [ %175, %174 ], [ %194, %179 ]
  %182 = mul i64 %180, %131
  %183 = getelementptr inbounds i8, i8* %171, i64 %182
  %184 = add i64 %180, %166
  %185 = mul i64 %184, %126
  %186 = getelementptr inbounds i8, i8* %163, i64 %185
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %183, i8* align 1 %186, i64 %131, i1 false)
  %187 = or i64 %180, 1
  %188 = mul i64 %187, %131
  %189 = getelementptr inbounds i8, i8* %171, i64 %188
  %190 = add i64 %187, %166
  %191 = mul i64 %190, %126
  %192 = getelementptr inbounds i8, i8* %163, i64 %191
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %189, i8* align 1 %192, i64 %131, i1 false)
  %193 = add nuw i64 %180, 2
  %194 = add i64 %181, -2
  %195 = icmp eq i64 %194, 0
  br i1 %195, label %196, label %179

196:                                              ; preds = %179, %170
  %197 = phi i64 [ 0, %170 ], [ %193, %179 ]
  %198 = icmp eq i64 %172, 0
  br i1 %198, label %205, label %199

199:                                              ; preds = %196
  %200 = mul i64 %197, %131
  %201 = getelementptr inbounds i8, i8* %171, i64 %200
  %202 = add i64 %197, %166
  %203 = mul i64 %202, %126
  %204 = getelementptr inbounds i8, i8* %163, i64 %203
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %201, i8* align 1 %204, i64 %131, i1 false)
  br label %205

205:                                              ; preds = %199, %196, %168, %176
  br i1 %165, label %206, label %210

206:                                              ; preds = %205
  %207 = load i8 (i32)*, i8 (i32)** %86, align 8
  %208 = tail call zeroext i8 %207(i32 34962) #13
  %209 = load i32, i32* %58, align 8
  tail call void @_ZN2rx14StateManagerGL10bindBufferEN2gl13BufferBindingEj(%"class.rx::StateManagerGL"* %8, i8 zeroext 0, i32 %209) #13
  br label %210

210:                                              ; preds = %206, %205
  %211 = mul i64 %135, %131
  %212 = sub i64 %108, %211
  %213 = trunc i64 %110 to i32
  tail call void @_ZNK2rx13VertexArrayGL23callVertexAttribPointerEPKN2gl7ContextEjRKNS1_15VertexAttributeEil(%"class.rx::VertexArrayGL"* undef, %"class.gl::Context"* %1, i32 %213, %"struct.gl::VertexAttribute"* dereferenceable(48) %112, i32 %130, i64 %212)
  %214 = bitcast %"struct.angle::Format"** %127 to i64*
  %215 = load i64, i64* %214, align 8
  %216 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %83, align 8
  %217 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %216, i64 0, i32 1, i32 0, i32 0, i64 %110, i32 1
  %218 = bitcast %"struct.angle::Format"** %217 to i64*
  store i64 %215, i64* %218, align 8
  %219 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %83, align 8
  %220 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %219, i64 0, i32 1, i32 0, i32 0, i64 %110, i32 3
  store i32 0, i32* %220, align 8
  %221 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %83, align 8
  %222 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %221, i64 0, i32 1, i32 0, i32 0, i64 %110, i32 4
  store i32 %213, i32* %222, align 4
  %223 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %83, align 8
  %224 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %223, i64 0, i32 2, i32 0, i32 0, i64 %110, i32 0
  store i32 %130, i32* %224, align 8
  %225 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %83, align 8
  %226 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %225, i64 0, i32 2, i32 0, i32 0, i64 %110, i32 2
  store i64 %212, i64* %226, align 8
  %227 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 %110, i32 0, i32 1
  %228 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %227, align 8
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %227, align 8
  %229 = icmp eq %"class.gl::Buffer"* %228, null
  br i1 %229, label %244, label %230

230:                                              ; preds = %210
  %231 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %228, i64 0, i32 0, i32 0
  %232 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %228, i64 0, i32 0, i32 0, i32 1
  %233 = load i64, i64* %232, align 8
  %234 = add i64 %233, -1
  store i64 %234, i64* %232, align 8
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %236, label %244

236:                                              ; preds = %230
  %237 = bitcast %"class.gl::Buffer"* %228 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %238 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %237, align 8
  %239 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %238, align 8
  tail call void %239(%"class.angle::RefCountObject"* %231, %"class.gl::Context"* %1) #13
  %240 = bitcast %"class.gl::Buffer"* %228 to void (%"class.angle::RefCountObject"*)***
  %241 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %240, align 8
  %242 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %241, i64 2
  %243 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %242, align 8
  tail call void %243(%"class.angle::RefCountObject"* nonnull %231) #13
  br label %244

244:                                              ; preds = %210, %230, %236
  %245 = load i32, i32* %58, align 8
  %246 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %83, align 8
  %247 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %246, i64 0, i32 2, i32 0, i32 0, i64 %110, i32 3
  store i32 %245, i32* %247, align 8
  %248 = mul i64 %162, %131
  %249 = load i64, i64* %20, align 8
  %250 = mul i64 %249, %49
  %251 = add i64 %248, %108
  %252 = add i64 %251, %250
  br label %253

253:                                              ; preds = %150, %244
  %254 = phi i64 [ %249, %244 ], [ %134, %150 ]
  %255 = phi i64 [ %252, %244 ], [ %108, %150 ]
  %256 = shl i64 1, %110
  %257 = xor i64 %256, -1
  %258 = and i64 %109, %257
  %259 = icmp eq i64 %258, 0
  %260 = tail call i64 @llvm.cttz.i64(i64 %258, i1 true) #13, !range !9
  br i1 %259, label %102, label %106

261:                                              ; preds = %87
  %262 = getelementptr inbounds %"class.gl::Context", %"class.gl::Context"* %1, i64 0, i32 11, i32 0, i32 0, i32 0
  %263 = bitcast %"class.rx::ContextImpl"** %262 to %"class.rx::ContextGL"**
  %264 = load %"class.rx::ContextGL"*, %"class.rx::ContextGL"** %263, align 8
  %265 = getelementptr inbounds %"class.rx::ContextGL", %"class.rx::ContextGL"* %264, i64 0, i32 0
  tail call void @_ZN2rx11ContextImpl11handleErrorEjPKcS2_S2_j(%"class.rx::ContextImpl"* %265, i32 1285, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @__func__._ZNK2rx13VertexArrayGL16streamAttributesEPKN2gl7ContextERKN5angle7BitSetTILm16EmmEEiRKNS1_10IndexRangeEb, i64 0, i64 0), i32 543) #13
  br label %266

266:                                              ; preds = %102, %6, %261, %55
  %267 = phi i32 [ 0, %55 ], [ 1, %261 ], [ 0, %6 ], [ 0, %102 ]
  ret i32 %267
}

declare i32 @_ZNK2gl6Buffer13getIndexRangeEPKNS_7ContextENS_16DrawElementsTypeEmmbPNS_10IndexRangeE(%"class.gl::Buffer"*, %"class.gl::Context"*, i64, i64, i64, i1 zeroext, %"struct.gl::IndexRange"*) local_unnamed_addr #2

declare %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"*) local_unnamed_addr #2

declare void @_ZN2gl17ComputeIndexRangeENS_16DrawElementsTypeEPKvmb(%"struct.gl::IndexRange"* sret, i64, i8*, i64, i1 zeroext) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN2rx14StateManagerGL15bindVertexArrayEjPNS_18VertexArrayStateGLE(%"class.rx::StateManagerGL"*, i32, %"struct.rx::VertexArrayStateGL"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2rx13VertexArrayGL30computeStreamingAttributeSizesERKN5angle7BitSetTILm16EmmEEiRKN2gl10IndexRangeEPmSA_(%"class.rx::VertexArrayGL"* nocapture readonly, %"class.angle::BitSetT"* nocapture readonly dereferenceable(8), i32, %"struct.gl::IndexRange"* nocapture readonly dereferenceable(24), i64* nocapture, i64* nocapture) local_unnamed_addr #0 align 2 {
  store i64 0, i64* %4, align 8
  store i64 0, i64* %5, align 8
  %7 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 0, i32 1
  %8 = load %"class.gl::VertexArrayState"*, %"class.gl::VertexArrayState"** %7, align 8
  %9 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %1, i64 0, i32 0
  %10 = load i64, i64* %9, align 8, !noalias !23
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %20, label %12

12:                                               ; preds = %6
  %13 = tail call i64 @llvm.cttz.i64(i64 %10, i1 true) #13, !range !9
  %14 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %8, i64 0, i32 1, i32 0, i32 0
  %15 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %8, i64 0, i32 3, i32 0, i32 0
  %16 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 2
  %17 = getelementptr inbounds %"struct.gl::IndexRange", %"struct.gl::IndexRange"* %3, i64 0, i32 1
  %18 = getelementptr inbounds %"struct.gl::IndexRange", %"struct.gl::IndexRange"* %3, i64 0, i32 0
  %19 = sext i32 %2 to i64
  br label %21

20:                                               ; preds = %21, %6
  ret void

21:                                               ; preds = %12, %21
  %22 = phi i64 [ %13, %12 ], [ %53, %21 ]
  %23 = phi i64 [ %10, %12 ], [ %51, %21 ]
  %24 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %14, align 8
  %25 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %24, i64 %22, i32 5
  %26 = load i32, i32* %25, align 8
  %27 = zext i32 %26 to i64
  %28 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %15, align 8
  %29 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %24, i64 %22, i32 1
  %30 = load %"struct.angle::Format"*, %"struct.angle::Format"** %29, align 8
  %31 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %30, i64 0, i32 15
  %32 = load i32, i32* %31, align 8
  %33 = zext i32 %32 to i64
  %34 = load i32, i32* %16, align 4
  %35 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %28, i64 %27, i32 1
  %36 = load i32, i32* %35, align 4
  %37 = mul i32 %36, %34
  %38 = load i64, i64* %17, align 8
  %39 = load i64, i64* %18, align 8
  %40 = add i64 %38, 1
  %41 = sub i64 %40, %39
  %42 = tail call i64 @_ZN2gl32ComputeVertexBindingElementCountEjmm(i32 %37, i64 %41, i64 %19) #13
  %43 = mul i64 %42, %33
  %44 = load i64, i64* %4, align 8
  %45 = add i64 %44, %43
  store i64 %45, i64* %4, align 8
  %46 = load i64, i64* %5, align 8
  %47 = icmp ult i64 %46, %33
  %48 = select i1 %47, i64 %33, i64 %46
  store i64 %48, i64* %5, align 8
  %49 = shl i64 1, %22
  %50 = xor i64 %49, -1
  %51 = and i64 %23, %50
  %52 = icmp eq i64 %51, 0
  %53 = tail call i64 @llvm.cttz.i64(i64 %51, i1 true) #13, !range !9
  br i1 %52, label %20, label %21
}

declare i64 @_ZN2gl32ComputeVertexBindingElementCountEjmm(i32, i64, i64) local_unnamed_addr #2

declare i8* @_ZN2rx26MapBufferRangeWithFallbackEPKNS_11FunctionsGLEjmmj(%"class.rx::FunctionsGL"*, i32, i64, i64, i32) local_unnamed_addr #2

declare i64 @_ZN2gl28ComputeVertexAttributeStrideERKNS_15VertexAttributeERKNS_13VertexBindingE(%"struct.gl::VertexAttribute"* dereferenceable(48), %"class.gl::VertexBinding"* dereferenceable(40)) local_unnamed_addr #2

declare i32 @_ZNK2rx8BufferGL11getBufferIDEv(%"class.rx::BufferGL"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2rx13VertexArrayGL23callVertexAttribPointerEPKN2gl7ContextEjRKNS1_15VertexAttributeEil(%"class.rx::VertexArrayGL"* nocapture readnone, %"class.gl::Context"*, i32, %"struct.gl::VertexAttribute"* nocapture readonly dereferenceable(48), i32, i64) local_unnamed_addr #0 align 2 {
  %7 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %8 = inttoptr i64 %5 to i8*
  %9 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %3, i64 0, i32 1
  %10 = load %"struct.angle::Format"*, %"struct.angle::Format"** %9, align 8
  %11 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %10, i64 0, i32 7
  %12 = load i32, i32* %11, align 8
  %13 = or i32 %12, 1
  %14 = icmp eq i32 %13, 5125
  br i1 %14, label %15, label %36

15:                                               ; preds = %6
  %16 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %10, i64 0, i32 20
  %17 = load i8, i8* %16, align 2, !range !2
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %19, label %36

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %7, i64 0, i32 0, i32 292
  %21 = load void (i32, i32, i32, i32, i8*)*, void (i32, i32, i32, i32, i8*)** %20, align 8
  %22 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %10, i64 0, i32 17
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %10, i64 0, i32 23
  %25 = load i32, i32* %24, align 4
  %26 = add i32 %25, -13
  %27 = icmp ult i32 %26, 5
  br i1 %27, label %30, label %28

28:                                               ; preds = %19
  %29 = add i32 %25, 5120
  br label %34

30:                                               ; preds = %19
  %31 = sext i32 %26 to i64
  %32 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZNK2rx13VertexArrayGL13validateStateEPKN2gl7ContextE, i64 0, i64 %31
  %33 = load i32, i32* %32, align 4
  br label %34

34:                                               ; preds = %30, %28
  %35 = phi i32 [ %29, %28 ], [ %33, %30 ]
  tail call void %21(i32 %2, i32 %23, i32 %35, i32 %4, i8* %8) #13
  br label %57

36:                                               ; preds = %6, %15
  %37 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %7, i64 0, i32 0, i32 202
  %38 = load void (i32, i32, i32, i8, i32, i8*)*, void (i32, i32, i32, i8, i32, i8*)** %37, align 8
  %39 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %10, i64 0, i32 17
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %10, i64 0, i32 23
  %42 = load i32, i32* %41, align 4
  %43 = add i32 %42, -13
  %44 = icmp ult i32 %43, 5
  br i1 %44, label %47, label %45

45:                                               ; preds = %36
  %46 = add i32 %42, 5120
  br label %51

47:                                               ; preds = %36
  %48 = sext i32 %43 to i64
  %49 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZNK2rx13VertexArrayGL13validateStateEPKN2gl7ContextE, i64 0, i64 %48
  %50 = load i32, i32* %49, align 4
  br label %51

51:                                               ; preds = %47, %45
  %52 = phi i32 [ %46, %45 ], [ %50, %47 ]
  %53 = icmp eq i32 %12, 36764
  %54 = icmp eq i32 %12, 35863
  %55 = or i1 %53, %54
  %56 = zext i1 %55 to i8
  tail call void %38(i32 %2, i32 %40, i32 %52, i8 zeroext %56, i32 %4, i8* %8) #13
  br label %57

57:                                               ; preds = %51, %34
  ret void
}

declare void @_ZN2rx11ContextImpl11handleErrorEjPKcS2_S2_j(%"class.rx::ContextImpl"*, i32, i8*, i8*, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2rx13VertexArrayGL54recoverForcedStreamingAttributesForDrawArraysInstancedEPKN2gl7ContextE(%"class.rx::VertexArrayGL"* nocapture, %"class.gl::Context"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 12
  tail call void @_ZNK2rx13VertexArrayGL54recoverForcedStreamingAttributesForDrawArraysInstancedEPKN2gl7ContextEPN5angle7BitSetTILm16EmmEE(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, %"class.angle::BitSetT"* %3)
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK2rx13VertexArrayGL16getVertexArrayIDEv(%"class.rx::VertexArrayGL"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"struct.rx::VertexArrayStateGL"* @_ZNK2rx13VertexArrayGL14getNativeStateEv(%"class.rx::VertexArrayGL"* nocapture readonly) local_unnamed_addr #7 align 2 {
  %2 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 5
  %3 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %2, align 8
  ret %"struct.rx::VertexArrayStateGL"* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13VertexArrayGL19updateAttribEnabledEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* nocapture readonly, %"class.gl::Context"*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.gl::VertexArrayState"*, %"class.gl::VertexArrayState"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %6, align 8
  %8 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %7, i64 %2, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = zext i8 %9 to i32
  %11 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 3, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 1, %2
  %14 = and i64 %12, %13
  %15 = icmp ne i64 %14, 0
  %16 = zext i1 %15 to i32
  %17 = and i32 %16, %10
  %18 = trunc i32 %17 to i8
  %19 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 5
  %20 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %19, align 8
  %21 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %20, i64 0, i32 1, i32 0, i32 0, i64 %2, i32 0
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = zext i8 %22 to i32
  %24 = icmp eq i32 %17, %23
  br i1 %24, label %39, label %25

25:                                               ; preds = %3
  %26 = icmp eq i32 %17, 0
  %27 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  br i1 %26, label %32, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %27, i64 0, i32 0, i32 121
  %30 = load void (i32)*, void (i32)** %29, align 8
  %31 = trunc i64 %2 to i32
  tail call void %30(i32 %31) #13
  br label %36

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %27, i64 0, i32 0, i32 119
  %34 = load void (i32)*, void (i32)** %33, align 8
  %35 = trunc i64 %2 to i32
  tail call void %34(i32 %35) #13
  br label %36

36:                                               ; preds = %32, %28
  %37 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %19, align 8
  %38 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %37, i64 0, i32 1, i32 0, i32 0, i64 %2, i32 0
  store i8 %18, i8* %38, align 8
  br label %39

39:                                               ; preds = %3, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13VertexArrayGL19updateAttribPointerEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* nocapture, %"class.gl::Context"*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.gl::VertexArrayState"*, %"class.gl::VertexArrayState"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %6, align 8
  %8 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %7, i64 %2
  %9 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %5, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %9, align 8
  %11 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %10, i64 %2
  %12 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %10, i64 %2, i32 3, i32 0, i32 1
  %13 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %12, align 8
  %14 = icmp eq %"class.gl::Buffer"* %13, null
  br i1 %14, label %15, label %35

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 %2, i32 0, i32 1
  %17 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %16, align 8
  store %"class.gl::Buffer"* null, %"class.gl::Buffer"** %16, align 8
  %18 = icmp eq %"class.gl::Buffer"* %17, null
  br i1 %18, label %33, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %17, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %17, i64 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -1
  store i64 %23, i64* %21, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %33

25:                                               ; preds = %19
  %26 = bitcast %"class.gl::Buffer"* %17 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %27 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %26, align 8
  %28 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %27, align 8
  tail call void %28(%"class.angle::RefCountObject"* %20, %"class.gl::Context"* %1) #13
  %29 = bitcast %"class.gl::Buffer"* %17 to void (%"class.angle::RefCountObject"*)***
  %30 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %29, align 8
  %31 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %30, i64 2
  %32 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %31, align 8
  tail call void %32(%"class.angle::RefCountObject"* nonnull %20) #13
  br label %33

33:                                               ; preds = %15, %19, %25
  %34 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 5
  br label %121

35:                                               ; preds = %3
  %36 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 5
  %37 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %36, align 8
  %38 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %37, i64 0, i32 1, i32 0, i32 0, i64 %2, i32 1
  %39 = load %"struct.angle::Format"*, %"struct.angle::Format"** %38, align 8
  %40 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %7, i64 %2, i32 1
  %41 = load %"struct.angle::Format"*, %"struct.angle::Format"** %40, align 8
  %42 = icmp eq %"struct.angle::Format"* %39, %41
  br i1 %42, label %43, label %75

43:                                               ; preds = %35
  %44 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %37, i64 0, i32 1, i32 0, i32 0, i64 %2, i32 3
  %45 = load i32, i32* %44, align 8
  %46 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %7, i64 %2, i32 3
  %47 = load i32, i32* %46, align 8
  %48 = icmp eq i32 %45, %47
  br i1 %48, label %49, label %75

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %37, i64 0, i32 1, i32 0, i32 0, i64 %2, i32 4
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %7, i64 %2, i32 5
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %51, %53
  br i1 %54, label %55, label %75

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %37, i64 0, i32 2, i32 0, i32 0, i64 %2, i32 0
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %11, i64 0, i32 0
  %59 = load i32, i32* %58, align 8
  %60 = icmp eq i32 %57, %59
  br i1 %60, label %61, label %75

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %37, i64 0, i32 2, i32 0, i32 0, i64 %2, i32 2
  %63 = load i64, i64* %62, align 8
  %64 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %10, i64 %2, i32 2
  %65 = load i64, i64* %64, align 8
  %66 = icmp eq i64 %63, %65
  br i1 %66, label %67, label %75

67:                                               ; preds = %61
  %68 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %37, i64 0, i32 2, i32 0, i32 0, i64 %2, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %13, i64 0, i32 5
  %71 = bitcast %"class.rx::BufferImpl"** %70 to %"class.rx::BufferGL"**
  %72 = load %"class.rx::BufferGL"*, %"class.rx::BufferGL"** %71, align 8
  %73 = tail call i32 @_ZNK2rx8BufferGL11getBufferIDEv(%"class.rx::BufferGL"* %72) #13
  %74 = icmp eq i32 %69, %73
  br i1 %74, label %126, label %75

75:                                               ; preds = %55, %61, %35, %67, %49, %43
  %76 = tail call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %77 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %13, i64 0, i32 5
  %78 = bitcast %"class.rx::BufferImpl"** %77 to %"class.rx::BufferGL"**
  %79 = load %"class.rx::BufferGL"*, %"class.rx::BufferGL"** %78, align 8
  %80 = tail call i32 @_ZNK2rx8BufferGL11getBufferIDEv(%"class.rx::BufferGL"* %79) #13
  tail call void @_ZN2rx14StateManagerGL10bindBufferEN2gl13BufferBindingEj(%"class.rx::StateManagerGL"* %76, i8 zeroext 0, i32 %80) #13
  %81 = trunc i64 %2 to i32
  %82 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %11, i64 0, i32 0
  %83 = load i32, i32* %82, align 8
  %84 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %10, i64 %2, i32 2
  %85 = load i64, i64* %84, align 8
  tail call void @_ZNK2rx13VertexArrayGL23callVertexAttribPointerEPKN2gl7ContextEjRKNS1_15VertexAttributeEil(%"class.rx::VertexArrayGL"* undef, %"class.gl::Context"* %1, i32 %81, %"struct.gl::VertexAttribute"* dereferenceable(48) %8, i32 %83, i64 %85)
  %86 = bitcast %"struct.angle::Format"** %40 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %36, align 8
  %89 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %88, i64 0, i32 1, i32 0, i32 0, i64 %2, i32 1
  %90 = bitcast %"struct.angle::Format"** %89 to i64*
  store i64 %87, i64* %90, align 8
  %91 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %36, align 8
  %92 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %91, i64 0, i32 1, i32 0, i32 0, i64 %2, i32 3
  store i32 0, i32* %92, align 8
  %93 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %36, align 8
  %94 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %93, i64 0, i32 1, i32 0, i32 0, i64 %2, i32 4
  store i32 %81, i32* %94, align 4
  %95 = load i32, i32* %82, align 8
  %96 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %36, align 8
  %97 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %96, i64 0, i32 2, i32 0, i32 0, i64 %2, i32 0
  store i32 %95, i32* %97, align 8
  %98 = load i64, i64* %84, align 8
  %99 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %36, align 8
  %100 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %99, i64 0, i32 2, i32 0, i32 0, i64 %2, i32 2
  store i64 %98, i64* %100, align 8
  %101 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %13, i64 0, i32 0, i32 0, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = add i64 %102, 1
  store i64 %103, i64* %101, align 8
  %104 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 %2, i32 0, i32 1
  %105 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %104, align 8
  store %"class.gl::Buffer"* %13, %"class.gl::Buffer"** %104, align 8
  %106 = icmp eq %"class.gl::Buffer"* %105, null
  br i1 %106, label %121, label %107

107:                                              ; preds = %75
  %108 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %105, i64 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %105, i64 0, i32 0, i32 0, i32 1
  %110 = load i64, i64* %109, align 8
  %111 = add i64 %110, -1
  store i64 %111, i64* %109, align 8
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %121

113:                                              ; preds = %107
  %114 = bitcast %"class.gl::Buffer"* %105 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %115 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %114, align 8
  %116 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %115, align 8
  tail call void %116(%"class.angle::RefCountObject"* %108, %"class.gl::Context"* %1) #13
  %117 = bitcast %"class.gl::Buffer"* %105 to void (%"class.angle::RefCountObject"*)***
  %118 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %117, align 8
  %119 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %118, i64 2
  %120 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %119, align 8
  tail call void %120(%"class.angle::RefCountObject"* nonnull %108) #13
  br label %121

121:                                              ; preds = %113, %107, %75, %33
  %122 = phi %"struct.rx::VertexArrayStateGL"** [ %34, %33 ], [ %36, %75 ], [ %36, %107 ], [ %36, %113 ]
  %123 = phi i32 [ 0, %33 ], [ %80, %75 ], [ %80, %107 ], [ %80, %113 ]
  %124 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %122, align 8
  %125 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %124, i64 0, i32 2, i32 0, i32 0, i64 %2, i32 3
  store i32 %123, i32* %125, align 8
  br label %126

126:                                              ; preds = %121, %67
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK2rx13VertexArrayGL26supportVertexAttribBindingEPKN2gl7ContextE(%"class.rx::VertexArrayGL"* nocapture readnone, %"class.gl::Context"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %4 = tail call dereferenceable(3576) %"struct.angle::FeaturesGL"* @_ZN2rx13GetFeaturesGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %5 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %3, i64 0, i32 0, i32 538
  %6 = load void (i32, i32)*, void (i32, i32)** %5, align 8
  %7 = icmp ne void (i32, i32)* %6, null
  %8 = getelementptr inbounds %"struct.angle::FeaturesGL", %"struct.angle::FeaturesGL"* %4, i64 0, i32 70, i32 4
  %9 = load i8, i8* %8, align 8
  %10 = icmp eq i8 %9, 0
  %11 = and i1 %7, %10
  ret i1 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13VertexArrayGL18updateAttribFormatEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* nocapture readonly, %"class.gl::Context"*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.gl::VertexArrayState"*, %"class.gl::VertexArrayState"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %6, align 8
  %8 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 5
  %9 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %8, align 8
  %10 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %9, i64 0, i32 1, i32 0, i32 0, i64 %2, i32 1
  %11 = load %"struct.angle::Format"*, %"struct.angle::Format"** %10, align 8
  %12 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %7, i64 %2, i32 1
  %13 = load %"struct.angle::Format"*, %"struct.angle::Format"** %12, align 8
  %14 = icmp eq %"struct.angle::Format"* %11, %13
  br i1 %14, label %15, label %21

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %9, i64 0, i32 1, i32 0, i32 0, i64 %2, i32 3
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %7, i64 %2, i32 3
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %17, %19
  br i1 %20, label %86, label %21

21:                                               ; preds = %3, %15
  %22 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %23 = load %"struct.angle::Format"*, %"struct.angle::Format"** %12, align 8
  %24 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %23, i64 0, i32 7
  %25 = load i32, i32* %24, align 8
  %26 = or i32 %25, 1
  %27 = icmp eq i32 %26, 5125
  br i1 %27, label %28, label %52

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %23, i64 0, i32 20
  %30 = load i8, i8* %29, align 2, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %32, label %52

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %22, i64 0, i32 0, i32 540
  %34 = load void (i32, i32, i32, i32)*, void (i32, i32, i32, i32)** %33, align 8
  %35 = trunc i64 %2 to i32
  %36 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %23, i64 0, i32 17
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %23, i64 0, i32 23
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, -13
  %41 = icmp ult i32 %40, 5
  br i1 %41, label %44, label %42

42:                                               ; preds = %32
  %43 = add i32 %39, 5120
  br label %48

44:                                               ; preds = %32
  %45 = sext i32 %40 to i64
  %46 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZNK2rx13VertexArrayGL13validateStateEPKN2gl7ContextE, i64 0, i64 %45
  %47 = load i32, i32* %46, align 4
  br label %48

48:                                               ; preds = %44, %42
  %49 = phi i32 [ %43, %42 ], [ %47, %44 ]
  %50 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %7, i64 %2, i32 3
  %51 = load i32, i32* %50, align 8
  tail call void %34(i32 %35, i32 %37, i32 %49, i32 %51) #13
  br label %76

52:                                               ; preds = %21, %28
  %53 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %22, i64 0, i32 0, i32 539
  %54 = load void (i32, i32, i32, i8, i32)*, void (i32, i32, i32, i8, i32)** %53, align 8
  %55 = trunc i64 %2 to i32
  %56 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %23, i64 0, i32 17
  %57 = load i32, i32* %56, align 8
  %58 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %23, i64 0, i32 23
  %59 = load i32, i32* %58, align 4
  %60 = add i32 %59, -13
  %61 = icmp ult i32 %60, 5
  br i1 %61, label %64, label %62

62:                                               ; preds = %52
  %63 = add i32 %59, 5120
  br label %68

64:                                               ; preds = %52
  %65 = sext i32 %60 to i64
  %66 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZNK2rx13VertexArrayGL13validateStateEPKN2gl7ContextE, i64 0, i64 %65
  %67 = load i32, i32* %66, align 4
  br label %68

68:                                               ; preds = %64, %62
  %69 = phi i32 [ %63, %62 ], [ %67, %64 ]
  %70 = icmp eq i32 %25, 36764
  %71 = icmp eq i32 %25, 35863
  %72 = or i1 %70, %71
  %73 = zext i1 %72 to i8
  %74 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %7, i64 %2, i32 3
  %75 = load i32, i32* %74, align 8
  tail call void %54(i32 %55, i32 %57, i32 %69, i8 zeroext %73, i32 %75) #13
  br label %76

76:                                               ; preds = %68, %48
  %77 = bitcast %"struct.angle::Format"** %12 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %8, align 8
  %80 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %79, i64 0, i32 1, i32 0, i32 0, i64 %2, i32 1
  %81 = bitcast %"struct.angle::Format"** %80 to i64*
  store i64 %78, i64* %81, align 8
  %82 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %7, i64 %2, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %8, align 8
  %85 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %84, i64 0, i32 1, i32 0, i32 0, i64 %2, i32 3
  store i32 %83, i32* %85, align 8
  br label %86

86:                                               ; preds = %15, %76
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13VertexArrayGL19updateAttribBindingEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* nocapture readonly, %"class.gl::Context"*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.gl::VertexArrayState"*, %"class.gl::VertexArrayState"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %5, i64 0, i32 1, i32 0, i32 0
  %7 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %6, align 8
  %8 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %7, i64 %2, i32 5
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 5
  %11 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %10, align 8
  %12 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %11, i64 0, i32 1, i32 0, i32 0, i64 %2, i32 4
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, %9
  br i1 %14, label %22, label %15

15:                                               ; preds = %3
  %16 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %17 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %16, i64 0, i32 0, i32 538
  %18 = load void (i32, i32)*, void (i32, i32)** %17, align 8
  %19 = trunc i64 %2 to i32
  tail call void %18(i32 %19, i32 %9) #13
  %20 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %10, align 8
  %21 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %20, i64 0, i32 1, i32 0, i32 0, i64 %2, i32 4
  store i32 %9, i32* %21, align 4
  br label %22

22:                                               ; preds = %3, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13VertexArrayGL19updateBindingBufferEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* nocapture, %"class.gl::Context"*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 0, i32 1
  %5 = load %"class.gl::VertexArrayState"*, %"class.gl::VertexArrayState"** %4, align 8
  %6 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %5, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %6, align 8
  %8 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 5
  %9 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %8, align 8
  %10 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %9, i64 0, i32 2, i32 0, i32 0, i64 %2, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %7, i64 %2, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %35

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %9, i64 0, i32 2, i32 0, i32 0, i64 %2, i32 2
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %7, i64 %2, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %17, %19
  br i1 %20, label %21, label %35

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %9, i64 0, i32 2, i32 0, i32 0, i64 %2, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %7, i64 %2, i32 3, i32 0, i32 1
  %25 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %24, align 8
  %26 = icmp eq %"class.gl::Buffer"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %25, i64 0, i32 5
  %29 = bitcast %"class.rx::BufferImpl"** %28 to %"class.rx::BufferGL"**
  %30 = load %"class.rx::BufferGL"*, %"class.rx::BufferGL"** %29, align 8
  %31 = tail call i32 @_ZNK2rx8BufferGL11getBufferIDEv(%"class.rx::BufferGL"* %30) #13
  br label %32

32:                                               ; preds = %21, %27
  %33 = phi i32 [ %31, %27 ], [ 0, %21 ]
  %34 = icmp eq i32 %23, %33
  br i1 %34, label %84, label %35

35:                                               ; preds = %3, %15, %32
  %36 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %7, i64 %2, i32 3, i32 0, i32 1
  %37 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %36, align 8
  %38 = icmp eq %"class.gl::Buffer"* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %37, i64 0, i32 5
  %41 = bitcast %"class.rx::BufferImpl"** %40 to %"class.rx::BufferGL"**
  %42 = load %"class.rx::BufferGL"*, %"class.rx::BufferGL"** %41, align 8
  %43 = tail call i32 @_ZNK2rx8BufferGL11getBufferIDEv(%"class.rx::BufferGL"* %42) #13
  br label %44

44:                                               ; preds = %35, %39
  %45 = phi i32 [ %43, %39 ], [ 0, %35 ]
  %46 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %47 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %46, i64 0, i32 0, i32 498
  %48 = load void (i32, i32, i64, i32)*, void (i32, i32, i64, i32)** %47, align 8
  %49 = trunc i64 %2 to i32
  %50 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %7, i64 %2, i32 2
  %51 = load i64, i64* %50, align 8
  %52 = load i32, i32* %12, align 8
  tail call void %48(i32 %49, i32 %45, i64 %51, i32 %52) #13
  %53 = load i32, i32* %12, align 8
  %54 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %8, align 8
  %55 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %54, i64 0, i32 2, i32 0, i32 0, i64 %2, i32 0
  store i32 %53, i32* %55, align 8
  %56 = load i64, i64* %50, align 8
  %57 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %8, align 8
  %58 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %57, i64 0, i32 2, i32 0, i32 0, i64 %2, i32 2
  store i64 %56, i64* %58, align 8
  br i1 %38, label %63, label %59

59:                                               ; preds = %44
  %60 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %37, i64 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = add i64 %61, 1
  store i64 %62, i64* %60, align 8
  br label %63

63:                                               ; preds = %59, %44
  %64 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 7, i32 0, i64 %2, i32 0, i32 1
  %65 = load %"class.gl::Buffer"*, %"class.gl::Buffer"** %64, align 8
  store %"class.gl::Buffer"* %37, %"class.gl::Buffer"** %64, align 8
  %66 = icmp eq %"class.gl::Buffer"* %65, null
  br i1 %66, label %81, label %67

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %65, i64 0, i32 0, i32 0
  %69 = getelementptr inbounds %"class.gl::Buffer", %"class.gl::Buffer"* %65, i64 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, -1
  store i64 %71, i64* %69, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %81

73:                                               ; preds = %67
  %74 = bitcast %"class.gl::Buffer"* %65 to void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)***
  %75 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)**, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*** %74, align 8
  %76 = load void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)*, void (%"class.angle::RefCountObject"*, %"class.gl::Context"*)** %75, align 8
  tail call void %76(%"class.angle::RefCountObject"* %68, %"class.gl::Context"* %1) #13
  %77 = bitcast %"class.gl::Buffer"* %65 to void (%"class.angle::RefCountObject"*)***
  %78 = load void (%"class.angle::RefCountObject"*)**, void (%"class.angle::RefCountObject"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %78, i64 2
  %80 = load void (%"class.angle::RefCountObject"*)*, void (%"class.angle::RefCountObject"*)** %79, align 8
  tail call void %80(%"class.angle::RefCountObject"* nonnull %68) #13
  br label %81

81:                                               ; preds = %63, %67, %73
  %82 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %8, align 8
  %83 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %82, i64 0, i32 2, i32 0, i32 0, i64 %2, i32 3
  store i32 %45, i32* %83, align 8
  br label %84

84:                                               ; preds = %32, %81
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13VertexArrayGL20updateBindingDivisorEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* nocapture, %"class.gl::Context"*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 0, i32 1
  %7 = load %"class.gl::VertexArrayState"*, %"class.gl::VertexArrayState"** %6, align 8
  %8 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %7, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.gl::VertexBinding"*, %"class.gl::VertexBinding"** %8, align 8
  %10 = getelementptr inbounds %"class.gl::VertexBinding", %"class.gl::VertexBinding"* %9, i64 %2, i32 1
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, %5
  %13 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 5
  %14 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %13, align 8
  %15 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %14, i64 0, i32 2, i32 0, i32 0, i64 %2, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, %12
  br i1 %17, label %58, label %18

18:                                               ; preds = %3
  %19 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %20 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %21 = tail call dereferenceable(3576) %"struct.angle::FeaturesGL"* @_ZN2rx13GetFeaturesGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %22 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %20, i64 0, i32 0, i32 538
  %23 = load void (i32, i32)*, void (i32, i32)** %22, align 8
  %24 = icmp ne void (i32, i32)* %23, null
  %25 = getelementptr inbounds %"struct.angle::FeaturesGL", %"struct.angle::FeaturesGL"* %21, i64 0, i32 70, i32 4
  %26 = load i8, i8* %25, align 8
  %27 = icmp eq i8 %26, 0
  %28 = and i1 %24, %27
  br i1 %28, label %29, label %33

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %19, i64 0, i32 0, i32 542
  %31 = load void (i32, i32)*, void (i32, i32)** %30, align 8
  %32 = trunc i64 %2 to i32
  tail call void %31(i32 %32, i32 %12) #13
  br label %37

33:                                               ; preds = %18
  %34 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %19, i64 0, i32 0, i32 343
  %35 = load void (i32, i32)*, void (i32, i32)** %34, align 8
  %36 = trunc i64 %2 to i32
  tail call void %35(i32 %36, i32 %12) #13
  br label %37

37:                                               ; preds = %33, %29
  %38 = icmp eq i32 %12, 0
  %39 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 13
  br i1 %38, label %46, label %40

40:                                               ; preds = %37
  %41 = shl i64 1, %2
  %42 = and i64 %41, 65535
  %43 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %39, i64 0, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = or i64 %44, %42
  store i64 %45, i64* %43, align 8
  br label %55

46:                                               ; preds = %37
  %47 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %39, i64 0, i32 0
  %48 = load i64, i64* %47, align 8
  %49 = shl i64 1, %2
  %50 = and i64 %48, %49
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %46
  %53 = xor i64 %49, -1
  %54 = and i64 %48, %53
  store i64 %54, i64* %47, align 8
  br label %55

55:                                               ; preds = %46, %52, %40
  %56 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %13, align 8
  %57 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %56, i64 0, i32 2, i32 0, i32 0, i64 %2, i32 1
  store i32 %12, i32* %57, align 4
  br label %58

58:                                               ; preds = %3, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13VertexArrayGL15syncDirtyAttribEPKN2gl7ContextEmRKN5angle7BitSetTILm5EmmEE(%"class.rx::VertexArrayGL"* nocapture, %"class.gl::Context"*, i64, %"class.angle::BitSetT.24"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.angle::BitSetT.24", %"class.angle::BitSetT.24"* %3, i64 0, i32 0
  %6 = load i64, i64* %5, align 8, !noalias !26
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %15, label %8

8:                                                ; preds = %4
  %9 = tail call i64 @llvm.cttz.i64(i64 %6, i1 true) #13, !range !9
  %10 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 5
  %12 = trunc i64 %2 to i32
  %13 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 3, i32 0
  %14 = shl i64 1, %2
  br label %16

15:                                               ; preds = %67, %4
  ret void

16:                                               ; preds = %8, %67
  %17 = phi i64 [ %9, %8 ], [ %72, %67 ]
  %18 = phi i64 [ %6, %8 ], [ %70, %67 ]
  switch i64 %17, label %67 [
    i64 0, label %19
    i64 4, label %49
    i64 1, label %49
    i64 2, label %50
    i64 3, label %51
  ]

19:                                               ; preds = %16
  %20 = load %"class.gl::VertexArrayState"*, %"class.gl::VertexArrayState"** %10, align 8
  %21 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %20, i64 0, i32 1, i32 0, i32 0
  %22 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %21, align 8
  %23 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %22, i64 %2, i32 0
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = zext i8 %24 to i32
  %26 = load i64, i64* %13, align 8
  %27 = and i64 %26, %14
  %28 = icmp ne i64 %27, 0
  %29 = zext i1 %28 to i32
  %30 = and i32 %29, %25
  %31 = trunc i32 %30 to i8
  %32 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %11, align 8
  %33 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %32, i64 0, i32 1, i32 0, i32 0, i64 %2, i32 0
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = zext i8 %34 to i32
  %36 = icmp eq i32 %30, %35
  br i1 %36, label %67, label %37

37:                                               ; preds = %19
  %38 = icmp eq i32 %30, 0
  %39 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  br i1 %38, label %43, label %40

40:                                               ; preds = %37
  %41 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %39, i64 0, i32 0, i32 121
  %42 = load void (i32)*, void (i32)** %41, align 8
  tail call void %42(i32 %12) #13
  br label %46

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %39, i64 0, i32 0, i32 119
  %45 = load void (i32)*, void (i32)** %44, align 8
  tail call void %45(i32 %12) #13
  br label %46

46:                                               ; preds = %43, %40
  %47 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %11, align 8
  %48 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %47, i64 0, i32 1, i32 0, i32 0, i64 %2, i32 0
  store i8 %31, i8* %48, align 8
  br label %67

49:                                               ; preds = %16, %16
  tail call void @_ZN2rx13VertexArrayGL19updateAttribPointerEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 %2)
  br label %67

50:                                               ; preds = %16
  tail call void @_ZN2rx13VertexArrayGL18updateAttribFormatEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 %2)
  br label %67

51:                                               ; preds = %16
  %52 = load %"class.gl::VertexArrayState"*, %"class.gl::VertexArrayState"** %10, align 8
  %53 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %52, i64 0, i32 1, i32 0, i32 0
  %54 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %53, align 8
  %55 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %54, i64 %2, i32 5
  %56 = load i32, i32* %55, align 8
  %57 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %11, align 8
  %58 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %57, i64 0, i32 1, i32 0, i32 0, i64 %2, i32 4
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, %56
  br i1 %60, label %67, label %61

61:                                               ; preds = %51
  %62 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %63 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %62, i64 0, i32 0, i32 538
  %64 = load void (i32, i32)*, void (i32, i32)** %63, align 8
  tail call void %64(i32 %12, i32 %56) #13
  %65 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %11, align 8
  %66 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %65, i64 0, i32 1, i32 0, i32 0, i64 %2, i32 4
  store i32 %56, i32* %66, align 4
  br label %67

67:                                               ; preds = %61, %51, %46, %19, %16, %50, %49
  %68 = shl i64 1, %17
  %69 = xor i64 %68, -1
  %70 = and i64 %18, %69
  %71 = icmp eq i64 %70, 0
  %72 = tail call i64 @llvm.cttz.i64(i64 %70, i1 true) #13, !range !9
  br i1 %71, label %15, label %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13VertexArrayGL16syncDirtyBindingEPKN2gl7ContextEmRKN5angle7BitSetTILm2EmmEE(%"class.rx::VertexArrayGL"* nocapture, %"class.gl::Context"*, i64, %"class.angle::BitSetT.26"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.angle::BitSetT.26", %"class.angle::BitSetT.26"* %3, i64 0, i32 0
  %6 = load i64, i64* %5, align 8, !noalias !29
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %4
  %9 = tail call i64 @llvm.cttz.i64(i64 %6, i1 true) #13, !range !9
  br label %11

10:                                               ; preds = %16, %4
  ret void

11:                                               ; preds = %8, %16
  %12 = phi i64 [ %21, %16 ], [ %9, %8 ]
  %13 = phi i64 [ %19, %16 ], [ %6, %8 ]
  switch i64 %12, label %16 [
    i64 0, label %14
    i64 1, label %15
  ]

14:                                               ; preds = %11
  tail call void @_ZN2rx13VertexArrayGL19updateBindingBufferEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 %2)
  br label %16

15:                                               ; preds = %11
  tail call void @_ZN2rx13VertexArrayGL20updateBindingDivisorEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 %2)
  br label %16

16:                                               ; preds = %11, %15, %14
  %17 = shl i64 1, %12
  %18 = xor i64 %17, -1
  %19 = and i64 %13, %18
  %20 = icmp eq i64 %19, 0
  %21 = tail call i64 @llvm.cttz.i64(i64 %19, i1 true) #13, !range !9
  br i1 %20, label %10, label %11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2rx13VertexArrayGL9syncStateEPKN2gl7ContextERKN5angle7BitSetTILm50EmmEEPNSt3__15arrayINS6_ILm5EmmEELm16EEEPNSB_INS6_ILm2EmmEELm16EEE(%"class.rx::VertexArrayGL"*, %"class.gl::Context"*, %"class.angle::BitSetT.22"* nocapture readonly dereferenceable(8), %"struct.std::__1::array.23"*, %"struct.std::__1::array.25"*) unnamed_addr #0 align 2 {
  %6 = tail call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %7 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 5
  %10 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %9, align 8
  tail call void @_ZN2rx14StateManagerGL15bindVertexArrayEjPNS_18VertexArrayStateGLE(%"class.rx::StateManagerGL"* %6, i32 %8, %"struct.rx::VertexArrayStateGL"* %10) #13
  %11 = getelementptr inbounds %"class.angle::BitSetT.22", %"class.angle::BitSetT.22"* %2, i64 0, i32 0
  %12 = load i64, i64* %11, align 8, !noalias !32
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %64, label %14

14:                                               ; preds = %5
  %15 = tail call i64 @llvm.cttz.i64(i64 %12, i1 true) #13, !range !9
  %16 = getelementptr inbounds %"struct.std::__1::array.25", %"struct.std::__1::array.25"* %4, i64 0, i32 0, i64 14, i32 0
  %17 = getelementptr inbounds %"struct.std::__1::array.25", %"struct.std::__1::array.25"* %4, i64 0, i32 0, i64 13, i32 0
  %18 = getelementptr inbounds %"struct.std::__1::array.25", %"struct.std::__1::array.25"* %4, i64 0, i32 0, i64 12, i32 0
  %19 = getelementptr inbounds %"struct.std::__1::array.25", %"struct.std::__1::array.25"* %4, i64 0, i32 0, i64 11, i32 0
  %20 = getelementptr inbounds %"struct.std::__1::array.25", %"struct.std::__1::array.25"* %4, i64 0, i32 0, i64 10, i32 0
  %21 = getelementptr inbounds %"struct.std::__1::array.25", %"struct.std::__1::array.25"* %4, i64 0, i32 0, i64 9, i32 0
  %22 = getelementptr inbounds %"struct.std::__1::array.25", %"struct.std::__1::array.25"* %4, i64 0, i32 0, i64 8, i32 0
  %23 = getelementptr inbounds %"struct.std::__1::array.25", %"struct.std::__1::array.25"* %4, i64 0, i32 0, i64 7, i32 0
  %24 = getelementptr inbounds %"struct.std::__1::array.25", %"struct.std::__1::array.25"* %4, i64 0, i32 0, i64 6, i32 0
  %25 = getelementptr inbounds %"struct.std::__1::array.25", %"struct.std::__1::array.25"* %4, i64 0, i32 0, i64 5, i32 0
  %26 = getelementptr inbounds %"struct.std::__1::array.25", %"struct.std::__1::array.25"* %4, i64 0, i32 0, i64 4, i32 0
  %27 = getelementptr inbounds %"struct.std::__1::array.25", %"struct.std::__1::array.25"* %4, i64 0, i32 0, i64 3, i32 0
  %28 = getelementptr inbounds %"struct.std::__1::array.25", %"struct.std::__1::array.25"* %4, i64 0, i32 0, i64 2, i32 0
  %29 = getelementptr inbounds %"struct.std::__1::array.25", %"struct.std::__1::array.25"* %4, i64 0, i32 0, i64 1, i32 0
  %30 = getelementptr inbounds %"struct.std::__1::array.25", %"struct.std::__1::array.25"* %4, i64 0, i32 0, i64 0, i32 0
  %31 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %3, i64 0, i32 0, i64 15
  %32 = getelementptr inbounds %"class.angle::BitSetT.24", %"class.angle::BitSetT.24"* %31, i64 0, i32 0
  %33 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %3, i64 0, i32 0, i64 14
  %34 = getelementptr inbounds %"class.angle::BitSetT.24", %"class.angle::BitSetT.24"* %33, i64 0, i32 0
  %35 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %3, i64 0, i32 0, i64 13
  %36 = getelementptr inbounds %"class.angle::BitSetT.24", %"class.angle::BitSetT.24"* %35, i64 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %3, i64 0, i32 0, i64 12
  %38 = getelementptr inbounds %"class.angle::BitSetT.24", %"class.angle::BitSetT.24"* %37, i64 0, i32 0
  %39 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %3, i64 0, i32 0, i64 11
  %40 = getelementptr inbounds %"class.angle::BitSetT.24", %"class.angle::BitSetT.24"* %39, i64 0, i32 0
  %41 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %3, i64 0, i32 0, i64 10
  %42 = getelementptr inbounds %"class.angle::BitSetT.24", %"class.angle::BitSetT.24"* %41, i64 0, i32 0
  %43 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %3, i64 0, i32 0, i64 9
  %44 = getelementptr inbounds %"class.angle::BitSetT.24", %"class.angle::BitSetT.24"* %43, i64 0, i32 0
  %45 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %3, i64 0, i32 0, i64 8
  %46 = getelementptr inbounds %"class.angle::BitSetT.24", %"class.angle::BitSetT.24"* %45, i64 0, i32 0
  %47 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %3, i64 0, i32 0, i64 7
  %48 = getelementptr inbounds %"class.angle::BitSetT.24", %"class.angle::BitSetT.24"* %47, i64 0, i32 0
  %49 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %3, i64 0, i32 0, i64 6
  %50 = getelementptr inbounds %"class.angle::BitSetT.24", %"class.angle::BitSetT.24"* %49, i64 0, i32 0
  %51 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %3, i64 0, i32 0, i64 5
  %52 = getelementptr inbounds %"class.angle::BitSetT.24", %"class.angle::BitSetT.24"* %51, i64 0, i32 0
  %53 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %3, i64 0, i32 0, i64 4
  %54 = getelementptr inbounds %"class.angle::BitSetT.24", %"class.angle::BitSetT.24"* %53, i64 0, i32 0
  %55 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %3, i64 0, i32 0, i64 3
  %56 = getelementptr inbounds %"class.angle::BitSetT.24", %"class.angle::BitSetT.24"* %55, i64 0, i32 0
  %57 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %3, i64 0, i32 0, i64 2
  %58 = getelementptr inbounds %"class.angle::BitSetT.24", %"class.angle::BitSetT.24"* %57, i64 0, i32 0
  %59 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %3, i64 0, i32 0, i64 1
  %60 = getelementptr inbounds %"class.angle::BitSetT.24", %"class.angle::BitSetT.24"* %59, i64 0, i32 0
  %61 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %3, i64 0, i32 0, i64 0
  %62 = getelementptr inbounds %"struct.std::__1::array.23", %"struct.std::__1::array.23"* %3, i64 0, i32 0, i64 0, i32 0
  %63 = getelementptr inbounds %"struct.std::__1::array.25", %"struct.std::__1::array.25"* %4, i64 0, i32 0, i64 15, i32 0
  br label %65

64:                                               ; preds = %357, %5
  ret i32 0

65:                                               ; preds = %14, %357
  %66 = phi i64 [ %15, %14 ], [ %362, %357 ]
  %67 = phi i64 [ %12, %14 ], [ %360, %357 ]
  switch i64 %66, label %357 [
    i64 0, label %68
    i64 33, label %340
    i64 2, label %69
    i64 3, label %70
    i64 4, label %71
    i64 5, label %72
    i64 6, label %73
    i64 7, label %74
    i64 8, label %75
    i64 9, label %76
    i64 10, label %77
    i64 11, label %78
    i64 12, label %79
    i64 13, label %80
    i64 14, label %81
    i64 15, label %82
    i64 16, label %83
    i64 17, label %84
    i64 18, label %85
    i64 19, label %102
    i64 20, label %119
    i64 21, label %136
    i64 22, label %153
    i64 23, label %170
    i64 24, label %187
    i64 25, label %204
    i64 26, label %221
    i64 27, label %238
    i64 28, label %255
    i64 29, label %272
    i64 30, label %289
    i64 31, label %306
    i64 32, label %323
  ]

68:                                               ; preds = %65
  tail call void @_ZNK2rx13VertexArrayGL31updateElementArrayBufferBindingEPKN2gl7ContextE(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1)
  br label %357

69:                                               ; preds = %65
  tail call void @_ZN2rx13VertexArrayGL15syncDirtyAttribEPKN2gl7ContextEmRKN5angle7BitSetTILm5EmmEE(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 0, %"class.angle::BitSetT.24"* dereferenceable(8) %61)
  store i64 0, i64* %62, align 8
  br label %357

70:                                               ; preds = %65
  tail call void @_ZN2rx13VertexArrayGL15syncDirtyAttribEPKN2gl7ContextEmRKN5angle7BitSetTILm5EmmEE(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 1, %"class.angle::BitSetT.24"* dereferenceable(8) %59)
  store i64 0, i64* %60, align 8
  br label %357

71:                                               ; preds = %65
  tail call void @_ZN2rx13VertexArrayGL15syncDirtyAttribEPKN2gl7ContextEmRKN5angle7BitSetTILm5EmmEE(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 2, %"class.angle::BitSetT.24"* dereferenceable(8) %57)
  store i64 0, i64* %58, align 8
  br label %357

72:                                               ; preds = %65
  tail call void @_ZN2rx13VertexArrayGL15syncDirtyAttribEPKN2gl7ContextEmRKN5angle7BitSetTILm5EmmEE(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 3, %"class.angle::BitSetT.24"* dereferenceable(8) %55)
  store i64 0, i64* %56, align 8
  br label %357

73:                                               ; preds = %65
  tail call void @_ZN2rx13VertexArrayGL15syncDirtyAttribEPKN2gl7ContextEmRKN5angle7BitSetTILm5EmmEE(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 4, %"class.angle::BitSetT.24"* dereferenceable(8) %53)
  store i64 0, i64* %54, align 8
  br label %357

74:                                               ; preds = %65
  tail call void @_ZN2rx13VertexArrayGL15syncDirtyAttribEPKN2gl7ContextEmRKN5angle7BitSetTILm5EmmEE(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 5, %"class.angle::BitSetT.24"* dereferenceable(8) %51)
  store i64 0, i64* %52, align 8
  br label %357

75:                                               ; preds = %65
  tail call void @_ZN2rx13VertexArrayGL15syncDirtyAttribEPKN2gl7ContextEmRKN5angle7BitSetTILm5EmmEE(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 6, %"class.angle::BitSetT.24"* dereferenceable(8) %49)
  store i64 0, i64* %50, align 8
  br label %357

76:                                               ; preds = %65
  tail call void @_ZN2rx13VertexArrayGL15syncDirtyAttribEPKN2gl7ContextEmRKN5angle7BitSetTILm5EmmEE(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 7, %"class.angle::BitSetT.24"* dereferenceable(8) %47)
  store i64 0, i64* %48, align 8
  br label %357

77:                                               ; preds = %65
  tail call void @_ZN2rx13VertexArrayGL15syncDirtyAttribEPKN2gl7ContextEmRKN5angle7BitSetTILm5EmmEE(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 8, %"class.angle::BitSetT.24"* dereferenceable(8) %45)
  store i64 0, i64* %46, align 8
  br label %357

78:                                               ; preds = %65
  tail call void @_ZN2rx13VertexArrayGL15syncDirtyAttribEPKN2gl7ContextEmRKN5angle7BitSetTILm5EmmEE(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 9, %"class.angle::BitSetT.24"* dereferenceable(8) %43)
  store i64 0, i64* %44, align 8
  br label %357

79:                                               ; preds = %65
  tail call void @_ZN2rx13VertexArrayGL15syncDirtyAttribEPKN2gl7ContextEmRKN5angle7BitSetTILm5EmmEE(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 10, %"class.angle::BitSetT.24"* dereferenceable(8) %41)
  store i64 0, i64* %42, align 8
  br label %357

80:                                               ; preds = %65
  tail call void @_ZN2rx13VertexArrayGL15syncDirtyAttribEPKN2gl7ContextEmRKN5angle7BitSetTILm5EmmEE(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 11, %"class.angle::BitSetT.24"* dereferenceable(8) %39)
  store i64 0, i64* %40, align 8
  br label %357

81:                                               ; preds = %65
  tail call void @_ZN2rx13VertexArrayGL15syncDirtyAttribEPKN2gl7ContextEmRKN5angle7BitSetTILm5EmmEE(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 12, %"class.angle::BitSetT.24"* dereferenceable(8) %37)
  store i64 0, i64* %38, align 8
  br label %357

82:                                               ; preds = %65
  tail call void @_ZN2rx13VertexArrayGL15syncDirtyAttribEPKN2gl7ContextEmRKN5angle7BitSetTILm5EmmEE(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 13, %"class.angle::BitSetT.24"* dereferenceable(8) %35)
  store i64 0, i64* %36, align 8
  br label %357

83:                                               ; preds = %65
  tail call void @_ZN2rx13VertexArrayGL15syncDirtyAttribEPKN2gl7ContextEmRKN5angle7BitSetTILm5EmmEE(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 14, %"class.angle::BitSetT.24"* dereferenceable(8) %33)
  store i64 0, i64* %34, align 8
  br label %357

84:                                               ; preds = %65
  tail call void @_ZN2rx13VertexArrayGL15syncDirtyAttribEPKN2gl7ContextEmRKN5angle7BitSetTILm5EmmEE(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 15, %"class.angle::BitSetT.24"* dereferenceable(8) %31)
  store i64 0, i64* %32, align 8
  br label %357

85:                                               ; preds = %65
  %86 = load i64, i64* %30, align 8, !noalias !35
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %101, label %88

88:                                               ; preds = %85
  %89 = tail call i64 @llvm.cttz.i64(i64 %86, i1 true) #13, !range !9
  br label %90

90:                                               ; preds = %95, %88
  %91 = phi i64 [ %100, %95 ], [ %89, %88 ]
  %92 = phi i64 [ %98, %95 ], [ %86, %88 ]
  switch i64 %91, label %95 [
    i64 0, label %93
    i64 1, label %94
  ]

93:                                               ; preds = %90
  tail call void @_ZN2rx13VertexArrayGL19updateBindingBufferEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 0) #13
  br label %95

94:                                               ; preds = %90
  tail call void @_ZN2rx13VertexArrayGL20updateBindingDivisorEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 0) #13
  br label %95

95:                                               ; preds = %94, %93, %90
  %96 = shl i64 1, %91
  %97 = xor i64 %96, -1
  %98 = and i64 %92, %97
  %99 = icmp eq i64 %98, 0
  %100 = tail call i64 @llvm.cttz.i64(i64 %98, i1 true) #13, !range !9
  br i1 %99, label %101, label %90

101:                                              ; preds = %95, %85
  store i64 0, i64* %30, align 8
  br label %357

102:                                              ; preds = %65
  %103 = load i64, i64* %29, align 8, !noalias !38
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %118, label %105

105:                                              ; preds = %102
  %106 = tail call i64 @llvm.cttz.i64(i64 %103, i1 true) #13, !range !9
  br label %107

107:                                              ; preds = %112, %105
  %108 = phi i64 [ %117, %112 ], [ %106, %105 ]
  %109 = phi i64 [ %115, %112 ], [ %103, %105 ]
  switch i64 %108, label %112 [
    i64 0, label %110
    i64 1, label %111
  ]

110:                                              ; preds = %107
  tail call void @_ZN2rx13VertexArrayGL19updateBindingBufferEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 1) #13
  br label %112

111:                                              ; preds = %107
  tail call void @_ZN2rx13VertexArrayGL20updateBindingDivisorEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 1) #13
  br label %112

112:                                              ; preds = %111, %110, %107
  %113 = shl i64 1, %108
  %114 = xor i64 %113, -1
  %115 = and i64 %109, %114
  %116 = icmp eq i64 %115, 0
  %117 = tail call i64 @llvm.cttz.i64(i64 %115, i1 true) #13, !range !9
  br i1 %116, label %118, label %107

118:                                              ; preds = %112, %102
  store i64 0, i64* %29, align 8
  br label %357

119:                                              ; preds = %65
  %120 = load i64, i64* %28, align 8, !noalias !41
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %135, label %122

122:                                              ; preds = %119
  %123 = tail call i64 @llvm.cttz.i64(i64 %120, i1 true) #13, !range !9
  br label %124

124:                                              ; preds = %129, %122
  %125 = phi i64 [ %134, %129 ], [ %123, %122 ]
  %126 = phi i64 [ %132, %129 ], [ %120, %122 ]
  switch i64 %125, label %129 [
    i64 0, label %127
    i64 1, label %128
  ]

127:                                              ; preds = %124
  tail call void @_ZN2rx13VertexArrayGL19updateBindingBufferEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 2) #13
  br label %129

128:                                              ; preds = %124
  tail call void @_ZN2rx13VertexArrayGL20updateBindingDivisorEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 2) #13
  br label %129

129:                                              ; preds = %128, %127, %124
  %130 = shl i64 1, %125
  %131 = xor i64 %130, -1
  %132 = and i64 %126, %131
  %133 = icmp eq i64 %132, 0
  %134 = tail call i64 @llvm.cttz.i64(i64 %132, i1 true) #13, !range !9
  br i1 %133, label %135, label %124

135:                                              ; preds = %129, %119
  store i64 0, i64* %28, align 8
  br label %357

136:                                              ; preds = %65
  %137 = load i64, i64* %27, align 8, !noalias !44
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %152, label %139

139:                                              ; preds = %136
  %140 = tail call i64 @llvm.cttz.i64(i64 %137, i1 true) #13, !range !9
  br label %141

141:                                              ; preds = %146, %139
  %142 = phi i64 [ %151, %146 ], [ %140, %139 ]
  %143 = phi i64 [ %149, %146 ], [ %137, %139 ]
  switch i64 %142, label %146 [
    i64 0, label %144
    i64 1, label %145
  ]

144:                                              ; preds = %141
  tail call void @_ZN2rx13VertexArrayGL19updateBindingBufferEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 3) #13
  br label %146

145:                                              ; preds = %141
  tail call void @_ZN2rx13VertexArrayGL20updateBindingDivisorEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 3) #13
  br label %146

146:                                              ; preds = %145, %144, %141
  %147 = shl i64 1, %142
  %148 = xor i64 %147, -1
  %149 = and i64 %143, %148
  %150 = icmp eq i64 %149, 0
  %151 = tail call i64 @llvm.cttz.i64(i64 %149, i1 true) #13, !range !9
  br i1 %150, label %152, label %141

152:                                              ; preds = %146, %136
  store i64 0, i64* %27, align 8
  br label %357

153:                                              ; preds = %65
  %154 = load i64, i64* %26, align 8, !noalias !47
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %169, label %156

156:                                              ; preds = %153
  %157 = tail call i64 @llvm.cttz.i64(i64 %154, i1 true) #13, !range !9
  br label %158

158:                                              ; preds = %163, %156
  %159 = phi i64 [ %168, %163 ], [ %157, %156 ]
  %160 = phi i64 [ %166, %163 ], [ %154, %156 ]
  switch i64 %159, label %163 [
    i64 0, label %161
    i64 1, label %162
  ]

161:                                              ; preds = %158
  tail call void @_ZN2rx13VertexArrayGL19updateBindingBufferEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 4) #13
  br label %163

162:                                              ; preds = %158
  tail call void @_ZN2rx13VertexArrayGL20updateBindingDivisorEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 4) #13
  br label %163

163:                                              ; preds = %162, %161, %158
  %164 = shl i64 1, %159
  %165 = xor i64 %164, -1
  %166 = and i64 %160, %165
  %167 = icmp eq i64 %166, 0
  %168 = tail call i64 @llvm.cttz.i64(i64 %166, i1 true) #13, !range !9
  br i1 %167, label %169, label %158

169:                                              ; preds = %163, %153
  store i64 0, i64* %26, align 8
  br label %357

170:                                              ; preds = %65
  %171 = load i64, i64* %25, align 8, !noalias !50
  %172 = icmp eq i64 %171, 0
  br i1 %172, label %186, label %173

173:                                              ; preds = %170
  %174 = tail call i64 @llvm.cttz.i64(i64 %171, i1 true) #13, !range !9
  br label %175

175:                                              ; preds = %180, %173
  %176 = phi i64 [ %185, %180 ], [ %174, %173 ]
  %177 = phi i64 [ %183, %180 ], [ %171, %173 ]
  switch i64 %176, label %180 [
    i64 0, label %178
    i64 1, label %179
  ]

178:                                              ; preds = %175
  tail call void @_ZN2rx13VertexArrayGL19updateBindingBufferEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 5) #13
  br label %180

179:                                              ; preds = %175
  tail call void @_ZN2rx13VertexArrayGL20updateBindingDivisorEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 5) #13
  br label %180

180:                                              ; preds = %179, %178, %175
  %181 = shl i64 1, %176
  %182 = xor i64 %181, -1
  %183 = and i64 %177, %182
  %184 = icmp eq i64 %183, 0
  %185 = tail call i64 @llvm.cttz.i64(i64 %183, i1 true) #13, !range !9
  br i1 %184, label %186, label %175

186:                                              ; preds = %180, %170
  store i64 0, i64* %25, align 8
  br label %357

187:                                              ; preds = %65
  %188 = load i64, i64* %24, align 8, !noalias !53
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %203, label %190

190:                                              ; preds = %187
  %191 = tail call i64 @llvm.cttz.i64(i64 %188, i1 true) #13, !range !9
  br label %192

192:                                              ; preds = %197, %190
  %193 = phi i64 [ %202, %197 ], [ %191, %190 ]
  %194 = phi i64 [ %200, %197 ], [ %188, %190 ]
  switch i64 %193, label %197 [
    i64 0, label %195
    i64 1, label %196
  ]

195:                                              ; preds = %192
  tail call void @_ZN2rx13VertexArrayGL19updateBindingBufferEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 6) #13
  br label %197

196:                                              ; preds = %192
  tail call void @_ZN2rx13VertexArrayGL20updateBindingDivisorEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 6) #13
  br label %197

197:                                              ; preds = %196, %195, %192
  %198 = shl i64 1, %193
  %199 = xor i64 %198, -1
  %200 = and i64 %194, %199
  %201 = icmp eq i64 %200, 0
  %202 = tail call i64 @llvm.cttz.i64(i64 %200, i1 true) #13, !range !9
  br i1 %201, label %203, label %192

203:                                              ; preds = %197, %187
  store i64 0, i64* %24, align 8
  br label %357

204:                                              ; preds = %65
  %205 = load i64, i64* %23, align 8, !noalias !56
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %220, label %207

207:                                              ; preds = %204
  %208 = tail call i64 @llvm.cttz.i64(i64 %205, i1 true) #13, !range !9
  br label %209

209:                                              ; preds = %214, %207
  %210 = phi i64 [ %219, %214 ], [ %208, %207 ]
  %211 = phi i64 [ %217, %214 ], [ %205, %207 ]
  switch i64 %210, label %214 [
    i64 0, label %212
    i64 1, label %213
  ]

212:                                              ; preds = %209
  tail call void @_ZN2rx13VertexArrayGL19updateBindingBufferEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 7) #13
  br label %214

213:                                              ; preds = %209
  tail call void @_ZN2rx13VertexArrayGL20updateBindingDivisorEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 7) #13
  br label %214

214:                                              ; preds = %213, %212, %209
  %215 = shl i64 1, %210
  %216 = xor i64 %215, -1
  %217 = and i64 %211, %216
  %218 = icmp eq i64 %217, 0
  %219 = tail call i64 @llvm.cttz.i64(i64 %217, i1 true) #13, !range !9
  br i1 %218, label %220, label %209

220:                                              ; preds = %214, %204
  store i64 0, i64* %23, align 8
  br label %357

221:                                              ; preds = %65
  %222 = load i64, i64* %22, align 8, !noalias !59
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %237, label %224

224:                                              ; preds = %221
  %225 = tail call i64 @llvm.cttz.i64(i64 %222, i1 true) #13, !range !9
  br label %226

226:                                              ; preds = %231, %224
  %227 = phi i64 [ %236, %231 ], [ %225, %224 ]
  %228 = phi i64 [ %234, %231 ], [ %222, %224 ]
  switch i64 %227, label %231 [
    i64 0, label %229
    i64 1, label %230
  ]

229:                                              ; preds = %226
  tail call void @_ZN2rx13VertexArrayGL19updateBindingBufferEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 8) #13
  br label %231

230:                                              ; preds = %226
  tail call void @_ZN2rx13VertexArrayGL20updateBindingDivisorEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 8) #13
  br label %231

231:                                              ; preds = %230, %229, %226
  %232 = shl i64 1, %227
  %233 = xor i64 %232, -1
  %234 = and i64 %228, %233
  %235 = icmp eq i64 %234, 0
  %236 = tail call i64 @llvm.cttz.i64(i64 %234, i1 true) #13, !range !9
  br i1 %235, label %237, label %226

237:                                              ; preds = %231, %221
  store i64 0, i64* %22, align 8
  br label %357

238:                                              ; preds = %65
  %239 = load i64, i64* %21, align 8, !noalias !62
  %240 = icmp eq i64 %239, 0
  br i1 %240, label %254, label %241

241:                                              ; preds = %238
  %242 = tail call i64 @llvm.cttz.i64(i64 %239, i1 true) #13, !range !9
  br label %243

243:                                              ; preds = %248, %241
  %244 = phi i64 [ %253, %248 ], [ %242, %241 ]
  %245 = phi i64 [ %251, %248 ], [ %239, %241 ]
  switch i64 %244, label %248 [
    i64 0, label %246
    i64 1, label %247
  ]

246:                                              ; preds = %243
  tail call void @_ZN2rx13VertexArrayGL19updateBindingBufferEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 9) #13
  br label %248

247:                                              ; preds = %243
  tail call void @_ZN2rx13VertexArrayGL20updateBindingDivisorEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 9) #13
  br label %248

248:                                              ; preds = %247, %246, %243
  %249 = shl i64 1, %244
  %250 = xor i64 %249, -1
  %251 = and i64 %245, %250
  %252 = icmp eq i64 %251, 0
  %253 = tail call i64 @llvm.cttz.i64(i64 %251, i1 true) #13, !range !9
  br i1 %252, label %254, label %243

254:                                              ; preds = %248, %238
  store i64 0, i64* %21, align 8
  br label %357

255:                                              ; preds = %65
  %256 = load i64, i64* %20, align 8, !noalias !65
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %271, label %258

258:                                              ; preds = %255
  %259 = tail call i64 @llvm.cttz.i64(i64 %256, i1 true) #13, !range !9
  br label %260

260:                                              ; preds = %265, %258
  %261 = phi i64 [ %270, %265 ], [ %259, %258 ]
  %262 = phi i64 [ %268, %265 ], [ %256, %258 ]
  switch i64 %261, label %265 [
    i64 0, label %263
    i64 1, label %264
  ]

263:                                              ; preds = %260
  tail call void @_ZN2rx13VertexArrayGL19updateBindingBufferEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 10) #13
  br label %265

264:                                              ; preds = %260
  tail call void @_ZN2rx13VertexArrayGL20updateBindingDivisorEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 10) #13
  br label %265

265:                                              ; preds = %264, %263, %260
  %266 = shl i64 1, %261
  %267 = xor i64 %266, -1
  %268 = and i64 %262, %267
  %269 = icmp eq i64 %268, 0
  %270 = tail call i64 @llvm.cttz.i64(i64 %268, i1 true) #13, !range !9
  br i1 %269, label %271, label %260

271:                                              ; preds = %265, %255
  store i64 0, i64* %20, align 8
  br label %357

272:                                              ; preds = %65
  %273 = load i64, i64* %19, align 8, !noalias !68
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %288, label %275

275:                                              ; preds = %272
  %276 = tail call i64 @llvm.cttz.i64(i64 %273, i1 true) #13, !range !9
  br label %277

277:                                              ; preds = %282, %275
  %278 = phi i64 [ %287, %282 ], [ %276, %275 ]
  %279 = phi i64 [ %285, %282 ], [ %273, %275 ]
  switch i64 %278, label %282 [
    i64 0, label %280
    i64 1, label %281
  ]

280:                                              ; preds = %277
  tail call void @_ZN2rx13VertexArrayGL19updateBindingBufferEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 11) #13
  br label %282

281:                                              ; preds = %277
  tail call void @_ZN2rx13VertexArrayGL20updateBindingDivisorEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 11) #13
  br label %282

282:                                              ; preds = %281, %280, %277
  %283 = shl i64 1, %278
  %284 = xor i64 %283, -1
  %285 = and i64 %279, %284
  %286 = icmp eq i64 %285, 0
  %287 = tail call i64 @llvm.cttz.i64(i64 %285, i1 true) #13, !range !9
  br i1 %286, label %288, label %277

288:                                              ; preds = %282, %272
  store i64 0, i64* %19, align 8
  br label %357

289:                                              ; preds = %65
  %290 = load i64, i64* %18, align 8, !noalias !71
  %291 = icmp eq i64 %290, 0
  br i1 %291, label %305, label %292

292:                                              ; preds = %289
  %293 = tail call i64 @llvm.cttz.i64(i64 %290, i1 true) #13, !range !9
  br label %294

294:                                              ; preds = %299, %292
  %295 = phi i64 [ %304, %299 ], [ %293, %292 ]
  %296 = phi i64 [ %302, %299 ], [ %290, %292 ]
  switch i64 %295, label %299 [
    i64 0, label %297
    i64 1, label %298
  ]

297:                                              ; preds = %294
  tail call void @_ZN2rx13VertexArrayGL19updateBindingBufferEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 12) #13
  br label %299

298:                                              ; preds = %294
  tail call void @_ZN2rx13VertexArrayGL20updateBindingDivisorEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 12) #13
  br label %299

299:                                              ; preds = %298, %297, %294
  %300 = shl i64 1, %295
  %301 = xor i64 %300, -1
  %302 = and i64 %296, %301
  %303 = icmp eq i64 %302, 0
  %304 = tail call i64 @llvm.cttz.i64(i64 %302, i1 true) #13, !range !9
  br i1 %303, label %305, label %294

305:                                              ; preds = %299, %289
  store i64 0, i64* %18, align 8
  br label %357

306:                                              ; preds = %65
  %307 = load i64, i64* %17, align 8, !noalias !74
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %322, label %309

309:                                              ; preds = %306
  %310 = tail call i64 @llvm.cttz.i64(i64 %307, i1 true) #13, !range !9
  br label %311

311:                                              ; preds = %316, %309
  %312 = phi i64 [ %321, %316 ], [ %310, %309 ]
  %313 = phi i64 [ %319, %316 ], [ %307, %309 ]
  switch i64 %312, label %316 [
    i64 0, label %314
    i64 1, label %315
  ]

314:                                              ; preds = %311
  tail call void @_ZN2rx13VertexArrayGL19updateBindingBufferEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 13) #13
  br label %316

315:                                              ; preds = %311
  tail call void @_ZN2rx13VertexArrayGL20updateBindingDivisorEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 13) #13
  br label %316

316:                                              ; preds = %315, %314, %311
  %317 = shl i64 1, %312
  %318 = xor i64 %317, -1
  %319 = and i64 %313, %318
  %320 = icmp eq i64 %319, 0
  %321 = tail call i64 @llvm.cttz.i64(i64 %319, i1 true) #13, !range !9
  br i1 %320, label %322, label %311

322:                                              ; preds = %316, %306
  store i64 0, i64* %17, align 8
  br label %357

323:                                              ; preds = %65
  %324 = load i64, i64* %16, align 8, !noalias !77
  %325 = icmp eq i64 %324, 0
  br i1 %325, label %339, label %326

326:                                              ; preds = %323
  %327 = tail call i64 @llvm.cttz.i64(i64 %324, i1 true) #13, !range !9
  br label %328

328:                                              ; preds = %333, %326
  %329 = phi i64 [ %338, %333 ], [ %327, %326 ]
  %330 = phi i64 [ %336, %333 ], [ %324, %326 ]
  switch i64 %329, label %333 [
    i64 0, label %331
    i64 1, label %332
  ]

331:                                              ; preds = %328
  tail call void @_ZN2rx13VertexArrayGL19updateBindingBufferEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 14) #13
  br label %333

332:                                              ; preds = %328
  tail call void @_ZN2rx13VertexArrayGL20updateBindingDivisorEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 14) #13
  br label %333

333:                                              ; preds = %332, %331, %328
  %334 = shl i64 1, %329
  %335 = xor i64 %334, -1
  %336 = and i64 %330, %335
  %337 = icmp eq i64 %336, 0
  %338 = tail call i64 @llvm.cttz.i64(i64 %336, i1 true) #13, !range !9
  br i1 %337, label %339, label %328

339:                                              ; preds = %333, %323
  store i64 0, i64* %16, align 8
  br label %357

340:                                              ; preds = %65
  %341 = load i64, i64* %63, align 8, !noalias !80
  %342 = icmp eq i64 %341, 0
  br i1 %342, label %356, label %343

343:                                              ; preds = %340
  %344 = tail call i64 @llvm.cttz.i64(i64 %341, i1 true) #13, !range !9
  br label %345

345:                                              ; preds = %350, %343
  %346 = phi i64 [ %355, %350 ], [ %344, %343 ]
  %347 = phi i64 [ %353, %350 ], [ %341, %343 ]
  switch i64 %346, label %350 [
    i64 0, label %348
    i64 1, label %349
  ]

348:                                              ; preds = %345
  tail call void @_ZN2rx13VertexArrayGL19updateBindingBufferEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 15) #13
  br label %350

349:                                              ; preds = %345
  tail call void @_ZN2rx13VertexArrayGL20updateBindingDivisorEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 15) #13
  br label %350

350:                                              ; preds = %349, %348, %345
  %351 = shl i64 1, %346
  %352 = xor i64 %351, -1
  %353 = and i64 %347, %352
  %354 = icmp eq i64 %353, 0
  %355 = tail call i64 @llvm.cttz.i64(i64 %353, i1 true) #13, !range !9
  br i1 %354, label %356, label %345

356:                                              ; preds = %350, %340
  store i64 0, i64* %63, align 8
  br label %357

357:                                              ; preds = %65, %356, %339, %322, %305, %288, %271, %254, %237, %220, %203, %186, %169, %152, %135, %118, %101, %84, %83, %82, %81, %80, %79, %78, %77, %76, %75, %74, %73, %72, %71, %70, %69, %68
  %358 = shl i64 1, %66
  %359 = xor i64 %358, -1
  %360 = and i64 %67, %359
  %361 = icmp eq i64 %360, 0
  %362 = tail call i64 @llvm.cttz.i64(i64 %360, i1 true) #13, !range !9
  br i1 %361, label %64, label %65
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13VertexArrayGL22applyNumViewsToDivisorEPKN2gl7ContextEi(%"class.rx::VertexArrayGL"* nocapture, %"class.gl::Context"*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, %2
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = tail call %"class.rx::StateManagerGL"* @_ZN2rx17GetStateManagerGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %9 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 5
  %12 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %11, align 8
  tail call void @_ZN2rx14StateManagerGL15bindVertexArrayEjPNS_18VertexArrayStateGLE(%"class.rx::StateManagerGL"* %8, i32 %10, %"struct.rx::VertexArrayStateGL"* %12) #13
  store i32 %2, i32* %4, align 4
  %13 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %11, align 8
  %14 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %13, i64 0, i32 2, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %7, %17
  %18 = phi i64 [ %19, %17 ], [ 0, %7 ]
  tail call void @_ZN2rx13VertexArrayGL20updateBindingDivisorEPKN2gl7ContextEm(%"class.rx::VertexArrayGL"* %0, %"class.gl::Context"* %1, i64 %18)
  %19 = add nuw i64 %18, 1
  %20 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %11, align 8
  %21 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %20, i64 0, i32 2, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp ult i64 %19, %22
  br i1 %23, label %17, label %24

24:                                               ; preds = %17, %7, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2rx13VertexArrayGL30applyActiveAttribLocationsMaskEPKN2gl7ContextERKN5angle7BitSetTILm16EmmEE(%"class.rx::VertexArrayGL"* nocapture, %"class.gl::Context"*, %"class.angle::BitSetT"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 3, i32 0
  %5 = load i64, i64* %4, align 8, !noalias !83
  %6 = getelementptr inbounds %"class.angle::BitSetT", %"class.angle::BitSetT"* %2, i64 0, i32 0
  %7 = load i64, i64* %6, align 8, !noalias !83
  %8 = and i64 %7, 65535
  %9 = xor i64 %8, %5
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %57, label %11

11:                                               ; preds = %3
  store i64 %7, i64* %4, align 8
  %12 = tail call i64 @llvm.cttz.i64(i64 %9, i1 true) #13, !range !9
  %13 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 5
  br label %15

15:                                               ; preds = %54, %11
  %16 = phi i64 [ %7, %11 ], [ %56, %54 ]
  %17 = phi i64 [ %9, %11 ], [ %52, %54 ]
  %18 = phi i64 [ %12, %11 ], [ %55, %54 ]
  %19 = load %"class.gl::VertexArrayState"*, %"class.gl::VertexArrayState"** %13, align 8
  %20 = getelementptr inbounds %"class.gl::VertexArrayState", %"class.gl::VertexArrayState"* %19, i64 0, i32 1, i32 0, i32 0
  %21 = load %"struct.gl::VertexAttribute"*, %"struct.gl::VertexAttribute"** %20, align 8
  %22 = getelementptr inbounds %"struct.gl::VertexAttribute", %"struct.gl::VertexAttribute"* %21, i64 %18, i32 0
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = zext i8 %23 to i32
  %25 = shl i64 1, %18
  %26 = and i64 %16, %25
  %27 = icmp ne i64 %26, 0
  %28 = zext i1 %27 to i32
  %29 = and i32 %28, %24
  %30 = trunc i32 %29 to i8
  %31 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %14, align 8
  %32 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %31, i64 0, i32 1, i32 0, i32 0, i64 %18, i32 0
  %33 = load i8, i8* %32, align 8, !range !2
  %34 = zext i8 %33 to i32
  %35 = icmp eq i32 %29, %34
  br i1 %35, label %50, label %36

36:                                               ; preds = %15
  %37 = icmp eq i32 %29, 0
  %38 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  br i1 %37, label %43, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %38, i64 0, i32 0, i32 121
  %41 = load void (i32)*, void (i32)** %40, align 8
  %42 = trunc i64 %18 to i32
  tail call void %41(i32 %42) #13
  br label %47

43:                                               ; preds = %36
  %44 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %38, i64 0, i32 0, i32 119
  %45 = load void (i32)*, void (i32)** %44, align 8
  %46 = trunc i64 %18 to i32
  tail call void %45(i32 %46) #13
  br label %47

47:                                               ; preds = %43, %39
  %48 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %14, align 8
  %49 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %48, i64 0, i32 1, i32 0, i32 0, i64 %18, i32 0
  store i8 %30, i8* %49, align 8
  br label %50

50:                                               ; preds = %15, %47
  %51 = xor i64 %25, -1
  %52 = and i64 %17, %51
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %50
  %55 = tail call i64 @llvm.cttz.i64(i64 %52, i1 true) #13, !range !9
  %56 = load i64, i64* %4, align 8
  br label %15

57:                                               ; preds = %50, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK2rx13VertexArrayGL13validateStateEPKN2gl7ContextE(%"class.rx::VertexArrayGL"* nocapture readonly, %"class.gl::Context"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.gl::LogMessage", align 8
  %5 = tail call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %6 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  tail call fastcc void @_ZN2rx12_GLOBAL__N_130ValidateStateHelperGetIntegervEPKNS_11FunctionsGLEjjPKcS5_(%"class.rx::FunctionsGL"* %5, i32 %7, i32 34229, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0))
  %8 = getelementptr inbounds %"class.rx::VertexArrayGL", %"class.rx::VertexArrayGL"* %0, i64 0, i32 5
  %9 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %8, align 8
  %10 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %9, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  tail call fastcc void @_ZN2rx12_GLOBAL__N_130ValidateStateHelperGetIntegervEPKNS_11FunctionsGLEjjPKcS5_(%"class.rx::FunctionsGL"* %5, i32 %11, i32 34965, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.5, i64 0, i64 0))
  %12 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #13
  store i32 -1431655766, i32* %3, align 4
  %13 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %5, i64 0, i32 0, i32 21
  %14 = load void (i32, i32*)*, void (i32, i32*)** %13, align 8
  call void %14(i32 34921, i32* nonnull %3) #13
  %15 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %8, align 8
  %16 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %15, i64 0, i32 1, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = load i32, i32* %3, align 4
  %19 = zext i32 %18 to i64
  %20 = icmp ugt i64 %17, %19
  br i1 %20, label %21, label %36

21:                                               ; preds = %2
  %22 = call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 2) #13
  br i1 %22, label %23, label %36

23:                                               ; preds = %21
  %24 = bitcast %"class.gl::LogMessage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %24) #13
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %4, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @__FUNCTION__._ZNK2rx13VertexArrayGL13validateStateEPKN2gl7ContextE, i64 0, i64 0), i32 992, i32 2) #13
  %25 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %4, i64 0, i32 4
  %26 = bitcast %"class.std::__1::basic_ostringstream"* %25 to %"class.std::__1::basic_ostream"*
  %27 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %26, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.6, i64 0, i64 0), i64 33) #13
  %28 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %8, align 8
  %29 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %28, i64 0, i32 1, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %27, i64 %30) #13
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %31, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0), i64 27) #13
  %33 = load i32, i32* %3, align 4
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %32, i32 %33) #13
  %35 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %34, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i64 1) #13
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %24) #13
  br label %36

36:                                               ; preds = %23, %21, %2
  %37 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %8, align 8
  %38 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %37, i64 0, i32 1, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %42

41:                                               ; preds = %114, %36
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #13
  ret void

42:                                               ; preds = %36, %114
  %43 = phi %"struct.rx::VertexArrayStateGL"* [ %117, %114 ], [ %37, %36 ]
  %44 = phi i64 [ %116, %114 ], [ 0, %36 ]
  %45 = phi i32 [ %115, %114 ], [ 0, %36 ]
  %46 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %43, i64 0, i32 1, i32 0, i32 0, i64 %44, i32 4
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %43, i64 0, i32 1, i32 0, i32 0, i64 %44, i32 0
  %50 = load i8, i8* %49, align 8, !range !2
  %51 = zext i8 %50 to i32
  call fastcc void @_ZN2rx12_GLOBAL__N_136ValidateStateHelperGetVertexAttribivEPKNS_11FunctionsGLEijjPKcS5_(%"class.rx::FunctionsGL"* %5, i32 %45, i32 %51, i32 34338, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0))
  %52 = load i8, i8* %49, align 8, !range !2
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %114, label %54

54:                                               ; preds = %42
  %55 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %43, i64 0, i32 1, i32 0, i32 0, i64 %44, i32 1
  %56 = load %"struct.angle::Format"*, %"struct.angle::Format"** %55, align 8
  %57 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %56, i64 0, i32 23
  %58 = load i32, i32* %57, align 4
  %59 = add i32 %58, -13
  %60 = icmp ult i32 %59, 5
  br i1 %60, label %63, label %61

61:                                               ; preds = %54
  %62 = add i32 %58, 5120
  br label %67

63:                                               ; preds = %54
  %64 = sext i32 %59 to i64
  %65 = getelementptr inbounds [5 x i32], [5 x i32]* @switch.table._ZNK2rx13VertexArrayGL13validateStateEPKN2gl7ContextE, i64 0, i64 %64
  %66 = load i32, i32* %65, align 4
  br label %67

67:                                               ; preds = %63, %61
  %68 = phi i32 [ %62, %61 ], [ %66, %63 ]
  call fastcc void @_ZN2rx12_GLOBAL__N_136ValidateStateHelperGetVertexAttribivEPKNS_11FunctionsGLEijjPKcS5_(%"class.rx::FunctionsGL"* %5, i32 %45, i32 %68, i32 34341, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.12, i64 0, i64 0))
  %69 = load %"struct.angle::Format"*, %"struct.angle::Format"** %55, align 8
  %70 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %69, i64 0, i32 17
  %71 = load i32, i32* %70, align 8
  call fastcc void @_ZN2rx12_GLOBAL__N_136ValidateStateHelperGetVertexAttribivEPKNS_11FunctionsGLEijjPKcS5_(%"class.rx::FunctionsGL"* %5, i32 %45, i32 %71, i32 34339, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.14, i64 0, i64 0))
  %72 = load %"struct.angle::Format"*, %"struct.angle::Format"** %55, align 8
  %73 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %72, i64 0, i32 7
  %74 = load i32, i32* %73, align 8
  %75 = icmp eq i32 %74, 36764
  %76 = icmp eq i32 %74, 35863
  %77 = or i1 %75, %76
  %78 = zext i1 %77 to i32
  call fastcc void @_ZN2rx12_GLOBAL__N_136ValidateStateHelperGetVertexAttribivEPKNS_11FunctionsGLEijjPKcS5_(%"class.rx::FunctionsGL"* %5, i32 %45, i32 %78, i32 34922, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.15, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.16, i64 0, i64 0))
  %79 = load %"struct.angle::Format"*, %"struct.angle::Format"** %55, align 8
  %80 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %79, i64 0, i32 7
  %81 = load i32, i32* %80, align 8
  %82 = or i32 %81, 1
  %83 = icmp eq i32 %82, 5125
  br i1 %83, label %84, label %88

84:                                               ; preds = %67
  %85 = getelementptr inbounds %"struct.angle::Format", %"struct.angle::Format"* %79, i64 0, i32 20
  %86 = load i8, i8* %85, align 2, !range !2
  %87 = icmp eq i8 %86, 0
  br label %88

88:                                               ; preds = %67, %84
  %89 = phi i1 [ false, %67 ], [ %87, %84 ]
  %90 = zext i1 %89 to i32
  call fastcc void @_ZN2rx12_GLOBAL__N_136ValidateStateHelperGetVertexAttribivEPKNS_11FunctionsGLEijjPKcS5_(%"class.rx::FunctionsGL"* %5, i32 %45, i32 %90, i32 35069, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.18, i64 0, i64 0))
  %91 = call %"class.rx::FunctionsGL"* @_ZN2rx14GetFunctionsGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %92 = call dereferenceable(3576) %"struct.angle::FeaturesGL"* @_ZN2rx13GetFeaturesGLEPKN2gl7ContextE(%"class.gl::Context"* %1) #13
  %93 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %91, i64 0, i32 0, i32 538
  %94 = load void (i32, i32)*, void (i32, i32)** %93, align 8
  %95 = icmp ne void (i32, i32)* %94, null
  %96 = getelementptr inbounds %"struct.angle::FeaturesGL", %"struct.angle::FeaturesGL"* %92, i64 0, i32 70, i32 4
  %97 = load i8, i8* %96, align 8
  %98 = icmp eq i8 %97, 0
  %99 = and i1 %95, %98
  br i1 %99, label %100, label %104

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %43, i64 0, i32 1, i32 0, i32 0, i64 %44, i32 3
  %102 = load i32, i32* %101, align 8
  call fastcc void @_ZN2rx12_GLOBAL__N_136ValidateStateHelperGetVertexAttribivEPKNS_11FunctionsGLEijjPKcS5_(%"class.rx::FunctionsGL"* %5, i32 %45, i32 %102, i32 33493, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.19, i64 0, i64 0), i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.20, i64 0, i64 0))
  %103 = load i32, i32* %46, align 4
  call fastcc void @_ZN2rx12_GLOBAL__N_136ValidateStateHelperGetVertexAttribivEPKNS_11FunctionsGLEijjPKcS5_(%"class.rx::FunctionsGL"* %5, i32 %45, i32 %103, i32 33492, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.22, i64 0, i64 0))
  br label %104

104:                                              ; preds = %100, %88
  %105 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %43, i64 0, i32 2, i32 0, i32 0, i64 %48, i32 3
  %106 = load i32, i32* %105, align 8
  call fastcc void @_ZN2rx12_GLOBAL__N_136ValidateStateHelperGetVertexAttribivEPKNS_11FunctionsGLEijjPKcS5_(%"class.rx::FunctionsGL"* %5, i32 %45, i32 %106, i32 34975, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.23, i64 0, i64 0), i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.24, i64 0, i64 0))
  %107 = load i32, i32* %105, align 8
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %114, label %109

109:                                              ; preds = %104
  %110 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %43, i64 0, i32 2, i32 0, i32 0, i64 %48, i32 0
  %111 = load i32, i32* %110, align 8
  call fastcc void @_ZN2rx12_GLOBAL__N_136ValidateStateHelperGetVertexAttribivEPKNS_11FunctionsGLEijjPKcS5_(%"class.rx::FunctionsGL"* %5, i32 %45, i32 %111, i32 34340, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.25, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.26, i64 0, i64 0))
  %112 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %43, i64 0, i32 2, i32 0, i32 0, i64 %48, i32 1
  %113 = load i32, i32* %112, align 4
  call fastcc void @_ZN2rx12_GLOBAL__N_136ValidateStateHelperGetVertexAttribivEPKNS_11FunctionsGLEijjPKcS5_(%"class.rx::FunctionsGL"* %5, i32 %45, i32 %113, i32 35070, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.27, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str.28, i64 0, i64 0))
  br label %114

114:                                              ; preds = %104, %42, %109
  %115 = add i32 %45, 1
  %116 = zext i32 %115 to i64
  %117 = load %"struct.rx::VertexArrayStateGL"*, %"struct.rx::VertexArrayStateGL"** %8, align 8
  %118 = getelementptr inbounds %"struct.rx::VertexArrayStateGL", %"struct.rx::VertexArrayStateGL"* %117, i64 0, i32 1, i32 1
  %119 = load i64, i64* %118, align 8
  %120 = icmp ugt i64 %119, %116
  br i1 %120, label %42, label %41
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2rx12_GLOBAL__N_130ValidateStateHelperGetIntegervEPKNS_11FunctionsGLEjjPKcS5_(%"class.rx::FunctionsGL"* nocapture readonly, i32, i32, i8*, i8*) unnamed_addr #0 {
  %6 = alloca i32, align 4
  %7 = alloca %"class.gl::LogMessage", align 8
  %8 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8) #13
  store i32 -1431655766, i32* %6, align 4
  %9 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %0, i64 0, i32 0, i32 21
  %10 = load void (i32, i32*)*, void (i32, i32*)** %9, align 8
  call void %10(i32 %2, i32* nonnull %6) #13
  %11 = load i32, i32* %6, align 4
  %12 = icmp eq i32 %11, %1
  br i1 %12, label %30, label %13

13:                                               ; preds = %5
  %14 = call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 2) #13
  br i1 %14, label %15, label %30

15:                                               ; preds = %13
  %16 = bitcast %"class.gl::LogMessage"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %16) #13
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %7, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([31 x i8], [31 x i8]* @__FUNCTION__._ZN2rx12_GLOBAL__N_130ValidateStateHelperGetIntegervEPKNS_11FunctionsGLEjjPKcS5_, i64 0, i64 0), i32 73, i32 2) #13
  %17 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %7, i64 0, i32 4
  %18 = bitcast %"class.std::__1::basic_ostringstream"* %17 to %"class.std::__1::basic_ostream"*
  %19 = call i64 @strlen(i8* %3) #13
  %20 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %18, i8* %3, i64 %19) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %20, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i64 2) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %21, i32 %1) #13
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %22, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i64 5) #13
  %24 = call i64 @strlen(i8* %4) #13
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %23, i8* %4, i64 %24) #13
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %25, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.29, i64 0, i64 0), i64 2) #13
  %27 = load i32, i32* %6, align 4
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %26, i32 %27) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i64 1) #13
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %7) #13
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %16) #13
  br label %30

30:                                               ; preds = %15, %13, %5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8) #13
  ret void
}

declare zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32) local_unnamed_addr #2

declare void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"*, i8*, i8*, i32, i32) unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2rx12_GLOBAL__N_136ValidateStateHelperGetVertexAttribivEPKNS_11FunctionsGLEijjPKcS5_(%"class.rx::FunctionsGL"* nocapture readonly, i32, i32, i32, i8*, i8*) unnamed_addr #0 {
  %7 = alloca i32, align 4
  %8 = alloca %"class.gl::LogMessage", align 8
  %9 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #13
  store i32 -1431655766, i32* %7, align 4
  %10 = getelementptr inbounds %"class.rx::FunctionsGL", %"class.rx::FunctionsGL"* %0, i64 0, i32 0, i32 137
  %11 = load void (i32, i32, i32*)*, void (i32, i32, i32*)** %10, align 8
  call void %11(i32 %1, i32 %3, i32* nonnull %7) #13
  %12 = load i32, i32* %7, align 4
  %13 = icmp eq i32 %12, %2
  br i1 %13, label %35, label %14

14:                                               ; preds = %6
  %15 = call zeroext i1 @_ZN2gl4priv30ShouldCreatePlatformLogMessageEi(i32 2) #13
  br i1 %15, label %16, label %35

16:                                               ; preds = %14
  %17 = bitcast %"class.gl::LogMessage"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 288, i8* nonnull %17) #13
  call void @_ZN2gl10LogMessageC1EPKcS2_ii(%"class.gl::LogMessage"* nonnull %8, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([37 x i8], [37 x i8]* @__FUNCTION__._ZN2rx12_GLOBAL__N_136ValidateStateHelperGetVertexAttribivEPKNS_11FunctionsGLEijjPKcS5_, i64 0, i64 0), i32 91, i32 2) #13
  %18 = getelementptr inbounds %"class.gl::LogMessage", %"class.gl::LogMessage"* %8, i64 0, i32 4
  %19 = bitcast %"class.std::__1::basic_ostringstream"* %18 to %"class.std::__1::basic_ostream"*
  %20 = call i64 @strlen(i8* %4) #13
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %19, i8* %4, i64 %20) #13
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %21, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0), i64 1) #13
  %23 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %22, i32 %1) #13
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %23, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i64 0, i64 0), i64 3) #13
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"* %24, i32 %2) #13
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %25, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i64 5) #13
  %27 = call i64 @strlen(i8* %5) #13
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %26, i8* %5, i64 %27) #13
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.31, i64 0, i64 0), i64 1) #13
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %29, i32 %1) #13
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %30, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.32, i64 0, i64 0), i64 3) #13
  %32 = load i32, i32* %7, align 4
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %31, i32 %32) #13
  %34 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %33, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0), i64 1) #13
  call void @_ZN2gl10LogMessageD1Ev(%"class.gl::LogMessage"* nonnull %8) #13
  call void @llvm.lifetime.end.p0i8(i64 288, i8* nonnull %17) #13
  br label %35

35:                                               ; preds = %16, %14, %6
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5angle14BindingPointerIN2gl6BufferENS1_7ContextENS_6ResultEED0Ev(%"class.angle::BindingPointer"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.angle::BindingPointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEj(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #13
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #13
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #13
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #13
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #13
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #13
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #13
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #13
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #13
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #13
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #13
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #13
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #13
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #8

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #8

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2gl14BindingPointerINS_6BufferEED0Ev(%"class.gl::BindingPointer"*) unnamed_addr #11 comdat align 2 {
  %2 = bitcast %"class.gl::BindingPointer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.cttz.i64(i64, i1 immarg) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK2gl10StateCache26getActiveClientAttribsMaskEv: argument 0"}
!5 = distinct !{!5, !"_ZNK2gl10StateCache26getActiveClientAttribsMaskEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!8 = distinct !{!8, !"_ZanILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!9 = !{i64 0, i64 65}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZeoILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!12 = distinct !{!12, !"_ZeoILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNK5angle7BitSetTILm16EmmE5beginEv: argument 0"}
!15 = distinct !{!15, !"_ZNK5angle7BitSetTILm16EmmE5beginEv"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNK5angle7BitSetTILm16EmmE5beginEv: argument 0"}
!18 = distinct !{!18, !"_ZNK5angle7BitSetTILm16EmmE5beginEv"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNK5angle7BitSetTILm16EmmE5beginEv: argument 0"}
!21 = distinct !{!21, !"_ZNK5angle7BitSetTILm16EmmE5beginEv"}
!22 = !{!"branch_weights", i32 1, i32 1}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZNK5angle7BitSetTILm16EmmE5beginEv: argument 0"}
!25 = distinct !{!25, !"_ZNK5angle7BitSetTILm16EmmE5beginEv"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZNK5angle7BitSetTILm5EmmE5beginEv: argument 0"}
!28 = distinct !{!28, !"_ZNK5angle7BitSetTILm5EmmE5beginEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK5angle7BitSetTILm2EmmE5beginEv: argument 0"}
!31 = distinct !{!31, !"_ZNK5angle7BitSetTILm2EmmE5beginEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK5angle7BitSetTILm50EmmE5beginEv: argument 0"}
!34 = distinct !{!34, !"_ZNK5angle7BitSetTILm50EmmE5beginEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK5angle7BitSetTILm2EmmE5beginEv: argument 0"}
!37 = distinct !{!37, !"_ZNK5angle7BitSetTILm2EmmE5beginEv"}
!38 = !{!39}
!39 = distinct !{!39, !40, !"_ZNK5angle7BitSetTILm2EmmE5beginEv: argument 0"}
!40 = distinct !{!40, !"_ZNK5angle7BitSetTILm2EmmE5beginEv"}
!41 = !{!42}
!42 = distinct !{!42, !43, !"_ZNK5angle7BitSetTILm2EmmE5beginEv: argument 0"}
!43 = distinct !{!43, !"_ZNK5angle7BitSetTILm2EmmE5beginEv"}
!44 = !{!45}
!45 = distinct !{!45, !46, !"_ZNK5angle7BitSetTILm2EmmE5beginEv: argument 0"}
!46 = distinct !{!46, !"_ZNK5angle7BitSetTILm2EmmE5beginEv"}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZNK5angle7BitSetTILm2EmmE5beginEv: argument 0"}
!49 = distinct !{!49, !"_ZNK5angle7BitSetTILm2EmmE5beginEv"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZNK5angle7BitSetTILm2EmmE5beginEv: argument 0"}
!52 = distinct !{!52, !"_ZNK5angle7BitSetTILm2EmmE5beginEv"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZNK5angle7BitSetTILm2EmmE5beginEv: argument 0"}
!55 = distinct !{!55, !"_ZNK5angle7BitSetTILm2EmmE5beginEv"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZNK5angle7BitSetTILm2EmmE5beginEv: argument 0"}
!58 = distinct !{!58, !"_ZNK5angle7BitSetTILm2EmmE5beginEv"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZNK5angle7BitSetTILm2EmmE5beginEv: argument 0"}
!61 = distinct !{!61, !"_ZNK5angle7BitSetTILm2EmmE5beginEv"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZNK5angle7BitSetTILm2EmmE5beginEv: argument 0"}
!64 = distinct !{!64, !"_ZNK5angle7BitSetTILm2EmmE5beginEv"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZNK5angle7BitSetTILm2EmmE5beginEv: argument 0"}
!67 = distinct !{!67, !"_ZNK5angle7BitSetTILm2EmmE5beginEv"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZNK5angle7BitSetTILm2EmmE5beginEv: argument 0"}
!70 = distinct !{!70, !"_ZNK5angle7BitSetTILm2EmmE5beginEv"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZNK5angle7BitSetTILm2EmmE5beginEv: argument 0"}
!73 = distinct !{!73, !"_ZNK5angle7BitSetTILm2EmmE5beginEv"}
!74 = !{!75}
!75 = distinct !{!75, !76, !"_ZNK5angle7BitSetTILm2EmmE5beginEv: argument 0"}
!76 = distinct !{!76, !"_ZNK5angle7BitSetTILm2EmmE5beginEv"}
!77 = !{!78}
!78 = distinct !{!78, !79, !"_ZNK5angle7BitSetTILm2EmmE5beginEv: argument 0"}
!79 = distinct !{!79, !"_ZNK5angle7BitSetTILm2EmmE5beginEv"}
!80 = !{!81}
!81 = distinct !{!81, !82, !"_ZNK5angle7BitSetTILm2EmmE5beginEv: argument 0"}
!82 = distinct !{!82, !"_ZNK5angle7BitSetTILm2EmmE5beginEv"}
!83 = !{!84}
!84 = distinct !{!84, !85, !"_ZeoILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_: argument 0"}
!85 = distinct !{!85, !"_ZeoILm16EmmEN5angle7BitSetTIXT_ET0_T1_EERKS4_S6_"}
