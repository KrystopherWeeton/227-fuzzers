; ModuleID = '../../third_party/icu/source/common/propsvec.cpp'
source_filename = "../../third_party/icu/source/common/propsvec.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.UPropsVectors = type { i32*, i32, i32, i32, i32, i8 }
%struct.UTrie2 = type { i16*, i16*, i32*, i32, i32, i16, i16, i32, i32, i32, i32, i8*, i32, i8, i8, i16, %struct.UNewTrie2* }
%struct.UNewTrie2 = type opaque
%struct.UPVecToUTrie2Context = type { %struct.UTrie2*, i32, i32, i32 }

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UPropsVectors* @upvec_open_69(i32, i32* nocapture) local_unnamed_addr #0 {
  %3 = load i32, i32* %1, align 4
  %4 = icmp slt i32 %3, 1
  br i1 %4, label %5, label %37

5:                                                ; preds = %2
  %6 = icmp slt i32 %0, 1
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  store i32 1, i32* %1, align 4
  br label %37

8:                                                ; preds = %5
  %9 = add nuw nsw i32 %0, 2
  %10 = tail call noalias i8* @uprv_malloc_69(i64 32) #7
  %11 = shl nsw i32 %9, 14
  %12 = sext i32 %11 to i64
  %13 = tail call noalias i8* @uprv_malloc_69(i64 %12) #7
  %14 = icmp eq i8* %10, null
  %15 = icmp eq i8* %13, null
  %16 = or i1 %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %8
  tail call void @uprv_free_69(i8* %10) #8
  tail call void @uprv_free_69(i8* %13) #8
  store i32 7, i32* %1, align 4
  br label %37

18:                                               ; preds = %8
  %19 = bitcast i8* %10 to %struct.UPropsVectors*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 32, i1 false)
  %20 = bitcast i8* %10 to i8**
  store i8* %13, i8** %20, align 8
  %21 = getelementptr inbounds i8, i8* %10, i64 8
  %22 = bitcast i8* %21 to i32*
  store i32 %9, i32* %22, align 8
  %23 = getelementptr inbounds i8, i8* %10, i64 12
  %24 = bitcast i8* %23 to i32*
  store i32 4096, i32* %24, align 4
  %25 = getelementptr inbounds i8, i8* %10, i64 16
  %26 = bitcast i8* %25 to i32*
  store i32 3, i32* %26, align 8
  %27 = bitcast i8* %13 to i32*
  %28 = mul i32 %9, 12
  %29 = sext i32 %28 to i64
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %13, i8 0, i64 %29, i1 false)
  store i32 0, i32* %27, align 4
  %30 = getelementptr inbounds i8, i8* %13, i64 4
  %31 = bitcast i8* %30 to i32*
  store i32 1114112, i32* %31, align 4
  %32 = sext i32 %9 to i64
  %33 = getelementptr inbounds i32, i32* %27, i64 %32
  store i32 1114112, i32* %33, align 4
  %34 = getelementptr inbounds i32, i32* %33, i64 1
  store i32 1114113, i32* %34, align 4
  %35 = getelementptr inbounds i32, i32* %33, i64 %32
  store i32 1114113, i32* %35, align 4
  %36 = getelementptr inbounds i32, i32* %35, i64 1
  store i32 1114114, i32* %36, align 4
  br label %37

37:                                               ; preds = %18, %2, %17, %7
  %38 = phi %struct.UPropsVectors* [ null, %7 ], [ null, %17 ], [ null, %2 ], [ %19, %18 ]
  ret %struct.UPropsVectors* %38
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: allocsize(0)
declare noalias i8* @uprv_malloc_69(i64) local_unnamed_addr #2

declare void @uprv_free_69(i8*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @upvec_close_69(%struct.UPropsVectors*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.UPropsVectors* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.UPropsVectors* %0 to i8**
  %5 = load i8*, i8** %4, align 8
  tail call void @uprv_free_69(i8* %5) #8
  %6 = bitcast %struct.UPropsVectors* %0 to i8*
  tail call void @uprv_free_69(i8* nonnull %6) #8
  br label %7

7:                                                ; preds = %1, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @upvec_setValue_69(%struct.UPropsVectors*, i32, i32, i32, i32, i32, i32* nocapture) local_unnamed_addr #0 {
  %8 = load i32, i32* %6, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %10, label %181

10:                                               ; preds = %7
  %11 = icmp eq %struct.UPropsVectors* %0, null
  %12 = icmp slt i32 %1, 0
  %13 = or i1 %11, %12
  br i1 %13, label %25, label %14

14:                                               ; preds = %10
  %15 = icmp sgt i32 %1, %2
  %16 = icmp sgt i32 %2, 1114113
  %17 = or i1 %15, %16
  %18 = icmp slt i32 %3, 0
  %19 = or i1 %17, %18
  br i1 %19, label %25, label %20

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = add nsw i32 %22, -2
  %24 = icmp sgt i32 %23, %3
  br i1 %24, label %26, label %25

25:                                               ; preds = %20, %14, %10
  store i32 1, i32* %6, align 4
  br label %181

26:                                               ; preds = %20
  %27 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 5
  %28 = load i8, i8* %27, align 8
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %31, label %30

30:                                               ; preds = %26
  store i32 30, i32* %6, align 4
  br label %181

31:                                               ; preds = %26
  %32 = add nsw i32 %2, 1
  %33 = add nuw nsw i32 %3, 2
  %34 = and i32 %5, %4
  %35 = tail call fastcc i32* @_ZL8_findRowP13UPropsVectorsi(%struct.UPropsVectors* nonnull %0, i32 %1)
  %36 = tail call fastcc i32* @_ZL8_findRowP13UPropsVectorsi(%struct.UPropsVectors* nonnull %0, i32 %2)
  %37 = load i32, i32* %35, align 4
  %38 = icmp eq i32 %37, %1
  br i1 %38, label %45, label %39

39:                                               ; preds = %31
  %40 = sext i32 %33 to i64
  %41 = getelementptr inbounds i32, i32* %35, i64 %40
  %42 = load i32, i32* %41, align 4
  %43 = and i32 %42, %5
  %44 = icmp ne i32 %34, %43
  br label %45

45:                                               ; preds = %31, %39
  %46 = phi i1 [ false, %31 ], [ %44, %39 ]
  %47 = getelementptr inbounds i32, i32* %36, i64 1
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %32, %48
  br i1 %49, label %56, label %50

50:                                               ; preds = %45
  %51 = sext i32 %33 to i64
  %52 = getelementptr inbounds i32, i32* %36, i64 %51
  %53 = load i32, i32* %52, align 4
  %54 = and i32 %53, %5
  %55 = icmp ne i32 %34, %54
  br label %56

56:                                               ; preds = %45, %50
  %57 = phi i1 [ false, %45 ], [ %55, %50 ]
  %58 = or i1 %46, %57
  br i1 %58, label %61, label %59

59:                                               ; preds = %56
  %60 = sext i32 %22 to i64
  br label %154

61:                                               ; preds = %56
  %62 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 3
  %63 = load i32, i32* %62, align 8
  %64 = zext i1 %46 to i32
  %65 = zext i1 %57 to i32
  %66 = add nuw nsw i32 %65, %64
  %67 = add i32 %66, %63
  %68 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp sgt i32 %67, %69
  br i1 %70, label %75, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 0
  %73 = load i32*, i32** %72, align 8
  %74 = sext i32 %22 to i64
  br label %105

75:                                               ; preds = %61
  %76 = icmp slt i32 %69, 65536
  br i1 %76, label %80, label %77

77:                                               ; preds = %75
  %78 = icmp slt i32 %69, 1114114
  br i1 %78, label %80, label %79

79:                                               ; preds = %77
  store i32 5, i32* %6, align 4
  br label %181

80:                                               ; preds = %77, %75
  %81 = phi i32 [ 65536, %75 ], [ 1114114, %77 ]
  %82 = shl i32 %22, 2
  %83 = mul i32 %82, %81
  %84 = sext i32 %83 to i64
  %85 = tail call noalias i8* @uprv_malloc_69(i64 %84) #7
  %86 = bitcast i8* %85 to i32*
  %87 = icmp eq i8* %85, null
  br i1 %87, label %88, label %89

88:                                               ; preds = %80
  store i32 7, i32* %6, align 4
  br label %181

89:                                               ; preds = %80
  %90 = bitcast %struct.UPropsVectors* %0 to i8**
  %91 = load i8*, i8** %90, align 8
  %92 = sext i32 %63 to i64
  %93 = sext i32 %22 to i64
  %94 = shl nsw i64 %93, 2
  %95 = mul i64 %94, %92
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %85, i8* align 4 %91, i64 %95, i1 false)
  %96 = ptrtoint i32* %35 to i64
  %97 = ptrtoint i8* %91 to i64
  %98 = sub i64 %96, %97
  %99 = ashr exact i64 %98, 2
  %100 = getelementptr inbounds i32, i32* %86, i64 %99
  %101 = ptrtoint i32* %36 to i64
  %102 = sub i64 %101, %97
  %103 = ashr exact i64 %102, 2
  %104 = getelementptr inbounds i32, i32* %86, i64 %103
  tail call void @uprv_free_69(i8* %91) #8
  store i8* %85, i8** %90, align 8
  store i32 %81, i32* %68, align 4
  br label %105

105:                                              ; preds = %71, %89
  %106 = phi i64 [ %74, %71 ], [ %93, %89 ]
  %107 = phi i32* [ %73, %71 ], [ %86, %89 ]
  %108 = phi i32* [ %35, %71 ], [ %100, %89 ]
  %109 = phi i32* [ %36, %71 ], [ %104, %89 ]
  %110 = mul nsw i32 %63, %22
  %111 = sext i32 %110 to i64
  %112 = getelementptr inbounds i32, i32* %107, i64 %111
  %113 = getelementptr inbounds i32, i32* %109, i64 %106
  %114 = ptrtoint i32* %112 to i64
  %115 = ptrtoint i32* %113 to i64
  %116 = sub i64 %114, %115
  %117 = lshr exact i64 %116, 2
  %118 = trunc i64 %117 to i32
  %119 = icmp sgt i32 %118, 0
  br i1 %119, label %120, label %131

120:                                              ; preds = %105
  %121 = select i1 %46, i32 2, i32 1
  %122 = add nuw nsw i32 %121, %65
  %123 = mul nsw i32 %122, %22
  %124 = sext i32 %123 to i64
  %125 = getelementptr inbounds i32, i32* %109, i64 %124
  %126 = bitcast i32* %125 to i8*
  %127 = bitcast i32* %113 to i8*
  %128 = shl i64 %116, 32
  %129 = ashr exact i64 %128, 32
  %130 = and i64 %129, -4
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %126, i8* align 4 %127, i64 %130, i1 false)
  br label %131

131:                                              ; preds = %120, %105
  store i32 %67, i32* %62, align 8
  br i1 %46, label %132, label %145

132:                                              ; preds = %131
  %133 = ptrtoint i32* %109 to i64
  %134 = ptrtoint i32* %108 to i64
  %135 = sub i64 %133, %134
  %136 = lshr exact i64 %135, 2
  %137 = trunc i64 %136 to i32
  %138 = add i32 %22, %137
  %139 = getelementptr inbounds i32, i32* %108, i64 %106
  %140 = bitcast i32* %139 to i8*
  %141 = bitcast i32* %108 to i8*
  %142 = sext i32 %138 to i64
  %143 = shl nsw i64 %142, 2
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %140, i8* align 4 %141, i64 %143, i1 false)
  store i32 %1, i32* %139, align 4
  %144 = getelementptr inbounds i32, i32* %108, i64 1
  store i32 %1, i32* %144, align 4
  br label %145

145:                                              ; preds = %132, %131
  %146 = phi i32* [ %139, %132 ], [ %108, %131 ]
  %147 = phi i32* [ %113, %132 ], [ %109, %131 ]
  br i1 %57, label %148, label %154

148:                                              ; preds = %145
  %149 = getelementptr inbounds i32, i32* %147, i64 %106
  %150 = bitcast i32* %149 to i8*
  %151 = bitcast i32* %147 to i8*
  %152 = shl nsw i64 %106, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %150, i8* align 4 %151, i64 %152, i1 false)
  store i32 %32, i32* %149, align 4
  %153 = getelementptr inbounds i32, i32* %147, i64 1
  store i32 %32, i32* %153, align 4
  br label %154

154:                                              ; preds = %59, %145, %148
  %155 = phi i64 [ %60, %59 ], [ %106, %145 ], [ %106, %148 ]
  %156 = phi i32* [ %35, %59 ], [ %146, %145 ], [ %146, %148 ]
  %157 = phi i32* [ %36, %59 ], [ %147, %145 ], [ %147, %148 ]
  %158 = bitcast %struct.UPropsVectors* %0 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = ptrtoint i32* %157 to i64
  %161 = sub i64 %160, %159
  %162 = ashr exact i64 %161, 2
  %163 = sdiv i64 %162, %155
  %164 = trunc i64 %163 to i32
  %165 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 4
  store i32 %164, i32* %165, align 4
  %166 = sext i32 %33 to i64
  %167 = getelementptr inbounds i32, i32* %156, i64 %166
  %168 = getelementptr inbounds i32, i32* %157, i64 %166
  %169 = xor i32 %5, -1
  %170 = load i32, i32* %167, align 4
  %171 = and i32 %170, %169
  %172 = or i32 %171, %34
  store i32 %172, i32* %167, align 4
  %173 = icmp eq i32* %156, %157
  br i1 %173, label %181, label %174

174:                                              ; preds = %154, %174
  %175 = phi i32* [ %176, %174 ], [ %167, %154 ]
  %176 = getelementptr inbounds i32, i32* %175, i64 %155
  %177 = load i32, i32* %176, align 4
  %178 = and i32 %177, %169
  %179 = or i32 %178, %34
  store i32 %179, i32* %176, align 4
  %180 = icmp eq i32* %176, %168
  br i1 %180, label %181, label %174

181:                                              ; preds = %174, %154, %79, %88, %7, %30, %25
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal fastcc i32* @_ZL8_findRowP13UPropsVectorsi(%struct.UPropsVectors* nocapture, i32) unnamed_addr #4 {
  %3 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 4
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = mul nsw i32 %8, %4
  %12 = sext i32 %11 to i64
  %13 = getelementptr inbounds i32, i32* %10, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = icmp sgt i32 %14, %1
  br i1 %15, label %49, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds i32, i32* %13, i64 1
  %18 = load i32, i32* %17, align 4
  %19 = icmp sgt i32 %18, %1
  br i1 %19, label %81, label %20

20:                                               ; preds = %16
  %21 = sext i32 %4 to i64
  %22 = getelementptr inbounds i32, i32* %13, i64 %21
  %23 = getelementptr inbounds i32, i32* %22, i64 1
  %24 = load i32, i32* %23, align 4
  %25 = icmp sgt i32 %24, %1
  br i1 %25, label %26, label %28

26:                                               ; preds = %20
  %27 = add nsw i32 %8, 1
  store i32 %27, i32* %7, align 4
  br label %81

28:                                               ; preds = %20
  %29 = getelementptr inbounds i32, i32* %22, i64 %21
  %30 = getelementptr inbounds i32, i32* %29, i64 1
  %31 = load i32, i32* %30, align 4
  %32 = icmp sgt i32 %31, %1
  br i1 %32, label %33, label %35

33:                                               ; preds = %28
  %34 = add nsw i32 %8, 2
  store i32 %34, i32* %7, align 4
  br label %81

35:                                               ; preds = %28
  %36 = sub nsw i32 %1, %31
  %37 = icmp slt i32 %36, 10
  br i1 %37, label %38, label %54

38:                                               ; preds = %35
  %39 = add nsw i32 %8, 2
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi i32* [ %29, %38 ], [ %44, %40 ]
  %42 = phi i32 [ %39, %38 ], [ %43, %40 ]
  %43 = add nsw i32 %42, 1
  %44 = getelementptr inbounds i32, i32* %41, i64 %21
  %45 = getelementptr inbounds i32, i32* %44, i64 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp sgt i32 %46, %1
  br i1 %47, label %48, label %40

48:                                               ; preds = %40
  store i32 %43, i32* %7, align 4
  br label %81

49:                                               ; preds = %2
  %50 = getelementptr inbounds i32, i32* %10, i64 1
  %51 = load i32, i32* %50, align 4
  %52 = icmp sgt i32 %51, %1
  br i1 %52, label %53, label %54

53:                                               ; preds = %49
  store i32 0, i32* %7, align 4
  br label %81

54:                                               ; preds = %49, %35
  %55 = icmp sgt i32 %6, 1
  br i1 %55, label %56, label %76

56:                                               ; preds = %54, %71
  %57 = phi i32 [ %73, %71 ], [ %6, %54 ]
  %58 = phi i32 [ %72, %71 ], [ 0, %54 ]
  %59 = add nsw i32 %57, %58
  %60 = sdiv i32 %59, 2
  %61 = mul nsw i32 %60, %4
  %62 = sext i32 %61 to i64
  %63 = getelementptr inbounds i32, i32* %10, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = icmp sgt i32 %64, %1
  br i1 %65, label %71, label %66

66:                                               ; preds = %56
  %67 = getelementptr inbounds i32, i32* %63, i64 1
  %68 = load i32, i32* %67, align 4
  %69 = icmp sgt i32 %68, %1
  br i1 %69, label %70, label %71

70:                                               ; preds = %66
  store i32 %60, i32* %7, align 4
  br label %81

71:                                               ; preds = %66, %56
  %72 = phi i32 [ %58, %56 ], [ %60, %66 ]
  %73 = phi i32 [ %60, %56 ], [ %57, %66 ]
  %74 = add nsw i32 %73, -1
  %75 = icmp slt i32 %72, %74
  br i1 %75, label %56, label %76

76:                                               ; preds = %71, %54
  %77 = phi i32 [ 0, %54 ], [ %72, %71 ]
  store i32 %77, i32* %7, align 4
  %78 = mul nsw i32 %77, %4
  %79 = sext i32 %78 to i64
  %80 = getelementptr inbounds i32, i32* %10, i64 %79
  br label %81

81:                                               ; preds = %16, %76, %70, %53, %48, %33, %26
  %82 = phi i32* [ %22, %26 ], [ %29, %33 ], [ %44, %48 ], [ %63, %70 ], [ %80, %76 ], [ %10, %53 ], [ %13, %16 ]
  ret i32* %82
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @upvec_getValue_69(%struct.UPropsVectors* nocapture, i32, i32) local_unnamed_addr #4 {
  %4 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 5
  %5 = load i8, i8* %4, align 8
  %6 = icmp ne i8 %5, 0
  %7 = icmp ugt i32 %1, 1114113
  %8 = or i1 %7, %6
  %9 = icmp slt i32 %2, 0
  %10 = or i1 %9, %8
  br i1 %10, label %22, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add nsw i32 %13, -2
  %15 = icmp sgt i32 %14, %2
  br i1 %15, label %16, label %22

16:                                               ; preds = %11
  %17 = tail call fastcc i32* @_ZL8_findRowP13UPropsVectorsi(%struct.UPropsVectors* %0, i32 %1)
  %18 = add nuw nsw i32 %2, 2
  %19 = sext i32 %18 to i64
  %20 = getelementptr inbounds i32, i32* %17, i64 %19
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %3, %11, %16
  %23 = phi i32 [ %21, %16 ], [ 0, %11 ], [ 0, %3 ]
  ret i32 %23
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32* @upvec_getRow_69(%struct.UPropsVectors* nocapture readonly, i32, i32*, i32*) local_unnamed_addr #4 {
  %5 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 5
  %6 = load i8, i8* %5, align 8
  %7 = icmp ne i8 %6, 0
  %8 = icmp slt i32 %1, 0
  %9 = or i1 %8, %7
  br i1 %9, label %33, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 3
  %12 = load i32, i32* %11, align 8
  %13 = icmp sgt i32 %12, %1
  br i1 %13, label %14, label %33

14:                                               ; preds = %10
  %15 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 0
  %18 = load i32*, i32** %17, align 8
  %19 = mul nsw i32 %16, %1
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i32, i32* %18, i64 %20
  %22 = icmp eq i32* %2, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %14
  %24 = load i32, i32* %21, align 4
  store i32 %24, i32* %2, align 4
  br label %25

25:                                               ; preds = %14, %23
  %26 = icmp eq i32* %3, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds i32, i32* %21, i64 1
  %29 = load i32, i32* %28, align 4
  %30 = add nsw i32 %29, -1
  store i32 %30, i32* %3, align 4
  br label %31

31:                                               ; preds = %25, %27
  %32 = getelementptr inbounds i32, i32* %21, i64 2
  br label %33

33:                                               ; preds = %4, %10, %31
  %34 = phi i32* [ %32, %31 ], [ null, %10 ], [ null, %4 ]
  ret i32* %34
}

; Function Attrs: nounwind ssp uwtable
define hidden void @upvec_compact_69(%struct.UPropsVectors*, void (i8*, i32, i32, i32, i32*, i32, i32*)*, i8*, i32*) local_unnamed_addr #0 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %122

7:                                                ; preds = %4
  %8 = icmp eq void (i8*, i32, i32, i32, i32*, i32, i32*)* %1, null
  br i1 %8, label %9, label %10

9:                                                ; preds = %7
  store i32 1, i32* %3, align 4
  br label %122

10:                                               ; preds = %7
  %11 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 5
  %12 = load i8, i8* %11, align 8
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %122

14:                                               ; preds = %10
  store i8 1, i8* %11, align 8
  %15 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = add nsw i32 %18, -2
  %20 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 0
  %21 = bitcast %struct.UPropsVectors* %0 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = shl nsw i32 %18, 2
  %24 = bitcast %struct.UPropsVectors* %0 to i8*
  tail call void @uprv_sortArray_69(i8* %22, i32 %16, i32 %23, i32 (i8*, i8*, i8*)* nonnull @_ZL17upvec_compareRowsPKvS0_S0_, i8* %24, i8 signext 0, i32* %3) #8
  %25 = load i32, i32* %3, align 4
  %26 = icmp slt i32 %25, 1
  br i1 %26, label %27, label %122

27:                                               ; preds = %14
  %28 = load i32*, i32** %20, align 8
  %29 = sub i32 2, %18
  %30 = icmp sgt i32 %16, 0
  %31 = sext i32 %19 to i64
  %32 = sub nsw i64 0, %31
  br i1 %30, label %33, label %63

33:                                               ; preds = %27
  %34 = shl nsw i32 %19, 2
  %35 = sext i32 %34 to i64
  %36 = sext i32 %18 to i64
  br label %37

37:                                               ; preds = %59, %33
  %38 = phi i32 [ %29, %33 ], [ %53, %59 ]
  %39 = phi i32 [ 0, %33 ], [ %61, %59 ]
  %40 = phi i32* [ %28, %33 ], [ %60, %59 ]
  %41 = load i32, i32* %40, align 4
  %42 = icmp slt i32 %38, 0
  br i1 %42, label %50, label %43

43:                                               ; preds = %37
  %44 = getelementptr inbounds i32, i32* %40, i64 2
  %45 = bitcast i32* %44 to i8*
  %46 = getelementptr inbounds i32, i32* %40, i64 %32
  %47 = bitcast i32* %46 to i8*
  %48 = tail call i32 @bcmp(i8* %45, i8* %47, i64 %35)
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %52, label %50

50:                                               ; preds = %43, %37
  %51 = add nsw i32 %38, %19
  br label %52

52:                                               ; preds = %43, %50
  %53 = phi i32 [ %51, %50 ], [ %38, %43 ]
  %54 = icmp sgt i32 %41, 1114111
  br i1 %54, label %55, label %59

55:                                               ; preds = %52
  %56 = getelementptr inbounds i32, i32* %40, i64 2
  tail call void %1(i8* %2, i32 %41, i32 %41, i32 %53, i32* %56, i32 %19, i32* %3) #8
  %57 = load i32, i32* %3, align 4
  %58 = icmp slt i32 %57, 1
  br i1 %58, label %59, label %122

59:                                               ; preds = %55, %52
  %60 = getelementptr inbounds i32, i32* %40, i64 %36
  %61 = add nuw nsw i32 %39, 1
  %62 = icmp eq i32 %61, %16
  br i1 %62, label %63, label %37

63:                                               ; preds = %59, %27
  %64 = phi i32* [ %28, %27 ], [ %60, %59 ]
  %65 = phi i32 [ %29, %27 ], [ %53, %59 ]
  %66 = add nsw i32 %65, %19
  %67 = getelementptr inbounds i32, i32* %64, i64 %32
  tail call void %1(i8* %2, i32 2097152, i32 2097152, i32 %66, i32* %67, i32 %19, i32* %3) #8
  %68 = load i32, i32* %3, align 4
  %69 = icmp slt i32 %68, 1
  br i1 %69, label %70, label %122

70:                                               ; preds = %63
  br i1 %30, label %71, label %118

71:                                               ; preds = %70
  %72 = load i32*, i32** %20, align 8
  %73 = shl nsw i32 %19, 2
  %74 = sext i32 %73 to i64
  %75 = shl nsw i64 %31, 2
  %76 = sext i32 %18 to i64
  br label %77

77:                                               ; preds = %114, %71
  %78 = phi i32 [ %29, %71 ], [ %105, %114 ]
  %79 = phi i32 [ 0, %71 ], [ %116, %114 ]
  %80 = phi i32* [ %72, %71 ], [ %115, %114 ]
  %81 = load i32, i32* %80, align 4
  %82 = getelementptr inbounds i32, i32* %80, i64 1
  %83 = load i32, i32* %82, align 4
  %84 = icmp slt i32 %78, 0
  br i1 %84, label %85, label %87

85:                                               ; preds = %77
  %86 = load i32*, i32** %20, align 8
  br label %96

87:                                               ; preds = %77
  %88 = getelementptr inbounds i32, i32* %80, i64 2
  %89 = bitcast i32* %88 to i8*
  %90 = load i32*, i32** %20, align 8
  %91 = sext i32 %78 to i64
  %92 = getelementptr inbounds i32, i32* %90, i64 %91
  %93 = bitcast i32* %92 to i8*
  %94 = tail call i32 @bcmp(i8* %89, i8* %93, i64 %74)
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %104, label %96

96:                                               ; preds = %85, %87
  %97 = phi i32* [ %86, %85 ], [ %90, %87 ]
  %98 = add nsw i32 %78, %19
  %99 = sext i32 %98 to i64
  %100 = getelementptr inbounds i32, i32* %97, i64 %99
  %101 = bitcast i32* %100 to i8*
  %102 = getelementptr inbounds i32, i32* %80, i64 2
  %103 = bitcast i32* %102 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %101, i8* align 4 %103, i64 %75, i1 false)
  br label %104

104:                                              ; preds = %87, %96
  %105 = phi i32 [ %98, %96 ], [ %78, %87 ]
  %106 = icmp slt i32 %81, 1114112
  br i1 %106, label %107, label %114

107:                                              ; preds = %104
  %108 = add nsw i32 %83, -1
  %109 = load i32*, i32** %20, align 8
  %110 = sext i32 %105 to i64
  %111 = getelementptr inbounds i32, i32* %109, i64 %110
  tail call void %1(i8* %2, i32 %81, i32 %108, i32 %105, i32* %111, i32 %19, i32* %3) #8
  %112 = load i32, i32* %3, align 4
  %113 = icmp slt i32 %112, 1
  br i1 %113, label %114, label %122

114:                                              ; preds = %107, %104
  %115 = getelementptr inbounds i32, i32* %80, i64 %76
  %116 = add nuw nsw i32 %79, 1
  %117 = icmp eq i32 %116, %16
  br i1 %117, label %118, label %77

118:                                              ; preds = %114, %70
  %119 = phi i32 [ %29, %70 ], [ %105, %114 ]
  %120 = sdiv i32 %119, %19
  %121 = add nsw i32 %120, 1
  store i32 %121, i32* %15, align 8
  br label %122

122:                                              ; preds = %55, %107, %63, %14, %10, %4, %118, %9
  ret void
}

declare void @uprv_sortArray_69(i8*, i32, i32, i32 (i8*, i8*, i8*)*, i8*, i8 signext, i32*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal i32 @_ZL17upvec_compareRowsPKvS0_S0_(i8* nocapture readonly, i8* nocapture readonly, i8* nocapture readonly) #5 {
  %4 = bitcast i8* %1 to i32*
  %5 = bitcast i8* %2 to i32*
  %6 = getelementptr inbounds i8, i8* %0, i64 8
  %7 = bitcast i8* %6 to i32*
  %8 = load i32, i32* %7, align 8
  br label %9

9:                                                ; preds = %21, %3
  %10 = phi i32 [ 2, %3 ], [ %24, %21 ]
  %11 = phi i32 [ %8, %3 ], [ %25, %21 ]
  %12 = sext i32 %10 to i64
  %13 = getelementptr inbounds i32, i32* %4, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds i32, i32* %5, i64 %12
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %14, %16
  br i1 %17, label %21, label %18

18:                                               ; preds = %9
  %19 = icmp ult i32 %14, %16
  %20 = select i1 %19, i32 -1, i32 1
  br label %27

21:                                               ; preds = %9
  %22 = add nsw i32 %10, 1
  %23 = icmp eq i32 %22, %8
  %24 = select i1 %23, i32 0, i32 %22
  %25 = add nsw i32 %11, -1
  %26 = icmp sgt i32 %25, 0
  br i1 %26, label %9, label %27

27:                                               ; preds = %21, %18
  %28 = phi i32 [ %20, %18 ], [ 0, %21 ]
  ret i32 %28
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32* @upvec_getArray_69(%struct.UPropsVectors* nocapture readonly, i32*, i32*) local_unnamed_addr #4 {
  %4 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 5
  %5 = load i8, i8* %4, align 8
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %3
  %8 = icmp eq i32* %1, null
  br i1 %8, label %12, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 3
  %11 = load i32, i32* %10, align 8
  store i32 %11, i32* %1, align 4
  br label %12

12:                                               ; preds = %7, %9
  %13 = icmp eq i32* %2, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, -2
  store i32 %17, i32* %2, align 4
  br label %18

18:                                               ; preds = %12, %14
  %19 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 0
  %20 = load i32*, i32** %19, align 8
  br label %21

21:                                               ; preds = %3, %18
  %22 = phi i32* [ %20, %18 ], [ null, %3 ]
  ret i32* %22
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias i32* @upvec_cloneArray_69(%struct.UPropsVectors* nocapture readonly, i32*, i32*, i32* nocapture) local_unnamed_addr #0 {
  %5 = load i32, i32* %3, align 4
  %6 = icmp slt i32 %5, 1
  br i1 %6, label %7, label %36

7:                                                ; preds = %4
  %8 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 5
  %9 = load i8, i8* %8, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %12

11:                                               ; preds = %7
  store i32 1, i32* %3, align 4
  br label %36

12:                                               ; preds = %7
  %13 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 3
  %14 = load i32, i32* %13, align 8
  %15 = getelementptr inbounds %struct.UPropsVectors, %struct.UPropsVectors* %0, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, -2
  %18 = shl i32 %14, 2
  %19 = mul i32 %18, %17
  %20 = sext i32 %19 to i64
  %21 = tail call noalias i8* @uprv_malloc_69(i64 %20) #7
  %22 = bitcast i8* %21 to i32*
  %23 = icmp eq i8* %21, null
  br i1 %23, label %24, label %25

24:                                               ; preds = %12
  store i32 7, i32* %3, align 4
  br label %36

25:                                               ; preds = %12
  %26 = bitcast %struct.UPropsVectors* %0 to i8**
  %27 = load i8*, i8** %26, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %21, i8* align 4 %27, i64 %20, i1 false)
  %28 = icmp eq i32* %1, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = load i32, i32* %13, align 8
  store i32 %30, i32* %1, align 4
  br label %31

31:                                               ; preds = %25, %29
  %32 = icmp eq i32* %2, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %31
  %34 = load i32, i32* %15, align 8
  %35 = add nsw i32 %34, -2
  store i32 %35, i32* %2, align 4
  br label %36

36:                                               ; preds = %33, %31, %4, %24, %11
  %37 = phi i32* [ null, %24 ], [ null, %11 ], [ null, %4 ], [ %22, %31 ], [ %22, %33 ]
  ret i32* %37
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.UTrie2* @upvec_compactToUTrie2WithRowIndexes_69(%struct.UPropsVectors*, i32*) local_unnamed_addr #0 {
  %3 = alloca %struct.UPVecToUTrie2Context, align 8
  %4 = bitcast %struct.UPVecToUTrie2Context* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false)
  call void @upvec_compact_69(%struct.UPropsVectors* %0, void (i8*, i32, i32, i32, i32*, i32, i32*)* nonnull @upvec_compactToUTrie2Handler_69, i8* nonnull %4, i32* %1)
  %5 = getelementptr inbounds %struct.UPVecToUTrie2Context, %struct.UPVecToUTrie2Context* %3, i64 0, i32 0
  %6 = load %struct.UTrie2*, %struct.UTrie2** %5, align 8
  call void @utrie2_freeze_69(%struct.UTrie2* %6, i32 0, i32* %1) #8
  %7 = load i32, i32* %1, align 4
  %8 = icmp slt i32 %7, 1
  %9 = load %struct.UTrie2*, %struct.UTrie2** %5, align 8
  br i1 %8, label %11, label %10

10:                                               ; preds = %2
  call void @utrie2_close_69(%struct.UTrie2* %9) #8
  store %struct.UTrie2* null, %struct.UTrie2** %5, align 8
  br label %11

11:                                               ; preds = %2, %10
  %12 = phi %struct.UTrie2* [ null, %10 ], [ %9, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #8
  ret %struct.UTrie2* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @upvec_compactToUTrie2Handler_69(i8* nocapture, i32, i32, i32, i32* nocapture readnone, i32, i32*) #0 {
  %8 = icmp slt i32 %1, 1114112
  br i1 %8, label %9, label %12

9:                                                ; preds = %7
  %10 = bitcast i8* %0 to %struct.UTrie2**
  %11 = load %struct.UTrie2*, %struct.UTrie2** %10, align 8
  tail call void @utrie2_setRange32_69(%struct.UTrie2* %11, i32 %1, i32 %2, i32 %3, i8 signext 1, i32* %6) #8
  br label %33

12:                                               ; preds = %7
  switch i32 %1, label %33 [
    i32 1114112, label %13
    i32 1114113, label %16
    i32 2097152, label %19
  ]

13:                                               ; preds = %12
  %14 = getelementptr inbounds i8, i8* %0, i64 8
  %15 = bitcast i8* %14 to i32*
  store i32 %3, i32* %15, align 8
  br label %33

16:                                               ; preds = %12
  %17 = getelementptr inbounds i8, i8* %0, i64 12
  %18 = bitcast i8* %17 to i32*
  store i32 %3, i32* %18, align 4
  br label %33

19:                                               ; preds = %12
  %20 = getelementptr inbounds i8, i8* %0, i64 16
  %21 = bitcast i8* %20 to i32*
  store i32 %3, i32* %21, align 8
  %22 = icmp sgt i32 %3, 65535
  br i1 %22, label %23, label %24

23:                                               ; preds = %19
  store i32 8, i32* %6, align 4
  br label %33

24:                                               ; preds = %19
  %25 = getelementptr inbounds i8, i8* %0, i64 8
  %26 = bitcast i8* %25 to i32*
  %27 = load i32, i32* %26, align 8
  %28 = getelementptr inbounds i8, i8* %0, i64 12
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = tail call %struct.UTrie2* @utrie2_open_69(i32 %27, i32 %30, i32* %6) #8
  %32 = bitcast i8* %0 to %struct.UTrie2**
  store %struct.UTrie2* %31, %struct.UTrie2** %32, align 8
  br label %33

33:                                               ; preds = %13, %16, %24, %23, %12, %9
  ret void
}

declare void @utrie2_freeze_69(%struct.UTrie2*, i32, i32*) local_unnamed_addr #3

declare void @utrie2_close_69(%struct.UTrie2*) local_unnamed_addr #3

declare void @utrie2_setRange32_69(%struct.UTrie2*, i32, i32, i32, i8 signext, i32*) local_unnamed_addr #3

declare %struct.UTrie2* @utrie2_open_69(i32, i32, i32*) local_unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { allocsize(0) "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly }
attributes #7 = { nounwind allocsize(0) }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
