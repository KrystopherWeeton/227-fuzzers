; ModuleID = '../../base/i18n/break_iterator.cc'
source_filename = "../../base/i18n/break_iterator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::LazyInstance" = type { i64, [72 x i8] }
%"class.base::LazyInstance.1" = type { i64, [72 x i8] }
%"class.base::LazyInstance.3" = type { i64, [72 x i8] }
%"class.base::LazyInstance.5" = type { i64, [72 x i8] }
%"class.base::i18n::BreakIterator" = type { i8*, %"class.base::BasicStringPiece", %"class.std::__1::basic_string", i32, i64, i64 }
%"class.base::BasicStringPiece" = type { i16*, i64 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short" = type { [11 x i16], %struct.anon }
%struct.anon = type { %"struct.std::__1::__padding", i8 }
%"struct.std::__1::__padding" = type { [1 x i8] }
%"class.std::__1::__basic_string_common" = type { i8 }
%struct.UBreakIterator = type opaque
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache" = type { i32 (...)**, i32, %struct.UBreakIterator*, i8, %"class.base::Lock" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2" = type { i32 (...)**, i32, %struct.UBreakIterator*, i8, %"class.base::Lock" }
%"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4" = type { i32 (...)**, i32, %struct.UBreakIterator*, i8, %"class.base::Lock" }
%"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6" = type { i32 (...)**, i32, %struct.UBreakIterator*, i8, %"class.base::Lock" }
%struct.UParseError = type { i32, i32, [16 x i16], [16 x i16] }

@_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE = internal global %"class.base::LazyInstance" zeroinitializer, align 8
@_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE = internal global %"class.base::LazyInstance.1" zeroinitializer, align 8
@_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE = internal global %"class.base::LazyInstance.3" zeroinitializer, align 8
@_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE = internal global %"class.base::LazyInstance.5" zeroinitializer, align 8
@_ZTVN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType0EEE = internal unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache"*)* @_ZN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType0EED2Ev to i8*), i8* bitcast (void (%"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache"*)* @_ZN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType0EED0Ev to i8*)] }, align 8
@_ZTVN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType1EEE = internal unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2"*)* @_ZN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType1EED2Ev to i8*), i8* bitcast (void (%"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2"*)* @_ZN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType1EED0Ev to i8*)] }, align 8
@_ZTVN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType3EEE = internal unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4"*)* @_ZN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType3EED2Ev to i8*), i8* bitcast (void (%"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4"*)* @_ZN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType3EED0Ev to i8*)] }, align 8
@_ZTVN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType2EEE = internal unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6"*)* @_ZN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType2EED2Ev to i8*), i8* bitcast (void (%"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6"*)* @_ZN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType2EED0Ev to i8*)] }, align 8

@_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_9BreakTypeE = hidden unnamed_addr alias void (%"class.base::i18n::BreakIterator"*, %"class.base::BasicStringPiece"*, i32), void (%"class.base::i18n::BreakIterator"*, %"class.base::BasicStringPiece"*, i32)* @_ZN4base4i18n13BreakIteratorC2ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_9BreakTypeE
@_ZN4base4i18n13BreakIteratorC1ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEERKNS3_12basic_stringIDsS5_NS3_9allocatorIDsEEEE = hidden unnamed_addr alias void (%"class.base::i18n::BreakIterator"*, %"class.base::BasicStringPiece"*, %"class.std::__1::basic_string"*), void (%"class.base::i18n::BreakIterator"*, %"class.base::BasicStringPiece"*, %"class.std::__1::basic_string"*)* @_ZN4base4i18n13BreakIteratorC2ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEERKNS3_12basic_stringIDsS5_NS3_9allocatorIDsEEEE
@_ZN4base4i18n13BreakIteratorD1Ev = hidden unnamed_addr alias void (%"class.base::i18n::BreakIterator"*), void (%"class.base::i18n::BreakIterator"*)* @_ZN4base4i18n13BreakIteratorD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base4i18n13BreakIteratorC2ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEENS1_9BreakTypeE(%"class.base::i18n::BreakIterator"* nocapture, %"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 0
  store i8* null, i8** %4, align 8
  %5 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 1
  %6 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  %7 = bitcast %"class.base::BasicStringPiece"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #8
  %10 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 3
  store i32 %2, i32* %10, align 8
  %11 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 4
  %12 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %12, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base4i18n13BreakIteratorC2ERKNS_16BasicStringPieceIDsNSt3__111char_traitsIDsEEEERKNS3_12basic_stringIDsS5_NS3_9allocatorIDsEEEE(%"class.base::i18n::BreakIterator"*, %"class.base::BasicStringPiece"* nocapture readonly dereferenceable(16), %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 0
  store i8* null, i8** %4, align 8
  %5 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 1
  %6 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  %7 = bitcast %"class.base::BasicStringPiece"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %6, i8* align 8 %7, i64 16, i1 false)
  %8 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %9, i64 0, i32 1, i32 1
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %3
  %14 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %15 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #8
  br label %191

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i16*, i16** %17, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp ult i64 %20, 11
  br i1 %21, label %22, label %27

22:                                               ; preds = %16
  %23 = bitcast %"class.std::__1::basic_string"* %8 to i16*
  %24 = trunc i64 %20 to i8
  %25 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %25, i64 0, i32 1, i32 1
  store i8 %24, i8* %26, align 1
  br label %44

27:                                               ; preds = %16
  %28 = icmp ugt i64 %20, 9223372036854775791
  br i1 %28, label %29, label %31

29:                                               ; preds = %27
  %30 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %30) #9
  unreachable

31:                                               ; preds = %27
  %32 = add nuw nsw i64 %20, 8
  %33 = and i64 %32, -8
  %34 = icmp slt i64 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @abort() #9
  unreachable

36:                                               ; preds = %31
  %37 = shl i64 %33, 1
  %38 = tail call i8* @_Znwm(i64 %37) #10
  %39 = bitcast i8* %38 to i16*
  %40 = bitcast %"class.std::__1::basic_string"* %8 to i8**
  store i8* %38, i8** %40, align 8
  %41 = or i64 %33, -9223372036854775808
  %42 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %20, i64* %43, align 8
  br label %44

44:                                               ; preds = %36, %22
  %45 = phi i16* [ %23, %22 ], [ %39, %36 ]
  %46 = add nuw nsw i64 %20, 1
  %47 = add i64 %20, 1
  %48 = icmp ult i64 %47, 16
  br i1 %48, label %138, label %49

49:                                               ; preds = %44
  %50 = add i64 %20, 1
  %51 = getelementptr i16, i16* %45, i64 %50
  %52 = getelementptr i16, i16* %18, i64 %50
  %53 = icmp ult i16* %45, %52
  %54 = icmp ult i16* %18, %51
  %55 = and i1 %53, %54
  br i1 %55, label %138, label %56

56:                                               ; preds = %49
  %57 = and i64 %47, -16
  %58 = sub i64 %46, %57
  %59 = getelementptr i16, i16* %18, i64 %57
  %60 = getelementptr i16, i16* %45, i64 %57
  %61 = add i64 %57, -16
  %62 = lshr exact i64 %61, 4
  %63 = add nuw nsw i64 %62, 1
  %64 = and i64 %63, 3
  %65 = icmp ult i64 %61, 48
  br i1 %65, label %117, label %66

66:                                               ; preds = %56
  %67 = sub nsw i64 %63, %64
  br label %68

68:                                               ; preds = %68, %66
  %69 = phi i64 [ 0, %66 ], [ %114, %68 ]
  %70 = phi i64 [ %67, %66 ], [ %115, %68 ]
  %71 = getelementptr i16, i16* %18, i64 %69
  %72 = getelementptr i16, i16* %45, i64 %69
  %73 = bitcast i16* %71 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !2
  %75 = getelementptr i16, i16* %71, i64 8
  %76 = bitcast i16* %75 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !2
  %78 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %78, align 2, !alias.scope !5, !noalias !2
  %79 = getelementptr i16, i16* %72, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %80, align 2, !alias.scope !5, !noalias !2
  %81 = or i64 %69, 16
  %82 = getelementptr i16, i16* %18, i64 %81
  %83 = getelementptr i16, i16* %45, i64 %81
  %84 = bitcast i16* %82 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !2
  %86 = getelementptr i16, i16* %82, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !2
  %89 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %89, align 2, !alias.scope !5, !noalias !2
  %90 = getelementptr i16, i16* %83, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %91, align 2, !alias.scope !5, !noalias !2
  %92 = or i64 %69, 32
  %93 = getelementptr i16, i16* %18, i64 %92
  %94 = getelementptr i16, i16* %45, i64 %92
  %95 = bitcast i16* %93 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !2
  %97 = getelementptr i16, i16* %93, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !2
  %100 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %100, align 2, !alias.scope !5, !noalias !2
  %101 = getelementptr i16, i16* %94, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %102, align 2, !alias.scope !5, !noalias !2
  %103 = or i64 %69, 48
  %104 = getelementptr i16, i16* %18, i64 %103
  %105 = getelementptr i16, i16* %45, i64 %103
  %106 = bitcast i16* %104 to <8 x i16>*
  %107 = load <8 x i16>, <8 x i16>* %106, align 2, !alias.scope !2
  %108 = getelementptr i16, i16* %104, i64 8
  %109 = bitcast i16* %108 to <8 x i16>*
  %110 = load <8 x i16>, <8 x i16>* %109, align 2, !alias.scope !2
  %111 = bitcast i16* %105 to <8 x i16>*
  store <8 x i16> %107, <8 x i16>* %111, align 2, !alias.scope !5, !noalias !2
  %112 = getelementptr i16, i16* %105, i64 8
  %113 = bitcast i16* %112 to <8 x i16>*
  store <8 x i16> %110, <8 x i16>* %113, align 2, !alias.scope !5, !noalias !2
  %114 = add i64 %69, 64
  %115 = add i64 %70, -4
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %68, !llvm.loop !7

117:                                              ; preds = %68, %56
  %118 = phi i64 [ 0, %56 ], [ %114, %68 ]
  %119 = icmp eq i64 %64, 0
  br i1 %119, label %136, label %120

120:                                              ; preds = %117, %120
  %121 = phi i64 [ %133, %120 ], [ %118, %117 ]
  %122 = phi i64 [ %134, %120 ], [ %64, %117 ]
  %123 = getelementptr i16, i16* %18, i64 %121
  %124 = getelementptr i16, i16* %45, i64 %121
  %125 = bitcast i16* %123 to <8 x i16>*
  %126 = load <8 x i16>, <8 x i16>* %125, align 2, !alias.scope !2
  %127 = getelementptr i16, i16* %123, i64 8
  %128 = bitcast i16* %127 to <8 x i16>*
  %129 = load <8 x i16>, <8 x i16>* %128, align 2, !alias.scope !2
  %130 = bitcast i16* %124 to <8 x i16>*
  store <8 x i16> %126, <8 x i16>* %130, align 2, !alias.scope !5, !noalias !2
  %131 = getelementptr i16, i16* %124, i64 8
  %132 = bitcast i16* %131 to <8 x i16>*
  store <8 x i16> %129, <8 x i16>* %132, align 2, !alias.scope !5, !noalias !2
  %133 = add i64 %121, 16
  %134 = add i64 %122, -1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %120, !llvm.loop !9

136:                                              ; preds = %120, %117
  %137 = icmp eq i64 %47, %57
  br i1 %137, label %191, label %138

138:                                              ; preds = %136, %49, %44
  %139 = phi i64 [ %46, %49 ], [ %46, %44 ], [ %58, %136 ]
  %140 = phi i16* [ %18, %49 ], [ %18, %44 ], [ %59, %136 ]
  %141 = phi i16* [ %45, %49 ], [ %45, %44 ], [ %60, %136 ]
  %142 = add i64 %139, -1
  %143 = and i64 %139, 7
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %156, label %145

145:                                              ; preds = %138, %145
  %146 = phi i64 [ %151, %145 ], [ %139, %138 ]
  %147 = phi i16* [ %153, %145 ], [ %140, %138 ]
  %148 = phi i16* [ %152, %145 ], [ %141, %138 ]
  %149 = phi i64 [ %154, %145 ], [ %143, %138 ]
  %150 = load i16, i16* %147, align 2
  store i16 %150, i16* %148, align 2
  %151 = add i64 %146, -1
  %152 = getelementptr inbounds i16, i16* %148, i64 1
  %153 = getelementptr inbounds i16, i16* %147, i64 1
  %154 = add i64 %149, -1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %156, label %145, !llvm.loop !11

156:                                              ; preds = %145, %138
  %157 = phi i64 [ %139, %138 ], [ %151, %145 ]
  %158 = phi i16* [ %140, %138 ], [ %153, %145 ]
  %159 = phi i16* [ %141, %138 ], [ %152, %145 ]
  %160 = icmp ult i64 %142, 7
  br i1 %160, label %191, label %161

161:                                              ; preds = %156, %161
  %162 = phi i64 [ %187, %161 ], [ %157, %156 ]
  %163 = phi i16* [ %189, %161 ], [ %158, %156 ]
  %164 = phi i16* [ %188, %161 ], [ %159, %156 ]
  %165 = load i16, i16* %163, align 2
  store i16 %165, i16* %164, align 2
  %166 = getelementptr inbounds i16, i16* %164, i64 1
  %167 = getelementptr inbounds i16, i16* %163, i64 1
  %168 = load i16, i16* %167, align 2
  store i16 %168, i16* %166, align 2
  %169 = getelementptr inbounds i16, i16* %164, i64 2
  %170 = getelementptr inbounds i16, i16* %163, i64 2
  %171 = load i16, i16* %170, align 2
  store i16 %171, i16* %169, align 2
  %172 = getelementptr inbounds i16, i16* %164, i64 3
  %173 = getelementptr inbounds i16, i16* %163, i64 3
  %174 = load i16, i16* %173, align 2
  store i16 %174, i16* %172, align 2
  %175 = getelementptr inbounds i16, i16* %164, i64 4
  %176 = getelementptr inbounds i16, i16* %163, i64 4
  %177 = load i16, i16* %176, align 2
  store i16 %177, i16* %175, align 2
  %178 = getelementptr inbounds i16, i16* %164, i64 5
  %179 = getelementptr inbounds i16, i16* %163, i64 5
  %180 = load i16, i16* %179, align 2
  store i16 %180, i16* %178, align 2
  %181 = getelementptr inbounds i16, i16* %164, i64 6
  %182 = getelementptr inbounds i16, i16* %163, i64 6
  %183 = load i16, i16* %182, align 2
  store i16 %183, i16* %181, align 2
  %184 = getelementptr inbounds i16, i16* %164, i64 7
  %185 = getelementptr inbounds i16, i16* %163, i64 7
  %186 = load i16, i16* %185, align 2
  store i16 %186, i16* %184, align 2
  %187 = add i64 %162, -8
  %188 = getelementptr inbounds i16, i16* %164, i64 8
  %189 = getelementptr inbounds i16, i16* %163, i64 8
  %190 = icmp eq i64 %187, 0
  br i1 %190, label %191, label %161, !llvm.loop !12

191:                                              ; preds = %156, %161, %136, %13
  %192 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 3
  store i32 4, i32* %192, align 8
  %193 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 4
  %194 = bitcast i64* %193 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %194, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base4i18n13BreakIteratorD2Ev(%"class.base::i18n::BreakIterator"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 0
  %3 = load i8*, i8** %2, align 8
  %4 = icmp eq i8* %3, null
  br i1 %4, label %114, label %5

5:                                                ; preds = %1
  %6 = bitcast i8* %3 to %struct.UBreakIterator*
  %7 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 3
  %8 = load i32, i32* %7, align 8
  switch i32 %8, label %114 [
    i32 4, label %9
    i32 3, label %10
    i32 0, label %36
    i32 5, label %62
    i32 1, label %88
    i32 2, label %88
  ]

9:                                                ; preds = %5
  tail call void @ubrk_close_69(%struct.UBreakIterator* nonnull %6) #8
  br label %114

10:                                               ; preds = %5
  %11 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 0) acquire, align 8
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %19, label %13

13:                                               ; preds = %10
  %14 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 0)) #8
  br i1 %14, label %15, label %17

15:                                               ; preds = %13
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType0EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 1, i64 0) to i32 (...)***), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 1, i64 8) to i32*), align 8
  store %struct.UBreakIterator* null, %struct.UBreakIterator** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 1, i64 16) to %struct.UBreakIterator**), align 8
  store i8 1, i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 1, i64 24), align 8
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 1, i64 32) to %"class.base::internal::LockImpl"*)) #8
  %16 = tail call %struct.UBreakIterator* @ubrk_open_69(i32 0, i8* null, i16* null, i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 1, i64 8) to i32*)) #8
  store %struct.UBreakIterator* %16, %struct.UBreakIterator** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 1, i64 16) to %struct.UBreakIterator**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE to i8*)) #8
  br label %19

17:                                               ; preds = %13
  %18 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 0) acquire, align 8
  br label %19

19:                                               ; preds = %10, %15, %17
  %20 = phi i64 [ %11, %10 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 1, i64 0) to i64), %15 ], [ %18, %17 ]
  %21 = inttoptr i64 %20 to %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache"*
  %22 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache"* %21, i64 0, i32 2
  %23 = load %struct.UBreakIterator*, %struct.UBreakIterator** %22, align 8
  %24 = icmp eq %struct.UBreakIterator* %23, %6
  br i1 %24, label %25, label %35

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache"* %21, i64 0, i32 4
  %27 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %26, i64 0, i32 0, i32 0
  %28 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %27) #8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %32, label %30, !prof !13

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %26, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %31) #8
  br label %32

32:                                               ; preds = %30, %25
  %33 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache"* %21, i64 0, i32 3
  store i8 1, i8* %33, align 8
  %34 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %27) #8
  br label %114

35:                                               ; preds = %19
  tail call void @ubrk_close_69(%struct.UBreakIterator* nonnull %6) #8
  br label %114

36:                                               ; preds = %5
  %37 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 0) acquire, align 8
  %38 = icmp ugt i64 %37, 1
  br i1 %38, label %45, label %39

39:                                               ; preds = %36
  %40 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 0)) #8
  br i1 %40, label %41, label %43

41:                                               ; preds = %39
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType1EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 1, i64 0) to i32 (...)***), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 1, i64 8) to i32*), align 8
  store %struct.UBreakIterator* null, %struct.UBreakIterator** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 1, i64 16) to %struct.UBreakIterator**), align 8
  store i8 1, i8* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 1, i64 24), align 8
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 1, i64 32) to %"class.base::internal::LockImpl"*)) #8
  %42 = tail call %struct.UBreakIterator* @ubrk_open_69(i32 1, i8* null, i16* null, i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 1, i64 8) to i32*)) #8
  store %struct.UBreakIterator* %42, %struct.UBreakIterator** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 1, i64 16) to %struct.UBreakIterator**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE to i8*)) #8
  br label %45

43:                                               ; preds = %39
  %44 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 0) acquire, align 8
  br label %45

45:                                               ; preds = %36, %41, %43
  %46 = phi i64 [ %37, %36 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 1, i64 0) to i64), %41 ], [ %44, %43 ]
  %47 = inttoptr i64 %46 to %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2"*
  %48 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2"* %47, i64 0, i32 2
  %49 = load %struct.UBreakIterator*, %struct.UBreakIterator** %48, align 8
  %50 = icmp eq %struct.UBreakIterator* %49, %6
  br i1 %50, label %51, label %61

51:                                               ; preds = %45
  %52 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2"* %47, i64 0, i32 4
  %53 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %52, i64 0, i32 0, i32 0
  %54 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %53) #8
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %58, label %56, !prof !13

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %52, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %57) #8
  br label %58

58:                                               ; preds = %56, %51
  %59 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2"* %47, i64 0, i32 3
  store i8 1, i8* %59, align 8
  %60 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %53) #8
  br label %114

61:                                               ; preds = %45
  tail call void @ubrk_close_69(%struct.UBreakIterator* nonnull %6) #8
  br label %114

62:                                               ; preds = %5
  %63 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 0) acquire, align 8
  %64 = icmp ugt i64 %63, 1
  br i1 %64, label %71, label %65

65:                                               ; preds = %62
  %66 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 0)) #8
  br i1 %66, label %67, label %69

67:                                               ; preds = %65
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType3EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 1, i64 0) to i32 (...)***), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 1, i64 8) to i32*), align 8
  store %struct.UBreakIterator* null, %struct.UBreakIterator** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 1, i64 16) to %struct.UBreakIterator**), align 8
  store i8 1, i8* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 1, i64 24), align 8
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 1, i64 32) to %"class.base::internal::LockImpl"*)) #8
  %68 = tail call %struct.UBreakIterator* @ubrk_open_69(i32 3, i8* null, i16* null, i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 1, i64 8) to i32*)) #8
  store %struct.UBreakIterator* %68, %struct.UBreakIterator** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 1, i64 16) to %struct.UBreakIterator**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE to i8*)) #8
  br label %71

69:                                               ; preds = %65
  %70 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 0) acquire, align 8
  br label %71

71:                                               ; preds = %62, %67, %69
  %72 = phi i64 [ %63, %62 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 1, i64 0) to i64), %67 ], [ %70, %69 ]
  %73 = inttoptr i64 %72 to %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4"*
  %74 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4"* %73, i64 0, i32 2
  %75 = load %struct.UBreakIterator*, %struct.UBreakIterator** %74, align 8
  %76 = icmp eq %struct.UBreakIterator* %75, %6
  br i1 %76, label %77, label %87

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4"* %73, i64 0, i32 4
  %79 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %78, i64 0, i32 0, i32 0
  %80 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %79) #8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %84, label %82, !prof !13

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %78, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %83) #8
  br label %84

84:                                               ; preds = %82, %77
  %85 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4"* %73, i64 0, i32 3
  store i8 1, i8* %85, align 8
  %86 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %79) #8
  br label %114

87:                                               ; preds = %71
  tail call void @ubrk_close_69(%struct.UBreakIterator* nonnull %6) #8
  br label %114

88:                                               ; preds = %5, %5
  %89 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 0) acquire, align 8
  %90 = icmp ugt i64 %89, 1
  br i1 %90, label %97, label %91

91:                                               ; preds = %88
  %92 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 0)) #8
  br i1 %92, label %93, label %95

93:                                               ; preds = %91
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 1, i64 0) to i32 (...)***), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 1, i64 8) to i32*), align 8
  store %struct.UBreakIterator* null, %struct.UBreakIterator** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 1, i64 16) to %struct.UBreakIterator**), align 8
  store i8 1, i8* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 1, i64 24), align 8
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 1, i64 32) to %"class.base::internal::LockImpl"*)) #8
  %94 = tail call %struct.UBreakIterator* @ubrk_open_69(i32 2, i8* null, i16* null, i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 1, i64 8) to i32*)) #8
  store %struct.UBreakIterator* %94, %struct.UBreakIterator** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 1, i64 16) to %struct.UBreakIterator**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE to i8*)) #8
  br label %97

95:                                               ; preds = %91
  %96 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 0) acquire, align 8
  br label %97

97:                                               ; preds = %88, %93, %95
  %98 = phi i64 [ %89, %88 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 1, i64 0) to i64), %93 ], [ %96, %95 ]
  %99 = inttoptr i64 %98 to %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6"*
  %100 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6"* %99, i64 0, i32 2
  %101 = load %struct.UBreakIterator*, %struct.UBreakIterator** %100, align 8
  %102 = icmp eq %struct.UBreakIterator* %101, %6
  br i1 %102, label %103, label %113

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6"* %99, i64 0, i32 4
  %105 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %104, i64 0, i32 0, i32 0
  %106 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %105) #8
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %110, label %108, !prof !13

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %104, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %109) #8
  br label %110

110:                                              ; preds = %108, %103
  %111 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6"* %99, i64 0, i32 3
  store i8 1, i8* %111, align 8
  %112 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %105) #8
  br label %114

113:                                              ; preds = %97
  tail call void @ubrk_close_69(%struct.UBreakIterator* nonnull %6) #8
  br label %114

114:                                              ; preds = %113, %110, %87, %84, %61, %58, %35, %32, %9, %5, %1
  %115 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 2
  %116 = bitcast %"class.std::__1::basic_string"* %115 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %117 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %116, i64 0, i32 1, i32 1
  %118 = load i8, i8* %117, align 1
  %119 = icmp slt i8 %118, 0
  br i1 %119, label %120, label %123

120:                                              ; preds = %114
  %121 = bitcast %"class.std::__1::basic_string"* %115 to i8**
  %122 = load i8*, i8** %121, align 8
  tail call void @_ZdlPv(i8* %122) #10
  br label %123

123:                                              ; preds = %114, %120
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @ubrk_close_69(%struct.UBreakIterator*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base4i18n13BreakIterator4InitEv(%"class.base::i18n::BreakIterator"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca %struct.UParseError, align 4
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #8
  store i32 0, i32* %2, align 4
  %5 = bitcast %struct.UParseError* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %5) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %5, i8 -86, i64 72, i1 false)
  %6 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %198 [
    i32 3, label %8
    i32 0, label %45
    i32 5, label %82
    i32 1, label %119
    i32 2, label %119
    i32 4, label %156
  ]

8:                                                ; preds = %1
  %9 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 0) acquire, align 8
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %17, label %11

11:                                               ; preds = %8
  %12 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 0)) #8
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType0EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 1, i64 0) to i32 (...)***), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 1, i64 8) to i32*), align 8
  store %struct.UBreakIterator* null, %struct.UBreakIterator** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 1, i64 16) to %struct.UBreakIterator**), align 8
  store i8 1, i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 1, i64 24), align 8
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 1, i64 32) to %"class.base::internal::LockImpl"*)) #8
  %14 = tail call %struct.UBreakIterator* @ubrk_open_69(i32 0, i8* null, i16* null, i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 1, i64 8) to i32*)) #8
  store %struct.UBreakIterator* %14, %struct.UBreakIterator** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 1, i64 16) to %struct.UBreakIterator**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE to i8*)) #8
  br label %17

15:                                               ; preds = %11
  %16 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 0) acquire, align 8
  br label %17

17:                                               ; preds = %8, %13, %15
  %18 = phi i64 [ %9, %8 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance", %"class.base::LazyInstance"* @_ZN4base4i18n12_GLOBAL__N_116char_break_cacheE, i64 0, i32 1, i64 0) to i64), %13 ], [ %16, %15 ]
  %19 = inttoptr i64 %18 to %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache"*
  %20 = load i32, i32* %2, align 4
  %21 = icmp slt i32 %20, 1
  br i1 %21, label %22, label %175

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache"* %19, i64 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp slt i32 %24, 1
  br i1 %25, label %27, label %26

26:                                               ; preds = %22
  store i32 %24, i32* %2, align 4
  br label %175

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache"* %19, i64 0, i32 4
  %29 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %28, i64 0, i32 0, i32 0
  %30 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %29) #8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %34, label %32, !prof !13

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %28, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %33) #8
  br label %34

34:                                               ; preds = %32, %27
  %35 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache"* %19, i64 0, i32 3
  %36 = load i8, i8* %35, align 8, !range !14
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %42, label %38

38:                                               ; preds = %34
  store i8 0, i8* %35, align 8
  %39 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache"* %19, i64 0, i32 2
  %40 = load %struct.UBreakIterator*, %struct.UBreakIterator** %39, align 8
  %41 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %29) #8
  br label %175

42:                                               ; preds = %34
  %43 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %29) #8
  %44 = call %struct.UBreakIterator* @ubrk_open_69(i32 0, i8* null, i16* null, i32 0, i32* nonnull %2) #8
  br label %175

45:                                               ; preds = %1
  %46 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 0) acquire, align 8
  %47 = icmp ugt i64 %46, 1
  br i1 %47, label %54, label %48

48:                                               ; preds = %45
  %49 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 0)) #8
  br i1 %49, label %50, label %52

50:                                               ; preds = %48
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType1EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 1, i64 0) to i32 (...)***), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 1, i64 8) to i32*), align 8
  store %struct.UBreakIterator* null, %struct.UBreakIterator** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 1, i64 16) to %struct.UBreakIterator**), align 8
  store i8 1, i8* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 1, i64 24), align 8
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 1, i64 32) to %"class.base::internal::LockImpl"*)) #8
  %51 = tail call %struct.UBreakIterator* @ubrk_open_69(i32 1, i8* null, i16* null, i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 1, i64 8) to i32*)) #8
  store %struct.UBreakIterator* %51, %struct.UBreakIterator** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 1, i64 16) to %struct.UBreakIterator**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE to i8*)) #8
  br label %54

52:                                               ; preds = %48
  %53 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 0) acquire, align 8
  br label %54

54:                                               ; preds = %45, %50, %52
  %55 = phi i64 [ %46, %45 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.1", %"class.base::LazyInstance.1"* @_ZN4base4i18n12_GLOBAL__N_116word_break_cacheE, i64 0, i32 1, i64 0) to i64), %50 ], [ %53, %52 ]
  %56 = inttoptr i64 %55 to %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2"*
  %57 = load i32, i32* %2, align 4
  %58 = icmp slt i32 %57, 1
  br i1 %58, label %59, label %175

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2"* %56, i64 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = icmp slt i32 %61, 1
  br i1 %62, label %64, label %63

63:                                               ; preds = %59
  store i32 %61, i32* %2, align 4
  br label %175

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2"* %56, i64 0, i32 4
  %66 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %65, i64 0, i32 0, i32 0
  %67 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %66) #8
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %71, label %69, !prof !13

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %65, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %70) #8
  br label %71

71:                                               ; preds = %69, %64
  %72 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2"* %56, i64 0, i32 3
  %73 = load i8, i8* %72, align 8, !range !14
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %79, label %75

75:                                               ; preds = %71
  store i8 0, i8* %72, align 8
  %76 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2"* %56, i64 0, i32 2
  %77 = load %struct.UBreakIterator*, %struct.UBreakIterator** %76, align 8
  %78 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %66) #8
  br label %175

79:                                               ; preds = %71
  %80 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %66) #8
  %81 = call %struct.UBreakIterator* @ubrk_open_69(i32 1, i8* null, i16* null, i32 0, i32* nonnull %2) #8
  br label %175

82:                                               ; preds = %1
  %83 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 0) acquire, align 8
  %84 = icmp ugt i64 %83, 1
  br i1 %84, label %91, label %85

85:                                               ; preds = %82
  %86 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 0)) #8
  br i1 %86, label %87, label %89

87:                                               ; preds = %85
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType3EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 1, i64 0) to i32 (...)***), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 1, i64 8) to i32*), align 8
  store %struct.UBreakIterator* null, %struct.UBreakIterator** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 1, i64 16) to %struct.UBreakIterator**), align 8
  store i8 1, i8* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 1, i64 24), align 8
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 1, i64 32) to %"class.base::internal::LockImpl"*)) #8
  %88 = tail call %struct.UBreakIterator* @ubrk_open_69(i32 3, i8* null, i16* null, i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 1, i64 8) to i32*)) #8
  store %struct.UBreakIterator* %88, %struct.UBreakIterator** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 1, i64 16) to %struct.UBreakIterator**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE to i8*)) #8
  br label %91

89:                                               ; preds = %85
  %90 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 0) acquire, align 8
  br label %91

91:                                               ; preds = %82, %87, %89
  %92 = phi i64 [ %83, %82 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.3", %"class.base::LazyInstance.3"* @_ZN4base4i18n12_GLOBAL__N_120sentence_break_cacheE, i64 0, i32 1, i64 0) to i64), %87 ], [ %90, %89 ]
  %93 = inttoptr i64 %92 to %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4"*
  %94 = load i32, i32* %2, align 4
  %95 = icmp slt i32 %94, 1
  br i1 %95, label %96, label %175

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4"* %93, i64 0, i32 1
  %98 = load i32, i32* %97, align 8
  %99 = icmp slt i32 %98, 1
  br i1 %99, label %101, label %100

100:                                              ; preds = %96
  store i32 %98, i32* %2, align 4
  br label %175

101:                                              ; preds = %96
  %102 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4"* %93, i64 0, i32 4
  %103 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %102, i64 0, i32 0, i32 0
  %104 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %103) #8
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %108, label %106, !prof !13

106:                                              ; preds = %101
  %107 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %102, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %107) #8
  br label %108

108:                                              ; preds = %106, %101
  %109 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4"* %93, i64 0, i32 3
  %110 = load i8, i8* %109, align 8, !range !14
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %116, label %112

112:                                              ; preds = %108
  store i8 0, i8* %109, align 8
  %113 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4"* %93, i64 0, i32 2
  %114 = load %struct.UBreakIterator*, %struct.UBreakIterator** %113, align 8
  %115 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %103) #8
  br label %175

116:                                              ; preds = %108
  %117 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %103) #8
  %118 = call %struct.UBreakIterator* @ubrk_open_69(i32 3, i8* null, i16* null, i32 0, i32* nonnull %2) #8
  br label %175

119:                                              ; preds = %1, %1
  %120 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 0) acquire, align 8
  %121 = icmp ugt i64 %120, 1
  br i1 %121, label %128, label %122

122:                                              ; preds = %119
  %123 = tail call zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 0)) #8
  br i1 %123, label %124, label %126

124:                                              ; preds = %122
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 1, i64 0) to i32 (...)***), align 8
  store i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 1, i64 8) to i32*), align 8
  store %struct.UBreakIterator* null, %struct.UBreakIterator** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 1, i64 16) to %struct.UBreakIterator**), align 8
  store i8 1, i8* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 1, i64 24), align 8
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 1, i64 32) to %"class.base::internal::LockImpl"*)) #8
  %125 = tail call %struct.UBreakIterator* @ubrk_open_69(i32 2, i8* null, i16* null, i32 0, i32* bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 1, i64 8) to i32*)) #8
  store %struct.UBreakIterator* %125, %struct.UBreakIterator** bitcast (i8* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 1, i64 16) to %struct.UBreakIterator**), align 8
  tail call void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 0), i64 ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 1, i64 0) to i64), void (i8*)* null, i8* bitcast (%"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE to i8*)) #8
  br label %128

126:                                              ; preds = %122
  %127 = load atomic i64, i64* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 0) acquire, align 8
  br label %128

128:                                              ; preds = %119, %124, %126
  %129 = phi i64 [ %120, %119 ], [ ptrtoint (i8* getelementptr inbounds (%"class.base::LazyInstance.5", %"class.base::LazyInstance.5"* @_ZN4base4i18n12_GLOBAL__N_116line_break_cacheE, i64 0, i32 1, i64 0) to i64), %124 ], [ %127, %126 ]
  %130 = inttoptr i64 %129 to %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6"*
  %131 = load i32, i32* %2, align 4
  %132 = icmp slt i32 %131, 1
  br i1 %132, label %133, label %175

133:                                              ; preds = %128
  %134 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6"* %130, i64 0, i32 1
  %135 = load i32, i32* %134, align 8
  %136 = icmp slt i32 %135, 1
  br i1 %136, label %138, label %137

137:                                              ; preds = %133
  store i32 %135, i32* %2, align 4
  br label %175

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6"* %130, i64 0, i32 4
  %140 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %139, i64 0, i32 0, i32 0
  %141 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %140) #8
  %142 = icmp eq i32 %141, 0
  br i1 %142, label %145, label %143, !prof !13

143:                                              ; preds = %138
  %144 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %139, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %144) #8
  br label %145

145:                                              ; preds = %143, %138
  %146 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6"* %130, i64 0, i32 3
  %147 = load i8, i8* %146, align 8, !range !14
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %153, label %149

149:                                              ; preds = %145
  store i8 0, i8* %146, align 8
  %150 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6"* %130, i64 0, i32 2
  %151 = load %struct.UBreakIterator*, %struct.UBreakIterator** %150, align 8
  %152 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %140) #8
  br label %175

153:                                              ; preds = %145
  %154 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %140) #8
  %155 = call %struct.UBreakIterator* @ubrk_open_69(i32 2, i8* null, i16* null, i32 0, i32* nonnull %2) #8
  br label %175

156:                                              ; preds = %1
  %157 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 2
  %158 = bitcast %"class.std::__1::basic_string"* %157 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %159 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %158, i64 0, i32 1, i32 1
  %160 = load i8, i8* %159, align 1
  %161 = icmp slt i8 %160, 0
  br i1 %161, label %162, label %167

162:                                              ; preds = %156
  %163 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %157, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load i16*, i16** %163, align 8
  %165 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %166 = load i64, i64* %165, align 8
  br label %170

167:                                              ; preds = %156
  %168 = bitcast %"class.std::__1::basic_string"* %157 to i16*
  %169 = zext i8 %160 to i64
  br label %170

170:                                              ; preds = %162, %167
  %171 = phi i16* [ %164, %162 ], [ %168, %167 ]
  %172 = phi i64 [ %166, %162 ], [ %169, %167 ]
  %173 = trunc i64 %172 to i32
  %174 = call %struct.UBreakIterator* @ubrk_openRules_69(i16* %171, i32 %173, i16* null, i32 0, %struct.UParseError* nonnull %3, i32* nonnull %2) #8
  br label %175

175:                                              ; preds = %153, %149, %137, %128, %116, %112, %100, %91, %79, %75, %63, %54, %42, %38, %26, %17, %170
  %176 = phi %struct.UBreakIterator* [ %174, %170 ], [ null, %26 ], [ %44, %42 ], [ %40, %38 ], [ null, %17 ], [ null, %63 ], [ %81, %79 ], [ %77, %75 ], [ null, %54 ], [ null, %100 ], [ %118, %116 ], [ %114, %112 ], [ null, %91 ], [ null, %137 ], [ %155, %153 ], [ %151, %149 ], [ null, %128 ]
  %177 = bitcast %"class.base::i18n::BreakIterator"* %0 to %struct.UBreakIterator**
  store %struct.UBreakIterator* %176, %struct.UBreakIterator** %177, align 8
  %178 = load i32, i32* %2, align 4
  %179 = icmp sgt i32 %178, 0
  %180 = icmp eq %struct.UBreakIterator* %176, null
  %181 = or i1 %179, %180
  br i1 %181, label %198, label %182

182:                                              ; preds = %175
  %183 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 1, i32 0
  %184 = load i16*, i16** %183, align 8
  %185 = icmp eq i16* %184, null
  br i1 %185, label %195, label %186

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 1, i32 1
  %188 = load i64, i64* %187, align 8
  %189 = trunc i64 %188 to i32
  call void @ubrk_setText_69(%struct.UBreakIterator* %176, i16* nonnull %184, i32 %189, i32* nonnull %2) #8
  %190 = load i32, i32* %2, align 4
  %191 = icmp slt i32 %190, 1
  br i1 %191, label %192, label %198

192:                                              ; preds = %186
  %193 = bitcast %"class.base::i18n::BreakIterator"* %0 to %struct.UBreakIterator**
  %194 = load %struct.UBreakIterator*, %struct.UBreakIterator** %193, align 8
  br label %195

195:                                              ; preds = %182, %192
  %196 = phi %struct.UBreakIterator* [ %194, %192 ], [ %176, %182 ]
  %197 = call i32 @ubrk_first_69(%struct.UBreakIterator* %196) #8
  br label %198

198:                                              ; preds = %175, %186, %1, %195
  %199 = phi i1 [ true, %195 ], [ false, %1 ], [ false, %175 ], [ false, %186 ]
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #8
  ret i1 %199
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare %struct.UBreakIterator* @ubrk_openRules_69(i16*, i32, i16*, i32, %struct.UParseError*, i32*) local_unnamed_addr #2

declare void @ubrk_setText_69(%struct.UBreakIterator*, i16*, i32, i32*) local_unnamed_addr #2

declare i32 @ubrk_first_69(%struct.UBreakIterator*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base4i18n13BreakIterator7AdvanceEv(%"class.base::i18n::BreakIterator"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 5
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 4
  store i64 %3, i64* %4, align 8
  %5 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %31 [
    i32 3, label %9
    i32 0, label %9
    i32 1, label %9
    i32 5, label %9
    i32 4, label %9
    i32 2, label %7
  ]

7:                                                ; preds = %1
  %8 = bitcast %"class.base::i18n::BreakIterator"* %0 to %struct.UBreakIterator**
  br label %17

9:                                                ; preds = %1, %1, %1, %1, %1
  %10 = bitcast %"class.base::i18n::BreakIterator"* %0 to %struct.UBreakIterator**
  %11 = load %struct.UBreakIterator*, %struct.UBreakIterator** %10, align 8
  %12 = tail call i32 @ubrk_next_69(%struct.UBreakIterator* %11) #8
  %13 = icmp eq i32 %12, -1
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  store i64 -1, i64* %2, align 8
  br label %31

15:                                               ; preds = %9
  %16 = sext i32 %12 to i64
  store i64 %16, i64* %2, align 8
  br label %31

17:                                               ; preds = %7, %21
  %18 = load %struct.UBreakIterator*, %struct.UBreakIterator** %8, align 8
  %19 = tail call i32 @ubrk_next_69(%struct.UBreakIterator* %18) #8
  %20 = icmp eq i32 %19, -1
  br i1 %20, label %26, label %21

21:                                               ; preds = %17
  %22 = sext i32 %19 to i64
  store i64 %22, i64* %2, align 8
  %23 = load %struct.UBreakIterator*, %struct.UBreakIterator** %8, align 8
  %24 = tail call i32 @ubrk_getRuleStatus_69(%struct.UBreakIterator* %23) #8
  %25 = icmp ult i32 %24, 100
  br i1 %25, label %17, label %31

26:                                               ; preds = %17
  %27 = load i64, i64* %4, align 8
  %28 = load i64, i64* %2, align 8
  %29 = icmp eq i64 %27, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %26
  store i64 -1, i64* %2, align 8
  br label %31

31:                                               ; preds = %21, %1, %26, %30, %15, %14
  %32 = phi i1 [ false, %30 ], [ false, %14 ], [ true, %15 ], [ true, %26 ], [ false, %1 ], [ true, %21 ]
  ret i1 %32
}

declare i32 @ubrk_next_69(%struct.UBreakIterator*) local_unnamed_addr #2

declare i32 @ubrk_getRuleStatus_69(%struct.UBreakIterator*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base4i18n13BreakIterator7SetTextEPKDsm(%"class.base::i18n::BreakIterator"* nocapture, i16*, i64) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #8
  store i32 0, i32* %4, align 4
  %6 = bitcast %"class.base::i18n::BreakIterator"* %0 to %struct.UBreakIterator**
  %7 = load %struct.UBreakIterator*, %struct.UBreakIterator** %6, align 8
  %8 = trunc i64 %2 to i32
  call void @ubrk_setText_69(%struct.UBreakIterator* %7, i16* %1, i32 %8, i32* nonnull %4) #8
  %9 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 4
  %10 = bitcast i64* %9 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %10, align 8
  %11 = load i32, i32* %4, align 4
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %13, label %16

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 1, i32 0
  store i16* %1, i16** %14, align 8
  %15 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 1, i32 1
  store i64 %2, i64* %15, align 8
  br label %16

16:                                               ; preds = %3, %13
  %17 = phi i1 [ true, %13 ], [ false, %3 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #8
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base4i18n13BreakIterator6IsWordEv(%"class.base::i18n::BreakIterator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.base::i18n::BreakIterator"* %0 to %struct.UBreakIterator**
  %3 = load %struct.UBreakIterator*, %struct.UBreakIterator** %2, align 8
  %4 = tail call i32 @ubrk_getRuleStatus_69(%struct.UBreakIterator* %3) #8
  %5 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %13 [
    i32 0, label %7
    i32 4, label %7
  ]

7:                                                ; preds = %1, %1
  %8 = icmp eq i32 %4, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 5
  %11 = load i64, i64* %10, align 8
  %12 = icmp ne i64 %11, -1
  br label %13

13:                                               ; preds = %1, %7, %9
  %14 = phi i1 [ false, %1 ], [ false, %7 ], [ %12, %9 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK4base4i18n13BreakIterator18GetWordBreakStatusEv(%"class.base::i18n::BreakIterator"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.base::i18n::BreakIterator"* %0 to %struct.UBreakIterator**
  %3 = load %struct.UBreakIterator*, %struct.UBreakIterator** %2, align 8
  %4 = tail call i32 @ubrk_getRuleStatus_69(%struct.UBreakIterator* %3) #8
  %5 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 3
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %14 [
    i32 0, label %7
    i32 4, label %7
  ]

7:                                                ; preds = %1, %1
  %8 = icmp eq i32 %4, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %7
  %10 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 5
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, -1
  %13 = zext i1 %12 to i32
  br label %14

14:                                               ; preds = %7, %9, %1
  %15 = phi i32 [ 2, %1 ], [ 1, %7 ], [ %13, %9 ]
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base4i18n13BreakIterator11IsEndOfWordEm(%"class.base::i18n::BreakIterator"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %14 [
    i32 0, label %5
    i32 4, label %5
  ]

5:                                                ; preds = %2, %2
  %6 = bitcast %"class.base::i18n::BreakIterator"* %0 to %struct.UBreakIterator**
  %7 = load %struct.UBreakIterator*, %struct.UBreakIterator** %6, align 8
  %8 = trunc i64 %1 to i32
  %9 = tail call signext i8 @ubrk_isBoundary_69(%struct.UBreakIterator* %7, i32 %8) #8
  %10 = tail call i32 @ubrk_getRuleStatus_69(%struct.UBreakIterator* %7) #8
  %11 = icmp ne i8 %9, 0
  %12 = icmp ne i32 %10, 0
  %13 = and i1 %11, %12
  br label %14

14:                                               ; preds = %2, %5
  %15 = phi i1 [ %13, %5 ], [ false, %2 ]
  ret i1 %15
}

declare signext i8 @ubrk_isBoundary_69(%struct.UBreakIterator*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base4i18n13BreakIterator13IsStartOfWordEm(%"class.base::i18n::BreakIterator"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %15 [
    i32 0, label %5
    i32 4, label %5
  ]

5:                                                ; preds = %2, %2
  %6 = bitcast %"class.base::i18n::BreakIterator"* %0 to %struct.UBreakIterator**
  %7 = load %struct.UBreakIterator*, %struct.UBreakIterator** %6, align 8
  %8 = trunc i64 %1 to i32
  %9 = tail call signext i8 @ubrk_isBoundary_69(%struct.UBreakIterator* %7, i32 %8) #8
  %10 = tail call i32 @ubrk_next_69(%struct.UBreakIterator* %7) #8
  %11 = tail call i32 @ubrk_getRuleStatus_69(%struct.UBreakIterator* %7) #8
  %12 = icmp ne i8 %9, 0
  %13 = icmp ne i32 %11, 0
  %14 = and i1 %12, %13
  br label %15

15:                                               ; preds = %2, %5
  %16 = phi i1 [ %14, %5 ], [ false, %2 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base4i18n13BreakIterator18IsSentenceBoundaryEm(%"class.base::i18n::BreakIterator"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = and i32 %4, -2
  %6 = icmp eq i32 %5, 4
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = bitcast %"class.base::i18n::BreakIterator"* %0 to %struct.UBreakIterator**
  %9 = load %struct.UBreakIterator*, %struct.UBreakIterator** %8, align 8
  %10 = trunc i64 %1 to i32
  %11 = tail call signext i8 @ubrk_isBoundary_69(%struct.UBreakIterator* %9, i32 %10) #8
  %12 = icmp ne i8 %11, 0
  br label %13

13:                                               ; preds = %2, %7
  %14 = phi i1 [ %12, %7 ], [ false, %2 ]
  ret i1 %14
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK4base4i18n13BreakIterator18IsGraphemeBoundaryEm(%"class.base::i18n::BreakIterator"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 3
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 3
  br i1 %5, label %6, label %12

6:                                                ; preds = %2
  %7 = bitcast %"class.base::i18n::BreakIterator"* %0 to %struct.UBreakIterator**
  %8 = load %struct.UBreakIterator*, %struct.UBreakIterator** %7, align 8
  %9 = trunc i64 %1 to i32
  %10 = tail call signext i8 @ubrk_isBoundary_69(%struct.UBreakIterator* %8, i32 %9) #8
  %11 = icmp ne i8 %10, 0
  br label %12

12:                                               ; preds = %2, %6
  %13 = phi i1 [ %11, %6 ], [ false, %2 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK4base4i18n13BreakIterator9GetStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.base::i18n::BreakIterator"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %1, i64 0, i32 4
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %1, i64 0, i32 5
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %7, %5
  %9 = tail call { i16*, i64 } @_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEE6substrEmm(%"class.base::BasicStringPiece"* %3, i64 %5, i64 %8) #8
  %10 = extractvalue { i16*, i64 } %9, 0
  %11 = extractvalue { i16*, i64 } %9, 1
  %12 = icmp ugt i64 %11, 9223372036854775791
  br i1 %12, label %13, label %15

13:                                               ; preds = %2
  %14 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %14) #9
  unreachable

15:                                               ; preds = %2
  %16 = icmp ult i64 %11, 11
  br i1 %16, label %30, label %17

17:                                               ; preds = %15
  %18 = add nuw nsw i64 %11, 8
  %19 = and i64 %18, -8
  %20 = icmp slt i64 %19, 0
  br i1 %20, label %21, label %22

21:                                               ; preds = %17
  tail call void @abort() #9
  unreachable

22:                                               ; preds = %17
  %23 = shl i64 %19, 1
  %24 = tail call i8* @_Znwm(i64 %23) #10
  %25 = bitcast i8* %24 to i16*
  %26 = bitcast %"class.std::__1::basic_string"* %0 to i8**
  store i8* %24, i8** %26, align 8, !alias.scope !15
  %27 = or i64 %19, -9223372036854775808
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %27, i64* %28, align 8, !alias.scope !15
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %11, i64* %29, align 8, !alias.scope !15
  br label %36

30:                                               ; preds = %15
  %31 = trunc i64 %11 to i8
  %32 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short", %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__short"* %32, i64 0, i32 1, i32 1
  store i8 %31, i8* %33, align 1, !alias.scope !15
  %34 = bitcast %"class.std::__1::basic_string"* %0 to i16*
  %35 = icmp eq i64 %11, 0
  br i1 %35, label %180, label %36

36:                                               ; preds = %30, %22
  %37 = phi i16* [ %25, %22 ], [ %34, %30 ]
  %38 = icmp ult i64 %11, 16
  br i1 %38, label %127, label %39

39:                                               ; preds = %36
  %40 = getelementptr i16, i16* %37, i64 %11
  %41 = getelementptr i16, i16* %10, i64 %11
  %42 = icmp ult i16* %37, %41
  %43 = icmp ult i16* %10, %40
  %44 = and i1 %42, %43
  br i1 %44, label %127, label %45

45:                                               ; preds = %39
  %46 = and i64 %11, -16
  %47 = sub i64 %11, %46
  %48 = getelementptr i16, i16* %10, i64 %46
  %49 = getelementptr i16, i16* %37, i64 %46
  %50 = add i64 %46, -16
  %51 = lshr exact i64 %50, 4
  %52 = add nuw nsw i64 %51, 1
  %53 = and i64 %52, 3
  %54 = icmp ult i64 %50, 48
  br i1 %54, label %106, label %55

55:                                               ; preds = %45
  %56 = sub nsw i64 %52, %53
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi i64 [ 0, %55 ], [ %103, %57 ]
  %59 = phi i64 [ %56, %55 ], [ %104, %57 ]
  %60 = getelementptr i16, i16* %10, i64 %58
  %61 = getelementptr i16, i16* %37, i64 %58
  %62 = bitcast i16* %60 to <8 x i16>*
  %63 = load <8 x i16>, <8 x i16>* %62, align 2, !alias.scope !18
  %64 = getelementptr i16, i16* %60, i64 8
  %65 = bitcast i16* %64 to <8 x i16>*
  %66 = load <8 x i16>, <8 x i16>* %65, align 2, !alias.scope !18
  %67 = bitcast i16* %61 to <8 x i16>*
  store <8 x i16> %63, <8 x i16>* %67, align 2, !alias.scope !21, !noalias !18
  %68 = getelementptr i16, i16* %61, i64 8
  %69 = bitcast i16* %68 to <8 x i16>*
  store <8 x i16> %66, <8 x i16>* %69, align 2, !alias.scope !21, !noalias !18
  %70 = or i64 %58, 16
  %71 = getelementptr i16, i16* %10, i64 %70
  %72 = getelementptr i16, i16* %37, i64 %70
  %73 = bitcast i16* %71 to <8 x i16>*
  %74 = load <8 x i16>, <8 x i16>* %73, align 2, !alias.scope !18
  %75 = getelementptr i16, i16* %71, i64 8
  %76 = bitcast i16* %75 to <8 x i16>*
  %77 = load <8 x i16>, <8 x i16>* %76, align 2, !alias.scope !18
  %78 = bitcast i16* %72 to <8 x i16>*
  store <8 x i16> %74, <8 x i16>* %78, align 2, !alias.scope !21, !noalias !18
  %79 = getelementptr i16, i16* %72, i64 8
  %80 = bitcast i16* %79 to <8 x i16>*
  store <8 x i16> %77, <8 x i16>* %80, align 2, !alias.scope !21, !noalias !18
  %81 = or i64 %58, 32
  %82 = getelementptr i16, i16* %10, i64 %81
  %83 = getelementptr i16, i16* %37, i64 %81
  %84 = bitcast i16* %82 to <8 x i16>*
  %85 = load <8 x i16>, <8 x i16>* %84, align 2, !alias.scope !18
  %86 = getelementptr i16, i16* %82, i64 8
  %87 = bitcast i16* %86 to <8 x i16>*
  %88 = load <8 x i16>, <8 x i16>* %87, align 2, !alias.scope !18
  %89 = bitcast i16* %83 to <8 x i16>*
  store <8 x i16> %85, <8 x i16>* %89, align 2, !alias.scope !21, !noalias !18
  %90 = getelementptr i16, i16* %83, i64 8
  %91 = bitcast i16* %90 to <8 x i16>*
  store <8 x i16> %88, <8 x i16>* %91, align 2, !alias.scope !21, !noalias !18
  %92 = or i64 %58, 48
  %93 = getelementptr i16, i16* %10, i64 %92
  %94 = getelementptr i16, i16* %37, i64 %92
  %95 = bitcast i16* %93 to <8 x i16>*
  %96 = load <8 x i16>, <8 x i16>* %95, align 2, !alias.scope !18
  %97 = getelementptr i16, i16* %93, i64 8
  %98 = bitcast i16* %97 to <8 x i16>*
  %99 = load <8 x i16>, <8 x i16>* %98, align 2, !alias.scope !18
  %100 = bitcast i16* %94 to <8 x i16>*
  store <8 x i16> %96, <8 x i16>* %100, align 2, !alias.scope !21, !noalias !18
  %101 = getelementptr i16, i16* %94, i64 8
  %102 = bitcast i16* %101 to <8 x i16>*
  store <8 x i16> %99, <8 x i16>* %102, align 2, !alias.scope !21, !noalias !18
  %103 = add i64 %58, 64
  %104 = add i64 %59, -4
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %106, label %57, !llvm.loop !23

106:                                              ; preds = %57, %45
  %107 = phi i64 [ 0, %45 ], [ %103, %57 ]
  %108 = icmp eq i64 %53, 0
  br i1 %108, label %125, label %109

109:                                              ; preds = %106, %109
  %110 = phi i64 [ %122, %109 ], [ %107, %106 ]
  %111 = phi i64 [ %123, %109 ], [ %53, %106 ]
  %112 = getelementptr i16, i16* %10, i64 %110
  %113 = getelementptr i16, i16* %37, i64 %110
  %114 = bitcast i16* %112 to <8 x i16>*
  %115 = load <8 x i16>, <8 x i16>* %114, align 2, !alias.scope !18
  %116 = getelementptr i16, i16* %112, i64 8
  %117 = bitcast i16* %116 to <8 x i16>*
  %118 = load <8 x i16>, <8 x i16>* %117, align 2, !alias.scope !18
  %119 = bitcast i16* %113 to <8 x i16>*
  store <8 x i16> %115, <8 x i16>* %119, align 2, !alias.scope !21, !noalias !18
  %120 = getelementptr i16, i16* %113, i64 8
  %121 = bitcast i16* %120 to <8 x i16>*
  store <8 x i16> %118, <8 x i16>* %121, align 2, !alias.scope !21, !noalias !18
  %122 = add i64 %110, 16
  %123 = add i64 %111, -1
  %124 = icmp eq i64 %123, 0
  br i1 %124, label %125, label %109, !llvm.loop !24

125:                                              ; preds = %109, %106
  %126 = icmp eq i64 %11, %46
  br i1 %126, label %180, label %127

127:                                              ; preds = %125, %39, %36
  %128 = phi i64 [ %11, %39 ], [ %11, %36 ], [ %47, %125 ]
  %129 = phi i16* [ %10, %39 ], [ %10, %36 ], [ %48, %125 ]
  %130 = phi i16* [ %37, %39 ], [ %37, %36 ], [ %49, %125 ]
  %131 = add i64 %128, -1
  %132 = and i64 %128, 7
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %145, label %134

134:                                              ; preds = %127, %134
  %135 = phi i64 [ %140, %134 ], [ %128, %127 ]
  %136 = phi i16* [ %142, %134 ], [ %129, %127 ]
  %137 = phi i16* [ %141, %134 ], [ %130, %127 ]
  %138 = phi i64 [ %143, %134 ], [ %132, %127 ]
  %139 = load i16, i16* %136, align 2
  store i16 %139, i16* %137, align 2
  %140 = add i64 %135, -1
  %141 = getelementptr inbounds i16, i16* %137, i64 1
  %142 = getelementptr inbounds i16, i16* %136, i64 1
  %143 = add i64 %138, -1
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %134, !llvm.loop !25

145:                                              ; preds = %134, %127
  %146 = phi i64 [ %128, %127 ], [ %140, %134 ]
  %147 = phi i16* [ %129, %127 ], [ %142, %134 ]
  %148 = phi i16* [ %130, %127 ], [ %141, %134 ]
  %149 = icmp ult i64 %131, 7
  br i1 %149, label %180, label %150

150:                                              ; preds = %145, %150
  %151 = phi i64 [ %176, %150 ], [ %146, %145 ]
  %152 = phi i16* [ %178, %150 ], [ %147, %145 ]
  %153 = phi i16* [ %177, %150 ], [ %148, %145 ]
  %154 = load i16, i16* %152, align 2
  store i16 %154, i16* %153, align 2
  %155 = getelementptr inbounds i16, i16* %153, i64 1
  %156 = getelementptr inbounds i16, i16* %152, i64 1
  %157 = load i16, i16* %156, align 2
  store i16 %157, i16* %155, align 2
  %158 = getelementptr inbounds i16, i16* %153, i64 2
  %159 = getelementptr inbounds i16, i16* %152, i64 2
  %160 = load i16, i16* %159, align 2
  store i16 %160, i16* %158, align 2
  %161 = getelementptr inbounds i16, i16* %153, i64 3
  %162 = getelementptr inbounds i16, i16* %152, i64 3
  %163 = load i16, i16* %162, align 2
  store i16 %163, i16* %161, align 2
  %164 = getelementptr inbounds i16, i16* %153, i64 4
  %165 = getelementptr inbounds i16, i16* %152, i64 4
  %166 = load i16, i16* %165, align 2
  store i16 %166, i16* %164, align 2
  %167 = getelementptr inbounds i16, i16* %153, i64 5
  %168 = getelementptr inbounds i16, i16* %152, i64 5
  %169 = load i16, i16* %168, align 2
  store i16 %169, i16* %167, align 2
  %170 = getelementptr inbounds i16, i16* %153, i64 6
  %171 = getelementptr inbounds i16, i16* %152, i64 6
  %172 = load i16, i16* %171, align 2
  store i16 %172, i16* %170, align 2
  %173 = getelementptr inbounds i16, i16* %153, i64 7
  %174 = getelementptr inbounds i16, i16* %152, i64 7
  %175 = load i16, i16* %174, align 2
  store i16 %175, i16* %173, align 2
  %176 = add i64 %151, -8
  %177 = getelementptr inbounds i16, i16* %153, i64 8
  %178 = getelementptr inbounds i16, i16* %152, i64 8
  %179 = icmp eq i64 %176, 0
  br i1 %179, label %180, label %150, !llvm.loop !26

180:                                              ; preds = %145, %150, %125, %30
  %181 = phi i16* [ %34, %30 ], [ %37, %125 ], [ %37, %150 ], [ %37, %145 ]
  %182 = getelementptr inbounds i16, i16* %181, i64 %11
  store i16 0, i16* %182, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden { i16*, i64 } @_ZNK4base4i18n13BreakIterator14GetStringPieceEv(%"class.base::i18n::BreakIterator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 4
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.base::i18n::BreakIterator", %"class.base::i18n::BreakIterator"* %0, i64 0, i32 5
  %6 = load i64, i64* %5, align 8
  %7 = sub i64 %6, %4
  %8 = tail call { i16*, i64 } @_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEE6substrEmm(%"class.base::BasicStringPiece"* %2, i64 %4, i64 %7)
  ret { i16*, i64 } %8
}

; Function Attrs: nounwind ssp uwtable
declare { i16*, i64 } @_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEE6substrEmm(%"class.base::BasicStringPiece"*, i64, i64) local_unnamed_addr #0 align 2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #4

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare zeroext i1 @_ZN4base8internal17NeedsLazyInstanceEPl(i64*) local_unnamed_addr #2

declare void @_ZN4base8internal20CompleteLazyInstanceEPllPFvPvES2_(i64*, i64, void (i8*)*, i8*) local_unnamed_addr #2

declare %struct.UBreakIterator* @ubrk_open_69(i32, i8*, i16*, i32, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType0EED2Ev(%"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType0EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache"* %0, i64 0, i32 2
  %4 = load %struct.UBreakIterator*, %struct.UBreakIterator** %3, align 8
  tail call void @ubrk_close_69(%struct.UBreakIterator* %4) #8
  %5 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType0EED0Ev(%"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType0EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache"* %0, i64 0, i32 2
  %4 = load %struct.UBreakIterator*, %struct.UBreakIterator** %3, align 8
  tail call void @ubrk_close_69(%struct.UBreakIterator* %4) #8
  %5 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %5) #8
  %6 = bitcast %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  ret void
}

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #7

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #7

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType1EED2Ev(%"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType1EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2"* %0, i64 0, i32 2
  %4 = load %struct.UBreakIterator*, %struct.UBreakIterator** %3, align 8
  tail call void @ubrk_close_69(%struct.UBreakIterator* %4) #8
  %5 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType1EED0Ev(%"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType1EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2"* %0, i64 0, i32 2
  %4 = load %struct.UBreakIterator*, %struct.UBreakIterator** %3, align 8
  tail call void @ubrk_close_69(%struct.UBreakIterator* %4) #8
  %5 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %5) #8
  %6 = bitcast %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.2"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType3EED2Ev(%"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType3EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4"* %0, i64 0, i32 2
  %4 = load %struct.UBreakIterator*, %struct.UBreakIterator** %3, align 8
  tail call void @ubrk_close_69(%struct.UBreakIterator* %4) #8
  %5 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType3EED0Ev(%"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType3EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4"* %0, i64 0, i32 2
  %4 = load %struct.UBreakIterator*, %struct.UBreakIterator** %3, align 8
  tail call void @ubrk_close_69(%struct.UBreakIterator* %4) #8
  %5 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %5) #8
  %6 = bitcast %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.4"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType2EED2Ev(%"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6"* %0, i64 0, i32 2
  %4 = load %struct.UBreakIterator*, %struct.UBreakIterator** %3, align 8
  tail call void @ubrk_close_69(%struct.UBreakIterator* %4) #8
  %5 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @_ZN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType2EED0Ev(%"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base4i18n12_GLOBAL__N_131DefaultLocaleBreakIteratorCacheIL18UBreakIteratorType2EEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6"* %0, i64 0, i32 2
  %4 = load %struct.UBreakIterator*, %struct.UBreakIterator** %3, align 8
  tail call void @ubrk_close_69(%struct.UBreakIterator* %4) #8
  %5 = getelementptr inbounds %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6", %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6"* %0, i64 0, i32 4, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %5) #8
  %6 = bitcast %"class.base::i18n::(anonymous namespace)::DefaultLocaleBreakIteratorCache.6"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #10
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { noreturn nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4}
!4 = distinct !{!4, !"LVerDomain"}
!5 = !{!6}
!6 = distinct !{!6, !4}
!7 = distinct !{!7, !8}
!8 = !{!"llvm.loop.isvectorized", i32 1}
!9 = distinct !{!9, !10}
!10 = !{!"llvm.loop.unroll.disable"}
!11 = distinct !{!11, !10}
!12 = distinct !{!12, !8}
!13 = !{!"branch_weights", i32 2000, i32 1}
!14 = !{i8 0, i8 2}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv: argument 0"}
!17 = distinct !{!17, !"_ZNK4base16BasicStringPieceIDsNSt3__111char_traitsIDsEEEcvNS1_12basic_stringIDsS3_NS1_9allocatorIDsEEEEEv"}
!18 = !{!19}
!19 = distinct !{!19, !20}
!20 = distinct !{!20, !"LVerDomain"}
!21 = !{!22}
!22 = distinct !{!22, !20}
!23 = distinct !{!23, !8}
!24 = distinct !{!24, !10}
!25 = distinct !{!25, !10}
!26 = distinct !{!26, !8}
