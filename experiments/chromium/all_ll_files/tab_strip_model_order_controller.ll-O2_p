; ModuleID = '../../chrome/browser/ui/tabs/tab_strip_model_order_controller.cc'
source_filename = "../../chrome/browser/ui/tabs/tab_strip_model_order_controller.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.TabStripModelOrderController = type { %class.TabStripModelObserver, %class.TabStripModel* }
%class.TabStripModelObserver = type { i32 (...)**, %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%class.TabStripModel = type { %class.TabGroupController, %"class.std::__1::vector", %"class.std::__1::unique_ptr.9", %class.TabStripModelDelegate*, i8, [7 x i8], %"class.base::ObserverList", %class.Profile*, i8, %"class.std::__1::unique_ptr.20", %"class.ui::ListSelectionModel", i8, %class.TabSwitchEventLatencyRecorder, %"class.base::RepeatingTimer", %"class.base::TimeTicks", i64, i64, %"class.base::WeakPtrFactory.43" }
%class.TabGroupController = type { i32 (...)** }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.TabStripModel::WebContentsData"* }
%"class.TabStripModel::WebContentsData" = type opaque
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::unique_ptr"* }
%"class.std::__1::unique_ptr.9" = type { %"class.std::__1::__compressed_pair.10" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %class.TabGroupModel* }
%class.TabGroupModel = type opaque
%class.TabStripModelDelegate = type opaque
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.13", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.13" = type { %"class.std::__1::__vector_base.14" }
%"class.std::__1::__vector_base.14" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.15" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%class.Profile = type opaque
%"class.std::__1::unique_ptr.20" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %class.TabStripModelOrderController* }
%"class.ui::ListSelectionModel" = type { %"class.base::internal::flat_tree", i32, i32 }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.26" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { i32*, i32*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { i32* }
%class.TabSwitchEventLatencyRecorder = type { %"class.base::TimeTicks", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.base::RepeatingTimer" = type { %"class.base::internal::TimerBase", %"class.base::RepeatingCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory" }
%class.scoped_refptr = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.33" }
%"struct.std::__1::__atomic_base.33" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.34 }
%class.scoped_refptr.34 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.35", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.35" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.36" }
%"struct.std::__1::atomic.36" = type { %"struct.std::__1::__atomic_base.37" }
%"struct.std::__1::__atomic_base.37" = type { %"struct.std::__1::__atomic_base.38" }
%"struct.std::__1::__atomic_base.38" = type { %"struct.std::__1::__cxx_atomic_impl.39" }
%"struct.std::__1::__cxx_atomic_impl.39" = type { %"struct.std::__1::__cxx_atomic_base_impl.40" }
%"struct.std::__1::__cxx_atomic_base_impl.40" = type { i8 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.41 }
%class.scoped_refptr.41 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.42", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.42" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::WeakPtrFactory.43" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.content::WebContents" = type <{ %"class.content::PageNavigator", %"class.base::SupportsUserData.base", [7 x i8] }>
%"class.content::PageNavigator" = type { i32 (...)** }
%"class.base::SupportsUserData.base" = type <{ i32 (...)**, %"class.std::__1::map", %"class.base::SequenceCheckerDoNothing" }>
%"class.std::__1::map" = type { %"class.std::__1::__tree.44" }
%"class.std::__1::__tree.44" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.49" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.49" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.absl::optional.58" = type { %"class.absl::optional_internal::optional_data.59" }
%"class.absl::optional_internal::optional_data.59" = type { %"class.absl::optional_internal::optional_data_base.60" }
%"class.absl::optional_internal::optional_data_base.60" = type { %"class.absl::optional_internal::optional_data_dtor_base.61" }
%"class.absl::optional_internal::optional_data_dtor_base.61" = type { i8, %union.anon.62 }
%union.anon.62 = type { %"class.tab_groups::TabGroupId" }
%"class.tab_groups::TabGroupId" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.TabStripModelChange = type { i32, %"class.std::__1::unique_ptr.63" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %"struct.TabStripModelChange::Delta"* }
%"struct.TabStripModelChange::Delta" = type { i32 (...)** }
%struct.TabStripSelectionChange = type { %"class.content::WebContents"*, %"class.content::WebContents"*, %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel", i8, i32 }
%struct.TabGroupChange = type { %"class.tab_groups::TabGroupId", i32, %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"struct.TabGroupChange::Delta"* }
%"struct.TabGroupChange::Delta" = type { i32 (...)** }

@_ZTV28TabStripModelOrderController = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.TabStripModelOrderController*, %class.TabStripModel*, %class.TabStripModelChange*, %struct.TabStripSelectionChange*)* @_ZN28TabStripModelOrderController22OnTabStripModelChangedEP13TabStripModelRK19TabStripModelChangeRK23TabStripSelectionChange to i8*), i8* bitcast (void (%class.TabStripModelObserver*, %struct.TabGroupChange*)* @_ZN21TabStripModelObserver17OnTabGroupChangedERK14TabGroupChange to i8*), i8* bitcast (void (%class.TabStripModelObserver*, %"class.content::WebContents"*, i32, i32)* @_ZN21TabStripModelObserver12TabChangedAtEPN7content11WebContentsEi13TabChangeType to i8*), i8* bitcast (void (%class.TabStripModelObserver*, %class.TabStripModel*, %"class.content::WebContents"*, i32)* @_ZN21TabStripModelObserver21TabPinnedStateChangedEP13TabStripModelPN7content11WebContentsEi to i8*), i8* bitcast (void (%class.TabStripModelObserver*, %"class.content::WebContents"*, i32)* @_ZN21TabStripModelObserver22TabBlockedStateChangedEPN7content11WebContentsEi to i8*), i8* bitcast (void (%class.TabStripModelObserver*, %"class.absl::optional.58"*, %"class.content::WebContents"*, i32)* @_ZN21TabStripModelObserver22TabGroupedStateChangedEN4absl8optionalIN10tab_groups10TabGroupIdEEEPN7content11WebContentsEi to i8*), i8* bitcast (void (%class.TabStripModelObserver*)* @_ZN21TabStripModelObserver13TabStripEmptyEv to i8*), i8* bitcast (void (%class.TabStripModelObserver*, %class.TabStripModel*)* @_ZN21TabStripModelObserver16WillCloseAllTabsEP13TabStripModel to i8*), i8* bitcast (void (%class.TabStripModelObserver*, %class.TabStripModel*, i32)* @_ZN21TabStripModelObserver19CloseAllTabsStoppedEP13TabStripModelNS_21CloseAllStoppedReasonE to i8*), i8* bitcast (void (%class.TabStripModelObserver*, i32, i1)* @_ZN21TabStripModelObserver22SetTabNeedsAttentionAtEib to i8*), i8* bitcast (void (%class.TabStripModelObserver*, %class.TabStripModel*)* @_ZN21TabStripModelObserver24OnTabStripModelDestroyedEP13TabStripModel to i8*), i8* bitcast (void (%class.TabStripModelOrderController*)* @_ZN28TabStripModelOrderControllerD2Ev to i8*), i8* bitcast (void (%class.TabStripModelOrderController*)* @_ZN28TabStripModelOrderControllerD0Ev to i8*)] }, align 8

@_ZN28TabStripModelOrderControllerC1EP13TabStripModel = hidden unnamed_addr alias void (%class.TabStripModelOrderController*, %class.TabStripModel*), void (%class.TabStripModelOrderController*, %class.TabStripModel*)* @_ZN28TabStripModelOrderControllerC2EP13TabStripModel
@_ZN28TabStripModelOrderControllerD1Ev = hidden unnamed_addr alias void (%class.TabStripModelOrderController*), void (%class.TabStripModelOrderController*)* @_ZN28TabStripModelOrderControllerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28TabStripModelOrderControllerC2EP13TabStripModel(%class.TabStripModelOrderController*, %class.TabStripModel*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.TabStripModelOrderController, %class.TabStripModelOrderController* %0, i64 0, i32 0
  tail call void @_ZN21TabStripModelObserverC2Ev(%class.TabStripModelObserver* %3) #7
  %4 = getelementptr inbounds %class.TabStripModelOrderController, %class.TabStripModelOrderController* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTV28TabStripModelOrderController, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.TabStripModelOrderController, %class.TabStripModelOrderController* %0, i64 0, i32 1
  store %class.TabStripModel* %1, %class.TabStripModel** %5, align 8
  tail call void @_ZN13TabStripModel11AddObserverEP21TabStripModelObserver(%class.TabStripModel* %1, %class.TabStripModelObserver* %3) #7
  ret void
}

declare void @_ZN21TabStripModelObserverC2Ev(%class.TabStripModelObserver*) unnamed_addr #1

declare void @_ZN13TabStripModel11AddObserverEP21TabStripModelObserver(%class.TabStripModel*, %class.TabStripModelObserver*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN21TabStripModelObserverD2Ev(%class.TabStripModelObserver*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28TabStripModelOrderControllerD2Ev(%class.TabStripModelOrderController*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.TabStripModelOrderController, %class.TabStripModelOrderController* %0, i64 0, i32 0
  tail call void @_ZN21TabStripModelObserverD2Ev(%class.TabStripModelObserver* %2) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28TabStripModelOrderControllerD0Ev(%class.TabStripModelOrderController*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.TabStripModelOrderController, %class.TabStripModelOrderController* %0, i64 0, i32 0
  tail call void @_ZN21TabStripModelObserverD2Ev(%class.TabStripModelObserver* %2) #7
  %3 = bitcast %class.TabStripModelOrderController* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN28TabStripModelOrderController23DetermineInsertionIndexEN2ui14PageTransitionEb(%class.TabStripModelOrderController* nocapture readonly, i32, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.TabStripModelOrderController, %class.TabStripModelOrderController* %0, i64 0, i32 1
  %5 = load %class.TabStripModel*, %class.TabStripModel** %4, align 8
  %6 = getelementptr inbounds %class.TabStripModel, %class.TabStripModel* %5, i64 0, i32 1
  %7 = getelementptr inbounds %class.TabStripModel, %class.TabStripModel* %5, i64 0, i32 1, i32 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = lshr exact i64 %12, 3
  %14 = trunc i64 %13 to i32
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %50, label %16

16:                                               ; preds = %3
  %17 = tail call zeroext i1 @_ZN2ui24PageTransitionCoreTypeIsENS_14PageTransitionES0_(i32 %1, i32 0) #7
  %18 = load %class.TabStripModel*, %class.TabStripModel** %4, align 8
  br i1 %17, label %19, label %40

19:                                               ; preds = %16
  %20 = getelementptr inbounds %class.TabStripModel, %class.TabStripModel* %18, i64 0, i32 10, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, -1
  br i1 %22, label %40, label %23

23:                                               ; preds = %19
  br i1 %2, label %24, label %26

24:                                               ; preds = %23
  %25 = add nuw nsw i32 %21, 1
  br label %50

26:                                               ; preds = %23
  %27 = tail call %"class.content::WebContents"* @_ZNK13TabStripModel20GetActiveWebContentsEv(%class.TabStripModel* %18) #7
  %28 = load %class.TabStripModel*, %class.TabStripModel** %4, align 8
  %29 = getelementptr inbounds %class.TabStripModel, %class.TabStripModel* %28, i64 0, i32 10, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = tail call i32 @_ZNK13TabStripModel33GetIndexOfLastWebContentsOpenedByEPKN7content11WebContentsEi(%class.TabStripModel* %28, %"class.content::WebContents"* %27, i32 %30) #7
  %32 = icmp eq i32 %31, -1
  br i1 %32, label %33, label %37

33:                                               ; preds = %26
  %34 = load %class.TabStripModel*, %class.TabStripModel** %4, align 8
  %35 = getelementptr inbounds %class.TabStripModel, %class.TabStripModel* %34, i64 0, i32 10, i32 1
  %36 = load i32, i32* %35, align 8
  br label %37

37:                                               ; preds = %26, %33
  %38 = phi i32 [ %36, %33 ], [ %31, %26 ]
  %39 = add nsw i32 %38, 1
  br label %50

40:                                               ; preds = %16, %19
  %41 = getelementptr inbounds %class.TabStripModel, %class.TabStripModel* %18, i64 0, i32 1
  %42 = getelementptr inbounds %class.TabStripModel, %class.TabStripModel* %18, i64 0, i32 1, i32 0, i32 1
  %43 = bitcast %"class.std::__1::unique_ptr"** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = bitcast %"class.std::__1::vector"* %41 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = sub i64 %44, %46
  %48 = lshr exact i64 %47, 3
  %49 = trunc i64 %48 to i32
  br label %50

50:                                               ; preds = %3, %40, %37, %24
  %51 = phi i32 [ %25, %24 ], [ %39, %37 ], [ %49, %40 ], [ 0, %3 ]
  ret i32 %51
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare zeroext i1 @_ZN2ui24PageTransitionCoreTypeIsENS_14PageTransitionES0_(i32, i32) local_unnamed_addr #1

declare %"class.content::WebContents"* @_ZNK13TabStripModel20GetActiveWebContentsEv(%class.TabStripModel*) local_unnamed_addr #1

declare i32 @_ZNK13TabStripModel33GetIndexOfLastWebContentsOpenedByEPKN7content11WebContentsEi(%class.TabStripModel*, %"class.content::WebContents"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK28TabStripModelOrderController25DetermineNewSelectedIndexEi(%class.TabStripModelOrderController* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.absl::optional.58", align 8
  %4 = alloca %"class.absl::optional.58", align 8
  %5 = alloca %"class.absl::optional.58", align 8
  %6 = alloca %"class.absl::optional.58", align 8
  %7 = getelementptr inbounds %class.TabStripModelOrderController, %class.TabStripModelOrderController* %0, i64 0, i32 1
  %8 = load %class.TabStripModel*, %class.TabStripModel** %7, align 8
  %9 = getelementptr inbounds %class.TabStripModel, %class.TabStripModel* %8, i64 0, i32 10, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, %1
  br i1 %11, label %12, label %160

12:                                               ; preds = %2
  %13 = tail call dereferenceable(32) %"class.ui::ListSelectionModel"* @_ZNK13TabStripModel15selection_modelEv(%class.TabStripModel* %8) #7
  %14 = getelementptr inbounds %"class.ui::ListSelectionModel", %"class.ui::ListSelectionModel"* %13, i64 0, i32 0, i32 0, i32 0, i32 1
  %15 = bitcast i32** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = bitcast %"class.ui::ListSelectionModel"* %13 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 2
  %21 = icmp ugt i64 %20, 1
  br i1 %21, label %160, label %22

22:                                               ; preds = %12
  %23 = load %class.TabStripModel*, %class.TabStripModel** %7, align 8
  %24 = tail call %"class.content::WebContents"* @_ZN13TabStripModel24GetOpenerOfWebContentsAtEi(%class.TabStripModel* %23, i32 %1) #7
  %25 = load %class.TabStripModel*, %class.TabStripModel** %7, align 8
  %26 = bitcast %class.TabStripModel* %25 to %"class.content::WebContents"* (%class.TabStripModel*, i32)***
  %27 = load %"class.content::WebContents"* (%class.TabStripModel*, i32)**, %"class.content::WebContents"* (%class.TabStripModel*, i32)*** %26, align 8
  %28 = getelementptr inbounds %"class.content::WebContents"* (%class.TabStripModel*, i32)*, %"class.content::WebContents"* (%class.TabStripModel*, i32)** %27, i64 7
  %29 = load %"class.content::WebContents"* (%class.TabStripModel*, i32)*, %"class.content::WebContents"* (%class.TabStripModel*, i32)** %28, align 8
  %30 = tail call %"class.content::WebContents"* %29(%class.TabStripModel* %25, i32 %1) #7
  %31 = load %class.TabStripModel*, %class.TabStripModel** %7, align 8
  %32 = tail call i32 @_ZNK13TabStripModel33GetIndexOfNextWebContentsOpenedByEPKN7content11WebContentsEi(%class.TabStripModel* %31, %"class.content::WebContents"* %30, i32 %1) #7
  %33 = icmp eq i32 %32, -1
  br i1 %33, label %43, label %34

34:                                               ; preds = %22
  %35 = load %class.TabStripModel*, %class.TabStripModel** %7, align 8
  %36 = tail call zeroext i1 @_ZNK13TabStripModel14IsTabCollapsedEi(%class.TabStripModel* %35, i32 %32) #7
  br i1 %36, label %43, label %37

37:                                               ; preds = %34
  %38 = icmp sgt i32 %32, %1
  br i1 %38, label %39, label %160

39:                                               ; preds = %37
  %40 = icmp sgt i32 %32, 1
  %41 = select i1 %40, i32 %32, i32 1
  %42 = add nsw i32 %41, -1
  br label %160

43:                                               ; preds = %22, %34
  %44 = icmp eq %"class.content::WebContents"* %24, null
  br i1 %44, label %71, label %45

45:                                               ; preds = %43
  %46 = load %class.TabStripModel*, %class.TabStripModel** %7, align 8
  %47 = tail call i32 @_ZNK13TabStripModel33GetIndexOfNextWebContentsOpenedByEPKN7content11WebContentsEi(%class.TabStripModel* %46, %"class.content::WebContents"* nonnull %24, i32 %1) #7
  %48 = icmp eq i32 %47, -1
  br i1 %48, label %58, label %49

49:                                               ; preds = %45
  %50 = load %class.TabStripModel*, %class.TabStripModel** %7, align 8
  %51 = tail call zeroext i1 @_ZNK13TabStripModel14IsTabCollapsedEi(%class.TabStripModel* %50, i32 %47) #7
  br i1 %51, label %58, label %52

52:                                               ; preds = %49
  %53 = icmp sgt i32 %47, %1
  br i1 %53, label %54, label %160

54:                                               ; preds = %52
  %55 = icmp sgt i32 %47, 1
  %56 = select i1 %55, i32 %47, i32 1
  %57 = add nsw i32 %56, -1
  br label %160

58:                                               ; preds = %45, %49
  %59 = load %class.TabStripModel*, %class.TabStripModel** %7, align 8
  %60 = tail call i32 @_ZNK13TabStripModel21GetIndexOfWebContentsEPKN7content11WebContentsE(%class.TabStripModel* %59, %"class.content::WebContents"* nonnull %24) #7
  %61 = icmp eq i32 %60, -1
  br i1 %61, label %71, label %62

62:                                               ; preds = %58
  %63 = load %class.TabStripModel*, %class.TabStripModel** %7, align 8
  %64 = tail call zeroext i1 @_ZNK13TabStripModel14IsTabCollapsedEi(%class.TabStripModel* %63, i32 %60) #7
  br i1 %64, label %71, label %65

65:                                               ; preds = %62
  %66 = icmp sgt i32 %60, %1
  br i1 %66, label %67, label %160

67:                                               ; preds = %65
  %68 = icmp sgt i32 %60, 1
  %69 = select i1 %68, i32 %60, i32 1
  %70 = add nsw i32 %69, -1
  br label %160

71:                                               ; preds = %58, %62, %43
  %72 = getelementptr inbounds %"class.absl::optional.58", %"class.absl::optional.58"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 -86, i64 24, i1 false)
  %73 = load %class.TabStripModel*, %class.TabStripModel** %7, align 8
  %74 = bitcast %class.TabStripModel* %73 to void (%"class.absl::optional.58"*, %class.TabStripModel*, i32)***
  %75 = load void (%"class.absl::optional.58"*, %class.TabStripModel*, i32)**, void (%"class.absl::optional.58"*, %class.TabStripModel*, i32)*** %74, align 8
  %76 = getelementptr inbounds void (%"class.absl::optional.58"*, %class.TabStripModel*, i32)*, void (%"class.absl::optional.58"*, %class.TabStripModel*, i32)** %75, i64 6
  %77 = load void (%"class.absl::optional.58"*, %class.TabStripModel*, i32)*, void (%"class.absl::optional.58"*, %class.TabStripModel*, i32)** %76, align 8
  call void %77(%"class.absl::optional.58"* nonnull sret %3, %class.TabStripModel* %73, i32 %1) #7
  %78 = load i8, i8* %72, align 8, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %129, label %80

80:                                               ; preds = %71
  %81 = getelementptr inbounds %"class.absl::optional.58", %"class.absl::optional.58"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %81) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %81, i8 -86, i64 24, i1 false)
  %82 = load %class.TabStripModel*, %class.TabStripModel** %7, align 8
  %83 = add nsw i32 %1, 1
  %84 = bitcast %class.TabStripModel* %82 to void (%"class.absl::optional.58"*, %class.TabStripModel*, i32)***
  %85 = load void (%"class.absl::optional.58"*, %class.TabStripModel*, i32)**, void (%"class.absl::optional.58"*, %class.TabStripModel*, i32)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.absl::optional.58"*, %class.TabStripModel*, i32)*, void (%"class.absl::optional.58"*, %class.TabStripModel*, i32)** %85, i64 6
  %87 = load void (%"class.absl::optional.58"*, %class.TabStripModel*, i32)*, void (%"class.absl::optional.58"*, %class.TabStripModel*, i32)** %86, align 8
  call void %87(%"class.absl::optional.58"* nonnull sret %4, %class.TabStripModel* %82, i32 %83) #7
  %88 = load i8, i8* %72, align 8, !range !2
  %89 = icmp ne i8 %88, 0
  %90 = load i8, i8* %81, align 8, !range !2
  %91 = icmp ne i8 %90, 0
  %92 = xor i1 %89, %91
  %93 = xor i1 %89, true
  %94 = or i1 %92, %93
  br i1 %94, label %102, label %95

95:                                               ; preds = %80
  %96 = icmp eq i8 %90, 0
  br i1 %96, label %97, label %98, !prof !3

97:                                               ; preds = %95
  call void @llvm.trap() #7
  unreachable

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.absl::optional.58", %"class.absl::optional.58"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %100 = getelementptr inbounds %"class.absl::optional.58", %"class.absl::optional.58"* %4, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %101 = call zeroext i1 @_ZNK10tab_groups10TabGroupIdeqERKS0_(%"class.tab_groups::TabGroupId"* %99, %"class.tab_groups::TabGroupId"* dereferenceable(16) %100) #7
  br i1 %101, label %126, label %103

102:                                              ; preds = %80
  br i1 %92, label %103, label %126

103:                                              ; preds = %102, %98
  %104 = getelementptr inbounds %"class.absl::optional.58", %"class.absl::optional.58"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 24, i1 false)
  %105 = load %class.TabStripModel*, %class.TabStripModel** %7, align 8
  %106 = add nsw i32 %1, -1
  %107 = bitcast %class.TabStripModel* %105 to void (%"class.absl::optional.58"*, %class.TabStripModel*, i32)***
  %108 = load void (%"class.absl::optional.58"*, %class.TabStripModel*, i32)**, void (%"class.absl::optional.58"*, %class.TabStripModel*, i32)*** %107, align 8
  %109 = getelementptr inbounds void (%"class.absl::optional.58"*, %class.TabStripModel*, i32)*, void (%"class.absl::optional.58"*, %class.TabStripModel*, i32)** %108, i64 6
  %110 = load void (%"class.absl::optional.58"*, %class.TabStripModel*, i32)*, void (%"class.absl::optional.58"*, %class.TabStripModel*, i32)** %109, align 8
  call void %110(%"class.absl::optional.58"* nonnull sret %5, %class.TabStripModel* %105, i32 %106) #7
  %111 = load i8, i8* %72, align 8, !range !2
  %112 = icmp ne i8 %111, 0
  %113 = load i8, i8* %104, align 8, !range !2
  %114 = icmp ne i8 %113, 0
  %115 = xor i1 %112, %114
  %116 = xor i1 %112, true
  %117 = or i1 %115, %116
  br i1 %117, label %125, label %118

118:                                              ; preds = %103
  %119 = icmp eq i8 %113, 0
  br i1 %119, label %120, label %121, !prof !3

120:                                              ; preds = %118
  call void @llvm.trap() #7
  unreachable

121:                                              ; preds = %118
  %122 = getelementptr inbounds %"class.absl::optional.58", %"class.absl::optional.58"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %123 = getelementptr inbounds %"class.absl::optional.58", %"class.absl::optional.58"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %124 = call zeroext i1 @_ZNK10tab_groups10TabGroupIdeqERKS0_(%"class.tab_groups::TabGroupId"* %122, %"class.tab_groups::TabGroupId"* dereferenceable(16) %123) #7
  br i1 %124, label %128, label %127

125:                                              ; preds = %103
  br i1 %115, label %127, label %128

126:                                              ; preds = %102, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #7
  br label %158

127:                                              ; preds = %125, %121
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #7
  br label %129

128:                                              ; preds = %125, %121
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #7
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %81) #7
  br label %158

129:                                              ; preds = %71, %127
  %130 = load %class.TabStripModel*, %class.TabStripModel** %7, align 8
  %131 = getelementptr inbounds %"class.absl::optional.58", %"class.absl::optional.58"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %131, align 8
  %132 = call i64 @_ZNK13TabStripModel24GetNextExpandedActiveTabEiN4absl8optionalIN10tab_groups10TabGroupIdEEE(%class.TabStripModel* %130, i32 %1, %"class.absl::optional.58"* nonnull %6) #7
  %133 = trunc i64 %132 to i8
  %134 = lshr i64 %132, 32
  %135 = trunc i64 %134 to i32
  %136 = icmp eq i8 %133, 0
  br i1 %136, label %143, label %137

137:                                              ; preds = %129
  %138 = icmp sgt i32 %135, %1
  br i1 %138, label %139, label %158

139:                                              ; preds = %137
  %140 = icmp sgt i32 %135, 1
  %141 = select i1 %140, i32 %135, i32 1
  %142 = add nsw i32 %141, -1
  br label %158

143:                                              ; preds = %129
  %144 = load %class.TabStripModel*, %class.TabStripModel** %7, align 8
  %145 = getelementptr inbounds %class.TabStripModel, %class.TabStripModel* %144, i64 0, i32 1
  %146 = getelementptr inbounds %class.TabStripModel, %class.TabStripModel* %144, i64 0, i32 1, i32 0, i32 1
  %147 = bitcast %"class.std::__1::unique_ptr"** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.std::__1::vector"* %145 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = sub i64 %148, %150
  %152 = lshr exact i64 %151, 3
  %153 = trunc i64 %152 to i32
  %154 = add nsw i32 %153, -1
  %155 = icmp sle i32 %154, %1
  %156 = zext i1 %155 to i32
  %157 = sub i32 %1, %156
  br label %158

158:                                              ; preds = %143, %137, %139, %128, %126
  %159 = phi i32 [ %106, %128 ], [ %1, %126 ], [ %142, %139 ], [ %135, %137 ], [ %157, %143 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #7
  br label %160

160:                                              ; preds = %67, %65, %54, %52, %39, %37, %12, %2, %158
  %161 = phi i64 [ 1, %158 ], [ 0, %2 ], [ 0, %12 ], [ 1, %37 ], [ 1, %39 ], [ 1, %52 ], [ 1, %54 ], [ 1, %65 ], [ 1, %67 ]
  %162 = phi i32 [ %159, %158 ], [ undef, %2 ], [ undef, %12 ], [ %32, %37 ], [ %42, %39 ], [ %47, %52 ], [ %57, %54 ], [ %60, %65 ], [ %70, %67 ]
  %163 = zext i32 %162 to i64
  %164 = shl nuw i64 %163, 32
  %165 = or i64 %164, %161
  ret i64 %165
}

declare dereferenceable(32) %"class.ui::ListSelectionModel"* @_ZNK13TabStripModel15selection_modelEv(%class.TabStripModel*) local_unnamed_addr #1

declare %"class.content::WebContents"* @_ZN13TabStripModel24GetOpenerOfWebContentsAtEi(%class.TabStripModel*, i32) local_unnamed_addr #1

declare i32 @_ZNK13TabStripModel33GetIndexOfNextWebContentsOpenedByEPKN7content11WebContentsEi(%class.TabStripModel*, %"class.content::WebContents"*, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK13TabStripModel14IsTabCollapsedEi(%class.TabStripModel*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone ssp uwtable
define hidden i32 @_ZNK28TabStripModelOrderController13GetValidIndexEii(%class.TabStripModelOrderController* nocapture readnone, i32, i32) local_unnamed_addr #5 align 2 {
  %4 = icmp slt i32 %2, %1
  br i1 %4, label %5, label %9

5:                                                ; preds = %3
  %6 = icmp sgt i32 %1, 1
  %7 = select i1 %6, i32 %1, i32 1
  %8 = add nsw i32 %7, -1
  br label %9

9:                                                ; preds = %5, %3
  %10 = phi i32 [ %8, %5 ], [ %1, %3 ]
  ret i32 %10
}

declare i32 @_ZNK13TabStripModel21GetIndexOfWebContentsEPKN7content11WebContentsE(%class.TabStripModel*, %"class.content::WebContents"*) local_unnamed_addr #1

declare i64 @_ZNK13TabStripModel24GetNextExpandedActiveTabEiN4absl8optionalIN10tab_groups10TabGroupIdEEE(%class.TabStripModel*, i32, %"class.absl::optional.58"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN28TabStripModelOrderController22OnTabStripModelChangedEP13TabStripModelRK19TabStripModelChangeRK23TabStripSelectionChange(%class.TabStripModelOrderController* nocapture readonly, %class.TabStripModel* nocapture readonly, %class.TabStripModelChange* nocapture readnone dereferenceable(16), %struct.TabStripSelectionChange* nocapture readonly dereferenceable(88)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %struct.TabStripSelectionChange, %struct.TabStripSelectionChange* %3, i64 0, i32 0
  %6 = load %"class.content::WebContents"*, %"class.content::WebContents"** %5, align 8
  %7 = getelementptr inbounds %struct.TabStripSelectionChange, %struct.TabStripSelectionChange* %3, i64 0, i32 1
  %8 = load %"class.content::WebContents"*, %"class.content::WebContents"** %7, align 8
  %9 = icmp eq %"class.content::WebContents"* %6, %8
  br i1 %9, label %57, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %class.TabStripModel, %class.TabStripModel* %1, i64 0, i32 1, i32 0, i32 0
  %12 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %11, align 8
  %13 = getelementptr inbounds %class.TabStripModel, %class.TabStripModel* %1, i64 0, i32 1, i32 0, i32 1
  %14 = load %"class.std::__1::unique_ptr"*, %"class.std::__1::unique_ptr"** %13, align 8
  %15 = icmp eq %"class.std::__1::unique_ptr"* %12, %14
  br i1 %15, label %57, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %struct.TabStripSelectionChange, %struct.TabStripSelectionChange* %3, i64 0, i32 5
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq %"class.content::WebContents"* %6, null
  br i1 %19, label %32, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %class.TabStripModelOrderController, %class.TabStripModelOrderController* %0, i64 0, i32 1
  %22 = load %class.TabStripModel*, %class.TabStripModel** %21, align 8
  %23 = tail call i32 @_ZNK13TabStripModel21GetIndexOfWebContentsEPKN7content11WebContentsE(%class.TabStripModel* %22, %"class.content::WebContents"* nonnull %6) #7
  %24 = icmp eq i32 %23, -1
  br i1 %24, label %32, label %25

25:                                               ; preds = %20
  %26 = load %class.TabStripModel*, %class.TabStripModel** %21, align 8
  %27 = tail call %"class.content::WebContents"* @_ZN13TabStripModel24GetOpenerOfWebContentsAtEi(%class.TabStripModel* %26, i32 %23) #7
  %28 = load %class.TabStripModel*, %class.TabStripModel** %21, align 8
  %29 = tail call zeroext i1 @_ZNK13TabStripModel34ShouldResetOpenerOnActiveTabChangeEPN7content11WebContentsE(%class.TabStripModel* %28, %"class.content::WebContents"* nonnull %6) #7
  br i1 %29, label %30, label %32

30:                                               ; preds = %25
  %31 = load %class.TabStripModel*, %class.TabStripModel** %21, align 8
  tail call void @_ZN13TabStripModel12ForgetOpenerEPN7content11WebContentsE(%class.TabStripModel* %31, %"class.content::WebContents"* nonnull %6) #7
  br label %32

32:                                               ; preds = %30, %25, %20, %16
  %33 = phi %"class.content::WebContents"* [ null, %16 ], [ %27, %30 ], [ %27, %25 ], [ null, %20 ]
  %34 = getelementptr inbounds %class.TabStripModelOrderController, %class.TabStripModelOrderController* %0, i64 0, i32 1
  %35 = load %class.TabStripModel*, %class.TabStripModel** %34, align 8
  %36 = getelementptr inbounds %struct.TabStripSelectionChange, %struct.TabStripSelectionChange* %3, i64 0, i32 3, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = tail call %"class.content::WebContents"* @_ZN13TabStripModel24GetOpenerOfWebContentsAtEi(%class.TabStripModel* %35, i32 %37) #7
  %39 = and i32 %18, 2
  %40 = icmp eq i32 %39, 0
  %41 = icmp eq %"class.content::WebContents"* %38, %33
  %42 = or i1 %40, %41
  br i1 %42, label %57, label %43

43:                                               ; preds = %32
  %44 = icmp eq %"class.content::WebContents"* %38, null
  %45 = and i1 %19, %44
  %46 = xor i1 %45, true
  %47 = icmp eq %"class.content::WebContents"* %38, %6
  %48 = and i1 %47, %46
  br i1 %48, label %57, label %49

49:                                               ; preds = %43
  %50 = icmp ne %"class.content::WebContents"* %8, null
  %51 = icmp ne %"class.content::WebContents"* %33, null
  %52 = or i1 %50, %51
  %53 = icmp eq %"class.content::WebContents"* %33, %8
  %54 = and i1 %53, %52
  br i1 %54, label %57, label %55

55:                                               ; preds = %49
  %56 = load %class.TabStripModel*, %class.TabStripModel** %34, align 8
  tail call void @_ZN13TabStripModel16ForgetAllOpenersEv(%class.TabStripModel* %56) #7
  br label %57

57:                                               ; preds = %4, %55, %32, %43, %49, %10
  ret void
}

declare zeroext i1 @_ZNK13TabStripModel34ShouldResetOpenerOnActiveTabChangeEPN7content11WebContentsE(%class.TabStripModel*, %"class.content::WebContents"*) local_unnamed_addr #1

declare void @_ZN13TabStripModel12ForgetOpenerEPN7content11WebContentsE(%class.TabStripModel*, %"class.content::WebContents"*) local_unnamed_addr #1

declare void @_ZN13TabStripModel16ForgetAllOpenersEv(%class.TabStripModel*) local_unnamed_addr #1

declare void @_ZN21TabStripModelObserver17OnTabGroupChangedERK14TabGroupChange(%class.TabStripModelObserver*, %struct.TabGroupChange* dereferenceable(32)) unnamed_addr #1

declare void @_ZN21TabStripModelObserver12TabChangedAtEPN7content11WebContentsEi13TabChangeType(%class.TabStripModelObserver*, %"class.content::WebContents"*, i32, i32) unnamed_addr #1

declare void @_ZN21TabStripModelObserver21TabPinnedStateChangedEP13TabStripModelPN7content11WebContentsEi(%class.TabStripModelObserver*, %class.TabStripModel*, %"class.content::WebContents"*, i32) unnamed_addr #1

declare void @_ZN21TabStripModelObserver22TabBlockedStateChangedEPN7content11WebContentsEi(%class.TabStripModelObserver*, %"class.content::WebContents"*, i32) unnamed_addr #1

declare void @_ZN21TabStripModelObserver22TabGroupedStateChangedEN4absl8optionalIN10tab_groups10TabGroupIdEEEPN7content11WebContentsEi(%class.TabStripModelObserver*, %"class.absl::optional.58"*, %"class.content::WebContents"*, i32) unnamed_addr #1

declare void @_ZN21TabStripModelObserver13TabStripEmptyEv(%class.TabStripModelObserver*) unnamed_addr #1

declare void @_ZN21TabStripModelObserver16WillCloseAllTabsEP13TabStripModel(%class.TabStripModelObserver*, %class.TabStripModel*) unnamed_addr #1

declare void @_ZN21TabStripModelObserver19CloseAllTabsStoppedEP13TabStripModelNS_21CloseAllStoppedReasonE(%class.TabStripModelObserver*, %class.TabStripModel*, i32) unnamed_addr #1

declare void @_ZN21TabStripModelObserver22SetTabNeedsAttentionAtEib(%class.TabStripModelObserver*, i32, i1 zeroext) unnamed_addr #1

declare void @_ZN21TabStripModelObserver24OnTabStripModelDestroyedEP13TabStripModel(%class.TabStripModelObserver*, %class.TabStripModel*) unnamed_addr #1

declare zeroext i1 @_ZNK10tab_groups10TabGroupIdeqERKS0_(%"class.tab_groups::TabGroupId"*, %"class.tab_groups::TabGroupId"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
