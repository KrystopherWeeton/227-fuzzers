; ModuleID = '../../v8/src/heap/memory-allocator.cc'
source_filename = "../../v8/src/heap/memory-allocator.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.527", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.1123"], %"class.std::__1::unique_ptr.297" }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.180", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.310", %"class.std::__1::unique_ptr.316", %"class.std::__1::unique_ptr.322", %"class.std::__1::unique_ptr.328", %"class.std::__1::unique_ptr.371", %"class.std::__1::unique_ptr.401", %"class.std::__1::unique_ptr.407", %"class.std::__1::unique_ptr.417", %"class.std::__1::unique_ptr.423", %"class.std::__1::unique_ptr.423", %"class.std::__1::unique_ptr.429", %"class.std::__1::unique_ptr.435", %"class.std::__1::unique_ptr.435", %"class.std::__1::unique_ptr.441", %"class.std::__1::unique_ptr.447", %"class.std::__1::shared_ptr.453", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.476", %"class.std::__1::unique_ptr.502", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.508", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.521", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.527", i8, [7 x i8], %"class.std::__1::unordered_map.549", %"class.std::__1::unordered_map.575", %"class.std::__1::unordered_map.549", %"class.std::__1::unordered_map.599", %"class.std::__1::vector.627", i8, %"class.std::__1::unique_ptr.634", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1045", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1049", %"class.std::__1::unique_ptr.1055", %"class.std::__1::unique_ptr.447", %"class.std::__1::vector.1061", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1045" = type { %"struct.std::__1::__atomic_base.1046" }
%"struct.std::__1::__atomic_base.1046" = type { %"struct.std::__1::__cxx_atomic_impl.1047" }
%"struct.std::__1::__cxx_atomic_impl.1047" = type { %"struct.std::__1::__cxx_atomic_base_impl.1048" }
%"struct.std::__1::__cxx_atomic_base_impl.1048" = type { i32 }
%"class.std::__1::unique_ptr.1049" = type { %"class.std::__1::__compressed_pair.1050" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.803" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.739", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.733", %"class.std::__1::unique_ptr.454" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.v8::internal::VirtualMemory"* }
%"class.std::__1::unique_ptr.454" = type { %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.457", %"class.std::__1::set.465" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.457" = type { %"class.std::__1::__tree.458" }
%"class.std::__1::__tree.458" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.459", %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.459" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.465" = type { %"class.std::__1::__tree.466" }
%"class.std::__1::__tree.466" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.459", %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.739" = type { %"class.std::__1::__compressed_pair.740" }
%"class.std::__1::__compressed_pair.740" = type { %"struct.std::__1::__compressed_pair_elem.741" }
%"struct.std::__1::__compressed_pair_elem.741" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.std::__1::vector.803" = type { %"class.std::__1::__vector_base.804" }
%"class.std::__1::__vector_base.804" = type { i64**, i64**, %"class.std::__1::__compressed_pair.805" }
%"class.std::__1::__compressed_pair.805" = type { %"struct.std::__1::__compressed_pair_elem.806" }
%"struct.std::__1::__compressed_pair_elem.806" = type { i64** }
%"class.std::__1::unique_ptr.1055" = type { %"class.std::__1::__compressed_pair.1056" }
%"class.std::__1::__compressed_pair.1056" = type { %"struct.std::__1::__compressed_pair_elem.1057" }
%"struct.std::__1::__compressed_pair_elem.1057" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.803", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1061" = type { %"class.std::__1::__vector_base.1062" }
%"class.std::__1::__vector_base.1062" = type { %"struct.std::__1::pair.1063"*, %"struct.std::__1::pair.1063"*, %"class.std::__1::__compressed_pair.1064" }
%"struct.std::__1::pair.1063" = type opaque
%"class.std::__1::__compressed_pair.1064" = type { %"struct.std::__1::__compressed_pair_elem.1065" }
%"struct.std::__1::__compressed_pair_elem.1065" = type { %"struct.std::__1::pair.1063"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::GCTracer::Event", %"class.v8::internal::GCTracer::Event", i64, double, double, double, double, double, [10 x %"struct.v8::internal::GCTracer::IncrementalMarkingInfos"], double, i64, i64, i64, double, i64, i64, i64, double, i32, double, double, double, double, %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer.176", %"class.v8::base::Mutex", [124 x %"struct.v8::internal::GCTracer::BackgroundCounter"] }
%"class.v8::internal::GCTracer::Event" = type { i32, i32, i8*, double, double, i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, double, [124 x double], [10 x %"struct.v8::internal::GCTracer::IncrementalMarkingInfos"] }
%"struct.v8::internal::GCTracer::IncrementalMarkingInfos" = type <{ double, double, i32, [4 x i8] }>
%"class.v8::base::RingBuffer" = type { [10 x %"struct.std::__1::pair.175"], i32, i32 }
%"struct.std::__1::pair.175" = type { i64, double }
%"class.v8::base::RingBuffer.176" = type { [10 x double], i32, i32 }
%"struct.v8::internal::GCTracer::BackgroundCounter" = type { double }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.228", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.282", %"class.std::__1::vector.282", %"class.std::__1::vector.282", %"class.std::__1::vector.289", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.183", %"class.std::__1::vector.184", %"class.std::__1::vector.191", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.183" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.184" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.186" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.191" = type { %"class.std::__1::__vector_base.192" }
%"class.std::__1::__vector_base.192" = type { %"class.std::__1::unique_ptr.193"*, %"class.std::__1::unique_ptr.193"*, %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::unique_ptr.193" = type opaque
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.std::__1::unique_ptr.193"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211", %"class.v8::internal::Worklist.213" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.213" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.215", i8, i64 }
%"class.std::__1::vector.215" = type { %"class.std::__1::__vector_base.216" }
%"class.std::__1::__vector_base.216" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.231" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.183"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.231" = type { %"class.std::__1::__hash_table.232" }
%"class.std::__1::__hash_table.232" = type <{ %"class.std::__1::unique_ptr.233", %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.248", %"class.std::__1::__compressed_pair.251", [4 x i8] }>
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235", %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"struct.std::__1::__hash_node_base.236"** }
%"struct.std::__1::__hash_node_base.236" = type { %"struct.std::__1::__hash_node_base.236"* }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.std::__1::__bucket_list_deallocator.238" }
%"class.std::__1::__bucket_list_deallocator.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::__hash_node_base.236" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.258" }
%"class.std::__1::unordered_map.258" = type { %"class.std::__1::__hash_table.259" }
%"class.std::__1::__hash_table.259" = type <{ %"class.std::__1::unique_ptr.260", %"class.std::__1::__compressed_pair.270", %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.278", [4 x i8] }>
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262", %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.263"** }
%"struct.std::__1::__hash_node_base.263" = type { %"struct.std::__1::__hash_node_base.263"* }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.std::__1::__bucket_list_deallocator.265" }
%"class.std::__1::__bucket_list_deallocator.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::__hash_node_base.263" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.282" = type { %"class.std::__1::__vector_base.283" }
%"class.std::__1::__vector_base.283" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.289" = type { %"class.std::__1::__vector_base.290" }
%"class.std::__1::__vector_base.290" = type { %"struct.std::__1::pair.291"*, %"struct.std::__1::pair.291"*, %"class.std::__1::__compressed_pair.292" }
%"struct.std::__1::pair.291" = type opaque
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"struct.std::__1::pair.291"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.297", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.282"], [3 x %"class.std::__1::vector.282"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.282", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.307"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.282", %"class.std::__1::vector.282", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.307" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.310" = type { %"class.std::__1::__compressed_pair.311" }
%"class.std::__1::__compressed_pair.311" = type { %"struct.std::__1::__compressed_pair_elem.312" }
%"struct.std::__1::__compressed_pair_elem.312" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.316" = type { %"class.std::__1::__compressed_pair.317" }
%"class.std::__1::__compressed_pair.317" = type { %"struct.std::__1::__compressed_pair_elem.318" }
%"struct.std::__1::__compressed_pair_elem.318" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.322" = type { %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.324" }
%"struct.std::__1::__compressed_pair_elem.324" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.std::__1::unique_ptr.328" = type { %"class.std::__1::__compressed_pair.329" }
%"class.std::__1::__compressed_pair.329" = type { %"struct.std::__1::__compressed_pair_elem.330" }
%"struct.std::__1::__compressed_pair_elem.330" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.331", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.335", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.340" }
%"struct.std::__1::atomic.331" = type { %"struct.std::__1::__atomic_base.332" }
%"struct.std::__1::__atomic_base.332" = type { %"struct.std::__1::__cxx_atomic_impl.333" }
%"struct.std::__1::__cxx_atomic_impl.333" = type { %"struct.std::__1::__cxx_atomic_base_impl.334" }
%"struct.std::__1::__cxx_atomic_base_impl.334" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.335" = type { %"struct.std::__1::__atomic_base.336" }
%"struct.std::__1::__atomic_base.336" = type { %"struct.std::__1::__cxx_atomic_impl.337" }
%"struct.std::__1::__cxx_atomic_impl.337" = type { %"struct.std::__1::__cxx_atomic_base_impl.338" }
%"struct.std::__1::__cxx_atomic_base_impl.338" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.340" = type { %"class.std::__1::__hash_table.341" }
%"class.std::__1::__hash_table.341" = type <{ %"class.std::__1::unique_ptr.342", %"class.std::__1::__compressed_pair.352", %"class.std::__1::__compressed_pair.357", %"class.std::__1::__compressed_pair.362", [4 x i8] }>
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344", %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.std::__1::__hash_node_base.345"** }
%"struct.std::__1::__hash_node_base.345" = type { %"struct.std::__1::__hash_node_base.345"* }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.std::__1::__bucket_list_deallocator.347" }
%"class.std::__1::__bucket_list_deallocator.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"struct.std::__1::__hash_node_base.345" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.371" = type { %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.373" }
%"struct.std::__1::__compressed_pair_elem.373" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.297", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.374", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.374" = type { %"class.std::__1::__hash_table.375" }
%"class.std::__1::__hash_table.375" = type <{ %"class.std::__1::unique_ptr.376", %"class.std::__1::__compressed_pair.386", %"class.std::__1::__compressed_pair.391", %"class.std::__1::__compressed_pair.394", [4 x i8] }>
%"class.std::__1::unique_ptr.376" = type { %"class.std::__1::__compressed_pair.377" }
%"class.std::__1::__compressed_pair.377" = type { %"struct.std::__1::__compressed_pair_elem.378", %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.378" = type { %"struct.std::__1::__hash_node_base.379"** }
%"struct.std::__1::__hash_node_base.379" = type { %"struct.std::__1::__hash_node_base.379"* }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.std::__1::__bucket_list_deallocator.381" }
%"class.std::__1::__bucket_list_deallocator.381" = type { %"class.std::__1::__compressed_pair.382" }
%"class.std::__1::__compressed_pair.382" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"struct.std::__1::__hash_node_base.379" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.394" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.401" = type { %"class.std::__1::__compressed_pair.402" }
%"class.std::__1::__compressed_pair.402" = type { %"struct.std::__1::__compressed_pair_elem.403" }
%"struct.std::__1::__compressed_pair_elem.403" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.407" = type { %"class.std::__1::__compressed_pair.408" }
%"class.std::__1::__compressed_pair.408" = type { %"struct.std::__1::__compressed_pair_elem.409" }
%"struct.std::__1::__compressed_pair_elem.409" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.410" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.410" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.417" = type { %"class.std::__1::__compressed_pair.418" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.419" }
%"struct.std::__1::__compressed_pair_elem.419" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.429" = type { %"class.std::__1::__compressed_pair.430" }
%"class.std::__1::__compressed_pair.430" = type { %"struct.std::__1::__compressed_pair_elem.431" }
%"struct.std::__1::__compressed_pair_elem.431" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.435" = type { %"class.std::__1::__compressed_pair.436" }
%"class.std::__1::__compressed_pair.436" = type { %"struct.std::__1::__compressed_pair_elem.437" }
%"struct.std::__1::__compressed_pair_elem.437" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.441" = type { %"class.std::__1::__compressed_pair.442" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.443" }
%"struct.std::__1::__compressed_pair_elem.443" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.447" = type { %"class.std::__1::__compressed_pair.448" }
%"class.std::__1::__compressed_pair.448" = type { %"struct.std::__1::__compressed_pair_elem.449" }
%"struct.std::__1::__compressed_pair_elem.449" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.453" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.472", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.454", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.472" = type { %"struct.std::__1::__atomic_base.473" }
%"struct.std::__1::__atomic_base.473" = type { %"struct.std::__1::__cxx_atomic_impl.474" }
%"struct.std::__1::__cxx_atomic_impl.474" = type { %"struct.std::__1::__cxx_atomic_base_impl.475" }
%"struct.std::__1::__cxx_atomic_base_impl.475" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.476" = type { %"class.std::__1::__hash_table.477" }
%"class.std::__1::__hash_table.477" = type <{ %"class.std::__1::unique_ptr.478", %"class.std::__1::__compressed_pair.488", %"class.std::__1::__compressed_pair.493", %"class.std::__1::__compressed_pair.496", [4 x i8] }>
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480", %"struct.std::__1::__compressed_pair_elem.482" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"struct.std::__1::__hash_node_base.481"** }
%"struct.std::__1::__hash_node_base.481" = type { %"struct.std::__1::__hash_node_base.481"* }
%"struct.std::__1::__compressed_pair_elem.482" = type { %"class.std::__1::__bucket_list_deallocator.483" }
%"class.std::__1::__bucket_list_deallocator.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"struct.std::__1::__hash_node_base.481" }
%"class.std::__1::__compressed_pair.493" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.502" = type { %"class.std::__1::__compressed_pair.503" }
%"class.std::__1::__compressed_pair.503" = type { %"struct.std::__1::__compressed_pair_elem.504" }
%"struct.std::__1::__compressed_pair_elem.504" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.508" = type { %"class.std::__1::__compressed_pair.509" }
%"class.std::__1::__compressed_pair.509" = type { %"struct.std::__1::__compressed_pair_elem.510" }
%"struct.std::__1::__compressed_pair_elem.510" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.514", %"class.std::__1::vector.514" }
%"class.std::__1::vector.514" = type { %"class.std::__1::__vector_base.515" }
%"class.std::__1::__vector_base.515" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"class.v8::internal::Object"* }
%"class.std::__1::unique_ptr.521" = type { %"class.std::__1::__compressed_pair.522" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.std::__1::unordered_map.575" = type { %"class.std::__1::__hash_table.576" }
%"class.std::__1::__hash_table.576" = type <{ %"class.std::__1::unique_ptr.577", %"class.std::__1::__compressed_pair.587", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.595", [4 x i8] }>
%"class.std::__1::unique_ptr.577" = type { %"class.std::__1::__compressed_pair.578" }
%"class.std::__1::__compressed_pair.578" = type { %"struct.std::__1::__compressed_pair_elem.579", %"struct.std::__1::__compressed_pair_elem.581" }
%"struct.std::__1::__compressed_pair_elem.579" = type { %"struct.std::__1::__hash_node_base.580"** }
%"struct.std::__1::__hash_node_base.580" = type { %"struct.std::__1::__hash_node_base.580"* }
%"struct.std::__1::__compressed_pair_elem.581" = type { %"class.std::__1::__bucket_list_deallocator.582" }
%"class.std::__1::__bucket_list_deallocator.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.587" = type { %"struct.std::__1::__compressed_pair_elem.588" }
%"struct.std::__1::__compressed_pair_elem.588" = type { %"struct.std::__1::__hash_node_base.580" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.595" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.549" = type { %"class.std::__1::__hash_table.550" }
%"class.std::__1::__hash_table.550" = type <{ %"class.std::__1::unique_ptr.551", %"class.std::__1::__compressed_pair.561", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.569", [4 x i8] }>
%"class.std::__1::unique_ptr.551" = type { %"class.std::__1::__compressed_pair.552" }
%"class.std::__1::__compressed_pair.552" = type { %"struct.std::__1::__compressed_pair_elem.553", %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.553" = type { %"struct.std::__1::__hash_node_base.554"** }
%"struct.std::__1::__hash_node_base.554" = type { %"struct.std::__1::__hash_node_base.554"* }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.std::__1::__bucket_list_deallocator.556" }
%"class.std::__1::__bucket_list_deallocator.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"struct.std::__1::__hash_node_base.554" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.569" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.599" = type { %"class.std::__1::__hash_table.600" }
%"class.std::__1::__hash_table.600" = type <{ %"class.std::__1::unique_ptr.601", %"class.std::__1::__compressed_pair.611", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", [4 x i8] }>
%"class.std::__1::unique_ptr.601" = type { %"class.std::__1::__compressed_pair.602" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.603", %"struct.std::__1::__compressed_pair_elem.605" }
%"struct.std::__1::__compressed_pair_elem.603" = type { %"struct.std::__1::__hash_node_base.604"** }
%"struct.std::__1::__hash_node_base.604" = type { %"struct.std::__1::__hash_node_base.604"* }
%"struct.std::__1::__compressed_pair_elem.605" = type { %"class.std::__1::__bucket_list_deallocator.606" }
%"class.std::__1::__bucket_list_deallocator.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.611" = type { %"struct.std::__1::__compressed_pair_elem.612" }
%"struct.std::__1::__compressed_pair_elem.612" = type { %"struct.std::__1::__hash_node_base.604" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.627" = type { %"class.std::__1::__vector_base.628" }
%"class.std::__1::__vector_base.628" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.629" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.629" = type { %"struct.std::__1::__compressed_pair_elem.630" }
%"struct.std::__1::__compressed_pair_elem.630" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.634" = type { %"class.std::__1::__compressed_pair.635" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.std::__1::vector.1123" = type { %"class.std::__1::__vector_base.1124" }
%"class.std::__1::__vector_base.1124" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.1125" }
%"class.std::__1::__compressed_pair.1125" = type { %"struct.std::__1::__compressed_pair_elem.1126" }
%"struct.std::__1::__compressed_pair_elem.1126" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.std::__1::unordered_set.527" = type { %"class.std::__1::__hash_table.528" }
%"class.std::__1::__hash_table.528" = type <{ %"class.std::__1::unique_ptr.529", %"class.std::__1::__compressed_pair.539", %"class.std::__1::__compressed_pair.544", %"class.std::__1::__compressed_pair.546", [4 x i8] }>
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531", %"struct.std::__1::__compressed_pair_elem.533" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"struct.std::__1::__hash_node_base.532"** }
%"struct.std::__1::__hash_node_base.532" = type { %"struct.std::__1::__hash_node_base.532"* }
%"struct.std::__1::__compressed_pair_elem.533" = type { %"class.std::__1::__bucket_list_deallocator.534" }
%"class.std::__1::__bucket_list_deallocator.534" = type { %"class.std::__1::__compressed_pair.535" }
%"class.std::__1::__compressed_pair.535" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.539" = type { %"struct.std::__1::__compressed_pair_elem.540" }
%"struct.std::__1::__compressed_pair_elem.540" = type { %"struct.std::__1::__hash_node_base.532" }
%"class.std::__1::__compressed_pair.544" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.640", %"class.std::__1::unique_ptr.661", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.671", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.810", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.823", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.833", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.844", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.919", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.962"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.970", i32, i8, i8, i32, i32, %"class.std::__1::vector.976", %"class.std::__1::vector.976", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.983", i64, %"class.std::__1::unordered_map.984", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.514", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1040", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1078", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1112", %"class.std::__1::vector.1116", %"class.std::__1::vector.1116", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.514" }
%"class.std::__1::shared_ptr.640" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.641", %"class.std::__1::unique_ptr.655" }
%"class.std::__1::unique_ptr.641" = type { %"class.std::__1::__compressed_pair.642" }
%"class.std::__1::__compressed_pair.642" = type { %"struct.std::__1::__compressed_pair_elem.643" }
%"struct.std::__1::__compressed_pair_elem.643" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.644" }
%"class.std::__1::vector.644" = type { %"class.std::__1::__vector_base.645" }
%"class.std::__1::__vector_base.645" = type { %"class.std::__1::unique_ptr.646"*, %"class.std::__1::unique_ptr.646"*, %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.1130" }
%"class.std::__1::__compressed_pair.1130" = type { %"struct.std::__1::__compressed_pair_elem.1131" }
%"struct.std::__1::__compressed_pair_elem.1131" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.std::__1::unique_ptr.646"* }
%"class.std::__1::unique_ptr.655" = type { %"class.std::__1::__compressed_pair.656" }
%"class.std::__1::__compressed_pair.656" = type { %"struct.std::__1::__compressed_pair_elem.657" }
%"struct.std::__1::__compressed_pair_elem.657" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.661" = type { %"class.std::__1::__compressed_pair.662" }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.664", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.664" = type { %"struct.std::__1::__atomic_base.665" }
%"struct.std::__1::__atomic_base.665" = type { %"struct.std::__1::__cxx_atomic_impl.666" }
%"struct.std::__1::__cxx_atomic_impl.666" = type { %"struct.std::__1::__cxx_atomic_base_impl.667" }
%"struct.std::__1::__cxx_atomic_base_impl.667" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.671" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.672", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.672" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.673", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.673" = type { %"class.std::__1::__vector_base.674" }
%"class.std::__1::__vector_base.674" = type { %"class.std::__1::unique_ptr.675"*, %"class.std::__1::unique_ptr.675"*, %"class.std::__1::__compressed_pair.676" }
%"class.std::__1::unique_ptr.675" = type opaque
%"class.std::__1::__compressed_pair.676" = type { %"struct.std::__1::__compressed_pair_elem.677" }
%"struct.std::__1::__compressed_pair_elem.677" = type { %"class.std::__1::unique_ptr.675"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.681", %"class.std::__1::unique_ptr.687", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.693", %"class.std::__1::unique_ptr.699", %"class.std::__1::unique_ptr.705", %"class.std::__1::unique_ptr.711", %"class.std::__1::unique_ptr.717", %"class.std::__1::set.723", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.681" = type { %"class.std::__1::__compressed_pair.682" }
%"class.std::__1::__compressed_pair.682" = type { %"struct.std::__1::__compressed_pair_elem.683" }
%"struct.std::__1::__compressed_pair_elem.683" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.687" = type { %"class.std::__1::__compressed_pair.688" }
%"class.std::__1::__compressed_pair.688" = type { %"struct.std::__1::__compressed_pair_elem.689" }
%"struct.std::__1::__compressed_pair_elem.689" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.693" = type { %"class.std::__1::__compressed_pair.694" }
%"class.std::__1::__compressed_pair.694" = type { %"struct.std::__1::__compressed_pair_elem.695" }
%"struct.std::__1::__compressed_pair_elem.695" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.699" = type { %"class.std::__1::__compressed_pair.700" }
%"class.std::__1::__compressed_pair.700" = type { %"struct.std::__1::__compressed_pair_elem.701" }
%"struct.std::__1::__compressed_pair_elem.701" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.723" = type { %"class.std::__1::__tree.724" }
%"class.std::__1::__tree.724" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.725", %"class.std::__1::__compressed_pair.729" }
%"class.std::__1::__compressed_pair.725" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.729" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.732" }
%"class.v8::internal::TaggedImpl.732" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.731" }
%"class.v8::internal::TaggedImpl.731" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.745", %"class.v8::internal::DetachableVector.746", %"class.v8::internal::DetachableVector.745", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.746" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.745" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.747", %"class.std::__1::vector.753", %"class.std::__1::unique_ptr.760", %"class.std::__1::vector.767", %"class.std::__1::unique_ptr.774", i64, %"class.std::__1::vector.780", %"class.std::__1::vector.788", %"class.std::__1::vector.796", i8, i8, i32 }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.753" = type { %"class.std::__1::__vector_base.754" }
%"class.std::__1::__vector_base.754" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.755" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.755" = type { %"struct.std::__1::__compressed_pair_elem.756" }
%"struct.std::__1::__compressed_pair_elem.756" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.760" = type { %"class.std::__1::__compressed_pair.761" }
%"class.std::__1::__compressed_pair.761" = type { %"struct.std::__1::__compressed_pair_elem.762" }
%"struct.std::__1::__compressed_pair_elem.762" = type { %"class.v8::internal::GlobalHandles::NodeSpace.763"* }
%"class.v8::internal::GlobalHandles::NodeSpace.763" = type opaque
%"class.std::__1::vector.767" = type { %"class.std::__1::__vector_base.768" }
%"class.std::__1::__vector_base.768" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.769" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.769" = type { %"struct.std::__1::__compressed_pair_elem.770" }
%"struct.std::__1::__compressed_pair_elem.770" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.774" = type { %"class.std::__1::__compressed_pair.775" }
%"class.std::__1::__compressed_pair.775" = type { %"struct.std::__1::__compressed_pair_elem.776" }
%"struct.std::__1::__compressed_pair_elem.776" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.780" = type { %"class.std::__1::__vector_base.781" }
%"class.std::__1::__vector_base.781" = type { %"struct.std::__1::pair.782"*, %"struct.std::__1::pair.782"*, %"class.std::__1::__compressed_pair.783" }
%"struct.std::__1::pair.782" = type opaque
%"class.std::__1::__compressed_pair.783" = type { %"struct.std::__1::__compressed_pair_elem.784" }
%"struct.std::__1::__compressed_pair_elem.784" = type { %"struct.std::__1::pair.782"* }
%"class.std::__1::vector.788" = type { %"class.std::__1::__vector_base.789" }
%"class.std::__1::__vector_base.789" = type { %"struct.std::__1::pair.790"*, %"struct.std::__1::pair.790"*, %"class.std::__1::__compressed_pair.791" }
%"struct.std::__1::pair.790" = type opaque
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"struct.std::__1::pair.790"* }
%"class.std::__1::vector.796" = type { %"class.std::__1::__vector_base.797" }
%"class.std::__1::__vector_base.797" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.798" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.798" = type { %"struct.std::__1::__compressed_pair_elem.799" }
%"struct.std::__1::__compressed_pair_elem.799" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.803", %"class.std::__1::vector.810" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.817" }
%"class.std::__1::unique_ptr.817" = type { %"class.std::__1::__compressed_pair.818" }
%"class.std::__1::__compressed_pair.818" = type { %"struct.std::__1::__compressed_pair_elem.819" }
%"struct.std::__1::__compressed_pair_elem.819" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.810" = type { %"class.std::__1::__vector_base.811" }
%"class.std::__1::__vector_base.811" = type { i32*, i32*, %"class.std::__1::__compressed_pair.812" }
%"class.std::__1::__compressed_pair.812" = type { %"struct.std::__1::__compressed_pair_elem.813" }
%"struct.std::__1::__compressed_pair_elem.813" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.823" = type { %"struct.std::__1::__atomic_base.824" }
%"struct.std::__1::__atomic_base.824" = type { %"struct.std::__1::__cxx_atomic_impl.825" }
%"struct.std::__1::__cxx_atomic_impl.825" = type { %"struct.std::__1::__cxx_atomic_base_impl.826" }
%"struct.std::__1::__cxx_atomic_base_impl.826" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.833" = type { %"struct.std::__1::__atomic_base.834" }
%"struct.std::__1::__atomic_base.834" = type { %"struct.std::__1::__cxx_atomic_impl.835" }
%"struct.std::__1::__cxx_atomic_impl.835" = type { %"struct.std::__1::__cxx_atomic_base_impl.836" }
%"struct.std::__1::__cxx_atomic_base_impl.836" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.838" }
%"class.std::__1::__compressed_pair.838" = type { %"struct.std::__1::__compressed_pair_elem.839" }
%"struct.std::__1::__compressed_pair_elem.839" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.840 }
%union.anon.840 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.844" = type { %"class.std::__1::__hash_table.845" }
%"class.std::__1::__hash_table.845" = type <{ %"class.std::__1::unique_ptr.846", %"class.std::__1::__compressed_pair.856", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.864", [4 x i8] }>
%"class.std::__1::unique_ptr.846" = type { %"class.std::__1::__compressed_pair.847" }
%"class.std::__1::__compressed_pair.847" = type { %"struct.std::__1::__compressed_pair_elem.848", %"struct.std::__1::__compressed_pair_elem.850" }
%"struct.std::__1::__compressed_pair_elem.848" = type { %"struct.std::__1::__hash_node_base.849"** }
%"struct.std::__1::__hash_node_base.849" = type { %"struct.std::__1::__hash_node_base.849"* }
%"struct.std::__1::__compressed_pair_elem.850" = type { %"class.std::__1::__bucket_list_deallocator.851" }
%"class.std::__1::__bucket_list_deallocator.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.856" = type { %"struct.std::__1::__compressed_pair_elem.857" }
%"struct.std::__1::__compressed_pair_elem.857" = type { %"struct.std::__1::__hash_node_base.849" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.864" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.870", %"class.v8::internal::Handle.876", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.877", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.870" = type { %"class.std::__1::__compressed_pair.871" }
%"class.std::__1::__compressed_pair.871" = type { %"struct.std::__1::__compressed_pair_elem.872" }
%"struct.std::__1::__compressed_pair_elem.872" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.876" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.877" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.878", %"class.std::__1::vector.884", %"class.std::__1::unique_ptr.892", %"class.std::__1::unique_ptr.898", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.904", %"class.std::__1::vector.910", %"struct.std::__1::pair.918" }
%"class.std::__1::unique_ptr.878" = type { %"class.std::__1::__compressed_pair.879" }
%"class.std::__1::__compressed_pair.879" = type { %"struct.std::__1::__compressed_pair_elem.880" }
%"struct.std::__1::__compressed_pair_elem.880" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.884" = type { %"class.std::__1::__vector_base.885" }
%"class.std::__1::__vector_base.885" = type { %"class.std::__1::unique_ptr.886"*, %"class.std::__1::unique_ptr.886"*, %"class.std::__1::__compressed_pair.887" }
%"class.std::__1::unique_ptr.886" = type opaque
%"class.std::__1::__compressed_pair.887" = type { %"struct.std::__1::__compressed_pair_elem.888" }
%"struct.std::__1::__compressed_pair_elem.888" = type { %"class.std::__1::unique_ptr.886"* }
%"class.std::__1::unique_ptr.892" = type { %"class.std::__1::__compressed_pair.893" }
%"class.std::__1::__compressed_pair.893" = type { %"struct.std::__1::__compressed_pair_elem.894" }
%"struct.std::__1::__compressed_pair_elem.894" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.898" = type { %"class.std::__1::__compressed_pair.899" }
%"class.std::__1::__compressed_pair.899" = type { %"struct.std::__1::__compressed_pair_elem.900" }
%"struct.std::__1::__compressed_pair_elem.900" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.904" = type { %"class.std::__1::__compressed_pair.905" }
%"class.std::__1::__compressed_pair.905" = type { %"struct.std::__1::__compressed_pair_elem.906" }
%"struct.std::__1::__compressed_pair_elem.906" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.910" = type { %"class.std::__1::__vector_base.911" }
%"class.std::__1::__vector_base.911" = type { %"struct.std::__1::pair.912"*, %"struct.std::__1::pair.912"*, %"class.std::__1::__compressed_pair.913" }
%"struct.std::__1::pair.912" = type opaque
%"class.std::__1::__compressed_pair.913" = type { %"struct.std::__1::__compressed_pair_elem.914" }
%"struct.std::__1::__compressed_pair_elem.914" = type { %"struct.std::__1::pair.912"* }
%"struct.std::__1::pair.918" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.919" = type { %"class.std::__1::__compressed_pair.920" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.922", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.922" = type { %"class.std::__1::__hash_table.923" }
%"class.std::__1::__hash_table.923" = type <{ %"class.std::__1::unique_ptr.924", %"class.std::__1::__compressed_pair.934", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.943", [4 x i8] }>
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926", %"struct.std::__1::__compressed_pair_elem.928" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"struct.std::__1::__hash_node_base.927"** }
%"struct.std::__1::__hash_node_base.927" = type { %"struct.std::__1::__hash_node_base.927"* }
%"struct.std::__1::__compressed_pair_elem.928" = type { %"class.std::__1::__bucket_list_deallocator.929" }
%"class.std::__1::__bucket_list_deallocator.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.934" = type { %"struct.std::__1::__compressed_pair_elem.935" }
%"struct.std::__1::__compressed_pair_elem.935" = type { %"struct.std::__1::__hash_node_base.927" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.943" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.957" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.951"**, %"struct.std::__1::pair.951"**, %"struct.std::__1::pair.951"**, %"class.std::__1::__compressed_pair.952" }
%"struct.std::__1::pair.951" = type opaque
%"class.std::__1::__compressed_pair.952" = type { %"struct.std::__1::__compressed_pair_elem.953" }
%"struct.std::__1::__compressed_pair_elem.953" = type { %"struct.std::__1::pair.951"** }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.962" = type { %"class.std::__1::__vector_base.963" }
%"class.std::__1::__vector_base.963" = type { %"class.v8::internal::Handle.964"*, %"class.v8::internal::Handle.964"*, %"class.std::__1::__compressed_pair.965" }
%"class.v8::internal::Handle.964" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.965" = type { %"struct.std::__1::__compressed_pair_elem.966" }
%"struct.std::__1::__compressed_pair_elem.966" = type { %"class.v8::internal::Handle.964"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.828", i32, %"class.v8::Local.0" }
%"class.v8::Local.828" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.970" = type { %"class.std::__1::__compressed_pair.971" }
%"class.std::__1::__compressed_pair.971" = type { %"struct.std::__1::__compressed_pair_elem.972" }
%"struct.std::__1::__compressed_pair_elem.972" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.976" = type { %"class.std::__1::__vector_base.977" }
%"class.std::__1::__vector_base.977" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.978" }
%"class.std::__1::__compressed_pair.978" = type { %"struct.std::__1::__compressed_pair_elem.979" }
%"struct.std::__1::__compressed_pair_elem.979" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.983" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.984" = type { %"class.std::__1::__hash_table.985" }
%"class.std::__1::__hash_table.985" = type <{ %"class.std::__1::unique_ptr.986", %"class.std::__1::__compressed_pair.996", %"class.std::__1::__compressed_pair.1001", %"class.std::__1::__compressed_pair.1004", [4 x i8] }>
%"class.std::__1::unique_ptr.986" = type { %"class.std::__1::__compressed_pair.987" }
%"class.std::__1::__compressed_pair.987" = type { %"struct.std::__1::__compressed_pair_elem.988", %"struct.std::__1::__compressed_pair_elem.990" }
%"struct.std::__1::__compressed_pair_elem.988" = type { %"struct.std::__1::__hash_node_base.989"** }
%"struct.std::__1::__hash_node_base.989" = type { %"struct.std::__1::__hash_node_base.989"* }
%"struct.std::__1::__compressed_pair_elem.990" = type { %"class.std::__1::__bucket_list_deallocator.991" }
%"class.std::__1::__bucket_list_deallocator.991" = type { %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.996" = type { %"struct.std::__1::__compressed_pair_elem.997" }
%"struct.std::__1::__compressed_pair_elem.997" = type { %"struct.std::__1::__hash_node_base.989" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1004" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1008", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1037", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1038", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1008" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1033, %union.anon.1035, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1033 = type { i64 }
%union.anon.1035 = type { i64 }
%"class.std::__1::weak_ptr.1037" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1038" = type { %"class.v8::PersistentBase.1039" }
%"class.v8::PersistentBase.1039" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1009", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1009" = type { %"class.std::__1::__hash_table.1010" }
%"class.std::__1::__hash_table.1010" = type <{ %"class.std::__1::unique_ptr.1011", %"class.std::__1::__compressed_pair.1021", %"class.std::__1::__compressed_pair.1026", %"class.std::__1::__compressed_pair.1029", [4 x i8] }>
%"class.std::__1::unique_ptr.1011" = type { %"class.std::__1::__compressed_pair.1012" }
%"class.std::__1::__compressed_pair.1012" = type { %"struct.std::__1::__compressed_pair_elem.1013", %"struct.std::__1::__compressed_pair_elem.1015" }
%"struct.std::__1::__compressed_pair_elem.1013" = type { %"struct.std::__1::__hash_node_base.1014"** }
%"struct.std::__1::__hash_node_base.1014" = type { %"struct.std::__1::__hash_node_base.1014"* }
%"struct.std::__1::__compressed_pair_elem.1015" = type { %"class.std::__1::__bucket_list_deallocator.1016" }
%"class.std::__1::__bucket_list_deallocator.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.1022" }
%"struct.std::__1::__compressed_pair_elem.1022" = type { %"struct.std::__1::__hash_node_base.1014" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1029" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1040" = type { %"class.std::__1::__compressed_pair.1041" }
%"class.std::__1::__compressed_pair.1041" = type { %"struct.std::__1::__compressed_pair_elem.1042" }
%"struct.std::__1::__compressed_pair_elem.1042" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1069", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1069" = type { %"class.std::__1::__compressed_pair.1070" }
%"class.std::__1::__compressed_pair.1070" = type { %"struct.std::__1::__compressed_pair_elem.1071" }
%"struct.std::__1::__compressed_pair_elem.1071" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1078" = type { %"class.std::__1::__compressed_pair.1079" }
%"class.std::__1::__compressed_pair.1079" = type { %"struct.std::__1::__compressed_pair_elem.1080" }
%"struct.std::__1::__compressed_pair_elem.1080" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.829", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.829" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1086" }
%"class.std::__1::unordered_map.1086" = type { %"class.std::__1::__hash_table.1087" }
%"class.std::__1::__hash_table.1087" = type <{ %"class.std::__1::unique_ptr.1088", %"class.std::__1::__compressed_pair.1098", %"class.std::__1::__compressed_pair.1103", %"class.std::__1::__compressed_pair.1106", [4 x i8] }>
%"class.std::__1::unique_ptr.1088" = type { %"class.std::__1::__compressed_pair.1089" }
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.1090", %"struct.std::__1::__compressed_pair_elem.1092" }
%"struct.std::__1::__compressed_pair_elem.1090" = type { %"struct.std::__1::__hash_node_base.1091"** }
%"struct.std::__1::__hash_node_base.1091" = type { %"struct.std::__1::__hash_node_base.1091"* }
%"struct.std::__1::__compressed_pair_elem.1092" = type { %"class.std::__1::__bucket_list_deallocator.1093" }
%"class.std::__1::__bucket_list_deallocator.1093" = type { %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1098" = type { %"struct.std::__1::__compressed_pair_elem.1099" }
%"struct.std::__1::__compressed_pair_elem.1099" = type { %"struct.std::__1::__hash_node_base.1091" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1106" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.1112" = type { %"struct.std::__1::__atomic_base.1113" }
%"struct.std::__1::__atomic_base.1113" = type { %"struct.std::__1::__cxx_atomic_impl.1114" }
%"struct.std::__1::__cxx_atomic_impl.1114" = type { %"struct.std::__1::__cxx_atomic_base_impl.1115" }
%"struct.std::__1::__cxx_atomic_base_impl.1115" = type { %"class.std::__1::vector.1116"* }
%"class.std::__1::vector.1116" = type { %"class.std::__1::__vector_base.1117" }
%"class.std::__1::__vector_base.1117" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1118" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1118" = type { %"struct.std::__1::__compressed_pair_elem.1119" }
%"struct.std::__1::__compressed_pair_elem.1119" = type { %"struct.v8::MemoryRange"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::JobDelegate" = type { i32 (...)** }
%"class.v8::Platform" = type { i32 (...)** }
%"class.v8::JobTask" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1154" = type { %"class.std::__1::__compressed_pair.1155" }
%"class.std::__1::__compressed_pair.1155" = type { %"struct.std::__1::__compressed_pair_elem.1156", %"struct.std::__1::__compressed_pair_elem.1157" }
%"struct.std::__1::__compressed_pair_elem.1156" = type { %"struct.std::__1::__hash_node"* }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.532", i64, %"class.v8::internal::MemoryChunk"* }
%"struct.std::__1::__compressed_pair_elem.1157" = type { %"class.std::__1::__hash_node_destructor" }
%"class.std::__1::__hash_node_destructor" = type <{ %"class.std::__1::allocator.542"*, i8, [7 x i8] }>
%"class.std::__1::allocator.542" = type { i8 }
%"class.v8::PageAllocator::SharedMemory" = type { i32 (...)** }
%"class.v8::internal::LargePage" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::MemoryAllocator::Unmapper::UnmapFreeMemoryJob" = type { %"class.v8::JobTask", %"class.v8::internal::MemoryAllocator::Unmapper"*, %"class.v8::internal::GCTracer"* }
%"class.std::__1::unique_ptr.1170" = type { %"class.std::__1::__compressed_pair.1171" }
%"class.std::__1::__compressed_pair.1171" = type { %"struct.std::__1::__compressed_pair_elem.1172" }
%"struct.std::__1::__compressed_pair_elem.1172" = type { %"class.v8::ConvertableToTraceFormat"* }
%"class.v8::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.v8::internal::GCTracer::Scope" = type { %"class.v8::internal::GCTracer"*, i32, i32, double, %"class.v8::internal::RuntimeCallTimer", %"class.v8::internal::RuntimeCallStats"*, %"class.v8::base::Optional.1160" }
%"class.v8::internal::RuntimeCallTimer" = type { %"class.v8::internal::RuntimeCallCounter"*, %"class.v8::base::AtomicValue", %"class.v8::base::TimeTicks", %"class.v8::base::TimeDelta" }
%"class.v8::base::Optional.1160" = type { %"class.v8::base::internal::OptionalBase.1161" }
%"class.v8::base::internal::OptionalBase.1161" = type { %"struct.v8::base::internal::OptionalStorage.1162" }
%"struct.v8::base::internal::OptionalStorage.1162" = type { %"struct.v8::base::internal::OptionalStorageBase.1163" }
%"struct.v8::base::internal::OptionalStorageBase.1163" = type { i8, %union.anon.1164 }
%union.anon.1164 = type { %"class.v8::internal::WorkerThreadRuntimeCallStatsScope" }
%"class.v8::internal::WorkerThreadRuntimeCallStatsScope" = type { %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::tracing::ScopedTracer" = type { %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data" }
%"struct.v8::internal::tracing::ScopedTracer::Data" = type { i8*, i8*, i64 }
%"class.v8::TracingController" = type { i32 (...)** }

$_ZN2v88internal15MemoryAllocator4FreeILNS1_8FreeModeE0EEEvPNS0_11MemoryChunkE = comdat any

$_ZN2v88internal15MemoryAllocator4FreeILNS1_8FreeModeE1EEEvPNS0_11MemoryChunkE = comdat any

$_ZN2v88internal15MemoryAllocator4FreeILNS1_8FreeModeE2EEEvPNS0_11MemoryChunkE = comdat any

$_ZN2v88internal15MemoryAllocator8Unmapper18AddMemoryChunkSafeEPNS0_11MemoryChunkE = comdat any

$_ZN2v88internal15MemoryAllocator4FreeILNS1_8FreeModeE3EEEvPNS0_11MemoryChunkE = comdat any

$_ZN2v88internal15MemoryAllocator12AllocatePageILNS1_14AllocationModeE0ENS0_10PagedSpaceEEEPNS0_4PageEmPT0_NS0_13ExecutabilityE = comdat any

$_ZN2v88internal15MemoryAllocator12AllocatePageILNS1_14AllocationModeE0ENS0_9SemiSpaceEEEPNS0_4PageEmPT0_NS0_13ExecutabilityE = comdat any

$_ZN2v88internal15MemoryAllocator12AllocatePageILNS1_14AllocationModeE1ENS0_9SemiSpaceEEEPNS0_4PageEmPT0_NS0_13ExecutabilityE = comdat any

$_ZN2v88internal15MemoryAllocator18AllocatePagePooledINS0_9SemiSpaceEEEPNS0_11MemoryChunkEPT_ = comdat any

$_ZN2v88internal15MemoryAllocator8Unmapper31PerformFreeMemoryOnQueuedChunksILNS2_8FreeModeE0EEEvPNS_11JobDelegateE = comdat any

$_ZN2v88internal15MemoryAllocator8Unmapper31PerformFreeMemoryOnQueuedChunksILNS2_8FreeModeE1EEEvPNS_11JobDelegateE = comdat any

$_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE4findIS4_EENS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEERKT_ = comdat any

$_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS4_PvEEEE = comdat any

$_ZN2v88internal15MemoryAllocator8Unmapper18UnmapFreeMemoryJobD0Ev = comdat any

$_ZN2v88internal15MemoryAllocator8Unmapper18UnmapFreeMemoryJob3RunEPNS_11JobDelegateE = comdat any

$_ZNK2v88internal15MemoryAllocator8Unmapper18UnmapFreeMemoryJob17GetMaxConcurrencyEm = comdat any

$_ZN2v87JobTaskD2Ev = comdat any

$_ZN2v88internal15MemoryAllocator8Unmapper27TryGetPooledMemoryChunkSafeEv = comdat any

$_ZTVN2v88internal15MemoryAllocator8Unmapper18UnmapFreeMemoryJobE = comdat any

$_ZZN2v88internal15MemoryAllocator8Unmapper18UnmapFreeMemoryJob3RunEPNS_11JobDelegateEE27trace_event_unique_atomic69 = comdat any

$_ZZN2v88internal15MemoryAllocator8Unmapper18UnmapFreeMemoryJob3RunEPNS_11JobDelegateEE27trace_event_unique_atomic74 = comdat any

@_ZN2v88internal24FLAG_concurrent_sweepingE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal19FLAG_trace_unmapperE = external local_unnamed_addr global i8, align 1
@.str = private unnamed_addr constant [37 x i8] c"Unmapper::FreeQueuedChunks: new Job\0A\00", align 1
@.str.1 = private unnamed_addr constant [60 x i8] c"Unmapper::CancelAndWaitForPendingTasks: no tasks remaining\0A\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.3 = private unnamed_addr constant [40 x i8] c"!job_handle_ || !job_handle_->IsValid()\00", align 1
@.str.4 = private unnamed_addr constant [63 x i8] c"FreePages(page_allocator, reinterpret_cast<void*>(base), size)\00", align 1
@_ZN2v88internal8FLAG_logE = external local_unnamed_addr global i8, align 1
@.str.5 = private unnamed_addr constant [12 x i8] c"MemoryChunk\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c"!last_chunk_.IsReserved()\00", align 1
@.str.7 = private unnamed_addr constant [25 x i8] c"last_chunk_.IsReserved()\00", align 1
@_ZN2v88internal20FLAG_v8_os_page_sizeE = external local_unnamed_addr global i32, align 4
@.str.9 = private unnamed_addr constant [61 x i8] c"Unmapper::PerformFreeMemoryOnQueuedChunks: %d queued chunks\0A\00", align 1
@_ZTVN2v88internal15MemoryAllocator8Unmapper18UnmapFreeMemoryJobE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::JobTask"*)* @_ZN2v87JobTaskD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::MemoryAllocator::Unmapper::UnmapFreeMemoryJob"*)* @_ZN2v88internal15MemoryAllocator8Unmapper18UnmapFreeMemoryJobD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::MemoryAllocator::Unmapper::UnmapFreeMemoryJob"*, %"class.v8::JobDelegate"*)* @_ZN2v88internal15MemoryAllocator8Unmapper18UnmapFreeMemoryJob3RunEPNS_11JobDelegateE to i8*), i8* bitcast (i64 (%"class.v8::internal::MemoryAllocator::Unmapper::UnmapFreeMemoryJob"*, i64)* @_ZNK2v88internal15MemoryAllocator8Unmapper18UnmapFreeMemoryJob17GetMaxConcurrencyEm to i8*)] }, comdat, align 8
@_ZZN2v88internal15MemoryAllocator8Unmapper18UnmapFreeMemoryJob3RunEPNS_11JobDelegateEE27trace_event_unique_atomic69 = linkonce_odr hidden global i64 0, comdat, align 8
@.str.10 = private unnamed_addr constant [44 x i8] c"devtools.timeline,disabled-by-default-v8.gc\00", align 1
@_ZZN2v88internal15MemoryAllocator8Unmapper18UnmapFreeMemoryJob3RunEPNS_11JobDelegateEE27trace_event_unique_atomic74 = linkonce_odr hidden global i64 0, comdat, align 8
@.str.11 = private unnamed_addr constant [26 x i8] c"UnmapFreeMemoryTask Done\0A\00", align 1

@_ZN2v88internal15MemoryAllocatorC1EPNS0_7IsolateEPNS_13PageAllocatorEm = hidden unnamed_addr alias void (%"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, i64), void (%"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, i64)* @_ZN2v88internal15MemoryAllocatorC2EPNS0_7IsolateEPNS_13PageAllocatorEm

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal15MemoryAllocator4FreeILNS1_8FreeModeE0EEEvPNS0_11MemoryChunkE(%"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 comdat align 2 {
  %3 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 0
  %7 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 21
  %9 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %8, align 8
  %10 = bitcast %"class.v8::internal::MemoryChunk"* %1 to i8*
  tail call void @_ZN2v88internal6Logger11DeleteEventEPKcPv(%"class.v8::internal::Logger"* %9, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i8* %10) #11
  br label %11

11:                                               ; preds = %2, %5
  %12 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  %16 = and i32 %15, 1
  tail call void @_ZN2v88internal15MemoryAllocator16UnregisterMemoryEPNS0_16BasicMemoryChunkENS0_13ExecutabilityE(%"class.v8::internal::MemoryAllocator"* %0, %"class.v8::internal::BasicMemoryChunk"* %12, i32 %16) #11
  %17 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 0
  %18 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 2
  %20 = ptrtoint %"class.v8::internal::MemoryChunk"* %1 to i64
  %21 = load i64, i64* %13, align 8
  %22 = and i64 %21, 64
  %23 = icmp ne i64 %22, 0
  tail call void @_ZN2v88internal4Heap20RememberUnmappedPageEmb(%"class.v8::internal::Heap"* %19, i64 %20, i1 zeroext %23) #11
  %24 = load i64, i64* %13, align 8
  %25 = or i64 %24, 8192
  store i64 %25, i64* %13, align 8
  tail call void @_ZN2v88internal11MemoryChunk25ReleaseAllAllocatedMemoryEv(%"class.v8::internal::MemoryChunk"* %1) #11
  %26 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 9
  %27 = load i64, i64* %13, align 8
  %28 = and i64 %27, 16384
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %36, label %30

30:                                               ; preds = %11
  %31 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 9, i32 1, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 9, i32 1, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = tail call zeroext i1 @_ZN2v88internal13VirtualMemory14SetPermissionsEmmNS_13PageAllocator10PermissionE(%"class.v8::internal::VirtualMemory"* %26, i64 %34, i64 %32, i32 0) #11
  br label %37

36:                                               ; preds = %11
  tail call void @_ZN2v88internal13VirtualMemory4FreeEv(%"class.v8::internal::VirtualMemory"* %26) #11
  br label %37

37:                                               ; preds = %30, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15MemoryAllocator13PreFreeMemoryEPNS0_11MemoryChunkE(%"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 0
  %7 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 21
  %9 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %8, align 8
  %10 = bitcast %"class.v8::internal::MemoryChunk"* %1 to i8*
  tail call void @_ZN2v88internal6Logger11DeleteEventEPKcPv(%"class.v8::internal::Logger"* %9, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i8* %10) #11
  br label %11

11:                                               ; preds = %2, %5
  %12 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  %16 = and i32 %15, 1
  tail call void @_ZN2v88internal15MemoryAllocator16UnregisterMemoryEPNS0_16BasicMemoryChunkENS0_13ExecutabilityE(%"class.v8::internal::MemoryAllocator"* %0, %"class.v8::internal::BasicMemoryChunk"* %12, i32 %16) #11
  %17 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 0
  %18 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 2
  %20 = ptrtoint %"class.v8::internal::MemoryChunk"* %1 to i64
  %21 = load i64, i64* %13, align 8
  %22 = and i64 %21, 64
  %23 = icmp ne i64 %22, 0
  tail call void @_ZN2v88internal4Heap20RememberUnmappedPageEmb(%"class.v8::internal::Heap"* %19, i64 %20, i1 zeroext %23) #11
  %24 = load i64, i64* %13, align 8
  %25 = or i64 %24, 8192
  store i64 %25, i64* %13, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15MemoryAllocator17PerformFreeMemoryEPNS0_11MemoryChunkE(%"class.v8::internal::MemoryAllocator"* nocapture readnone, %"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal11MemoryChunk25ReleaseAllAllocatedMemoryEv(%"class.v8::internal::MemoryChunk"* %1) #11
  %3 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 9
  %4 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 16384
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 9, i32 1, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 9, i32 1, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = tail call zeroext i1 @_ZN2v88internal13VirtualMemory14SetPermissionsEmmNS_13PageAllocator10PermissionE(%"class.v8::internal::VirtualMemory"* %3, i64 %12, i64 %10, i32 0) #11
  br label %15

14:                                               ; preds = %2
  tail call void @_ZN2v88internal13VirtualMemory4FreeEv(%"class.v8::internal::VirtualMemory"* %3) #11
  br label %15

15:                                               ; preds = %14, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal15MemoryAllocator4FreeILNS1_8FreeModeE1EEEvPNS0_11MemoryChunkE(%"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 1
  %4 = load %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"** %3, align 8
  %5 = bitcast %"class.v8::internal::MemoryChunk"* %1 to i8*
  %6 = tail call zeroext i1 @_ZN2v88internal9FreePagesEPNS_13PageAllocatorEPvm(%"class.v8::PageAllocator"* %4, i8* %5, i64 262144) #11
  br i1 %6, label %8, label %7, !prof !3

7:                                                ; preds = %2
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

8:                                                ; preds = %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15MemoryAllocator10FreeMemoryEPNS_13PageAllocatorEmm(%"class.v8::internal::MemoryAllocator"* nocapture readnone, %"class.v8::PageAllocator"*, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = inttoptr i64 %2 to i8*
  %6 = tail call zeroext i1 @_ZN2v88internal9FreePagesEPNS_13PageAllocatorEPvm(%"class.v8::PageAllocator"* %1, i8* %5, i64 %3) #11
  br i1 %6, label %8, label %7, !prof !3

7:                                                ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

8:                                                ; preds = %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal15MemoryAllocator4FreeILNS1_8FreeModeE2EEEvPNS0_11MemoryChunkE(%"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 comdat align 2 {
  %3 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 0
  %7 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 21
  %9 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %8, align 8
  %10 = bitcast %"class.v8::internal::MemoryChunk"* %1 to i8*
  tail call void @_ZN2v88internal6Logger11DeleteEventEPKcPv(%"class.v8::internal::Logger"* %9, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i8* %10) #11
  br label %11

11:                                               ; preds = %2, %5
  %12 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = trunc i64 %14 to i32
  %16 = and i32 %15, 1
  tail call void @_ZN2v88internal15MemoryAllocator16UnregisterMemoryEPNS0_16BasicMemoryChunkENS0_13ExecutabilityE(%"class.v8::internal::MemoryAllocator"* %0, %"class.v8::internal::BasicMemoryChunk"* %12, i32 %16) #11
  %17 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 0
  %18 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %18, i64 0, i32 2
  %20 = ptrtoint %"class.v8::internal::MemoryChunk"* %1 to i64
  %21 = load i64, i64* %13, align 8
  %22 = and i64 %21, 64
  %23 = icmp ne i64 %22, 0
  tail call void @_ZN2v88internal4Heap20RememberUnmappedPageEmb(%"class.v8::internal::Heap"* %19, i64 %20, i1 zeroext %23) #11
  %24 = load i64, i64* %13, align 8
  %25 = or i64 %24, 8192
  store i64 %25, i64* %13, align 8
  %26 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 9
  tail call void @_ZN2v88internal15MemoryAllocator8Unmapper18AddMemoryChunkSafeEPNS0_11MemoryChunkE(%"class.v8::internal::MemoryAllocator::Unmapper"* %26, %"class.v8::internal::MemoryChunk"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15MemoryAllocator8Unmapper18AddMemoryChunkSafeEPNS0_11MemoryChunkE(%"class.v8::internal::MemoryAllocator::Unmapper"*, %"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 33
  %6 = icmp eq i64 %5, 0
  %7 = ptrtoint %"class.v8::internal::MemoryChunk"* %1 to i64
  %8 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 2
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %8) #11
  br i1 %6, label %9, label %79

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 0
  %11 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 0, i32 0, i32 1
  %12 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 0, i32 0, i32 2, i32 0, i32 0
  %14 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %13, align 8
  %15 = icmp eq %"class.v8::internal::MemoryChunk"** %12, %14
  %16 = ptrtoint %"class.v8::internal::MemoryChunk"** %14 to i64
  br i1 %15, label %22, label %17

17:                                               ; preds = %9
  %18 = bitcast %"class.v8::internal::MemoryChunk"** %12 to i64*
  store i64 %7, i64* %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %12, i64 1
  %20 = ptrtoint %"class.v8::internal::MemoryChunk"** %19 to i64
  %21 = bitcast %"class.v8::internal::MemoryChunk"*** %11 to i64*
  store i64 %20, i64* %21, align 8
  br label %149

22:                                               ; preds = %9
  %23 = ptrtoint %"class.v8::internal::MemoryChunk"** %12 to i64
  %24 = bitcast %"class.v8::internal::MemoryChunk"*** %11 to i64*
  %25 = bitcast %"class.std::__1::vector.1123"* %10 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = sub i64 %23, %26
  %28 = ashr exact i64 %27, 3
  %29 = add nsw i64 %28, 1
  %30 = icmp ugt i64 %29, 2305843009213693951
  br i1 %30, label %31, label %33

31:                                               ; preds = %22
  %32 = bitcast %"class.std::__1::vector.1123"* %10 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #12
  unreachable

33:                                               ; preds = %22
  %34 = bitcast %"class.v8::internal::MemoryChunk"*** %13 to i64*
  %35 = sub i64 %16, %26
  %36 = ashr exact i64 %35, 3
  %37 = icmp ult i64 %36, 1152921504606846975
  br i1 %37, label %38, label %46

38:                                               ; preds = %33
  %39 = ashr exact i64 %35, 2
  %40 = icmp ult i64 %39, %29
  %41 = select i1 %40, i64 %29, i64 %39
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %51, label %43

43:                                               ; preds = %38
  %44 = icmp ugt i64 %41, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %43
  tail call void @abort() #12
  unreachable

46:                                               ; preds = %43, %33
  %47 = phi i64 [ %41, %43 ], [ 2305843009213693951, %33 ]
  %48 = shl i64 %47, 3
  %49 = tail call i8* @_Znwm(i64 %48) #13
  %50 = bitcast i8* %49 to %"class.v8::internal::MemoryChunk"**
  br label %51

51:                                               ; preds = %46, %38
  %52 = phi i64 [ %47, %46 ], [ 0, %38 ]
  %53 = phi %"class.v8::internal::MemoryChunk"** [ %50, %46 ], [ null, %38 ]
  %54 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %53, i64 %28
  %55 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %53, i64 %52
  %56 = ptrtoint %"class.v8::internal::MemoryChunk"** %55 to i64
  %57 = bitcast %"class.v8::internal::MemoryChunk"** %54 to i64*
  store i64 %7, i64* %57, align 8
  %58 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %54, i64 1
  %59 = ptrtoint %"class.v8::internal::MemoryChunk"** %58 to i64
  %60 = getelementptr inbounds %"class.std::__1::vector.1123", %"class.std::__1::vector.1123"* %10, i64 0, i32 0, i32 0
  %61 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %60, align 8
  %62 = load i64, i64* %24, align 8
  %63 = ptrtoint %"class.v8::internal::MemoryChunk"** %61 to i64
  %64 = sub i64 %62, %63
  %65 = ashr exact i64 %64, 3
  %66 = sub nsw i64 0, %65
  %67 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %54, i64 %66
  %68 = ptrtoint %"class.v8::internal::MemoryChunk"** %67 to i64
  %69 = icmp sgt i64 %64, 0
  br i1 %69, label %70, label %74

70:                                               ; preds = %51
  %71 = bitcast %"class.v8::internal::MemoryChunk"** %67 to i8*
  %72 = bitcast %"class.v8::internal::MemoryChunk"** %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 %64, i1 false) #11
  %73 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %60, align 8
  br label %74

74:                                               ; preds = %70, %51
  %75 = phi %"class.v8::internal::MemoryChunk"** [ %61, %51 ], [ %73, %70 ]
  store i64 %68, i64* %25, align 8
  store i64 %59, i64* %24, align 8
  store i64 %56, i64* %34, align 8
  %76 = icmp eq %"class.v8::internal::MemoryChunk"** %75, null
  br i1 %76, label %149, label %77

77:                                               ; preds = %74
  %78 = bitcast %"class.v8::internal::MemoryChunk"** %75 to i8*
  tail call void @_ZdlPv(i8* %78) #13
  br label %149

79:                                               ; preds = %2
  %80 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 1
  %81 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 1, i32 0, i32 1
  %82 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %81, align 8
  %83 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 1, i32 0, i32 2, i32 0, i32 0
  %84 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %83, align 8
  %85 = icmp eq %"class.v8::internal::MemoryChunk"** %82, %84
  %86 = ptrtoint %"class.v8::internal::MemoryChunk"** %84 to i64
  br i1 %85, label %92, label %87

87:                                               ; preds = %79
  %88 = bitcast %"class.v8::internal::MemoryChunk"** %82 to i64*
  store i64 %7, i64* %88, align 8
  %89 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %82, i64 1
  %90 = ptrtoint %"class.v8::internal::MemoryChunk"** %89 to i64
  %91 = bitcast %"class.v8::internal::MemoryChunk"*** %81 to i64*
  store i64 %90, i64* %91, align 8
  br label %149

92:                                               ; preds = %79
  %93 = ptrtoint %"class.v8::internal::MemoryChunk"** %82 to i64
  %94 = bitcast %"class.v8::internal::MemoryChunk"*** %81 to i64*
  %95 = bitcast %"class.std::__1::vector.1123"* %80 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = sub i64 %93, %96
  %98 = ashr exact i64 %97, 3
  %99 = add nsw i64 %98, 1
  %100 = icmp ugt i64 %99, 2305843009213693951
  br i1 %100, label %101, label %103

101:                                              ; preds = %92
  %102 = bitcast %"class.std::__1::vector.1123"* %80 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %102) #12
  unreachable

103:                                              ; preds = %92
  %104 = bitcast %"class.v8::internal::MemoryChunk"*** %83 to i64*
  %105 = sub i64 %86, %96
  %106 = ashr exact i64 %105, 3
  %107 = icmp ult i64 %106, 1152921504606846975
  br i1 %107, label %108, label %116

108:                                              ; preds = %103
  %109 = ashr exact i64 %105, 2
  %110 = icmp ult i64 %109, %99
  %111 = select i1 %110, i64 %99, i64 %109
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %121, label %113

113:                                              ; preds = %108
  %114 = icmp ugt i64 %111, 2305843009213693951
  br i1 %114, label %115, label %116

115:                                              ; preds = %113
  tail call void @abort() #12
  unreachable

116:                                              ; preds = %113, %103
  %117 = phi i64 [ %111, %113 ], [ 2305843009213693951, %103 ]
  %118 = shl i64 %117, 3
  %119 = tail call i8* @_Znwm(i64 %118) #13
  %120 = bitcast i8* %119 to %"class.v8::internal::MemoryChunk"**
  br label %121

121:                                              ; preds = %116, %108
  %122 = phi i64 [ %117, %116 ], [ 0, %108 ]
  %123 = phi %"class.v8::internal::MemoryChunk"** [ %120, %116 ], [ null, %108 ]
  %124 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %123, i64 %98
  %125 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %123, i64 %122
  %126 = ptrtoint %"class.v8::internal::MemoryChunk"** %125 to i64
  %127 = bitcast %"class.v8::internal::MemoryChunk"** %124 to i64*
  store i64 %7, i64* %127, align 8
  %128 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %124, i64 1
  %129 = ptrtoint %"class.v8::internal::MemoryChunk"** %128 to i64
  %130 = getelementptr inbounds %"class.std::__1::vector.1123", %"class.std::__1::vector.1123"* %80, i64 0, i32 0, i32 0
  %131 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %130, align 8
  %132 = load i64, i64* %94, align 8
  %133 = ptrtoint %"class.v8::internal::MemoryChunk"** %131 to i64
  %134 = sub i64 %132, %133
  %135 = ashr exact i64 %134, 3
  %136 = sub nsw i64 0, %135
  %137 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %124, i64 %136
  %138 = ptrtoint %"class.v8::internal::MemoryChunk"** %137 to i64
  %139 = icmp sgt i64 %134, 0
  br i1 %139, label %140, label %144

140:                                              ; preds = %121
  %141 = bitcast %"class.v8::internal::MemoryChunk"** %137 to i8*
  %142 = bitcast %"class.v8::internal::MemoryChunk"** %131 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %141, i8* align 8 %142, i64 %134, i1 false) #11
  %143 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %130, align 8
  br label %144

144:                                              ; preds = %140, %121
  %145 = phi %"class.v8::internal::MemoryChunk"** [ %131, %121 ], [ %143, %140 ]
  store i64 %138, i64* %95, align 8
  store i64 %129, i64* %94, align 8
  store i64 %126, i64* %104, align 8
  %146 = icmp eq %"class.v8::internal::MemoryChunk"** %145, null
  br i1 %146, label %149, label %147

147:                                              ; preds = %144
  %148 = bitcast %"class.v8::internal::MemoryChunk"** %145 to i8*
  tail call void @_ZdlPv(i8* %148) #13
  br label %149

149:                                              ; preds = %147, %144, %87, %77, %74, %17
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %8) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden void @_ZN2v88internal15MemoryAllocator4FreeILNS1_8FreeModeE3EEEvPNS0_11MemoryChunkE(%"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = or i64 %5, 16384
  store i64 %6, i64* %4, align 8
  %7 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %16, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 21
  %13 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %12, align 8
  %14 = bitcast %"class.v8::internal::MemoryChunk"* %1 to i8*
  tail call void @_ZN2v88internal6Logger11DeleteEventEPKcPv(%"class.v8::internal::Logger"* %13, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i8* %14) #11
  %15 = load i64, i64* %4, align 8
  br label %16

16:                                               ; preds = %2, %9
  %17 = phi i64 [ %6, %2 ], [ %15, %9 ]
  %18 = trunc i64 %17 to i32
  %19 = and i32 %18, 1
  tail call void @_ZN2v88internal15MemoryAllocator16UnregisterMemoryEPNS0_16BasicMemoryChunkENS0_13ExecutabilityE(%"class.v8::internal::MemoryAllocator"* %0, %"class.v8::internal::BasicMemoryChunk"* %3, i32 %19) #11
  %20 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 0
  %21 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %21, i64 0, i32 2
  %23 = ptrtoint %"class.v8::internal::MemoryChunk"* %1 to i64
  %24 = load i64, i64* %4, align 8
  %25 = and i64 %24, 64
  %26 = icmp ne i64 %25, 0
  tail call void @_ZN2v88internal4Heap20RememberUnmappedPageEmb(%"class.v8::internal::Heap"* %22, i64 %23, i1 zeroext %26) #11
  %27 = load i64, i64* %4, align 8
  %28 = or i64 %27, 8192
  store i64 %28, i64* %4, align 8
  %29 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 9
  tail call void @_ZN2v88internal15MemoryAllocator8Unmapper18AddMemoryChunkSafeEPNS0_11MemoryChunkE(%"class.v8::internal::MemoryAllocator::Unmapper"* %29, %"class.v8::internal::MemoryChunk"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.v8::internal::Page"* @_ZN2v88internal15MemoryAllocator12AllocatePageILNS1_14AllocationModeE0ENS0_10PagedSpaceEEEPNS0_4PageEmPT0_NS0_13ExecutabilityE(%"class.v8::internal::MemoryAllocator"*, i64, %"class.v8::internal::PagedSpace"*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::MemoryChunk"*, align 8
  %6 = getelementptr inbounds %"class.v8::internal::PagedSpace", %"class.v8::internal::PagedSpace"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = tail call %"class.v8::internal::BasicMemoryChunk"* @_ZN2v88internal15MemoryAllocator18AllocateBasicChunkEmmNS0_13ExecutabilityEPNS0_9BaseSpaceE(%"class.v8::internal::MemoryAllocator"* %0, i64 %1, i64 %1, i32 %3, %"class.v8::internal::BaseSpace"* %6) #11
  %8 = icmp eq %"class.v8::internal::BasicMemoryChunk"* %7, null
  br i1 %8, label %27, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 2
  %13 = tail call %"class.v8::internal::MemoryChunk"* @_ZN2v88internal11MemoryChunk10InitializeEPNS0_16BasicMemoryChunkEPNS0_4HeapENS0_13ExecutabilityE(%"class.v8::internal::BasicMemoryChunk"* nonnull %7, %"class.v8::internal::Heap"* %12, i32 %3) #11
  %14 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %13, i64 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %9
  %19 = bitcast %"class.v8::internal::MemoryChunk"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  store %"class.v8::internal::MemoryChunk"* %13, %"class.v8::internal::MemoryChunk"** %5, align 8
  %20 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 11
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %20) #11
  %21 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 10, i32 0
  %22 = call { %"struct.std::__1::__hash_node_base.532"*, i8 } @_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.528"* %21, %"class.v8::internal::MemoryChunk"** nonnull dereferenceable(8) %5, %"class.v8::internal::MemoryChunk"** nonnull dereferenceable(8) %5) #11
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %20) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  br label %23

23:                                               ; preds = %9, %18
  %24 = icmp eq %"class.v8::internal::MemoryChunk"* %13, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %23
  %26 = call %"class.v8::internal::Page"* @_ZN2v88internal10PagedSpace14InitializePageEPNS0_11MemoryChunkE(%"class.v8::internal::PagedSpace"* %2, %"class.v8::internal::MemoryChunk"* nonnull %13) #11
  br label %27

27:                                               ; preds = %4, %23, %25
  %28 = phi %"class.v8::internal::Page"* [ %26, %25 ], [ null, %23 ], [ null, %4 ]
  ret %"class.v8::internal::Page"* %28
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::MemoryChunk"* @_ZN2v88internal15MemoryAllocator13AllocateChunkEmmNS0_13ExecutabilityEPNS0_9BaseSpaceE(%"class.v8::internal::MemoryAllocator"*, i64, i64, i32, %"class.v8::internal::BaseSpace"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::MemoryChunk"*, align 8
  %7 = tail call %"class.v8::internal::BasicMemoryChunk"* @_ZN2v88internal15MemoryAllocator18AllocateBasicChunkEmmNS0_13ExecutabilityEPNS0_9BaseSpaceE(%"class.v8::internal::MemoryAllocator"* %0, i64 %1, i64 %2, i32 %3, %"class.v8::internal::BaseSpace"* %4)
  %8 = icmp eq %"class.v8::internal::BasicMemoryChunk"* %7, null
  br i1 %8, label %23, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 2
  %13 = tail call %"class.v8::internal::MemoryChunk"* @_ZN2v88internal11MemoryChunk10InitializeEPNS0_16BasicMemoryChunkEPNS0_4HeapENS0_13ExecutabilityE(%"class.v8::internal::BasicMemoryChunk"* nonnull %7, %"class.v8::internal::Heap"* %12, i32 %3) #11
  %14 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %13, i64 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %9
  %19 = bitcast %"class.v8::internal::MemoryChunk"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  store %"class.v8::internal::MemoryChunk"* %13, %"class.v8::internal::MemoryChunk"** %6, align 8
  %20 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 11
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %20) #11
  %21 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 10, i32 0
  %22 = call { %"struct.std::__1::__hash_node_base.532"*, i8 } @_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.528"* %21, %"class.v8::internal::MemoryChunk"** nonnull dereferenceable(8) %6, %"class.v8::internal::MemoryChunk"** nonnull dereferenceable(8) %6) #11
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %20) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  br label %23

23:                                               ; preds = %18, %9, %5
  %24 = phi %"class.v8::internal::MemoryChunk"* [ null, %5 ], [ %13, %9 ], [ %13, %18 ]
  ret %"class.v8::internal::MemoryChunk"* %24
}

declare %"class.v8::internal::Page"* @_ZN2v88internal10PagedSpace14InitializePageEPNS0_11MemoryChunkE(%"class.v8::internal::PagedSpace"*, %"class.v8::internal::MemoryChunk"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.v8::internal::Page"* @_ZN2v88internal15MemoryAllocator12AllocatePageILNS1_14AllocationModeE0ENS0_9SemiSpaceEEEPNS0_4PageEmPT0_NS0_13ExecutabilityE(%"class.v8::internal::MemoryAllocator"*, i64, %"class.v8::internal::SemiSpace"*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::MemoryChunk"*, align 8
  %6 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %2, i64 0, i32 0, i32 0
  %7 = tail call %"class.v8::internal::BasicMemoryChunk"* @_ZN2v88internal15MemoryAllocator18AllocateBasicChunkEmmNS0_13ExecutabilityEPNS0_9BaseSpaceE(%"class.v8::internal::MemoryAllocator"* %0, i64 %1, i64 %1, i32 %3, %"class.v8::internal::BaseSpace"* %6) #11
  %8 = icmp eq %"class.v8::internal::BasicMemoryChunk"* %7, null
  br i1 %8, label %27, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 2
  %13 = tail call %"class.v8::internal::MemoryChunk"* @_ZN2v88internal11MemoryChunk10InitializeEPNS0_16BasicMemoryChunkEPNS0_4HeapENS0_13ExecutabilityE(%"class.v8::internal::BasicMemoryChunk"* nonnull %7, %"class.v8::internal::Heap"* %12, i32 %3) #11
  %14 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %13, i64 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %9
  %19 = bitcast %"class.v8::internal::MemoryChunk"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  store %"class.v8::internal::MemoryChunk"* %13, %"class.v8::internal::MemoryChunk"** %5, align 8
  %20 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 11
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %20) #11
  %21 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 10, i32 0
  %22 = call { %"struct.std::__1::__hash_node_base.532"*, i8 } @_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.528"* %21, %"class.v8::internal::MemoryChunk"** nonnull dereferenceable(8) %5, %"class.v8::internal::MemoryChunk"** nonnull dereferenceable(8) %5) #11
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %20) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  br label %23

23:                                               ; preds = %9, %18
  %24 = icmp eq %"class.v8::internal::MemoryChunk"* %13, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %23
  %26 = call %"class.v8::internal::Page"* @_ZN2v88internal9SemiSpace14InitializePageEPNS0_11MemoryChunkE(%"class.v8::internal::SemiSpace"* %2, %"class.v8::internal::MemoryChunk"* nonnull %13) #11
  br label %27

27:                                               ; preds = %4, %23, %25
  %28 = phi %"class.v8::internal::Page"* [ %26, %25 ], [ null, %23 ], [ null, %4 ]
  ret %"class.v8::internal::Page"* %28
}

declare %"class.v8::internal::Page"* @_ZN2v88internal9SemiSpace14InitializePageEPNS0_11MemoryChunkE(%"class.v8::internal::SemiSpace"*, %"class.v8::internal::MemoryChunk"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define weak_odr hidden %"class.v8::internal::Page"* @_ZN2v88internal15MemoryAllocator12AllocatePageILNS1_14AllocationModeE1ENS0_9SemiSpaceEEEPNS0_4PageEmPT0_NS0_13ExecutabilityE(%"class.v8::internal::MemoryAllocator"*, i64, %"class.v8::internal::SemiSpace"*, i32) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.v8::internal::MemoryChunk"*, align 8
  %6 = tail call %"class.v8::internal::MemoryChunk"* @_ZN2v88internal15MemoryAllocator18AllocatePagePooledINS0_9SemiSpaceEEEPNS0_11MemoryChunkEPT_(%"class.v8::internal::MemoryAllocator"* %0, %"class.v8::internal::SemiSpace"* %2)
  %7 = icmp eq %"class.v8::internal::MemoryChunk"* %6, null
  br i1 %7, label %8, label %28

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %2, i64 0, i32 0, i32 0
  %10 = tail call %"class.v8::internal::BasicMemoryChunk"* @_ZN2v88internal15MemoryAllocator18AllocateBasicChunkEmmNS0_13ExecutabilityEPNS0_9BaseSpaceE(%"class.v8::internal::MemoryAllocator"* %0, i64 %1, i64 %1, i32 %3, %"class.v8::internal::BaseSpace"* %9) #11
  %11 = icmp eq %"class.v8::internal::BasicMemoryChunk"* %10, null
  br i1 %11, label %31, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %14, i64 0, i32 2
  %16 = tail call %"class.v8::internal::MemoryChunk"* @_ZN2v88internal11MemoryChunk10InitializeEPNS0_16BasicMemoryChunkEPNS0_4HeapENS0_13ExecutabilityE(%"class.v8::internal::BasicMemoryChunk"* nonnull %10, %"class.v8::internal::Heap"* %15, i32 %3) #11
  %17 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %16, i64 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = and i64 %18, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %26, label %21

21:                                               ; preds = %12
  %22 = bitcast %"class.v8::internal::MemoryChunk"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #11
  store %"class.v8::internal::MemoryChunk"* %16, %"class.v8::internal::MemoryChunk"** %5, align 8
  %23 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 11
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %23) #11
  %24 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 10, i32 0
  %25 = call { %"struct.std::__1::__hash_node_base.532"*, i8 } @_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.528"* %24, %"class.v8::internal::MemoryChunk"** nonnull dereferenceable(8) %5, %"class.v8::internal::MemoryChunk"** nonnull dereferenceable(8) %5) #11
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %23) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #11
  br label %26

26:                                               ; preds = %21, %12
  %27 = icmp eq %"class.v8::internal::MemoryChunk"* %16, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %4, %26
  %29 = phi %"class.v8::internal::MemoryChunk"* [ %16, %26 ], [ %6, %4 ]
  %30 = call %"class.v8::internal::Page"* @_ZN2v88internal9SemiSpace14InitializePageEPNS0_11MemoryChunkE(%"class.v8::internal::SemiSpace"* %2, %"class.v8::internal::MemoryChunk"* nonnull %29) #11
  br label %31

31:                                               ; preds = %8, %26, %28
  %32 = phi %"class.v8::internal::Page"* [ %30, %28 ], [ null, %26 ], [ null, %8 ]
  ret %"class.v8::internal::Page"* %32
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::MemoryChunk"* @_ZN2v88internal15MemoryAllocator18AllocatePagePooledINS0_9SemiSpaceEEEPNS0_11MemoryChunkEPT_(%"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::SemiSpace"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.v8::internal::VirtualMemory", align 8
  %4 = alloca %"class.v8::internal::VirtualMemory", align 8
  %5 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 9
  %6 = tail call %"class.v8::internal::MemoryChunk"* @_ZN2v88internal15MemoryAllocator8Unmapper27TryGetPooledMemoryChunkSafeEv(%"class.v8::internal::MemoryAllocator::Unmapper"* %5)
  %7 = icmp eq %"class.v8::internal::MemoryChunk"* %6, null
  br i1 %7, label %64, label %8

8:                                                ; preds = %2
  %9 = ptrtoint %"class.v8::internal::MemoryChunk"* %6 to i64
  %10 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %1, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %1, i64 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 8
  %13 = tail call i64 @_ZN2v88internal17MemoryChunkLayout30ObjectStartOffsetInMemoryChunkENS0_15AllocationSpaceE(i32 %12) #11
  %14 = add i64 %13, %9
  %15 = add i64 %9, 262144
  %16 = bitcast %"class.v8::internal::VirtualMemory"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #11
  %17 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 1
  %18 = bitcast %"class.v8::PageAllocator"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.v8::internal::VirtualMemory"* %3 to i64*
  store i64 %19, i64* %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::VirtualMemory", %"class.v8::internal::VirtualMemory"* %3, i64 0, i32 1, i32 0
  store i64 %9, i64* %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::VirtualMemory", %"class.v8::internal::VirtualMemory"* %3, i64 0, i32 1, i32 1
  store i64 262144, i64* %22, align 8
  %23 = call zeroext i1 @_ZN2v88internal13VirtualMemory14SetPermissionsEmmNS_13PageAllocator10PermissionE(%"class.v8::internal::VirtualMemory"* nonnull %3, i64 %9, i64 262144, i32 2) #11
  br i1 %23, label %24, label %62

24:                                               ; preds = %8
  %25 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = icmp ugt i64 %26, %9
  br i1 %27, label %28, label %35

28:                                               ; preds = %24, %32
  %29 = phi i64 [ %33, %32 ], [ %26, %24 ]
  %30 = cmpxchg weak i64* %25, i64 %29, i64 %9 acq_rel monotonic
  %31 = extractvalue { i64, i1 } %30, 1
  br i1 %31, label %35, label %32

32:                                               ; preds = %28
  %33 = extractvalue { i64, i1 } %30, 0
  %34 = icmp ugt i64 %33, %9
  br i1 %34, label %28, label %35

35:                                               ; preds = %32, %28, %24
  %36 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i64, i64* %36 monotonic, align 8
  %38 = icmp ult i64 %37, %15
  br i1 %38, label %39, label %46

39:                                               ; preds = %35, %43
  %40 = phi i64 [ %44, %43 ], [ %37, %35 ]
  %41 = cmpxchg weak i64* %36, i64 %40, i64 %15 acq_rel monotonic
  %42 = extractvalue { i64, i1 } %41, 1
  br i1 %42, label %46, label %43

43:                                               ; preds = %39
  %44 = extractvalue { i64, i1 } %41, 0
  %45 = icmp ult i64 %44, %15
  br i1 %45, label %39, label %46

46:                                               ; preds = %43, %39, %35
  %47 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 0
  %48 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %48, i64 0, i32 2
  %50 = getelementptr inbounds %"class.v8::internal::VirtualMemory", %"class.v8::internal::VirtualMemory"* %4, i64 0, i32 1
  %51 = bitcast %"class.v8::base::AddressRegion"* %50 to i8*
  %52 = load i64, i64* %20, align 8
  %53 = bitcast %"class.v8::internal::VirtualMemory"* %4 to i64*
  store i64 %52, i64* %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::VirtualMemory", %"class.v8::internal::VirtualMemory"* %3, i64 0, i32 1
  %55 = bitcast %"class.v8::base::AddressRegion"* %54 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %55, i64 16, i1 false) #11
  call void @_ZN2v88internal13VirtualMemory5ResetEv(%"class.v8::internal::VirtualMemory"* nonnull %3) #11
  %56 = call %"class.v8::internal::BasicMemoryChunk"* @_ZN2v88internal16BasicMemoryChunk10InitializeEPNS0_4HeapEmmmmPNS0_9BaseSpaceENS0_13VirtualMemoryE(%"class.v8::internal::Heap"* %49, i64 %9, i64 262144, i64 %14, i64 %15, %"class.v8::internal::BaseSpace"* %10, %"class.v8::internal::VirtualMemory"* nonnull %4) #11
  call void @_ZN2v88internal13VirtualMemoryD1Ev(%"class.v8::internal::VirtualMemory"* nonnull %4) #11
  %57 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %47, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %57, i64 0, i32 2
  %59 = call %"class.v8::internal::MemoryChunk"* @_ZN2v88internal11MemoryChunk10InitializeEPNS0_16BasicMemoryChunkEPNS0_4HeapENS0_13ExecutabilityE(%"class.v8::internal::BasicMemoryChunk"* %56, %"class.v8::internal::Heap"* %58, i32 0) #11
  %60 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i64* %60, i64 262144 seq_cst
  br label %62

62:                                               ; preds = %8, %46
  %63 = phi %"class.v8::internal::MemoryChunk"* [ %6, %46 ], [ null, %8 ]
  call void @_ZN2v88internal13VirtualMemoryD1Ev(%"class.v8::internal::VirtualMemory"* nonnull %3) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #11
  br label %64

64:                                               ; preds = %2, %62
  %65 = phi %"class.v8::internal::MemoryChunk"* [ %63, %62 ], [ null, %2 ]
  ret %"class.v8::internal::MemoryChunk"* %65
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15MemoryAllocatorC2EPNS0_7IsolateEPNS_13PageAllocatorEm(%"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, i64) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 1
  %7 = tail call %"class.v8::PageAllocator"* @_ZNK2v88internal7Isolate14page_allocatorEv(%"class.v8::internal::Isolate"* %1) #11
  store %"class.v8::PageAllocator"* %7, %"class.v8::PageAllocator"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 2
  store %"class.v8::PageAllocator"* %2, %"class.v8::PageAllocator"** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 3
  %10 = add i64 %3, 262143
  %11 = and i64 %10, -262144
  store i64 %11, i64* %9, align 8
  %12 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast i64* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false)
  %15 = bitcast i64* %13 to <2 x i64>*
  store <2 x i64> <i64 -1, i64 0>, <2 x i64>* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 8
  tail call void @_ZN2v88internal13VirtualMemoryC1Ev(%"class.v8::internal::VirtualMemory"* %16) #11
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 2
  %18 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 9, i32 0
  store %"class.v8::internal::Heap"* %17, %"class.v8::internal::Heap"** %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 9, i32 1
  store %"class.v8::internal::MemoryAllocator"* %0, %"class.v8::internal::MemoryAllocator"** %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 9, i32 2
  tail call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %20) #11
  %21 = getelementptr %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 9, i32 3, i64 0
  %22 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 9, i32 3, i64 0, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"class.v8::internal::MemoryChunk"*** %22 to i64*
  %24 = bitcast %"class.std::__1::vector.1123"* %21 to i64*
  %25 = getelementptr %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 9, i32 3, i64 1
  %26 = bitcast %"class.std::__1::vector.1123"* %25 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 56, i1 false) #11
  %27 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 9, i32 3, i64 0, i32 0, i32 1
  %28 = bitcast %"class.v8::internal::MemoryChunk"*** %27 to i64*
  %29 = tail call i8* @_Znwm(i64 512) #13
  %30 = ptrtoint i8* %29 to i64
  %31 = getelementptr inbounds i8, i8* %29, i64 512
  %32 = ptrtoint i8* %31 to i64
  store i64 %30, i64* %24, align 8
  store i64 %30, i64* %28, align 8
  store i64 %32, i64* %23, align 8
  %33 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 9, i32 3, i64 2
  %34 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 9, i32 3, i64 2, i32 0, i32 2, i32 0, i32 0
  %35 = bitcast %"class.v8::internal::MemoryChunk"*** %34 to i64*
  %36 = bitcast %"class.std::__1::vector.1123"* %33 to i64*
  %37 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 9, i32 3, i64 2, i32 0, i32 1
  %38 = bitcast %"class.v8::internal::MemoryChunk"*** %37 to i64*
  %39 = tail call i8* @_Znwm(i64 512) #13
  %40 = ptrtoint i8* %39 to i64
  %41 = getelementptr inbounds i8, i8* %39, i64 512
  %42 = ptrtoint i8* %41 to i64
  store i64 %40, i64* %36, align 8
  store i64 %40, i64* %38, align 8
  store i64 %42, i64* %35, align 8
  %43 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 10
  %44 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 10, i32 0, i32 3
  %45 = bitcast %"class.std::__1::__compressed_pair.546"* %44 to i32*
  %46 = bitcast %"class.std::__1::unordered_set.527"* %43 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 32, i1 false) #11
  store i32 1065353216, i32* %45, align 4
  %47 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 11
  tail call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %47) #11
  ret void
}

declare %"class.v8::PageAllocator"* @_ZNK2v88internal7Isolate14page_allocatorEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal13VirtualMemoryC1Ev(%"class.v8::internal::VirtualMemory"*) unnamed_addr #2

declare void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15MemoryAllocator8TearDownEv(%"class.v8::internal::MemoryAllocator"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 9
  %3 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 9, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %3, align 8
  %5 = icmp eq %"class.v8::JobHandle"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.v8::JobHandle"* %4 to i1 (%"class.v8::JobHandle"*)***
  %8 = load i1 (%"class.v8::JobHandle"*)**, i1 (%"class.v8::JobHandle"*)*** %7, align 8
  %9 = getelementptr inbounds i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %8, i64 7
  %10 = load i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %9, align 8
  %11 = tail call zeroext i1 %10(%"class.v8::JobHandle"* nonnull %4) #11
  br i1 %11, label %12, label %13, !prof !4

12:                                               ; preds = %6
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

13:                                               ; preds = %1, %6
  tail call void @_ZN2v88internal15MemoryAllocator8Unmapper31PerformFreeMemoryOnQueuedChunksILNS2_8FreeModeE1EEEvPNS_11JobDelegateE(%"class.v8::internal::MemoryAllocator::Unmapper"* %2, %"class.v8::JobDelegate"* null) #11
  %14 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 3
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 8, i32 1, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 8
  tail call void @_ZN2v88internal13VirtualMemory4FreeEv(%"class.v8::internal::VirtualMemory"* %19) #11
  br label %20

20:                                               ; preds = %13, %18
  %21 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 1
  %22 = bitcast %"class.v8::PageAllocator"** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15MemoryAllocator8Unmapper8TearDownEv(%"class.v8::internal::MemoryAllocator::Unmapper"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %2, align 8
  %4 = icmp eq %"class.v8::JobHandle"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::JobHandle"* %3 to i1 (%"class.v8::JobHandle"*)***
  %7 = load i1 (%"class.v8::JobHandle"*)**, i1 (%"class.v8::JobHandle"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %7, i64 7
  %9 = load i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.v8::JobHandle"* nonnull %3) #11
  br i1 %10, label %11, label %12, !prof !4

11:                                               ; preds = %5
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0)) #12
  unreachable

12:                                               ; preds = %1, %5
  tail call void @_ZN2v88internal15MemoryAllocator8Unmapper31PerformFreeMemoryOnQueuedChunksILNS2_8FreeModeE1EEEvPNS_11JobDelegateE(%"class.v8::internal::MemoryAllocator::Unmapper"* %0, %"class.v8::JobDelegate"* null)
  ret void
}

declare void @_ZN2v88internal13VirtualMemory4FreeEv(%"class.v8::internal::VirtualMemory"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15MemoryAllocator8Unmapper16FreeQueuedChunksEv(%"class.v8::internal::MemoryAllocator::Unmapper"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %3, i64 0, i32 42, i32 0, i32 0, i32 0, i32 0
  %5 = load atomic i32, i32* %4 monotonic, align 4
  %6 = icmp eq i32 %5, 4
  %7 = load i8, i8* @_ZN2v88internal24FLAG_concurrent_sweepingE, align 1
  %8 = icmp eq i8 %7, 0
  %9 = or i1 %6, %8
  br i1 %9, label %65, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 4
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.297", %"class.std::__1::unique_ptr.297"* %11, i64 0, i32 0, i32 0, i32 0
  %13 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %12, align 8
  %14 = icmp eq %"class.v8::JobHandle"* %13, null
  br i1 %14, label %27, label %15

15:                                               ; preds = %10
  %16 = bitcast %"class.v8::JobHandle"* %13 to i1 (%"class.v8::JobHandle"*)***
  %17 = load i1 (%"class.v8::JobHandle"*)**, i1 (%"class.v8::JobHandle"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %17, i64 7
  %19 = load i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.v8::JobHandle"* nonnull %13) #11
  br i1 %20, label %21, label %27

21:                                               ; preds = %15
  %22 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %12, align 8
  %23 = bitcast %"class.v8::JobHandle"* %22 to void (%"class.v8::JobHandle"*)***
  %24 = load void (%"class.v8::JobHandle"*)**, void (%"class.v8::JobHandle"*)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %24, i64 2
  %26 = load void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %25, align 8
  tail call void %26(%"class.v8::JobHandle"* %22) #11
  br label %66

27:                                               ; preds = %10, %15
  %28 = tail call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #11
  %29 = bitcast %"class.v8::internal::MemoryAllocator::Unmapper"* %0 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = add i64 %30, -41416
  %32 = inttoptr i64 %31 to %"class.v8::internal::Isolate"*
  %33 = ptrtoint %"class.v8::internal::MemoryAllocator::Unmapper"* %0 to i64
  %34 = tail call i8* @_Znwm(i64 24) #13
  %35 = bitcast i8* %34 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal15MemoryAllocator8Unmapper18UnmapFreeMemoryJobE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %35, align 8
  %36 = getelementptr inbounds i8, i8* %34, i64 8
  %37 = bitcast i8* %36 to i64*
  store i64 %33, i64* %37, align 8
  %38 = getelementptr inbounds i8, i8* %34, i64 16
  %39 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %32, i64 0, i32 2, i32 80, i32 0, i32 0, i32 0
  %40 = bitcast %"class.v8::internal::GCTracer"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast i8* %38 to i64*
  store i64 %41, i64* %42, align 8
  %43 = bitcast i8* %34 to %"class.v8::JobTask"*
  %44 = bitcast %"class.v8::Platform"* %28 to %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)***
  %45 = load %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)**, %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)*** %44, align 8
  %46 = getelementptr inbounds %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)*, %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)** %45, i64 12
  %47 = load %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)*, %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)** %46, align 8
  %48 = tail call %"class.v8::JobHandle"* %47(%"class.v8::Platform"* %28, i8 zeroext 1, %"class.v8::JobTask"* nonnull %43) #11
  %49 = ptrtoint %"class.v8::JobHandle"* %48 to i64
  %50 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %12, align 8
  %51 = bitcast %"class.std::__1::unique_ptr.297"* %11 to i64*
  store i64 %49, i64* %51, align 8
  %52 = icmp eq %"class.v8::JobHandle"* %50, null
  br i1 %52, label %58, label %53

53:                                               ; preds = %27
  %54 = bitcast %"class.v8::JobHandle"* %50 to void (%"class.v8::JobHandle"*)***
  %55 = load void (%"class.v8::JobHandle"*)**, void (%"class.v8::JobHandle"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %55, i64 1
  %57 = load void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %56, align 8
  tail call void %57(%"class.v8::JobHandle"* nonnull %50) #11
  br label %58

58:                                               ; preds = %27, %53
  %59 = load i8, i8* @_ZN2v88internal19FLAG_trace_unmapperE, align 1, !range !2
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %66, label %61

61:                                               ; preds = %58
  %62 = load i64, i64* %29, align 8
  %63 = add i64 %62, -41416
  %64 = inttoptr i64 %63 to i8*
  tail call void (i8*, i8*, ...) @_ZN2v88internal12PrintIsolateEPvPKcz(i8* %64, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0)) #11
  br label %66

65:                                               ; preds = %1
  tail call void @_ZN2v88internal15MemoryAllocator8Unmapper31PerformFreeMemoryOnQueuedChunksILNS2_8FreeModeE0EEEvPNS_11JobDelegateE(%"class.v8::internal::MemoryAllocator::Unmapper"* %0, %"class.v8::JobDelegate"* null)
  br label %66

66:                                               ; preds = %58, %21, %61, %65
  ret void
}

declare %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() local_unnamed_addr #2

declare void @_ZN2v88internal12PrintIsolateEPvPKcz(i8*, i8*, ...) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15MemoryAllocator8Unmapper31PerformFreeMemoryOnQueuedChunksILNS2_8FreeModeE0EEEvPNS_11JobDelegateE(%"class.v8::internal::MemoryAllocator::Unmapper"*, %"class.v8::JobDelegate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = load i8, i8* @_ZN2v88internal19FLAG_trace_unmapperE, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %38, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.v8::internal::MemoryAllocator::Unmapper"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to i8*
  %10 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 2
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %10) #11
  %11 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 0
  %12 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 0, i32 0, i32 1
  %13 = bitcast %"class.v8::internal::MemoryChunk"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.1123"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = lshr exact i64 %17, 3
  %19 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 1
  %20 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 1, i32 0, i32 1
  %21 = bitcast %"class.v8::internal::MemoryChunk"*** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.1123"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = lshr exact i64 %25, 3
  %27 = add nuw nsw i64 %26, %18
  %28 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 2
  %29 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 2, i32 0, i32 1
  %30 = bitcast %"class.v8::internal::MemoryChunk"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.1123"* %28 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = lshr exact i64 %34, 3
  %36 = add nuw nsw i64 %27, %35
  %37 = trunc i64 %36 to i32
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %10) #11
  tail call void (i8*, i8*, ...) @_ZN2v88internal12PrintIsolateEPvPKcz(i8* %9, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.9, i64 0, i64 0), i32 %37) #11
  br label %38

38:                                               ; preds = %2, %5
  %39 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 2
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %39) #11
  %40 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 0, i32 0, i32 0
  %41 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 0, i32 0, i32 1
  %43 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %42, align 8
  %44 = icmp eq %"class.v8::internal::MemoryChunk"** %41, %43
  br i1 %44, label %142, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 2
  %47 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 2, i32 0, i32 1
  %48 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 2, i32 0, i32 2, i32 0, i32 0
  %49 = bitcast %"class.v8::internal::MemoryChunk"*** %47 to i64*
  %50 = bitcast %"class.std::__1::vector.1123"* %46 to i64*
  %51 = bitcast %"class.v8::internal::MemoryChunk"*** %48 to i64*
  %52 = getelementptr inbounds %"class.std::__1::vector.1123", %"class.std::__1::vector.1123"* %46, i64 0, i32 0, i32 0
  %53 = icmp eq %"class.v8::JobDelegate"* %1, null
  %54 = bitcast %"class.v8::JobDelegate"* %1 to i1 (%"class.v8::JobDelegate"*)***
  br i1 %53, label %55, label %143

55:                                               ; preds = %45, %138
  %56 = phi %"class.v8::internal::MemoryChunk"** [ %140, %138 ], [ %43, %45 ]
  %57 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %56, i64 -1
  %58 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %57, align 8
  store %"class.v8::internal::MemoryChunk"** %57, %"class.v8::internal::MemoryChunk"*** %42, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %39) #11
  %59 = icmp eq %"class.v8::internal::MemoryChunk"* %58, null
  br i1 %59, label %237, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %58, i64 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = and i64 %62, 16384
  %64 = icmp eq i64 %63, 0
  tail call void @_ZN2v88internal11MemoryChunk25ReleaseAllAllocatedMemoryEv(%"class.v8::internal::MemoryChunk"* nonnull %58) #11
  %65 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %58, i64 0, i32 0, i32 9
  %66 = load i64, i64* %61, align 8
  %67 = and i64 %66, 16384
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %58, i64 0, i32 0, i32 9, i32 1, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %58, i64 0, i32 0, i32 9, i32 1, i32 0
  %73 = load i64, i64* %72, align 8
  %74 = tail call zeroext i1 @_ZN2v88internal13VirtualMemory14SetPermissionsEmmNS_13PageAllocator10PermissionE(%"class.v8::internal::VirtualMemory"* %65, i64 %73, i64 %71, i32 0) #11
  br label %76

75:                                               ; preds = %60
  tail call void @_ZN2v88internal13VirtualMemory4FreeEv(%"class.v8::internal::VirtualMemory"* %65) #11
  br label %76

76:                                               ; preds = %75, %69
  br i1 %64, label %138, label %77

77:                                               ; preds = %76
  %78 = ptrtoint %"class.v8::internal::MemoryChunk"* %58 to i64
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %39) #11
  %79 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %47, align 8
  %80 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %48, align 8
  %81 = icmp eq %"class.v8::internal::MemoryChunk"** %79, %80
  %82 = ptrtoint %"class.v8::internal::MemoryChunk"** %80 to i64
  br i1 %81, label %87, label %83

83:                                               ; preds = %77
  %84 = bitcast %"class.v8::internal::MemoryChunk"** %79 to i64*
  store i64 %78, i64* %84, align 8
  %85 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %79, i64 1
  %86 = ptrtoint %"class.v8::internal::MemoryChunk"** %85 to i64
  store i64 %86, i64* %49, align 8
  br label %137

87:                                               ; preds = %77
  %88 = ptrtoint %"class.v8::internal::MemoryChunk"** %79 to i64
  %89 = load i64, i64* %50, align 8
  %90 = sub i64 %88, %89
  %91 = ashr exact i64 %90, 3
  %92 = add nsw i64 %91, 1
  %93 = icmp ugt i64 %92, 2305843009213693951
  br i1 %93, label %182, label %94

94:                                               ; preds = %87
  %95 = sub i64 %82, %89
  %96 = ashr exact i64 %95, 3
  %97 = icmp ult i64 %96, 1152921504606846975
  br i1 %97, label %98, label %105

98:                                               ; preds = %94
  %99 = ashr exact i64 %95, 2
  %100 = icmp ult i64 %99, %92
  %101 = select i1 %100, i64 %92, i64 %99
  %102 = icmp eq i64 %101, 0
  br i1 %102, label %110, label %103

103:                                              ; preds = %98
  %104 = icmp ugt i64 %101, 2305843009213693951
  br i1 %104, label %195, label %105

105:                                              ; preds = %103, %94
  %106 = phi i64 [ %101, %103 ], [ 2305843009213693951, %94 ]
  %107 = shl i64 %106, 3
  %108 = tail call i8* @_Znwm(i64 %107) #13
  %109 = bitcast i8* %108 to %"class.v8::internal::MemoryChunk"**
  br label %110

110:                                              ; preds = %105, %98
  %111 = phi i64 [ %106, %105 ], [ 0, %98 ]
  %112 = phi %"class.v8::internal::MemoryChunk"** [ %109, %105 ], [ null, %98 ]
  %113 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %112, i64 %91
  %114 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %112, i64 %111
  %115 = ptrtoint %"class.v8::internal::MemoryChunk"** %114 to i64
  %116 = bitcast %"class.v8::internal::MemoryChunk"** %113 to i64*
  store i64 %78, i64* %116, align 8
  %117 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %113, i64 1
  %118 = ptrtoint %"class.v8::internal::MemoryChunk"** %117 to i64
  %119 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %52, align 8
  %120 = load i64, i64* %49, align 8
  %121 = ptrtoint %"class.v8::internal::MemoryChunk"** %119 to i64
  %122 = sub i64 %120, %121
  %123 = ashr exact i64 %122, 3
  %124 = sub nsw i64 0, %123
  %125 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %113, i64 %124
  %126 = ptrtoint %"class.v8::internal::MemoryChunk"** %125 to i64
  %127 = icmp sgt i64 %122, 0
  br i1 %127, label %128, label %132

128:                                              ; preds = %110
  %129 = bitcast %"class.v8::internal::MemoryChunk"** %125 to i8*
  %130 = bitcast %"class.v8::internal::MemoryChunk"** %119 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %130, i64 %122, i1 false) #11
  %131 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %52, align 8
  br label %132

132:                                              ; preds = %128, %110
  %133 = phi %"class.v8::internal::MemoryChunk"** [ %119, %110 ], [ %131, %128 ]
  store i64 %126, i64* %50, align 8
  store i64 %118, i64* %49, align 8
  store i64 %115, i64* %51, align 8
  %134 = icmp eq %"class.v8::internal::MemoryChunk"** %133, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %132
  %136 = bitcast %"class.v8::internal::MemoryChunk"** %133 to i8*
  tail call void @_ZdlPv(i8* %136) #13
  br label %137

137:                                              ; preds = %135, %132, %83
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %39) #11
  br label %138

138:                                              ; preds = %76, %137
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %39) #11
  %139 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %40, align 8
  %140 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %42, align 8
  %141 = icmp eq %"class.v8::internal::MemoryChunk"** %139, %140
  br i1 %141, label %142, label %55

142:                                              ; preds = %233, %138, %38
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %39) #11
  br label %237

143:                                              ; preds = %45, %233
  %144 = phi %"class.v8::internal::MemoryChunk"** [ %235, %233 ], [ %43, %45 ]
  %145 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %144, i64 -1
  %146 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %145, align 8
  store %"class.v8::internal::MemoryChunk"** %145, %"class.v8::internal::MemoryChunk"*** %42, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %39) #11
  %147 = icmp eq %"class.v8::internal::MemoryChunk"* %146, null
  br i1 %147, label %237, label %148

148:                                              ; preds = %143
  %149 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %146, i64 0, i32 0, i32 1
  %150 = load i64, i64* %149, align 8
  %151 = and i64 %150, 16384
  %152 = icmp eq i64 %151, 0
  tail call void @_ZN2v88internal11MemoryChunk25ReleaseAllAllocatedMemoryEv(%"class.v8::internal::MemoryChunk"* nonnull %146) #11
  %153 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %146, i64 0, i32 0, i32 9
  %154 = load i64, i64* %149, align 8
  %155 = and i64 %154, 16384
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %163, label %157

157:                                              ; preds = %148
  %158 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %146, i64 0, i32 0, i32 9, i32 1, i32 1
  %159 = load i64, i64* %158, align 8
  %160 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %146, i64 0, i32 0, i32 9, i32 1, i32 0
  %161 = load i64, i64* %160, align 8
  %162 = tail call zeroext i1 @_ZN2v88internal13VirtualMemory14SetPermissionsEmmNS_13PageAllocator10PermissionE(%"class.v8::internal::VirtualMemory"* %153, i64 %161, i64 %159, i32 0) #11
  br label %164

163:                                              ; preds = %148
  tail call void @_ZN2v88internal13VirtualMemory4FreeEv(%"class.v8::internal::VirtualMemory"* %153) #11
  br label %164

164:                                              ; preds = %157, %163
  br i1 %152, label %229, label %165

165:                                              ; preds = %164
  %166 = ptrtoint %"class.v8::internal::MemoryChunk"* %146 to i64
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %39) #11
  %167 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %47, align 8
  %168 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %48, align 8
  %169 = icmp eq %"class.v8::internal::MemoryChunk"** %167, %168
  %170 = ptrtoint %"class.v8::internal::MemoryChunk"** %168 to i64
  br i1 %169, label %175, label %171

171:                                              ; preds = %165
  %172 = bitcast %"class.v8::internal::MemoryChunk"** %167 to i64*
  store i64 %166, i64* %172, align 8
  %173 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %167, i64 1
  %174 = ptrtoint %"class.v8::internal::MemoryChunk"** %173 to i64
  store i64 %174, i64* %49, align 8
  br label %228

175:                                              ; preds = %165
  %176 = ptrtoint %"class.v8::internal::MemoryChunk"** %167 to i64
  %177 = load i64, i64* %50, align 8
  %178 = sub i64 %176, %177
  %179 = ashr exact i64 %178, 3
  %180 = add nsw i64 %179, 1
  %181 = icmp ugt i64 %180, 2305843009213693951
  br i1 %181, label %182, label %184

182:                                              ; preds = %175, %87
  %183 = bitcast %"class.std::__1::vector.1123"* %46 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %183) #12
  unreachable

184:                                              ; preds = %175
  %185 = sub i64 %170, %177
  %186 = ashr exact i64 %185, 3
  %187 = icmp ult i64 %186, 1152921504606846975
  br i1 %187, label %188, label %196

188:                                              ; preds = %184
  %189 = ashr exact i64 %185, 2
  %190 = icmp ult i64 %189, %180
  %191 = select i1 %190, i64 %180, i64 %189
  %192 = icmp eq i64 %191, 0
  br i1 %192, label %201, label %193

193:                                              ; preds = %188
  %194 = icmp ugt i64 %191, 2305843009213693951
  br i1 %194, label %195, label %196

195:                                              ; preds = %193, %103
  tail call void @abort() #12
  unreachable

196:                                              ; preds = %193, %184
  %197 = phi i64 [ %191, %193 ], [ 2305843009213693951, %184 ]
  %198 = shl i64 %197, 3
  %199 = tail call i8* @_Znwm(i64 %198) #13
  %200 = bitcast i8* %199 to %"class.v8::internal::MemoryChunk"**
  br label %201

201:                                              ; preds = %196, %188
  %202 = phi i64 [ %197, %196 ], [ 0, %188 ]
  %203 = phi %"class.v8::internal::MemoryChunk"** [ %200, %196 ], [ null, %188 ]
  %204 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %203, i64 %179
  %205 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %203, i64 %202
  %206 = ptrtoint %"class.v8::internal::MemoryChunk"** %205 to i64
  %207 = bitcast %"class.v8::internal::MemoryChunk"** %204 to i64*
  store i64 %166, i64* %207, align 8
  %208 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %204, i64 1
  %209 = ptrtoint %"class.v8::internal::MemoryChunk"** %208 to i64
  %210 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %52, align 8
  %211 = load i64, i64* %49, align 8
  %212 = ptrtoint %"class.v8::internal::MemoryChunk"** %210 to i64
  %213 = sub i64 %211, %212
  %214 = ashr exact i64 %213, 3
  %215 = sub nsw i64 0, %214
  %216 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %204, i64 %215
  %217 = ptrtoint %"class.v8::internal::MemoryChunk"** %216 to i64
  %218 = icmp sgt i64 %213, 0
  br i1 %218, label %219, label %223

219:                                              ; preds = %201
  %220 = bitcast %"class.v8::internal::MemoryChunk"** %216 to i8*
  %221 = bitcast %"class.v8::internal::MemoryChunk"** %210 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %220, i8* align 8 %221, i64 %213, i1 false) #11
  %222 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %52, align 8
  br label %223

223:                                              ; preds = %219, %201
  %224 = phi %"class.v8::internal::MemoryChunk"** [ %210, %201 ], [ %222, %219 ]
  store i64 %217, i64* %50, align 8
  store i64 %209, i64* %49, align 8
  store i64 %206, i64* %51, align 8
  %225 = icmp eq %"class.v8::internal::MemoryChunk"** %224, null
  br i1 %225, label %228, label %226

226:                                              ; preds = %223
  %227 = bitcast %"class.v8::internal::MemoryChunk"** %224 to i8*
  tail call void @_ZdlPv(i8* %227) #13
  br label %228

228:                                              ; preds = %171, %223, %226
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %39) #11
  br label %229

229:                                              ; preds = %228, %164
  %230 = load i1 (%"class.v8::JobDelegate"*)**, i1 (%"class.v8::JobDelegate"*)*** %54, align 8
  %231 = load i1 (%"class.v8::JobDelegate"*)*, i1 (%"class.v8::JobDelegate"*)** %230, align 8
  %232 = tail call zeroext i1 %231(%"class.v8::JobDelegate"* nonnull %1) #11
  br i1 %232, label %238, label %233

233:                                              ; preds = %229
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %39) #11
  %234 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %40, align 8
  %235 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %42, align 8
  %236 = icmp eq %"class.v8::internal::MemoryChunk"** %234, %235
  br i1 %236, label %142, label %143

237:                                              ; preds = %143, %55, %142
  tail call void @_ZN2v88internal15MemoryAllocator8Unmapper41PerformFreeMemoryOnQueuedNonRegularChunksEPNS_11JobDelegateE(%"class.v8::internal::MemoryAllocator::Unmapper"* %0, %"class.v8::JobDelegate"* null)
  br label %238

238:                                              ; preds = %229, %237
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15MemoryAllocator8Unmapper28CancelAndWaitForPendingTasksEv(%"class.v8::internal::MemoryAllocator::Unmapper"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %2, align 8
  %4 = icmp eq %"class.v8::JobHandle"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::JobHandle"* %3 to i1 (%"class.v8::JobHandle"*)***
  %7 = load i1 (%"class.v8::JobHandle"*)**, i1 (%"class.v8::JobHandle"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %7, i64 7
  %9 = load i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.v8::JobHandle"* nonnull %3) #11
  br i1 %10, label %11, label %17

11:                                               ; preds = %5
  %12 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %2, align 8
  %13 = bitcast %"class.v8::JobHandle"* %12 to void (%"class.v8::JobHandle"*)***
  %14 = load void (%"class.v8::JobHandle"*)**, void (%"class.v8::JobHandle"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %14, i64 3
  %16 = load void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %15, align 8
  tail call void %16(%"class.v8::JobHandle"* %12) #11
  br label %17

17:                                               ; preds = %1, %11, %5
  %18 = load i8, i8* @_ZN2v88internal19FLAG_trace_unmapperE, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = bitcast %"class.v8::internal::MemoryAllocator::Unmapper"* %0 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -41416
  %24 = inttoptr i64 %23 to i8*
  tail call void (i8*, i8*, ...) @_ZN2v88internal12PrintIsolateEPvPKcz(i8* %24, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0)) #11
  br label %25

25:                                               ; preds = %17, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15MemoryAllocator8Unmapper12PrepareForGCEv(%"class.v8::internal::MemoryAllocator::Unmapper"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v88internal15MemoryAllocator8Unmapper41PerformFreeMemoryOnQueuedNonRegularChunksEPNS_11JobDelegateE(%"class.v8::internal::MemoryAllocator::Unmapper"* %0, %"class.v8::JobDelegate"* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15MemoryAllocator8Unmapper41PerformFreeMemoryOnQueuedNonRegularChunksEPNS_11JobDelegateE(%"class.v8::internal::MemoryAllocator::Unmapper"*, %"class.v8::JobDelegate"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 2
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %3) #11
  %4 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 1, i32 0, i32 0
  %5 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 1, i32 0, i32 1
  %7 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %6, align 8
  %8 = icmp eq %"class.v8::internal::MemoryChunk"** %5, %7
  br i1 %8, label %34, label %9

9:                                                ; preds = %2
  %10 = icmp eq %"class.v8::JobDelegate"* %1, null
  %11 = bitcast %"class.v8::JobDelegate"* %1 to i1 (%"class.v8::JobDelegate"*)***
  br i1 %10, label %12, label %35

12:                                               ; preds = %9, %30
  %13 = phi %"class.v8::internal::MemoryChunk"** [ %32, %30 ], [ %7, %9 ]
  %14 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %13, i64 -1
  %15 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %14, align 8
  store %"class.v8::internal::MemoryChunk"** %14, %"class.v8::internal::MemoryChunk"*** %6, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %3) #11
  %16 = icmp eq %"class.v8::internal::MemoryChunk"* %15, null
  br i1 %16, label %61, label %17

17:                                               ; preds = %12
  tail call void @_ZN2v88internal11MemoryChunk25ReleaseAllAllocatedMemoryEv(%"class.v8::internal::MemoryChunk"* nonnull %15) #11
  %18 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %15, i64 0, i32 0, i32 9
  %19 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %15, i64 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 16384
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %29, label %23

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %15, i64 0, i32 0, i32 9, i32 1, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %15, i64 0, i32 0, i32 9, i32 1, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = tail call zeroext i1 @_ZN2v88internal13VirtualMemory14SetPermissionsEmmNS_13PageAllocator10PermissionE(%"class.v8::internal::VirtualMemory"* %18, i64 %27, i64 %25, i32 0) #11
  br label %30

29:                                               ; preds = %17
  tail call void @_ZN2v88internal13VirtualMemory4FreeEv(%"class.v8::internal::VirtualMemory"* %18) #11
  br label %30

30:                                               ; preds = %23, %29
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %3) #11
  %31 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %4, align 8
  %32 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %6, align 8
  %33 = icmp eq %"class.v8::internal::MemoryChunk"** %31, %32
  br i1 %33, label %34, label %12

34:                                               ; preds = %57, %30, %2
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %3) #11
  br label %61

35:                                               ; preds = %9, %57
  %36 = phi %"class.v8::internal::MemoryChunk"** [ %59, %57 ], [ %7, %9 ]
  %37 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %36, i64 -1
  %38 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %37, align 8
  store %"class.v8::internal::MemoryChunk"** %37, %"class.v8::internal::MemoryChunk"*** %6, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %3) #11
  %39 = icmp eq %"class.v8::internal::MemoryChunk"* %38, null
  br i1 %39, label %61, label %40

40:                                               ; preds = %35
  tail call void @_ZN2v88internal11MemoryChunk25ReleaseAllAllocatedMemoryEv(%"class.v8::internal::MemoryChunk"* nonnull %38) #11
  %41 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %38, i64 0, i32 0, i32 9
  %42 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %38, i64 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = and i64 %43, 16384
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %52, label %46

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %38, i64 0, i32 0, i32 9, i32 1, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %38, i64 0, i32 0, i32 9, i32 1, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = tail call zeroext i1 @_ZN2v88internal13VirtualMemory14SetPermissionsEmmNS_13PageAllocator10PermissionE(%"class.v8::internal::VirtualMemory"* %41, i64 %50, i64 %48, i32 0) #11
  br label %53

52:                                               ; preds = %40
  tail call void @_ZN2v88internal13VirtualMemory4FreeEv(%"class.v8::internal::VirtualMemory"* %41) #11
  br label %53

53:                                               ; preds = %52, %46
  %54 = load i1 (%"class.v8::JobDelegate"*)**, i1 (%"class.v8::JobDelegate"*)*** %11, align 8
  %55 = load i1 (%"class.v8::JobDelegate"*)*, i1 (%"class.v8::JobDelegate"*)** %54, align 8
  %56 = tail call zeroext i1 %55(%"class.v8::JobDelegate"* nonnull %1) #11
  br i1 %56, label %61, label %57

57:                                               ; preds = %53
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %3) #11
  %58 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %4, align 8
  %59 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %6, align 8
  %60 = icmp eq %"class.v8::internal::MemoryChunk"** %58, %59
  br i1 %60, label %34, label %35

61:                                               ; preds = %35, %53, %12, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15MemoryAllocator8Unmapper24EnsureUnmappingCompletedEv(%"class.v8::internal::MemoryAllocator::Unmapper"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %2, align 8
  %4 = icmp eq %"class.v8::JobHandle"* %3, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.v8::JobHandle"* %3 to i1 (%"class.v8::JobHandle"*)***
  %7 = load i1 (%"class.v8::JobHandle"*)**, i1 (%"class.v8::JobHandle"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %7, i64 7
  %9 = load i1 (%"class.v8::JobHandle"*)*, i1 (%"class.v8::JobHandle"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.v8::JobHandle"* nonnull %3) #11
  br i1 %10, label %11, label %17

11:                                               ; preds = %5
  %12 = load %"class.v8::JobHandle"*, %"class.v8::JobHandle"** %2, align 8
  %13 = bitcast %"class.v8::JobHandle"* %12 to void (%"class.v8::JobHandle"*)***
  %14 = load void (%"class.v8::JobHandle"*)**, void (%"class.v8::JobHandle"*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %14, i64 3
  %16 = load void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %15, align 8
  tail call void %16(%"class.v8::JobHandle"* %12) #11
  br label %17

17:                                               ; preds = %11, %5, %1
  %18 = load i8, i8* @_ZN2v88internal19FLAG_trace_unmapperE, align 1, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %17
  %21 = bitcast %"class.v8::internal::MemoryAllocator::Unmapper"* %0 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = add i64 %22, -41416
  %24 = inttoptr i64 %23 to i8*
  tail call void (i8*, i8*, ...) @_ZN2v88internal12PrintIsolateEPvPKcz(i8* %24, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @.str.1, i64 0, i64 0)) #11
  br label %25

25:                                               ; preds = %17, %20
  tail call void @_ZN2v88internal15MemoryAllocator8Unmapper31PerformFreeMemoryOnQueuedChunksILNS2_8FreeModeE1EEEvPNS_11JobDelegateE(%"class.v8::internal::MemoryAllocator::Unmapper"* %0, %"class.v8::JobDelegate"* null)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15MemoryAllocator8Unmapper31PerformFreeMemoryOnQueuedChunksILNS2_8FreeModeE1EEEvPNS_11JobDelegateE(%"class.v8::internal::MemoryAllocator::Unmapper"*, %"class.v8::JobDelegate"*) local_unnamed_addr #0 comdat align 2 {
  %3 = load i8, i8* @_ZN2v88internal19FLAG_trace_unmapperE, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %38, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.v8::internal::MemoryAllocator::Unmapper"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, -41416
  %9 = inttoptr i64 %8 to i8*
  %10 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 2
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %10) #11
  %11 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 0
  %12 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 0, i32 0, i32 1
  %13 = bitcast %"class.v8::internal::MemoryChunk"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.1123"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = lshr exact i64 %17, 3
  %19 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 1
  %20 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 1, i32 0, i32 1
  %21 = bitcast %"class.v8::internal::MemoryChunk"*** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = bitcast %"class.std::__1::vector.1123"* %19 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = sub i64 %22, %24
  %26 = lshr exact i64 %25, 3
  %27 = add nuw nsw i64 %26, %18
  %28 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 2
  %29 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 2, i32 0, i32 1
  %30 = bitcast %"class.v8::internal::MemoryChunk"*** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.std::__1::vector.1123"* %28 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = sub i64 %31, %33
  %35 = lshr exact i64 %34, 3
  %36 = add nuw nsw i64 %27, %35
  %37 = trunc i64 %36 to i32
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %10) #11
  tail call void (i8*, i8*, ...) @_ZN2v88internal12PrintIsolateEPvPKcz(i8* %9, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.9, i64 0, i64 0), i32 %37) #11
  br label %38

38:                                               ; preds = %2, %5
  %39 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 2
  %40 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 0, i32 0, i32 0
  %41 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 0, i32 0, i32 1
  %42 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 2
  %43 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 2, i32 0, i32 1
  %44 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 2, i32 0, i32 2, i32 0, i32 0
  %45 = bitcast %"class.v8::internal::MemoryChunk"*** %43 to i64*
  %46 = bitcast %"class.std::__1::vector.1123"* %42 to i64*
  %47 = bitcast %"class.v8::internal::MemoryChunk"*** %44 to i64*
  %48 = getelementptr inbounds %"class.std::__1::vector.1123", %"class.std::__1::vector.1123"* %42, i64 0, i32 0, i32 0
  %49 = icmp eq %"class.v8::JobDelegate"* %1, null
  %50 = bitcast %"class.v8::JobDelegate"* %1 to i1 (%"class.v8::JobDelegate"*)***
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %39) #11
  %51 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %40, align 8
  %52 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %41, align 8
  %53 = icmp eq %"class.v8::internal::MemoryChunk"** %51, %52
  br i1 %53, label %54, label %55

54:                                               ; preds = %168, %38
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %39) #11
  br label %60

55:                                               ; preds = %38, %168
  %56 = phi %"class.v8::internal::MemoryChunk"** [ %170, %168 ], [ %52, %38 ]
  %57 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %56, i64 -1
  %58 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %57, align 8
  store %"class.v8::internal::MemoryChunk"** %57, %"class.v8::internal::MemoryChunk"*** %41, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %39) #11
  %59 = icmp eq %"class.v8::internal::MemoryChunk"* %58, null
  br i1 %59, label %60, label %82

60:                                               ; preds = %55, %54
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %39) #11
  %61 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 2, i32 0, i32 0
  %62 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %61, align 8
  %63 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %43, align 8
  %64 = icmp eq %"class.v8::internal::MemoryChunk"** %62, %63
  br i1 %64, label %172, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 1
  br i1 %49, label %67, label %173

67:                                               ; preds = %65, %78
  %68 = phi %"class.v8::internal::MemoryChunk"** [ %80, %78 ], [ %63, %65 ]
  %69 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %68, i64 -1
  %70 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %69, align 8
  store %"class.v8::internal::MemoryChunk"** %69, %"class.v8::internal::MemoryChunk"*** %43, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %39) #11
  %71 = icmp eq %"class.v8::internal::MemoryChunk"* %70, null
  br i1 %71, label %193, label %72

72:                                               ; preds = %67
  %73 = load %"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::MemoryAllocator"** %66, align 8
  %74 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %73, i64 0, i32 1
  %75 = load %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"** %74, align 8
  %76 = bitcast %"class.v8::internal::MemoryChunk"* %70 to i8*
  %77 = tail call zeroext i1 @_ZN2v88internal9FreePagesEPNS_13PageAllocatorEPvm(%"class.v8::PageAllocator"* %75, i8* nonnull %76, i64 262144) #11
  br i1 %77, label %78, label %184, !prof !3

78:                                               ; preds = %72
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %39) #11
  %79 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %61, align 8
  %80 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %43, align 8
  %81 = icmp eq %"class.v8::internal::MemoryChunk"** %79, %80
  br i1 %81, label %172, label %67

82:                                               ; preds = %55
  %83 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %58, i64 0, i32 0, i32 1
  %84 = load i64, i64* %83, align 8
  %85 = and i64 %84, 16384
  %86 = icmp eq i64 %85, 0
  tail call void @_ZN2v88internal11MemoryChunk25ReleaseAllAllocatedMemoryEv(%"class.v8::internal::MemoryChunk"* nonnull %58) #11
  %87 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %58, i64 0, i32 0, i32 9
  %88 = load i64, i64* %83, align 8
  %89 = and i64 %88, 16384
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %97, label %91

91:                                               ; preds = %82
  %92 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %58, i64 0, i32 0, i32 9, i32 1, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %58, i64 0, i32 0, i32 9, i32 1, i32 0
  %95 = load i64, i64* %94, align 8
  %96 = tail call zeroext i1 @_ZN2v88internal13VirtualMemory14SetPermissionsEmmNS_13PageAllocator10PermissionE(%"class.v8::internal::VirtualMemory"* %87, i64 %95, i64 %93, i32 0) #11
  br label %98

97:                                               ; preds = %82
  tail call void @_ZN2v88internal13VirtualMemory4FreeEv(%"class.v8::internal::VirtualMemory"* %87) #11
  br label %98

98:                                               ; preds = %91, %97
  br i1 %86, label %163, label %99

99:                                               ; preds = %98
  %100 = ptrtoint %"class.v8::internal::MemoryChunk"* %58 to i64
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %39) #11
  %101 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %43, align 8
  %102 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %44, align 8
  %103 = icmp eq %"class.v8::internal::MemoryChunk"** %101, %102
  %104 = ptrtoint %"class.v8::internal::MemoryChunk"** %102 to i64
  br i1 %103, label %109, label %105

105:                                              ; preds = %99
  %106 = bitcast %"class.v8::internal::MemoryChunk"** %101 to i64*
  store i64 %100, i64* %106, align 8
  %107 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %101, i64 1
  %108 = ptrtoint %"class.v8::internal::MemoryChunk"** %107 to i64
  store i64 %108, i64* %45, align 8
  br label %162

109:                                              ; preds = %99
  %110 = ptrtoint %"class.v8::internal::MemoryChunk"** %101 to i64
  %111 = load i64, i64* %46, align 8
  %112 = sub i64 %110, %111
  %113 = ashr exact i64 %112, 3
  %114 = add nsw i64 %113, 1
  %115 = icmp ugt i64 %114, 2305843009213693951
  br i1 %115, label %116, label %118

116:                                              ; preds = %109
  %117 = bitcast %"class.std::__1::vector.1123"* %42 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %117) #12
  unreachable

118:                                              ; preds = %109
  %119 = sub i64 %104, %111
  %120 = ashr exact i64 %119, 3
  %121 = icmp ult i64 %120, 1152921504606846975
  br i1 %121, label %122, label %130

122:                                              ; preds = %118
  %123 = ashr exact i64 %119, 2
  %124 = icmp ult i64 %123, %114
  %125 = select i1 %124, i64 %114, i64 %123
  %126 = icmp eq i64 %125, 0
  br i1 %126, label %135, label %127

127:                                              ; preds = %122
  %128 = icmp ugt i64 %125, 2305843009213693951
  br i1 %128, label %129, label %130

129:                                              ; preds = %127
  tail call void @abort() #12
  unreachable

130:                                              ; preds = %127, %118
  %131 = phi i64 [ %125, %127 ], [ 2305843009213693951, %118 ]
  %132 = shl i64 %131, 3
  %133 = tail call i8* @_Znwm(i64 %132) #13
  %134 = bitcast i8* %133 to %"class.v8::internal::MemoryChunk"**
  br label %135

135:                                              ; preds = %130, %122
  %136 = phi i64 [ %131, %130 ], [ 0, %122 ]
  %137 = phi %"class.v8::internal::MemoryChunk"** [ %134, %130 ], [ null, %122 ]
  %138 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %137, i64 %113
  %139 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %137, i64 %136
  %140 = ptrtoint %"class.v8::internal::MemoryChunk"** %139 to i64
  %141 = bitcast %"class.v8::internal::MemoryChunk"** %138 to i64*
  store i64 %100, i64* %141, align 8
  %142 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %138, i64 1
  %143 = ptrtoint %"class.v8::internal::MemoryChunk"** %142 to i64
  %144 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %48, align 8
  %145 = load i64, i64* %45, align 8
  %146 = ptrtoint %"class.v8::internal::MemoryChunk"** %144 to i64
  %147 = sub i64 %145, %146
  %148 = ashr exact i64 %147, 3
  %149 = sub nsw i64 0, %148
  %150 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %138, i64 %149
  %151 = ptrtoint %"class.v8::internal::MemoryChunk"** %150 to i64
  %152 = icmp sgt i64 %147, 0
  br i1 %152, label %153, label %157

153:                                              ; preds = %135
  %154 = bitcast %"class.v8::internal::MemoryChunk"** %150 to i8*
  %155 = bitcast %"class.v8::internal::MemoryChunk"** %144 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %154, i8* align 8 %155, i64 %147, i1 false) #11
  %156 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %48, align 8
  br label %157

157:                                              ; preds = %153, %135
  %158 = phi %"class.v8::internal::MemoryChunk"** [ %144, %135 ], [ %156, %153 ]
  store i64 %151, i64* %46, align 8
  store i64 %143, i64* %45, align 8
  store i64 %140, i64* %47, align 8
  %159 = icmp eq %"class.v8::internal::MemoryChunk"** %158, null
  br i1 %159, label %162, label %160

160:                                              ; preds = %157
  %161 = bitcast %"class.v8::internal::MemoryChunk"** %158 to i8*
  tail call void @_ZdlPv(i8* %161) #13
  br label %162

162:                                              ; preds = %105, %157, %160
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %39) #11
  br label %163

163:                                              ; preds = %98, %162
  br i1 %49, label %168, label %164

164:                                              ; preds = %163
  %165 = load i1 (%"class.v8::JobDelegate"*)**, i1 (%"class.v8::JobDelegate"*)*** %50, align 8
  %166 = load i1 (%"class.v8::JobDelegate"*)*, i1 (%"class.v8::JobDelegate"*)** %165, align 8
  %167 = tail call zeroext i1 %166(%"class.v8::JobDelegate"* nonnull %1) #11
  br i1 %167, label %194, label %168

168:                                              ; preds = %163, %164
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %39) #11
  %169 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %40, align 8
  %170 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %41, align 8
  %171 = icmp eq %"class.v8::internal::MemoryChunk"** %169, %170
  br i1 %171, label %54, label %55

172:                                              ; preds = %189, %78, %60
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %39) #11
  br label %193

173:                                              ; preds = %65, %189
  %174 = phi %"class.v8::internal::MemoryChunk"** [ %191, %189 ], [ %63, %65 ]
  %175 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %174, i64 -1
  %176 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %175, align 8
  store %"class.v8::internal::MemoryChunk"** %175, %"class.v8::internal::MemoryChunk"*** %43, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %39) #11
  %177 = icmp eq %"class.v8::internal::MemoryChunk"* %176, null
  br i1 %177, label %193, label %178

178:                                              ; preds = %173
  %179 = load %"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::MemoryAllocator"** %66, align 8
  %180 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %179, i64 0, i32 1
  %181 = load %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"** %180, align 8
  %182 = bitcast %"class.v8::internal::MemoryChunk"* %176 to i8*
  %183 = tail call zeroext i1 @_ZN2v88internal9FreePagesEPNS_13PageAllocatorEPvm(%"class.v8::PageAllocator"* %181, i8* nonnull %182, i64 262144) #11
  br i1 %183, label %185, label %184, !prof !3

184:                                              ; preds = %178, %72
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

185:                                              ; preds = %178
  %186 = load i1 (%"class.v8::JobDelegate"*)**, i1 (%"class.v8::JobDelegate"*)*** %50, align 8
  %187 = load i1 (%"class.v8::JobDelegate"*)*, i1 (%"class.v8::JobDelegate"*)** %186, align 8
  %188 = tail call zeroext i1 %187(%"class.v8::JobDelegate"* nonnull %1) #11
  br i1 %188, label %194, label %189

189:                                              ; preds = %185
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %39) #11
  %190 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %61, align 8
  %191 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %43, align 8
  %192 = icmp eq %"class.v8::internal::MemoryChunk"** %190, %191
  br i1 %192, label %172, label %173

193:                                              ; preds = %173, %67, %172
  tail call void @_ZN2v88internal15MemoryAllocator8Unmapper41PerformFreeMemoryOnQueuedNonRegularChunksEPNS_11JobDelegateE(%"class.v8::internal::MemoryAllocator::Unmapper"* %0, %"class.v8::JobDelegate"* null)
  br label %194

194:                                              ; preds = %164, %185, %193
  ret void
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal15MemoryAllocator8Unmapper23NumberOfCommittedChunksEv(%"class.v8::internal::MemoryAllocator::Unmapper"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 2
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %2) #11
  %3 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 0
  %4 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 0, i32 0, i32 1
  %5 = bitcast %"class.v8::internal::MemoryChunk"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.1123"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = ashr exact i64 %9, 3
  %11 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 1
  %12 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 1, i32 0, i32 1
  %13 = bitcast %"class.v8::internal::MemoryChunk"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.1123"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = ashr exact i64 %17, 3
  %19 = add nsw i64 %18, %10
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2) #11
  ret i64 %19
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal15MemoryAllocator8Unmapper14NumberOfChunksEv(%"class.v8::internal::MemoryAllocator::Unmapper"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 2
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %2) #11
  %3 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 0
  %4 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 0, i32 0, i32 1
  %5 = bitcast %"class.v8::internal::MemoryChunk"*** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.1123"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = lshr exact i64 %9, 3
  %11 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 1
  %12 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 1, i32 0, i32 1
  %13 = bitcast %"class.v8::internal::MemoryChunk"*** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::vector.1123"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = lshr exact i64 %17, 3
  %19 = add nuw nsw i64 %18, %10
  %20 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 2
  %21 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 2, i32 0, i32 1
  %22 = bitcast %"class.v8::internal::MemoryChunk"*** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.1123"* %20 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = lshr exact i64 %26, 3
  %28 = add nuw nsw i64 %27, %19
  %29 = trunc i64 %28 to i32
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2) #11
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal15MemoryAllocator8Unmapper23CommittedBufferedMemoryEv(%"class.v8::internal::MemoryAllocator::Unmapper"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 2
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %2) #11
  %3 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 0, i32 0, i32 0
  %4 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 0, i32 0, i32 1
  %6 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::MemoryChunk"** %4, %6
  br i1 %7, label %36, label %8

8:                                                ; preds = %1
  %9 = ptrtoint %"class.v8::internal::MemoryChunk"** %4 to i64
  %10 = getelementptr %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %6, i64 -1
  %11 = ptrtoint %"class.v8::internal::MemoryChunk"** %10 to i64
  %12 = sub i64 %11, %9
  %13 = lshr i64 %12, 3
  %14 = add nuw nsw i64 %13, 1
  %15 = and i64 %14, 7
  %16 = icmp ult i64 %12, 56
  br i1 %16, label %19, label %17

17:                                               ; preds = %8
  %18 = sub nsw i64 %14, %15
  br label %69

19:                                               ; preds = %69, %8
  %20 = phi i64 [ undef, %8 ], [ %119, %69 ]
  %21 = phi i64 [ 0, %8 ], [ %119, %69 ]
  %22 = phi %"class.v8::internal::MemoryChunk"** [ %4, %8 ], [ %120, %69 ]
  %23 = icmp eq i64 %15, 0
  br i1 %23, label %36, label %24

24:                                               ; preds = %19, %24
  %25 = phi i64 [ %32, %24 ], [ %21, %19 ]
  %26 = phi %"class.v8::internal::MemoryChunk"** [ %33, %24 ], [ %22, %19 ]
  %27 = phi i64 [ %34, %24 ], [ %15, %19 ]
  %28 = bitcast %"class.v8::internal::MemoryChunk"** %26 to %"class.v8::internal::BasicMemoryChunk"**
  %29 = load %"class.v8::internal::BasicMemoryChunk"*, %"class.v8::internal::BasicMemoryChunk"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %29, i64 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, %25
  %33 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %26, i64 1
  %34 = add i64 %27, -1
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %24, !llvm.loop !5

36:                                               ; preds = %19, %24, %1
  %37 = phi i64 [ 0, %1 ], [ %20, %19 ], [ %32, %24 ]
  %38 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 1, i32 0, i32 0
  %39 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %38, align 8
  %40 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 1, i32 0, i32 1
  %41 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %40, align 8
  %42 = icmp eq %"class.v8::internal::MemoryChunk"** %39, %41
  br i1 %42, label %123, label %43

43:                                               ; preds = %36
  %44 = ptrtoint %"class.v8::internal::MemoryChunk"** %39 to i64
  %45 = getelementptr %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %41, i64 -1
  %46 = ptrtoint %"class.v8::internal::MemoryChunk"** %45 to i64
  %47 = sub i64 %46, %44
  %48 = lshr i64 %47, 3
  %49 = add nuw nsw i64 %48, 1
  %50 = and i64 %49, 7
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %64, label %52

52:                                               ; preds = %43, %52
  %53 = phi i64 [ %60, %52 ], [ %37, %43 ]
  %54 = phi %"class.v8::internal::MemoryChunk"** [ %61, %52 ], [ %39, %43 ]
  %55 = phi i64 [ %62, %52 ], [ %50, %43 ]
  %56 = bitcast %"class.v8::internal::MemoryChunk"** %54 to %"class.v8::internal::BasicMemoryChunk"**
  %57 = load %"class.v8::internal::BasicMemoryChunk"*, %"class.v8::internal::BasicMemoryChunk"** %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %57, i64 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, %53
  %61 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %54, i64 1
  %62 = add i64 %55, -1
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %52, !llvm.loop !7

64:                                               ; preds = %52, %43
  %65 = phi i64 [ undef, %43 ], [ %60, %52 ]
  %66 = phi i64 [ %37, %43 ], [ %60, %52 ]
  %67 = phi %"class.v8::internal::MemoryChunk"** [ %39, %43 ], [ %61, %52 ]
  %68 = icmp ult i64 %47, 56
  br i1 %68, label %123, label %125

69:                                               ; preds = %69, %17
  %70 = phi i64 [ 0, %17 ], [ %119, %69 ]
  %71 = phi %"class.v8::internal::MemoryChunk"** [ %4, %17 ], [ %120, %69 ]
  %72 = phi i64 [ %18, %17 ], [ %121, %69 ]
  %73 = bitcast %"class.v8::internal::MemoryChunk"** %71 to %"class.v8::internal::BasicMemoryChunk"**
  %74 = load %"class.v8::internal::BasicMemoryChunk"*, %"class.v8::internal::BasicMemoryChunk"** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %74, i64 0, i32 0
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, %70
  %78 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %71, i64 1
  %79 = bitcast %"class.v8::internal::MemoryChunk"** %78 to %"class.v8::internal::BasicMemoryChunk"**
  %80 = load %"class.v8::internal::BasicMemoryChunk"*, %"class.v8::internal::BasicMemoryChunk"** %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %80, i64 0, i32 0
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, %77
  %84 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %71, i64 2
  %85 = bitcast %"class.v8::internal::MemoryChunk"** %84 to %"class.v8::internal::BasicMemoryChunk"**
  %86 = load %"class.v8::internal::BasicMemoryChunk"*, %"class.v8::internal::BasicMemoryChunk"** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %86, i64 0, i32 0
  %88 = load i64, i64* %87, align 8
  %89 = add i64 %88, %83
  %90 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %71, i64 3
  %91 = bitcast %"class.v8::internal::MemoryChunk"** %90 to %"class.v8::internal::BasicMemoryChunk"**
  %92 = load %"class.v8::internal::BasicMemoryChunk"*, %"class.v8::internal::BasicMemoryChunk"** %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %92, i64 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, %89
  %96 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %71, i64 4
  %97 = bitcast %"class.v8::internal::MemoryChunk"** %96 to %"class.v8::internal::BasicMemoryChunk"**
  %98 = load %"class.v8::internal::BasicMemoryChunk"*, %"class.v8::internal::BasicMemoryChunk"** %97, align 8
  %99 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %98, i64 0, i32 0
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %100, %95
  %102 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %71, i64 5
  %103 = bitcast %"class.v8::internal::MemoryChunk"** %102 to %"class.v8::internal::BasicMemoryChunk"**
  %104 = load %"class.v8::internal::BasicMemoryChunk"*, %"class.v8::internal::BasicMemoryChunk"** %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %104, i64 0, i32 0
  %106 = load i64, i64* %105, align 8
  %107 = add i64 %106, %101
  %108 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %71, i64 6
  %109 = bitcast %"class.v8::internal::MemoryChunk"** %108 to %"class.v8::internal::BasicMemoryChunk"**
  %110 = load %"class.v8::internal::BasicMemoryChunk"*, %"class.v8::internal::BasicMemoryChunk"** %109, align 8
  %111 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %110, i64 0, i32 0
  %112 = load i64, i64* %111, align 8
  %113 = add i64 %112, %107
  %114 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %71, i64 7
  %115 = bitcast %"class.v8::internal::MemoryChunk"** %114 to %"class.v8::internal::BasicMemoryChunk"**
  %116 = load %"class.v8::internal::BasicMemoryChunk"*, %"class.v8::internal::BasicMemoryChunk"** %115, align 8
  %117 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %116, i64 0, i32 0
  %118 = load i64, i64* %117, align 8
  %119 = add i64 %118, %113
  %120 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %71, i64 8
  %121 = add i64 %72, -8
  %122 = icmp eq i64 %121, 0
  br i1 %122, label %19, label %69

123:                                              ; preds = %64, %125, %36
  %124 = phi i64 [ %37, %36 ], [ %65, %64 ], [ %174, %125 ]
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2) #11
  ret i64 %124

125:                                              ; preds = %64, %125
  %126 = phi i64 [ %174, %125 ], [ %66, %64 ]
  %127 = phi %"class.v8::internal::MemoryChunk"** [ %175, %125 ], [ %67, %64 ]
  %128 = bitcast %"class.v8::internal::MemoryChunk"** %127 to %"class.v8::internal::BasicMemoryChunk"**
  %129 = load %"class.v8::internal::BasicMemoryChunk"*, %"class.v8::internal::BasicMemoryChunk"** %128, align 8
  %130 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %129, i64 0, i32 0
  %131 = load i64, i64* %130, align 8
  %132 = add i64 %131, %126
  %133 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %127, i64 1
  %134 = bitcast %"class.v8::internal::MemoryChunk"** %133 to %"class.v8::internal::BasicMemoryChunk"**
  %135 = load %"class.v8::internal::BasicMemoryChunk"*, %"class.v8::internal::BasicMemoryChunk"** %134, align 8
  %136 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %135, i64 0, i32 0
  %137 = load i64, i64* %136, align 8
  %138 = add i64 %137, %132
  %139 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %127, i64 2
  %140 = bitcast %"class.v8::internal::MemoryChunk"** %139 to %"class.v8::internal::BasicMemoryChunk"**
  %141 = load %"class.v8::internal::BasicMemoryChunk"*, %"class.v8::internal::BasicMemoryChunk"** %140, align 8
  %142 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %141, i64 0, i32 0
  %143 = load i64, i64* %142, align 8
  %144 = add i64 %143, %138
  %145 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %127, i64 3
  %146 = bitcast %"class.v8::internal::MemoryChunk"** %145 to %"class.v8::internal::BasicMemoryChunk"**
  %147 = load %"class.v8::internal::BasicMemoryChunk"*, %"class.v8::internal::BasicMemoryChunk"** %146, align 8
  %148 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %147, i64 0, i32 0
  %149 = load i64, i64* %148, align 8
  %150 = add i64 %149, %144
  %151 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %127, i64 4
  %152 = bitcast %"class.v8::internal::MemoryChunk"** %151 to %"class.v8::internal::BasicMemoryChunk"**
  %153 = load %"class.v8::internal::BasicMemoryChunk"*, %"class.v8::internal::BasicMemoryChunk"** %152, align 8
  %154 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %153, i64 0, i32 0
  %155 = load i64, i64* %154, align 8
  %156 = add i64 %155, %150
  %157 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %127, i64 5
  %158 = bitcast %"class.v8::internal::MemoryChunk"** %157 to %"class.v8::internal::BasicMemoryChunk"**
  %159 = load %"class.v8::internal::BasicMemoryChunk"*, %"class.v8::internal::BasicMemoryChunk"** %158, align 8
  %160 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %159, i64 0, i32 0
  %161 = load i64, i64* %160, align 8
  %162 = add i64 %161, %156
  %163 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %127, i64 6
  %164 = bitcast %"class.v8::internal::MemoryChunk"** %163 to %"class.v8::internal::BasicMemoryChunk"**
  %165 = load %"class.v8::internal::BasicMemoryChunk"*, %"class.v8::internal::BasicMemoryChunk"** %164, align 8
  %166 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %165, i64 0, i32 0
  %167 = load i64, i64* %166, align 8
  %168 = add i64 %167, %162
  %169 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %127, i64 7
  %170 = bitcast %"class.v8::internal::MemoryChunk"** %169 to %"class.v8::internal::BasicMemoryChunk"**
  %171 = load %"class.v8::internal::BasicMemoryChunk"*, %"class.v8::internal::BasicMemoryChunk"** %170, align 8
  %172 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %171, i64 0, i32 0
  %173 = load i64, i64* %172, align 8
  %174 = add i64 %173, %168
  %175 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %127, i64 8
  %176 = icmp eq %"class.v8::internal::MemoryChunk"** %175, %41
  br i1 %176, label %123, label %125
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal15MemoryAllocator12CommitMemoryEPNS0_13VirtualMemoryE(%"class.v8::internal::MemoryAllocator"* nocapture, %"class.v8::internal::VirtualMemory"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::VirtualMemory", %"class.v8::internal::VirtualMemory"* %1, i64 0, i32 1, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::VirtualMemory", %"class.v8::internal::VirtualMemory"* %1, i64 0, i32 1, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = tail call zeroext i1 @_ZN2v88internal13VirtualMemory14SetPermissionsEmmNS_13PageAllocator10PermissionE(%"class.v8::internal::VirtualMemory"* %1, i64 %4, i64 %6, i32 2) #11
  br i1 %7, label %8, label %31

8:                                                ; preds = %2
  %9 = add i64 %6, %4
  %10 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load atomic i64, i64* %10 monotonic, align 8
  %12 = icmp ugt i64 %11, %4
  br i1 %12, label %13, label %20

13:                                               ; preds = %8, %17
  %14 = phi i64 [ %18, %17 ], [ %11, %8 ]
  %15 = cmpxchg weak i64* %10, i64 %14, i64 %4 acq_rel monotonic
  %16 = extractvalue { i64, i1 } %15, 1
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = extractvalue { i64, i1 } %15, 0
  %19 = icmp ugt i64 %18, %4
  br i1 %19, label %13, label %20

20:                                               ; preds = %17, %13, %8
  %21 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load atomic i64, i64* %21 monotonic, align 8
  %23 = icmp ult i64 %22, %9
  br i1 %23, label %24, label %31

24:                                               ; preds = %20, %28
  %25 = phi i64 [ %29, %28 ], [ %22, %20 ]
  %26 = cmpxchg weak i64* %21, i64 %25, i64 %9 acq_rel monotonic
  %27 = extractvalue { i64, i1 } %26, 1
  br i1 %27, label %31, label %28

28:                                               ; preds = %24
  %29 = extractvalue { i64, i1 } %26, 0
  %30 = icmp ult i64 %29, %9
  br i1 %30, label %24, label %31

31:                                               ; preds = %28, %24, %20, %2
  %32 = phi i1 [ false, %2 ], [ true, %20 ], [ true, %24 ], [ true, %28 ]
  ret i1 %32
}

declare zeroext i1 @_ZN2v88internal13VirtualMemory14SetPermissionsEmmNS_13PageAllocator10PermissionE(%"class.v8::internal::VirtualMemory"*, i64, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal15MemoryAllocator14UncommitMemoryEPNS0_13VirtualMemoryE(%"class.v8::internal::MemoryAllocator"* nocapture readnone, %"class.v8::internal::VirtualMemory"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::VirtualMemory", %"class.v8::internal::VirtualMemory"* %1, i64 0, i32 1, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::VirtualMemory", %"class.v8::internal::VirtualMemory"* %1, i64 0, i32 1, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = tail call zeroext i1 @_ZN2v88internal13VirtualMemory14SetPermissionsEmmNS_13PageAllocator10PermissionE(%"class.v8::internal::VirtualMemory"* %1, i64 %6, i64 %4, i32 0) #11
  ret i1 %7
}

declare zeroext i1 @_ZN2v88internal9FreePagesEPNS_13PageAllocatorEPvm(%"class.v8::PageAllocator"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal15MemoryAllocator21AllocateAlignedMemoryEmmmNS0_13ExecutabilityEPvPNS0_13VirtualMemoryE(%"class.v8::internal::MemoryAllocator"* nocapture, i64, i64, i64, i32, i8*, %"class.v8::internal::VirtualMemory"* nocapture) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.v8::internal::VirtualMemory", align 8
  %9 = icmp eq i32 %4, 1
  %10 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 1
  %12 = select i1 %9, %"class.v8::PageAllocator"** %10, %"class.v8::PageAllocator"** %11
  %13 = load %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"** %12, align 8
  %14 = bitcast %"class.v8::internal::VirtualMemory"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #11
  call void @_ZN2v88internal13VirtualMemoryC1EPNS_13PageAllocatorEmPvmNS1_13JitPermissionE(%"class.v8::internal::VirtualMemory"* nonnull %8, %"class.v8::PageAllocator"* %13, i64 %1, i8* %5, i64 %3, i32 0) #11
  %15 = getelementptr inbounds %"class.v8::internal::VirtualMemory", %"class.v8::internal::VirtualMemory"* %8, i64 0, i32 1, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %60, label %18

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.v8::internal::VirtualMemory", %"class.v8::internal::VirtualMemory"* %8, i64 0, i32 1, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw add i64* %21, i64 %20 seq_cst
  br i1 %9, label %23, label %25

23:                                               ; preds = %18
  %24 = call zeroext i1 @_ZN2v88internal15MemoryAllocator22CommitExecutableMemoryEPNS0_13VirtualMemoryEmmm(%"class.v8::internal::MemoryAllocator"* %0, %"class.v8::internal::VirtualMemory"* nonnull %8, i64 %16, i64 %2, i64 %1)
  br i1 %24, label %52, label %50

25:                                               ; preds = %18
  %26 = call zeroext i1 @_ZN2v88internal13VirtualMemory14SetPermissionsEmmNS_13PageAllocator10PermissionE(%"class.v8::internal::VirtualMemory"* nonnull %8, i64 %16, i64 %2, i32 2) #11
  br i1 %26, label %27, label %50

27:                                               ; preds = %25
  %28 = add i64 %16, %2
  %29 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i64, i64* %29 monotonic, align 8
  %31 = icmp ugt i64 %30, %16
  br i1 %31, label %32, label %39

32:                                               ; preds = %27, %36
  %33 = phi i64 [ %37, %36 ], [ %30, %27 ]
  %34 = cmpxchg weak i64* %29, i64 %33, i64 %16 acq_rel monotonic
  %35 = extractvalue { i64, i1 } %34, 1
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = extractvalue { i64, i1 } %34, 0
  %38 = icmp ugt i64 %37, %16
  br i1 %38, label %32, label %39

39:                                               ; preds = %36, %32, %27
  %40 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i64, i64* %40 monotonic, align 8
  %42 = icmp ult i64 %41, %28
  br i1 %42, label %43, label %52

43:                                               ; preds = %39, %47
  %44 = phi i64 [ %48, %47 ], [ %41, %39 ]
  %45 = cmpxchg weak i64* %40, i64 %44, i64 %28 acq_rel monotonic
  %46 = extractvalue { i64, i1 } %45, 1
  br i1 %46, label %52, label %47

47:                                               ; preds = %43
  %48 = extractvalue { i64, i1 } %45, 0
  %49 = icmp ult i64 %48, %28
  br i1 %49, label %43, label %52

50:                                               ; preds = %25, %23
  call void @_ZN2v88internal13VirtualMemory4FreeEv(%"class.v8::internal::VirtualMemory"* nonnull %8) #11
  %51 = atomicrmw sub i64* %21, i64 %1 seq_cst
  br label %60

52:                                               ; preds = %43, %47, %39, %23
  %53 = bitcast %"class.v8::internal::VirtualMemory"* %8 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.v8::internal::VirtualMemory"* %6 to i64*
  store i64 %54, i64* %55, align 8
  %56 = getelementptr inbounds %"class.v8::internal::VirtualMemory", %"class.v8::internal::VirtualMemory"* %8, i64 0, i32 1
  %57 = getelementptr inbounds %"class.v8::internal::VirtualMemory", %"class.v8::internal::VirtualMemory"* %6, i64 0, i32 1
  %58 = bitcast %"class.v8::base::AddressRegion"* %57 to i8*
  %59 = bitcast %"class.v8::base::AddressRegion"* %56 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 16, i1 false) #11
  call void @_ZN2v88internal13VirtualMemory5ResetEv(%"class.v8::internal::VirtualMemory"* nonnull %8) #11
  br label %60

60:                                               ; preds = %7, %50, %52
  %61 = phi i64 [ 0, %7 ], [ 0, %50 ], [ %16, %52 ]
  call void @_ZN2v88internal13VirtualMemoryD1Ev(%"class.v8::internal::VirtualMemory"* nonnull %8) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #11
  ret i64 %61
}

declare void @_ZN2v88internal13VirtualMemoryC1EPNS_13PageAllocatorEmPvmNS1_13JitPermissionE(%"class.v8::internal::VirtualMemory"*, %"class.v8::PageAllocator"*, i64, i8*, i64, i32) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal15MemoryAllocator22CommitExecutableMemoryEPNS0_13VirtualMemoryEmmm(%"class.v8::internal::MemoryAllocator"* nocapture, %"class.v8::internal::VirtualMemory"*, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %6 = load i32, i32* @_ZN2v88internal20FLAG_v8_os_page_sizeE, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %5
  %9 = shl nsw i32 %6, 10
  %10 = sext i32 %9 to i64
  br label %13

11:                                               ; preds = %5
  %12 = tail call i64 @_ZN2v88internal14CommitPageSizeEv() #11
  br label %13

13:                                               ; preds = %8, %11
  %14 = phi i64 [ %10, %8 ], [ %12, %11 ]
  %15 = tail call i64 @_ZN2v88internal17MemoryChunkLayout17CodePageGuardSizeEv() #11
  %16 = tail call i64 @_ZN2v88internal17MemoryChunkLayout24CodePageGuardStartOffsetEv() #11
  %17 = tail call i64 @_ZN2v88internal17MemoryChunkLayout27ObjectStartOffsetInCodePageEv() #11
  %18 = add i64 %17, %2
  %19 = add i64 %4, %2
  %20 = sub i64 %19, %15
  %21 = tail call zeroext i1 @_ZN2v88internal13VirtualMemory14SetPermissionsEmmNS_13PageAllocator10PermissionE(%"class.v8::internal::VirtualMemory"* %1, i64 %2, i64 %16, i32 2) #11
  br i1 %21, label %22, label %57

22:                                               ; preds = %13
  %23 = add i64 %16, %2
  %24 = tail call zeroext i1 @_ZN2v88internal13VirtualMemory14SetPermissionsEmmNS_13PageAllocator10PermissionE(%"class.v8::internal::VirtualMemory"* %1, i64 %23, i64 %14, i32 0) #11
  br i1 %24, label %25, label %55

25:                                               ; preds = %22
  %26 = sub i64 %3, %16
  %27 = tail call zeroext i1 @_ZN2v88internal13VirtualMemory14SetPermissionsEmmNS_13PageAllocator10PermissionE(%"class.v8::internal::VirtualMemory"* %1, i64 %18, i64 %26, i32 2) #11
  br i1 %27, label %28, label %55

28:                                               ; preds = %25
  %29 = tail call zeroext i1 @_ZN2v88internal13VirtualMemory14SetPermissionsEmmNS_13PageAllocator10PermissionE(%"class.v8::internal::VirtualMemory"* %1, i64 %20, i64 %14, i32 0) #11
  br i1 %29, label %30, label %53

30:                                               ; preds = %28
  %31 = add i64 %18, %3
  %32 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i64, i64* %32 monotonic, align 8
  %34 = icmp ugt i64 %33, %2
  br i1 %34, label %35, label %42

35:                                               ; preds = %30, %39
  %36 = phi i64 [ %40, %39 ], [ %33, %30 ]
  %37 = cmpxchg weak i64* %32, i64 %36, i64 %2 acq_rel monotonic
  %38 = extractvalue { i64, i1 } %37, 1
  br i1 %38, label %42, label %39

39:                                               ; preds = %35
  %40 = extractvalue { i64, i1 } %37, 0
  %41 = icmp ugt i64 %40, %2
  br i1 %41, label %35, label %42

42:                                               ; preds = %39, %35, %30
  %43 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i64, i64* %43 monotonic, align 8
  %45 = icmp ult i64 %44, %31
  br i1 %45, label %46, label %57

46:                                               ; preds = %42, %50
  %47 = phi i64 [ %51, %50 ], [ %44, %42 ]
  %48 = cmpxchg weak i64* %43, i64 %47, i64 %31 acq_rel monotonic
  %49 = extractvalue { i64, i1 } %48, 1
  br i1 %49, label %57, label %50

50:                                               ; preds = %46
  %51 = extractvalue { i64, i1 } %48, 0
  %52 = icmp ult i64 %51, %31
  br i1 %52, label %46, label %57

53:                                               ; preds = %28
  %54 = tail call zeroext i1 @_ZN2v88internal13VirtualMemory14SetPermissionsEmmNS_13PageAllocator10PermissionE(%"class.v8::internal::VirtualMemory"* %1, i64 %18, i64 %3, i32 0) #11
  br label %55

55:                                               ; preds = %25, %53, %22
  %56 = tail call zeroext i1 @_ZN2v88internal13VirtualMemory14SetPermissionsEmmNS_13PageAllocator10PermissionE(%"class.v8::internal::VirtualMemory"* %1, i64 %2, i64 %16, i32 0) #11
  br label %57

57:                                               ; preds = %50, %46, %42, %13, %55
  %58 = phi i1 [ false, %55 ], [ false, %13 ], [ true, %42 ], [ true, %46 ], [ true, %50 ]
  ret i1 %58
}

; Function Attrs: nounwind
declare void @_ZN2v88internal13VirtualMemoryD1Ev(%"class.v8::internal::VirtualMemory"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::BasicMemoryChunk"* @_ZN2v88internal15MemoryAllocator18AllocateBasicChunkEmmNS0_13ExecutabilityEPNS0_9BaseSpaceE(%"class.v8::internal::MemoryAllocator"*, i64, i64, i32, %"class.v8::internal::BaseSpace"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.v8::internal::VirtualMemory", align 8
  %7 = alloca %"class.v8::internal::VirtualMemory", align 8
  %8 = alloca %"class.v8::internal::VirtualMemory", align 8
  %9 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 0
  %10 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %10, i64 0, i32 2
  %12 = bitcast %"class.v8::internal::VirtualMemory"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #11
  call void @_ZN2v88internal13VirtualMemoryC1Ev(%"class.v8::internal::VirtualMemory"* nonnull %7) #11
  %13 = call i8* @_ZN2v88internal17GetRandomMmapAddrEv() #11
  %14 = ptrtoint i8* %13 to i64
  %15 = and i64 %14, -262144
  %16 = inttoptr i64 %15 to i8*
  %17 = icmp eq i32 %3, 1
  br i1 %17, label %18, label %83

18:                                               ; preds = %5
  %19 = call i64 @_ZN2v88internal17MemoryChunkLayout27ObjectStartOffsetInCodePageEv() #11
  %20 = call i64 @_ZN2v88internal17MemoryChunkLayout17CodePageGuardSizeEv() #11
  %21 = load i32, i32* @_ZN2v88internal20FLAG_v8_os_page_sizeE, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %18
  %24 = shl nsw i32 %21, 10
  %25 = sext i32 %24 to i64
  br label %28

26:                                               ; preds = %18
  %27 = call i64 @_ZN2v88internal14CommitPageSizeEv() #11
  br label %28

28:                                               ; preds = %23, %26
  %29 = phi i64 [ %25, %23 ], [ %27, %26 ]
  %30 = add i64 %1, -1
  %31 = add i64 %30, %19
  %32 = add i64 %31, %20
  %33 = add i64 %32, %29
  %34 = sub nsw i64 0, %29
  %35 = and i64 %33, %34
  %36 = call i64 @_ZN2v88internal17MemoryChunkLayout24CodePageGuardStartOffsetEv() #11
  %37 = load i32, i32* @_ZN2v88internal20FLAG_v8_os_page_sizeE, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %28
  %40 = shl nsw i32 %37, 10
  %41 = sext i32 %40 to i64
  br label %44

42:                                               ; preds = %28
  %43 = call i64 @_ZN2v88internal14CommitPageSizeEv() #11
  br label %44

44:                                               ; preds = %39, %42
  %45 = phi i64 [ %41, %39 ], [ %43, %42 ]
  %46 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 2
  %47 = load %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"** %46, align 8
  %48 = bitcast %"class.v8::internal::VirtualMemory"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #11
  call void @_ZN2v88internal13VirtualMemoryC1EPNS_13PageAllocatorEmPvmNS1_13JitPermissionE(%"class.v8::internal::VirtualMemory"* nonnull %6, %"class.v8::PageAllocator"* %47, i64 %35, i8* %16, i64 262144, i32 0) #11
  %49 = getelementptr inbounds %"class.v8::internal::VirtualMemory", %"class.v8::internal::VirtualMemory"* %6, i64 0, i32 1, i32 0
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %73, label %52

52:                                               ; preds = %44
  %53 = add i64 %2, -1
  %54 = add i64 %53, %36
  %55 = add i64 %54, %45
  %56 = sub nsw i64 0, %45
  %57 = and i64 %55, %56
  %58 = getelementptr inbounds %"class.v8::internal::VirtualMemory", %"class.v8::internal::VirtualMemory"* %6, i64 0, i32 1, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i64* %60, i64 %59 seq_cst
  %62 = call zeroext i1 @_ZN2v88internal15MemoryAllocator22CommitExecutableMemoryEPNS0_13VirtualMemoryEmmm(%"class.v8::internal::MemoryAllocator"* %0, %"class.v8::internal::VirtualMemory"* nonnull %6, i64 %50, i64 %57, i64 %35) #11
  br i1 %62, label %65, label %63

63:                                               ; preds = %52
  call void @_ZN2v88internal13VirtualMemory4FreeEv(%"class.v8::internal::VirtualMemory"* nonnull %6) #11
  %64 = atomicrmw sub i64* %60, i64 %35 seq_cst
  br label %73

65:                                               ; preds = %52
  %66 = bitcast %"class.v8::internal::VirtualMemory"* %6 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.v8::internal::VirtualMemory"* %7 to i64*
  store i64 %67, i64* %68, align 8
  %69 = getelementptr inbounds %"class.v8::internal::VirtualMemory", %"class.v8::internal::VirtualMemory"* %6, i64 0, i32 1
  %70 = getelementptr inbounds %"class.v8::internal::VirtualMemory", %"class.v8::internal::VirtualMemory"* %7, i64 0, i32 1
  %71 = bitcast %"class.v8::base::AddressRegion"* %70 to i8*
  %72 = bitcast %"class.v8::base::AddressRegion"* %69 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %71, i8* align 8 %72, i64 16, i1 false) #11
  call void @_ZN2v88internal13VirtualMemory5ResetEv(%"class.v8::internal::VirtualMemory"* nonnull %6) #11
  br label %73

73:                                               ; preds = %44, %63, %65
  %74 = phi i64 [ 0, %44 ], [ 0, %63 ], [ %50, %65 ]
  call void @_ZN2v88internal13VirtualMemoryD1Ev(%"class.v8::internal::VirtualMemory"* nonnull %6) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #11
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %172, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"class.v8::internal::VirtualMemory", %"class.v8::internal::VirtualMemory"* %7, i64 0, i32 1, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = atomicrmw add i64* %79, i64 %78 seq_cst
  %81 = call i64 @_ZN2v88internal17MemoryChunkLayout27ObjectStartOffsetInCodePageEv() #11
  %82 = add i64 %81, %74
  br label %119

83:                                               ; preds = %5
  %84 = call i64 @_ZN2v88internal17MemoryChunkLayout27ObjectStartOffsetInDataPageEv() #11
  %85 = load i32, i32* @_ZN2v88internal20FLAG_v8_os_page_sizeE, align 4
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %90, label %87

87:                                               ; preds = %83
  %88 = shl nsw i32 %85, 10
  %89 = sext i32 %88 to i64
  br label %92

90:                                               ; preds = %83
  %91 = call i64 @_ZN2v88internal14CommitPageSizeEv() #11
  br label %92

92:                                               ; preds = %87, %90
  %93 = phi i64 [ %89, %87 ], [ %91, %90 ]
  %94 = add i64 %1, -1
  %95 = add i64 %94, %84
  %96 = add i64 %95, %93
  %97 = sub nsw i64 0, %93
  %98 = and i64 %96, %97
  %99 = call i64 @_ZN2v88internal17MemoryChunkLayout27ObjectStartOffsetInDataPageEv() #11
  %100 = load i32, i32* @_ZN2v88internal20FLAG_v8_os_page_sizeE, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %92
  %103 = shl nsw i32 %100, 10
  %104 = sext i32 %103 to i64
  br label %107

105:                                              ; preds = %92
  %106 = call i64 @_ZN2v88internal14CommitPageSizeEv() #11
  br label %107

107:                                              ; preds = %102, %105
  %108 = phi i64 [ %104, %102 ], [ %106, %105 ]
  %109 = add i64 %2, -1
  %110 = add i64 %109, %99
  %111 = add i64 %110, %108
  %112 = sub nsw i64 0, %108
  %113 = and i64 %111, %112
  %114 = call i64 @_ZN2v88internal15MemoryAllocator21AllocateAlignedMemoryEmmmNS0_13ExecutabilityEPvPNS0_13VirtualMemoryE(%"class.v8::internal::MemoryAllocator"* %0, i64 %98, i64 %113, i64 262144, i32 %3, i8* %16, %"class.v8::internal::VirtualMemory"* nonnull %7)
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %172, label %116

116:                                              ; preds = %107
  %117 = call i64 @_ZN2v88internal17MemoryChunkLayout27ObjectStartOffsetInDataPageEv() #11
  %118 = add i64 %117, %114
  br label %119

119:                                              ; preds = %116, %76
  %120 = phi i64 [ %82, %76 ], [ %118, %116 ]
  %121 = phi i64 [ %74, %76 ], [ %114, %116 ]
  %122 = phi i64 [ %35, %76 ], [ %98, %116 ]
  %123 = add i64 %120, %2
  %124 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !2
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %131, label %126

126:                                              ; preds = %119
  %127 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %9, align 8
  %128 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %127, i64 0, i32 21
  %129 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %128, align 8
  %130 = inttoptr i64 %121 to i8*
  call void @_ZN2v88internal6Logger8NewEventEPKcPvm(%"class.v8::internal::Logger"* %129, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i8* %130, i64 %122) #11
  br label %131

131:                                              ; preds = %119, %126
  %132 = sub i64 0, %122
  %133 = icmp eq i64 %121, %132
  br i1 %133, label %134, label %163

134:                                              ; preds = %131
  %135 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 8
  %136 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 8, i32 1, i32 0
  %137 = load i64, i64* %136, align 8
  %138 = icmp eq i64 %137, 0
  br i1 %138, label %140, label %139, !prof !3

139:                                              ; preds = %134
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0)) #12
  unreachable

140:                                              ; preds = %134
  %141 = bitcast %"class.v8::internal::VirtualMemory"* %7 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = bitcast %"class.v8::internal::VirtualMemory"* %135 to i64*
  store i64 %142, i64* %143, align 8
  %144 = getelementptr inbounds %"class.v8::internal::VirtualMemory", %"class.v8::internal::VirtualMemory"* %7, i64 0, i32 1
  %145 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 8, i32 1
  %146 = bitcast %"class.v8::base::AddressRegion"* %145 to i8*
  %147 = bitcast %"class.v8::base::AddressRegion"* %144 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %146, i8* align 8 %147, i64 16, i1 false) #11
  call void @_ZN2v88internal13VirtualMemory5ResetEv(%"class.v8::internal::VirtualMemory"* nonnull %7) #11
  %148 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 8, i32 1, i32 1
  %149 = load i64, i64* %148, align 8
  %150 = load i64, i64* %136, align 8
  %151 = call zeroext i1 @_ZN2v88internal13VirtualMemory14SetPermissionsEmmNS_13PageAllocator10PermissionE(%"class.v8::internal::VirtualMemory"* %135, i64 %150, i64 %149, i32 0) #11
  %152 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = atomicrmw sub i64* %152, i64 %122 seq_cst
  br i1 %17, label %154, label %157

154:                                              ; preds = %140
  %155 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %156 = atomicrmw sub i64* %155, i64 %122 seq_cst
  br label %157

157:                                              ; preds = %140, %154
  %158 = load i64, i64* %136, align 8
  %159 = icmp eq i64 %158, 0
  br i1 %159, label %160, label %161, !prof !4

160:                                              ; preds = %157
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.7, i64 0, i64 0)) #12
  unreachable

161:                                              ; preds = %157
  %162 = call %"class.v8::internal::BasicMemoryChunk"* @_ZN2v88internal15MemoryAllocator18AllocateBasicChunkEmmNS0_13ExecutabilityEPNS0_9BaseSpaceE(%"class.v8::internal::MemoryAllocator"* %0, i64 %1, i64 %2, i32 %3, %"class.v8::internal::BaseSpace"* %4)
  br label %172

163:                                              ; preds = %131
  %164 = getelementptr inbounds %"class.v8::internal::VirtualMemory", %"class.v8::internal::VirtualMemory"* %8, i64 0, i32 1
  %165 = bitcast %"class.v8::base::AddressRegion"* %164 to i8*
  %166 = bitcast %"class.v8::internal::VirtualMemory"* %7 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = bitcast %"class.v8::internal::VirtualMemory"* %8 to i64*
  store i64 %167, i64* %168, align 8
  %169 = getelementptr inbounds %"class.v8::internal::VirtualMemory", %"class.v8::internal::VirtualMemory"* %7, i64 0, i32 1
  %170 = bitcast %"class.v8::base::AddressRegion"* %169 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %165, i8* align 8 %170, i64 16, i1 false) #11
  call void @_ZN2v88internal13VirtualMemory5ResetEv(%"class.v8::internal::VirtualMemory"* nonnull %7) #11
  %171 = call %"class.v8::internal::BasicMemoryChunk"* @_ZN2v88internal16BasicMemoryChunk10InitializeEPNS0_4HeapEmmmmPNS0_9BaseSpaceENS0_13VirtualMemoryE(%"class.v8::internal::Heap"* %11, i64 %121, i64 %122, i64 %120, i64 %123, %"class.v8::internal::BaseSpace"* %4, %"class.v8::internal::VirtualMemory"* nonnull %8) #11
  call void @_ZN2v88internal13VirtualMemoryD1Ev(%"class.v8::internal::VirtualMemory"* nonnull %8) #11
  br label %172

172:                                              ; preds = %107, %73, %163, %161
  %173 = phi %"class.v8::internal::BasicMemoryChunk"* [ %162, %161 ], [ %171, %163 ], [ null, %73 ], [ null, %107 ]
  call void @_ZN2v88internal13VirtualMemoryD1Ev(%"class.v8::internal::VirtualMemory"* nonnull %7) #11
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #11
  ret %"class.v8::internal::BasicMemoryChunk"* %173
}

declare i64 @_ZN2v88internal17MemoryChunkLayout27ObjectStartOffsetInCodePageEv() local_unnamed_addr #2

declare i64 @_ZN2v88internal17MemoryChunkLayout17CodePageGuardSizeEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal15MemoryAllocator17GetCommitPageSizeEv() local_unnamed_addr #0 align 2 {
  %1 = load i32, i32* @_ZN2v88internal20FLAG_v8_os_page_sizeE, align 4
  %2 = icmp eq i32 %1, 0
  br i1 %2, label %6, label %3

3:                                                ; preds = %0
  %4 = shl nsw i32 %1, 10
  %5 = sext i32 %4 to i64
  br label %8

6:                                                ; preds = %0
  %7 = tail call i64 @_ZN2v88internal14CommitPageSizeEv() #11
  br label %8

8:                                                ; preds = %6, %3
  %9 = phi i64 [ %5, %3 ], [ %7, %6 ]
  ret i64 %9
}

declare i64 @_ZN2v88internal17MemoryChunkLayout24CodePageGuardStartOffsetEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15MemoryAllocator8ZapBlockEmmm(%"class.v8::internal::MemoryAllocator"* nocapture readnone, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %5 = lshr i64 %2, 2
  %6 = inttoptr i64 %1 to i32*
  %7 = trunc i64 %3 to i32
  %8 = tail call { i64, i32* } asm sideeffect "cld;rep ; stosl", "=&{cx},=&{di},{ax},0,1,~{memory},~{cc},~{dirflag},~{fpsr},~{flags}"(i32 %7, i64 %5, i32* %6) #11, !srcloc !8
  ret void
}

declare i64 @_ZN2v88internal17MemoryChunkLayout27ObjectStartOffsetInDataPageEv() local_unnamed_addr #2

declare void @_ZN2v88internal6Logger8NewEventEPKcPvm(%"class.v8::internal::Logger"*, i8*, i8*, i64) local_unnamed_addr #2

declare %"class.v8::internal::BasicMemoryChunk"* @_ZN2v88internal16BasicMemoryChunk10InitializeEPNS0_4HeapEmmmmPNS0_9BaseSpaceENS0_13VirtualMemoryE(%"class.v8::internal::Heap"*, i64, i64, i64, i64, %"class.v8::internal::BaseSpace"*, %"class.v8::internal::VirtualMemory"*) local_unnamed_addr #2

declare %"class.v8::internal::MemoryChunk"* @_ZN2v88internal11MemoryChunk10InitializeEPNS0_16BasicMemoryChunkEPNS0_4HeapENS0_13ExecutabilityE(%"class.v8::internal::BasicMemoryChunk"*, %"class.v8::internal::Heap"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15MemoryAllocator17PartialFreeMemoryEPNS0_16BasicMemoryChunkEmmm(%"class.v8::internal::MemoryAllocator"* nocapture, %"class.v8::internal::BasicMemoryChunk"*, i64, i64, i64) local_unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1, i64 0, i32 9
  %7 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1, i64 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %8, %3
  store i64 %9, i64* %7, align 8
  %10 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1, i64 0, i32 4
  store i64 %4, i64* %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1, i64 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = and i64 %12, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %28, label %15

15:                                               ; preds = %5
  %16 = load i32, i32* @_ZN2v88internal20FLAG_v8_os_page_sizeE, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = shl nsw i32 %16, 10
  %20 = sext i32 %19 to i64
  br label %24

21:                                               ; preds = %15
  %22 = tail call i64 @_ZN2v88internal14CommitPageSizeEv() #11
  %23 = load i64, i64* %10, align 8
  br label %24

24:                                               ; preds = %18, %21
  %25 = phi i64 [ %4, %18 ], [ %23, %21 ]
  %26 = phi i64 [ %20, %18 ], [ %22, %21 ]
  %27 = tail call zeroext i1 @_ZN2v88internal13VirtualMemory14SetPermissionsEmmNS_13PageAllocator10PermissionE(%"class.v8::internal::VirtualMemory"* %6, i64 %25, i64 %26, i32 0) #11
  br label %28

28:                                               ; preds = %5, %24
  %29 = tail call i64 @_ZN2v88internal13VirtualMemory7ReleaseEm(%"class.v8::internal::VirtualMemory"* %6, i64 %2) #11
  %30 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw sub i64* %30, i64 %29 seq_cst
  ret void
}

declare i64 @_ZN2v88internal13VirtualMemory7ReleaseEm(%"class.v8::internal::VirtualMemory"*, i64) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN2v88internal15MemoryAllocator22UnregisterSharedMemoryEPNS0_16BasicMemoryChunkE(%"class.v8::internal::MemoryAllocator"* nocapture, %"class.v8::internal::BasicMemoryChunk"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1, i64 0, i32 9, i32 1, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  %6 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1, i64 0, i32 9, i32 1, i32 1
  %7 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1, i64 0, i32 0
  %8 = select i1 %5, i64* %7, i64* %6
  %9 = load i64, i64* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = atomicrmw sub i64* %10, i64 %9 seq_cst
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15MemoryAllocator16UnregisterMemoryEPNS0_16BasicMemoryChunkENS0_13ExecutabilityE(%"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::BasicMemoryChunk"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::unique_ptr.1154", align 8
  %5 = alloca %"class.v8::internal::MemoryChunk"*, align 8
  %6 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1, i64 0, i32 9, i32 1, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  %9 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1, i64 0, i32 9, i32 1, i32 1
  %10 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1, i64 0, i32 0
  %11 = select i1 %8, i64* %10, i64* %9
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = atomicrmw sub i64* %13, i64 %12 seq_cst
  %15 = icmp eq i32 %2, 1
  br i1 %15, label %16, label %38

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i64* %17, i64 %12 seq_cst
  %19 = bitcast %"class.v8::internal::MemoryChunk"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = bitcast %"class.v8::internal::MemoryChunk"** %5 to %"class.v8::internal::BasicMemoryChunk"**
  store %"class.v8::internal::BasicMemoryChunk"* %1, %"class.v8::internal::BasicMemoryChunk"** %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 11
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %21) #11
  %22 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 10, i32 0
  %23 = call %"struct.std::__1::__hash_node_base.532"* @_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE4findIS4_EENS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEERKT_(%"class.std::__1::__hash_table.528"* %22, %"class.v8::internal::MemoryChunk"** nonnull dereferenceable(8) %5) #11
  %24 = icmp eq %"struct.std::__1::__hash_node_base.532"* %23, null
  br i1 %24, label %33, label %25

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::unique_ptr.1154"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %26) #11
  call void @_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS4_PvEEEE(%"class.std::__1::unique_ptr.1154"* nonnull sret %4, %"class.std::__1::__hash_table.528"* %22, %"struct.std::__1::__hash_node_base.532"* nonnull %23) #11
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.1154", %"class.std::__1::unique_ptr.1154"* %4, i64 0, i32 0, i32 0, i32 0
  %28 = load %"struct.std::__1::__hash_node"*, %"struct.std::__1::__hash_node"** %27, align 8
  store %"struct.std::__1::__hash_node"* null, %"struct.std::__1::__hash_node"** %27, align 8
  %29 = icmp eq %"struct.std::__1::__hash_node"* %28, null
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = bitcast %"struct.std::__1::__hash_node"* %28 to i8*
  call void @_ZdlPv(i8* %31) #13
  br label %32

32:                                               ; preds = %30, %25
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %26) #11
  br label %33

33:                                               ; preds = %16, %32
  %34 = load %"class.v8::internal::BasicMemoryChunk"*, %"class.v8::internal::BasicMemoryChunk"** %20, align 8
  %35 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %34, i64 0, i32 2
  %36 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %35, align 8
  %37 = bitcast %"class.v8::internal::BasicMemoryChunk"* %34 to %"class.v8::internal::MemoryChunk"*
  call void @_ZN2v88internal4Heap32UnregisterUnprotectedMemoryChunkEPNS0_11MemoryChunkE(%"class.v8::internal::Heap"* %36, %"class.v8::internal::MemoryChunk"* %37) #11
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %21) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  br label %38

38:                                               ; preds = %33, %3
  %39 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = or i64 %40, 1048576
  store i64 %41, i64* %39, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15MemoryAllocator16UnregisterMemoryEPNS0_11MemoryChunkE(%"class.v8::internal::MemoryAllocator"*, %"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = trunc i64 %5 to i32
  %7 = and i32 %6, 1
  tail call void @_ZN2v88internal15MemoryAllocator16UnregisterMemoryEPNS0_16BasicMemoryChunkENS0_13ExecutabilityE(%"class.v8::internal::MemoryAllocator"* %0, %"class.v8::internal::BasicMemoryChunk"* %3, i32 %7)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal15MemoryAllocator16FreeReadOnlyPageEPNS0_12ReadOnlyPageE(%"class.v8::internal::MemoryAllocator"* nocapture, %"class.v8::internal::ReadOnlyPage"*) local_unnamed_addr #0 align 2 {
  %3 = load i8, i8* @_ZN2v88internal8FLAG_logE, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %11, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 0
  %7 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %7, i64 0, i32 21
  %9 = load %"class.v8::internal::Logger"*, %"class.v8::internal::Logger"** %8, align 8
  %10 = bitcast %"class.v8::internal::ReadOnlyPage"* %1 to i8*
  tail call void @_ZN2v88internal6Logger11DeleteEventEPKcPv(%"class.v8::internal::Logger"* %9, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.5, i64 0, i64 0), i8* %10) #11
  br label %11

11:                                               ; preds = %2, %5
  %12 = getelementptr inbounds %"class.v8::internal::ReadOnlyPage", %"class.v8::internal::ReadOnlyPage"* %1, i64 0, i32 0, i32 9, i32 1, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  %15 = getelementptr inbounds %"class.v8::internal::ReadOnlyPage", %"class.v8::internal::ReadOnlyPage"* %1, i64 0, i32 0, i32 9, i32 1, i32 1
  %16 = getelementptr inbounds %"class.v8::internal::ReadOnlyPage", %"class.v8::internal::ReadOnlyPage"* %1, i64 0, i32 0, i32 0
  %17 = select i1 %14, i64* %16, i64* %15
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = atomicrmw sub i64* %19, i64 %18 seq_cst
  %21 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 1
  %22 = load %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"** %21, align 8
  %23 = load i64, i64* %12, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %11
  %26 = getelementptr inbounds %"class.v8::internal::ReadOnlyPage", %"class.v8::internal::ReadOnlyPage"* %1, i64 0, i32 0, i32 9
  tail call void @_ZN2v88internal13VirtualMemory12FreeReadOnlyEv(%"class.v8::internal::VirtualMemory"* %26) #11
  br label %41

27:                                               ; preds = %11
  %28 = load i64, i64* %16, align 8
  %29 = bitcast %"class.v8::PageAllocator"* %22 to i64 (%"class.v8::PageAllocator"*)***
  %30 = load i64 (%"class.v8::PageAllocator"*)**, i64 (%"class.v8::PageAllocator"*)*** %29, align 8
  %31 = getelementptr inbounds i64 (%"class.v8::PageAllocator"*)*, i64 (%"class.v8::PageAllocator"*)** %30, i64 2
  %32 = load i64 (%"class.v8::PageAllocator"*)*, i64 (%"class.v8::PageAllocator"*)** %31, align 8
  %33 = tail call i64 %32(%"class.v8::PageAllocator"* %22) #11
  %34 = add i64 %28, -1
  %35 = add i64 %34, %33
  %36 = sub nsw i64 0, %33
  %37 = and i64 %35, %36
  %38 = bitcast %"class.v8::internal::ReadOnlyPage"* %1 to i8*
  %39 = tail call zeroext i1 @_ZN2v88internal9FreePagesEPNS_13PageAllocatorEPvm(%"class.v8::PageAllocator"* %22, i8* %38, i64 %37) #11
  br i1 %39, label %41, label %40, !prof !3

40:                                               ; preds = %27
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([63 x i8], [63 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable

41:                                               ; preds = %27, %25
  ret void
}

declare void @_ZN2v88internal6Logger11DeleteEventEPKcPv(%"class.v8::internal::Logger"*, i8*, i8*) local_unnamed_addr #2

declare void @_ZN2v88internal13VirtualMemory12FreeReadOnlyEv(%"class.v8::internal::VirtualMemory"*) local_unnamed_addr #2

declare void @_ZN2v88internal4Heap20RememberUnmappedPageEmb(%"class.v8::internal::Heap"*, i64, i1 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal11MemoryChunk25ReleaseAllAllocatedMemoryEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::ReadOnlyPage"* @_ZN2v88internal15MemoryAllocator20AllocateReadOnlyPageEmPNS0_13ReadOnlySpaceE(%"class.v8::internal::MemoryAllocator"*, i64, %"class.v8::internal::ReadOnlySpace"*) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::ReadOnlySpace", %"class.v8::internal::ReadOnlySpace"* %2, i64 0, i32 0
  %5 = tail call %"class.v8::internal::BasicMemoryChunk"* @_ZN2v88internal15MemoryAllocator18AllocateBasicChunkEmmNS0_13ExecutabilityEPNS0_9BaseSpaceE(%"class.v8::internal::MemoryAllocator"* %0, i64 %1, i64 %1, i32 0, %"class.v8::internal::BaseSpace"* %4)
  %6 = icmp eq %"class.v8::internal::BasicMemoryChunk"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call %"class.v8::internal::ReadOnlyPage"* @_ZN2v88internal13ReadOnlySpace14InitializePageEPNS0_16BasicMemoryChunkE(%"class.v8::internal::ReadOnlySpace"* %2, %"class.v8::internal::BasicMemoryChunk"* nonnull %5) #11
  br label %9

9:                                                ; preds = %3, %7
  %10 = phi %"class.v8::internal::ReadOnlyPage"* [ %8, %7 ], [ null, %3 ]
  ret %"class.v8::internal::ReadOnlyPage"* %10
}

declare %"class.v8::internal::ReadOnlyPage"* @_ZN2v88internal13ReadOnlySpace14InitializePageEPNS0_16BasicMemoryChunkE(%"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::BasicMemoryChunk"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::PageAllocator::SharedMemoryMapping"* @_ZN2v88internal15MemoryAllocator15RemapSharedPageEPNS_13PageAllocator12SharedMemoryEm(%"class.v8::internal::MemoryAllocator"* nocapture readnone, %"class.v8::PageAllocator::SharedMemory"*, i64) local_unnamed_addr #0 align 2 {
  %4 = inttoptr i64 %2 to i8*
  %5 = bitcast %"class.v8::PageAllocator::SharedMemory"* %1 to %"class.v8::PageAllocator::SharedMemoryMapping"* (%"class.v8::PageAllocator::SharedMemory"*, i8*)***
  %6 = load %"class.v8::PageAllocator::SharedMemoryMapping"* (%"class.v8::PageAllocator::SharedMemory"*, i8*)**, %"class.v8::PageAllocator::SharedMemoryMapping"* (%"class.v8::PageAllocator::SharedMemory"*, i8*)*** %5, align 8
  %7 = getelementptr inbounds %"class.v8::PageAllocator::SharedMemoryMapping"* (%"class.v8::PageAllocator::SharedMemory"*, i8*)*, %"class.v8::PageAllocator::SharedMemoryMapping"* (%"class.v8::PageAllocator::SharedMemory"*, i8*)** %6, i64 2
  %8 = load %"class.v8::PageAllocator::SharedMemoryMapping"* (%"class.v8::PageAllocator::SharedMemory"*, i8*)*, %"class.v8::PageAllocator::SharedMemoryMapping"* (%"class.v8::PageAllocator::SharedMemory"*, i8*)** %7, align 8
  %9 = tail call %"class.v8::PageAllocator::SharedMemoryMapping"* %8(%"class.v8::PageAllocator::SharedMemory"* %1, i8* %4) #11
  ret %"class.v8::PageAllocator::SharedMemoryMapping"* %9
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.v8::internal::LargePage"* @_ZN2v88internal15MemoryAllocator17AllocateLargePageEmPNS0_16LargeObjectSpaceENS0_13ExecutabilityE(%"class.v8::internal::MemoryAllocator"*, i64, %"class.v8::internal::LargeObjectSpace"*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::MemoryChunk"*, align 8
  %6 = getelementptr inbounds %"class.v8::internal::LargeObjectSpace", %"class.v8::internal::LargeObjectSpace"* %2, i64 0, i32 0, i32 0
  %7 = tail call %"class.v8::internal::BasicMemoryChunk"* @_ZN2v88internal15MemoryAllocator18AllocateBasicChunkEmmNS0_13ExecutabilityEPNS0_9BaseSpaceE(%"class.v8::internal::MemoryAllocator"* %0, i64 %1, i64 %1, i32 %3, %"class.v8::internal::BaseSpace"* %6) #11
  %8 = icmp eq %"class.v8::internal::BasicMemoryChunk"* %7, null
  br i1 %8, label %29, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 2
  %13 = tail call %"class.v8::internal::MemoryChunk"* @_ZN2v88internal11MemoryChunk10InitializeEPNS0_16BasicMemoryChunkEPNS0_4HeapENS0_13ExecutabilityE(%"class.v8::internal::BasicMemoryChunk"* nonnull %7, %"class.v8::internal::Heap"* %12, i32 %3) #11
  %14 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %13, i64 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  %16 = and i64 %15, 1
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %23, label %18

18:                                               ; preds = %9
  %19 = bitcast %"class.v8::internal::MemoryChunk"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #11
  store %"class.v8::internal::MemoryChunk"* %13, %"class.v8::internal::MemoryChunk"** %5, align 8
  %20 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 11
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %20) #11
  %21 = getelementptr inbounds %"class.v8::internal::MemoryAllocator", %"class.v8::internal::MemoryAllocator"* %0, i64 0, i32 10, i32 0
  %22 = call { %"struct.std::__1::__hash_node_base.532"*, i8 } @_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.528"* %21, %"class.v8::internal::MemoryChunk"** nonnull dereferenceable(8) %5, %"class.v8::internal::MemoryChunk"** nonnull dereferenceable(8) %5) #11
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %20) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #11
  br label %23

23:                                               ; preds = %9, %18
  %24 = icmp eq %"class.v8::internal::MemoryChunk"* %13, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %23
  %26 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %26, i64 0, i32 2
  %28 = call %"class.v8::internal::LargePage"* @_ZN2v88internal9LargePage10InitializeEPNS0_4HeapEPNS0_11MemoryChunkENS0_13ExecutabilityE(%"class.v8::internal::Heap"* %27, %"class.v8::internal::MemoryChunk"* nonnull %13, i32 %3) #11
  br label %29

29:                                               ; preds = %4, %23, %25
  %30 = phi %"class.v8::internal::LargePage"* [ %28, %25 ], [ null, %23 ], [ null, %4 ]
  ret %"class.v8::internal::LargePage"* %30
}

declare %"class.v8::internal::LargePage"* @_ZN2v88internal9LargePage10InitializeEPNS0_4HeapEPNS0_11MemoryChunkENS0_13ExecutabilityE(%"class.v8::internal::Heap"*, %"class.v8::internal::MemoryChunk"*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i64 @_ZN2v88internal14CommitPageSizeEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN2v88internal15MemoryAllocator24ComputeDiscardMemoryAreaEmm(i64, i64) local_unnamed_addr #0 align 2 {
  %3 = load i32, i32* @_ZN2v88internal20FLAG_v8_os_page_sizeE, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %2
  %6 = shl nsw i32 %3, 10
  %7 = sext i32 %6 to i64
  br label %10

8:                                                ; preds = %2
  %9 = tail call i64 @_ZN2v88internal14CommitPageSizeEv() #11
  br label %10

10:                                               ; preds = %5, %8
  %11 = phi i64 [ %7, %5 ], [ %9, %8 ]
  %12 = add i64 %11, 12
  %13 = icmp ugt i64 %12, %1
  br i1 %13, label %24, label %14

14:                                               ; preds = %10
  %15 = add i64 %0, 11
  %16 = add i64 %15, %11
  %17 = sub nsw i64 0, %11
  %18 = and i64 %16, %17
  %19 = add i64 %1, %0
  %20 = and i64 %19, %17
  %21 = icmp ugt i64 %20, %18
  %22 = tail call i64 @llvm.usub.sat.i64(i64 %20, i64 %18)
  %23 = select i1 %21, i64 %18, i64 0
  br label %24

24:                                               ; preds = %14, %10
  %25 = phi i64 [ 0, %10 ], [ %22, %14 ]
  %26 = phi i64 [ 0, %10 ], [ %23, %14 ]
  %27 = insertvalue { i64, i64 } undef, i64 %26, 0
  %28 = insertvalue { i64, i64 } %27, i64 %25, 1
  ret { i64, i64 } %28
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #3

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #6

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare void @_ZN2v88internal13VirtualMemory5ResetEv(%"class.v8::internal::VirtualMemory"*) local_unnamed_addr #2

declare i8* @_ZN2v88internal17GetRandomMmapAddrEv() local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.532"*, i8 } @_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE25__emplace_unique_key_argsIS4_JRKS4_EEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.528"*, %"class.v8::internal::MemoryChunk"** dereferenceable(8), %"class.v8::internal::MemoryChunk"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %1, align 8
  %5 = ptrtoint %"class.v8::internal::MemoryChunk"* %4 to i64
  %6 = lshr i64 %5, 32
  %7 = shl i64 %5, 3
  %8 = and i64 %7, 4294967288
  %9 = add nuw nsw i64 %8, 8
  %10 = xor i64 %9, %6
  %11 = mul i64 %10, -7070675565921424023
  %12 = lshr i64 %11, 47
  %13 = xor i64 %11, %6
  %14 = xor i64 %13, %12
  %15 = mul i64 %14, -7070675565921424023
  %16 = lshr i64 %15, 47
  %17 = xor i64 %16, %15
  %18 = mul i64 %17, -7070675565921424023
  %19 = getelementptr inbounds %"class.std::__1::__hash_table.528", %"class.std::__1::__hash_table.528"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %81, label %22

22:                                               ; preds = %3
  %23 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !9
  %24 = icmp ugt i64 %23, 1
  br i1 %24, label %28, label %25

25:                                               ; preds = %22
  %26 = add i64 %20, -1
  %27 = and i64 %18, %26
  br label %32

28:                                               ; preds = %22
  %29 = icmp ult i64 %18, %20
  br i1 %29, label %32, label %30

30:                                               ; preds = %28
  %31 = urem i64 %18, %20
  br label %32

32:                                               ; preds = %25, %28, %30
  %33 = phi i64 [ %27, %25 ], [ %31, %30 ], [ %18, %28 ]
  %34 = getelementptr inbounds %"class.std::__1::__hash_table.528", %"class.std::__1::__hash_table.528"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.532"**, %"struct.std::__1::__hash_node_base.532"*** %34, align 8
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %35, i64 %33
  %37 = load %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %36, align 8
  %38 = icmp eq %"struct.std::__1::__hash_node_base.532"* %37, null
  br i1 %38, label %81, label %39

39:                                               ; preds = %32
  %40 = add i64 %20, -1
  br i1 %24, label %41, label %63

41:                                               ; preds = %39, %58
  %42 = phi %"struct.std::__1::__hash_node_base.532"* [ %44, %58 ], [ %37, %39 ]
  %43 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %42, i64 0, i32 0
  %44 = load %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %43, align 8
  %45 = icmp eq %"struct.std::__1::__hash_node_base.532"* %44, null
  br i1 %45, label %81, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %44, i64 1
  %48 = bitcast %"struct.std::__1::__hash_node_base.532"* %47 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = icmp eq i64 %49, %18
  br i1 %50, label %58, label %51

51:                                               ; preds = %46
  %52 = icmp ult i64 %49, %20
  br i1 %52, label %55, label %53

53:                                               ; preds = %51
  %54 = urem i64 %49, %20
  br label %55

55:                                               ; preds = %53, %51
  %56 = phi i64 [ %54, %53 ], [ %49, %51 ]
  %57 = icmp eq i64 %56, %33
  br i1 %57, label %58, label %81

58:                                               ; preds = %55, %46
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %44, i64 2
  %60 = bitcast %"struct.std::__1::__hash_node_base.532"* %59 to %"class.v8::internal::MemoryChunk"**
  %61 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %60, align 8
  %62 = icmp eq %"class.v8::internal::MemoryChunk"* %61, %4
  br i1 %62, label %169, label %41

63:                                               ; preds = %39, %76
  %64 = phi %"struct.std::__1::__hash_node_base.532"* [ %66, %76 ], [ %37, %39 ]
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %64, i64 0, i32 0
  %66 = load %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %65, align 8
  %67 = icmp eq %"struct.std::__1::__hash_node_base.532"* %66, null
  br i1 %67, label %81, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %66, i64 1
  %70 = bitcast %"struct.std::__1::__hash_node_base.532"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, %18
  %73 = and i64 %71, %40
  %74 = icmp eq i64 %73, %33
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %81

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %66, i64 2
  %78 = bitcast %"struct.std::__1::__hash_node_base.532"* %77 to %"class.v8::internal::MemoryChunk"**
  %79 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %78, align 8
  %80 = icmp eq %"class.v8::internal::MemoryChunk"* %79, %4
  br i1 %80, label %169, label %63

81:                                               ; preds = %68, %63, %55, %41, %32, %3
  %82 = phi i64 [ %33, %32 ], [ undef, %3 ], [ %33, %41 ], [ %33, %55 ], [ %33, %63 ], [ %33, %68 ]
  %83 = tail call i8* @_Znwm(i64 24) #13, !noalias !10
  %84 = getelementptr inbounds i8, i8* %83, i64 16
  %85 = bitcast %"class.v8::internal::MemoryChunk"** %2 to i64*
  %86 = load i64, i64* %85, align 8, !noalias !10
  %87 = bitcast i8* %84 to i64*
  store i64 %86, i64* %87, align 8, !noalias !10
  %88 = getelementptr inbounds i8, i8* %83, i64 8
  %89 = bitcast i8* %88 to i64*
  store i64 %18, i64* %89, align 8, !noalias !10
  %90 = bitcast i8* %83 to %"struct.std::__1::__hash_node_base.532"**
  store %"struct.std::__1::__hash_node_base.532"* null, %"struct.std::__1::__hash_node_base.532"** %90, align 8, !noalias !10
  %91 = getelementptr inbounds %"class.std::__1::__hash_table.528", %"class.std::__1::__hash_table.528"* %0, i64 0, i32 2, i32 0, i32 0
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %92, 1
  %94 = uitofp i64 %93 to float
  %95 = uitofp i64 %20 to float
  %96 = getelementptr inbounds %"class.std::__1::__hash_table.528", %"class.std::__1::__hash_table.528"* %0, i64 0, i32 3, i32 0, i32 0
  %97 = load float, float* %96, align 4
  %98 = fmul float %97, %95
  %99 = fcmp olt float %98, %94
  %100 = or i1 %21, %99
  br i1 %100, label %101, label %124

101:                                              ; preds = %81
  %102 = shl i64 %20, 1
  %103 = icmp ult i64 %20, 3
  %104 = tail call i64 @llvm.ctpop.i64(i64 %20) #11, !range !9
  %105 = icmp ugt i64 %104, 1
  %106 = or i1 %103, %105
  %107 = zext i1 %106 to i64
  %108 = or i64 %102, %107
  %109 = fdiv float %94, %97
  %110 = tail call float @llvm.ceil.f32(float %109) #11
  %111 = fptoui float %110 to i64
  %112 = icmp ult i64 %108, %111
  %113 = select i1 %112, i64 %111, i64 %108
  tail call void @_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.528"* %0, i64 %113)
  %114 = load i64, i64* %19, align 8
  %115 = tail call i64 @llvm.ctpop.i64(i64 %114) #11, !range !9
  %116 = icmp ugt i64 %115, 1
  br i1 %116, label %120, label %117

117:                                              ; preds = %101
  %118 = add i64 %114, -1
  %119 = and i64 %118, %18
  br label %124

120:                                              ; preds = %101
  %121 = icmp ult i64 %18, %114
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = urem i64 %18, %114
  br label %124

124:                                              ; preds = %122, %120, %117, %81
  %125 = phi i64 [ %20, %81 ], [ %114, %117 ], [ %114, %120 ], [ %114, %122 ]
  %126 = phi i64 [ %82, %81 ], [ %119, %117 ], [ %18, %120 ], [ %123, %122 ]
  %127 = getelementptr inbounds %"class.std::__1::__hash_table.528", %"class.std::__1::__hash_table.528"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %128 = load %"struct.std::__1::__hash_node_base.532"**, %"struct.std::__1::__hash_node_base.532"*** %127, align 8
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %128, i64 %126
  %130 = load %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %129, align 8
  %131 = icmp eq %"struct.std::__1::__hash_node_base.532"* %130, null
  br i1 %131, label %132, label %158

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"class.std::__1::__hash_table.528", %"class.std::__1::__hash_table.528"* %0, i64 0, i32 1, i32 0, i32 0
  %134 = bitcast %"struct.std::__1::__hash_node_base.532"* %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast i8* %83 to i64*
  store i64 %135, i64* %136, align 8
  %137 = bitcast %"struct.std::__1::__hash_node_base.532"* %133 to i8**
  store i8* %83, i8** %137, align 8
  store %"struct.std::__1::__hash_node_base.532"* %133, %"struct.std::__1::__hash_node_base.532"** %129, align 8
  %138 = load %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %90, align 8
  %139 = icmp eq %"struct.std::__1::__hash_node_base.532"* %138, null
  br i1 %139, label %165, label %140

140:                                              ; preds = %132
  %141 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %138, i64 1
  %142 = bitcast %"struct.std::__1::__hash_node_base.532"* %141 to i64*
  %143 = load i64, i64* %142, align 8
  %144 = tail call i64 @llvm.ctpop.i64(i64 %125) #11, !range !9
  %145 = icmp ugt i64 %144, 1
  br i1 %145, label %149, label %146

146:                                              ; preds = %140
  %147 = add i64 %125, -1
  %148 = and i64 %143, %147
  br label %153

149:                                              ; preds = %140
  %150 = icmp ult i64 %143, %125
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = urem i64 %143, %125
  br label %153

153:                                              ; preds = %146, %149, %151
  %154 = phi i64 [ %148, %146 ], [ %152, %151 ], [ %143, %149 ]
  %155 = load %"struct.std::__1::__hash_node_base.532"**, %"struct.std::__1::__hash_node_base.532"*** %127, align 8
  %156 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %155, i64 %154
  %157 = bitcast %"struct.std::__1::__hash_node_base.532"** %156 to i8**
  br label %163

158:                                              ; preds = %124
  %159 = bitcast %"struct.std::__1::__hash_node_base.532"* %130 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast i8* %83 to i64*
  store i64 %160, i64* %161, align 8
  %162 = bitcast %"struct.std::__1::__hash_node_base.532"* %130 to i8**
  br label %163

163:                                              ; preds = %153, %158
  %164 = phi i8** [ %162, %158 ], [ %157, %153 ]
  store i8* %83, i8** %164, align 8
  br label %165

165:                                              ; preds = %163, %132
  %166 = bitcast i8* %83 to %"struct.std::__1::__hash_node_base.532"*
  %167 = load i64, i64* %91, align 8
  %168 = add i64 %167, 1
  store i64 %168, i64* %91, align 8
  br label %169

169:                                              ; preds = %76, %58, %165
  %170 = phi i8 [ 1, %165 ], [ 0, %58 ], [ 0, %76 ]
  %171 = phi %"struct.std::__1::__hash_node_base.532"* [ %166, %165 ], [ %44, %58 ], [ %66, %76 ]
  %172 = insertvalue { %"struct.std::__1::__hash_node_base.532"*, i8 } undef, %"struct.std::__1::__hash_node_base.532"* %171, 0
  %173 = insertvalue { %"struct.std::__1::__hash_node_base.532"*, i8 } %172, i8 %170, 1
  ret { %"struct.std::__1::__hash_node_base.532"*, i8 } %173
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6rehashEm(%"class.std::__1::__hash_table.528"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !9
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #11
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.528", %"class.std::__1::__hash_table.528"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.528"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #11, !range !9
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.528", %"class.std::__1::__hash_table.528"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.528", %"class.std::__1::__hash_table.528"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #11
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #11, !range !9
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #11
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.528"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE8__rehashEm(%"class.std::__1::__hash_table.528"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.528", %"class.std::__1::__hash_table.528"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #12
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #13
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.528", %"class.std::__1::__hash_table.528"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.532"**, %"struct.std::__1::__hash_node_base.532"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.528"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.532"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.532"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #13
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.534", %"class.std::__1::__bucket_list_deallocator.534"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.532"**, %"struct.std::__1::__hash_node_base.532"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.532"* null, %"struct.std::__1::__hash_node_base.532"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !13

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.528", %"class.std::__1::__hash_table.528"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.532"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.532"**, %"struct.std::__1::__hash_node_base.532"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.532"* null, %"struct.std::__1::__hash_node_base.532"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.532"**, %"struct.std::__1::__hash_node_base.532"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.532"* null, %"struct.std::__1::__hash_node_base.532"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.532"**, %"struct.std::__1::__hash_node_base.532"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.532"* null, %"struct.std::__1::__hash_node_base.532"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.532"**, %"struct.std::__1::__hash_node_base.532"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.532"* null, %"struct.std::__1::__hash_node_base.532"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.532"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #11, !range !9
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.532"**, %"struct.std::__1::__hash_node_base.532"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.532"* %36, %"struct.std::__1::__hash_node_base.532"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.532"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base.532"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.532"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.532"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.532"**, %"struct.std::__1::__hash_node_base.532"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.532"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base.532"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.532"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.532"* %103 to %"class.v8::internal::MemoryChunk"**
  %105 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %130, align 8
  %106 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %104, align 8
  %107 = icmp eq %"class.v8::internal::MemoryChunk"* %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base.532"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base.532"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base.532"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base.532"**, %"struct.std::__1::__hash_node_base.532"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base.532"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base.532"**, %"struct.std::__1::__hash_node_base.532"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.532"* %80, %"struct.std::__1::__hash_node_base.532"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.532"* %82, %"struct.std::__1::__hash_node_base.532"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base.532"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.532"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base.532"* %129 to %"class.v8::internal::MemoryChunk"**
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base.532"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base.532"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.532"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base.532"**, %"struct.std::__1::__hash_node_base.532"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.532"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base.532"* %146 to %"class.v8::internal::MemoryChunk"**
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base.532"* %134, %"struct.std::__1::__hash_node_base.532"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base.532"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.532"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base.532"* %155 to %"class.v8::internal::MemoryChunk"**
  %157 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %147, align 8
  %158 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %156, align 8
  %159 = icmp eq %"class.v8::internal::MemoryChunk"* %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base.532"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base.532"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base.532"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base.532"**, %"struct.std::__1::__hash_node_base.532"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base.532"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base.532"**, %"struct.std::__1::__hash_node_base.532"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.532"* %132, %"struct.std::__1::__hash_node_base.532"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base.532"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base.532"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table.528", %"class.std::__1::__hash_table.528"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.532"**, %"struct.std::__1::__hash_node_base.532"*** %180, align 8
  store %"struct.std::__1::__hash_node_base.532"** null, %"struct.std::__1::__hash_node_base.532"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.532"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base.532"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #13
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.534", %"class.std::__1::__bucket_list_deallocator.534"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #9

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #9

declare void @_ZN2v88internal4Heap32UnregisterUnprotectedMemoryChunkEPNS0_11MemoryChunkE(%"class.v8::internal::Heap"*, %"class.v8::internal::MemoryChunk"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.std::__1::__hash_node_base.532"* @_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE4findIS4_EENS_15__hash_iteratorIPNS_11__hash_nodeIS4_PvEEEERKT_(%"class.std::__1::__hash_table.528"*, %"class.v8::internal::MemoryChunk"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %1, align 8
  %4 = ptrtoint %"class.v8::internal::MemoryChunk"* %3 to i64
  %5 = lshr i64 %4, 32
  %6 = shl i64 %4, 3
  %7 = and i64 %6, 4294967288
  %8 = add nuw nsw i64 %7, 8
  %9 = xor i64 %8, %5
  %10 = mul i64 %9, -7070675565921424023
  %11 = lshr i64 %10, 47
  %12 = xor i64 %10, %5
  %13 = xor i64 %12, %11
  %14 = mul i64 %13, -7070675565921424023
  %15 = lshr i64 %14, 47
  %16 = xor i64 %15, %14
  %17 = mul i64 %16, -7070675565921424023
  %18 = getelementptr inbounds %"class.std::__1::__hash_table.528", %"class.std::__1::__hash_table.528"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %84, label %21

21:                                               ; preds = %2
  %22 = tail call i64 @llvm.ctpop.i64(i64 %19) #11, !range !9
  %23 = icmp ugt i64 %22, 1
  br i1 %23, label %27, label %24

24:                                               ; preds = %21
  %25 = add i64 %19, -1
  %26 = and i64 %17, %25
  br label %31

27:                                               ; preds = %21
  %28 = icmp ult i64 %17, %19
  br i1 %28, label %31, label %29

29:                                               ; preds = %27
  %30 = urem i64 %17, %19
  br label %31

31:                                               ; preds = %24, %27, %29
  %32 = phi i64 [ %26, %24 ], [ %30, %29 ], [ %17, %27 ]
  %33 = getelementptr inbounds %"class.std::__1::__hash_table.528", %"class.std::__1::__hash_table.528"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"struct.std::__1::__hash_node_base.532"**, %"struct.std::__1::__hash_node_base.532"*** %33, align 8
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %34, i64 %32
  %36 = load %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %35, align 8
  %37 = icmp eq %"struct.std::__1::__hash_node_base.532"* %36, null
  br i1 %37, label %84, label %38

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %36, i64 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.532"* %40, null
  br i1 %41, label %84, label %42

42:                                               ; preds = %38
  %43 = add i64 %19, -1
  br i1 %23, label %44, label %66

44:                                               ; preds = %42, %62
  %45 = phi %"struct.std::__1::__hash_node_base.532"* [ %64, %62 ], [ %40, %42 ]
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %45, i64 1
  %47 = bitcast %"struct.std::__1::__hash_node_base.532"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %17
  br i1 %49, label %57, label %50

50:                                               ; preds = %44
  %51 = icmp ult i64 %48, %19
  br i1 %51, label %54, label %52

52:                                               ; preds = %50
  %53 = urem i64 %48, %19
  br label %54

54:                                               ; preds = %52, %50
  %55 = phi i64 [ %53, %52 ], [ %48, %50 ]
  %56 = icmp eq i64 %55, %32
  br i1 %56, label %62, label %84

57:                                               ; preds = %44
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %45, i64 2
  %59 = bitcast %"struct.std::__1::__hash_node_base.532"* %58 to %"class.v8::internal::MemoryChunk"**
  %60 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %59, align 8
  %61 = icmp eq %"class.v8::internal::MemoryChunk"* %60, %3
  br i1 %61, label %84, label %62

62:                                               ; preds = %57, %54
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %45, i64 0, i32 0
  %64 = load %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %63, align 8
  %65 = icmp eq %"struct.std::__1::__hash_node_base.532"* %64, null
  br i1 %65, label %84, label %44

66:                                               ; preds = %42, %80
  %67 = phi %"struct.std::__1::__hash_node_base.532"* [ %82, %80 ], [ %40, %42 ]
  %68 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %67, i64 1
  %69 = bitcast %"struct.std::__1::__hash_node_base.532"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = icmp eq i64 %70, %17
  br i1 %71, label %75, label %72

72:                                               ; preds = %66
  %73 = and i64 %70, %43
  %74 = icmp eq i64 %73, %32
  br i1 %74, label %80, label %84

75:                                               ; preds = %66
  %76 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %67, i64 2
  %77 = bitcast %"struct.std::__1::__hash_node_base.532"* %76 to %"class.v8::internal::MemoryChunk"**
  %78 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %77, align 8
  %79 = icmp eq %"class.v8::internal::MemoryChunk"* %78, %3
  br i1 %79, label %84, label %80

80:                                               ; preds = %72, %75
  %81 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %67, i64 0, i32 0
  %82 = load %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %81, align 8
  %83 = icmp eq %"struct.std::__1::__hash_node_base.532"* %82, null
  br i1 %83, label %84, label %66

84:                                               ; preds = %75, %80, %72, %57, %62, %54, %38, %2, %31
  %85 = phi %"struct.std::__1::__hash_node_base.532"* [ null, %31 ], [ null, %2 ], [ null, %38 ], [ %45, %57 ], [ null, %62 ], [ null, %54 ], [ %67, %75 ], [ null, %80 ], [ null, %72 ]
  ret %"struct.std::__1::__hash_node_base.532"* %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIS4_PvEEEE(%"class.std::__1::unique_ptr.1154"* noalias sret, %"class.std::__1::__hash_table.528"*, %"struct.std::__1::__hash_node_base.532"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.528", %"class.std::__1::__hash_table.528"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.532"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #11, !range !9
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.528", %"class.std::__1::__hash_table.528"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.532"**, %"struct.std::__1::__hash_node_base.532"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.532"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.532"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.528", %"class.std::__1::__hash_table.528"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.539", %"class.std::__1::__compressed_pair.539"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.532"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.532"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.532"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.532"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.532"* null, %"struct.std::__1::__hash_node_base.532"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.532"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.532"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532", %"struct.std::__1::__hash_node_base.532"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.532"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.532"**, %"struct.std::__1::__hash_node_base.532"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.532"*, %"struct.std::__1::__hash_node_base.532"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.532"* %25, %"struct.std::__1::__hash_node_base.532"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.532"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.532"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.532"* null, %"struct.std::__1::__hash_node_base.532"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.528", %"class.std::__1::__hash_table.528"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.532"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.1154"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1154", %"class.std::__1::unique_ptr.1154"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.542"** %98 to %"class.std::__1::__compressed_pair.539"**
  store %"class.std::__1::__compressed_pair.539"* %30, %"class.std::__1::__compressed_pair.539"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.1154", %"class.std::__1::unique_ptr.1154"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #2

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15MemoryAllocator8Unmapper18UnmapFreeMemoryJobD0Ev(%"class.v8::internal::MemoryAllocator::Unmapper::UnmapFreeMemoryJob"*) unnamed_addr #10 comdat align 2 {
  %2 = bitcast %"class.v8::internal::MemoryAllocator::Unmapper::UnmapFreeMemoryJob"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15MemoryAllocator8Unmapper18UnmapFreeMemoryJob3RunEPNS_11JobDelegateE(%"class.v8::internal::MemoryAllocator::Unmapper::UnmapFreeMemoryJob"*, %"class.v8::JobDelegate"*) unnamed_addr #0 comdat align 2 {
  %3 = alloca [2 x %"class.std::__1::unique_ptr.1170"], align 16
  %4 = alloca %"class.v8::internal::GCTracer::Scope", align 8
  %5 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %6 = alloca %"class.v8::internal::GCTracer::Scope", align 8
  %7 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %8 = bitcast %"class.v8::JobDelegate"* %1 to i1 (%"class.v8::JobDelegate"*)***
  %9 = load i1 (%"class.v8::JobDelegate"*)**, i1 (%"class.v8::JobDelegate"*)*** %8, align 8
  %10 = getelementptr inbounds i1 (%"class.v8::JobDelegate"*)*, i1 (%"class.v8::JobDelegate"*)** %9, i64 3
  %11 = load i1 (%"class.v8::JobDelegate"*)*, i1 (%"class.v8::JobDelegate"*)** %10, align 8
  %12 = tail call zeroext i1 %11(%"class.v8::JobDelegate"* %1) #11
  br i1 %12, label %13, label %98

13:                                               ; preds = %2
  %14 = bitcast %"class.v8::internal::GCTracer::Scope"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %14) #11
  %15 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper::UnmapFreeMemoryJob", %"class.v8::internal::MemoryAllocator::Unmapper::UnmapFreeMemoryJob"* %0, i64 0, i32 2
  %16 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %15, align 8
  call void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"* nonnull %4, %"class.v8::internal::GCTracer"* %16, i32 109, i32 0) #11
  %17 = load atomic i64, i64* @_ZZN2v88internal15MemoryAllocator8Unmapper18UnmapFreeMemoryJob3RunEPNS_11JobDelegateEE27trace_event_unique_atomic69 monotonic, align 8
  %18 = inttoptr i64 %17 to i8*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %13
  %21 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #11
  %22 = bitcast %"class.v8::TracingController"* %21 to i8* (%"class.v8::TracingController"*, i8*)***
  %23 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %23, i64 2
  %25 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, align 8
  %26 = call i8* %25(%"class.v8::TracingController"* %21, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0)) #11
  %27 = ptrtoint i8* %26 to i64
  store atomic volatile i64 %27, i64* @_ZZN2v88internal15MemoryAllocator8Unmapper18UnmapFreeMemoryJob3RunEPNS_11JobDelegateEE27trace_event_unique_atomic69 monotonic, align 8
  br label %28

28:                                               ; preds = %13, %20
  %29 = phi i8* [ %18, %13 ], [ %26, %20 ]
  %30 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #11
  %31 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %32 = load atomic i8, i8* %29 monotonic, align 1
  %33 = and i8 %32, 5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %68, label %35

35:                                               ; preds = %28
  %36 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 109) #11
  %37 = bitcast [2 x %"class.std::__1::unique_ptr.1170"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #11
  %38 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1170"], [2 x %"class.std::__1::unique_ptr.1170"]* %3, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 0, i64 16, i1 false) #11
  %39 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #11
  %40 = bitcast %"class.v8::TracingController"* %39 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1170"*, i32)***
  %41 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1170"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1170"*, i32)*** %40, align 8
  %42 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1170"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1170"*, i32)** %41, i64 3
  %43 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1170"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1170"*, i32)** %42, align 8
  %44 = call i64 %43(%"class.v8::TracingController"* %39, i8 signext 88, i8* %29, i8* %36, i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1170"* nonnull %38, i32 0) #11
  %45 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1170"], [2 x %"class.std::__1::unique_ptr.1170"]* %3, i64 0, i64 1, i32 0, i32 0, i32 0
  %46 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %45, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %45, align 8
  %47 = icmp eq %"class.v8::ConvertableToTraceFormat"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %35
  %49 = bitcast %"class.v8::ConvertableToTraceFormat"* %46 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %50 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, i64 1
  %52 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %51, align 8
  call void %52(%"class.v8::ConvertableToTraceFormat"* nonnull %46) #11
  br label %53

53:                                               ; preds = %48, %35
  %54 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1170"], [2 x %"class.std::__1::unique_ptr.1170"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %54, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %54, align 16
  %56 = icmp eq %"class.v8::ConvertableToTraceFormat"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.v8::ConvertableToTraceFormat"* %55 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %59 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, i64 1
  %61 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %60, align 8
  call void %61(%"class.v8::ConvertableToTraceFormat"* nonnull %55) #11
  br label %62

62:                                               ; preds = %53, %57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #11
  %63 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 109) #11
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 1
  %65 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %64, i64 0, i32 0
  store i8* %29, i8** %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 1, i32 1
  store i8* %63, i8** %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 1, i32 2
  store i64 %44, i64* %67, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %64, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  br label %68

68:                                               ; preds = %28, %62
  %69 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper::UnmapFreeMemoryJob", %"class.v8::internal::MemoryAllocator::Unmapper::UnmapFreeMemoryJob"* %0, i64 0, i32 1
  %70 = load %"class.v8::internal::MemoryAllocator::Unmapper"*, %"class.v8::internal::MemoryAllocator::Unmapper"** %69, align 8
  call void @_ZN2v88internal15MemoryAllocator8Unmapper31PerformFreeMemoryOnQueuedChunksILNS2_8FreeModeE0EEEvPNS_11JobDelegateE(%"class.v8::internal::MemoryAllocator::Unmapper"* %70, %"class.v8::JobDelegate"* %1) #11
  %71 = load i8, i8* @_ZN2v88internal19FLAG_trace_unmapperE, align 1, !range !2
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %79, label %73

73:                                               ; preds = %68
  %74 = bitcast %"class.v8::internal::MemoryAllocator::Unmapper"** %69 to i64**
  %75 = load i64*, i64** %74, align 8
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, -41416
  %78 = inttoptr i64 %77 to i8*
  call void (i8*, i8*, ...) @_ZN2v88internal12PrintIsolateEPvPKcz(i8* %78, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0)) #11
  br label %79

79:                                               ; preds = %68, %73
  %80 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %81 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %80, null
  br i1 %81, label %183, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 1, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = load atomic i8, i8* %84 monotonic, align 1
  %86 = icmp eq i8 %85, 0
  br i1 %86, label %183, label %87

87:                                               ; preds = %82
  %88 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #11
  %89 = load i8*, i8** %83, align 8
  %90 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 1, i32 1
  %91 = load i8*, i8** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %5, i64 0, i32 1, i32 2
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.v8::TracingController"* %88 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %95 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %95, i64 5
  %97 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %96, align 8
  call void %97(%"class.v8::TracingController"* %88, i8* %89, i8* %91, i64 %93) #11
  br label %183

98:                                               ; preds = %2
  %99 = bitcast %"class.v8::internal::GCTracer::Scope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %99) #11
  %100 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper::UnmapFreeMemoryJob", %"class.v8::internal::MemoryAllocator::Unmapper::UnmapFreeMemoryJob"* %0, i64 0, i32 2
  %101 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %100, align 8
  call void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"* nonnull %6, %"class.v8::internal::GCTracer"* %101, i32 113, i32 1) #11
  %102 = load atomic i64, i64* @_ZZN2v88internal15MemoryAllocator8Unmapper18UnmapFreeMemoryJob3RunEPNS_11JobDelegateEE27trace_event_unique_atomic74 monotonic, align 8
  %103 = inttoptr i64 %102 to i8*
  %104 = icmp eq i64 %102, 0
  br i1 %104, label %105, label %113

105:                                              ; preds = %98
  %106 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #11
  %107 = bitcast %"class.v8::TracingController"* %106 to i8* (%"class.v8::TracingController"*, i8*)***
  %108 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %107, align 8
  %109 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %108, i64 2
  %110 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %109, align 8
  %111 = call i8* %110(%"class.v8::TracingController"* %106, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.10, i64 0, i64 0)) #11
  %112 = ptrtoint i8* %111 to i64
  store atomic volatile i64 %112, i64* @_ZZN2v88internal15MemoryAllocator8Unmapper18UnmapFreeMemoryJob3RunEPNS_11JobDelegateEE27trace_event_unique_atomic74 monotonic, align 8
  br label %113

113:                                              ; preds = %98, %105
  %114 = phi i8* [ %103, %98 ], [ %111, %105 ]
  %115 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %115) #11
  %116 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %7, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %116, align 8
  %117 = load atomic i8, i8* %114 monotonic, align 1
  %118 = and i8 %117, 5
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %153, label %120

120:                                              ; preds = %113
  %121 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 113) #11
  %122 = bitcast [2 x %"class.std::__1::unique_ptr.1170"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %122) #11
  %123 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1170"], [2 x %"class.std::__1::unique_ptr.1170"]* %3, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %122, i8 0, i64 16, i1 false) #11
  %124 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #11
  %125 = bitcast %"class.v8::TracingController"* %124 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1170"*, i32)***
  %126 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1170"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1170"*, i32)*** %125, align 8
  %127 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1170"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1170"*, i32)** %126, i64 3
  %128 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1170"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1170"*, i32)** %127, align 8
  %129 = call i64 %128(%"class.v8::TracingController"* %124, i8 signext 88, i8* %114, i8* %121, i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1170"* nonnull %123, i32 0) #11
  %130 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1170"], [2 x %"class.std::__1::unique_ptr.1170"]* %3, i64 0, i64 1, i32 0, i32 0, i32 0
  %131 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %130, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %130, align 8
  %132 = icmp eq %"class.v8::ConvertableToTraceFormat"* %131, null
  br i1 %132, label %138, label %133

133:                                              ; preds = %120
  %134 = bitcast %"class.v8::ConvertableToTraceFormat"* %131 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %135 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %134, align 8
  %136 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %135, i64 1
  %137 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %136, align 8
  call void %137(%"class.v8::ConvertableToTraceFormat"* nonnull %131) #11
  br label %138

138:                                              ; preds = %133, %120
  %139 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1170"], [2 x %"class.std::__1::unique_ptr.1170"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0
  %140 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %139, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %139, align 16
  %141 = icmp eq %"class.v8::ConvertableToTraceFormat"* %140, null
  br i1 %141, label %147, label %142

142:                                              ; preds = %138
  %143 = bitcast %"class.v8::ConvertableToTraceFormat"* %140 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %144 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %143, align 8
  %145 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %144, i64 1
  %146 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %145, align 8
  call void %146(%"class.v8::ConvertableToTraceFormat"* nonnull %140) #11
  br label %147

147:                                              ; preds = %138, %142
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %122) #11
  %148 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 113) #11
  %149 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %7, i64 0, i32 1
  %150 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %149, i64 0, i32 0
  store i8* %114, i8** %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %7, i64 0, i32 1, i32 1
  store i8* %148, i8** %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %7, i64 0, i32 1, i32 2
  store i64 %129, i64* %152, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %149, %"struct.v8::internal::tracing::ScopedTracer::Data"** %116, align 8
  br label %153

153:                                              ; preds = %113, %147
  %154 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper::UnmapFreeMemoryJob", %"class.v8::internal::MemoryAllocator::Unmapper::UnmapFreeMemoryJob"* %0, i64 0, i32 1
  %155 = load %"class.v8::internal::MemoryAllocator::Unmapper"*, %"class.v8::internal::MemoryAllocator::Unmapper"** %154, align 8
  call void @_ZN2v88internal15MemoryAllocator8Unmapper31PerformFreeMemoryOnQueuedChunksILNS2_8FreeModeE0EEEvPNS_11JobDelegateE(%"class.v8::internal::MemoryAllocator::Unmapper"* %155, %"class.v8::JobDelegate"* %1) #11
  %156 = load i8, i8* @_ZN2v88internal19FLAG_trace_unmapperE, align 1, !range !2
  %157 = icmp eq i8 %156, 0
  br i1 %157, label %164, label %158

158:                                              ; preds = %153
  %159 = bitcast %"class.v8::internal::MemoryAllocator::Unmapper"** %154 to i64**
  %160 = load i64*, i64** %159, align 8
  %161 = load i64, i64* %160, align 8
  %162 = add i64 %161, -41416
  %163 = inttoptr i64 %162 to i8*
  call void (i8*, i8*, ...) @_ZN2v88internal12PrintIsolateEPvPKcz(i8* %163, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.11, i64 0, i64 0)) #11
  br label %164

164:                                              ; preds = %153, %158
  %165 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %116, align 8
  %166 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %165, null
  br i1 %166, label %183, label %167

167:                                              ; preds = %164
  %168 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %7, i64 0, i32 1, i32 0
  %169 = load i8*, i8** %168, align 8
  %170 = load atomic i8, i8* %169 monotonic, align 1
  %171 = icmp eq i8 %170, 0
  br i1 %171, label %183, label %172

172:                                              ; preds = %167
  %173 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #11
  %174 = load i8*, i8** %168, align 8
  %175 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %7, i64 0, i32 1, i32 1
  %176 = load i8*, i8** %175, align 8
  %177 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %7, i64 0, i32 1, i32 2
  %178 = load i64, i64* %177, align 8
  %179 = bitcast %"class.v8::TracingController"* %173 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %180 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %179, align 8
  %181 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %180, i64 5
  %182 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %181, align 8
  call void %182(%"class.v8::TracingController"* %173, i8* %174, i8* %176, i64 %178) #11
  br label %183

183:                                              ; preds = %172, %167, %164, %87, %82, %79
  %184 = phi i8* [ %30, %79 ], [ %30, %82 ], [ %30, %87 ], [ %115, %164 ], [ %115, %167 ], [ %115, %172 ]
  %185 = phi %"class.v8::internal::GCTracer::Scope"* [ %4, %79 ], [ %4, %82 ], [ %4, %87 ], [ %6, %164 ], [ %6, %167 ], [ %6, %172 ]
  %186 = phi i8* [ %14, %79 ], [ %14, %82 ], [ %14, %87 ], [ %99, %164 ], [ %99, %167 ], [ %99, %172 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %184) #11
  call void @_ZN2v88internal8GCTracer5ScopeD1Ev(%"class.v8::internal::GCTracer::Scope"* nonnull %185) #11
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %186) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK2v88internal15MemoryAllocator8Unmapper18UnmapFreeMemoryJob17GetMaxConcurrencyEm(%"class.v8::internal::MemoryAllocator::Unmapper::UnmapFreeMemoryJob"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper::UnmapFreeMemoryJob", %"class.v8::internal::MemoryAllocator::Unmapper::UnmapFreeMemoryJob"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::MemoryAllocator::Unmapper"*, %"class.v8::internal::MemoryAllocator::Unmapper"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %4, i64 0, i32 2
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %5) #11
  %6 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %4, i64 0, i32 3, i64 0
  %7 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %4, i64 0, i32 3, i64 0, i32 0, i32 1
  %8 = bitcast %"class.v8::internal::MemoryChunk"*** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.1123"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  %14 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %4, i64 0, i32 3, i64 1
  %15 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %4, i64 0, i32 3, i64 1, i32 0, i32 1
  %16 = bitcast %"class.v8::internal::MemoryChunk"*** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.std::__1::vector.1123"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = ashr exact i64 %20, 3
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %5) #11
  %22 = add nsw i64 %13, 7
  %23 = add nsw i64 %22, %21
  %24 = lshr i64 %23, 3
  %25 = add i64 %24, %1
  %26 = icmp ult i64 %25, 4
  %27 = select i1 %26, i64 %25, i64 4
  ret i64 %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v87JobTaskD2Ev(%"class.v8::JobTask"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"*, %"class.v8::internal::GCTracer"*, i32, i32) unnamed_addr #2

declare %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() local_unnamed_addr #2

declare i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN2v88internal8GCTracer5ScopeD1Ev(%"class.v8::internal::GCTracer::Scope"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.v8::internal::MemoryChunk"* @_ZN2v88internal15MemoryAllocator8Unmapper27TryGetPooledMemoryChunkSafeEv(%"class.v8::internal::MemoryAllocator::Unmapper"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 2
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %2) #11
  %3 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 2, i32 0, i32 0
  %4 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 2, i32 0, i32 1
  %6 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::MemoryChunk"** %4, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %1
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2) #11
  br label %13

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %6, i64 -1
  %11 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %10, align 8
  store %"class.v8::internal::MemoryChunk"** %10, %"class.v8::internal::MemoryChunk"*** %5, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2) #11
  %12 = icmp eq %"class.v8::internal::MemoryChunk"* %11, null
  br i1 %12, label %13, label %25

13:                                               ; preds = %8, %9
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %2) #11
  %14 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 0, i32 0, i32 0
  %15 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::MemoryAllocator::Unmapper", %"class.v8::internal::MemoryAllocator::Unmapper"* %0, i64 0, i32 3, i64 0, i32 0, i32 1
  %17 = load %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"*** %16, align 8
  %18 = icmp eq %"class.v8::internal::MemoryChunk"** %15, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %13
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2) #11
  br label %25

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %17, i64 -1
  %22 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %21, align 8
  store %"class.v8::internal::MemoryChunk"** %21, %"class.v8::internal::MemoryChunk"*** %16, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2) #11
  %23 = icmp eq %"class.v8::internal::MemoryChunk"* %22, null
  br i1 %23, label %25, label %24

24:                                               ; preds = %20
  tail call void @_ZN2v88internal11MemoryChunk25ReleaseAllAllocatedMemoryEv(%"class.v8::internal::MemoryChunk"* nonnull %22) #11
  br label %25

25:                                               ; preds = %19, %20, %24, %9
  %26 = phi %"class.v8::internal::MemoryChunk"* [ %22, %24 ], [ null, %20 ], [ %11, %9 ], [ null, %19 ]
  ret %"class.v8::internal::MemoryChunk"* %26
}

declare i64 @_ZN2v88internal17MemoryChunkLayout30ObjectStartOffsetInMemoryChunkENS0_15AllocationSpaceE(i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.usub.sat.i64(i64, i64) #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }
attributes #13 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !6}
!8 = !{i32 19454409}
!9 = !{i64 0, i64 65}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__112__hash_tableIPN2v88internal11MemoryChunkENS_4hashIS4_EENS_8equal_toIS4_EENS_9allocatorIS4_EEE21__construct_node_hashIRKS4_JEEENS_10unique_ptrINS_11__hash_nodeIS4_PvEENS_22__hash_node_destructorINS9_ISI_EEEEEEmOT_DpOT0_"}
!13 = distinct !{!13, !6}
