; ModuleID = '../../third_party/blink/renderer/modules/storage/cached_storage_area.cc'
source_filename = "../../third_party/blink/renderer/modules/storage/cached_storage_area.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::String" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.136", %"class.std::__1::unique_ptr.136", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.152", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.164", %"class.std::__1::unique_ptr.170", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.177", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.12", %"class.std::__1::unique_ptr.18", %"class.std::__1::unique_ptr.24", %"class.std::__1::unique_ptr.30", %"class.std::__1::unique_ptr.36", %"class.std::__1::unique_ptr.47", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.54", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.119", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.18" = type { %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.39" = type { %"struct.std::__1::__atomic_base.40" }
%"struct.std::__1::__atomic_base.40" = type { %"struct.std::__1::__atomic_base.41" }
%"struct.std::__1::__atomic_base.41" = type { %"struct.std::__1::__cxx_atomic_impl.42" }
%"struct.std::__1::__cxx_atomic_impl.42" = type { %"struct.std::__1::__cxx_atomic_base_impl.43" }
%"struct.std::__1::__cxx_atomic_base_impl.43" = type { i64 }
%"class.std::__1::unique_ptr.47" = type { %"class.std::__1::__compressed_pair.48" }
%"class.std::__1::__compressed_pair.48" = type { %"struct.std::__1::__compressed_pair_elem.49" }
%"struct.std::__1::__compressed_pair_elem.49" = type { %"class.blink::Worklist.50"* }
%"class.blink::Worklist.50" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.55" }
%"class.std::__1::__compressed_pair.55" = type { %"struct.std::__1::__compressed_pair_elem.56" }
%"struct.std::__1::__compressed_pair_elem.56" = type { %"class.blink::Worklist.57"* }
%"class.blink::Worklist.57" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist.64"* }
%"class.blink::Worklist.64" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::Worklist.71"* }
%"class.blink::Worklist.71" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist.78"* }
%"class.blink::Worklist.78" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::Worklist.92"* }
%"class.blink::Worklist.92" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.39" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.99", %"class.std::__1::__compressed_pair.106", %"class.std::__1::__compressed_pair.111", %"class.std::__1::__compressed_pair.113", [4 x i8] }>
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101", %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.103" }
%"class.std::__1::__compressed_pair.103" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"struct.std::__1::__compressed_pair_elem.104" = type { i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::__compressed_pair.113" = type { %"struct.std::__1::__compressed_pair_elem.114" }
%"struct.std::__1::__compressed_pair_elem.114" = type { float }
%"class.std::__1::unique_ptr.119" = type { %"class.std::__1::__compressed_pair.120" }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.122", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.122" = type { %"class.std::__1::__compressed_pair.123" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.144" }
%"class.WTF::VectorBuffer.144" = type { %"class.WTF::VectorBufferBase.145" }
%"class.WTF::VectorBufferBase.145" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.158" }
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.50"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.57"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.64"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.71"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.78"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.409" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.176 }
%class.scoped_refptr.176 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.177" = type { %"struct.std::__1::__atomic_base.178" }
%"struct.std::__1::__atomic_base.178" = type { %"struct.std::__1::__cxx_atomic_impl.179" }
%"struct.std::__1::__cxx_atomic_impl.179" = type { %"struct.std::__1::__cxx_atomic_base_impl.180" }
%"struct.std::__1::__cxx_atomic_base_impl.180" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.182" }
%"struct.std::__1::atomic.182" = type { %"struct.std::__1::__atomic_base.183" }
%"struct.std::__1::__atomic_base.183" = type { %"struct.std::__1::__atomic_base.184" }
%"struct.std::__1::__atomic_base.184" = type { %"struct.std::__1::__cxx_atomic_impl.185" }
%"struct.std::__1::__cxx_atomic_impl.185" = type { %"struct.std::__1::__cxx_atomic_base_impl.186" }
%"struct.std::__1::__cxx_atomic_base_impl.186" = type { i32 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::CachedStorageArea" = type { %"class.blink::mojom::blink::StorageAreaObserver", %"class.WTF::RefCounted", %"class.base::trace_event::MemoryDumpProvider", i32, %class.scoped_refptr, %"class.blink::WeakPersistent", i8, %class.scoped_refptr.181, %"class.std::__1::unique_ptr.187", %"class.WTF::HashMap.198", %"class.WTF::HashMap.214", i8, %"class.mojo::Remote", %"class.mojo::Receiver", %"class.blink::Persistent" }
%"class.blink::mojom::blink::StorageAreaObserver" = type { i32 (...)** }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.base::trace_event::MemoryDumpProvider" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.blink::SecurityOrigin"* }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::StorageNamespace"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%class.scoped_refptr.181 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.std::__1::unique_ptr.187" = type { %"class.std::__1::__compressed_pair.188" }
%"class.std::__1::__compressed_pair.188" = type { %"struct.std::__1::__compressed_pair_elem.189" }
%"struct.std::__1::__compressed_pair_elem.189" = type { %"class.blink::StorageAreaMap"* }
%"class.blink::StorageAreaMap" = type { %"class.WTF::HashMap.190", %"struct.WTF::HashTableConstIteratorAdapter", i32, i64, i64, i64 }
%"class.WTF::HashMap.190" = type { %"class.WTF::HashTable.191" }
%"class.WTF::HashTable.191" = type <{ %"struct.WTF::KeyValuePair.194"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.194" = type { %"class.WTF::String", %"class.WTF::String" }
%"struct.WTF::HashTableConstIteratorAdapter" = type { %"class.WTF::HashTableConstIterator" }
%"class.WTF::HashTableConstIterator" = type { %"struct.WTF::KeyValuePair.194"*, %"struct.WTF::KeyValuePair.194"* }
%"class.WTF::HashMap.198" = type { %"class.WTF::HashTable.199" }
%"class.WTF::HashTable.199" = type <{ %"struct.WTF::KeyValuePair.202"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.202" = type { %"class.WTF::String", %"class.WTF::Deque.203" }
%"class.WTF::Deque.203" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::CachedStorageArea::PendingMutation, std::__1::default_delete<blink::CachedStorageArea::PendingMutation> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::CachedStorageArea::PendingMutation, std::__1::default_delete<blink::CachedStorageArea::PendingMutation> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.206" }
%"class.WTF::VectorBuffer.206" = type { %"class.WTF::VectorBufferBase.207" }
%"class.WTF::VectorBufferBase.207" = type { %"class.std::__1::unique_ptr.208"*, i32, i32 }
%"class.std::__1::unique_ptr.208" = type { %"class.std::__1::__compressed_pair.209" }
%"class.std::__1::__compressed_pair.209" = type { %"struct.std::__1::__compressed_pair_elem.210" }
%"struct.std::__1::__compressed_pair_elem.210" = type { %"struct.blink::CachedStorageArea::PendingMutation"* }
%"struct.blink::CachedStorageArea::PendingMutation" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::HashMap.214" = type { %"class.WTF::HashTable.215" }
%"class.WTF::HashTable.215" = type <{ %"struct.WTF::KeyValuePair.218"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.218" = type { %"class.WTF::String", %"class.WTF::Deque.219" }
%"class.WTF::Deque.219" = type { %"class.WTF::Deque<blink::CachedStorageArea::PendingMutation *, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::CachedStorageArea::PendingMutation *, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.222" }
%"class.WTF::VectorBuffer.222" = type { %"class.WTF::VectorBufferBase.223" }
%"class.WTF::VectorBufferBase.223" = type { %"struct.blink::CachedStorageArea::PendingMutation"**, i32, i32 }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.391" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.224, %"class.std::__1::unique_ptr.341", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.226, i32 }>
%class.scoped_refptr.224 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.226, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.303", %"class.absl::optional.308", %"class.absl::optional.264", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.332", i8, [7 x i8], %class.scoped_refptr.226, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.225" }>
%"class.base::RefCountedThreadSafe.225" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.182" }
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.232", %"class.std::__1::unique_ptr.238", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory" }
%"class.std::__1::unique_ptr.232" = type { %"class.std::__1::__compressed_pair.233" }
%"class.std::__1::__compressed_pair.233" = type { %"struct.std::__1::__compressed_pair_elem.234" }
%"struct.std::__1::__compressed_pair_elem.234" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.240" }
%"struct.std::__1::__compressed_pair_elem.240" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.244 }
%class.scoped_refptr.244 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.245", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.245" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.246" }
%"struct.std::__1::atomic.246" = type { %"struct.std::__1::__atomic_base.247" }
%"struct.std::__1::__atomic_base.247" = type { %"struct.std::__1::__atomic_base.248" }
%"struct.std::__1::__atomic_base.248" = type { %"struct.std::__1::__cxx_atomic_impl.249" }
%"struct.std::__1::__cxx_atomic_impl.249" = type { %"struct.std::__1::__cxx_atomic_base_impl.250" }
%"struct.std::__1::__cxx_atomic_base_impl.250" = type { i8 }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.226, %"class.std::__1::unique_ptr.253", %"class.absl::optional", %"struct.std::__1::atomic.177", i8, i8, i8, i8, i32, i32, %"class.absl::optional.264", %"class.std::__1::unique_ptr.269", i8, i64, %class.scoped_refptr.299, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr", %"class.base::WeakPtrFactory.302" }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.251 }
%class.scoped_refptr.251 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.252", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.252" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.253" = type { %"class.std::__1::__compressed_pair.254" }
%"class.std::__1::__compressed_pair.254" = type { %"struct.std::__1::__compressed_pair_elem.255" }
%"struct.std::__1::__compressed_pair_elem.255" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.226, i8, %"class.mojo::ScopedHandleBase.256", %class.scoped_refptr.257, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory.258" }
%"class.mojo::ScopedHandleBase.256" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.257 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::WeakPtrFactory.258" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.262 }
%union.anon.262 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.263", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.263" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.269" = type { %"class.std::__1::__compressed_pair.270" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.272", i8, i64, %class.scoped_refptr.273, %class.scoped_refptr.295 }
%"class.base::RepeatingCallback.272" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.273 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.274", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map", %"class.std::__1::map.284", i8, [7 x i8] }>
%"class.base::RefCounted.274" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.275 }
%class.scoped_refptr.275 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.276", %"class.std::__1::__compressed_pair.281" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.281" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::map.284" = type { %"class.std::__1::__tree.285" }
%"class.std::__1::__tree.285" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.286", %"class.std::__1::__compressed_pair.290" }
%"class.std::__1::__compressed_pair.286" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%class.scoped_refptr.295 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type opaque
%class.scoped_refptr.299 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.300 }
%class.scoped_refptr.300 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.408", [4 x i8], %"class.base::RepeatingCallback.344", %class.scoped_refptr.226, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.408" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::RepeatingCallback.344" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.301 }
%class.scoped_refptr.301 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::WeakPtrFactory.302" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.303" = type { %"class.absl::optional_internal::optional_data.304" }
%"class.absl::optional_internal::optional_data.304" = type { %"class.absl::optional_internal::optional_data_base.305" }
%"class.absl::optional_internal::optional_data_base.305" = type { %"class.absl::optional_internal::optional_data_dtor_base.306" }
%"class.absl::optional_internal::optional_data_dtor_base.306" = type { i8, %union.anon.307 }
%union.anon.307 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.308" = type { %"class.absl::optional_internal::optional_data.309" }
%"class.absl::optional_internal::optional_data.309" = type { %"class.absl::optional_internal::optional_data_base.310" }
%"class.absl::optional_internal::optional_data_base.310" = type { %"class.absl::optional_internal::optional_data_dtor_base.311" }
%"class.absl::optional_internal::optional_data_dtor_base.311" = type { i8, [7 x i8], %union.anon.312 }
%union.anon.312 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.264" = type { %"class.absl::optional_internal::optional_data.265" }
%"class.absl::optional_internal::optional_data.265" = type { %"class.absl::optional_internal::optional_data_base.266" }
%"class.absl::optional_internal::optional_data_base.266" = type { %"class.absl::optional_internal::optional_data_dtor_base.267" }
%"class.absl::optional_internal::optional_data_dtor_base.267" = type { i8, %union.anon.268 }
%union.anon.268 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.317 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.317 = type { %"class.std::__1::map.320" }
%"class.std::__1::map.320" = type { %"class.std::__1::__tree.321" }
%"class.std::__1::__tree.321" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.322", %"class.std::__1::__compressed_pair.326" }
%"class.std::__1::__compressed_pair.322" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"class.std::__1::__compressed_pair.326" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.331"*, i64 }
%"class.std::__1::unique_ptr.331" = type opaque
%"class.std::__1::map.332" = type { %"class.std::__1::__tree.333" }
%"class.std::__1::__tree.333" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.334", %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.334" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::unique_ptr.341" = type { %"class.std::__1::__compressed_pair.342" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback.344", %"class.base::OnceCallback.345", %"class.absl::optional.346", %"class.absl::optional.351", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.358", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.366", %"class.std::__1::map.377", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.386", i8, %class.scoped_refptr.226, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.387" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.base::OnceCallback.345" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.346" = type { %"class.absl::optional_internal::optional_data.347" }
%"class.absl::optional_internal::optional_data.347" = type { %"class.absl::optional_internal::optional_data_base.348" }
%"class.absl::optional_internal::optional_data_base.348" = type { %"class.absl::optional_internal::optional_data_dtor_base.349" }
%"class.absl::optional_internal::optional_data_dtor_base.349" = type { i8, %union.anon.350 }
%union.anon.350 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.351" = type { %"class.absl::optional_internal::optional_data.352" }
%"class.absl::optional_internal::optional_data.352" = type { %"class.absl::optional_internal::optional_data_base.353" }
%"class.absl::optional_internal::optional_data_base.353" = type { %"class.absl::optional_internal::optional_data_dtor_base.354" }
%"class.absl::optional_internal::optional_data_dtor_base.354" = type { i8, %union.anon.355 }
%union.anon.355 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.226, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.356" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.356" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.357 }
%class.scoped_refptr.357 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.358" = type { %"class.std::__1::__compressed_pair.359" }
%"class.std::__1::__compressed_pair.359" = type { %"struct.std::__1::__compressed_pair_elem.360" }
%"struct.std::__1::__compressed_pair_elem.360" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.361", %class.scoped_refptr.362 }
%"class.base::RepeatingCallback.361" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.362 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.225", [4 x i8] }>
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.std::__1::map.366" = type { %"class.std::__1::__tree.367" }
%"class.std::__1::__tree.367" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.368", %"class.std::__1::__compressed_pair.372" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"class.std::__1::__compressed_pair.372" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::map.377" = type { %"class.std::__1::__tree.378" }
%"class.std::__1::__tree.378" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.379", %"class.std::__1::__compressed_pair.383" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.base::OnceCallback.386" = type { %"class.base::internal::CallbackBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.387" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.226 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.391" = type { %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.393" }
%"struct.std::__1::__compressed_pair_elem.393" = type { %"class.blink::mojom::blink::StorageAreaProxy"* }
%"class.blink::mojom::blink::StorageAreaProxy" = type { %"class.blink::mojom::blink::StorageArea", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::StorageArea" = type { i32 (...)** }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::StorageAreaObserverStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.224, %"class.std::__1::unique_ptr.341", %"class.base::WeakPtrFactory.397" }
%"class.base::WeakPtrFactory.397" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::StorageAreaObserverStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::StorageAreaObserver"* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.398" }
%"class.blink::PersistentBase.398" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.407" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.401" }
%"class.WTF::HashMap.401" = type { %"class.WTF::HashTable.402" }
%"class.WTF::HashTable.402" = type <{ %"struct.WTF::KeyValuePair.404"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.404" = type { %"class.blink::WeakMember.405", %"class.WTF::String" }
%"class.blink::WeakMember.405" = type { %"class.blink::MemberBase.406" }
%"class.blink::MemberBase.406" = type { %"class.blink::CachedStorageArea::Source"* }
%"class.blink::CachedStorageArea::Source" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::PersistentNodePtr.407" = type { %"class.blink::PersistentNode"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.527", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.529", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr }
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.529" = type { %"class.absl::optional_internal::optional_data.530" }
%"class.absl::optional_internal::optional_data.530" = type { %"class.absl::optional_internal::optional_data_base.531" }
%"class.absl::optional_internal::optional_data_base.531" = type { %"class.absl::optional_internal::optional_data_dtor_base.532" }
%"class.absl::optional_internal::optional_data_dtor_base.532" = type { i8, %union.anon.533 }
%union.anon.533 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::StorageNamespace" = type { %"class.blink::Supplement", %"class.blink::HeapHashSet", %"class.blink::StorageController"*, %"class.WTF::String", %"class.blink::HeapMojoRemote", %"class.WTF::HashMap" }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.429", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.431", %"class.blink::Member.435", %"class.blink::Member.437", %"class.blink::Member.439", %"class.blink::Member.441", %"class.blink::Member.443", %"class.blink::Member.445", %"class.blink::Member.447", %"class.blink::HeapObserverSet", %"class.blink::Member.456", %"class.blink::Member.458", %"class.blink::Member.460", %"class.blink::Member.462", %"class.blink::Member.464", %"class.blink::Member.466", %"class.blink::Member.468", %"class.blink::Member.470", %"class.blink::Member.472", %"class.blink::Member.474", %"class.blink::Member.476", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.507", %"class.blink::Member", %"class.blink::Member", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.515", %"class.std::__1::unique_ptr.521", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.416" }
%"class.blink::HeapHashMap.416" = type { %"class.WTF::HashMap.419" }
%"class.WTF::HashMap.419" = type { %"class.WTF::HashTable.420" }
%"class.WTF::HashTable.420" = type <{ %"struct.WTF::KeyValuePair.422"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.422" = type { i8*, %"class.blink::Member.692" }
%"class.blink::Member.692" = type { %"class.blink::MemberBase.693" }
%"class.blink::MemberBase.693" = type { %"class.blink::Supplement"* }
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.423" }
%"class.std::__1::unique_ptr.423" = type { %"class.std::__1::__compressed_pair.424" }
%"class.std::__1::__compressed_pair.424" = type { %"struct.std::__1::__compressed_pair_elem.425" }
%"struct.std::__1::__compressed_pair_elem.425" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::Frame"* }
%"class.blink::Frame" = type opaque
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.431" = type { %"class.blink::MemberBase.432" }
%"class.blink::MemberBase.432" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.435" = type { %"class.blink::MemberBase.436" }
%"class.blink::MemberBase.436" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.437" = type { %"class.blink::MemberBase.438" }
%"class.blink::MemberBase.438" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.439" = type { %"class.blink::MemberBase.440" }
%"class.blink::MemberBase.440" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.443" = type { %"class.blink::MemberBase.444" }
%"class.blink::MemberBase.444" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.445" = type { %"class.blink::MemberBase.446" }
%"class.blink::MemberBase.446" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.447" = type { %"class.blink::MemberBase.448" }
%"class.blink::MemberBase.448" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.449" }
%"class.blink::HeapHashSet.449" = type { %"class.WTF::HashSet.452" }
%"class.WTF::HashSet.452" = type { %"class.WTF::HashTable.453" }
%"class.WTF::HashTable.453" = type <{ %"class.blink::WeakMember.455"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.455" = type opaque
%"class.blink::Member.456" = type { %"class.blink::MemberBase.457" }
%"class.blink::MemberBase.457" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.458" = type { %"class.blink::MemberBase.459" }
%"class.blink::MemberBase.459" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.460" = type { %"class.blink::MemberBase.461" }
%"class.blink::MemberBase.461" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.462" = type { %"class.blink::MemberBase.463" }
%"class.blink::MemberBase.463" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.466" = type { %"class.blink::MemberBase.467" }
%"class.blink::MemberBase.467" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.468" = type { %"class.blink::MemberBase.469" }
%"class.blink::MemberBase.469" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.470" = type { %"class.blink::MemberBase.471" }
%"class.blink::MemberBase.471" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.474" = type { %"class.blink::MemberBase.475" }
%"class.blink::MemberBase.475" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.478" }
%"class.WTF::Deque.478" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.481" }
%"class.WTF::VectorBuffer.481" = type { %"class.WTF::VectorBufferBase.482" }
%"class.WTF::VectorBufferBase.482" = type { %"class.std::__1::unique_ptr.483"*, i32, i32 }
%"class.std::__1::unique_ptr.483" = type { %"class.std::__1::__compressed_pair.484" }
%"class.std::__1::__compressed_pair.484" = type { %"struct.std::__1::__compressed_pair_elem.485" }
%"struct.std::__1::__compressed_pair_elem.485" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.489", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.489" = type { %"class.std::__1::__bitset.490" }
%"class.std::__1::__bitset.490" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.491" }
%"class.absl::optional.491" = type { %"class.absl::optional_internal::optional_data.492" }
%"class.absl::optional_internal::optional_data.492" = type { %"class.absl::optional_internal::optional_data_base.493" }
%"class.absl::optional_internal::optional_data_base.493" = type { %"class.absl::optional_internal::optional_data_dtor_base.494" }
%"class.absl::optional_internal::optional_data_dtor_base.494" = type { i8, %union.anon.495 }
%union.anon.495 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.496", i64, %"class.absl::optional.346", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.496" = type { %"class.absl::optional_internal::optional_data.497" }
%"class.absl::optional_internal::optional_data.497" = type { %"class.absl::optional_internal::optional_data_base.498" }
%"class.absl::optional_internal::optional_data_base.498" = type { %"class.absl::optional_internal::optional_data_dtor_base.499" }
%"class.absl::optional_internal::optional_data_dtor_base.499" = type { i8, %union.anon.500 }
%union.anon.500 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.501" }
%"class.std::__1::unique_ptr.501" = type { %"class.std::__1::__compressed_pair.502" }
%"class.std::__1::__compressed_pair.502" = type { %"struct.std::__1::__compressed_pair_elem.503" }
%"struct.std::__1::__compressed_pair_elem.503" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.507" = type { %"class.WTF::HashSet.510" }
%"class.WTF::HashSet.510" = type { %"class.WTF::HashTable.511" }
%"class.WTF::HashTable.511" = type <{ %"class.blink::WeakMember.513"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.513" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.514" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.514" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.515" = type { %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.521" = type { %"class.std::__1::__compressed_pair.522" }
%"class.std::__1::__compressed_pair.522" = type { %"struct.std::__1::__compressed_pair_elem.523" }
%"struct.std::__1::__compressed_pair_elem.523" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.2 }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"class.blink::StorageController" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.4" }
%"class.blink::Member.4" = type { %"class.blink::MemberBase.5" }
%"class.blink::MemberBase.5" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::SessionStorageNamespace, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::SessionStorageNamespace, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.684" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.674" }
%"class.blink::WeakMember.674" = type { %"class.blink::MemberBase.675" }
%"class.blink::MemberBase.675" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.676" }
%"class.blink::HeapObserverSet.676" = type { i32, [4 x i8], %"class.blink::HeapHashSet.677" }
%"class.blink::HeapHashSet.677" = type { %"class.WTF::HashSet.680" }
%"class.WTF::HashSet.680" = type { %"class.WTF::HashTable.681" }
%"class.WTF::HashTable.681" = type <{ %"class.blink::WeakMember.683"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.683" = type opaque
%"class.mojo::Remote.684" = type { %"class.mojo::internal::InterfacePtrState.685" }
%"class.mojo::internal::InterfacePtrState.685" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.686" }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.blink::mojom::blink::SessionStorageNamespaceProxy"* }
%"class.blink::mojom::blink::SessionStorageNamespaceProxy" = type { %"class.blink::mojom::blink::SessionStorageNamespace", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::SessionStorageNamespace" = type { i32 (...)** }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable.6" }
%"class.WTF::HashTable.6" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type opaque
%"class.WTF::Vector.649" = type { %"class.WTF::VectorBuffer.650" }
%"class.WTF::VectorBuffer.650" = type { %"class.WTF::VectorBufferBase.651" }
%"class.WTF::VectorBufferBase.651" = type { %"class.mojo::StructPtr.652"*, i32, i32 }
%"class.mojo::StructPtr.652" = type { %"class.std::__1::unique_ptr.653" }
%"class.std::__1::unique_ptr.653" = type { %"class.std::__1::__compressed_pair.654" }
%"class.std::__1::__compressed_pair.654" = type { %"struct.std::__1::__compressed_pair_elem.655" }
%"struct.std::__1::__compressed_pair_elem.655" = type { %"class.blink::mojom::blink::KeyValue"* }
%"class.blink::mojom::blink::KeyValue" = type { %"class.WTF::Vector.539", %"class.WTF::Vector.539" }
%"class.WTF::Vector.539" = type { %"class.WTF::VectorBuffer.540" }
%"class.WTF::VectorBuffer.540" = type { %"class.WTF::VectorBufferBase.541" }
%"class.WTF::VectorBufferBase.541" = type { i8*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::internal::InterfacePtrStateBase" = type <{ %class.scoped_refptr.224, %"class.std::__1::unique_ptr.341", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.226, i32, [4 x i8] }>
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic", [4 x i8] }>
%"class.absl::optional.534" = type { %"class.absl::optional_internal::optional_data.535" }
%"class.absl::optional_internal::optional_data.535" = type { %"class.absl::optional_internal::optional_data_base.536" }
%"class.absl::optional_internal::optional_data_base.536" = type { %"class.absl::optional_internal::optional_data_dtor_base.537" }
%"class.absl::optional_internal::optional_data_dtor_base.537" = type { i8, %union.anon.538 }
%union.anon.538 = type { %"class.WTF::Vector.539" }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.544" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.544" = type { %"class.std::__1::__compressed_pair.545" }
%"class.std::__1::__compressed_pair.545" = type { %"struct.std::__1::__compressed_pair_elem.546" }
%"struct.std::__1::__compressed_pair_elem.546" = type { %"class.blink::KURL"* }
%"class.base::OnceCallback.550" = type { %"class.base::internal::CallbackBase" }
%"class.WTF::StringUTF8Adaptor" = type <{ %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.694", %"class.WTF::String" }
%"class.WTF::StringAppend.694" = type { %"class.WTF::String", i8* }
%"class.WTF::ConditionalDestructor.204" = type { i8 }
%"struct.std::__1::default_delete.212" = type { i8 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.663" }
%"class.WTF::Vector.663" = type { %"class.WTF::VectorBuffer.664" }
%"class.WTF::VectorBuffer.664" = type { %"class.WTF::VectorBufferBase.665", [8 x i8] }
%"class.WTF::VectorBufferBase.665" = type { %"class.blink::Member.666"*, i32, i32 }
%"class.blink::Member.666" = type { %"class.blink::MemberBase.406" }
%"class.WTF::IntegerToStringConverter" = type <{ [24 x i8], i8*, i32, [4 x i8] }>
%"class.mojo::PendingRemote.551" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.base::trace_event::MemoryDumpManager" = type <{ i32 (...)**, %"class.std::__1::set", %"class.base::RepeatingCallback.559", i8, [7 x i8], %"class.base::Lock", %"class.std::__1::unique_ptr.560", i64, i8, [7 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree.552" }
%"class.std::__1::__tree.552" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.553", %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.base::RepeatingCallback.559" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.560" = type { %"class.std::__1::__compressed_pair.561" }
%"class.std::__1::__compressed_pair.561" = type { %"struct.std::__1::__compressed_pair_elem.562" }
%"struct.std::__1::__compressed_pair_elem.562" = type { %"class.base::Thread"* }
%"class.base::Thread" = type <{ %"class.base::PlatformThread::Delegate", i8, i8, i8, [5 x i8], %"class.base::Lock", %"class.base::PlatformThreadHandle", %"class.base::Lock", i32, [4 x i8], %"class.base::WaitableEvent", %"class.std::__1::unique_ptr.569", %"class.base::RunLoop"*, i32, [4 x i8], %"class.std::__1::basic_string", %"class.base::WaitableEvent", %"class.base::SequenceCheckerDoNothing", [7 x i8] }>
%"class.base::PlatformThread::Delegate" = type { i32 (...)** }
%"class.base::PlatformThreadHandle" = type { i64 }
%"class.std::__1::unique_ptr.569" = type { %"class.std::__1::__compressed_pair.570" }
%"class.std::__1::__compressed_pair.570" = type { %"struct.std::__1::__compressed_pair_elem.571" }
%"struct.std::__1::__compressed_pair_elem.571" = type { %"class.base::Thread::Delegate"* }
%"class.base::Thread::Delegate" = type { i32 (...)** }
%"class.base::RunLoop" = type { %"class.base::RunLoop::Delegate"*, i32, i8, i8, i8, i8, i8, %class.scoped_refptr.181, %"class.base::WeakPtrFactory.589" }
%"class.base::RunLoop::Delegate" = type <{ i32 (...)**, %"class.std::__1::stack", %"class.base::ObserverList", i8, [7 x i8] }>
%"class.std::__1::stack" = type { %"class.std::__1::vector.575" }
%"class.std::__1::vector.575" = type { %"class.std::__1::__vector_base.576" }
%"class.std::__1::__vector_base.576" = type { %"class.base::RunLoop"**, %"class.base::RunLoop"**, %"class.std::__1::__compressed_pair.577" }
%"class.std::__1::__compressed_pair.577" = type { %"struct.std::__1::__compressed_pair_elem.578" }
%"struct.std::__1::__compressed_pair_elem.578" = type { %"class.base::RunLoop"** }
%"class.base::ObserverList" = type <{ %"class.std::__1::vector.582", %"class.base::LinkedList", i64, i32, [4 x i8] }>
%"class.std::__1::vector.582" = type { %"class.std::__1::__vector_base.583" }
%"class.std::__1::__vector_base.583" = type { %"class.base::internal::UncheckedObserverAdapter"*, %"class.base::internal::UncheckedObserverAdapter"*, %"class.std::__1::__compressed_pair.584" }
%"class.base::internal::UncheckedObserverAdapter" = type { i8* }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.585" }
%"struct.std::__1::__compressed_pair_elem.585" = type { %"class.base::internal::UncheckedObserverAdapter"* }
%"class.base::LinkedList" = type { %"class.base::LinkNode" }
%"class.base::LinkNode" = type { %"class.base::internal::LinkNodeBase" }
%"class.base::internal::LinkNodeBase" = type { %"class.base::internal::LinkNodeBase"*, %"class.base::internal::LinkNodeBase"* }
%"class.base::WeakPtrFactory.589" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr.563, i8, [7 x i8] }>
%class.scoped_refptr.563 = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe.564", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe.564" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.565" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.blink::ThreadScheduler" = type { i32 (...)** }
%"class.mojo::PendingReceiver" = type { %"struct.mojo::internal::PendingReceiverState" }
%"struct.mojo::internal::PendingReceiverState" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::ConnectionGroup::Ref" }
%"class.WTF::ConditionalDestructor.216" = type { i8 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%struct.MojoCreateMessagePipeOptions = type { i32, i32 }
%"class.mojo::PendingReceiver.773" = type { %"struct.mojo::internal::PendingReceiverState" }
%"class.WTF::HashMap.593" = type { %"class.WTF::HashTable.594" }
%"class.WTF::HashTable.594" = type <{ %"struct.WTF::KeyValuePair.597"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.597" = type { %"class.WTF::String", %struct.ValueDelta }
%struct.ValueDelta = type { %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::ConditionalDestructor.595" = type { i8 }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.WTF::Vector.703" = type { %"class.WTF::VectorBuffer.704" }
%"class.WTF::VectorBuffer.704" = type { %"class.WTF::VectorBufferBase.705" }
%"class.WTF::VectorBufferBase.705" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::DequeConstIterator" = type { %"class.WTF::DequeIteratorBase.base", [4 x i8] }
%"class.WTF::DequeIteratorBase.base" = type <{ %"class.WTF::Deque.219"*, i32 }>
%"struct.base::trace_event::MemoryDumpArgs" = type { i32, i32, i64 }
%"class.base::trace_event::ProcessMemoryDump" = type { %"class.base::UnguessableToken", %"class.std::__1::map.603", %"class.std::__1::map.614", %"struct.base::trace_event::MemoryDumpArgs", %"class.std::__1::unique_ptr.625" }
%"class.std::__1::map.603" = type { %"class.std::__1::__tree.604" }
%"class.std::__1::__tree.604" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.605", %"class.std::__1::__compressed_pair.609" }
%"class.std::__1::__compressed_pair.605" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"class.std::__1::__compressed_pair.609" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::map.614" = type { %"class.std::__1::__tree.615" }
%"class.std::__1::__tree.615" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.620" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"class.std::__1::__compressed_pair.620" = type { %"struct.std::__1::__compressed_pair_elem.104" }
%"class.std::__1::unique_ptr.625" = type { %"class.std::__1::__compressed_pair.626" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"class.base::trace_event::MemoryAllocatorDump"* }
%"class.base::trace_event::MemoryAllocatorDump" = type { %"class.std::__1::basic_string", %"class.base::trace_event::MemoryAllocatorDumpGuid", i32, i32, %"class.absl::optional.628", %"class.std::__1::vector.633" }
%"class.base::trace_event::MemoryAllocatorDumpGuid" = type { i64 }
%"class.absl::optional.628" = type { %"class.absl::optional_internal::optional_data.629" }
%"class.absl::optional_internal::optional_data.629" = type { %"class.absl::optional_internal::optional_data_base.630" }
%"class.absl::optional_internal::optional_data_base.630" = type { %"class.absl::optional_internal::optional_data_dtor_base.631" }
%"class.absl::optional_internal::optional_data_dtor_base.631" = type { i8, %union.anon.632 }
%union.anon.632 = type { i64 }
%"class.std::__1::vector.633" = type { %"class.std::__1::__vector_base.634" }
%"class.std::__1::__vector_base.634" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"struct.base::trace_event::MemoryAllocatorDump::Entry"*, %"class.std::__1::__compressed_pair.635" }
%"struct.base::trace_event::MemoryAllocatorDump::Entry" = type { %"class.std::__1::basic_string", %"class.std::__1::basic_string", i32, i64, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.635" = type { %"struct.std::__1::__compressed_pair_elem.636" }
%"struct.std::__1::__compressed_pair_elem.636" = type { %"struct.base::trace_event::MemoryAllocatorDump::Entry"* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.WTF::StringTypeAdapter.697" = type <{ i8*, i32, [4 x i8] }>
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.WTF::StringTypeAdapter.695" = type { %"class.WTF::StringTypeAdapter.696" }
%"class.WTF::StringTypeAdapter.696" = type { %"class.WTF::StringView" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase.712", %"class.mojo::internal::Buffer", %"class.std::__1::vector.713", %"class.std::__1::vector.721", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase.712" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector.713" = type { %"class.std::__1::__vector_base.714" }
%"class.std::__1::__vector_base.714" = type { %"class.mojo::ScopedHandleBase.715"*, %"class.mojo::ScopedHandleBase.715"*, %"class.std::__1::__compressed_pair.716" }
%"class.mojo::ScopedHandleBase.715" = type { %"class.mojo::Handle" }
%"class.std::__1::__compressed_pair.716" = type { %"struct.std::__1::__compressed_pair_elem.717" }
%"struct.std::__1::__compressed_pair_elem.717" = type { %"class.mojo::ScopedHandleBase.715"* }
%"class.std::__1::vector.721" = type { %"class.std::__1::__vector_base.722" }
%"class.std::__1::__vector_base.722" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::MessageReceiverWithStatus" = type { %"class.mojo::MessageReceiver" }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.746", %"class.blink::FreeList", %"class.WTF::Vector.751" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.WTF::Vector.746" = type { %"class.WTF::VectorBuffer.747" }
%"class.WTF::VectorBuffer.747" = type { %"class.WTF::VectorBufferBase.748" }
%"class.WTF::VectorBufferBase.748" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.WTF::Vector.751" = type { %"class.WTF::VectorBuffer.752" }
%"class.WTF::VectorBuffer.752" = type { %"class.WTF::VectorBufferBase.753" }
%"class.WTF::VectorBufferBase.753" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::HeapVectorBacking" = type { i8 }

$_ZNK3WTF7HashMapIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_6StringENS_10MemberHashIS4_EENS_10HashTraitsIS5_EENS9_IS6_EENS1_13HeapAllocatorEE2atERKPS4_ = comdat any

$_ZN4mojo6RemoteIN5blink5mojom5blink11StorageAreaEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo6RemoteIN5blink5mojom5blink11StorageAreaEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4mojo8ReceiverIN5blink5mojom5blink19StorageAreaObserverENS_19RawPtrImplRefTraitsIS4_EEE24BindNewPipeAndPassRemoteE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN3WTF21ConditionalDestructorINS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev = comdat any

$_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev = comdat any

$_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZN4mojo15MessageReceiverD2Ev = comdat any

$_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSF_ISA_EEEESG_S9_EELb0EED2Ev = comdat any

$_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF12VectorBufferIN5blink6MemberINS1_17CachedStorageArea6SourceEEELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN5blink5mojom5blink23StorageAreaObserverStubIN4mojo19RawPtrImplRefTraitsINS1_19StorageAreaObserverEEEED0Ev = comdat any

$_ZN5blink5mojom5blink23StorageAreaObserverStubIN4mojo19RawPtrImplRefTraitsINS1_19StorageAreaObserverEEEE6AcceptEPNS3_7MessageE = comdat any

$_ZN5blink5mojom5blink23StorageAreaObserverStubIN4mojo19RawPtrImplRefTraitsINS1_19StorageAreaObserverEEEE19AcceptWithResponderEPNS3_7MessageENSt3__110unique_ptrINS3_25MessageReceiverWithStatusENSA_14default_deleteISC_EEEE = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERPS4_RS7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6ExpandEPS8_ = comdat any

$_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS2_6StringEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSB_IS8_EEEEEEvPT_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS8_jSJ_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS2_12KeyValuePairIS7_NS2_6StringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS1_12KeyValuePairIS6_NS1_6StringEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS5_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEE14AllocateObjectISK_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS2_12KeyValuePairIS7_NS2_6StringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS3_12KeyValuePairIS8_NS3_6StringEEENS3_24KeyValuePairKeyExtractorENS3_10MemberHashIS7_EENS3_18HashMapValueTraitsINS3_10HashTraitsIS8_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS2_12KeyValuePairIS7_NS2_6StringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink10WeakMemberINS3_17CachedStorageArea6SourceEEENS_12KeyValuePairIS7_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSF_IS9_EEEESG_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE16LookupForWritingERKS5_ = comdat any

$_ZN5blink14SecurityOriginD2Ev = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_16StorageNamespaceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink14PersistentBaseINS_16StorageNamespaceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapINS_10WeakMemberINS_17CachedStorageArea6SourceEEEN3WTF6StringENS7_10MemberHashIS5_EENS7_10HashTraitsIS6_EENSB_IS8_EEEEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_11HeapHashMapINS_10WeakMemberINS_17CachedStorageArea6SourceEEEN3WTF6StringENS6_10MemberHashIS4_EENS6_10HashTraitsIS5_EENSA_IS7_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_11HeapHashMapINS_10WeakMemberINS_17CachedStorageArea6SourceEEEN3WTF6StringENS6_10MemberHashIS4_EENS6_10HashTraitsIS5_EENSA_IS7_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_17CachedStorageArea6SourceEEENS_12KeyValuePairIS6_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSE_IS8_EEEESF_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv = comdat any

$_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_17CachedStorageArea6SourceEEEbPKT_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11HeapHashMapINS_10WeakMemberINS_17CachedStorageArea6SourceEEEN3WTF6StringENS7_10MemberHashIS5_EENS7_10HashTraitsIS6_EENSB_IS8_EEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSH_15TracePersistentEPNS_7VisitorEEEE10TrampolineESJ_PKv = comdat any

$_ZN4mojo8internal12BindingStateIN5blink5mojom5blink19StorageAreaObserverENS_19RawPtrImplRefTraitsIS5_EEE4BindEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEEEFvbEE7RunOnceEPNS0_13BindStateBaseEb = comdat any

$_ZN4base8internal9BindStateIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNKSt3__114default_deleteIN5blink17CachedStorageArea15PendingMutationEEclEPS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_S8_E4findERKS1_ = comdat any

$_ZNK3WTF18DequeConstIteratorIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEdeEv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_S8_E6insertINS_17HashMapTranslatorISH_SC_S8_EERKS1_S9_EENS_18HashTableAddResultISI_SA_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_S8_E6ExpandEPSA_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_INS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEEEENS_10StringHashESA_E9TranslateINS_12KeyValuePairIS3_SB_EERKS3_SB_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_S8_E8RehashToEPSA_jSJ_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_S8_E16LookupForWritingERKS1_ = comdat any

$_ZN3WTF5MoverINS_12KeyValuePairINS_6StringENS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEES8_NS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS9_EEEELb1EE4MoveEOSA_RSA_ = comdat any

$_ZN3WTF5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink17CachedStorageArea15PendingMutationEEEmm = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSI_ISD_EEEESJ_SC_E6insertINS_17HashMapTranslatorISL_SG_SC_EERKS1_SD_EENS_18HashTableAddResultISM_SE_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSI_ISD_EEEESJ_SC_E6ExpandEPSE_ = comdat any

$_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_INS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS6_14default_deleteISA_EEEELj0ENS_18PartitionAllocatorEEEEEEENS_10StringHashESE_E9TranslateINS_12KeyValuePairIS3_SF_EERKS3_SF_EEvRT_OT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSI_ISD_EEEESJ_SC_E8RehashToEPSE_jSN_ = comdat any

$_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS4_INS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS8_14default_deleteISC_EEEELj0ENS_18PartitionAllocatorEEEEEEESG_NS_12KeyValuePairIS5_SH_EEEEvRT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSI_ISD_EEEESJ_SC_E16LookupForWritingERKS1_ = comdat any

$_ZN3WTF5MoverINS_12KeyValuePairINS_6StringENS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEESC_NS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_ISD_EEEELb1EE4MoveEOSE_RSE_ = comdat any

$_ZN3WTF5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS2_14default_deleteIS6_EEEEEEmm = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSI_ISD_EEEESJ_SC_E4findERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSI_ISD_EEEESJ_SC_E5eraseEPKSE_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_S8_E5eraseEPKSA_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17CachedStorageArea6SourceEEELj1ENS1_13HeapAllocatorEE14AppendSlowCaseIRKNS1_10WeakMemberIS4_EEEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17CachedStorageArea6SourceEEELj1ENS1_13HeapAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17CachedStorageArea6SourceEEELj1ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17CachedStorageArea6SourceEEELj1ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17CachedStorageArea6SourceEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17CachedStorageArea6SourceEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_17CachedStorageArea6SourceEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17CachedStorageArea6SourceEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17CachedStorageArea6SourceEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE5eraseEPKS8_ = comdat any

$_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE4findEPS4_ = comdat any

$_ZNK3WTF6VectorIhLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm = comdat any

$_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZTVN5blink5mojom5blink23StorageAreaObserverStubIN4mojo19RawPtrImplRefTraitsINS1_19StorageAreaObserverEEEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS2_12KeyValuePairIS7_NS2_6StringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS2_12KeyValuePairIS7_NS2_6StringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_10WeakMemberINS_17CachedStorageArea6SourceEEEN3WTF6StringENS6_10MemberHashIS4_EENS6_10HashTraitsIS5_EENSA_IS7_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_10WeakMemberINS_17CachedStorageArea6SourceEEEN3WTF6StringENS6_10MemberHashIS4_EENS6_10HashTraitsIS5_EENSA_IS7_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17CachedStorageArea6SourceEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17CachedStorageArea6SourceEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink17CachedStorageAreaE = hidden unnamed_addr constant { [10 x i8*], [5 x i8*] } { [10 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::CachedStorageArea"*)* @_ZN5blink17CachedStorageAreaD2Ev to i8*), i8* bitcast (void (%"class.blink::CachedStorageArea"*)* @_ZN5blink17CachedStorageAreaD0Ev to i8*), i8* bitcast (void (%"class.blink::CachedStorageArea"*, %"class.WTF::Vector.539"*, %"class.WTF::Vector.539"*, %"class.absl::optional.534"*, %"class.WTF::String"*)* @_ZN5blink17CachedStorageArea10KeyChangedERKN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEES6_RKN4absl8optionalIS4_EERKNS1_6StringE to i8*), i8* bitcast (void (%"class.blink::CachedStorageArea"*, %"class.WTF::Vector.539"*, %"class.WTF::String"*)* @_ZN5blink17CachedStorageArea15KeyChangeFailedERKN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEERKNS1_6StringE to i8*), i8* bitcast (void (%"class.blink::CachedStorageArea"*, %"class.WTF::Vector.539"*, %"class.absl::optional.534"*, %"class.WTF::String"*)* @_ZN5blink17CachedStorageArea10KeyDeletedERKN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEERKN4absl8optionalIS4_EERKNS1_6StringE to i8*), i8* bitcast (void (%"class.blink::CachedStorageArea"*, i1, %"class.WTF::String"*)* @_ZN5blink17CachedStorageArea10AllDeletedEbRKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::CachedStorageArea"*, i1)* @_ZN5blink17CachedStorageArea29ShouldSendOldValueOnMutationsEb to i8*), i8* bitcast (i1 (%"class.blink::CachedStorageArea"*, %"struct.base::trace_event::MemoryDumpArgs"*, %"class.base::trace_event::ProcessMemoryDump"*)* @_ZN5blink17CachedStorageArea12OnMemoryDumpERKN4base11trace_event14MemoryDumpArgsEPNS2_17ProcessMemoryDumpE to i8*)], [5 x i8*] [i8* inttoptr (i64 -16 to i8*), i8* null, i8* bitcast (void (%"class.blink::CachedStorageArea"*)* @_ZThn16_N5blink17CachedStorageAreaD1Ev to i8*), i8* bitcast (void (%"class.blink::CachedStorageArea"*)* @_ZThn16_N5blink17CachedStorageAreaD0Ev to i8*), i8* bitcast (i1 (%"class.blink::CachedStorageArea"*, %"struct.base::trace_event::MemoryDumpArgs"*, %"class.base::trace_event::ProcessMemoryDump"*)* @_ZThn16_N5blink17CachedStorageArea12OnMemoryDumpERKN4base11trace_event14MemoryDumpArgsEPNS2_17ProcessMemoryDumpE to i8*)] }, align 8
@.str = private unnamed_addr constant [11 x i8] c"DOMStorage\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.2 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.3 = private unnamed_addr constant [33 x i8] c"site_storage/%s/0x%lX/cache_size\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"session_storage\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c"local_storage\00", align 1
@_ZN4base11trace_event19MemoryAllocatorDump9kNameSizeE = external constant [0 x i8], align 1
@_ZN4base11trace_event19MemoryAllocatorDump11kUnitsBytesE = external constant [0 x i8], align 1
@_ZN3WTF10Partitions24kAllocatedObjectPoolNameE = external local_unnamed_addr constant i8*, align 8
@.str.6 = private unnamed_addr constant [29 x i8] c"LocalStorage.MojoTimeToPrime\00", align 1
@.str.7 = private unnamed_addr constant [26 x i8] c"LocalStorage.MojoSizeInKB\00", align 1
@.str.8 = private unnamed_addr constant [42 x i8] c"LocalStorage.MojoTimeToPrimeForUnder100KB\00", align 1
@.str.9 = private unnamed_addr constant [42 x i8] c"LocalStorage.MojoTimeToPrimeFor100KBTo1MB\00", align 1
@.str.10 = private unnamed_addr constant [40 x i8] c"LocalStorage.MojoTimeToPrimeFor1MBTo5MB\00", align 1
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@.str.11 = private unnamed_addr constant [35 x i8] c"LocalStorageCachedArea.CorruptData\00", align 1
@.str.12 = private unnamed_addr constant [72 x i8] c"../../third_party/blink/renderer/modules/storage/cached_storage_area.cc\00", align 1
@.str.13 = private unnamed_addr constant [27 x i8] c"Corrupt data in domstorage\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.14 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.15 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.16 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@.str.17 = private unnamed_addr constant [18 x i8] c"CachedStorageArea\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.18 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.19 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZTVN5blink5mojom5blink23StorageAreaObserverStubIN4mojo19RawPtrImplRefTraitsINS1_19StorageAreaObserverEEEEE = linkonce_odr hidden unnamed_addr constant { [7 x i8*] } { [7 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.mojo::MessageReceiver"*)* @_ZN4mojo15MessageReceiverD2Ev to i8*), i8* bitcast (void (%"class.blink::mojom::blink::StorageAreaObserverStub"*)* @_ZN5blink5mojom5blink23StorageAreaObserverStubIN4mojo19RawPtrImplRefTraitsINS1_19StorageAreaObserverEEEED0Ev to i8*), i8* bitcast (i1 (%"class.mojo::MessageReceiver"*)* @_ZN4mojo15MessageReceiver25PrefersSerializedMessagesEv to i8*), i8* bitcast (i1 (%"class.blink::mojom::blink::StorageAreaObserverStub"*, %"class.mojo::Message"*)* @_ZN5blink5mojom5blink23StorageAreaObserverStubIN4mojo19RawPtrImplRefTraitsINS1_19StorageAreaObserverEEEE6AcceptEPNS3_7MessageE to i8*), i8* bitcast (i1 (%"class.blink::mojom::blink::StorageAreaObserverStub"*, %"class.mojo::Message"*, %"class.mojo::MessageReceiverWithStatus"*)* @_ZN5blink5mojom5blink23StorageAreaObserverStubIN4mojo19RawPtrImplRefTraitsINS1_19StorageAreaObserverEEEE19AcceptWithResponderEPNS3_7MessageENSt3__110unique_ptrINS3_25MessageReceiverWithStatusENSA_14default_deleteISC_EEEE to i8*)] }, comdat, align 8
@_ZN5blink5mojom5blink11StorageArea5Name_E = external constant [0 x i8], align 1
@_ZTVN5blink5mojom5blink28StorageAreaResponseValidatorE = external unnamed_addr constant { [6 x i8*] }, align 8
@.str.21 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.22 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@.str.23 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@.str.24 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.25 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@.str.26 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.27 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS2_12KeyValuePairIS7_NS2_6StringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS2_12KeyValuePairIS7_NS2_6StringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS3_12KeyValuePairIS8_NS3_6StringEEENS3_24KeyValuePairKeyExtractorENS3_10MemberHashIS7_EENS3_18HashMapValueTraitsINS3_10HashTraitsIS8_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS2_12KeyValuePairIS7_NS2_6StringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS2_12KeyValuePairIS7_NS2_6StringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.28 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS7_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [532 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::WeakMember<blink::CachedStorageArea::Source>, WTF::KeyValuePair<blink::WeakMember<blink::CachedStorageArea::Source>, WTF::String>, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<blink::CachedStorageArea::Source>, WTF::HashMapValueTraits<WTF::HashTraits<blink::WeakMember<blink::CachedStorageArea::Source> >, WTF::HashTraits<WTF::String> >, WTF::HashTraits<blink::WeakMember<blink::CachedStorageArea::Source> >, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashMapINS1_10WeakMemberINS1_17CachedStorageArea6SourceEEENS_6StringENS_10MemberHashIS5_EENS_10HashTraitsIS6_EENSA_IS7_EEEEEEPKcv = private unnamed_addr constant [285 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashMap<blink::WeakMember<blink::CachedStorageArea::Source>, WTF::String, WTF::MemberHash<blink::CachedStorageArea::Source>, WTF::HashTraits<blink::WeakMember<blink::CachedStorageArea::Source> >, WTF::HashTraits<WTF::String> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_10WeakMemberINS_17CachedStorageArea6SourceEEEN3WTF6StringENS6_10MemberHashIS4_EENS6_10HashTraitsIS5_EENSA_IS7_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11HeapHashMapINS_10WeakMemberINS_17CachedStorageArea6SourceEEEN3WTF6StringENS6_10MemberHashIS4_EENS6_10HashTraitsIS5_EENSA_IS7_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11HeapHashMapINS_10WeakMemberINS_17CachedStorageArea6SourceEEEN3WTF6StringENS6_10MemberHashIS4_EENS6_10HashTraitsIS5_EENSA_IS7_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_10WeakMemberINS_17CachedStorageArea6SourceEEEN3WTF6StringENS6_10MemberHashIS4_EENS6_10HashTraitsIS5_EENSA_IS7_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZN5blink5mojom5blink19StorageAreaObserver5Name_E = external constant [0 x i8], align 1
@_ZTVN5blink5mojom5blink35StorageAreaObserverRequestValidatorE = external unnamed_addr constant { [6 x i8*] }, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEZN5blink17CachedStorageArea15ResetConnectionEN4mojo13PendingRemoteINS3_5mojom5blink11StorageAreaEEEE10ValueDeltaEEEEPKcv = private unnamed_addr constant [90 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, ValueDelta>]\00", align 1
@.str.29 = private unnamed_addr constant [23 x i8] c"index_ != deque_->end_\00", align 1
@.str.30 = private unnamed_addr constant [54 x i8] c"../../third_party/blink/renderer/platform/wtf/deque.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringENS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEEEEPKcv = private unnamed_addr constant [164 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, WTF::Deque<blink::CachedStorageArea::PendingMutation *, 0, WTF::PartitionAllocator> >]\00", align 1
@.str.31 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.32 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink17CachedStorageArea15PendingMutationEEEPKcv = private unnamed_addr constant [91 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CachedStorageArea::PendingMutation *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringENS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEEEEPKcv = private unnamed_addr constant [254 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, WTF::Deque<std::__1::unique_ptr<blink::CachedStorageArea::PendingMutation, std::__1::default_delete<blink::CachedStorageArea::PendingMutation> >, 0, WTF::PartitionAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS1_14default_deleteIS5_EEEEEEPKcv = private unnamed_addr constant [181 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::unique_ptr<blink::CachedStorageArea::PendingMutation, std::__1::default_delete<blink::CachedStorageArea::PendingMutation> >]\00", align 1
@.str.33 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.34 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.35 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17CachedStorageArea6SourceEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17CachedStorageArea6SourceEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17CachedStorageArea6SourceEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17CachedStorageArea6SourceEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_17CachedStorageArea6SourceEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [191 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::CachedStorageArea::Source>, WTF::VectorTraits<blink::Member<blink::CachedStorageArea::Source> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv = private unnamed_addr constant [61 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned char]\00", align 1
@_ZZN5blink17CachedStorageArea12EnsureLoadedEvE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5blink17CachedStorageArea12EnsureLoadedEvE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5blink17CachedStorageArea12EnsureLoadedEvE24atomic_histogram_pointer_1.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5blink17CachedStorageArea12EnsureLoadedEvE24atomic_histogram_pointer_2.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5blink17CachedStorageArea12EnsureLoadedEvE24atomic_histogram_pointer_3.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN5blink17CachedStorageArea19Uint8VectorToStringERKN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEENS0_12FormatOptionEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

@_ZN5blink17CachedStorageAreaC1ENS0_8AreaTypeE13scoped_refptrIKNS_14SecurityOriginEES2_IN4base22SingleThreadTaskRunnerEEPNS_16StorageNamespaceEb = hidden unnamed_addr alias void (%"class.blink::CachedStorageArea"*, i32, %"class.blink::SecurityOrigin"*, %"class.base::SingleThreadTaskRunner"*, %"class.blink::StorageNamespace"*, i1), void (%"class.blink::CachedStorageArea"*, i32, %"class.blink::SecurityOrigin"*, %"class.base::SingleThreadTaskRunner"*, %"class.blink::StorageNamespace"*, i1)* @_ZN5blink17CachedStorageAreaC2ENS0_8AreaTypeE13scoped_refptrIKNS_14SecurityOriginEES2_IN4base22SingleThreadTaskRunnerEEPNS_16StorageNamespaceEb
@_ZN5blink17CachedStorageAreaD1Ev = hidden unnamed_addr alias void (%"class.blink::CachedStorageArea"*), void (%"class.blink::CachedStorageArea"*)* @_ZN5blink17CachedStorageAreaD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink17CachedStorageArea9GetLengthEv(%"class.blink::CachedStorageArea"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink17CachedStorageArea12EnsureLoadedEv(%"class.blink::CachedStorageArea"* %0)
  %2 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %3 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %2, align 8
  %4 = tail call i32 @_ZNK5blink14StorageAreaMap9GetLengthEv(%"class.blink::StorageAreaMap"* %3) #16
  ret i32 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CachedStorageArea12EnsureLoadedEv(%"class.blink::CachedStorageArea"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::Vector.649", align 8
  %3 = alloca %"class.mojo::PendingRemote", align 4
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.base::TimeDelta", align 8
  %7 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 8
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %8, align 8
  %10 = icmp eq %"class.blink::StorageAreaMap"* %9, null
  br i1 %10, label %11, label %228

11:                                               ; preds = %1
  %12 = icmp eq %"class.blink::CachedStorageArea"* %0, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %11
  %14 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %14) #16
  br label %15

15:                                               ; preds = %11, %13
  %16 = tail call i64 @_ZN4base9TimeTicks3NowEv() #16
  %17 = bitcast %"class.WTF::Vector.649"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.WTF::Vector.649", %"class.WTF::Vector.649"* %2, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.WTF::Vector.649", %"class.WTF::Vector.649"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 16, i1 false) #16
  %20 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 13
  %21 = getelementptr inbounds %"class.mojo::Receiver", %"class.mojo::Receiver"* %20, i64 0, i32 0, i32 0
  tail call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %21) #16
  %22 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 12, i32 0, i32 1
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.391", %"class.std::__1::unique_ptr.391"* %22, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %23, align 8
  %25 = icmp eq %"class.blink::mojom::blink::StorageAreaProxy"* %24, null
  br i1 %25, label %26, label %48

26:                                               ; preds = %15
  %27 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 12
  %28 = bitcast %"class.mojo::Remote"* %27 to %"class.mojo::internal::InterfacePtrStateBase"*
  %29 = tail call i8* @_Znwm(i64 8) #17
  %30 = bitcast i8* %29 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink28StorageAreaResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %31 = bitcast i8* %29 to %"class.mojo::MessageReceiver"*
  %32 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %28, i1 zeroext false, i1 zeroext true, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %31, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink11StorageArea5Name_E, i64 0, i64 0)) #16
  br i1 %32, label %33, label %48

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 12, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %35 = bitcast %"class.mojo::InterfaceEndpointClient"** %34 to %"class.mojo::MessageReceiverWithResponder"**
  %36 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %35, align 8
  %37 = tail call i8* @_Znwm(i64 16) #17
  %38 = bitcast i8* %37 to %"class.blink::mojom::blink::StorageAreaProxy"*
  tail call void @_ZN5blink5mojom5blink16StorageAreaProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::StorageAreaProxy"* nonnull %38, %"class.mojo::MessageReceiverWithResponder"* %36) #16
  %39 = ptrtoint i8* %37 to i64
  %40 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %23, align 8
  %41 = bitcast %"class.std::__1::unique_ptr.391"* %22 to i64*
  store i64 %39, i64* %41, align 8
  %42 = icmp eq %"class.blink::mojom::blink::StorageAreaProxy"* %40, null
  br i1 %42, label %48, label %43

43:                                               ; preds = %33
  %44 = bitcast %"class.blink::mojom::blink::StorageAreaProxy"* %40 to void (%"class.blink::mojom::blink::StorageAreaProxy"*)***
  %45 = load void (%"class.blink::mojom::blink::StorageAreaProxy"*)**, void (%"class.blink::mojom::blink::StorageAreaProxy"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.blink::mojom::blink::StorageAreaProxy"*)*, void (%"class.blink::mojom::blink::StorageAreaProxy"*)** %45, i64 1
  %47 = load void (%"class.blink::mojom::blink::StorageAreaProxy"*)*, void (%"class.blink::mojom::blink::StorageAreaProxy"*)** %46, align 8
  tail call void %47(%"class.blink::mojom::blink::StorageAreaProxy"* nonnull %40) #16
  br label %48

48:                                               ; preds = %15, %26, %33, %43
  %49 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %23, align 8
  call void @_ZN4mojo8ReceiverIN5blink5mojom5blink19StorageAreaObserverENS_19RawPtrImplRefTraitsIS4_EEE24BindNewPipeAndPassRemoteE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingRemote"* nonnull sret %3, %"class.mojo::Receiver"* %20, %"class.base::SequencedTaskRunner"* null) #16
  %50 = call zeroext i1 @_ZN5blink5mojom5blink16StorageAreaProxy6GetAllEN4mojo13PendingRemoteINS1_19StorageAreaObserverEEEPN3WTF6VectorINS3_9StructPtrINS1_8KeyValueEEELj0ENS7_18PartitionAllocatorEEE(%"class.blink::mojom::blink::StorageAreaProxy"* %49, %"class.mojo::PendingRemote"* nonnull %3, %"class.WTF::Vector.649"* nonnull %2) #16
  %51 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %3, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %51) #16
  %52 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 3
  %53 = load i32, i32* %52, align 8
  %54 = icmp eq i32 %53, 0
  %55 = select i1 %54, i32 2, i32 0
  %56 = zext i1 %54 to i32
  %57 = call noalias i8* @malloc(i64 72) #16
  %58 = bitcast i8* %57 to %"class.blink::StorageAreaMap"*
  call void @_ZN5blink14StorageAreaMapC1Em(%"class.blink::StorageAreaMap"* %58, i64 10485760) #16
  %59 = ptrtoint i8* %57 to i64
  %60 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %8, align 8
  %61 = bitcast %"class.std::__1::unique_ptr.187"* %7 to i64*
  store i64 %59, i64* %61, align 8
  %62 = icmp eq %"class.blink::StorageAreaMap"* %60, null
  br i1 %62, label %72, label %63

63:                                               ; preds = %48
  %64 = getelementptr inbounds %"class.blink::StorageAreaMap", %"class.blink::StorageAreaMap"* %60, i64 0, i32 0, i32 0, i32 0
  %65 = load %"struct.WTF::KeyValuePair.194"*, %"struct.WTF::KeyValuePair.194"** %64, align 8
  %66 = icmp eq %"struct.WTF::KeyValuePair.194"* %65, null
  br i1 %66, label %70, label %67, !prof !2

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.blink::StorageAreaMap", %"class.blink::StorageAreaMap"* %60, i64 0, i32 0, i32 0, i32 1
  %69 = load i32, i32* %68, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.194"* nonnull %65, i32 %69) #16
  br label %70

70:                                               ; preds = %67, %63
  %71 = bitcast %"class.blink::StorageAreaMap"* %60 to i8*
  call void @free(i8* %71) #16
  br label %72

72:                                               ; preds = %70, %48
  %73 = load %"class.mojo::StructPtr.652"*, %"class.mojo::StructPtr.652"** %18, align 8
  %74 = load i32, i32* %19, align 4
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds %"class.mojo::StructPtr.652", %"class.mojo::StructPtr.652"* %73, i64 %75
  %77 = icmp eq i32 %74, 0
  br i1 %77, label %83, label %78

78:                                               ; preds = %72
  %79 = bitcast %"class.WTF::String"* %4 to i8*
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %81 = bitcast %"class.WTF::String"* %5 to i8*
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  br label %91

83:                                               ; preds = %132, %72
  %84 = bitcast %"class.base::TimeDelta"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84) #16
  %85 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %6, i64 0, i32 0
  %86 = call i64 @_ZN4base9TimeTicks3NowEv() #16
  %87 = sub nsw i64 %86, %16
  store i64 %87, i64* %85, align 8
  %88 = load atomic i64, i64* @_ZZN5blink17CachedStorageArea12EnsureLoadedEvE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %89 = inttoptr i64 %88 to %"class.base::HistogramBase"*
  %90 = icmp eq i64 %88, 0
  br i1 %90, label %135, label %138

91:                                               ; preds = %78, %132
  %92 = phi %"class.mojo::StructPtr.652"* [ %73, %78 ], [ %133, %132 ]
  %93 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %8, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #16
  %94 = getelementptr inbounds %"class.mojo::StructPtr.652", %"class.mojo::StructPtr.652"* %92, i64 0, i32 0, i32 0, i32 0, i32 0
  %95 = load %"class.blink::mojom::blink::KeyValue"*, %"class.blink::mojom::blink::KeyValue"** %94, align 8
  %96 = getelementptr inbounds %"class.blink::mojom::blink::KeyValue", %"class.blink::mojom::blink::KeyValue"* %95, i64 0, i32 0
  %97 = call %"class.WTF::StringImpl"* @_ZN5blink17CachedStorageArea19Uint8VectorToStringERKN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEENS0_12FormatOptionE(%"class.WTF::Vector.539"* dereferenceable(16) %96, i32 %55)
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %80, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #16
  %98 = load %"class.blink::mojom::blink::KeyValue"*, %"class.blink::mojom::blink::KeyValue"** %94, align 8
  %99 = getelementptr inbounds %"class.blink::mojom::blink::KeyValue", %"class.blink::mojom::blink::KeyValue"* %98, i64 0, i32 1
  %100 = call %"class.WTF::StringImpl"* @_ZN5blink17CachedStorageArea19Uint8VectorToStringERKN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEENS0_12FormatOptionE(%"class.WTF::Vector.539"* dereferenceable(16) %99, i32 %56)
  store %"class.WTF::StringImpl"* %100, %"class.WTF::StringImpl"** %82, align 8
  call void @_ZN5blink14StorageAreaMap20SetItemIgnoringQuotaERKN3WTF6StringES4_(%"class.blink::StorageAreaMap"* %93, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %5) #16
  %101 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %102 = icmp eq %"class.WTF::StringImpl"* %101, null
  br i1 %102, label %116, label %103

103:                                              ; preds = %91
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = and i32 %105, 2
  %107 = icmp eq i32 %106, 0
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %101, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  br i1 %107, label %110, label %112

110:                                              ; preds = %103
  %111 = add i32 %109, -1
  store i32 %111, i32* %108, align 4
  br label %112

112:                                              ; preds = %110, %103
  %113 = phi i32 [ %111, %110 ], [ %109, %103 ]
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %116

115:                                              ; preds = %112
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %101) #16
  br label %116

116:                                              ; preds = %91, %112, %115
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #16
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %116
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  br i1 %123, label %126, label %128

126:                                              ; preds = %119
  %127 = add i32 %125, -1
  store i32 %127, i32* %124, align 4
  br label %128

128:                                              ; preds = %126, %119
  %129 = phi i32 [ %127, %126 ], [ %125, %119 ]
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %132

131:                                              ; preds = %128
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #16
  br label %132

132:                                              ; preds = %116, %128, %131
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #16
  %133 = getelementptr inbounds %"class.mojo::StructPtr.652", %"class.mojo::StructPtr.652"* %92, i64 1
  %134 = icmp eq %"class.mojo::StructPtr.652"* %133, %76
  br i1 %134, label %83, label %91

135:                                              ; preds = %83
  %136 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.6, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #16
  %137 = ptrtoint %"class.base::HistogramBase"* %136 to i64
  store atomic i64 %137, i64* @_ZZN5blink17CachedStorageArea12EnsureLoadedEvE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %138

138:                                              ; preds = %83, %135
  %139 = phi %"class.base::HistogramBase"* [ %89, %83 ], [ %136, %135 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %139, %"class.base::TimeDelta"* nonnull dereferenceable(8) %6) #16
  %140 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %8, align 8
  %141 = getelementptr inbounds %"class.blink::StorageAreaMap", %"class.blink::StorageAreaMap"* %140, i64 0, i32 3
  %142 = load i64, i64* %141, align 8
  %143 = lshr i64 %142, 10
  %144 = load atomic i64, i64* @_ZZN5blink17CachedStorageArea12EnsureLoadedEvE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %145 = inttoptr i64 %144 to %"class.base::HistogramBase"*
  %146 = icmp eq i64 %144, 0
  br i1 %146, label %147, label %150

147:                                              ; preds = %138
  %148 = call %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.7, i64 0, i64 0), i32 1, i32 6144, i32 50, i32 1) #16
  %149 = ptrtoint %"class.base::HistogramBase"* %148 to i64
  store atomic i64 %149, i64* @_ZZN5blink17CachedStorageArea12EnsureLoadedEvE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %150

150:                                              ; preds = %138, %147
  %151 = phi %"class.base::HistogramBase"* [ %145, %138 ], [ %148, %147 ]
  %152 = call i1 @llvm.is.constant.i64(i64 %143) #16
  %153 = icmp ult i64 %142, 2199023255552
  %154 = trunc i64 %143 to i32
  %155 = select i1 %153, i32 %154, i32 2147483647
  %156 = icmp ult i64 %143, 2147483647
  %157 = select i1 %156, i64 %143, i64 2147483647
  %158 = trunc i64 %157 to i32
  %159 = select i1 %152, i32 %158, i32 %155
  %160 = bitcast %"class.base::HistogramBase"* %151 to void (%"class.base::HistogramBase"*, i32)***
  %161 = load void (%"class.base::HistogramBase"*, i32)**, void (%"class.base::HistogramBase"*, i32)*** %160, align 8
  %162 = getelementptr inbounds void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %161, i64 6
  %163 = load void (%"class.base::HistogramBase"*, i32)*, void (%"class.base::HistogramBase"*, i32)** %162, align 8
  call void %163(%"class.base::HistogramBase"* %151, i32 %159) #16
  %164 = icmp ult i64 %142, 102400
  br i1 %164, label %165, label %172

165:                                              ; preds = %150
  %166 = load atomic i64, i64* @_ZZN5blink17CachedStorageArea12EnsureLoadedEvE24atomic_histogram_pointer_1.0.0.0.0.0 acquire, align 8
  %167 = inttoptr i64 %166 to %"class.base::HistogramBase"*
  %168 = icmp eq i64 %166, 0
  br i1 %168, label %169, label %188

169:                                              ; preds = %165
  %170 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.8, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #16
  %171 = ptrtoint %"class.base::HistogramBase"* %170 to i64
  store atomic i64 %171, i64* @_ZZN5blink17CachedStorageArea12EnsureLoadedEvE24atomic_histogram_pointer_1.0.0.0.0.0 release, align 8
  br label %188

172:                                              ; preds = %150
  %173 = icmp ult i64 %142, 1024000
  br i1 %173, label %174, label %181

174:                                              ; preds = %172
  %175 = load atomic i64, i64* @_ZZN5blink17CachedStorageArea12EnsureLoadedEvE24atomic_histogram_pointer_2.0.0.0.0.0 acquire, align 8
  %176 = inttoptr i64 %175 to %"class.base::HistogramBase"*
  %177 = icmp eq i64 %175, 0
  br i1 %177, label %178, label %188

178:                                              ; preds = %174
  %179 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.9, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #16
  %180 = ptrtoint %"class.base::HistogramBase"* %179 to i64
  store atomic i64 %180, i64* @_ZZN5blink17CachedStorageArea12EnsureLoadedEvE24atomic_histogram_pointer_2.0.0.0.0.0 release, align 8
  br label %188

181:                                              ; preds = %172
  %182 = load atomic i64, i64* @_ZZN5blink17CachedStorageArea12EnsureLoadedEvE24atomic_histogram_pointer_3.0.0.0.0.0 acquire, align 8
  %183 = inttoptr i64 %182 to %"class.base::HistogramBase"*
  %184 = icmp eq i64 %182, 0
  br i1 %184, label %185, label %188

185:                                              ; preds = %181
  %186 = call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.10, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #16
  %187 = ptrtoint %"class.base::HistogramBase"* %186 to i64
  store atomic i64 %187, i64* @_ZZN5blink17CachedStorageArea12EnsureLoadedEvE24atomic_histogram_pointer_3.0.0.0.0.0 release, align 8
  br label %188

188:                                              ; preds = %185, %181, %178, %174, %169, %165
  %189 = phi %"class.base::HistogramBase"* [ %167, %165 ], [ %170, %169 ], [ %176, %174 ], [ %179, %178 ], [ %183, %181 ], [ %186, %185 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %189, %"class.base::TimeDelta"* nonnull dereferenceable(8) %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %84) #16
  %190 = load %"class.mojo::StructPtr.652"*, %"class.mojo::StructPtr.652"** %18, align 8
  %191 = icmp eq %"class.mojo::StructPtr.652"* %190, null
  br i1 %191, label %214, label %192, !prof !2

192:                                              ; preds = %188
  %193 = bitcast %"class.mojo::StructPtr.652"* %190 to i8*
  %194 = load i32, i32* %19, align 4
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %212, label %196, !prof !3

196:                                              ; preds = %192
  %197 = zext i32 %194 to i64
  %198 = getelementptr inbounds %"class.mojo::StructPtr.652", %"class.mojo::StructPtr.652"* %190, i64 %197
  br label %199

199:                                              ; preds = %206, %196
  %200 = phi %"class.mojo::StructPtr.652"* [ %207, %206 ], [ %190, %196 ]
  %201 = getelementptr inbounds %"class.mojo::StructPtr.652", %"class.mojo::StructPtr.652"* %200, i64 0, i32 0, i32 0, i32 0, i32 0
  %202 = load %"class.blink::mojom::blink::KeyValue"*, %"class.blink::mojom::blink::KeyValue"** %201, align 8
  store %"class.blink::mojom::blink::KeyValue"* null, %"class.blink::mojom::blink::KeyValue"** %201, align 8
  %203 = icmp eq %"class.blink::mojom::blink::KeyValue"* %202, null
  br i1 %203, label %206, label %204

204:                                              ; preds = %199
  call void @_ZN5blink5mojom5blink8KeyValueD1Ev(%"class.blink::mojom::blink::KeyValue"* nonnull %202) #16
  %205 = bitcast %"class.blink::mojom::blink::KeyValue"* %202 to i8*
  call void @_ZdlPv(i8* %205) #17
  br label %206

206:                                              ; preds = %204, %199
  %207 = getelementptr inbounds %"class.mojo::StructPtr.652", %"class.mojo::StructPtr.652"* %200, i64 1
  %208 = icmp eq %"class.mojo::StructPtr.652"* %207, %198
  br i1 %208, label %209, label %199

209:                                              ; preds = %206
  store i32 0, i32* %19, align 4
  %210 = bitcast %"class.WTF::Vector.649"* %2 to i8**
  %211 = load i8*, i8** %210, align 8
  br label %212

212:                                              ; preds = %209, %192
  %213 = phi i8* [ %211, %209 ], [ %193, %192 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %213) #16
  store %"class.mojo::StructPtr.652"* null, %"class.mojo::StructPtr.652"** %18, align 8
  br label %214

214:                                              ; preds = %188, %212
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #16
  br i1 %12, label %228, label %215

215:                                              ; preds = %214
  %216 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 1, i32 0
  %217 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %216, i64 0, i32 0
  call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %217) #16
  %218 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %216, i64 0, i32 0, i32 0
  %219 = load i32, i32* %218, align 4
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %221, label %228

221:                                              ; preds = %215
  %222 = getelementptr inbounds %"class.base::RefCounted", %"class.base::RefCounted"* %216, i64 -2
  %223 = bitcast %"class.base::RefCounted"* %222 to %"class.blink::CachedStorageArea"*
  %224 = bitcast %"class.base::RefCounted"* %222 to void (%"class.blink::CachedStorageArea"*)***
  %225 = load void (%"class.blink::CachedStorageArea"*)**, void (%"class.blink::CachedStorageArea"*)*** %224, align 8
  %226 = getelementptr inbounds void (%"class.blink::CachedStorageArea"*)*, void (%"class.blink::CachedStorageArea"*)** %225, i64 1
  %227 = load void (%"class.blink::CachedStorageArea"*)*, void (%"class.blink::CachedStorageArea"*)** %226, align 8
  call void %227(%"class.blink::CachedStorageArea"* nonnull %223) #16
  br label %228

228:                                              ; preds = %1, %221, %215, %214
  ret void
}

declare i32 @_ZNK5blink14StorageAreaMap9GetLengthEv(%"class.blink::StorageAreaMap"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink17CachedStorageArea6GetKeyEj(%"class.blink::CachedStorageArea"*, i32) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink17CachedStorageArea12EnsureLoadedEv(%"class.blink::CachedStorageArea"* %0)
  %3 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %4 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %3, align 8
  %5 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14StorageAreaMap6GetKeyEj(%"class.blink::StorageAreaMap"* %4, i32 %1) #16
  ret %"class.WTF::StringImpl"* %5
}

declare %"class.WTF::StringImpl"* @_ZNK5blink14StorageAreaMap6GetKeyEj(%"class.blink::StorageAreaMap"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink17CachedStorageArea7GetItemERKN3WTF6StringE(%"class.blink::CachedStorageArea"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink17CachedStorageArea12EnsureLoadedEv(%"class.blink::CachedStorageArea"* %0)
  %3 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %4 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %3, align 8
  %5 = tail call %"class.WTF::StringImpl"* @_ZNK5blink14StorageAreaMap7GetItemERKN3WTF6StringE(%"class.blink::StorageAreaMap"* %4, %"class.WTF::String"* dereferenceable(8) %1) #16
  ret %"class.WTF::StringImpl"* %5
}

declare %"class.WTF::StringImpl"* @_ZNK5blink14StorageAreaMap7GetItemERKN3WTF6StringE(%"class.blink::StorageAreaMap"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17CachedStorageArea7SetItemERKN3WTF6StringES4_PNS0_6SourceE(%"class.blink::CachedStorageArea"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::CachedStorageArea::Source"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::WebScopedVirtualTimePauser", align 8
  %6 = alloca %"class.blink::CachedStorageArea::Source"*, align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.absl::optional.534", align 8
  %9 = alloca %"class.WTF::Vector.539", align 8
  %10 = alloca %"class.blink::KURL", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::Vector.539", align 8
  %14 = alloca %"class.WTF::Vector.539", align 8
  %15 = alloca %"class.base::OnceCallback.550", align 8
  store %"class.blink::CachedStorageArea::Source"* %3, %"class.blink::CachedStorageArea::Source"** %6, align 8
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %4, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %4 ]
  %24 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 1
  %29 = load i32, i32* %28, align 4
  br label %30

30:                                               ; preds = %22, %27
  %31 = phi i32 [ %29, %27 ], [ 0, %22 ]
  %32 = add i32 %31, %23
  %33 = shl i32 %32, 1
  %34 = icmp ugt i32 %33, 10485760
  br i1 %34, label %250, label %35

35:                                               ; preds = %30
  tail call void @_ZN5blink17CachedStorageArea12EnsureLoadedEv(%"class.blink::CachedStorageArea"* %0)
  %36 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #16
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %37, align 8
  %38 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %39 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %38, align 8
  %40 = call zeroext i1 @_ZN5blink14StorageAreaMap7SetItemERKN3WTF6StringES4_PS2_(%"class.blink::StorageAreaMap"* %39, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* nonnull %7) #16
  br i1 %40, label %41, label %232

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 3
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %43, 0
  %45 = zext i1 %44 to i32
  %46 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %46) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 24, i1 false)
  store i8 0, i8* %46, align 8
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %91, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 11
  %51 = load i8, i8* %50, align 8, !range !4
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %91, label %53

53:                                               ; preds = %49
  %54 = bitcast %"class.WTF::Vector.539"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #16
  call void @_ZN5blink17CachedStorageArea19StringToUint8VectorERKN3WTF6StringENS0_12FormatOptionE(%"class.WTF::Vector.539"* nonnull sret %9, %"class.WTF::String"* nonnull dereferenceable(8) %7, i32 %45)
  %55 = load i8, i8* %46, align 8, !range !4
  %56 = icmp eq i8 %55, 0
  %57 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %56, label %58, label %69

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %60 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %61 = bitcast %"class.WTF::Vector.539"* %9 to i64*
  %62 = bitcast %"class.WTF::Vector.539"* %57 to i64*
  store i64 0, i64* %62, align 8
  %63 = load i64, i64* %61, align 8
  %64 = bitcast %"class.WTF::Vector.539"* %57 to i64*
  store atomic i64 0, i64* %61 monotonic, align 8
  store atomic i64 %63, i64* %64 monotonic, align 8
  %65 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %9, i64 0, i32 0, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  store i32 %66, i32* %59, align 8
  store i32 0, i32* %65, align 8
  %67 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %9, i64 0, i32 0, i32 0, i32 2
  %68 = load i32, i32* %67, align 4
  store i32 %68, i32* %60, align 4
  store i32 0, i32* %67, align 4
  store i8 1, i8* %46, align 8
  br label %90

69:                                               ; preds = %53
  %70 = bitcast %"class.WTF::Vector.539"* %9 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.WTF::Vector.539"* %57 to i64*
  %73 = load i64, i64* %72, align 8
  store atomic i64 %73, i64* %70 monotonic, align 8
  store atomic i64 %71, i64* %72 monotonic, align 8
  %74 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %75 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %9, i64 0, i32 0, i32 0, i32 1
  %76 = load i32, i32* %74, align 8
  %77 = load i32, i32* %75, align 8
  store i32 %77, i32* %74, align 8
  store i32 %76, i32* %75, align 8
  %78 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %79 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %9, i64 0, i32 0, i32 0, i32 2
  %80 = load i32, i32* %78, align 4
  %81 = load i32, i32* %79, align 4
  store i32 %81, i32* %78, align 4
  store i32 %80, i32* %79, align 4
  %82 = inttoptr i64 %73 to i8*
  %83 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %9, i64 0, i32 0, i32 0, i32 0
  %84 = icmp eq i64 %73, 0
  br i1 %84, label %90, label %85, !prof !2

85:                                               ; preds = %69
  %86 = icmp eq i32 %80, 0
  br i1 %86, label %89, label %87, !prof !3

87:                                               ; preds = %85
  %88 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %9, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %88, align 4
  br label %89

89:                                               ; preds = %87, %85
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %82) #16
  store i8* null, i8** %83, align 8
  br label %90

90:                                               ; preds = %58, %69, %89
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #16
  br label %91

91:                                               ; preds = %49, %90, %41
  %92 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %92) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 112, i1 false)
  %93 = load %"class.blink::CachedStorageArea::Source"*, %"class.blink::CachedStorageArea::Source"** %6, align 8
  %94 = bitcast %"class.blink::CachedStorageArea::Source"* %93 to void (%"class.blink::KURL"*, %"class.blink::CachedStorageArea::Source"*)***
  %95 = load void (%"class.blink::KURL"*, %"class.blink::CachedStorageArea::Source"*)**, void (%"class.blink::KURL"*, %"class.blink::CachedStorageArea::Source"*)*** %94, align 8
  %96 = getelementptr inbounds void (%"class.blink::KURL"*, %"class.blink::CachedStorageArea::Source"*)*, void (%"class.blink::KURL"*, %"class.blink::CachedStorageArea::Source"*)** %95, i64 3
  %97 = load void (%"class.blink::KURL"*, %"class.blink::CachedStorageArea::Source"*)*, void (%"class.blink::KURL"*, %"class.blink::CachedStorageArea::Source"*)** %96, align 8
  call void %97(%"class.blink::KURL"* nonnull sret %10, %"class.blink::CachedStorageArea::Source"* %93) #16
  %98 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #16
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %100 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 14, i32 0, i32 0
  %101 = load %"class.blink::HeapHashMap"*, %"class.blink::HeapHashMap"** %100, align 8
  %102 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %101, i64 0, i32 0
  %103 = call %"class.WTF::StringImpl"* @_ZNK3WTF7HashMapIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_6StringENS_10MemberHashIS4_EENS_10HashTraitsIS5_EENS9_IS6_EENS1_13HeapAllocatorEE2atERKPS4_(%"class.WTF::HashMap.401"* %102, %"class.blink::CachedStorageArea::Source"** nonnull dereferenceable(8) %6)
  store %"class.WTF::StringImpl"* %103, %"class.WTF::StringImpl"** %99, align 8
  %104 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #16
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %105, align 8
  %106 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_110PackSourceERKNS_4KURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull dereferenceable(112) %10, %"class.WTF::String"* nonnull dereferenceable(8) %11)
  store %"class.WTF::StringImpl"* %106, %"class.WTF::StringImpl"** %105, align 8
  %107 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 6
  %108 = load i8, i8* %107, align 8, !range !4
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %110, label %176

110:                                              ; preds = %91
  %111 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 12, i32 0, i32 1
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.391", %"class.std::__1::unique_ptr.391"* %111, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %112, align 8
  %114 = icmp eq %"class.blink::mojom::blink::StorageAreaProxy"* %113, null
  br i1 %114, label %115, label %137

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 12
  %117 = bitcast %"class.mojo::Remote"* %116 to %"class.mojo::internal::InterfacePtrStateBase"*
  %118 = call i8* @_Znwm(i64 8) #17
  %119 = bitcast i8* %118 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink28StorageAreaResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %119, align 8
  %120 = bitcast i8* %118 to %"class.mojo::MessageReceiver"*
  %121 = call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %117, i1 zeroext false, i1 zeroext true, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %120, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink11StorageArea5Name_E, i64 0, i64 0)) #16
  br i1 %121, label %122, label %137

122:                                              ; preds = %115
  %123 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 12, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %124 = bitcast %"class.mojo::InterfaceEndpointClient"** %123 to %"class.mojo::MessageReceiverWithResponder"**
  %125 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %124, align 8
  %126 = call i8* @_Znwm(i64 16) #17
  %127 = bitcast i8* %126 to %"class.blink::mojom::blink::StorageAreaProxy"*
  call void @_ZN5blink5mojom5blink16StorageAreaProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::StorageAreaProxy"* nonnull %127, %"class.mojo::MessageReceiverWithResponder"* %125) #16
  %128 = ptrtoint i8* %126 to i64
  %129 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %112, align 8
  %130 = bitcast %"class.std::__1::unique_ptr.391"* %111 to i64*
  store i64 %128, i64* %130, align 8
  %131 = icmp eq %"class.blink::mojom::blink::StorageAreaProxy"* %129, null
  br i1 %131, label %137, label %132

132:                                              ; preds = %122
  %133 = bitcast %"class.blink::mojom::blink::StorageAreaProxy"* %129 to void (%"class.blink::mojom::blink::StorageAreaProxy"*)***
  %134 = load void (%"class.blink::mojom::blink::StorageAreaProxy"*)**, void (%"class.blink::mojom::blink::StorageAreaProxy"*)*** %133, align 8
  %135 = getelementptr inbounds void (%"class.blink::mojom::blink::StorageAreaProxy"*)*, void (%"class.blink::mojom::blink::StorageAreaProxy"*)** %134, i64 1
  %136 = load void (%"class.blink::mojom::blink::StorageAreaProxy"*)*, void (%"class.blink::mojom::blink::StorageAreaProxy"*)** %135, align 8
  call void %136(%"class.blink::mojom::blink::StorageAreaProxy"* nonnull %129) #16
  br label %137

137:                                              ; preds = %110, %115, %122, %132
  %138 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %112, align 8
  %139 = bitcast %"class.WTF::Vector.539"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %139) #16
  %140 = load i32, i32* %42, align 8
  %141 = icmp eq i32 %140, 0
  %142 = select i1 %141, i32 2, i32 0
  call void @_ZN5blink17CachedStorageArea19StringToUint8VectorERKN3WTF6StringENS0_12FormatOptionE(%"class.WTF::Vector.539"* nonnull sret %13, %"class.WTF::String"* dereferenceable(8) %1, i32 %142)
  %143 = bitcast %"class.WTF::Vector.539"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %143) #16
  call void @_ZN5blink17CachedStorageArea19StringToUint8VectorERKN3WTF6StringENS0_12FormatOptionE(%"class.WTF::Vector.539"* nonnull sret %14, %"class.WTF::String"* dereferenceable(8) %2, i32 %45)
  %144 = load %"class.blink::CachedStorageArea::Source"*, %"class.blink::CachedStorageArea::Source"** %6, align 8
  %145 = bitcast %"class.blink::WebScopedVirtualTimePauser"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %145) #16, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %145, i8 -86, i64 40, i1 false) #16, !noalias !5
  %146 = bitcast %"class.blink::CachedStorageArea::Source"* %144 to void (%"class.blink::WebScopedVirtualTimePauser"*, %"class.blink::CachedStorageArea::Source"*, i8*, i32)***
  %147 = load void (%"class.blink::WebScopedVirtualTimePauser"*, %"class.blink::CachedStorageArea::Source"*, i8*, i32)**, void (%"class.blink::WebScopedVirtualTimePauser"*, %"class.blink::CachedStorageArea::Source"*, i8*, i32)*** %146, align 8, !noalias !5
  %148 = getelementptr inbounds void (%"class.blink::WebScopedVirtualTimePauser"*, %"class.blink::CachedStorageArea::Source"*, i8*, i32)*, void (%"class.blink::WebScopedVirtualTimePauser"*, %"class.blink::CachedStorageArea::Source"*, i8*, i32)** %147, i64 5
  %149 = load void (%"class.blink::WebScopedVirtualTimePauser"*, %"class.blink::CachedStorageArea::Source"*, i8*, i32)*, void (%"class.blink::WebScopedVirtualTimePauser"*, %"class.blink::CachedStorageArea::Source"*, i8*, i32)** %148, align 8, !noalias !5
  call void %149(%"class.blink::WebScopedVirtualTimePauser"* nonnull sret %5, %"class.blink::CachedStorageArea::Source"* %144, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i32 1) #16, !noalias !5
  call void @_ZN5blink26WebScopedVirtualTimePauser16PauseVirtualTimeEv(%"class.blink::WebScopedVirtualTimePauser"* nonnull %5) #16, !noalias !5
  %150 = call i8* @_Znwm(i64 80) #17, !noalias !8
  %151 = bitcast i8* %150 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %151, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS3_17CachedStorageArea6SourceEE3$_0JNS3_26WebScopedVirtualTimePauserEEEEFvbEE7RunOnceEPNS0_13BindStateBaseEb" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS2_17CachedStorageArea6SourceEE3$_0JNS2_26WebScopedVirtualTimePauserEEE7DestroyEPKNS0_13BindStateBaseE") #16, !noalias !8
  %152 = getelementptr inbounds i8, i8* %150, i64 40
  %153 = bitcast i8* %152 to %"class.blink::WebScopedVirtualTimePauser"*
  call void @_ZN5blink26WebScopedVirtualTimePauserC1EOS0_(%"class.blink::WebScopedVirtualTimePauser"* %153, %"class.blink::WebScopedVirtualTimePauser"* nonnull dereferenceable(40) %5) #16, !noalias !8
  %154 = bitcast %"class.base::OnceCallback.550"* %15 to i8**
  store i8* %150, i8** %154, align 8, !alias.scope !8
  call void @_ZN5blink26WebScopedVirtualTimePauserD1Ev(%"class.blink::WebScopedVirtualTimePauser"* nonnull %5) #16, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %145) #16, !noalias !5
  call void @_ZN5blink5mojom5blink16StorageAreaProxy3PutERKN3WTF6VectorIhLj0ENS3_18PartitionAllocatorEEES8_RKN4absl8optionalIS6_EERKNS3_6StringEN4base12OnceCallbackIFvbEEE(%"class.blink::mojom::blink::StorageAreaProxy"* %138, %"class.WTF::Vector.539"* nonnull dereferenceable(16) %13, %"class.WTF::Vector.539"* nonnull dereferenceable(16) %14, %"class.absl::optional.534"* nonnull dereferenceable(24) %8, %"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.base::OnceCallback.550"* nonnull %15) #16
  %155 = getelementptr inbounds %"class.base::OnceCallback.550", %"class.base::OnceCallback.550"* %15, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %155) #16
  %156 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %14, i64 0, i32 0, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = icmp eq i8* %157, null
  br i1 %158, label %165, label %159, !prof !2

159:                                              ; preds = %137
  %160 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %14, i64 0, i32 0, i32 0, i32 2
  %161 = load i32, i32* %160, align 4
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %164, label %163, !prof !3

163:                                              ; preds = %159
  store i32 0, i32* %160, align 4
  br label %164

164:                                              ; preds = %163, %159
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %157) #16
  store i8* null, i8** %156, align 8
  br label %165

165:                                              ; preds = %137, %164
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %143) #16
  %166 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %13, i64 0, i32 0, i32 0, i32 0
  %167 = load i8*, i8** %166, align 8
  %168 = icmp eq i8* %167, null
  br i1 %168, label %175, label %169, !prof !2

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %13, i64 0, i32 0, i32 0, i32 2
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %174, label %173, !prof !3

173:                                              ; preds = %169
  store i32 0, i32* %170, align 4
  br label %174

174:                                              ; preds = %173, %169
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %167) #16
  store i8* null, i8** %166, align 8
  br label %175

175:                                              ; preds = %165, %174
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %139) #16
  br label %176

176:                                              ; preds = %91, %175
  %177 = load i32, i32* %42, align 8
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %180, label %179

179:                                              ; preds = %176
  call void @_ZN5blink17CachedStorageArea22EnqueuePendingMutationERKN3WTF6StringES4_S4_S4_(%"class.blink::CachedStorageArea"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* nonnull dereferenceable(8) %12)
  br label %186

180:                                              ; preds = %176
  %181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %182 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %183 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %181, %"class.WTF::StringImpl"* %182) #16
  br i1 %183, label %186, label %184

184:                                              ; preds = %180
  %185 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %10, i64 0, i32 4
  call void @_ZN5blink17CachedStorageArea19EnqueueStorageEventERKN3WTF6StringES4_S4_S4_S4_(%"class.blink::CachedStorageArea"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %185, %"class.WTF::String"* nonnull dereferenceable(8) %11)
  br label %186

186:                                              ; preds = %180, %184, %179
  %187 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %105, align 8
  %188 = icmp eq %"class.WTF::StringImpl"* %187, null
  br i1 %188, label %202, label %189

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = and i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %187, i64 0, i32 0
  %195 = load i32, i32* %194, align 4
  br i1 %193, label %196, label %198

196:                                              ; preds = %189
  %197 = add i32 %195, -1
  store i32 %197, i32* %194, align 4
  br label %198

198:                                              ; preds = %196, %189
  %199 = phi i32 [ %197, %196 ], [ %195, %189 ]
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %202

201:                                              ; preds = %198
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %187) #16
  br label %202

202:                                              ; preds = %186, %198, %201
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #16
  %203 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %203, label %217, label %204

204:                                              ; preds = %202
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %206 = load atomic i32, i32* %205 monotonic, align 4
  %207 = and i32 %206, 2
  %208 = icmp eq i32 %207, 0
  %209 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %210 = load i32, i32* %209, align 4
  br i1 %208, label %211, label %213

211:                                              ; preds = %204
  %212 = add i32 %210, -1
  store i32 %212, i32* %209, align 4
  br label %213

213:                                              ; preds = %211, %204
  %214 = phi i32 [ %212, %211 ], [ %210, %204 ]
  %215 = icmp eq i32 %214, 0
  br i1 %215, label %216, label %217

216:                                              ; preds = %213
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #16
  br label %217

217:                                              ; preds = %202, %213, %216
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #16
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %92) #16
  %218 = load i8, i8* %46, align 8, !range !4
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %231, label %220

220:                                              ; preds = %217
  %221 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %222 = load i8*, i8** %221, align 8
  %223 = icmp eq i8* %222, null
  br i1 %223, label %230, label %224, !prof !2

224:                                              ; preds = %220
  %225 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %8, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %226 = load i32, i32* %225, align 4
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %229, label %228, !prof !3

228:                                              ; preds = %224
  store i32 0, i32* %225, align 4
  br label %229

229:                                              ; preds = %228, %224
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %222) #16
  store i8* null, i8** %221, align 8
  br label %230

230:                                              ; preds = %229, %220
  store i8 0, i8* %46, align 8
  br label %231

231:                                              ; preds = %217, %230
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %46) #16
  br label %232

232:                                              ; preds = %35, %231
  %233 = phi i1 [ true, %231 ], [ false, %35 ]
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %37, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load atomic i32, i32* %237 monotonic, align 4
  %239 = and i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 0
  %242 = load i32, i32* %241, align 4
  br i1 %240, label %243, label %245

243:                                              ; preds = %236
  %244 = add i32 %242, -1
  store i32 %244, i32* %241, align 4
  br label %245

245:                                              ; preds = %243, %236
  %246 = phi i32 [ %244, %243 ], [ %242, %236 ]
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %249

248:                                              ; preds = %245
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %234) #16
  br label %249

249:                                              ; preds = %232, %245, %248
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #16
  br label %250

250:                                              ; preds = %30, %249
  %251 = phi i1 [ %233, %249 ], [ false, %30 ]
  ret i1 %251
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare zeroext i1 @_ZN5blink14StorageAreaMap7SetItemERKN3WTF6StringES4_PS2_(%"class.blink::StorageAreaMap"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink17CachedStorageArea14GetValueFormatEv(%"class.blink::CachedStorageArea"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  %5 = zext i1 %4 to i32
  ret i32 %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CachedStorageArea19StringToUint8VectorERKN3WTF6StringENS0_12FormatOptionE(%"class.WTF::Vector.539"* noalias sret, %"class.WTF::String"* dereferenceable(8), i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca %"class.WTF::StringUTF8Adaptor", align 8
  %7 = alloca %"class.WTF::Vector.539", align 8
  switch i32 %2, label %386 [
    i32 1, label %8
    i32 2, label %46
    i32 0, label %161
  ]

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 2
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %13 = bitcast %"class.WTF::Vector.539"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %8
  store i8* null, i8** %9, align 8
  br label %29

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = shl i32 %19, 1
  store i8* null, i8** %9, align 8
  store i32 0, i32* %10, align 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %34, label %22

22:                                               ; preds = %17
  %23 = zext i32 %20 to i64
  %24 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %23) #16
  %25 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %24, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #16
  %26 = ptrtoint i8* %25 to i64
  %27 = bitcast %"class.WTF::Vector.539"* %0 to i64*
  store atomic i64 %26, i64* %27 monotonic, align 8
  %28 = trunc i64 %24 to i32
  br label %29

29:                                               ; preds = %22, %16
  %30 = phi i32 [ 0, %16 ], [ %28, %22 ]
  %31 = phi i32 [ 0, %16 ], [ %20, %22 ]
  %32 = phi i64 [ 0, %16 ], [ %23, %22 ]
  %33 = phi i8* [ null, %16 ], [ %25, %22 ]
  store i32 %30, i32* %10, align 8
  br label %34

34:                                               ; preds = %29, %17
  %35 = phi i32 [ 0, %17 ], [ %31, %29 ]
  %36 = phi i64 [ 0, %17 ], [ %32, %29 ]
  %37 = phi i8* [ null, %17 ], [ %33, %29 ]
  store i32 %35, i32* %11, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %37, i8 0, i64 %36, i1 false) #16
  %38 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %39 = icmp eq %"class.WTF::StringImpl"* %38, null
  br i1 %39, label %387, label %40

40:                                               ; preds = %34
  %41 = bitcast %"class.WTF::Vector.539"* %0 to i16**
  %42 = load i16*, i16** %41, align 8
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = tail call i32 @_ZNK3WTF10StringImpl6CopyToEPDsjj(%"class.WTF::StringImpl"* nonnull %38, i16* %42, i32 0, i32 %44) #16
  br label %387

46:                                               ; preds = %3
  %47 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 1
  %52 = load i32, i32* %51, align 4
  br label %53

53:                                               ; preds = %46, %50
  %54 = phi i32 [ %52, %50 ], [ 0, %46 ]
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 1
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %94, label %59

59:                                               ; preds = %53
  br i1 %49, label %72, label %60

60:                                               ; preds = %59
  %61 = load atomic i32, i32* %55 monotonic, align 4
  %62 = and i32 %61, 8
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %60
  %65 = tail call i32 @_ZNK3WTF10StringImpl17ComputeASCIIFlagsEv(%"class.WTF::StringImpl"* nonnull %48) #16
  br label %66

66:                                               ; preds = %60, %64
  %67 = phi i32 [ %65, %64 ], [ %61, %60 ]
  %68 = and i32 %67, 16
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  br label %94

72:                                               ; preds = %66, %59
  %73 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 1
  %75 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 2
  %76 = bitcast %"class.WTF::Vector.539"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 -86, i64 16, i1 false)
  store i8* null, i8** %73, align 8
  store i32 0, i32* %74, align 8
  %77 = icmp eq i32 %54, 0
  br i1 %77, label %85, label %78

78:                                               ; preds = %72
  %79 = zext i32 %54 to i64
  %80 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %79) #16
  %81 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %80, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #16
  %82 = ptrtoint i8* %81 to i64
  %83 = bitcast %"class.WTF::Vector.539"* %0 to i64*
  store atomic i64 %82, i64* %83 monotonic, align 8
  %84 = trunc i64 %80 to i32
  store i32 %84, i32* %74, align 8
  br label %85

85:                                               ; preds = %72, %78
  %86 = phi i64 [ %79, %78 ], [ 0, %72 ]
  %87 = phi i8* [ %81, %78 ], [ null, %72 ]
  store i32 %54, i32* %75, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %87, i8 0, i64 %86, i1 false) #16
  %88 = load i8*, i8** %73, align 8
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %89, i64 1
  %92 = bitcast %"class.WTF::StringImpl"* %91 to i8*
  %93 = select i1 %90, i8* null, i8* %92
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %88, i8* align 1 %93, i64 %86, i1 false)
  br label %387

94:                                               ; preds = %70, %53
  %95 = phi %"class.WTF::StringImpl"* [ %71, %70 ], [ %48, %53 ]
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 1
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %137, label %100

100:                                              ; preds = %94
  %101 = icmp ugt i32 %54, 1431655765
  br i1 %101, label %102, label %104

102:                                              ; preds = %100
  %103 = bitcast %"class.WTF::Vector.539"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %103, i8 0, i64 16, i1 false) #16
  br label %387

104:                                              ; preds = %100
  %105 = mul i32 %54, 3
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %113, label %107

107:                                              ; preds = %104
  %108 = zext i32 %105 to i64
  %109 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %108) #16
  %110 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %109, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #16
  %111 = ptrtoint i8* %110 to i64
  %112 = trunc i64 %109 to i32
  br label %113

113:                                              ; preds = %104, %107
  %114 = phi i64 [ %108, %107 ], [ 0, %104 ]
  %115 = phi i32 [ %112, %107 ], [ 0, %104 ]
  %116 = phi i64 [ %111, %107 ], [ 0, %104 ]
  %117 = phi i8* [ %110, %107 ], [ null, %104 ]
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %117, i8 0, i64 %114, i1 false) #16
  %118 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #16
  %119 = inttoptr i64 %116 to i8*
  store i8* %119, i8** %4, align 8
  %120 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #16
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 1
  %124 = bitcast %"class.WTF::StringImpl"* %123 to i8*
  %125 = select i1 %122, i8* null, i8* %124
  store i8* %125, i8** %5, align 8
  %126 = zext i32 %54 to i64
  %127 = getelementptr inbounds i8, i8* %125, i64 %126
  %128 = getelementptr inbounds i8, i8* %119, i64 %114
  %129 = call i32 @_ZN3WTF7unicode19ConvertLatin1ToUTF8EPPKhS2_PPcS4_(i8** nonnull %5, i8* %127, i8** nonnull %4, i8* %128) #16
  %130 = bitcast i8** %4 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = sub i64 %131, %116
  %133 = trunc i64 %132 to i32
  %134 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 1
  %135 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 2
  %136 = bitcast %"class.WTF::Vector.539"* %0 to i64*
  store atomic i64 %116, i64* %136 monotonic, align 8
  store i32 %115, i32* %134, align 8
  store i32 %133, i32* %135, align 4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %118) #16
  br label %387

137:                                              ; preds = %94
  %138 = bitcast %"class.WTF::StringUTF8Adaptor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %138) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %138, i8 -86, i64 40, i1 false)
  call void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"* nonnull %6, %"class.WTF::String"* dereferenceable(8) %1, i32 2) #16
  %139 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %6, i64 0, i32 2
  %140 = load i32, i32* %139, align 8
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %148, label %142

142:                                              ; preds = %137
  %143 = zext i32 %140 to i64
  %144 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %143) #16
  %145 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %144, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #16
  %146 = ptrtoint i8* %145 to i64
  %147 = trunc i64 %144 to i32
  br label %148

148:                                              ; preds = %142, %137
  %149 = phi i32 [ 0, %137 ], [ %147, %142 ]
  %150 = phi i64 [ 0, %137 ], [ %146, %142 ]
  %151 = phi i64 [ 0, %137 ], [ %143, %142 ]
  %152 = phi i8* [ null, %137 ], [ %145, %142 ]
  call void @llvm.memset.p0i8.i64(i8* align 1 %152, i8 0, i64 %151, i1 false) #16
  %153 = inttoptr i64 %150 to i8*
  %154 = getelementptr inbounds %"class.WTF::StringUTF8Adaptor", %"class.WTF::StringUTF8Adaptor"* %6, i64 0, i32 1
  %155 = load i8*, i8** %154, align 8
  %156 = load i32, i32* %139, align 8
  %157 = zext i32 %156 to i64
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %153, i8* align 1 %155, i64 %157, i1 false)
  %158 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 1
  %159 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 2
  %160 = bitcast %"class.WTF::Vector.539"* %0 to i64*
  store atomic i64 %150, i64* %160 monotonic, align 8
  store i32 %149, i32* %158, align 8
  store i32 %140, i32* %159, align 4
  call void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %138) #16
  br label %387

161:                                              ; preds = %3
  %162 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %163 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %162, align 8
  %164 = icmp eq %"class.WTF::StringImpl"* %163, null
  br i1 %164, label %261, label %165

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 1
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %266, label %169

169:                                              ; preds = %165
  %170 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load atomic i32, i32* %170 monotonic, align 4
  %172 = and i32 %171, 1
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %266

174:                                              ; preds = %169
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %163, i64 1
  %176 = bitcast %"class.WTF::StringImpl"* %175 to i16*
  %177 = zext i32 %167 to i64
  %178 = icmp ult i32 %167, 8
  br i1 %178, label %245, label %179

179:                                              ; preds = %174
  %180 = and i64 %177, 4294967288
  %181 = add nsw i64 %180, -8
  %182 = lshr exact i64 %181, 3
  %183 = add nuw nsw i64 %182, 1
  %184 = and i64 %183, 1
  %185 = icmp eq i64 %181, 0
  br i1 %185, label %217, label %186

186:                                              ; preds = %179
  %187 = sub nuw nsw i64 %183, %184
  br label %188

188:                                              ; preds = %188, %186
  %189 = phi i64 [ 0, %186 ], [ %214, %188 ]
  %190 = phi <4 x i32> [ zeroinitializer, %186 ], [ %212, %188 ]
  %191 = phi <4 x i32> [ zeroinitializer, %186 ], [ %213, %188 ]
  %192 = phi i64 [ %187, %186 ], [ %215, %188 ]
  %193 = getelementptr inbounds i16, i16* %176, i64 %189
  %194 = bitcast i16* %193 to <4 x i16>*
  %195 = load <4 x i16>, <4 x i16>* %194, align 2
  %196 = getelementptr inbounds i16, i16* %193, i64 4
  %197 = bitcast i16* %196 to <4 x i16>*
  %198 = load <4 x i16>, <4 x i16>* %197, align 2
  %199 = zext <4 x i16> %195 to <4 x i32>
  %200 = zext <4 x i16> %198 to <4 x i32>
  %201 = or <4 x i32> %190, %199
  %202 = or <4 x i32> %191, %200
  %203 = or i64 %189, 8
  %204 = getelementptr inbounds i16, i16* %176, i64 %203
  %205 = bitcast i16* %204 to <4 x i16>*
  %206 = load <4 x i16>, <4 x i16>* %205, align 2
  %207 = getelementptr inbounds i16, i16* %204, i64 4
  %208 = bitcast i16* %207 to <4 x i16>*
  %209 = load <4 x i16>, <4 x i16>* %208, align 2
  %210 = zext <4 x i16> %206 to <4 x i32>
  %211 = zext <4 x i16> %209 to <4 x i32>
  %212 = or <4 x i32> %201, %210
  %213 = or <4 x i32> %202, %211
  %214 = add i64 %189, 16
  %215 = add i64 %192, -2
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %217, label %188, !llvm.loop !15

217:                                              ; preds = %188, %179
  %218 = phi <4 x i32> [ undef, %179 ], [ %212, %188 ]
  %219 = phi <4 x i32> [ undef, %179 ], [ %213, %188 ]
  %220 = phi i64 [ 0, %179 ], [ %214, %188 ]
  %221 = phi <4 x i32> [ zeroinitializer, %179 ], [ %212, %188 ]
  %222 = phi <4 x i32> [ zeroinitializer, %179 ], [ %213, %188 ]
  %223 = icmp eq i64 %184, 0
  br i1 %223, label %235, label %224

224:                                              ; preds = %217
  %225 = getelementptr inbounds i16, i16* %176, i64 %220
  %226 = getelementptr inbounds i16, i16* %225, i64 4
  %227 = bitcast i16* %226 to <4 x i16>*
  %228 = load <4 x i16>, <4 x i16>* %227, align 2
  %229 = zext <4 x i16> %228 to <4 x i32>
  %230 = or <4 x i32> %222, %229
  %231 = bitcast i16* %225 to <4 x i16>*
  %232 = load <4 x i16>, <4 x i16>* %231, align 2
  %233 = zext <4 x i16> %232 to <4 x i32>
  %234 = or <4 x i32> %221, %233
  br label %235

235:                                              ; preds = %217, %224
  %236 = phi <4 x i32> [ %218, %217 ], [ %234, %224 ]
  %237 = phi <4 x i32> [ %219, %217 ], [ %230, %224 ]
  %238 = or <4 x i32> %237, %236
  %239 = shufflevector <4 x i32> %238, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %240 = or <4 x i32> %238, %239
  %241 = shufflevector <4 x i32> %240, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %242 = or <4 x i32> %240, %241
  %243 = extractelement <4 x i32> %242, i32 0
  %244 = icmp eq i64 %180, %177
  br i1 %244, label %257, label %245

245:                                              ; preds = %235, %174
  %246 = phi i64 [ 0, %174 ], [ %180, %235 ]
  %247 = phi i32 [ 0, %174 ], [ %243, %235 ]
  br label %248

248:                                              ; preds = %245, %248
  %249 = phi i64 [ %255, %248 ], [ %246, %245 ]
  %250 = phi i32 [ %254, %248 ], [ %247, %245 ]
  %251 = getelementptr inbounds i16, i16* %176, i64 %249
  %252 = load i16, i16* %251, align 2
  %253 = zext i16 %252 to i32
  %254 = or i32 %250, %253
  %255 = add nuw nsw i64 %249, 1
  %256 = icmp eq i64 %255, %177
  br i1 %256, label %257, label %248, !llvm.loop !17

257:                                              ; preds = %248, %235
  %258 = phi i32 [ %243, %235 ], [ %254, %248 ]
  %259 = and i32 %258, 65280
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %266, label %349

261:                                              ; preds = %161
  %262 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 0
  %263 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 1
  %264 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 2
  %265 = bitcast %"class.WTF::Vector.539"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %265, i8 -86, i64 16, i1 false)
  store i8* null, i8** %262, align 8
  store i32 0, i32* %263, align 8
  br label %274

266:                                              ; preds = %257, %165, %169
  %267 = bitcast %"class.WTF::Vector.539"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %267, i8 -86, i64 16, i1 false)
  %268 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 0
  %269 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 1
  %270 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 2
  %271 = load i32, i32* %166, align 4
  %272 = add i32 %271, 1
  store i8* null, i8** %268, align 8
  store i32 0, i32* %269, align 8
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %285, label %274

274:                                              ; preds = %261, %266
  %275 = phi i32* [ %264, %261 ], [ %270, %266 ]
  %276 = phi i32* [ %263, %261 ], [ %269, %266 ]
  %277 = phi i8** [ %262, %261 ], [ %268, %266 ]
  %278 = phi i32 [ 1, %261 ], [ %272, %266 ]
  %279 = zext i32 %278 to i64
  %280 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %279) #16
  %281 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %280, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #16
  %282 = ptrtoint i8* %281 to i64
  %283 = bitcast %"class.WTF::Vector.539"* %0 to i64*
  store atomic i64 %282, i64* %283 monotonic, align 8
  %284 = trunc i64 %280 to i32
  store i32 %284, i32* %276, align 8
  br label %285

285:                                              ; preds = %266, %274
  %286 = phi i32* [ %275, %274 ], [ %270, %266 ]
  %287 = phi i8** [ %277, %274 ], [ %268, %266 ]
  %288 = phi i32 [ %278, %274 ], [ 0, %266 ]
  %289 = phi i64 [ %279, %274 ], [ 0, %266 ]
  %290 = phi i8* [ %281, %274 ], [ null, %266 ]
  store i32 %288, i32* %286, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %290, i8 0, i64 %289, i1 false) #16
  %291 = tail call dereferenceable(1) i8* @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.539"* %0, i32 0) #16
  store i8 1, i8* %291, align 1
  %292 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %162, align 8
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %294 = load atomic i32, i32* %293 monotonic, align 4
  %295 = and i32 %294, 1
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %310, label %297

297:                                              ; preds = %285
  %298 = load i8*, i8** %287, align 8
  %299 = getelementptr inbounds i8, i8* %298, i64 1
  %300 = icmp eq %"class.WTF::StringImpl"* %292, null
  %301 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 1
  %302 = bitcast %"class.WTF::StringImpl"* %301 to i8*
  %303 = select i1 %300, i8* null, i8* %302
  br i1 %300, label %308, label %304

304:                                              ; preds = %297
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %292, i64 0, i32 1
  %306 = load i32, i32* %305, align 4
  %307 = zext i32 %306 to i64
  br label %308

308:                                              ; preds = %297, %304
  %309 = phi i64 [ %307, %304 ], [ 0, %297 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %299, i8* align 1 %303, i64 %309, i1 false)
  br label %387

310:                                              ; preds = %285, %342
  %311 = phi %"class.WTF::StringImpl"* [ %348, %342 ], [ %292, %285 ]
  %312 = phi i64 [ %345, %342 ], [ 0, %285 ]
  %313 = icmp eq %"class.WTF::StringImpl"* %311, null
  br i1 %313, label %317, label %314

314:                                              ; preds = %310
  %315 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %311, i64 0, i32 1
  %316 = load i32, i32* %315, align 4
  br label %317

317:                                              ; preds = %310, %314
  %318 = phi i32 [ %316, %314 ], [ 0, %310 ]
  %319 = zext i32 %318 to i64
  %320 = icmp ult i64 %312, %319
  br i1 %320, label %321, label %387

321:                                              ; preds = %317
  br i1 %313, label %342, label %322

322:                                              ; preds = %321
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %311, i64 0, i32 1
  %324 = load i32, i32* %323, align 4
  %325 = zext i32 %324 to i64
  %326 = icmp ult i64 %312, %325
  br i1 %326, label %327, label %342

327:                                              ; preds = %322
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %311, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %329 = load atomic i32, i32* %328 monotonic, align 4
  %330 = and i32 %329, 1
  %331 = icmp eq i32 %330, 0
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %311, i64 1
  br i1 %331, label %338, label %333

333:                                              ; preds = %327
  %334 = bitcast %"class.WTF::StringImpl"* %332 to i8*
  %335 = getelementptr inbounds i8, i8* %334, i64 %312
  %336 = load i8, i8* %335, align 1
  %337 = zext i8 %336 to i16
  br label %342

338:                                              ; preds = %327
  %339 = bitcast %"class.WTF::StringImpl"* %332 to i16*
  %340 = getelementptr inbounds i16, i16* %339, i64 %312
  %341 = load i16, i16* %340, align 2
  br label %342

342:                                              ; preds = %321, %322, %333, %338
  %343 = phi i16 [ 0, %322 ], [ 0, %321 ], [ %337, %333 ], [ %341, %338 ]
  %344 = trunc i16 %343 to i8
  %345 = add nuw nsw i64 %312, 1
  %346 = trunc i64 %345 to i32
  %347 = tail call dereferenceable(1) i8* @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.539"* %0, i32 %346) #16
  store i8 %344, i8* %347, align 1
  %348 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %162, align 8
  br label %310

349:                                              ; preds = %257
  %350 = bitcast %"class.WTF::Vector.539"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %350) #16
  %351 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %7, i64 0, i32 0, i32 0, i32 0
  %352 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %7, i64 0, i32 0, i32 0, i32 1
  %353 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %7, i64 0, i32 0, i32 0, i32 2
  %354 = bitcast %"class.WTF::Vector.539"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %354, i8 -86, i64 16, i1 false)
  %355 = load i32, i32* %166, align 4
  %356 = shl i32 %355, 1
  %357 = or i32 %356, 1
  %358 = zext i32 %357 to i64
  %359 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64 %358) #16
  %360 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %359, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIhEEPKcv, i64 0, i64 0)) #16
  %361 = ptrtoint i8* %360 to i64
  %362 = bitcast %"class.WTF::Vector.539"* %7 to i64*
  store atomic i64 %361, i64* %362 monotonic, align 8
  %363 = trunc i64 %359 to i32
  store i32 %363, i32* %352, align 8
  store i32 %357, i32* %353, align 4
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %360, i8 0, i64 %358, i1 false) #16
  %364 = call dereferenceable(1) i8* @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.539"* nonnull %7, i32 0) #16
  store i8 0, i8* %364, align 1
  %365 = load i8*, i8** %351, align 8
  %366 = getelementptr inbounds i8, i8* %365, i64 1
  %367 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %162, align 8
  %368 = icmp eq %"class.WTF::StringImpl"* %367, null
  %369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 1
  %370 = bitcast %"class.WTF::StringImpl"* %369 to i8*
  %371 = select i1 %368, i8* null, i8* %370
  br i1 %368, label %377, label %372

372:                                              ; preds = %349
  %373 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 1
  %374 = load i32, i32* %373, align 4
  %375 = zext i32 %374 to i64
  %376 = shl nuw nsw i64 %375, 1
  br label %377

377:                                              ; preds = %372, %349
  %378 = phi i64 [ %376, %372 ], [ 0, %349 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %366, i8* align 2 %371, i64 %378, i1 false)
  %379 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 1
  %380 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 2
  %381 = bitcast %"class.WTF::Vector.539"* %0 to i64*
  store i64 0, i64* %381, align 8
  %382 = load i64, i64* %362, align 8
  %383 = bitcast %"class.WTF::Vector.539"* %0 to i64*
  store atomic i64 0, i64* %362 monotonic, align 8
  store atomic i64 %382, i64* %383 monotonic, align 8
  %384 = load i32, i32* %352, align 8
  store i32 %384, i32* %379, align 8
  store i32 0, i32* %352, align 8
  %385 = load i32, i32* %353, align 4
  store i32 %385, i32* %380, align 4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %350) #16
  br label %387

386:                                              ; preds = %3
  unreachable

387:                                              ; preds = %317, %34, %40, %308, %102, %113, %148, %85, %377
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF7HashMapIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_6StringENS_10MemberHashIS4_EENS_10HashTraitsIS5_EENS9_IS6_EENS1_13HeapAllocatorEE2atERKPS4_(%"class.WTF::HashMap.401"*, %"class.blink::CachedStorageArea::Source"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::CachedStorageArea::Source"*, %"class.blink::CachedStorageArea::Source"** %1, align 8
  %4 = ptrtoint %"class.blink::CachedStorageArea::Source"* %3 to i64
  %5 = getelementptr inbounds %"class.WTF::HashMap.401", %"class.WTF::HashMap.401"* %0, i64 0, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.404"*, %"struct.WTF::KeyValuePair.404"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.404"* %6, null
  br i1 %7, label %91, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::HashMap.401", %"class.WTF::HashMap.401"* %0, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = zext i32 %11 to i64
  %13 = shl i64 %4, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %14, %4
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %11, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %6, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::CachedStorageArea::Source"*, %"class.blink::CachedStorageArea::Source"** %35, align 8
  %37 = icmp eq %"class.blink::CachedStorageArea::Source"* %36, %3
  br i1 %37, label %67, label %38

38:                                               ; preds = %8
  %39 = xor i32 %31, -1
  %40 = lshr i32 %31, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %58, %38
  %53 = phi i64 [ %33, %38 ], [ %62, %58 ]
  %54 = phi i64 [ 0, %38 ], [ %60, %58 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %6, i64 %53, i32 0, i32 0, i32 0
  %56 = load %"class.blink::CachedStorageArea::Source"*, %"class.blink::CachedStorageArea::Source"** %55, align 8
  %57 = icmp eq %"class.blink::CachedStorageArea::Source"* %56, null
  br i1 %57, label %91, label %58

58:                                               ; preds = %52
  %59 = icmp eq i64 %54, 0
  %60 = select i1 %59, i64 %51, i64 %54
  %61 = add i64 %60, %53
  %62 = and i64 %61, %12
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %6, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::CachedStorageArea::Source"*, %"class.blink::CachedStorageArea::Source"** %64, align 8
  %66 = icmp eq %"class.blink::CachedStorageArea::Source"* %65, %3
  br i1 %66, label %67, label %52

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.404"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.404"* %68, null
  br i1 %69, label %91, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %68, i64 0, i32 1, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %91, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %91

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i33
  %83 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %82, i33 1) #16
  %84 = extractvalue { i33, i1 } %83, 1
  %85 = extractvalue { i33, i1 } %83, 0
  %86 = icmp slt i33 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %89, !prof !3

88:                                               ; preds = %79
  tail call void @llvm.trap() #16
  unreachable

89:                                               ; preds = %79
  %90 = trunc i33 %85 to i32
  store i32 %90, i32* %80, align 4
  br label %91

91:                                               ; preds = %52, %2, %89, %74, %70, %67
  %92 = phi %"class.WTF::StringImpl"* [ null, %67 ], [ null, %70 ], [ %72, %74 ], [ %72, %89 ], [ null, %2 ], [ null, %52 ]
  ret %"class.WTF::StringImpl"* %92
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_110PackSourceERKNS_4KURLERKN3WTF6StringE(%"class.blink::KURL"* nocapture readonly dereferenceable(112), %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 {
  %3 = alloca %"class.WTF::StringAppend", align 8
  %4 = alloca %"class.WTF::StringAppend.694", align 8
  %5 = bitcast %"class.WTF::StringAppend"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16
  %6 = bitcast %"class.WTF::StringAppend.694"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %0, i64 0, i32 4, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %9, label %54, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = and i32 %12, 2
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  br i1 %14, label %17, label %27

17:                                               ; preds = %10
  %18 = zext i32 %16 to i33
  %19 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %18, i33 1) #16
  %20 = extractvalue { i33, i1 } %19, 1
  %21 = extractvalue { i33, i1 } %19, 0
  %22 = icmp slt i33 %21, 0
  %23 = or i1 %20, %22
  br i1 %23, label %24, label %25, !prof !3

24:                                               ; preds = %17
  tail call void @llvm.trap() #16
  unreachable

25:                                               ; preds = %17
  %26 = trunc i33 %21 to i32
  store i32 %26, i32* %15, align 4
  br label %27

27:                                               ; preds = %10, %25
  %28 = phi i32 [ %26, %25 ], [ %16, %10 ]
  %29 = load atomic i32, i32* %11 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  br i1 %31, label %33, label %43

33:                                               ; preds = %27
  %34 = zext i32 %28 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #16
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %33
  tail call void @llvm.trap() #16
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %43

43:                                               ; preds = %41, %27
  %44 = phi i32 [ %42, %41 ], [ %28, %27 ]
  %45 = load atomic i32, i32* %11 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %43
  %49 = add i32 %44, -1
  store i32 %49, i32* %32, align 4
  br label %50

50:                                               ; preds = %48, %43
  %51 = phi i32 [ %49, %48 ], [ %44, %43 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #16
  br label %54

54:                                               ; preds = %2, %50, %53
  %55 = getelementptr inbounds %"class.WTF::StringAppend.694", %"class.WTF::StringAppend.694"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %55, align 8
  %56 = getelementptr inbounds %"class.WTF::StringAppend.694", %"class.WTF::StringAppend.694"* %4, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i8** %56, align 8
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %77, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %77

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i33
  %69 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #16
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !3

74:                                               ; preds = %65
  tail call void @llvm.trap() #16
  unreachable

75:                                               ; preds = %65
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %66, align 4
  br label %77

77:                                               ; preds = %54, %60, %75
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend"* nonnull sret %3, %"class.WTF::StringAppend.694"* nonnull dereferenceable(16) %4, %"class.WTF::StringImpl"* %58)
  %78 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend"* nonnull %3)
  %79 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 1, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %77
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #16
  br label %95

95:                                               ; preds = %94, %91, %77
  %96 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #16
  br label %112

112:                                              ; preds = %95, %108, %111
  %113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %114 = icmp eq %"class.WTF::StringImpl"* %113, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %112
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %113, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %113) #16
  br label %128

128:                                              ; preds = %112, %124, %127
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16
  ret %"class.WTF::StringImpl"* %78
}

declare void @_ZN5blink5mojom5blink16StorageAreaProxy3PutERKN3WTF6VectorIhLj0ENS3_18PartitionAllocatorEEES8_RKN4absl8optionalIS6_EERKNS3_6StringEN4base12OnceCallbackIFvbEEE(%"class.blink::mojom::blink::StorageAreaProxy"*, %"class.WTF::Vector.539"* dereferenceable(16), %"class.WTF::Vector.539"* dereferenceable(16), %"class.absl::optional.534"* dereferenceable(24), %"class.WTF::String"* dereferenceable(8), %"class.base::OnceCallback.550"*) unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink17CachedStorageArea12GetKeyFormatEv(%"class.blink::CachedStorageArea"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  %5 = select i1 %4, i32 2, i32 0
  ret i32 %5
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink17CachedStorageArea16IsSessionStorageEv(%"class.blink::CachedStorageArea"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 3
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 0
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CachedStorageArea22EnqueuePendingMutationERKN3WTF6StringES4_S4_S4_(%"class.blink::CachedStorageArea"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::unique_ptr.208", align 8
  %7 = alloca %"class.WTF::Deque.219", align 8
  %8 = alloca %"class.WTF::Deque.203", align 8
  %9 = bitcast %"class.std::__1::unique_ptr.208"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %6, i64 0, i32 0, i32 0, i32 0
  %11 = tail call i8* @_Znwm(i64 24) #17
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #16
  %12 = bitcast %"class.std::__1::unique_ptr.208"* %6 to i8**
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %31, label %16

16:                                               ; preds = %5
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %31

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #16
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %34, !prof !3

30:                                               ; preds = %21
  tail call void @llvm.trap() #16
  unreachable

31:                                               ; preds = %16, %5
  %32 = ptrtoint %"class.WTF::StringImpl"* %14 to i64
  %33 = bitcast i8* %11 to i64*
  store i64 %32, i64* %33, align 8
  br label %54

34:                                               ; preds = %21
  %35 = trunc i33 %27 to i32
  store i32 %35, i32* %22, align 4
  %36 = bitcast i8* %11 to %"class.WTF::StringImpl"**
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = ptrtoint %"class.WTF::StringImpl"* %14 to i64
  %39 = bitcast i8* %11 to i64*
  store i64 %38, i64* %39, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %34
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #16
  br label %54

54:                                               ; preds = %31, %34, %50, %53
  %55 = load %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %10, align 8
  %56 = getelementptr inbounds %"struct.blink::CachedStorageArea::PendingMutation", %"struct.blink::CachedStorageArea::PendingMutation"* %55, i64 0, i32 1
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %77, label %60

60:                                               ; preds = %54
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %77

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  %68 = zext i32 %67 to i33
  %69 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %68, i33 1) #16
  %70 = extractvalue { i33, i1 } %69, 1
  %71 = extractvalue { i33, i1 } %69, 0
  %72 = icmp slt i33 %71, 0
  %73 = or i1 %70, %72
  br i1 %73, label %74, label %75, !prof !3

74:                                               ; preds = %65
  tail call void @llvm.trap() #16
  unreachable

75:                                               ; preds = %65
  %76 = trunc i33 %71 to i32
  store i32 %76, i32* %66, align 4
  br label %77

77:                                               ; preds = %75, %60, %54
  %78 = ptrtoint %"class.WTF::StringImpl"* %58 to i64
  %79 = bitcast %"class.WTF::String"* %56 to i64*
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  store i64 %78, i64* %79, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %96, label %83

83:                                               ; preds = %77
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  br i1 %87, label %90, label %92

90:                                               ; preds = %83
  %91 = add i32 %89, -1
  store i32 %91, i32* %88, align 4
  br label %92

92:                                               ; preds = %90, %83
  %93 = phi i32 [ %91, %90 ], [ %89, %83 ]
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %96

95:                                               ; preds = %92
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #16
  br label %96

96:                                               ; preds = %77, %92, %95
  %97 = load %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %10, align 8
  %98 = getelementptr inbounds %"struct.blink::CachedStorageArea::PendingMutation", %"struct.blink::CachedStorageArea::PendingMutation"* %97, i64 0, i32 2
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %119, label %102

102:                                              ; preds = %96
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %119

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = zext i32 %109 to i33
  %111 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %110, i33 1) #16
  %112 = extractvalue { i33, i1 } %111, 1
  %113 = extractvalue { i33, i1 } %111, 0
  %114 = icmp slt i33 %113, 0
  %115 = or i1 %112, %114
  br i1 %115, label %116, label %117, !prof !3

116:                                              ; preds = %107
  tail call void @llvm.trap() #16
  unreachable

117:                                              ; preds = %107
  %118 = trunc i33 %113 to i32
  store i32 %118, i32* %108, align 4
  br label %119

119:                                              ; preds = %117, %102, %96
  %120 = ptrtoint %"class.WTF::StringImpl"* %100 to i64
  %121 = bitcast %"class.WTF::String"* %98 to i64*
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %98, i64 0, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  store i64 %120, i64* %121, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #16
  br label %138

138:                                              ; preds = %119, %134, %137
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %187, label %141

141:                                              ; preds = %138
  %142 = bitcast %"class.WTF::Deque.219"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %142, i8 0, i64 24, i1 false) #16
  %143 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 10, i32 0
  %144 = call { %"struct.WTF::KeyValuePair.218"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_S8_E6insertINS_17HashMapTranslatorISH_SC_S8_EERKS1_S9_EENS_18HashTableAddResultISI_SA_EEOT0_OT1_(%"class.WTF::HashTable.215"* %143, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::Deque.219"* nonnull dereferenceable(24) %7) #16
  %145 = extractvalue { %"struct.WTF::KeyValuePair.218"*, i8 } %144, 0
  %146 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %145, i64 0, i32 1
  %147 = bitcast %"class.std::__1::unique_ptr.208"* %6 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %145, i64 0, i32 1, i32 1
  %150 = load i32, i32* %149, align 8
  %151 = icmp eq i32 %150, 0
  %152 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %145, i64 0, i32 1, i32 2
  %153 = load i32, i32* %152, align 4
  br i1 %151, label %157, label %154

154:                                              ; preds = %141
  %155 = add i32 %153, 1
  %156 = icmp eq i32 %155, %150
  br i1 %156, label %166, label %168

157:                                              ; preds = %141
  %158 = icmp eq i32 %153, 0
  %159 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %145, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %160 = load i32, i32* %159, align 8
  br i1 %158, label %164, label %161

161:                                              ; preds = %157
  %162 = add i32 %160, -1
  %163 = icmp eq i32 %153, %162
  br i1 %163, label %166, label %168

164:                                              ; preds = %157
  %165 = icmp eq i32 %160, 0
  br i1 %165, label %166, label %168

166:                                              ; preds = %164, %161, %154
  call void @_ZN3WTF5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.219"* %146) #16
  %167 = load i32, i32* %152, align 4
  br label %168

168:                                              ; preds = %154, %161, %164, %166
  %169 = phi i32 [ %153, %154 ], [ %153, %161 ], [ 0, %164 ], [ %167, %166 ]
  %170 = getelementptr inbounds %"class.WTF::Deque.219", %"class.WTF::Deque.219"* %146, i64 0, i32 0, i32 0, i32 0, i32 0
  %171 = load %"struct.blink::CachedStorageArea::PendingMutation"**, %"struct.blink::CachedStorageArea::PendingMutation"*** %170, align 8
  %172 = zext i32 %169 to i64
  %173 = getelementptr inbounds %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %171, i64 %172
  %174 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %145, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %175 = load i32, i32* %174, align 8
  %176 = add i32 %175, -1
  %177 = icmp eq i32 %169, %176
  %178 = add i32 %169, 1
  %179 = select i1 %177, i32 0, i32 %178
  store i32 %179, i32* %152, align 4
  %180 = bitcast %"struct.blink::CachedStorageArea::PendingMutation"** %173 to i64*
  store i64 %148, i64* %180, align 8
  %181 = getelementptr inbounds %"class.WTF::Deque.219", %"class.WTF::Deque.219"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %182 = load %"struct.blink::CachedStorageArea::PendingMutation"**, %"struct.blink::CachedStorageArea::PendingMutation"*** %181, align 8
  %183 = icmp eq %"struct.blink::CachedStorageArea::PendingMutation"** %182, null
  br i1 %183, label %186, label %184

184:                                              ; preds = %168
  %185 = bitcast %"struct.blink::CachedStorageArea::PendingMutation"** %182 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %185) #16
  store %"struct.blink::CachedStorageArea::PendingMutation"** null, %"struct.blink::CachedStorageArea::PendingMutation"*** %181, align 8
  br label %186

186:                                              ; preds = %168, %184
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #16
  br label %187

187:                                              ; preds = %186, %138
  %188 = bitcast %"class.WTF::Deque.203"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %188) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %188, i8 0, i64 24, i1 false) #16
  %189 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 9, i32 0
  %190 = call { %"struct.WTF::KeyValuePair.202"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSI_ISD_EEEESJ_SC_E6insertINS_17HashMapTranslatorISL_SG_SC_EERKS1_SD_EENS_18HashTableAddResultISM_SE_EEOT0_OT1_(%"class.WTF::HashTable.199"* %189, %"class.WTF::String"* dereferenceable(8) %4, %"class.WTF::Deque.203"* nonnull dereferenceable(24) %8) #16
  %191 = extractvalue { %"struct.WTF::KeyValuePair.202"*, i8 } %190, 0
  %192 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %191, i64 0, i32 1
  %193 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %191, i64 0, i32 1, i32 1
  %194 = load i32, i32* %193, align 8
  %195 = icmp eq i32 %194, 0
  %196 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %191, i64 0, i32 1, i32 2
  %197 = load i32, i32* %196, align 4
  br i1 %195, label %201, label %198

198:                                              ; preds = %187
  %199 = add i32 %197, 1
  %200 = icmp eq i32 %199, %194
  br i1 %200, label %210, label %212

201:                                              ; preds = %187
  %202 = icmp eq i32 %197, 0
  %203 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %191, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %204 = load i32, i32* %203, align 8
  br i1 %202, label %208, label %205

205:                                              ; preds = %201
  %206 = add i32 %204, -1
  %207 = icmp eq i32 %197, %206
  br i1 %207, label %210, label %212

208:                                              ; preds = %201
  %209 = icmp eq i32 %204, 0
  br i1 %209, label %210, label %212

210:                                              ; preds = %208, %205, %198
  call void @_ZN3WTF5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.203"* %192) #16
  %211 = load i32, i32* %196, align 4
  br label %212

212:                                              ; preds = %198, %205, %208, %210
  %213 = phi i32 [ %197, %198 ], [ %197, %205 ], [ 0, %208 ], [ %211, %210 ]
  %214 = getelementptr inbounds %"class.WTF::Deque.203", %"class.WTF::Deque.203"* %192, i64 0, i32 0, i32 0, i32 0, i32 0
  %215 = load %"class.std::__1::unique_ptr.208"*, %"class.std::__1::unique_ptr.208"** %214, align 8
  %216 = zext i32 %213 to i64
  %217 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %215, i64 %216
  %218 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %191, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %219 = load i32, i32* %218, align 8
  %220 = add i32 %219, -1
  %221 = icmp eq i32 %213, %220
  %222 = add i32 %213, 1
  %223 = select i1 %221, i32 0, i32 %222
  store i32 %223, i32* %196, align 4
  %224 = bitcast %"class.std::__1::unique_ptr.208"* %6 to i64*
  %225 = load i64, i64* %224, align 8
  store %"struct.blink::CachedStorageArea::PendingMutation"* null, %"struct.blink::CachedStorageArea::PendingMutation"** %10, align 8
  %226 = bitcast %"class.std::__1::unique_ptr.208"* %217 to i64*
  store i64 %225, i64* %226, align 8
  %227 = bitcast %"class.WTF::Deque.203"* %8 to %"class.WTF::ConditionalDestructor.204"*
  call void @_ZN3WTF21ConditionalDestructorINS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.204"* nonnull %227) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %188) #16
  %228 = load %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %10, align 8
  store %"struct.blink::CachedStorageArea::PendingMutation"* null, %"struct.blink::CachedStorageArea::PendingMutation"** %10, align 8
  %229 = icmp eq %"struct.blink::CachedStorageArea::PendingMutation"* %228, null
  br i1 %229, label %232, label %230

230:                                              ; preds = %212
  %231 = bitcast %"class.std::__1::unique_ptr.208"* %6 to %"struct.std::__1::default_delete.212"*
  call void @_ZNKSt3__114default_deleteIN5blink17CachedStorageArea15PendingMutationEEclEPS3_(%"struct.std::__1::default_delete.212"* nonnull %231, %"struct.blink::CachedStorageArea::PendingMutation"* nonnull %228) #16
  br label %232

232:                                              ; preds = %212, %230
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CachedStorageArea19EnqueueStorageEventERKN3WTF6StringES4_S4_S4_S4_(%"class.blink::CachedStorageArea"* nocapture readonly, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::HeapVector", align 8
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %17, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %13, %"class.WTF::StringImpl"* %15) #16
  br i1 %16, label %156, label %17

17:                                               ; preds = %11, %6
  %18 = bitcast %"class.blink::HeapVector"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #16
  %19 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %21 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %22 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0, i32 1, i64 0
  %23 = bitcast %"class.blink::HeapVector"* %7 to i8**
  store i8* %22, i8** %23, align 8
  store i32 1, i32* %20, align 8
  %24 = bitcast i8* %22 to i64*
  store i64 0, i64* %24, align 8
  store i32 0, i32* %21, align 4
  %25 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 14, i32 0, i32 0
  %26 = load %"class.blink::HeapHashMap"*, %"class.blink::HeapHashMap"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %26, i64 0, i32 0, i32 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %26, i64 0, i32 0, i32 0, i32 0
  %31 = load %"struct.WTF::KeyValuePair.404"*, %"struct.WTF::KeyValuePair.404"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %26, i64 0, i32 0, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %31, i64 %34
  br i1 %29, label %84, label %36

36:                                               ; preds = %17
  %37 = icmp eq i32 %33, 0
  br i1 %37, label %45, label %38

38:                                               ; preds = %36, %42
  %39 = phi %"struct.WTF::KeyValuePair.404"* [ %43, %42 ], [ %31, %36 ]
  %40 = bitcast %"struct.WTF::KeyValuePair.404"* %39 to i64*
  %41 = load i64, i64* %40, align 8
  switch i64 %41, label %45 [
    i64 -1, label %42
    i64 0, label %42
  ]

42:                                               ; preds = %38, %38
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %39, i64 1
  %44 = icmp eq %"struct.WTF::KeyValuePair.404"* %43, %35
  br i1 %44, label %55, label %38

45:                                               ; preds = %38, %36
  %46 = phi %"struct.WTF::KeyValuePair.404"* [ %31, %36 ], [ %39, %38 ]
  %47 = icmp eq %"struct.WTF::KeyValuePair.404"* %46, %35
  br i1 %47, label %55, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0
  br label %88

51:                                               ; preds = %123, %133, %130
  %52 = load %"class.blink::HeapHashMap"*, %"class.blink::HeapHashMap"** %25, align 8
  %53 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %52, i64 0, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  br label %55

55:                                               ; preds = %42, %51, %45
  %56 = phi i32 [ %54, %51 ], [ %28, %45 ], [ %28, %42 ]
  %57 = phi %"class.blink::HeapHashMap"* [ %52, %51 ], [ %26, %45 ], [ %26, %42 ]
  %58 = icmp eq i32 %56, 0
  br i1 %58, label %84, label %59

59:                                               ; preds = %55
  %60 = load i32, i32* %21, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %84, label %62

62:                                               ; preds = %59
  %63 = load %"class.blink::Member.666"*, %"class.blink::Member.666"** %19, align 8
  %64 = zext i32 %60 to i64
  %65 = getelementptr inbounds %"class.blink::Member.666", %"class.blink::Member.666"* %63, i64 %64
  %66 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %57, i64 0, i32 0, i32 0
  %67 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %57, i64 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %57, i64 0, i32 0, i32 0, i32 1
  br label %69

69:                                               ; preds = %81, %62
  %70 = phi %"class.blink::Member.666"* [ %63, %62 ], [ %82, %81 ]
  %71 = getelementptr inbounds %"class.blink::Member.666", %"class.blink::Member.666"* %70, i64 0, i32 0, i32 0
  %72 = load %"class.blink::CachedStorageArea::Source"*, %"class.blink::CachedStorageArea::Source"** %71, align 8
  %73 = call { %"struct.WTF::KeyValuePair.404"*, %"struct.WTF::KeyValuePair.404"* } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.402"* %66, %"class.blink::CachedStorageArea::Source"* %72) #16
  %74 = extractvalue { %"struct.WTF::KeyValuePair.404"*, %"struct.WTF::KeyValuePair.404"* } %73, 0
  %75 = load %"struct.WTF::KeyValuePair.404"*, %"struct.WTF::KeyValuePair.404"** %67, align 8
  %76 = load i32, i32* %68, align 8
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %75, i64 %77
  %79 = icmp eq %"struct.WTF::KeyValuePair.404"* %78, %74
  br i1 %79, label %81, label %80

80:                                               ; preds = %69
  call void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE5eraseEPKS8_(%"class.WTF::HashTable.402"* %66, %"struct.WTF::KeyValuePair.404"* %74) #16
  br label %81

81:                                               ; preds = %80, %69
  %82 = getelementptr inbounds %"class.blink::Member.666", %"class.blink::Member.666"* %70, i64 1
  %83 = icmp eq %"class.blink::Member.666"* %82, %65
  br i1 %83, label %84, label %69

84:                                               ; preds = %81, %17, %55, %59
  %85 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 5, i32 0, i32 0
  %86 = load %"class.blink::StorageNamespace"*, %"class.blink::StorageNamespace"** %85, align 8
  %87 = icmp eq %"class.blink::StorageNamespace"* %86, null
  br i1 %87, label %138, label %135

88:                                               ; preds = %48, %133
  %89 = phi %"struct.WTF::KeyValuePair.404"* [ %46, %48 ], [ %127, %133 ]
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %89, i64 0, i32 1, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  %92 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %93 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %91, %"class.WTF::StringImpl"* %92) #16
  br i1 %93, label %123, label %94

94:                                               ; preds = %88
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %89, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.blink::CachedStorageArea::Source"*, %"class.blink::CachedStorageArea::Source"** %95, align 8
  %97 = bitcast %"class.blink::CachedStorageArea::Source"* %96 to i1 (%"class.blink::CachedStorageArea::Source"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*)***
  %98 = load i1 (%"class.blink::CachedStorageArea::Source"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*)**, i1 (%"class.blink::CachedStorageArea::Source"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*)*** %97, align 8
  %99 = getelementptr inbounds i1 (%"class.blink::CachedStorageArea::Source"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.blink::CachedStorageArea::Source"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*)** %98, i64 4
  %100 = load i1 (%"class.blink::CachedStorageArea::Source"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*)*, i1 (%"class.blink::CachedStorageArea::Source"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*)** %99, align 8
  %101 = call zeroext i1 %100(%"class.blink::CachedStorageArea::Source"* %96, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %4) #16
  br i1 %101, label %123, label %102

102:                                              ; preds = %94
  %103 = load i32, i32* %21, align 4
  %104 = load i32, i32* %20, align 8
  %105 = icmp eq i32 %103, %104
  br i1 %105, label %121, label %106, !prof !3

106:                                              ; preds = %102
  %107 = load %"class.blink::Member.666"*, %"class.blink::Member.666"** %19, align 8
  %108 = zext i32 %103 to i64
  %109 = getelementptr inbounds %"class.blink::Member.666", %"class.blink::Member.666"* %107, i64 %108
  %110 = bitcast %"struct.WTF::KeyValuePair.404"* %89 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = bitcast %"class.blink::Member.666"* %109 to i64*
  store atomic i64 %111, i64* %112 monotonic, align 8
  %113 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %118, label %115

115:                                              ; preds = %106
  %116 = inttoptr i64 %111 to i8*
  %117 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %116) #16
  br label %118

118:                                              ; preds = %115, %106
  %119 = load i32, i32* %21, align 4
  %120 = add i32 %119, 1
  store i32 %120, i32* %21, align 4
  br label %123

121:                                              ; preds = %102
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %89, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_17CachedStorageArea6SourceEEELj1ENS1_13HeapAllocatorEE14AppendSlowCaseIRKNS1_10WeakMemberIS4_EEEEvOT_(%"class.WTF::Vector.663"* nonnull %50, %"class.blink::WeakMember.405"* dereferenceable(8) %122) #16
  br label %123

123:                                              ; preds = %88, %121, %118, %94
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %89, i64 1
  %125 = icmp eq %"struct.WTF::KeyValuePair.404"* %124, %35
  br i1 %125, label %51, label %126

126:                                              ; preds = %123, %130
  %127 = phi %"struct.WTF::KeyValuePair.404"* [ %131, %130 ], [ %124, %123 ]
  %128 = bitcast %"struct.WTF::KeyValuePair.404"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  switch i64 %129, label %133 [
    i64 -1, label %130
    i64 0, label %130
  ]

130:                                              ; preds = %126, %126
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %127, i64 1
  %132 = icmp eq %"struct.WTF::KeyValuePair.404"* %131, %35
  br i1 %132, label %51, label %126

133:                                              ; preds = %126
  %134 = icmp eq %"struct.WTF::KeyValuePair.404"* %127, %35
  br i1 %134, label %51, label %88

135:                                              ; preds = %84
  %136 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 4, i32 0
  %137 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %136, align 8
  call void @_ZN5blink16StorageNamespace23DidDispatchStorageEventEPKNS_14SecurityOriginERKN3WTF6StringES7_S7_(%"class.blink::StorageNamespace"* nonnull %86, %"class.blink::SecurityOrigin"* %137, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3) #16
  br label %138

138:                                              ; preds = %84, %135
  %139 = load i32, i32* %21, align 4
  %140 = icmp eq i32 %139, 0
  %141 = load %"class.blink::Member.666"*, %"class.blink::Member.666"** %19, align 8
  br i1 %140, label %142, label %144, !prof !3

142:                                              ; preds = %138
  %143 = bitcast i8* %22 to %"class.blink::Member.666"*
  br label %150

144:                                              ; preds = %138
  %145 = icmp ne %"class.blink::Member.666"* %141, null
  %146 = bitcast i8* %22 to %"class.blink::Member.666"*
  %147 = icmp ne %"class.blink::Member.666"* %141, %146
  %148 = and i1 %145, %147
  br i1 %148, label %150, label %149

149:                                              ; preds = %144
  store i32 0, i32* %21, align 4
  br label %150

150:                                              ; preds = %142, %149, %144
  %151 = phi %"class.blink::Member.666"* [ %143, %142 ], [ %146, %149 ], [ %146, %144 ]
  %152 = icmp eq %"class.blink::Member.666"* %141, %151
  br i1 %152, label %155, label %153, !prof !2

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"class.blink::HeapVector", %"class.blink::HeapVector"* %7, i64 0, i32 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_17CachedStorageArea6SourceEEELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.664"* nonnull %154, %"class.blink::Member.666"* %141) #16
  br label %155

155:                                              ; preds = %150, %153
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #16
  br label %156

156:                                              ; preds = %11, %155
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CachedStorageArea10RemoveItemERKN3WTF6StringEPNS0_6SourceE(%"class.blink::CachedStorageArea"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::CachedStorageArea::Source"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebScopedVirtualTimePauser", align 8
  %5 = alloca %"class.blink::CachedStorageArea::Source"*, align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.absl::optional.534", align 8
  %8 = alloca %"class.WTF::Vector.539", align 8
  %9 = alloca %"class.blink::KURL", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::Vector.539", align 8
  %13 = alloca %"class.base::OnceCallback.550", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  store %"class.blink::CachedStorageArea::Source"* %2, %"class.blink::CachedStorageArea::Source"** %5, align 8
  tail call void @_ZN5blink17CachedStorageArea12EnsureLoadedEv(%"class.blink::CachedStorageArea"* %0)
  %16 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %17, align 8
  %18 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %19 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %18, align 8
  %20 = call zeroext i1 @_ZN5blink14StorageAreaMap10RemoveItemERKN3WTF6StringEPS2_(%"class.blink::StorageAreaMap"* %19, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* nonnull %6) #16
  br i1 %20, label %21, label %217

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %22, i8 -86, i64 24, i1 false)
  store i8 0, i8* %22, align 8
  %23 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 11
  %24 = load i8, i8* %23, align 8, !range !4
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %69, label %26

26:                                               ; preds = %21
  %27 = bitcast %"class.WTF::Vector.539"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #16
  %28 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = icmp eq i32 %29, 0
  %31 = zext i1 %30 to i32
  call void @_ZN5blink17CachedStorageArea19StringToUint8VectorERKN3WTF6StringENS0_12FormatOptionE(%"class.WTF::Vector.539"* nonnull sret %8, %"class.WTF::String"* nonnull dereferenceable(8) %6, i32 %31)
  %32 = load i8, i8* %22, align 8, !range !4
  %33 = icmp eq i8 %32, 0
  %34 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %33, label %35, label %46

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %37 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %38 = bitcast %"class.WTF::Vector.539"* %8 to i64*
  %39 = bitcast %"class.WTF::Vector.539"* %34 to i64*
  store i64 0, i64* %39, align 8
  %40 = load i64, i64* %38, align 8
  %41 = bitcast %"class.WTF::Vector.539"* %34 to i64*
  store atomic i64 0, i64* %38 monotonic, align 8
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %8, i64 0, i32 0, i32 0, i32 1
  %43 = load i32, i32* %42, align 8
  store i32 %43, i32* %36, align 8
  store i32 0, i32* %42, align 8
  %44 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %8, i64 0, i32 0, i32 0, i32 2
  %45 = load i32, i32* %44, align 4
  store i32 %45, i32* %37, align 4
  store i32 0, i32* %44, align 4
  store i8 1, i8* %22, align 8
  br label %67

46:                                               ; preds = %26
  %47 = bitcast %"class.WTF::Vector.539"* %8 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.WTF::Vector.539"* %34 to i64*
  %50 = load i64, i64* %49, align 8
  store atomic i64 %50, i64* %47 monotonic, align 8
  store atomic i64 %48, i64* %49 monotonic, align 8
  %51 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %8, i64 0, i32 0, i32 0, i32 1
  %53 = load i32, i32* %51, align 8
  %54 = load i32, i32* %52, align 8
  store i32 %54, i32* %51, align 8
  store i32 %53, i32* %52, align 8
  %55 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %56 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %8, i64 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %55, align 4
  %58 = load i32, i32* %56, align 4
  store i32 %58, i32* %55, align 4
  store i32 %57, i32* %56, align 4
  %59 = inttoptr i64 %50 to i8*
  %60 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %8, i64 0, i32 0, i32 0, i32 0
  %61 = icmp eq i64 %50, 0
  br i1 %61, label %67, label %62, !prof !2

62:                                               ; preds = %46
  %63 = icmp eq i32 %57, 0
  br i1 %63, label %66, label %64, !prof !3

64:                                               ; preds = %62
  %65 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %8, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %65, align 4
  br label %66

66:                                               ; preds = %64, %62
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %59) #16
  store i8* null, i8** %60, align 8
  br label %67

67:                                               ; preds = %35, %46, %66
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #16
  %68 = load %"class.blink::CachedStorageArea::Source"*, %"class.blink::CachedStorageArea::Source"** %5, align 8
  br label %69

69:                                               ; preds = %21, %67
  %70 = phi %"class.blink::CachedStorageArea::Source"* [ %2, %21 ], [ %68, %67 ]
  %71 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %71) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 -86, i64 112, i1 false)
  %72 = bitcast %"class.blink::CachedStorageArea::Source"* %70 to void (%"class.blink::KURL"*, %"class.blink::CachedStorageArea::Source"*)***
  %73 = load void (%"class.blink::KURL"*, %"class.blink::CachedStorageArea::Source"*)**, void (%"class.blink::KURL"*, %"class.blink::CachedStorageArea::Source"*)*** %72, align 8
  %74 = getelementptr inbounds void (%"class.blink::KURL"*, %"class.blink::CachedStorageArea::Source"*)*, void (%"class.blink::KURL"*, %"class.blink::CachedStorageArea::Source"*)** %73, i64 3
  %75 = load void (%"class.blink::KURL"*, %"class.blink::CachedStorageArea::Source"*)*, void (%"class.blink::KURL"*, %"class.blink::CachedStorageArea::Source"*)** %74, align 8
  call void %75(%"class.blink::KURL"* nonnull sret %9, %"class.blink::CachedStorageArea::Source"* %70) #16
  %76 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #16
  %77 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %78 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 14, i32 0, i32 0
  %79 = load %"class.blink::HeapHashMap"*, %"class.blink::HeapHashMap"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %79, i64 0, i32 0
  %81 = call %"class.WTF::StringImpl"* @_ZNK3WTF7HashMapIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_6StringENS_10MemberHashIS4_EENS_10HashTraitsIS5_EENS9_IS6_EENS1_13HeapAllocatorEE2atERKPS4_(%"class.WTF::HashMap.401"* %80, %"class.blink::CachedStorageArea::Source"** nonnull dereferenceable(8) %5)
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %77, align 8
  %82 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %82) #16
  %83 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %83, align 8
  %84 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_110PackSourceERKNS_4KURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull dereferenceable(112) %9, %"class.WTF::String"* nonnull dereferenceable(8) %10)
  store %"class.WTF::StringImpl"* %84, %"class.WTF::StringImpl"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 6
  %86 = load i8, i8* %85, align 8, !range !4
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %144

88:                                               ; preds = %69
  %89 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 12, i32 0, i32 1
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.391", %"class.std::__1::unique_ptr.391"* %89, i64 0, i32 0, i32 0, i32 0
  %91 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %90, align 8
  %92 = icmp eq %"class.blink::mojom::blink::StorageAreaProxy"* %91, null
  br i1 %92, label %93, label %115

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 12
  %95 = bitcast %"class.mojo::Remote"* %94 to %"class.mojo::internal::InterfacePtrStateBase"*
  %96 = call i8* @_Znwm(i64 8) #17
  %97 = bitcast i8* %96 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink28StorageAreaResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %97, align 8
  %98 = bitcast i8* %96 to %"class.mojo::MessageReceiver"*
  %99 = call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %95, i1 zeroext false, i1 zeroext true, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %98, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink11StorageArea5Name_E, i64 0, i64 0)) #16
  br i1 %99, label %100, label %115

100:                                              ; preds = %93
  %101 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 12, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %102 = bitcast %"class.mojo::InterfaceEndpointClient"** %101 to %"class.mojo::MessageReceiverWithResponder"**
  %103 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %102, align 8
  %104 = call i8* @_Znwm(i64 16) #17
  %105 = bitcast i8* %104 to %"class.blink::mojom::blink::StorageAreaProxy"*
  call void @_ZN5blink5mojom5blink16StorageAreaProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::StorageAreaProxy"* nonnull %105, %"class.mojo::MessageReceiverWithResponder"* %103) #16
  %106 = ptrtoint i8* %104 to i64
  %107 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %90, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.391"* %89 to i64*
  store i64 %106, i64* %108, align 8
  %109 = icmp eq %"class.blink::mojom::blink::StorageAreaProxy"* %107, null
  br i1 %109, label %115, label %110

110:                                              ; preds = %100
  %111 = bitcast %"class.blink::mojom::blink::StorageAreaProxy"* %107 to void (%"class.blink::mojom::blink::StorageAreaProxy"*)***
  %112 = load void (%"class.blink::mojom::blink::StorageAreaProxy"*)**, void (%"class.blink::mojom::blink::StorageAreaProxy"*)*** %111, align 8
  %113 = getelementptr inbounds void (%"class.blink::mojom::blink::StorageAreaProxy"*)*, void (%"class.blink::mojom::blink::StorageAreaProxy"*)** %112, i64 1
  %114 = load void (%"class.blink::mojom::blink::StorageAreaProxy"*)*, void (%"class.blink::mojom::blink::StorageAreaProxy"*)** %113, align 8
  call void %114(%"class.blink::mojom::blink::StorageAreaProxy"* nonnull %107) #16
  br label %115

115:                                              ; preds = %88, %93, %100, %110
  %116 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %90, align 8
  %117 = bitcast %"class.WTF::Vector.539"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %117) #16
  %118 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 3
  %119 = load i32, i32* %118, align 8
  %120 = icmp eq i32 %119, 0
  %121 = select i1 %120, i32 2, i32 0
  call void @_ZN5blink17CachedStorageArea19StringToUint8VectorERKN3WTF6StringENS0_12FormatOptionE(%"class.WTF::Vector.539"* nonnull sret %12, %"class.WTF::String"* dereferenceable(8) %1, i32 %121)
  %122 = load %"class.blink::CachedStorageArea::Source"*, %"class.blink::CachedStorageArea::Source"** %5, align 8
  %123 = bitcast %"class.blink::WebScopedVirtualTimePauser"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %123) #16, !noalias !19
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %123, i8 -86, i64 40, i1 false) #16, !noalias !19
  %124 = bitcast %"class.blink::CachedStorageArea::Source"* %122 to void (%"class.blink::WebScopedVirtualTimePauser"*, %"class.blink::CachedStorageArea::Source"*, i8*, i32)***
  %125 = load void (%"class.blink::WebScopedVirtualTimePauser"*, %"class.blink::CachedStorageArea::Source"*, i8*, i32)**, void (%"class.blink::WebScopedVirtualTimePauser"*, %"class.blink::CachedStorageArea::Source"*, i8*, i32)*** %124, align 8, !noalias !19
  %126 = getelementptr inbounds void (%"class.blink::WebScopedVirtualTimePauser"*, %"class.blink::CachedStorageArea::Source"*, i8*, i32)*, void (%"class.blink::WebScopedVirtualTimePauser"*, %"class.blink::CachedStorageArea::Source"*, i8*, i32)** %125, i64 5
  %127 = load void (%"class.blink::WebScopedVirtualTimePauser"*, %"class.blink::CachedStorageArea::Source"*, i8*, i32)*, void (%"class.blink::WebScopedVirtualTimePauser"*, %"class.blink::CachedStorageArea::Source"*, i8*, i32)** %126, align 8, !noalias !19
  call void %127(%"class.blink::WebScopedVirtualTimePauser"* nonnull sret %4, %"class.blink::CachedStorageArea::Source"* %122, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i32 1) #16, !noalias !19
  call void @_ZN5blink26WebScopedVirtualTimePauser16PauseVirtualTimeEv(%"class.blink::WebScopedVirtualTimePauser"* nonnull %4) #16, !noalias !19
  %128 = call i8* @_Znwm(i64 80) #17, !noalias !22
  %129 = bitcast i8* %128 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %129, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS3_17CachedStorageArea6SourceEE3$_0JNS3_26WebScopedVirtualTimePauserEEEEFvbEE7RunOnceEPNS0_13BindStateBaseEb" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS2_17CachedStorageArea6SourceEE3$_0JNS2_26WebScopedVirtualTimePauserEEE7DestroyEPKNS0_13BindStateBaseE") #16, !noalias !22
  %130 = getelementptr inbounds i8, i8* %128, i64 40
  %131 = bitcast i8* %130 to %"class.blink::WebScopedVirtualTimePauser"*
  call void @_ZN5blink26WebScopedVirtualTimePauserC1EOS0_(%"class.blink::WebScopedVirtualTimePauser"* %131, %"class.blink::WebScopedVirtualTimePauser"* nonnull dereferenceable(40) %4) #16, !noalias !22
  %132 = bitcast %"class.base::OnceCallback.550"* %13 to i8**
  store i8* %128, i8** %132, align 8, !alias.scope !22
  call void @_ZN5blink26WebScopedVirtualTimePauserD1Ev(%"class.blink::WebScopedVirtualTimePauser"* nonnull %4) #16, !noalias !19
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %123) #16, !noalias !19
  call void @_ZN5blink5mojom5blink16StorageAreaProxy6DeleteERKN3WTF6VectorIhLj0ENS3_18PartitionAllocatorEEERKN4absl8optionalIS6_EERKNS3_6StringEN4base12OnceCallbackIFvbEEE(%"class.blink::mojom::blink::StorageAreaProxy"* %116, %"class.WTF::Vector.539"* nonnull dereferenceable(16) %12, %"class.absl::optional.534"* nonnull dereferenceable(24) %7, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.base::OnceCallback.550"* nonnull %13) #16
  %133 = getelementptr inbounds %"class.base::OnceCallback.550", %"class.base::OnceCallback.550"* %13, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %133) #16
  %134 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %12, i64 0, i32 0, i32 0, i32 0
  %135 = load i8*, i8** %134, align 8
  %136 = icmp eq i8* %135, null
  br i1 %136, label %143, label %137, !prof !2

137:                                              ; preds = %115
  %138 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %12, i64 0, i32 0, i32 0, i32 2
  %139 = load i32, i32* %138, align 4
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %142, label %141, !prof !3

141:                                              ; preds = %137
  store i32 0, i32* %138, align 4
  br label %142

142:                                              ; preds = %141, %137
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %135) #16
  store i8* null, i8** %134, align 8
  br label %143

143:                                              ; preds = %115, %142
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %117) #16
  br label %144

144:                                              ; preds = %69, %143
  %145 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 3
  %146 = load i32, i32* %145, align 8
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %151, label %148

148:                                              ; preds = %144
  %149 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #16
  %150 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %150, align 8
  call void @_ZN5blink17CachedStorageArea22EnqueuePendingMutationERKN3WTF6StringES4_S4_S4_(%"class.blink::CachedStorageArea"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* nonnull dereferenceable(8) %14, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %11)
  br label %170

151:                                              ; preds = %144
  %152 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %152) #16
  %153 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %153, align 8
  %154 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %9, i64 0, i32 4
  call void @_ZN5blink17CachedStorageArea19EnqueueStorageEventERKN3WTF6StringES4_S4_S4_S4_(%"class.blink::CachedStorageArea"* %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %15, %"class.WTF::String"* dereferenceable(8) %154, %"class.WTF::String"* nonnull dereferenceable(8) %10)
  %155 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %156 = icmp eq %"class.WTF::StringImpl"* %155, null
  br i1 %156, label %170, label %157

157:                                              ; preds = %151
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %155, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  br i1 %161, label %164, label %166

164:                                              ; preds = %157
  %165 = add i32 %163, -1
  store i32 %165, i32* %162, align 4
  br label %166

166:                                              ; preds = %164, %157
  %167 = phi i32 [ %165, %164 ], [ %163, %157 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %155) #16
  br label %170

170:                                              ; preds = %169, %166, %151, %148
  %171 = phi i8* [ %149, %148 ], [ %152, %151 ], [ %152, %166 ], [ %152, %169 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %171) #16
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %173, label %187, label %174

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  br i1 %178, label %181, label %183

181:                                              ; preds = %174
  %182 = add i32 %180, -1
  store i32 %182, i32* %179, align 4
  br label %183

183:                                              ; preds = %181, %174
  %184 = phi i32 [ %182, %181 ], [ %180, %174 ]
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %183
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %172) #16
  br label %187

187:                                              ; preds = %170, %183, %186
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %82) #16
  %188 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %188, label %202, label %189

189:                                              ; preds = %187
  %190 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %191 = load atomic i32, i32* %190 monotonic, align 4
  %192 = and i32 %191, 2
  %193 = icmp eq i32 %192, 0
  %194 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %195 = load i32, i32* %194, align 4
  br i1 %193, label %196, label %198

196:                                              ; preds = %189
  %197 = add i32 %195, -1
  store i32 %197, i32* %194, align 4
  br label %198

198:                                              ; preds = %196, %189
  %199 = phi i32 [ %197, %196 ], [ %195, %189 ]
  %200 = icmp eq i32 %199, 0
  br i1 %200, label %201, label %202

201:                                              ; preds = %198
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %81) #16
  br label %202

202:                                              ; preds = %187, %198, %201
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #16
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %71) #16
  %203 = load i8, i8* %22, align 8, !range !4
  %204 = icmp eq i8 %203, 0
  br i1 %204, label %216, label %205

205:                                              ; preds = %202
  %206 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %207 = load i8*, i8** %206, align 8
  %208 = icmp eq i8* %207, null
  br i1 %208, label %215, label %209, !prof !2

209:                                              ; preds = %205
  %210 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %211 = load i32, i32* %210, align 4
  %212 = icmp eq i32 %211, 0
  br i1 %212, label %214, label %213, !prof !3

213:                                              ; preds = %209
  store i32 0, i32* %210, align 4
  br label %214

214:                                              ; preds = %213, %209
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %207) #16
  store i8* null, i8** %206, align 8
  br label %215

215:                                              ; preds = %214, %205
  store i8 0, i8* %22, align 8
  br label %216

216:                                              ; preds = %202, %215
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #16
  br label %217

217:                                              ; preds = %3, %216
  %218 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %219 = icmp eq %"class.WTF::StringImpl"* %218, null
  br i1 %219, label %233, label %220

220:                                              ; preds = %217
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load atomic i32, i32* %221 monotonic, align 4
  %223 = and i32 %222, 2
  %224 = icmp eq i32 %223, 0
  %225 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %218, i64 0, i32 0
  %226 = load i32, i32* %225, align 4
  br i1 %224, label %227, label %229

227:                                              ; preds = %220
  %228 = add i32 %226, -1
  store i32 %228, i32* %225, align 4
  br label %229

229:                                              ; preds = %227, %220
  %230 = phi i32 [ %228, %227 ], [ %226, %220 ]
  %231 = icmp eq i32 %230, 0
  br i1 %231, label %232, label %233

232:                                              ; preds = %229
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %218) #16
  br label %233

233:                                              ; preds = %217, %229, %232
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  ret void
}

declare zeroext i1 @_ZN5blink14StorageAreaMap10RemoveItemERKN3WTF6StringEPS2_(%"class.blink::StorageAreaMap"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"*) local_unnamed_addr #1

declare void @_ZN5blink5mojom5blink16StorageAreaProxy6DeleteERKN3WTF6VectorIhLj0ENS3_18PartitionAllocatorEEERKN4absl8optionalIS6_EERKNS3_6StringEN4base12OnceCallbackIFvbEEE(%"class.blink::mojom::blink::StorageAreaProxy"*, %"class.WTF::Vector.539"* dereferenceable(16), %"class.absl::optional.534"* dereferenceable(24), %"class.WTF::String"* dereferenceable(8), %"class.base::OnceCallback.550"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CachedStorageArea5ClearEPNS0_6SourceE(%"class.blink::CachedStorageArea"*, %"class.blink::CachedStorageArea::Source"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebScopedVirtualTimePauser", align 8
  %4 = alloca %"class.blink::CachedStorageArea::Source"*, align 8
  %5 = alloca %"class.mojo::PendingRemote", align 4
  %6 = alloca %"class.mojo::PendingRemote", align 4
  %7 = alloca %"class.blink::KURL", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.mojo::PendingRemote", align 4
  %11 = alloca %"class.base::OnceCallback.550", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = alloca %"class.WTF::String", align 8
  store %"class.blink::CachedStorageArea::Source"* %1, %"class.blink::CachedStorageArea::Source"** %4, align 8
  %18 = bitcast %"class.mojo::PendingRemote"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  %19 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 -1431655766, i32* %19, align 4
  %20 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %5, i64 0, i32 0, i32 1
  store i32 -1431655766, i32* %20, align 4
  %21 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %5, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %21) #16
  %22 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 3
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %30

25:                                               ; preds = %2
  call void @_ZN5blink17CachedStorageArea12EnsureLoadedEv(%"class.blink::CachedStorageArea"* %0)
  %26 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %27 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %26, align 8
  %28 = call i32 @_ZNK5blink14StorageAreaMap9GetLengthEv(%"class.blink::StorageAreaMap"* %27) #16
  %29 = icmp eq i32 %28, 0
  br label %40

30:                                               ; preds = %2
  %31 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %32 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %31, align 8
  %33 = icmp eq %"class.blink::StorageAreaMap"* %32, null
  br i1 %33, label %34, label %40

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 13
  %36 = getelementptr inbounds %"class.mojo::Receiver", %"class.mojo::Receiver"* %35, i64 0, i32 0, i32 0
  call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %36) #16
  %37 = bitcast %"class.mojo::PendingRemote"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #16
  call void @_ZN4mojo8ReceiverIN5blink5mojom5blink19StorageAreaObserverENS_19RawPtrImplRefTraitsIS4_EEE24BindNewPipeAndPassRemoteE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingRemote"* nonnull sret %6, %"class.mojo::Receiver"* %35, %"class.base::SequencedTaskRunner"* null) #16
  %38 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %6, i64 0, i32 0
  %39 = call dereferenceable(8) %"struct.mojo::internal::PendingRemoteState"* @_ZN4mojo8internal18PendingRemoteStateaSEOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %21, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %38) #16
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %38) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #16
  br label %40

40:                                               ; preds = %30, %34, %25
  %41 = phi i1 [ %29, %25 ], [ false, %30 ], [ false, %34 ]
  %42 = call noalias i8* @malloc(i64 72) #16
  %43 = bitcast i8* %42 to %"class.blink::StorageAreaMap"*
  call void @_ZN5blink14StorageAreaMapC1Em(%"class.blink::StorageAreaMap"* %43, i64 10485760) #16
  %44 = ptrtoint i8* %42 to i64
  %45 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 8
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %46, align 8
  %48 = bitcast %"class.std::__1::unique_ptr.187"* %45 to i64*
  store i64 %44, i64* %48, align 8
  %49 = icmp eq %"class.blink::StorageAreaMap"* %47, null
  br i1 %49, label %59, label %50

50:                                               ; preds = %40
  %51 = getelementptr inbounds %"class.blink::StorageAreaMap", %"class.blink::StorageAreaMap"* %47, i64 0, i32 0, i32 0, i32 0
  %52 = load %"struct.WTF::KeyValuePair.194"*, %"struct.WTF::KeyValuePair.194"** %51, align 8
  %53 = icmp eq %"struct.WTF::KeyValuePair.194"* %52, null
  br i1 %53, label %57, label %54, !prof !2

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::StorageAreaMap", %"class.blink::StorageAreaMap"* %47, i64 0, i32 0, i32 0, i32 1
  %56 = load i32, i32* %55, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.194"* nonnull %52, i32 %56) #16
  br label %57

57:                                               ; preds = %54, %50
  %58 = bitcast %"class.blink::StorageAreaMap"* %47 to i8*
  call void @free(i8* %58) #16
  br label %59

59:                                               ; preds = %57, %40
  %60 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %60) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 112, i1 false)
  %61 = load %"class.blink::CachedStorageArea::Source"*, %"class.blink::CachedStorageArea::Source"** %4, align 8
  %62 = bitcast %"class.blink::CachedStorageArea::Source"* %61 to void (%"class.blink::KURL"*, %"class.blink::CachedStorageArea::Source"*)***
  %63 = load void (%"class.blink::KURL"*, %"class.blink::CachedStorageArea::Source"*)**, void (%"class.blink::KURL"*, %"class.blink::CachedStorageArea::Source"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.blink::KURL"*, %"class.blink::CachedStorageArea::Source"*)*, void (%"class.blink::KURL"*, %"class.blink::CachedStorageArea::Source"*)** %63, i64 3
  %65 = load void (%"class.blink::KURL"*, %"class.blink::CachedStorageArea::Source"*)*, void (%"class.blink::KURL"*, %"class.blink::CachedStorageArea::Source"*)** %64, align 8
  call void %65(%"class.blink::KURL"* nonnull sret %7, %"class.blink::CachedStorageArea::Source"* %61) #16
  %66 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66) #16
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 14, i32 0, i32 0
  %69 = load %"class.blink::HeapHashMap"*, %"class.blink::HeapHashMap"** %68, align 8
  %70 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %69, i64 0, i32 0
  %71 = call %"class.WTF::StringImpl"* @_ZNK3WTF7HashMapIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_6StringENS_10MemberHashIS4_EENS_10HashTraitsIS5_EENS9_IS6_EENS1_13HeapAllocatorEE2atERKPS4_(%"class.WTF::HashMap.401"* %70, %"class.blink::CachedStorageArea::Source"** nonnull dereferenceable(8) %4)
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %67, align 8
  %72 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #16
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %73, align 8
  %74 = call fastcc %"class.WTF::StringImpl"* @_ZN5blink12_GLOBAL__N_110PackSourceERKNS_4KURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull dereferenceable(112) %7, %"class.WTF::String"* nonnull dereferenceable(8) %8)
  store %"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 6
  %76 = load i8, i8* %75, align 8, !range !4
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %120

78:                                               ; preds = %59
  %79 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 12, i32 0, i32 1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.391", %"class.std::__1::unique_ptr.391"* %79, i64 0, i32 0, i32 0, i32 0
  %81 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %80, align 8
  %82 = icmp eq %"class.blink::mojom::blink::StorageAreaProxy"* %81, null
  br i1 %82, label %83, label %105

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 12
  %85 = bitcast %"class.mojo::Remote"* %84 to %"class.mojo::internal::InterfacePtrStateBase"*
  %86 = call i8* @_Znwm(i64 8) #17
  %87 = bitcast i8* %86 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink28StorageAreaResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %87, align 8
  %88 = bitcast i8* %86 to %"class.mojo::MessageReceiver"*
  %89 = call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %85, i1 zeroext false, i1 zeroext true, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %88, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink11StorageArea5Name_E, i64 0, i64 0)) #16
  br i1 %89, label %90, label %105

90:                                               ; preds = %83
  %91 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 12, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %92 = bitcast %"class.mojo::InterfaceEndpointClient"** %91 to %"class.mojo::MessageReceiverWithResponder"**
  %93 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %92, align 8
  %94 = call i8* @_Znwm(i64 16) #17
  %95 = bitcast i8* %94 to %"class.blink::mojom::blink::StorageAreaProxy"*
  call void @_ZN5blink5mojom5blink16StorageAreaProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::StorageAreaProxy"* nonnull %95, %"class.mojo::MessageReceiverWithResponder"* %93) #16
  %96 = ptrtoint i8* %94 to i64
  %97 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %80, align 8
  %98 = bitcast %"class.std::__1::unique_ptr.391"* %79 to i64*
  store i64 %96, i64* %98, align 8
  %99 = icmp eq %"class.blink::mojom::blink::StorageAreaProxy"* %97, null
  br i1 %99, label %105, label %100

100:                                              ; preds = %90
  %101 = bitcast %"class.blink::mojom::blink::StorageAreaProxy"* %97 to void (%"class.blink::mojom::blink::StorageAreaProxy"*)***
  %102 = load void (%"class.blink::mojom::blink::StorageAreaProxy"*)**, void (%"class.blink::mojom::blink::StorageAreaProxy"*)*** %101, align 8
  %103 = getelementptr inbounds void (%"class.blink::mojom::blink::StorageAreaProxy"*)*, void (%"class.blink::mojom::blink::StorageAreaProxy"*)** %102, i64 1
  %104 = load void (%"class.blink::mojom::blink::StorageAreaProxy"*)*, void (%"class.blink::mojom::blink::StorageAreaProxy"*)** %103, align 8
  call void %104(%"class.blink::mojom::blink::StorageAreaProxy"* nonnull %97) #16
  br label %105

105:                                              ; preds = %78, %83, %90, %100
  %106 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %80, align 8
  %107 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %10, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %107, %"struct.mojo::internal::PendingRemoteState"* nonnull dereferenceable(8) %21) #16
  %108 = load %"class.blink::CachedStorageArea::Source"*, %"class.blink::CachedStorageArea::Source"** %4, align 8
  %109 = bitcast %"class.blink::WebScopedVirtualTimePauser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %109) #16, !noalias !29
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %109, i8 -86, i64 40, i1 false) #16, !noalias !29
  %110 = bitcast %"class.blink::CachedStorageArea::Source"* %108 to void (%"class.blink::WebScopedVirtualTimePauser"*, %"class.blink::CachedStorageArea::Source"*, i8*, i32)***
  %111 = load void (%"class.blink::WebScopedVirtualTimePauser"*, %"class.blink::CachedStorageArea::Source"*, i8*, i32)**, void (%"class.blink::WebScopedVirtualTimePauser"*, %"class.blink::CachedStorageArea::Source"*, i8*, i32)*** %110, align 8, !noalias !29
  %112 = getelementptr inbounds void (%"class.blink::WebScopedVirtualTimePauser"*, %"class.blink::CachedStorageArea::Source"*, i8*, i32)*, void (%"class.blink::WebScopedVirtualTimePauser"*, %"class.blink::CachedStorageArea::Source"*, i8*, i32)** %111, i64 5
  %113 = load void (%"class.blink::WebScopedVirtualTimePauser"*, %"class.blink::CachedStorageArea::Source"*, i8*, i32)*, void (%"class.blink::WebScopedVirtualTimePauser"*, %"class.blink::CachedStorageArea::Source"*, i8*, i32)** %112, align 8, !noalias !29
  call void %113(%"class.blink::WebScopedVirtualTimePauser"* nonnull sret %3, %"class.blink::CachedStorageArea::Source"* %108, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.17, i64 0, i64 0), i32 1) #16, !noalias !29
  call void @_ZN5blink26WebScopedVirtualTimePauser16PauseVirtualTimeEv(%"class.blink::WebScopedVirtualTimePauser"* nonnull %3) #16, !noalias !29
  %114 = call i8* @_Znwm(i64 80) #17, !noalias !32
  %115 = bitcast i8* %114 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %115, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS3_17CachedStorageArea6SourceEE3$_0JNS3_26WebScopedVirtualTimePauserEEEEFvbEE7RunOnceEPNS0_13BindStateBaseEb" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS2_17CachedStorageArea6SourceEE3$_0JNS2_26WebScopedVirtualTimePauserEEE7DestroyEPKNS0_13BindStateBaseE") #16, !noalias !32
  %116 = getelementptr inbounds i8, i8* %114, i64 40
  %117 = bitcast i8* %116 to %"class.blink::WebScopedVirtualTimePauser"*
  call void @_ZN5blink26WebScopedVirtualTimePauserC1EOS0_(%"class.blink::WebScopedVirtualTimePauser"* %117, %"class.blink::WebScopedVirtualTimePauser"* nonnull dereferenceable(40) %3) #16, !noalias !32
  %118 = bitcast %"class.base::OnceCallback.550"* %11 to i8**
  store i8* %114, i8** %118, align 8, !alias.scope !32
  call void @_ZN5blink26WebScopedVirtualTimePauserD1Ev(%"class.blink::WebScopedVirtualTimePauser"* nonnull %3) #16, !noalias !29
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %109) #16, !noalias !29
  call void @_ZN5blink5mojom5blink16StorageAreaProxy9DeleteAllERKN3WTF6StringEN4mojo13PendingRemoteINS1_19StorageAreaObserverEEEN4base12OnceCallbackIFvbEEE(%"class.blink::mojom::blink::StorageAreaProxy"* %106, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.mojo::PendingRemote"* nonnull %10, %"class.base::OnceCallback.550"* nonnull %11) #16
  %119 = getelementptr inbounds %"class.base::OnceCallback.550", %"class.base::OnceCallback.550"* %11, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %119) #16
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %107) #16
  br label %120

120:                                              ; preds = %59, %105
  %121 = load i32, i32* %22, align 8
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %145, label %123

123:                                              ; preds = %120
  %124 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #16
  %125 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %125, align 8
  %126 = bitcast %"class.WTF::String"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #16
  %127 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %127, align 8
  %128 = bitcast %"class.WTF::String"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #16
  %129 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %129, align 8
  call void @_ZN5blink17CachedStorageArea22EnqueuePendingMutationERKN3WTF6StringES4_S4_S4_(%"class.blink::CachedStorageArea"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.WTF::String"* nonnull dereferenceable(8) %13, %"class.WTF::String"* nonnull dereferenceable(8) %14, %"class.WTF::String"* nonnull dereferenceable(8) %9)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #16
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %201, label %132

132:                                              ; preds = %123
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  br i1 %136, label %139, label %141

139:                                              ; preds = %132
  %140 = add i32 %138, -1
  store i32 %140, i32* %137, align 4
  br label %141

141:                                              ; preds = %139, %132
  %142 = phi i32 [ %140, %139 ], [ %138, %132 ]
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %201

144:                                              ; preds = %141
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #16
  br label %201

145:                                              ; preds = %120
  br i1 %41, label %203, label %146

146:                                              ; preds = %145
  %147 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #16
  %148 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %148, align 8
  %149 = bitcast %"class.WTF::String"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %149) #16
  %150 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %150, align 8
  %151 = bitcast %"class.WTF::String"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #16
  %152 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %152, align 8
  %153 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %7, i64 0, i32 4
  call void @_ZN5blink17CachedStorageArea19EnqueueStorageEventERKN3WTF6StringES4_S4_S4_S4_(%"class.blink::CachedStorageArea"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %15, %"class.WTF::String"* nonnull dereferenceable(8) %16, %"class.WTF::String"* nonnull dereferenceable(8) %17, %"class.WTF::String"* dereferenceable(8) %153, %"class.WTF::String"* nonnull dereferenceable(8) %8)
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %169, label %156

156:                                              ; preds = %146
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %162 = load i32, i32* %161, align 4
  br i1 %160, label %163, label %165

163:                                              ; preds = %156
  %164 = add i32 %162, -1
  store i32 %164, i32* %161, align 4
  br label %165

165:                                              ; preds = %163, %156
  %166 = phi i32 [ %164, %163 ], [ %162, %156 ]
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %168, label %169

168:                                              ; preds = %165
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %154) #16
  br label %169

169:                                              ; preds = %146, %165, %168
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #16
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %150, align 8
  %171 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %171, label %185, label %172

172:                                              ; preds = %169
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 0
  %178 = load i32, i32* %177, align 4
  br i1 %176, label %179, label %181

179:                                              ; preds = %172
  %180 = add i32 %178, -1
  store i32 %180, i32* %177, align 4
  br label %181

181:                                              ; preds = %179, %172
  %182 = phi i32 [ %180, %179 ], [ %178, %172 ]
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %185

184:                                              ; preds = %181
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %170) #16
  br label %185

185:                                              ; preds = %169, %181, %184
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %149) #16
  %186 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  %187 = icmp eq %"class.WTF::StringImpl"* %186, null
  br i1 %187, label %201, label %188

188:                                              ; preds = %185
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = and i32 %190, 2
  %192 = icmp eq i32 %191, 0
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %186, i64 0, i32 0
  %194 = load i32, i32* %193, align 4
  br i1 %192, label %195, label %197

195:                                              ; preds = %188
  %196 = add i32 %194, -1
  store i32 %196, i32* %193, align 4
  br label %197

197:                                              ; preds = %195, %188
  %198 = phi i32 [ %196, %195 ], [ %194, %188 ]
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %201

200:                                              ; preds = %197
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %186) #16
  br label %201

201:                                              ; preds = %200, %197, %185, %144, %141, %123
  %202 = phi i8* [ %124, %123 ], [ %124, %141 ], [ %124, %144 ], [ %147, %185 ], [ %147, %197 ], [ %147, %200 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #16
  br label %203

203:                                              ; preds = %201, %145
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %203
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  br i1 %210, label %213, label %215

213:                                              ; preds = %206
  %214 = add i32 %212, -1
  store i32 %214, i32* %211, align 4
  br label %215

215:                                              ; preds = %213, %206
  %216 = phi i32 [ %214, %213 ], [ %212, %206 ]
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %215
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %204) #16
  br label %219

219:                                              ; preds = %203, %215, %218
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #16
  %220 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %220, label %234, label %221

221:                                              ; preds = %219
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = and i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %227 = load i32, i32* %226, align 4
  br i1 %225, label %228, label %230

228:                                              ; preds = %221
  %229 = add i32 %227, -1
  store i32 %229, i32* %226, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = phi i32 [ %229, %228 ], [ %227, %221 ]
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %234

233:                                              ; preds = %230
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #16
  br label %234

234:                                              ; preds = %219, %230, %233
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66) #16
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %60) #16
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %21) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  ret void
}

declare void @_ZN5blink5mojom5blink16StorageAreaProxy9DeleteAllERKN3WTF6StringEN4mojo13PendingRemoteINS1_19StorageAreaObserverEEEN4base12OnceCallbackIFvbEEE(%"class.blink::mojom::blink::StorageAreaProxy"*, %"class.WTF::String"* dereferenceable(8), %"class.mojo::PendingRemote"*, %"class.base::OnceCallback.550"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink17CachedStorageArea14RegisterSourceEPNS0_6SourceE(%"class.blink::CachedStorageArea"* nocapture readonly, %"class.blink::CachedStorageArea::Source"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::IntegerToStringConverter", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::CachedStorageArea::Source"*, align 8
  store %"class.blink::CachedStorageArea::Source"* %1, %"class.blink::CachedStorageArea::Source"** %5, align 8
  %6 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %6, align 8
  %7 = tail call i64 @_ZN4base10RandUint64Ev() #16
  %8 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 40, i1 false) #16
  %9 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 24
  %10 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 23
  store i8* %11, i8** %10, align 8
  %12 = urem i64 %7, 10
  %13 = udiv i64 %7, 10
  %14 = trunc i64 %12 to i8
  %15 = or i8 %14, 48
  store i8 %15, i8* %11, align 1
  %16 = icmp ugt i64 %7, 9
  br i1 %16, label %17, label %32

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 22
  store i8* %18, i8** %10, align 8
  %19 = urem i64 %13, 10
  %20 = trunc i64 %19 to i8
  %21 = or i8 %20, 48
  store i8 %21, i8* %18, align 2
  %22 = icmp ugt i64 %7, 99
  br i1 %22, label %23, label %30

23:                                               ; preds = %17
  %24 = udiv i64 %7, 100
  %25 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 0, i64 21
  store i8* %25, i8** %10, align 8
  %26 = urem i64 %24, 10
  %27 = trunc i64 %26 to i8
  %28 = or i8 %27, 48
  store i8 %28, i8* %25, align 1
  %29 = icmp ugt i64 %7, 999
  br i1 %29, label %34, label %43

30:                                               ; preds = %17
  %31 = ptrtoint i8* %18 to i64
  br label %46

32:                                               ; preds = %2
  %33 = ptrtoint i8* %11 to i64
  br label %46

34:                                               ; preds = %23, %34
  %35 = phi i64 [ %37, %34 ], [ %24, %23 ]
  %36 = load i8*, i8** %10, align 8
  %37 = udiv i64 %35, 10
  %38 = getelementptr inbounds i8, i8* %36, i64 -1
  store i8* %38, i8** %10, align 8
  %39 = urem i64 %37, 10
  %40 = trunc i64 %39 to i8
  %41 = or i8 %40, 48
  store i8 %41, i8* %38, align 1
  %42 = icmp ugt i64 %35, 99
  br i1 %42, label %34, label %43

43:                                               ; preds = %34, %23
  %44 = bitcast i8** %10 to i64*
  %45 = load i64, i64* %44, align 8
  br label %46

46:                                               ; preds = %43, %30, %32
  %47 = phi i64 [ %33, %32 ], [ %45, %43 ], [ %31, %30 ]
  %48 = ptrtoint i8* %9 to i64
  %49 = sub i64 %48, %47
  %50 = trunc i64 %49 to i32
  %51 = getelementptr inbounds %"class.WTF::IntegerToStringConverter", %"class.WTF::IntegerToStringConverter"* %3, i64 0, i32 2
  store i32 %50, i32* %51, align 8
  %52 = inttoptr i64 %47 to i8*
  %53 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8* %52, i32 %50) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #16
  store %"class.WTF::StringImpl"* %53, %"class.WTF::StringImpl"** %6, align 8
  %54 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 14, i32 0, i32 0
  %55 = load %"class.blink::HeapHashMap"*, %"class.blink::HeapHashMap"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %55, i64 0, i32 0, i32 0
  %57 = call { %"struct.WTF::KeyValuePair.404"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERPS4_RS7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.402"* %56, %"class.blink::CachedStorageArea::Source"** nonnull dereferenceable(8) %5, %"class.WTF::String"* nonnull dereferenceable(8) %4) #16
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %6, align 8
  ret %"class.WTF::StringImpl"* %58
}

declare i64 @_ZN4base10RandUint64Ev() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CachedStorageAreaC2ENS0_8AreaTypeE13scoped_refptrIKNS_14SecurityOriginEES2_IN4base22SingleThreadTaskRunnerEEPNS_16StorageNamespaceEb(%"class.blink::CachedStorageArea"*, i32, %"class.blink::SecurityOrigin"*, %"class.base::SingleThreadTaskRunner"*, %"class.blink::StorageNamespace"*, i1 zeroext) unnamed_addr #0 align 2 {
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"class.mojo::PendingRemote.551"*
  %9 = ptrtoint %"class.blink::SecurityOrigin"* %2 to i64
  %10 = ptrtoint %"class.base::SingleThreadTaskRunner"* %3 to i64
  %11 = zext i1 %5 to i8
  %12 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  store i32 1, i32* %13, align 4
  %14 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.base::trace_event::MemoryDumpProvider", %"class.base::trace_event::MemoryDumpProvider"* %14, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [5 x i8*] }, { [10 x i8*], [5 x i8*] }* @_ZTVN5blink17CachedStorageAreaE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [5 x i8*] }, { [10 x i8*], [5 x i8*] }* @_ZTVN5blink17CachedStorageAreaE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 3
  store i32 %1, i32* %16, align 8
  %17 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 4
  %18 = bitcast %class.scoped_refptr* %17 to i64*
  store i64 %9, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 5
  %20 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %19, i64 0, i32 0
  %21 = getelementptr inbounds %"class.blink::WeakPersistent", %"class.blink::WeakPersistent"* %19, i64 0, i32 0, i32 0
  store %"class.blink::StorageNamespace"* %4, %"class.blink::StorageNamespace"** %21, align 8
  %22 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %22, align 8
  %23 = ptrtoint %"class.blink::StorageNamespace"* %4 to i64
  switch i64 %23, label %24 [
    i64 0, label %50
    i64 -1, label %50
  ]

24:                                               ; preds = %6
  %25 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %26 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %25, i64 0, i32 1
  %27 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %26) #16
  %28 = icmp eq i8* %27, null
  br i1 %28, label %29, label %31, !prof !3

29:                                               ; preds = %24
  %30 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %26, i8* %30) #16
  br label %31

31:                                               ; preds = %29, %24
  %32 = phi i8* [ %30, %29 ], [ %27, %24 ]
  %33 = bitcast i8* %32 to %"class.blink::ThreadState"**
  %34 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %34, i64 0, i32 4, i32 0, i32 0, i32 0
  %36 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %36, i64 0, i32 0, i32 0
  %38 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %37, align 8
  %39 = icmp eq %"class.blink::PersistentNode"* %38, null
  br i1 %39, label %40, label %43, !prof !3

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %36, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %41) #16
  %42 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %37, align 8
  br label %43

43:                                               ; preds = %40, %31
  %44 = phi %"class.blink::PersistentNode"* [ %42, %40 ], [ %38, %31 ]
  %45 = bitcast %"class.blink::PersistentNode"* %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentRegion"* %36 to i64*
  store i64 %46, i64* %47, align 8
  %48 = bitcast %"class.blink::PersistentNode"* %44 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %20, %"class.blink::PersistentBase"** %48, align 8
  %49 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %44, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_16StorageNamespaceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %49, align 8
  store %"class.blink::PersistentNode"* %44, %"class.blink::PersistentNode"** %22, align 8
  br label %50

50:                                               ; preds = %6, %6, %43
  %51 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 6
  store i8 %11, i8* %51, align 8
  %52 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 7
  %53 = bitcast %class.scoped_refptr.181* %52 to i64*
  store i64 %10, i64* %53, align 8
  %54 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 8
  %55 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 10
  %56 = bitcast %"class.WTF::HashMap.214"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 20, i1 false) #16
  %57 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 11
  %58 = bitcast %"class.std::__1::unique_ptr.187"* %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 28, i1 false)
  store i8 1, i8* %57, align 8
  %59 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 12
  %60 = bitcast %"class.mojo::Remote"* %59 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %60) #16
  %61 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 12, i32 0, i32 1
  %62 = bitcast %"class.std::__1::unique_ptr.391"* %61 to i64*
  store i64 0, i64* %62, align 8
  %63 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 13, i32 0, i32 0
  tail call void @_ZN4mojo8internal16BindingStateBaseC2Ev(%"class.mojo::internal::BindingStateBase"* %63) #16
  %64 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 13, i32 0, i32 1, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [7 x i8*] }, { [7 x i8*] }* @_ZTVN5blink5mojom5blink23StorageAreaObserverStubIN4mojo19RawPtrImplRefTraitsINS1_19StorageAreaObserverEEEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %64, align 8
  %65 = ptrtoint %"class.blink::CachedStorageArea"* %0 to i64
  %66 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 13, i32 0, i32 1, i32 1
  %67 = bitcast %"class.blink::mojom::blink::StorageAreaObserver"** %66 to i64*
  store i64 %65, i64* %67, align 8
  %68 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 14
  %69 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapINS_10WeakMemberINS_17CachedStorageArea6SourceEEEN3WTF6StringENS7_10MemberHashIS5_EENS7_10HashTraitsIS6_EENSB_IS8_EEEEEEPhm(i64 24) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 20, i1 false) #16
  %70 = getelementptr inbounds i8, i8* %69, i64 -4
  %71 = bitcast i8* %70 to i16*
  %72 = load atomic i16, i16* %71 monotonic, align 2
  %73 = or i16 %72, 1
  store atomic i16 %73, i16* %71 release, align 2
  %74 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %68, i64 0, i32 0
  %75 = bitcast %"class.blink::Persistent"* %68 to i8**
  store i8* %69, i8** %75, align 8
  %76 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 14, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %76, align 8
  %77 = ptrtoint i8* %69 to i64
  switch i64 %77, label %78 [
    i64 0, label %104
    i64 -1, label %104
  ]

78:                                               ; preds = %50
  %79 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %80 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %79, i64 0, i32 1
  %81 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %80) #16
  %82 = icmp eq i8* %81, null
  br i1 %82, label %83, label %85, !prof !3

83:                                               ; preds = %78
  %84 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %80, i8* %84) #16
  br label %85

85:                                               ; preds = %83, %78
  %86 = phi i8* [ %84, %83 ], [ %81, %78 ]
  %87 = bitcast i8* %86 to %"class.blink::ThreadState"**
  %88 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %88, i64 0, i32 3, i32 0, i32 0, i32 0
  %90 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %89, align 8
  %91 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %90, i64 0, i32 0, i32 0
  %92 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %91, align 8
  %93 = icmp eq %"class.blink::PersistentNode"* %92, null
  br i1 %93, label %94, label %97, !prof !3

94:                                               ; preds = %85
  %95 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %90, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %95) #16
  %96 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %91, align 8
  br label %97

97:                                               ; preds = %94, %85
  %98 = phi %"class.blink::PersistentNode"* [ %96, %94 ], [ %92, %85 ]
  %99 = bitcast %"class.blink::PersistentNode"* %98 to i64*
  %100 = load i64, i64* %99, align 8
  %101 = bitcast %"class.blink::PersistentRegion"* %90 to i64*
  store i64 %100, i64* %101, align 8
  %102 = bitcast %"class.blink::PersistentNode"* %98 to %"class.blink::PersistentBase.398"**
  store %"class.blink::PersistentBase.398"* %74, %"class.blink::PersistentBase.398"** %102, align 8
  %103 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %98, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11HeapHashMapINS_10WeakMemberINS_17CachedStorageArea6SourceEEEN3WTF6StringENS7_10MemberHashIS5_EENS7_10HashTraitsIS6_EENSB_IS8_EEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSH_15TracePersistentEPNS_7VisitorEEEE10TrampolineESJ_PKv, void (%"class.blink::Visitor"*, i8*)** %103, align 8
  store %"class.blink::PersistentNode"* %98, %"class.blink::PersistentNode"** %76, align 8
  br label %104

104:                                              ; preds = %50, %50, %97
  store i64 0, i64* %7, align 8
  %105 = bitcast i64* %7 to %"struct.mojo::internal::PendingRemoteState"*
  call void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %105) #16
  call void @_ZN5blink17CachedStorageArea15BindStorageAreaEN4mojo13PendingRemoteINS_5mojom5blink11StorageAreaEEE(%"class.blink::CachedStorageArea"* %0, %"class.mojo::PendingRemote.551"* nonnull %8)
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %105) #16
  %106 = call %"class.base::trace_event::MemoryDumpManager"* @_ZN4base11trace_event17MemoryDumpManager11GetInstanceEv() #16
  %107 = call %"class.blink::ThreadScheduler"* @_ZN5blink15ThreadScheduler7CurrentEv() #16
  %108 = bitcast %"class.blink::ThreadScheduler"* %107 to %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)***
  %109 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)**, %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)*** %108, align 8
  %110 = getelementptr inbounds %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)** %109, i64 13
  %111 = load %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)*, %"class.base::SingleThreadTaskRunner"* (%"class.blink::ThreadScheduler"*)** %110, align 8
  %112 = call %"class.base::SingleThreadTaskRunner"* %111(%"class.blink::ThreadScheduler"* %107) #16
  call void @_ZN4base11trace_event17MemoryDumpManager20RegisterDumpProviderEPNS0_18MemoryDumpProviderEPKc13scoped_refptrINS_22SingleThreadTaskRunnerEE(%"class.base::trace_event::MemoryDumpManager"* %106, %"class.base::trace_event::MemoryDumpProvider"* %14, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), %"class.base::SingleThreadTaskRunner"* %112) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CachedStorageArea15BindStorageAreaEN4mojo13PendingRemoteINS_5mojom5blink11StorageAreaEEE(%"class.blink::CachedStorageArea"*, %"class.mojo::PendingRemote.551"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::PendingRemote.551", align 4
  %4 = alloca %"class.mojo::PendingReceiver", align 8
  %5 = alloca %"class.mojo::PendingRemote", align 4
  %6 = getelementptr inbounds %"class.mojo::PendingRemote.551", %"class.mojo::PendingRemote.551"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 12
  %11 = getelementptr inbounds %"class.mojo::PendingRemote.551", %"class.mojo::PendingRemote.551"* %3, i64 0, i32 0
  %12 = getelementptr inbounds %"class.mojo::PendingRemote.551", %"class.mojo::PendingRemote.551"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %11, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %12) #16
  %13 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 7
  %14 = bitcast %class.scoped_refptr.181* %13 to %"class.base::SequencedTaskRunner"**
  %15 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %14, align 8
  %16 = icmp eq %"class.base::SequencedTaskRunner"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %15, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 1 monotonic
  br label %20

20:                                               ; preds = %9, %17
  call void @_ZN4mojo6RemoteIN5blink5mojom5blink11StorageAreaEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"* %10, %"class.mojo::PendingRemote.551"* nonnull %3, %"class.base::SequencedTaskRunner"* %15)
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %11) #16
  br label %37

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 5, i32 0, i32 0
  %23 = load %"class.blink::StorageNamespace"*, %"class.blink::StorageNamespace"** %22, align 8
  %24 = icmp eq %"class.blink::StorageNamespace"* %23, null
  br i1 %24, label %77, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 4
  %27 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 12
  %28 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 7
  %29 = bitcast %class.scoped_refptr.181* %28 to %"class.base::SequencedTaskRunner"**
  %30 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %29, align 8
  %31 = icmp eq %"class.base::SequencedTaskRunner"* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %30, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = atomicrmw add i32* %33, i32 1 monotonic
  br label %35

35:                                               ; preds = %25, %32
  call void @_ZN4mojo6RemoteIN5blink5mojom5blink11StorageAreaEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingReceiver"* nonnull sret %4, %"class.mojo::Remote"* %27, %"class.base::SequencedTaskRunner"* %30)
  call void @_ZN5blink16StorageNamespace15BindStorageAreaERK13scoped_refptrIKNS_14SecurityOriginEEN4mojo15PendingReceiverINS_5mojom5blink11StorageAreaEEE(%"class.blink::StorageNamespace"* nonnull %23, %class.scoped_refptr* dereferenceable(8) %26, %"class.mojo::PendingReceiver"* nonnull %4) #16
  %36 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %4, i64 0, i32 0
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %36) #16
  br label %37

37:                                               ; preds = %35, %20
  %38 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 13
  %39 = getelementptr inbounds %"class.mojo::Receiver", %"class.mojo::Receiver"* %38, i64 0, i32 0, i32 0
  call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %39) #16
  %40 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 12, i32 0, i32 1
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.391", %"class.std::__1::unique_ptr.391"* %40, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %41, align 8
  %43 = icmp eq %"class.blink::mojom::blink::StorageAreaProxy"* %42, null
  br i1 %43, label %44, label %66

44:                                               ; preds = %37
  %45 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 12
  %46 = bitcast %"class.mojo::Remote"* %45 to %"class.mojo::internal::InterfacePtrStateBase"*
  %47 = call i8* @_Znwm(i64 8) #17
  %48 = bitcast i8* %47 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink28StorageAreaResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %49 = bitcast i8* %47 to %"class.mojo::MessageReceiver"*
  %50 = call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %46, i1 zeroext false, i1 zeroext true, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %49, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink11StorageArea5Name_E, i64 0, i64 0)) #16
  br i1 %50, label %51, label %66

51:                                               ; preds = %44
  %52 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 12, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %53 = bitcast %"class.mojo::InterfaceEndpointClient"** %52 to %"class.mojo::MessageReceiverWithResponder"**
  %54 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %53, align 8
  %55 = call i8* @_Znwm(i64 16) #17
  %56 = bitcast i8* %55 to %"class.blink::mojom::blink::StorageAreaProxy"*
  call void @_ZN5blink5mojom5blink16StorageAreaProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::StorageAreaProxy"* nonnull %56, %"class.mojo::MessageReceiverWithResponder"* %54) #16
  %57 = ptrtoint i8* %55 to i64
  %58 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %41, align 8
  %59 = bitcast %"class.std::__1::unique_ptr.391"* %40 to i64*
  store i64 %57, i64* %59, align 8
  %60 = icmp eq %"class.blink::mojom::blink::StorageAreaProxy"* %58, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %51
  %62 = bitcast %"class.blink::mojom::blink::StorageAreaProxy"* %58 to void (%"class.blink::mojom::blink::StorageAreaProxy"*)***
  %63 = load void (%"class.blink::mojom::blink::StorageAreaProxy"*)**, void (%"class.blink::mojom::blink::StorageAreaProxy"*)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.blink::mojom::blink::StorageAreaProxy"*)*, void (%"class.blink::mojom::blink::StorageAreaProxy"*)** %63, i64 1
  %65 = load void (%"class.blink::mojom::blink::StorageAreaProxy"*)*, void (%"class.blink::mojom::blink::StorageAreaProxy"*)** %64, align 8
  call void %65(%"class.blink::mojom::blink::StorageAreaProxy"* nonnull %58) #16
  br label %66

66:                                               ; preds = %37, %44, %51, %61
  %67 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %41, align 8
  %68 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 7
  %69 = bitcast %class.scoped_refptr.181* %68 to %"class.base::SequencedTaskRunner"**
  %70 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %69, align 8
  %71 = icmp eq %"class.base::SequencedTaskRunner"* %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %70, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw add i32* %73, i32 1 monotonic
  br label %75

75:                                               ; preds = %66, %72
  call void @_ZN4mojo8ReceiverIN5blink5mojom5blink19StorageAreaObserverENS_19RawPtrImplRefTraitsIS4_EEE24BindNewPipeAndPassRemoteE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingRemote"* nonnull sret %5, %"class.mojo::Receiver"* %38, %"class.base::SequencedTaskRunner"* %70)
  call void @_ZN5blink5mojom5blink16StorageAreaProxy11AddObserverEN4mojo13PendingRemoteINS1_19StorageAreaObserverEEE(%"class.blink::mojom::blink::StorageAreaProxy"* %67, %"class.mojo::PendingRemote"* nonnull %5) #16
  %76 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %5, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %76) #16
  br label %77

77:                                               ; preds = %21, %75
  ret void
}

declare %"class.base::trace_event::MemoryDumpManager"* @_ZN4base11trace_event17MemoryDumpManager11GetInstanceEv() local_unnamed_addr #1

declare void @_ZN4base11trace_event17MemoryDumpManager20RegisterDumpProviderEPNS0_18MemoryDumpProviderEPKc13scoped_refptrINS_22SingleThreadTaskRunnerEE(%"class.base::trace_event::MemoryDumpManager"*, %"class.base::trace_event::MemoryDumpProvider"*, i8*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #1

declare %"class.blink::ThreadScheduler"* @_ZN5blink15ThreadScheduler7CurrentEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CachedStorageAreaD2Ev(%"class.blink::CachedStorageArea"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [5 x i8*] }, { [10 x i8*], [5 x i8*] }* @_ZTVN5blink17CachedStorageAreaE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::trace_event::MemoryDumpProvider", %"class.base::trace_event::MemoryDumpProvider"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*], [5 x i8*] }, { [10 x i8*], [5 x i8*] }* @_ZTVN5blink17CachedStorageAreaE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = tail call %"class.base::trace_event::MemoryDumpManager"* @_ZN4base11trace_event17MemoryDumpManager11GetInstanceEv() #16
  tail call void @_ZN4base11trace_event17MemoryDumpManager22UnregisterDumpProviderEPNS0_18MemoryDumpProviderE(%"class.base::trace_event::MemoryDumpManager"* %5, %"class.base::trace_event::MemoryDumpProvider"* %3) #16
  %6 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 14, i32 0, i32 1, i32 0
  %7 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %8 = icmp eq %"class.blink::PersistentNode"* %7, null
  br i1 %8, label %28, label %9

9:                                                ; preds = %1
  %10 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %11 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %10, i64 0, i32 1
  %12 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %11) #16
  %13 = icmp eq i8* %12, null
  br i1 %13, label %14, label %16, !prof !3

14:                                               ; preds = %9
  %15 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %11, i8* %15) #16
  br label %16

16:                                               ; preds = %14, %9
  %17 = phi i8* [ %15, %14 ], [ %12, %9 ]
  %18 = bitcast i8* %17 to %"class.blink::ThreadState"**
  %19 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %19, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %20, align 8
  %22 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %6, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %21, i64 0, i32 0, i32 0
  %24 = bitcast %"class.blink::PersistentRegion"* %21 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.blink::PersistentNode"* %22 to i64*
  store i64 %25, i64* %26, align 8
  %27 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %22, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %27, align 8
  store %"class.blink::PersistentNode"* %22, %"class.blink::PersistentNode"** %23, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %6, align 8
  br label %28

28:                                               ; preds = %1, %16
  %29 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 13, i32 0, i32 0
  tail call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %29) #16
  tail call void @_ZN4mojo8internal16BindingStateBaseD2Ev(%"class.mojo::internal::BindingStateBase"* %29) #16
  %30 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 12
  %31 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 12, i32 0, i32 1, i32 0, i32 0, i32 0
  %32 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %31, align 8
  store %"class.blink::mojom::blink::StorageAreaProxy"* null, %"class.blink::mojom::blink::StorageAreaProxy"** %31, align 8
  %33 = icmp eq %"class.blink::mojom::blink::StorageAreaProxy"* %32, null
  br i1 %33, label %39, label %34

34:                                               ; preds = %28
  %35 = bitcast %"class.blink::mojom::blink::StorageAreaProxy"* %32 to void (%"class.blink::mojom::blink::StorageAreaProxy"*)***
  %36 = load void (%"class.blink::mojom::blink::StorageAreaProxy"*)**, void (%"class.blink::mojom::blink::StorageAreaProxy"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.blink::mojom::blink::StorageAreaProxy"*)*, void (%"class.blink::mojom::blink::StorageAreaProxy"*)** %36, i64 1
  %38 = load void (%"class.blink::mojom::blink::StorageAreaProxy"*)*, void (%"class.blink::mojom::blink::StorageAreaProxy"*)** %37, align 8
  tail call void %38(%"class.blink::mojom::blink::StorageAreaProxy"* nonnull %32) #16
  br label %39

39:                                               ; preds = %28, %34
  %40 = bitcast %"class.mojo::Remote"* %30 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* %40) #16
  %41 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 10
  %42 = bitcast %"class.WTF::HashMap.214"* %41 to %"class.WTF::ConditionalDestructor.216"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSF_ISA_EEEESG_S9_EELb0EED2Ev(%"class.WTF::ConditionalDestructor.216"* %42) #16
  %43 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 9, i32 0, i32 0
  %44 = load %"struct.WTF::KeyValuePair.202"*, %"struct.WTF::KeyValuePair.202"** %43, align 8
  %45 = icmp eq %"struct.WTF::KeyValuePair.202"* %44, null
  br i1 %45, label %82, label %46, !prof !2

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 9, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %80, label %50

50:                                               ; preds = %46
  %51 = zext i32 %48 to i64
  br label %52

52:                                               ; preds = %77, %50
  %53 = phi i64 [ 0, %50 ], [ %78, %77 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %44, i64 %53
  %55 = bitcast %"struct.WTF::KeyValuePair.202"* %54 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %77, label %58

58:                                               ; preds = %52
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %44, i64 %53, i32 1
  %60 = bitcast %"class.WTF::Deque.203"* %59 to %"class.WTF::ConditionalDestructor.204"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.204"* %60) #16
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %54, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #16
  br label %77

77:                                               ; preds = %76, %73, %58, %52
  %78 = add nuw nsw i64 %53, 1
  %79 = icmp eq i64 %78, %51
  br i1 %79, label %80, label %52

80:                                               ; preds = %77, %46
  %81 = bitcast %"struct.WTF::KeyValuePair.202"* %44 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %81) #16
  store %"struct.WTF::KeyValuePair.202"* null, %"struct.WTF::KeyValuePair.202"** %43, align 8
  br label %82

82:                                               ; preds = %39, %80
  %83 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %84 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %83, align 8
  store %"class.blink::StorageAreaMap"* null, %"class.blink::StorageAreaMap"** %83, align 8
  %85 = icmp eq %"class.blink::StorageAreaMap"* %84, null
  br i1 %85, label %95, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.blink::StorageAreaMap", %"class.blink::StorageAreaMap"* %84, i64 0, i32 0, i32 0, i32 0
  %88 = load %"struct.WTF::KeyValuePair.194"*, %"struct.WTF::KeyValuePair.194"** %87, align 8
  %89 = icmp eq %"struct.WTF::KeyValuePair.194"* %88, null
  br i1 %89, label %93, label %90, !prof !2

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.blink::StorageAreaMap", %"class.blink::StorageAreaMap"* %84, i64 0, i32 0, i32 0, i32 1
  %92 = load i32, i32* %91, align 8
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.194"* nonnull %88, i32 %92) #16
  br label %93

93:                                               ; preds = %90, %86
  %94 = bitcast %"class.blink::StorageAreaMap"* %84 to i8*
  tail call void @free(i8* %94) #16
  br label %95

95:                                               ; preds = %82, %93
  %96 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 7, i32 0
  %97 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %96, align 8
  %98 = icmp eq %"class.base::SingleThreadTaskRunner"* %97, null
  br i1 %98, label %107, label %99

99:                                               ; preds = %95
  %100 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %97, i64 0, i32 0, i32 0, i32 1
  %101 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = atomicrmw sub i32* %101, i32 1 acq_rel
  %103 = icmp eq i32 %102, 1
  br i1 %103, label %104, label %107

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %100, i64 -2
  %106 = bitcast %"class.base::RefCountedThreadSafe"* %105 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %106) #16
  br label %107

107:                                              ; preds = %95, %99, %104
  %108 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %109 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %110 = icmp eq %"class.blink::PersistentNode"* %109, null
  br i1 %110, label %130, label %111

111:                                              ; preds = %107
  %112 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %113 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %112, i64 0, i32 1
  %114 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %113) #16
  %115 = icmp eq i8* %114, null
  br i1 %115, label %116, label %118, !prof !3

116:                                              ; preds = %111
  %117 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %113, i8* %117) #16
  br label %118

118:                                              ; preds = %116, %111
  %119 = phi i8* [ %117, %116 ], [ %114, %111 ]
  %120 = bitcast i8* %119 to %"class.blink::ThreadState"**
  %121 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %121, i64 0, i32 4, i32 0, i32 0, i32 0
  %123 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %122, align 8
  %124 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %125 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %123, i64 0, i32 0, i32 0
  %126 = bitcast %"class.blink::PersistentRegion"* %123 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.blink::PersistentNode"* %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %124, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %129, align 8
  store %"class.blink::PersistentNode"* %124, %"class.blink::PersistentNode"** %125, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %108, align 8
  br label %130

130:                                              ; preds = %107, %118
  %131 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 4, i32 0
  %132 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %131, align 8
  %133 = icmp eq %"class.blink::SecurityOrigin"* %132, null
  br i1 %133, label %141, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %132, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %135) #16
  %136 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %132, i64 0, i32 0, i32 0, i32 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %141

139:                                              ; preds = %134
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %132) #16
  %140 = bitcast %"class.blink::SecurityOrigin"* %132 to i8*
  tail call void @free(i8* %140) #16
  br label %141

141:                                              ; preds = %130, %134, %139
  ret void
}

declare void @_ZN4base11trace_event17MemoryDumpManager22UnregisterDumpProviderEPNS0_18MemoryDumpProviderE(%"class.base::trace_event::MemoryDumpManager"*, %"class.base::trace_event::MemoryDumpProvider"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink17CachedStorageAreaD1Ev(%"class.blink::CachedStorageArea"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 -1, i32 14
  %3 = bitcast %"class.blink::Persistent"* %2 to %"class.blink::CachedStorageArea"*
  tail call void @_ZN5blink17CachedStorageAreaD2Ev(%"class.blink::CachedStorageArea"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CachedStorageAreaD0Ev(%"class.blink::CachedStorageArea"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink17CachedStorageAreaD2Ev(%"class.blink::CachedStorageArea"* %0) #16
  %2 = bitcast %"class.blink::CachedStorageArea"* %0 to i8*
  tail call void @free(i8* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn16_N5blink17CachedStorageAreaD0Ev(%"class.blink::CachedStorageArea"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 -1, i32 14
  %3 = bitcast %"class.blink::Persistent"* %2 to %"class.blink::CachedStorageArea"*
  tail call void @_ZN5blink17CachedStorageAreaD2Ev(%"class.blink::CachedStorageArea"* %3) #16
  %4 = bitcast %"class.blink::Persistent"* %2 to i8*
  tail call void @free(i8* %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN5blink5mojom5blink11StorageAreaEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"*, %"class.mojo::PendingRemote.551"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::internal::InterfacePtrState", align 8
  %5 = getelementptr inbounds %"class.mojo::PendingRemote.551", %"class.mojo::PendingRemote.551"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %8, label %25

8:                                                ; preds = %3
  %9 = bitcast %"class.mojo::internal::InterfacePtrState"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %9) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 48, i1 false) #16
  %10 = bitcast %"class.mojo::internal::InterfacePtrState"* %4 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #16
  %11 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %4, i64 0, i32 1
  %12 = bitcast %"class.std::__1::unique_ptr.391"* %11 to i64*
  %13 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::unique_ptr.391"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 0, i64* %14, align 8
  %16 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %16, %"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #16
  %17 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %4, i64 0, i32 1, i32 0, i32 0, i32 0
  %18 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %17, align 8
  store %"class.blink::mojom::blink::StorageAreaProxy"* null, %"class.blink::mojom::blink::StorageAreaProxy"** %17, align 8
  %19 = icmp eq %"class.blink::mojom::blink::StorageAreaProxy"* %18, null
  br i1 %19, label %52, label %20

20:                                               ; preds = %8
  %21 = bitcast %"class.blink::mojom::blink::StorageAreaProxy"* %18 to void (%"class.blink::mojom::blink::StorageAreaProxy"*)***
  %22 = load void (%"class.blink::mojom::blink::StorageAreaProxy"*)**, void (%"class.blink::mojom::blink::StorageAreaProxy"*)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::mojom::blink::StorageAreaProxy"*)*, void (%"class.blink::mojom::blink::StorageAreaProxy"*)** %22, i64 1
  %24 = load void (%"class.blink::mojom::blink::StorageAreaProxy"*)*, void (%"class.blink::mojom::blink::StorageAreaProxy"*)** %23, align 8
  call void %24(%"class.blink::mojom::blink::StorageAreaProxy"* nonnull %18) #16
  br label %52

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.mojo::PendingRemote.551", %"class.mojo::PendingRemote.551"* %1, i64 0, i32 0
  %27 = bitcast %"class.mojo::Remote"* %0 to %"class.mojo::internal::InterfacePtrStateBase"*
  tail call void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"* %27, %"struct.mojo::internal::PendingRemoteState"* %26, %"class.base::SequencedTaskRunner"* %2) #16
  %28 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr.391", %"class.std::__1::unique_ptr.391"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %29, align 8
  %31 = icmp eq %"class.blink::mojom::blink::StorageAreaProxy"* %30, null
  br i1 %31, label %32, label %62

32:                                               ; preds = %25
  %33 = tail call i8* @_Znwm(i64 8) #17
  %34 = bitcast i8* %33 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink28StorageAreaResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %34, align 8
  %35 = bitcast i8* %33 to %"class.mojo::MessageReceiver"*
  %36 = tail call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %27, i1 zeroext false, i1 zeroext true, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %35, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink11StorageArea5Name_E, i64 0, i64 0)) #16
  br i1 %36, label %37, label %62

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.mojo::Remote", %"class.mojo::Remote"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %39 = bitcast %"class.mojo::InterfaceEndpointClient"** %38 to %"class.mojo::MessageReceiverWithResponder"**
  %40 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %39, align 8
  %41 = tail call i8* @_Znwm(i64 16) #17
  %42 = bitcast i8* %41 to %"class.blink::mojom::blink::StorageAreaProxy"*
  tail call void @_ZN5blink5mojom5blink16StorageAreaProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::StorageAreaProxy"* nonnull %42, %"class.mojo::MessageReceiverWithResponder"* %40) #16
  %43 = ptrtoint i8* %41 to i64
  %44 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %29, align 8
  %45 = bitcast %"class.std::__1::unique_ptr.391"* %28 to i64*
  store i64 %43, i64* %45, align 8
  %46 = icmp eq %"class.blink::mojom::blink::StorageAreaProxy"* %44, null
  br i1 %46, label %62, label %47

47:                                               ; preds = %37
  %48 = bitcast %"class.blink::mojom::blink::StorageAreaProxy"* %44 to void (%"class.blink::mojom::blink::StorageAreaProxy"*)***
  %49 = load void (%"class.blink::mojom::blink::StorageAreaProxy"*)**, void (%"class.blink::mojom::blink::StorageAreaProxy"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::mojom::blink::StorageAreaProxy"*)*, void (%"class.blink::mojom::blink::StorageAreaProxy"*)** %49, i64 1
  %51 = load void (%"class.blink::mojom::blink::StorageAreaProxy"*)*, void (%"class.blink::mojom::blink::StorageAreaProxy"*)** %50, align 8
  tail call void %51(%"class.blink::mojom::blink::StorageAreaProxy"* nonnull %44) #16
  br label %62

52:                                               ; preds = %20, %8
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %9) #16
  %53 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %53, label %62, label %54

54:                                               ; preds = %52
  %55 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %56 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %55, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = atomicrmw sub i32* %56, i32 1 acq_rel
  %58 = icmp eq i32 %57, 1
  br i1 %58, label %59, label %62

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %55, i64 -2
  %61 = bitcast %"class.base::RefCountedThreadSafe"* %60 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %61) #16
  br label %62

62:                                               ; preds = %47, %37, %32, %25, %52, %54, %59
  ret void
}

declare void @_ZN5blink16StorageNamespace15BindStorageAreaERK13scoped_refptrIKNS_14SecurityOriginEEN4mojo15PendingReceiverINS_5mojom5blink11StorageAreaEEE(%"class.blink::StorageNamespace"*, %class.scoped_refptr* dereferenceable(8), %"class.mojo::PendingReceiver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo6RemoteIN5blink5mojom5blink11StorageAreaEE26BindNewPipeAndPassReceiverE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingReceiver"* noalias sret, %"class.mojo::Remote"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::ScopedHandleBase", align 4
  %5 = alloca %"class.mojo::ScopedHandleBase", align 4
  %6 = alloca %"class.mojo::MessagePipeHandle", align 4
  %7 = alloca %"class.mojo::MessagePipeHandle", align 4
  %8 = alloca %"class.mojo::PendingRemote.551", align 4
  %9 = bitcast %"class.mojo::MessagePipeHandle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %6, i64 0, i32 0, i32 0
  store i32 0, i32* %10, align 4
  %11 = bitcast %"class.mojo::MessagePipeHandle"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %7, i64 0, i32 0, i32 0
  store i32 0, i32* %12, align 4
  %13 = call i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions* null, i32* nonnull %10, i32* nonnull %12) #16
  %14 = load i32, i32* %10, align 4
  %15 = load i32, i32* %12, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #16
  %16 = bitcast %"class.mojo::ScopedHandleBase"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16)
  %17 = getelementptr inbounds %"class.mojo::PendingRemote.551", %"class.mojo::PendingRemote.551"* %8, i64 0, i32 0
  %18 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %5, i64 0, i32 0, i32 0, i32 0
  store i32 %14, i32* %18, align 4, !alias.scope !39
  call void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"* nonnull %17, %"class.mojo::ScopedHandleBase"* nonnull %5, i32 0) #16
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %23, label %21

21:                                               ; preds = %3
  %22 = call i32 @MojoClose(i32 %19) #16
  br label %23

23:                                               ; preds = %21, %3
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16)
  call void @_ZN4mojo6RemoteIN5blink5mojom5blink11StorageAreaEE4BindENS_13PendingRemoteIS4_EE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::Remote"* %1, %"class.mojo::PendingRemote.551"* nonnull %8, %"class.base::SequencedTaskRunner"* %2)
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %17) #16
  %24 = bitcast %"class.mojo::ScopedHandleBase"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24)
  %25 = getelementptr inbounds %"class.mojo::PendingReceiver", %"class.mojo::PendingReceiver"* %0, i64 0, i32 0
  %26 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 %15, i32* %26, align 4, !alias.scope !42
  call void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"* %25, %"class.mojo::ScopedHandleBase"* nonnull %4) #16
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %31, label %29

29:                                               ; preds = %23
  %30 = call i32 @MojoClose(i32 %27) #16
  br label %31

31:                                               ; preds = %23, %29
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24)
  ret void
}

declare void @_ZN5blink5mojom5blink16StorageAreaProxy11AddObserverEN4mojo13PendingRemoteINS1_19StorageAreaObserverEEE(%"class.blink::mojom::blink::StorageAreaProxy"*, %"class.mojo::PendingRemote"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8ReceiverIN5blink5mojom5blink19StorageAreaObserverENS_19RawPtrImplRefTraitsIS4_EEE24BindNewPipeAndPassRemoteE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::PendingRemote"* noalias sret, %"class.mojo::Receiver"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.mojo::ScopedHandleBase", align 4
  %5 = alloca %"class.mojo::MessagePipeHandle", align 4
  %6 = alloca %"class.mojo::MessagePipeHandle", align 4
  %7 = alloca %"class.mojo::PendingReceiver.773", align 8
  %8 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 -1431655766, i32* %8, align 4
  %9 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %0, i64 0, i32 0, i32 1
  store i32 -1431655766, i32* %9, align 4
  %10 = getelementptr inbounds %"class.mojo::PendingRemote", %"class.mojo::PendingRemote"* %0, i64 0, i32 0
  tail call void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"* %10) #16
  %11 = bitcast %"class.mojo::MessagePipeHandle"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %11) #16, !noalias !45
  %12 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %5, i64 0, i32 0, i32 0
  store i32 0, i32* %12, align 4, !noalias !45
  %13 = bitcast %"class.mojo::MessagePipeHandle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #16, !noalias !45
  %14 = getelementptr inbounds %"class.mojo::MessagePipeHandle", %"class.mojo::MessagePipeHandle"* %6, i64 0, i32 0, i32 0
  store i32 0, i32* %14, align 4, !noalias !45
  %15 = call i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions* null, i32* nonnull %12, i32* nonnull %14) #16, !noalias !45
  %16 = load i32, i32* %12, align 4, !noalias !45
  %17 = load i32, i32* %14, align 4, !noalias !45
  %18 = load i32, i32* %8, align 4, !noalias !45
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #16, !noalias !45
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %11) #16, !noalias !45
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %3
  %21 = call i32 @MojoClose(i32 %18) #16
  br label %22

22:                                               ; preds = %20, %3
  store i32 %16, i32* %8, align 4, !noalias !45
  %23 = bitcast %"class.mojo::ScopedHandleBase"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %23) #16, !noalias !45
  %24 = getelementptr inbounds %"class.mojo::PendingReceiver.773", %"class.mojo::PendingReceiver.773"* %7, i64 0, i32 0
  %25 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %4, i64 0, i32 0, i32 0, i32 0
  store i32 %17, i32* %25, align 4, !alias.scope !48, !noalias !45
  call void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"* nonnull %24, %"class.mojo::ScopedHandleBase"* nonnull %4) #16
  %26 = load i32, i32* %25, align 4, !noalias !45
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %22
  %29 = call i32 @MojoClose(i32 %26) #16
  br label %30

30:                                               ; preds = %22, %28
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %23) #16, !noalias !45
  %31 = getelementptr inbounds %"class.mojo::PendingReceiver.773", %"class.mojo::PendingReceiver.773"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.mojo::Receiver", %"class.mojo::Receiver"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal12BindingStateIN5blink5mojom5blink19StorageAreaObserverENS_19RawPtrImplRefTraitsIS5_EEE4BindEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::BindingState"* %35, %"struct.mojo::internal::PendingReceiverState"* nonnull %24, %"class.base::SequencedTaskRunner"* %2) #16
  br label %47

36:                                               ; preds = %30
  %37 = getelementptr inbounds %"class.mojo::Receiver", %"class.mojo::Receiver"* %1, i64 0, i32 0, i32 0
  call void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"* %37) #16
  %38 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %38, label %47, label %39

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %41 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = atomicrmw sub i32* %41, i32 1 acq_rel
  %43 = icmp eq i32 %42, 1
  br i1 %43, label %44, label %47

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %40, i64 -2
  %46 = bitcast %"class.base::RefCountedThreadSafe"* %45 to %"class.base::TaskRunner"*
  call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %46) #16
  br label %47

47:                                               ; preds = %44, %39, %36, %34
  call void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"* nonnull %24) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CachedStorageArea15ResetConnectionEN4mojo13PendingRemoteINS_5mojom5blink11StorageAreaEEE(%"class.blink::CachedStorageArea"*, %"class.mojo::PendingRemote.551"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.mojo::internal::InterfacePtrState", align 8
  %4 = alloca %"class.mojo::PendingRemote.551", align 4
  %5 = alloca %"class.WTF::HashMap.593", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %struct.ValueDelta, align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %struct.ValueDelta, align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.WTF::Vector.539", align 8
  %13 = alloca %"class.absl::optional.534", align 8
  %14 = alloca %"class.WTF::Vector.539", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.base::OnceCallback.550", align 8
  %17 = alloca %"class.WTF::Vector.539", align 8
  %18 = alloca %"class.WTF::Vector.539", align 8
  %19 = alloca %"class.absl::optional.534", align 8
  %20 = alloca %"class.WTF::Vector.539", align 8
  %21 = alloca %"class.WTF::String", align 8
  %22 = alloca %"class.base::OnceCallback.550", align 8
  %23 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 12
  %24 = bitcast %"class.mojo::internal::InterfacePtrState"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %24) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 48, i1 false) #16
  %25 = bitcast %"class.mojo::internal::InterfacePtrState"* %3 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %25) #16
  %26 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %3, i64 0, i32 1
  %27 = bitcast %"class.std::__1::unique_ptr.391"* %26 to i64*
  %28 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 12, i32 0, i32 1
  %29 = bitcast %"class.std::__1::unique_ptr.391"* %28 to i64*
  %30 = load i64, i64* %29, align 8
  store i64 %30, i64* %27, align 8
  store i64 0, i64* %29, align 8
  %31 = bitcast %"class.mojo::Remote"* %23 to %"class.mojo::internal::InterfacePtrStateBase"*
  call void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"* %31, %"class.mojo::internal::InterfacePtrStateBase"* nonnull %25) #16
  %32 = getelementptr inbounds %"class.mojo::internal::InterfacePtrState", %"class.mojo::internal::InterfacePtrState"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %33 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %32, align 8
  store %"class.blink::mojom::blink::StorageAreaProxy"* null, %"class.blink::mojom::blink::StorageAreaProxy"** %32, align 8
  %34 = icmp eq %"class.blink::mojom::blink::StorageAreaProxy"* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %2
  %36 = bitcast %"class.blink::mojom::blink::StorageAreaProxy"* %33 to void (%"class.blink::mojom::blink::StorageAreaProxy"*)***
  %37 = load void (%"class.blink::mojom::blink::StorageAreaProxy"*)**, void (%"class.blink::mojom::blink::StorageAreaProxy"*)*** %36, align 8
  %38 = getelementptr inbounds void (%"class.blink::mojom::blink::StorageAreaProxy"*)*, void (%"class.blink::mojom::blink::StorageAreaProxy"*)** %37, i64 1
  %39 = load void (%"class.blink::mojom::blink::StorageAreaProxy"*)*, void (%"class.blink::mojom::blink::StorageAreaProxy"*)** %38, align 8
  call void %39(%"class.blink::mojom::blink::StorageAreaProxy"* nonnull %33) #16
  br label %40

40:                                               ; preds = %2, %35
  call void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"* nonnull %25) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %24) #16
  %41 = getelementptr inbounds %"class.mojo::PendingRemote.551", %"class.mojo::PendingRemote.551"* %4, i64 0, i32 0
  %42 = getelementptr inbounds %"class.mojo::PendingRemote.551", %"class.mojo::PendingRemote.551"* %1, i64 0, i32 0
  call void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"* nonnull %41, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8) %42) #16
  call void @_ZN5blink17CachedStorageArea15BindStorageAreaEN4mojo13PendingRemoteINS_5mojom5blink11StorageAreaEEE(%"class.blink::CachedStorageArea"* %0, %"class.mojo::PendingRemote.551"* nonnull %4)
  call void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"* nonnull %41) #16
  %43 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %43, i64 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %44, align 8
  %46 = icmp eq %"class.blink::StorageAreaMap"* %45, null
  %47 = ptrtoint %"class.blink::StorageAreaMap"* %45 to i64
  br i1 %46, label %752, label %48

48:                                               ; preds = %40
  %49 = bitcast %"class.std::__1::unique_ptr.187"* %43 to i64*
  store i64 0, i64* %49, align 8
  %50 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 10
  %51 = getelementptr inbounds %"class.WTF::HashMap.214", %"class.WTF::HashMap.214"* %50, i64 0, i32 0, i32 0
  %52 = load %"struct.WTF::KeyValuePair.218"*, %"struct.WTF::KeyValuePair.218"** %51, align 8
  %53 = icmp eq %"struct.WTF::KeyValuePair.218"* %52, null
  br i1 %53, label %98, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 10, i32 0, i32 1
  %56 = load i32, i32* %55, align 8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %94, label %58

58:                                               ; preds = %54
  %59 = zext i32 %56 to i64
  br label %60

60:                                               ; preds = %91, %58
  %61 = phi i64 [ 0, %58 ], [ %92, %91 ]
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %52, i64 %61
  %63 = bitcast %"struct.WTF::KeyValuePair.218"* %62 to i8**
  %64 = load i8*, i8** %63, align 8
  %65 = icmp eq i8* %64, inttoptr (i64 -1 to i8*)
  br i1 %65, label %91, label %66

66:                                               ; preds = %60
  %67 = bitcast i8* %64 to %"class.WTF::StringImpl"*
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %52, i64 %61, i32 1, i32 0, i32 0, i32 0, i32 0
  %69 = load %"struct.blink::CachedStorageArea::PendingMutation"**, %"struct.blink::CachedStorageArea::PendingMutation"*** %68, align 8
  %70 = icmp eq %"struct.blink::CachedStorageArea::PendingMutation"** %69, null
  br i1 %70, label %75, label %71

71:                                               ; preds = %66
  %72 = bitcast %"struct.blink::CachedStorageArea::PendingMutation"** %69 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %72) #16
  store %"struct.blink::CachedStorageArea::PendingMutation"** null, %"struct.blink::CachedStorageArea::PendingMutation"*** %68, align 8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %62, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  br label %75

75:                                               ; preds = %71, %66
  %76 = phi %"class.WTF::StringImpl"* [ %74, %71 ], [ %67, %66 ]
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #16
  br label %91

91:                                               ; preds = %90, %87, %75, %60
  %92 = add nuw nsw i64 %61, 1
  %93 = icmp eq i64 %92, %59
  br i1 %93, label %94, label %60

94:                                               ; preds = %91, %54
  %95 = bitcast %"struct.WTF::KeyValuePair.218"* %52 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %95) #16
  %96 = bitcast %"class.WTF::HashMap.214"* %50 to i64*
  store atomic i64 0, i64* %96 monotonic, align 8
  store i32 0, i32* %55, align 8
  %97 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 10, i32 0, i32 2
  store i32 0, i32* %97, align 4
  br label %98

98:                                               ; preds = %48, %94
  %99 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 9
  %100 = getelementptr inbounds %"class.WTF::HashMap.198", %"class.WTF::HashMap.198"* %99, i64 0, i32 0, i32 0
  %101 = load %"struct.WTF::KeyValuePair.202"*, %"struct.WTF::KeyValuePair.202"** %100, align 8
  %102 = icmp eq %"struct.WTF::KeyValuePair.202"* %101, null
  br i1 %102, label %141, label %103

103:                                              ; preds = %98
  %104 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 9, i32 0, i32 1
  %105 = load i32, i32* %104, align 8
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %137, label %107

107:                                              ; preds = %103
  %108 = zext i32 %105 to i64
  br label %109

109:                                              ; preds = %134, %107
  %110 = phi i64 [ 0, %107 ], [ %135, %134 ]
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %101, i64 %110
  %112 = bitcast %"struct.WTF::KeyValuePair.202"* %111 to i8**
  %113 = load i8*, i8** %112, align 8
  %114 = icmp eq i8* %113, inttoptr (i64 -1 to i8*)
  br i1 %114, label %134, label %115

115:                                              ; preds = %109
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %101, i64 %110, i32 1
  %117 = bitcast %"class.WTF::Deque.203"* %116 to %"class.WTF::ConditionalDestructor.204"*
  call void @_ZN3WTF21ConditionalDestructorINS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.204"* %117) #16
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %111, i64 0, i32 0, i32 0, i32 0
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %134, label %121

121:                                              ; preds = %115
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #16
  br label %134

134:                                              ; preds = %133, %130, %115, %109
  %135 = add nuw nsw i64 %110, 1
  %136 = icmp eq i64 %135, %108
  br i1 %136, label %137, label %109

137:                                              ; preds = %134, %103
  %138 = bitcast %"struct.WTF::KeyValuePair.202"* %101 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %138) #16
  %139 = bitcast %"class.WTF::HashMap.198"* %99 to i64*
  store atomic i64 0, i64* %139 monotonic, align 8
  store i32 0, i32* %104, align 8
  %140 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 9, i32 0, i32 2
  store i32 0, i32* %140, align 4
  br label %141

141:                                              ; preds = %98, %137
  call void @_ZN5blink17CachedStorageArea12EnsureLoadedEv(%"class.blink::CachedStorageArea"* %0)
  %142 = bitcast %"class.WTF::HashMap.593"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %142) #16
  %143 = getelementptr inbounds %"class.WTF::HashMap.593", %"class.WTF::HashMap.593"* %5, i64 0, i32 0, i32 0
  %144 = getelementptr inbounds %"class.WTF::HashMap.593", %"class.WTF::HashMap.593"* %5, i64 0, i32 0, i32 1
  %145 = getelementptr inbounds %"class.WTF::HashMap.593", %"class.WTF::HashMap.593"* %5, i64 0, i32 0, i32 2
  %146 = bitcast %"class.WTF::HashMap.593"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %146, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %142, i8 0, i64 20, i1 false) #16
  %147 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %44, align 8
  %148 = call i32 @_ZNK5blink14StorageAreaMap9GetLengthEv(%"class.blink::StorageAreaMap"* %147) #16
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %156, label %150

150:                                              ; preds = %141
  %151 = bitcast %"class.WTF::String"* %6 to i8*
  %152 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %153 = bitcast %struct.ValueDelta* %7 to i8*
  %154 = getelementptr inbounds %struct.ValueDelta, %struct.ValueDelta* %7, i64 0, i32 0, i32 0, i32 0
  %155 = getelementptr inbounds %struct.ValueDelta, %struct.ValueDelta* %7, i64 0, i32 1, i32 0, i32 0
  br label %166

156:                                              ; preds = %291, %141
  %157 = call i32 @_ZNK5blink14StorageAreaMap9GetLengthEv(%"class.blink::StorageAreaMap"* nonnull %45) #16
  %158 = icmp eq i32 %157, 0
  br i1 %158, label %296, label %159

159:                                              ; preds = %156
  %160 = bitcast %"class.WTF::String"* %8 to i8*
  %161 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %162 = bitcast %struct.ValueDelta* %9 to i8*
  %163 = getelementptr inbounds %struct.ValueDelta, %struct.ValueDelta* %9, i64 0, i32 0, i32 0, i32 0
  %164 = getelementptr inbounds %struct.ValueDelta, %struct.ValueDelta* %9, i64 0, i32 1, i32 0, i32 0
  %165 = getelementptr inbounds %struct.ValueDelta, %struct.ValueDelta* %9, i64 0, i32 1, i32 0, i32 0
  br label %300

166:                                              ; preds = %150, %291
  %167 = phi i32 [ 0, %150 ], [ %292, %291 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %151) #16
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %152, align 8
  %168 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %44, align 8
  %169 = call %"class.WTF::StringImpl"* @_ZNK5blink14StorageAreaMap6GetKeyEj(%"class.blink::StorageAreaMap"* %168, i32 %167) #16
  store %"class.WTF::StringImpl"* %169, %"class.WTF::StringImpl"** %152, align 8
  %170 = call %"class.WTF::StringImpl"* @_ZNK5blink14StorageAreaMap7GetItemERKN3WTF6StringE(%"class.blink::StorageAreaMap"* nonnull %45, %"class.WTF::String"* nonnull dereferenceable(8) %6) #16
  %171 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %44, align 8
  %172 = call %"class.WTF::StringImpl"* @_ZNK5blink14StorageAreaMap7GetItemERKN3WTF6StringE(%"class.blink::StorageAreaMap"* %171, %"class.WTF::String"* nonnull dereferenceable(8) %6) #16
  %173 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %170, %"class.WTF::StringImpl"* %172) #16
  br i1 %173, label %245, label %174

174:                                              ; preds = %166
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %153) #16
  store %"class.WTF::StringImpl"* %170, %"class.WTF::StringImpl"** %154, align 8
  %175 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %175, label %193, label %176

176:                                              ; preds = %174
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load atomic i32, i32* %177 monotonic, align 4
  %179 = and i32 %178, 2
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %193

181:                                              ; preds = %176
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  %184 = zext i32 %183 to i33
  %185 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %184, i33 1) #16
  %186 = extractvalue { i33, i1 } %185, 1
  %187 = extractvalue { i33, i1 } %185, 0
  %188 = icmp slt i33 %187, 0
  %189 = or i1 %186, %188
  br i1 %189, label %190, label %191, !prof !3

190:                                              ; preds = %181
  call void @llvm.trap() #16
  unreachable

191:                                              ; preds = %181
  %192 = trunc i33 %187 to i32
  store i32 %192, i32* %182, align 4
  br label %193

193:                                              ; preds = %174, %176, %191
  store %"class.WTF::StringImpl"* %172, %"class.WTF::StringImpl"** %155, align 8
  %194 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %194, label %212, label %195

195:                                              ; preds = %193
  %196 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = and i32 %197, 2
  %199 = icmp eq i32 %198, 0
  br i1 %199, label %200, label %212

200:                                              ; preds = %195
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %202 = load i32, i32* %201, align 4
  %203 = zext i32 %202 to i33
  %204 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %203, i33 1) #16
  %205 = extractvalue { i33, i1 } %204, 1
  %206 = extractvalue { i33, i1 } %204, 0
  %207 = icmp slt i33 %206, 0
  %208 = or i1 %205, %207
  br i1 %208, label %209, label %210, !prof !3

209:                                              ; preds = %200
  call void @llvm.trap() #16
  unreachable

210:                                              ; preds = %200
  %211 = trunc i33 %206 to i32
  store i32 %211, i32* %201, align 4
  br label %212

212:                                              ; preds = %193, %195, %210
  call fastcc void @_ZN3WTF7HashMapINS_6StringEZN5blink17CachedStorageArea15ResetConnectionEN4mojo13PendingRemoteINS2_5mojom5blink11StorageAreaEEEE10ValueDeltaNS_10StringHashENS_10HashTraitsIS1_EENSC_ISA_EENS_18PartitionAllocatorEE6insertIRKS1_SA_EENS_18HashTableAddResultINS_9HashTableIS1_NS_12KeyValuePairIS1_SA_EENS_24KeyValuePairKeyExtractorESB_NS_18HashMapValueTraitsISD_SE_EESD_SF_EESN_EEOT_OT0_(%"class.WTF::HashMap.593"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %6, %struct.ValueDelta* nonnull dereferenceable(16) %7)
  %213 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  %214 = icmp eq %"class.WTF::StringImpl"* %213, null
  br i1 %214, label %228, label %215

215:                                              ; preds = %212
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = and i32 %217, 2
  %219 = icmp eq i32 %218, 0
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %213, i64 0, i32 0
  %221 = load i32, i32* %220, align 4
  br i1 %219, label %222, label %224

222:                                              ; preds = %215
  %223 = add i32 %221, -1
  store i32 %223, i32* %220, align 4
  br label %224

224:                                              ; preds = %222, %215
  %225 = phi i32 [ %223, %222 ], [ %221, %215 ]
  %226 = icmp eq i32 %225, 0
  br i1 %226, label %227, label %228

227:                                              ; preds = %224
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %213) #16
  br label %228

228:                                              ; preds = %227, %224, %212
  %229 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %154, align 8
  %230 = icmp eq %"class.WTF::StringImpl"* %229, null
  br i1 %230, label %244, label %231

231:                                              ; preds = %228
  %232 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %233 = load atomic i32, i32* %232 monotonic, align 4
  %234 = and i32 %233, 2
  %235 = icmp eq i32 %234, 0
  %236 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %229, i64 0, i32 0
  %237 = load i32, i32* %236, align 4
  br i1 %235, label %238, label %240

238:                                              ; preds = %231
  %239 = add i32 %237, -1
  store i32 %239, i32* %236, align 4
  br label %240

240:                                              ; preds = %238, %231
  %241 = phi i32 [ %239, %238 ], [ %237, %231 ]
  %242 = icmp eq i32 %241, 0
  br i1 %242, label %243, label %244

243:                                              ; preds = %240
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %229) #16
  br label %244

244:                                              ; preds = %228, %240, %243
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %153) #16
  br label %245

245:                                              ; preds = %166, %244
  %246 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %246, label %260, label %247

247:                                              ; preds = %245
  %248 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %249 = load atomic i32, i32* %248 monotonic, align 4
  %250 = and i32 %249, 2
  %251 = icmp eq i32 %250, 0
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %253 = load i32, i32* %252, align 4
  br i1 %251, label %254, label %256

254:                                              ; preds = %247
  %255 = add i32 %253, -1
  store i32 %255, i32* %252, align 4
  br label %256

256:                                              ; preds = %254, %247
  %257 = phi i32 [ %255, %254 ], [ %253, %247 ]
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %260

259:                                              ; preds = %256
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %172) #16
  br label %260

260:                                              ; preds = %245, %256, %259
  %261 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %261, label %275, label %262

262:                                              ; preds = %260
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 0
  %268 = load i32, i32* %267, align 4
  br i1 %266, label %269, label %271

269:                                              ; preds = %262
  %270 = add i32 %268, -1
  store i32 %270, i32* %267, align 4
  br label %271

271:                                              ; preds = %269, %262
  %272 = phi i32 [ %270, %269 ], [ %268, %262 ]
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %275

274:                                              ; preds = %271
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %170) #16
  br label %275

275:                                              ; preds = %260, %271, %274
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %277 = icmp eq %"class.WTF::StringImpl"* %276, null
  br i1 %277, label %291, label %278

278:                                              ; preds = %275
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = load atomic i32, i32* %279 monotonic, align 4
  %281 = and i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 0
  %284 = load i32, i32* %283, align 4
  br i1 %282, label %285, label %287

285:                                              ; preds = %278
  %286 = add i32 %284, -1
  store i32 %286, i32* %283, align 4
  br label %287

287:                                              ; preds = %285, %278
  %288 = phi i32 [ %286, %285 ], [ %284, %278 ]
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %291

290:                                              ; preds = %287
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %276) #16
  br label %291

291:                                              ; preds = %275, %287, %290
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %151) #16
  %292 = add nuw i32 %167, 1
  %293 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %44, align 8
  %294 = call i32 @_ZNK5blink14StorageAreaMap9GetLengthEv(%"class.blink::StorageAreaMap"* %293) #16
  %295 = icmp ult i32 %292, %294
  br i1 %295, label %166, label %156

296:                                              ; preds = %403, %156
  %297 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 3
  %298 = load i32, i32* %297, align 8
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %479, label %407

300:                                              ; preds = %159, %403
  %301 = phi i32 [ 0, %159 ], [ %404, %403 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %160) #16
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %161, align 8
  %302 = call %"class.WTF::StringImpl"* @_ZNK5blink14StorageAreaMap6GetKeyEj(%"class.blink::StorageAreaMap"* nonnull %45, i32 %301) #16
  store %"class.WTF::StringImpl"* %302, %"class.WTF::StringImpl"** %161, align 8
  %303 = call %"class.WTF::StringImpl"* @_ZNK5blink14StorageAreaMap7GetItemERKN3WTF6StringE(%"class.blink::StorageAreaMap"* nonnull %45, %"class.WTF::String"* nonnull dereferenceable(8) %8) #16
  %304 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %44, align 8
  %305 = call %"class.WTF::StringImpl"* @_ZNK5blink14StorageAreaMap7GetItemERKN3WTF6StringE(%"class.blink::StorageAreaMap"* %304, %"class.WTF::String"* nonnull dereferenceable(8) %8) #16
  %306 = icmp eq %"class.WTF::StringImpl"* %305, null
  br i1 %306, label %320, label %307

307:                                              ; preds = %300
  %308 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %305, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %309 = load atomic i32, i32* %308 monotonic, align 4
  %310 = and i32 %309, 2
  %311 = icmp eq i32 %310, 0
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %305, i64 0, i32 0
  %313 = load i32, i32* %312, align 4
  br i1 %311, label %314, label %316

314:                                              ; preds = %307
  %315 = add i32 %313, -1
  store i32 %315, i32* %312, align 4
  br label %316

316:                                              ; preds = %314, %307
  %317 = phi i32 [ %315, %314 ], [ %313, %307 ]
  %318 = icmp eq i32 %317, 0
  br i1 %318, label %319, label %372

319:                                              ; preds = %316
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %305) #16
  br label %372

320:                                              ; preds = %300
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %162) #16
  store %"class.WTF::StringImpl"* %303, %"class.WTF::StringImpl"** %163, align 8
  %321 = icmp eq %"class.WTF::StringImpl"* %303, null
  br i1 %321, label %339, label %322

322:                                              ; preds = %320
  %323 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %324 = load atomic i32, i32* %323 monotonic, align 4
  %325 = and i32 %324, 2
  %326 = icmp eq i32 %325, 0
  br i1 %326, label %327, label %339

327:                                              ; preds = %322
  %328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 0
  %329 = load i32, i32* %328, align 4
  %330 = zext i32 %329 to i33
  %331 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %330, i33 1) #16
  %332 = extractvalue { i33, i1 } %331, 1
  %333 = extractvalue { i33, i1 } %331, 0
  %334 = icmp slt i33 %333, 0
  %335 = or i1 %332, %334
  br i1 %335, label %336, label %337, !prof !3

336:                                              ; preds = %327
  call void @llvm.trap() #16
  unreachable

337:                                              ; preds = %327
  %338 = trunc i33 %333 to i32
  store i32 %338, i32* %328, align 4
  br label %339

339:                                              ; preds = %320, %322, %337
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %164, align 8
  call fastcc void @_ZN3WTF7HashMapINS_6StringEZN5blink17CachedStorageArea15ResetConnectionEN4mojo13PendingRemoteINS2_5mojom5blink11StorageAreaEEEE10ValueDeltaNS_10StringHashENS_10HashTraitsIS1_EENSC_ISA_EENS_18PartitionAllocatorEE6insertIRKS1_SA_EENS_18HashTableAddResultINS_9HashTableIS1_NS_12KeyValuePairIS1_SA_EENS_24KeyValuePairKeyExtractorESB_NS_18HashMapValueTraitsISD_SE_EESD_SF_EESN_EEOT_OT0_(%"class.WTF::HashMap.593"* nonnull %5, %"class.WTF::String"* nonnull dereferenceable(8) %8, %struct.ValueDelta* nonnull dereferenceable(16) %9)
  %340 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %165, align 8
  %341 = icmp eq %"class.WTF::StringImpl"* %340, null
  br i1 %341, label %355, label %342

342:                                              ; preds = %339
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %340, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %344 = load atomic i32, i32* %343 monotonic, align 4
  %345 = and i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %340, i64 0, i32 0
  %348 = load i32, i32* %347, align 4
  br i1 %346, label %349, label %351

349:                                              ; preds = %342
  %350 = add i32 %348, -1
  store i32 %350, i32* %347, align 4
  br label %351

351:                                              ; preds = %349, %342
  %352 = phi i32 [ %350, %349 ], [ %348, %342 ]
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %355

354:                                              ; preds = %351
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %340) #16
  br label %355

355:                                              ; preds = %354, %351, %339
  %356 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %357 = icmp eq %"class.WTF::StringImpl"* %356, null
  br i1 %357, label %371, label %358

358:                                              ; preds = %355
  %359 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %356, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %360 = load atomic i32, i32* %359 monotonic, align 4
  %361 = and i32 %360, 2
  %362 = icmp eq i32 %361, 0
  %363 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %356, i64 0, i32 0
  %364 = load i32, i32* %363, align 4
  br i1 %362, label %365, label %367

365:                                              ; preds = %358
  %366 = add i32 %364, -1
  store i32 %366, i32* %363, align 4
  br label %367

367:                                              ; preds = %365, %358
  %368 = phi i32 [ %366, %365 ], [ %364, %358 ]
  %369 = icmp eq i32 %368, 0
  br i1 %369, label %370, label %371

370:                                              ; preds = %367
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %356) #16
  br label %371

371:                                              ; preds = %355, %367, %370
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %162) #16
  br label %372

372:                                              ; preds = %319, %316, %371
  %373 = icmp eq %"class.WTF::StringImpl"* %303, null
  br i1 %373, label %387, label %374

374:                                              ; preds = %372
  %375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %376 = load atomic i32, i32* %375 monotonic, align 4
  %377 = and i32 %376, 2
  %378 = icmp eq i32 %377, 0
  %379 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %303, i64 0, i32 0
  %380 = load i32, i32* %379, align 4
  br i1 %378, label %381, label %383

381:                                              ; preds = %374
  %382 = add i32 %380, -1
  store i32 %382, i32* %379, align 4
  br label %383

383:                                              ; preds = %381, %374
  %384 = phi i32 [ %382, %381 ], [ %380, %374 ]
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %386, label %387

386:                                              ; preds = %383
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %303) #16
  br label %387

387:                                              ; preds = %372, %383, %386
  %388 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %389 = icmp eq %"class.WTF::StringImpl"* %388, null
  br i1 %389, label %403, label %390

390:                                              ; preds = %387
  %391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %388, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %392 = load atomic i32, i32* %391 monotonic, align 4
  %393 = and i32 %392, 2
  %394 = icmp eq i32 %393, 0
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %388, i64 0, i32 0
  %396 = load i32, i32* %395, align 4
  br i1 %394, label %397, label %399

397:                                              ; preds = %390
  %398 = add i32 %396, -1
  store i32 %398, i32* %395, align 4
  br label %399

399:                                              ; preds = %397, %390
  %400 = phi i32 [ %398, %397 ], [ %396, %390 ]
  %401 = icmp eq i32 %400, 0
  br i1 %401, label %402, label %403

402:                                              ; preds = %399
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %388) #16
  br label %403

403:                                              ; preds = %387, %399, %402
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %160) #16
  %404 = add nuw i32 %301, 1
  %405 = call i32 @_ZNK5blink14StorageAreaMap9GetLengthEv(%"class.blink::StorageAreaMap"* nonnull %45) #16
  %406 = icmp ult i32 %404, %405
  br i1 %406, label %300, label %296

407:                                              ; preds = %296
  %408 = load i32, i32* %145, align 4
  %409 = icmp eq i32 %408, 0
  %410 = load %"struct.WTF::KeyValuePair.597"*, %"struct.WTF::KeyValuePair.597"** %143, align 8
  %411 = load i32, i32* %144, align 8
  %412 = zext i32 %411 to i64
  %413 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %410, i64 %412
  br i1 %409, label %738, label %414

414:                                              ; preds = %407
  %415 = icmp eq i32 %411, 0
  br i1 %415, label %423, label %416

416:                                              ; preds = %414, %420
  %417 = phi %"struct.WTF::KeyValuePair.597"* [ %421, %420 ], [ %410, %414 ]
  %418 = bitcast %"struct.WTF::KeyValuePair.597"* %417 to i64*
  %419 = load i64, i64* %418, align 8
  switch i64 %419, label %423 [
    i64 -1, label %420
    i64 0, label %420
  ]

420:                                              ; preds = %416, %416
  %421 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %417, i64 1
  %422 = icmp eq %"struct.WTF::KeyValuePair.597"* %421, %413
  br i1 %422, label %738, label %416

423:                                              ; preds = %416, %414
  %424 = phi %"struct.WTF::KeyValuePair.597"* [ %410, %414 ], [ %417, %416 ]
  %425 = icmp eq %"struct.WTF::KeyValuePair.597"* %424, %413
  br i1 %425, label %738, label %426

426:                                              ; preds = %423
  %427 = bitcast %"class.WTF::String"* %10 to i8*
  %428 = bitcast %"class.WTF::String"* %11 to i8*
  %429 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %430 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  br label %431

431:                                              ; preds = %426, %477
  %432 = phi %"struct.WTF::KeyValuePair.597"* [ %424, %426 ], [ %471, %477 ]
  %433 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %432, i64 0, i32 0
  %434 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %432, i64 0, i32 1, i32 0
  %435 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %432, i64 0, i32 1, i32 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %427) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 0) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %428) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i64 0, i64 0), i64 0) #16
  call void @_ZN5blink17CachedStorageArea19EnqueueStorageEventERKN3WTF6StringES4_S4_S4_S4_(%"class.blink::CachedStorageArea"* %0, %"class.WTF::String"* dereferenceable(8) %433, %"class.WTF::String"* dereferenceable(8) %434, %"class.WTF::String"* dereferenceable(8) %435, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::String"* nonnull dereferenceable(8) %11)
  %436 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %429, align 8
  %437 = icmp eq %"class.WTF::StringImpl"* %436, null
  br i1 %437, label %451, label %438

438:                                              ; preds = %431
  %439 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %436, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %440 = load atomic i32, i32* %439 monotonic, align 4
  %441 = and i32 %440, 2
  %442 = icmp eq i32 %441, 0
  %443 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %436, i64 0, i32 0
  %444 = load i32, i32* %443, align 4
  br i1 %442, label %445, label %447

445:                                              ; preds = %438
  %446 = add i32 %444, -1
  store i32 %446, i32* %443, align 4
  br label %447

447:                                              ; preds = %445, %438
  %448 = phi i32 [ %446, %445 ], [ %444, %438 ]
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %450, label %451

450:                                              ; preds = %447
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %436) #16
  br label %451

451:                                              ; preds = %431, %447, %450
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %428) #16
  %452 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %430, align 8
  %453 = icmp eq %"class.WTF::StringImpl"* %452, null
  br i1 %453, label %467, label %454

454:                                              ; preds = %451
  %455 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %452, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %456 = load atomic i32, i32* %455 monotonic, align 4
  %457 = and i32 %456, 2
  %458 = icmp eq i32 %457, 0
  %459 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %452, i64 0, i32 0
  %460 = load i32, i32* %459, align 4
  br i1 %458, label %461, label %463

461:                                              ; preds = %454
  %462 = add i32 %460, -1
  store i32 %462, i32* %459, align 4
  br label %463

463:                                              ; preds = %461, %454
  %464 = phi i32 [ %462, %461 ], [ %460, %454 ]
  %465 = icmp eq i32 %464, 0
  br i1 %465, label %466, label %467

466:                                              ; preds = %463
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %452) #16
  br label %467

467:                                              ; preds = %451, %463, %466
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %427) #16
  %468 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %432, i64 1
  %469 = icmp eq %"struct.WTF::KeyValuePair.597"* %468, %413
  br i1 %469, label %738, label %470

470:                                              ; preds = %467, %474
  %471 = phi %"struct.WTF::KeyValuePair.597"* [ %475, %474 ], [ %468, %467 ]
  %472 = bitcast %"struct.WTF::KeyValuePair.597"* %471 to i64*
  %473 = load i64, i64* %472, align 8
  switch i64 %473, label %477 [
    i64 -1, label %474
    i64 0, label %474
  ]

474:                                              ; preds = %470, %470
  %475 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %471, i64 1
  %476 = icmp eq %"struct.WTF::KeyValuePair.597"* %475, %413
  br i1 %476, label %738, label %470

477:                                              ; preds = %470
  %478 = icmp eq %"struct.WTF::KeyValuePair.597"* %471, %413
  br i1 %478, label %738, label %431

479:                                              ; preds = %296
  %480 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %44, align 8
  store i64 %47, i64* %49, align 8
  %481 = icmp eq %"class.blink::StorageAreaMap"* %480, null
  br i1 %481, label %491, label %482

482:                                              ; preds = %479
  %483 = getelementptr inbounds %"class.blink::StorageAreaMap", %"class.blink::StorageAreaMap"* %480, i64 0, i32 0, i32 0, i32 0
  %484 = load %"struct.WTF::KeyValuePair.194"*, %"struct.WTF::KeyValuePair.194"** %483, align 8
  %485 = icmp eq %"struct.WTF::KeyValuePair.194"* %484, null
  br i1 %485, label %489, label %486, !prof !2

486:                                              ; preds = %482
  %487 = getelementptr inbounds %"class.blink::StorageAreaMap", %"class.blink::StorageAreaMap"* %480, i64 0, i32 0, i32 0, i32 1
  %488 = load i32, i32* %487, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.194"* nonnull %484, i32 %488) #16
  br label %489

489:                                              ; preds = %486, %482
  %490 = bitcast %"class.blink::StorageAreaMap"* %480 to i8*
  call void @free(i8* %490) #16
  br label %491

491:                                              ; preds = %479, %489
  %492 = load i32, i32* %145, align 4
  %493 = icmp eq i32 %492, 0
  %494 = load %"struct.WTF::KeyValuePair.597"*, %"struct.WTF::KeyValuePair.597"** %143, align 8
  %495 = load i32, i32* %144, align 8
  %496 = zext i32 %495 to i64
  %497 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %494, i64 %496
  br i1 %493, label %738, label %498

498:                                              ; preds = %491
  %499 = icmp eq i32 %495, 0
  br i1 %499, label %507, label %500

500:                                              ; preds = %498, %504
  %501 = phi %"struct.WTF::KeyValuePair.597"* [ %505, %504 ], [ %494, %498 ]
  %502 = bitcast %"struct.WTF::KeyValuePair.597"* %501 to i64*
  %503 = load i64, i64* %502, align 8
  switch i64 %503, label %507 [
    i64 -1, label %504
    i64 0, label %504
  ]

504:                                              ; preds = %500, %500
  %505 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %501, i64 1
  %506 = icmp eq %"struct.WTF::KeyValuePair.597"* %505, %497
  br i1 %506, label %738, label %500

507:                                              ; preds = %500, %498
  %508 = phi %"struct.WTF::KeyValuePair.597"* [ %494, %498 ], [ %501, %500 ]
  %509 = icmp eq %"struct.WTF::KeyValuePair.597"* %508, %497
  br i1 %509, label %738, label %510

510:                                              ; preds = %507
  %511 = getelementptr inbounds %"class.std::__1::unique_ptr.391", %"class.std::__1::unique_ptr.391"* %28, i64 0, i32 0, i32 0, i32 0
  %512 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 12, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %513 = bitcast %"class.mojo::InterfaceEndpointClient"** %512 to %"class.mojo::MessageReceiverWithResponder"**
  %514 = bitcast %"class.WTF::Vector.539"* %17 to i8*
  %515 = bitcast %"class.WTF::Vector.539"* %18 to i8*
  %516 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %517 = bitcast %"class.WTF::Vector.539"* %20 to i8*
  %518 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %519 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %520 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %521 = bitcast %"class.WTF::Vector.539"* %20 to i64*
  %522 = bitcast %"class.WTF::Vector.539"* %518 to i64*
  %523 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %20, i64 0, i32 0, i32 0, i32 1
  %524 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %20, i64 0, i32 0, i32 0, i32 2
  %525 = bitcast %"class.WTF::String"* %21 to i8*
  %526 = bitcast %"class.base::OnceCallback.550"* %22 to i8**
  %527 = getelementptr inbounds %"class.base::OnceCallback.550", %"class.base::OnceCallback.550"* %22, i64 0, i32 0
  %528 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %529 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %19, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %530 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %20, i64 0, i32 0, i32 0, i32 0
  %531 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %18, i64 0, i32 0, i32 0, i32 0
  %532 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %18, i64 0, i32 0, i32 0, i32 2
  %533 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %17, i64 0, i32 0, i32 0, i32 0
  %534 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %17, i64 0, i32 0, i32 0, i32 2
  %535 = bitcast %"class.WTF::Vector.539"* %12 to i8*
  %536 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  %537 = bitcast %"class.WTF::Vector.539"* %14 to i8*
  %538 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %539 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %540 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %541 = bitcast %"class.WTF::Vector.539"* %14 to i64*
  %542 = bitcast %"class.WTF::Vector.539"* %538 to i64*
  %543 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %14, i64 0, i32 0, i32 0, i32 1
  %544 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %14, i64 0, i32 0, i32 0, i32 2
  %545 = bitcast %"class.WTF::String"* %15 to i8*
  %546 = bitcast %"class.base::OnceCallback.550"* %16 to i8**
  %547 = getelementptr inbounds %"class.base::OnceCallback.550", %"class.base::OnceCallback.550"* %16, i64 0, i32 0
  %548 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  %549 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %13, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %550 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %14, i64 0, i32 0, i32 0, i32 0
  %551 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %12, i64 0, i32 0, i32 0, i32 0
  %552 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %12, i64 0, i32 0, i32 0, i32 2
  %553 = bitcast %"class.WTF::Vector.539"* %518 to i64*
  %554 = bitcast %"class.WTF::Vector.539"* %538 to i64*
  br label %555

555:                                              ; preds = %510, %736
  %556 = phi %"struct.WTF::KeyValuePair.597"* [ %508, %510 ], [ %730, %736 ]
  %557 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %556, i64 0, i32 1, i32 0
  %558 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %557, i64 0, i32 0, i32 0
  %559 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %558, align 8
  %560 = icmp eq %"class.WTF::StringImpl"* %559, null
  br i1 %560, label %561, label %639

561:                                              ; preds = %555
  %562 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %511, align 8
  %563 = icmp eq %"class.blink::mojom::blink::StorageAreaProxy"* %562, null
  br i1 %563, label %564, label %581

564:                                              ; preds = %561
  %565 = call i8* @_Znwm(i64 8) #17
  %566 = bitcast i8* %565 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink28StorageAreaResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %566, align 8
  %567 = bitcast i8* %565 to %"class.mojo::MessageReceiver"*
  %568 = call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %31, i1 zeroext false, i1 zeroext true, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %567, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink11StorageArea5Name_E, i64 0, i64 0)) #16
  br i1 %568, label %569, label %581

569:                                              ; preds = %564
  %570 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %513, align 8
  %571 = call i8* @_Znwm(i64 16) #17
  %572 = bitcast i8* %571 to %"class.blink::mojom::blink::StorageAreaProxy"*
  call void @_ZN5blink5mojom5blink16StorageAreaProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::StorageAreaProxy"* nonnull %572, %"class.mojo::MessageReceiverWithResponder"* %570) #16
  %573 = ptrtoint i8* %571 to i64
  %574 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %511, align 8
  store i64 %573, i64* %29, align 8
  %575 = icmp eq %"class.blink::mojom::blink::StorageAreaProxy"* %574, null
  br i1 %575, label %581, label %576

576:                                              ; preds = %569
  %577 = bitcast %"class.blink::mojom::blink::StorageAreaProxy"* %574 to void (%"class.blink::mojom::blink::StorageAreaProxy"*)***
  %578 = load void (%"class.blink::mojom::blink::StorageAreaProxy"*)**, void (%"class.blink::mojom::blink::StorageAreaProxy"*)*** %577, align 8
  %579 = getelementptr inbounds void (%"class.blink::mojom::blink::StorageAreaProxy"*)*, void (%"class.blink::mojom::blink::StorageAreaProxy"*)** %578, i64 1
  %580 = load void (%"class.blink::mojom::blink::StorageAreaProxy"*)*, void (%"class.blink::mojom::blink::StorageAreaProxy"*)** %579, align 8
  call void %580(%"class.blink::mojom::blink::StorageAreaProxy"* nonnull %574) #16
  br label %581

581:                                              ; preds = %561, %564, %569, %576
  %582 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %511, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %535) #16
  %583 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %556, i64 0, i32 0
  %584 = load i32, i32* %297, align 8
  %585 = icmp eq i32 %584, 0
  %586 = select i1 %585, i32 2, i32 0
  call void @_ZN5blink17CachedStorageArea19StringToUint8VectorERKN3WTF6StringENS0_12FormatOptionE(%"class.WTF::Vector.539"* nonnull sret %12, %"class.WTF::String"* dereferenceable(8) %583, i32 %586)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %536) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %537) #16
  %587 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %556, i64 0, i32 1, i32 1
  %588 = load i32, i32* %297, align 8
  %589 = icmp eq i32 %588, 0
  %590 = zext i1 %589 to i32
  call void @_ZN5blink17CachedStorageArea19StringToUint8VectorERKN3WTF6StringENS0_12FormatOptionE(%"class.WTF::Vector.539"* nonnull sret %14, %"class.WTF::String"* dereferenceable(8) %587, i32 %590)
  store i8 1, i8* %536, align 8
  store i64 0, i64* %554, align 8
  %591 = load i64, i64* %541, align 8
  store atomic i64 0, i64* %541 monotonic, align 8
  store atomic i64 %591, i64* %542 monotonic, align 8
  %592 = load i32, i32* %543, align 8
  store i32 %592, i32* %539, align 8
  store i32 0, i32* %543, align 8
  %593 = load i32, i32* %544, align 4
  store i32 %593, i32* %540, align 4
  store i32 0, i32* %544, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %545) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %15, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #16
  %594 = call i8* @_Znwm(i64 40) #17, !noalias !51
  %595 = bitcast i8* %594 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %595, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1)* @_ZN4base8internal7InvokerINS0_9BindStateIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEEEFvbEE7RunOnceEPNS0_13BindStateBaseEb to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEE7DestroyEPKNS0_13BindStateBaseE) #16, !noalias !51
  store i8* %594, i8** %546, align 8, !alias.scope !51
  call void @_ZN5blink5mojom5blink16StorageAreaProxy6DeleteERKN3WTF6VectorIhLj0ENS3_18PartitionAllocatorEEERKN4absl8optionalIS6_EERKNS3_6StringEN4base12OnceCallbackIFvbEEE(%"class.blink::mojom::blink::StorageAreaProxy"* %582, %"class.WTF::Vector.539"* nonnull dereferenceable(16) %12, %"class.absl::optional.534"* nonnull dereferenceable(24) %13, %"class.WTF::String"* nonnull dereferenceable(8) %15, %"class.base::OnceCallback.550"* nonnull %16) #16
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %547) #16
  %596 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %548, align 8
  %597 = icmp eq %"class.WTF::StringImpl"* %596, null
  br i1 %597, label %611, label %598

598:                                              ; preds = %581
  %599 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %596, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %600 = load atomic i32, i32* %599 monotonic, align 4
  %601 = and i32 %600, 2
  %602 = icmp eq i32 %601, 0
  %603 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %596, i64 0, i32 0
  %604 = load i32, i32* %603, align 4
  br i1 %602, label %605, label %607

605:                                              ; preds = %598
  %606 = add i32 %604, -1
  store i32 %606, i32* %603, align 4
  br label %607

607:                                              ; preds = %605, %598
  %608 = phi i32 [ %606, %605 ], [ %604, %598 ]
  %609 = icmp eq i32 %608, 0
  br i1 %609, label %610, label %611

610:                                              ; preds = %607
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %596) #16
  br label %611

611:                                              ; preds = %581, %607, %610
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %545) #16
  %612 = load i8, i8* %536, align 8, !range !4
  %613 = icmp eq i8 %612, 0
  br i1 %613, label %623, label %614

614:                                              ; preds = %611
  %615 = load i8*, i8** %549, align 8
  %616 = icmp eq i8* %615, null
  br i1 %616, label %622, label %617, !prof !2

617:                                              ; preds = %614
  %618 = load i32, i32* %540, align 4
  %619 = icmp eq i32 %618, 0
  br i1 %619, label %621, label %620, !prof !3

620:                                              ; preds = %617
  store i32 0, i32* %540, align 4
  br label %621

621:                                              ; preds = %620, %617
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %615) #16
  store i8* null, i8** %549, align 8
  br label %622

622:                                              ; preds = %621, %614
  store i8 0, i8* %536, align 8
  br label %623

623:                                              ; preds = %611, %622
  %624 = load i8*, i8** %550, align 8
  %625 = icmp eq i8* %624, null
  br i1 %625, label %631, label %626, !prof !2

626:                                              ; preds = %623
  %627 = load i32, i32* %544, align 4
  %628 = icmp eq i32 %627, 0
  br i1 %628, label %630, label %629, !prof !3

629:                                              ; preds = %626
  store i32 0, i32* %544, align 4
  br label %630

630:                                              ; preds = %629, %626
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %624) #16
  store i8* null, i8** %550, align 8
  br label %631

631:                                              ; preds = %623, %630
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %537) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %536) #16
  %632 = load i8*, i8** %551, align 8
  %633 = icmp eq i8* %632, null
  br i1 %633, label %725, label %634, !prof !2

634:                                              ; preds = %631
  %635 = load i32, i32* %552, align 4
  %636 = icmp eq i32 %635, 0
  br i1 %636, label %638, label %637, !prof !3

637:                                              ; preds = %634
  store i32 0, i32* %552, align 4
  br label %638

638:                                              ; preds = %637, %634
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %632) #16
  store i8* null, i8** %551, align 8
  br label %725

639:                                              ; preds = %555
  %640 = load i32, i32* %297, align 8
  %641 = icmp eq i32 %640, 0
  %642 = zext i1 %641 to i32
  %643 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %511, align 8
  %644 = icmp eq %"class.blink::mojom::blink::StorageAreaProxy"* %643, null
  br i1 %644, label %645, label %662

645:                                              ; preds = %639
  %646 = call i8* @_Znwm(i64 8) #17
  %647 = bitcast i8* %646 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink28StorageAreaResponseValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %647, align 8
  %648 = bitcast i8* %646 to %"class.mojo::MessageReceiver"*
  %649 = call zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"* %31, i1 zeroext false, i1 zeroext true, i1 zeroext false, %"class.mojo::MessageReceiver"* nonnull %648, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink11StorageArea5Name_E, i64 0, i64 0)) #16
  br i1 %649, label %650, label %662

650:                                              ; preds = %645
  %651 = load %"class.mojo::MessageReceiverWithResponder"*, %"class.mojo::MessageReceiverWithResponder"** %513, align 8
  %652 = call i8* @_Znwm(i64 16) #17
  %653 = bitcast i8* %652 to %"class.blink::mojom::blink::StorageAreaProxy"*
  call void @_ZN5blink5mojom5blink16StorageAreaProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::StorageAreaProxy"* nonnull %653, %"class.mojo::MessageReceiverWithResponder"* %651) #16
  %654 = ptrtoint i8* %652 to i64
  %655 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %511, align 8
  store i64 %654, i64* %29, align 8
  %656 = icmp eq %"class.blink::mojom::blink::StorageAreaProxy"* %655, null
  br i1 %656, label %662, label %657

657:                                              ; preds = %650
  %658 = bitcast %"class.blink::mojom::blink::StorageAreaProxy"* %655 to void (%"class.blink::mojom::blink::StorageAreaProxy"*)***
  %659 = load void (%"class.blink::mojom::blink::StorageAreaProxy"*)**, void (%"class.blink::mojom::blink::StorageAreaProxy"*)*** %658, align 8
  %660 = getelementptr inbounds void (%"class.blink::mojom::blink::StorageAreaProxy"*)*, void (%"class.blink::mojom::blink::StorageAreaProxy"*)** %659, i64 1
  %661 = load void (%"class.blink::mojom::blink::StorageAreaProxy"*)*, void (%"class.blink::mojom::blink::StorageAreaProxy"*)** %660, align 8
  call void %661(%"class.blink::mojom::blink::StorageAreaProxy"* nonnull %655) #16
  br label %662

662:                                              ; preds = %639, %645, %650, %657
  %663 = load %"class.blink::mojom::blink::StorageAreaProxy"*, %"class.blink::mojom::blink::StorageAreaProxy"** %511, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %514) #16
  %664 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %556, i64 0, i32 0
  %665 = load i32, i32* %297, align 8
  %666 = icmp eq i32 %665, 0
  %667 = select i1 %666, i32 2, i32 0
  call void @_ZN5blink17CachedStorageArea19StringToUint8VectorERKN3WTF6StringENS0_12FormatOptionE(%"class.WTF::Vector.539"* nonnull sret %17, %"class.WTF::String"* dereferenceable(8) %664, i32 %667)
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %515) #16
  call void @_ZN5blink17CachedStorageArea19StringToUint8VectorERKN3WTF6StringENS0_12FormatOptionE(%"class.WTF::Vector.539"* nonnull sret %18, %"class.WTF::String"* dereferenceable(8) %557, i32 %642)
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %516) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %517) #16
  %668 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %556, i64 0, i32 1, i32 1
  call void @_ZN5blink17CachedStorageArea19StringToUint8VectorERKN3WTF6StringENS0_12FormatOptionE(%"class.WTF::Vector.539"* nonnull sret %20, %"class.WTF::String"* dereferenceable(8) %668, i32 %642)
  store i8 1, i8* %516, align 8
  store i64 0, i64* %553, align 8
  %669 = load i64, i64* %521, align 8
  store atomic i64 0, i64* %521 monotonic, align 8
  store atomic i64 %669, i64* %522 monotonic, align 8
  %670 = load i32, i32* %523, align 8
  store i32 %670, i32* %519, align 8
  store i32 0, i32* %523, align 8
  %671 = load i32, i32* %524, align 4
  store i32 %671, i32* %520, align 4
  store i32 0, i32* %524, align 4
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %525) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %21, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i64 1) #16
  %672 = call i8* @_Znwm(i64 40) #17, !noalias !60
  %673 = bitcast i8* %672 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %673, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i1)* @_ZN4base8internal7InvokerINS0_9BindStateIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEEEFvbEE7RunOnceEPNS0_13BindStateBaseEb to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEE7DestroyEPKNS0_13BindStateBaseE) #16, !noalias !60
  store i8* %672, i8** %526, align 8, !alias.scope !60
  call void @_ZN5blink5mojom5blink16StorageAreaProxy3PutERKN3WTF6VectorIhLj0ENS3_18PartitionAllocatorEEES8_RKN4absl8optionalIS6_EERKNS3_6StringEN4base12OnceCallbackIFvbEEE(%"class.blink::mojom::blink::StorageAreaProxy"* %663, %"class.WTF::Vector.539"* nonnull dereferenceable(16) %17, %"class.WTF::Vector.539"* nonnull dereferenceable(16) %18, %"class.absl::optional.534"* nonnull dereferenceable(24) %19, %"class.WTF::String"* nonnull dereferenceable(8) %21, %"class.base::OnceCallback.550"* nonnull %22) #16
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %527) #16
  %674 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %528, align 8
  %675 = icmp eq %"class.WTF::StringImpl"* %674, null
  br i1 %675, label %689, label %676

676:                                              ; preds = %662
  %677 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %674, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %678 = load atomic i32, i32* %677 monotonic, align 4
  %679 = and i32 %678, 2
  %680 = icmp eq i32 %679, 0
  %681 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %674, i64 0, i32 0
  %682 = load i32, i32* %681, align 4
  br i1 %680, label %683, label %685

683:                                              ; preds = %676
  %684 = add i32 %682, -1
  store i32 %684, i32* %681, align 4
  br label %685

685:                                              ; preds = %683, %676
  %686 = phi i32 [ %684, %683 ], [ %682, %676 ]
  %687 = icmp eq i32 %686, 0
  br i1 %687, label %688, label %689

688:                                              ; preds = %685
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %674) #16
  br label %689

689:                                              ; preds = %662, %685, %688
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %525) #16
  %690 = load i8, i8* %516, align 8, !range !4
  %691 = icmp eq i8 %690, 0
  br i1 %691, label %701, label %692

692:                                              ; preds = %689
  %693 = load i8*, i8** %529, align 8
  %694 = icmp eq i8* %693, null
  br i1 %694, label %700, label %695, !prof !2

695:                                              ; preds = %692
  %696 = load i32, i32* %520, align 4
  %697 = icmp eq i32 %696, 0
  br i1 %697, label %699, label %698, !prof !3

698:                                              ; preds = %695
  store i32 0, i32* %520, align 4
  br label %699

699:                                              ; preds = %698, %695
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %693) #16
  store i8* null, i8** %529, align 8
  br label %700

700:                                              ; preds = %699, %692
  store i8 0, i8* %516, align 8
  br label %701

701:                                              ; preds = %689, %700
  %702 = load i8*, i8** %530, align 8
  %703 = icmp eq i8* %702, null
  br i1 %703, label %709, label %704, !prof !2

704:                                              ; preds = %701
  %705 = load i32, i32* %524, align 4
  %706 = icmp eq i32 %705, 0
  br i1 %706, label %708, label %707, !prof !3

707:                                              ; preds = %704
  store i32 0, i32* %524, align 4
  br label %708

708:                                              ; preds = %707, %704
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %702) #16
  store i8* null, i8** %530, align 8
  br label %709

709:                                              ; preds = %701, %708
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %517) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %516) #16
  %710 = load i8*, i8** %531, align 8
  %711 = icmp eq i8* %710, null
  br i1 %711, label %717, label %712, !prof !2

712:                                              ; preds = %709
  %713 = load i32, i32* %532, align 4
  %714 = icmp eq i32 %713, 0
  br i1 %714, label %716, label %715, !prof !3

715:                                              ; preds = %712
  store i32 0, i32* %532, align 4
  br label %716

716:                                              ; preds = %715, %712
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %710) #16
  store i8* null, i8** %531, align 8
  br label %717

717:                                              ; preds = %709, %716
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %515) #16
  %718 = load i8*, i8** %533, align 8
  %719 = icmp eq i8* %718, null
  br i1 %719, label %725, label %720, !prof !2

720:                                              ; preds = %717
  %721 = load i32, i32* %534, align 4
  %722 = icmp eq i32 %721, 0
  br i1 %722, label %724, label %723, !prof !3

723:                                              ; preds = %720
  store i32 0, i32* %534, align 4
  br label %724

724:                                              ; preds = %723, %720
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %718) #16
  store i8* null, i8** %533, align 8
  br label %725

725:                                              ; preds = %724, %717, %638, %631
  %726 = phi i8* [ %535, %631 ], [ %535, %638 ], [ %514, %717 ], [ %514, %724 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %726) #16
  %727 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %556, i64 1
  %728 = icmp eq %"struct.WTF::KeyValuePair.597"* %727, %497
  br i1 %728, label %738, label %729

729:                                              ; preds = %725, %733
  %730 = phi %"struct.WTF::KeyValuePair.597"* [ %734, %733 ], [ %727, %725 ]
  %731 = bitcast %"struct.WTF::KeyValuePair.597"* %730 to i64*
  %732 = load i64, i64* %731, align 8
  switch i64 %732, label %736 [
    i64 -1, label %733
    i64 0, label %733
  ]

733:                                              ; preds = %729, %729
  %734 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %730, i64 1
  %735 = icmp eq %"struct.WTF::KeyValuePair.597"* %734, %497
  br i1 %735, label %738, label %729

736:                                              ; preds = %729
  %737 = icmp eq %"struct.WTF::KeyValuePair.597"* %730, %497
  br i1 %737, label %738, label %555

738:                                              ; preds = %420, %467, %477, %474, %504, %725, %736, %733, %491, %407, %423, %507
  %739 = phi i64 [ 0, %507 ], [ %47, %423 ], [ %47, %407 ], [ 0, %491 ], [ 0, %733 ], [ 0, %736 ], [ 0, %725 ], [ 0, %504 ], [ %47, %474 ], [ %47, %477 ], [ %47, %467 ], [ %47, %420 ]
  %740 = bitcast %"class.WTF::HashMap.593"* %5 to %"class.WTF::ConditionalDestructor.595"*
  call fastcc void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_ZN5blink17CachedStorageArea15ResetConnectionEN4mojo13PendingRemoteINS4_5mojom5blink11StorageAreaEEEE10ValueDeltaEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSH_ISC_EEEESI_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.595"* nonnull %740) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %142) #16
  %741 = inttoptr i64 %739 to %"class.blink::StorageAreaMap"*
  %742 = icmp eq i64 %739, 0
  br i1 %742, label %752, label %743

743:                                              ; preds = %738
  %744 = getelementptr inbounds %"class.blink::StorageAreaMap", %"class.blink::StorageAreaMap"* %741, i64 0, i32 0, i32 0, i32 0
  %745 = load %"struct.WTF::KeyValuePair.194"*, %"struct.WTF::KeyValuePair.194"** %744, align 8
  %746 = icmp eq %"struct.WTF::KeyValuePair.194"* %745, null
  br i1 %746, label %750, label %747, !prof !2

747:                                              ; preds = %743
  %748 = getelementptr inbounds %"class.blink::StorageAreaMap", %"class.blink::StorageAreaMap"* %741, i64 0, i32 0, i32 0, i32 1
  %749 = load i32, i32* %748, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.194"* nonnull %745, i32 %749) #16
  br label %750

750:                                              ; preds = %747, %743
  %751 = inttoptr i64 %739 to i8*
  call void @free(i8* %751) #16
  br label %752

752:                                              ; preds = %40, %750, %738
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3WTF7HashMapINS_6StringEZN5blink17CachedStorageArea15ResetConnectionEN4mojo13PendingRemoteINS2_5mojom5blink11StorageAreaEEEE10ValueDeltaNS_10StringHashENS_10HashTraitsIS1_EENSC_ISA_EENS_18PartitionAllocatorEE6insertIRKS1_SA_EENS_18HashTableAddResultINS_9HashTableIS1_NS_12KeyValuePairIS1_SA_EENS_24KeyValuePairKeyExtractorESB_NS_18HashMapValueTraitsISD_SE_EESD_SF_EESN_EEOT_OT0_(%"class.WTF::HashMap.593"* nocapture, %"class.WTF::String"* nocapture readonly dereferenceable(8), %struct.ValueDelta* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashMap.593", %"class.WTF::HashMap.593"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.WTF::HashMap.593", %"class.WTF::HashMap.593"* %0, i64 0, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.597"*, %"struct.WTF::KeyValuePair.597"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.597"* %6, null
  br i1 %7, label %8, label %11

8:                                                ; preds = %3
  %9 = tail call fastcc %"struct.WTF::KeyValuePair.597"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_ZN5blink17CachedStorageArea15ResetConnectionEN4mojo13PendingRemoteINS3_5mojom5blink11StorageAreaEEEE10ValueDeltaEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSC_(%"class.WTF::HashTable.594"* %4, %"struct.WTF::KeyValuePair.597"* null) #16
  %10 = load %"struct.WTF::KeyValuePair.597"*, %"struct.WTF::KeyValuePair.597"** %5, align 8
  br label %11

11:                                               ; preds = %8, %3
  %12 = phi %"struct.WTF::KeyValuePair.597"* [ %6, %3 ], [ %10, %8 ]
  %13 = getelementptr inbounds %"class.WTF::HashMap.593", %"class.WTF::HashMap.593"* %0, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = add i32 %14, -1
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %18, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = lshr i32 %20, 8
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %25

23:                                               ; preds = %11
  %24 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %18) #16
  br label %25

25:                                               ; preds = %23, %11
  %26 = phi i32 [ %24, %23 ], [ %21, %11 ]
  %27 = and i32 %26, %15
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %12, i64 %28
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %79, label %33

33:                                               ; preds = %25
  %34 = xor i32 %26, -1
  %35 = lshr i32 %26, 23
  %36 = add i32 %35, %34
  %37 = shl i32 %36, 12
  %38 = xor i32 %37, %36
  %39 = lshr i32 %38, 7
  %40 = xor i32 %39, %38
  %41 = shl i32 %40, 2
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 20
  %44 = xor i32 %43, %42
  %45 = or i32 %44, 1
  %46 = zext i32 %45 to i64
  br label %47

47:                                               ; preds = %59, %33
  %48 = phi %"struct.WTF::KeyValuePair.597"* [ %29, %33 ], [ %65, %59 ]
  %49 = phi %"struct.WTF::KeyValuePair.597"* [ null, %33 ], [ %60, %59 ]
  %50 = phi i64 [ %28, %33 ], [ %64, %59 ]
  %51 = phi i64 [ 0, %33 ], [ %62, %59 ]
  %52 = bitcast %"struct.WTF::KeyValuePair.597"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %59, label %55

55:                                               ; preds = %47
  %56 = bitcast i8* %53 to %"class.WTF::StringImpl"*
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %58 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"* %57) #16
  br i1 %58, label %176, label %59

59:                                               ; preds = %55, %47
  %60 = phi %"struct.WTF::KeyValuePair.597"* [ %49, %55 ], [ %48, %47 ]
  %61 = icmp eq i64 %51, 0
  %62 = select i1 %61, i64 %46, i64 %51
  %63 = add i64 %62, %50
  %64 = and i64 %63, %16
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %12, i64 %64
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %65, i64 0, i32 0, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %69, label %47

69:                                               ; preds = %59
  %70 = icmp eq %"struct.WTF::KeyValuePair.597"* %60, null
  br i1 %70, label %79, label %71

71:                                               ; preds = %69
  %72 = bitcast %"struct.WTF::KeyValuePair.597"* %60 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %72, i8 0, i64 24, i1 false) #16
  %73 = getelementptr inbounds %"class.WTF::HashMap.593", %"class.WTF::HashMap.593"* %0, i64 0, i32 0, i32 3
  %74 = load i32, i32* %73, align 8
  %75 = add i32 %74, 2147483647
  %76 = and i32 %75, 2147483647
  %77 = and i32 %74, -2147483648
  %78 = or i32 %76, %77
  store i32 %78, i32* %73, align 8
  br label %79

79:                                               ; preds = %71, %69, %25
  %80 = phi %"struct.WTF::KeyValuePair.597"* [ %60, %71 ], [ %65, %69 ], [ %29, %25 ]
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #16
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !3

97:                                               ; preds = %88
  tail call void @llvm.trap() #16
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %98, %83, %79
  %101 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %102 = bitcast %"struct.WTF::KeyValuePair.597"* %80 to i64*
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %80, i64 0, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store i64 %101, i64* %102, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #16
  br label %119

119:                                              ; preds = %118, %115, %100
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %80, i64 0, i32 1
  %121 = getelementptr inbounds %struct.ValueDelta, %struct.ValueDelta* %2, i64 0, i32 0, i32 0, i32 0
  %122 = bitcast %struct.ValueDelta* %2 to i64*
  %123 = load i64, i64* %122, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %121, align 8
  %124 = bitcast %struct.ValueDelta* %120 to i64*
  %125 = getelementptr inbounds %struct.ValueDelta, %struct.ValueDelta* %120, i64 0, i32 0, i32 0, i32 0
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %125, align 8
  store i64 %123, i64* %124, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %141, label %128

128:                                              ; preds = %119
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %130 = load atomic i32, i32* %129 monotonic, align 4
  %131 = and i32 %130, 2
  %132 = icmp eq i32 %131, 0
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %134 = load i32, i32* %133, align 4
  br i1 %132, label %135, label %137

135:                                              ; preds = %128
  %136 = add i32 %134, -1
  store i32 %136, i32* %133, align 4
  br label %137

137:                                              ; preds = %135, %128
  %138 = phi i32 [ %136, %135 ], [ %134, %128 ]
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %141

140:                                              ; preds = %137
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %126) #16
  br label %141

141:                                              ; preds = %140, %137, %119
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %80, i64 0, i32 1, i32 1
  %143 = getelementptr inbounds %struct.ValueDelta, %struct.ValueDelta* %2, i64 0, i32 1
  %144 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %143, i64 0, i32 0, i32 0
  %145 = bitcast %"class.WTF::String"* %143 to i64*
  %146 = load i64, i64* %145, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %144, align 8
  %147 = bitcast %"class.WTF::String"* %142 to i64*
  %148 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %142, i64 0, i32 0, i32 0
  %149 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %148, align 8
  store i64 %146, i64* %147, align 8
  %150 = icmp eq %"class.WTF::StringImpl"* %149, null
  br i1 %150, label %164, label %151

151:                                              ; preds = %141
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = and i32 %153, 2
  %155 = icmp eq i32 %154, 0
  %156 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %149, i64 0, i32 0
  %157 = load i32, i32* %156, align 4
  br i1 %155, label %158, label %160

158:                                              ; preds = %151
  %159 = add i32 %157, -1
  store i32 %159, i32* %156, align 4
  br label %160

160:                                              ; preds = %158, %151
  %161 = phi i32 [ %159, %158 ], [ %157, %151 ]
  %162 = icmp eq i32 %161, 0
  br i1 %162, label %163, label %164

163:                                              ; preds = %160
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %149) #16
  br label %164

164:                                              ; preds = %163, %160, %141
  %165 = getelementptr inbounds %"class.WTF::HashMap.593", %"class.WTF::HashMap.593"* %0, i64 0, i32 0, i32 2
  %166 = load i32, i32* %165, align 4
  %167 = add i32 %166, 1
  store i32 %167, i32* %165, align 4
  %168 = getelementptr inbounds %"class.WTF::HashMap.593", %"class.WTF::HashMap.593"* %0, i64 0, i32 0, i32 3
  %169 = load i32, i32* %168, align 8
  %170 = add i32 %169, %167
  %171 = shl i32 %170, 1
  %172 = load i32, i32* %13, align 8
  %173 = icmp ult i32 %171, %172
  br i1 %173, label %176, label %174

174:                                              ; preds = %164
  %175 = tail call fastcc %"struct.WTF::KeyValuePair.597"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_ZN5blink17CachedStorageArea15ResetConnectionEN4mojo13PendingRemoteINS3_5mojom5blink11StorageAreaEEEE10ValueDeltaEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSC_(%"class.WTF::HashTable.594"* %4, %"struct.WTF::KeyValuePair.597"* %80) #16
  br label %176

176:                                              ; preds = %55, %164, %174
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CachedStorageArea10KeyChangedERKN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEES6_RKN4absl8optionalIS4_EERKNS1_6StringE(%"class.blink::CachedStorageArea"*, %"class.WTF::Vector.539"* dereferenceable(16), %"class.WTF::Vector.539"* dereferenceable(16), %"class.absl::optional.534"* dereferenceable(24), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.std::__1::unique_ptr.208", align 8
  %10 = alloca %"class.blink::KURL", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #16
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %14 = tail call %"class.WTF::StringImpl"* @_ZN5blink17CachedStorageArea19Uint8VectorToStringERKN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEENS0_12FormatOptionE(%"class.WTF::Vector.539"* dereferenceable(16) %1, i32 0)
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %13, align 8
  %15 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #16
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %17 = tail call %"class.WTF::StringImpl"* @_ZN5blink17CachedStorageArea19Uint8VectorToStringERKN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEENS0_12FormatOptionE(%"class.WTF::Vector.539"* dereferenceable(16) %2, i32 0)
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %16, align 8
  %18 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %19, align 8
  %20 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8, i8* %20, align 8, !range !4
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %28, label %23

23:                                               ; preds = %5
  %24 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %3, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %25 = tail call %"class.WTF::StringImpl"* @_ZN5blink17CachedStorageArea19Uint8VectorToStringERKN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEENS0_12FormatOptionE(%"class.WTF::Vector.539"* dereferenceable(16) %24, i32 0)
  %26 = ptrtoint %"class.WTF::StringImpl"* %25 to i64
  %27 = bitcast %"class.WTF::String"* %8 to i64*
  store i64 %26, i64* %27, align 8
  br label %28

28:                                               ; preds = %23, %5
  %29 = bitcast %"class.std::__1::unique_ptr.208"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #16
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %9, i64 0, i32 0, i32 0, i32 0
  %31 = tail call %"struct.blink::CachedStorageArea::PendingMutation"* @_ZN5blink17CachedStorageArea18PopPendingMutationERKN3WTF6StringE(%"class.blink::CachedStorageArea"* %0, %"class.WTF::String"* dereferenceable(8) %4)
  store %"struct.blink::CachedStorageArea::PendingMutation"* %31, %"struct.blink::CachedStorageArea::PendingMutation"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %33 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %32, align 8
  %34 = icmp eq %"class.blink::StorageAreaMap"* %33, null
  %35 = icmp ne %"struct.blink::CachedStorageArea::PendingMutation"* %31, null
  %36 = or i1 %35, %34
  br i1 %36, label %38, label %37

37:                                               ; preds = %28
  call void @_ZN5blink17CachedStorageArea32MaybeApplyNonLocalMutationForKeyERKN3WTF6StringES4_(%"class.blink::CachedStorageArea"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %7)
  br label %38

38:                                               ; preds = %28, %37
  %39 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %10, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %39) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %10) #16
  %40 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #16
  %41 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %41, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_112UnpackSourceERKN3WTF6StringEPNS_4KURLEPS2_(%"class.WTF::String"* dereferenceable(8) %4, %"class.blink::KURL"* nonnull %10, %"class.WTF::String"* nonnull %11)
  %42 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %10, i64 0, i32 4
  call void @_ZN5blink17CachedStorageArea19EnqueueStorageEventERKN3WTF6StringES4_S4_S4_S4_(%"class.blink::CachedStorageArea"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* dereferenceable(8) %42, %"class.WTF::String"* nonnull dereferenceable(8) %11)
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %41, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #16
  br label %58

58:                                               ; preds = %38, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #16
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %39) #16
  %59 = load %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %30, align 8
  store %"struct.blink::CachedStorageArea::PendingMutation"* null, %"struct.blink::CachedStorageArea::PendingMutation"** %30, align 8
  %60 = icmp eq %"struct.blink::CachedStorageArea::PendingMutation"* %59, null
  br i1 %60, label %63, label %61

61:                                               ; preds = %58
  %62 = bitcast %"class.std::__1::unique_ptr.208"* %9 to %"struct.std::__1::default_delete.212"*
  call void @_ZNKSt3__114default_deleteIN5blink17CachedStorageArea15PendingMutationEEclEPS3_(%"struct.std::__1::default_delete.212"* nonnull %62, %"struct.blink::CachedStorageArea::PendingMutation"* nonnull %59) #16
  br label %63

63:                                               ; preds = %58, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #16
  %64 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %65 = icmp eq %"class.WTF::StringImpl"* %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %63
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %64, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %64) #16
  br label %79

79:                                               ; preds = %63, %75, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %95, label %82

82:                                               ; preds = %79
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %82
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %82
  %92 = phi i32 [ %90, %89 ], [ %88, %82 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #16
  br label %95

95:                                               ; preds = %79, %91, %94
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #16
  %96 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %97 = icmp eq %"class.WTF::StringImpl"* %96, null
  br i1 %97, label %111, label %98

98:                                               ; preds = %95
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load atomic i32, i32* %99 monotonic, align 4
  %101 = and i32 %100, 2
  %102 = icmp eq i32 %101, 0
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %96, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  br i1 %102, label %105, label %107

105:                                              ; preds = %98
  %106 = add i32 %104, -1
  store i32 %106, i32* %103, align 4
  br label %107

107:                                              ; preds = %105, %98
  %108 = phi i32 [ %106, %105 ], [ %104, %98 ]
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %111

110:                                              ; preds = %107
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #16
  br label %111

111:                                              ; preds = %95, %107, %110
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink17CachedStorageArea19Uint8VectorToStringERKN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEENS0_12FormatOptionE(%"class.WTF::Vector.539"* dereferenceable(16), i32) local_unnamed_addr #0 align 2 {
  %3 = alloca i16*, align 8
  %4 = alloca i16*, align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.logging::LogMessage", align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %33

10:                                               ; preds = %2
  %11 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %12 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = ptrtoint %"class.WTF::StringImpl"* %13 to i64
  %15 = icmp eq %"class.WTF::StringImpl"* %13, null
  br i1 %15, label %227, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %227

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %13, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #16
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !3

30:                                               ; preds = %21
  tail call void @llvm.trap() #16
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %227

33:                                               ; preds = %2
  switch i32 %1, label %227 [
    i32 1, label %34
    i32 2, label %93
    i32 0, label %100
  ]

34:                                               ; preds = %33
  %35 = zext i32 %8 to i64
  %36 = and i64 %35, 1
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %38, label %172

38:                                               ; preds = %34
  %39 = lshr i32 %8, 1
  %40 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #16
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %41 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %39, i16** nonnull dereferenceable(8) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #16
  %42 = icmp eq %"class.WTF::StringImpl"* %41, null
  br i1 %42, label %55, label %43

43:                                               ; preds = %38
  %44 = ptrtoint %"class.WTF::StringImpl"* %41 to i64
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 1
  %49 = bitcast %"class.WTF::StringImpl"* %48 to i8*
  %50 = select i1 %47, i8* null, i8* %49
  %51 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %50, i8* align 1 %52, i64 %35, i1 false)
  %53 = load i32, i32* %45, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %58, label %227

55:                                               ; preds = %38
  %56 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 536870912 null, i8* align 1 %57, i64 %35, i1 false)
  br label %58

58:                                               ; preds = %55, %43
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %60 = ptrtoint %"class.WTF::StringImpl"* %59 to i64
  %61 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %61, label %79, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %79

67:                                               ; preds = %62
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  %70 = zext i32 %69 to i33
  %71 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %70, i33 1) #16
  %72 = extractvalue { i33, i1 } %71, 1
  %73 = extractvalue { i33, i1 } %71, 0
  %74 = icmp slt i33 %73, 0
  %75 = or i1 %72, %74
  br i1 %75, label %76, label %77, !prof !3

76:                                               ; preds = %67
  call void @llvm.trap() #16
  unreachable

77:                                               ; preds = %67
  %78 = trunc i33 %73 to i32
  store i32 %78, i32* %68, align 4
  br label %79

79:                                               ; preds = %58, %62, %77
  br i1 %42, label %227, label %80

80:                                               ; preds = %79
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = and i32 %82, 2
  %84 = icmp eq i32 %83, 0
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %41, i64 0, i32 0
  %86 = load i32, i32* %85, align 4
  br i1 %84, label %87, label %89

87:                                               ; preds = %80
  %88 = add i32 %86, -1
  store i32 %88, i32* %85, align 4
  br label %89

89:                                               ; preds = %87, %80
  %90 = phi i32 [ %88, %87 ], [ %86, %80 ]
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %227

92:                                               ; preds = %89
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %41) #16
  br label %227

93:                                               ; preds = %33
  %94 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  %96 = zext i32 %8 to i64
  %97 = tail call %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8* %95, i64 %96) #16
  %98 = ptrtoint %"class.WTF::StringImpl"* %97 to i64
  %99 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %99, label %172, label %227

100:                                              ; preds = %33
  %101 = tail call dereferenceable(1) i8* @_ZNK3WTF6VectorIhLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.539"* %0, i32 0) #16
  %102 = load i8, i8* %101, align 1
  %103 = add i32 %8, -1
  switch i8 %102, label %172 [
    i8 0, label %104
    i8 1, label %165
  ]

104:                                              ; preds = %100
  %105 = zext i32 %103 to i64
  %106 = and i64 %105, 1
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %172

108:                                              ; preds = %104
  %109 = lshr i32 %103, 1
  %110 = bitcast i16** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #16
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %3, align 8
  %111 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %109, i16** nonnull dereferenceable(8) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #16
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %108
  %114 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 1
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 1
  %119 = bitcast %"class.WTF::StringImpl"* %118 to i8*
  %120 = select i1 %117, i8* null, i8* %119
  %121 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 0
  %122 = load i8*, i8** %121, align 8
  %123 = getelementptr inbounds i8, i8* %122, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %120, i8* align 1 %123, i64 %105, i1 false)
  %124 = load i32, i32* %115, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %130, label %227

126:                                              ; preds = %108
  %127 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 0
  %128 = load i8*, i8** %127, align 8
  %129 = getelementptr inbounds i8, i8* %128, i64 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 536870912 null, i8* align 1 %129, i64 %105, i1 false)
  br label %130

130:                                              ; preds = %126, %113
  %131 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %132 = ptrtoint %"class.WTF::StringImpl"* %131 to i64
  %133 = icmp eq %"class.WTF::StringImpl"* %131, null
  br i1 %133, label %151, label %134

134:                                              ; preds = %130
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = and i32 %136, 2
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %151

139:                                              ; preds = %134
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %131, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  %142 = zext i32 %141 to i33
  %143 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %142, i33 1) #16
  %144 = extractvalue { i33, i1 } %143, 1
  %145 = extractvalue { i33, i1 } %143, 0
  %146 = icmp slt i33 %145, 0
  %147 = or i1 %144, %146
  br i1 %147, label %148, label %149, !prof !3

148:                                              ; preds = %139
  call void @llvm.trap() #16
  unreachable

149:                                              ; preds = %139
  %150 = trunc i33 %145 to i32
  store i32 %150, i32* %140, align 4
  br label %151

151:                                              ; preds = %130, %134, %149
  br i1 %112, label %227, label %152

152:                                              ; preds = %151
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  br i1 %156, label %159, label %161

159:                                              ; preds = %152
  %160 = add i32 %158, -1
  store i32 %160, i32* %157, align 4
  br label %161

161:                                              ; preds = %159, %152
  %162 = phi i32 [ %160, %159 ], [ %158, %152 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %227

164:                                              ; preds = %161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #16
  br label %227

165:                                              ; preds = %100
  %166 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %166) #16
  %167 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 0
  %168 = load i8*, i8** %167, align 8
  %169 = getelementptr inbounds i8, i8* %168, i64 1
  call void @_ZN3WTF6StringC1EPKcj(%"class.WTF::String"* nonnull %5, i8* %169, i32 %103) #16
  %170 = bitcast %"class.WTF::String"* %5 to i64*
  %171 = load i64, i64* %170, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %166) #16
  br label %227

172:                                              ; preds = %100, %104, %34, %93
  %173 = phi i64 [ 0, %100 ], [ 0, %104 ], [ %98, %93 ], [ 0, %34 ]
  %174 = load atomic i64, i64* @_ZZN5blink17CachedStorageArea19Uint8VectorToStringERKN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEENS0_12FormatOptionEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %175 = inttoptr i64 %174 to %"class.base::HistogramBase"*
  %176 = icmp eq i64 %174, 0
  br i1 %176, label %177, label %180

177:                                              ; preds = %172
  %178 = tail call %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.11, i64 0, i64 0), i32 0) #16
  %179 = ptrtoint %"class.base::HistogramBase"* %178 to i64
  store atomic i64 %179, i64* @_ZZN5blink17CachedStorageArea19Uint8VectorToStringERKN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEENS0_12FormatOptionEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %180

180:                                              ; preds = %172, %177
  %181 = phi %"class.base::HistogramBase"* [ %175, %172 ], [ %178, %177 ]
  tail call void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"* %181, i1 zeroext true) #16
  %182 = tail call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #16
  br i1 %182, label %183, label %188

183:                                              ; preds = %180
  %184 = bitcast %"class.logging::LogMessage"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %184) #16
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %6, i8* getelementptr inbounds ([72 x i8], [72 x i8]* @.str.12, i64 0, i64 0), i32 716, i32 2) #16
  %185 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %6, i64 0, i32 2
  %186 = bitcast %"class.std::__1::basic_ostringstream"* %185 to %"class.std::__1::basic_ostream"*
  %187 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %186, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0), i64 26) #16
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %184) #16
  br label %188

188:                                              ; preds = %180, %183
  %189 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %190 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %189, i64 0, i32 0, i32 0
  %191 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %190, align 8
  %192 = ptrtoint %"class.WTF::StringImpl"* %191 to i64
  %193 = icmp eq %"class.WTF::StringImpl"* %191, null
  br i1 %193, label %211, label %194

194:                                              ; preds = %188
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %196 = load atomic i32, i32* %195 monotonic, align 4
  %197 = and i32 %196, 2
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %211

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %191, i64 0, i32 0
  %201 = load i32, i32* %200, align 4
  %202 = zext i32 %201 to i33
  %203 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %202, i33 1) #16
  %204 = extractvalue { i33, i1 } %203, 1
  %205 = extractvalue { i33, i1 } %203, 0
  %206 = icmp slt i33 %205, 0
  %207 = or i1 %204, %206
  br i1 %207, label %208, label %209, !prof !3

208:                                              ; preds = %199
  call void @llvm.trap() #16
  unreachable

209:                                              ; preds = %199
  %210 = trunc i33 %205 to i32
  store i32 %210, i32* %200, align 4
  br label %211

211:                                              ; preds = %209, %194, %188
  %212 = inttoptr i64 %173 to %"class.WTF::StringImpl"*
  %213 = icmp eq i64 %173, 0
  br i1 %213, label %227, label %214

214:                                              ; preds = %211
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %216 = load atomic i32, i32* %215 monotonic, align 4
  %217 = and i32 %216, 2
  %218 = icmp eq i32 %217, 0
  %219 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 0
  %220 = load i32, i32* %219, align 4
  br i1 %218, label %221, label %223

221:                                              ; preds = %214
  %222 = add i32 %220, -1
  store i32 %222, i32* %219, align 4
  br label %223

223:                                              ; preds = %221, %214
  %224 = phi i32 [ %222, %221 ], [ %220, %214 ]
  %225 = icmp eq i32 %224, 0
  br i1 %225, label %226, label %227

226:                                              ; preds = %223
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %212) #16
  br label %227

227:                                              ; preds = %113, %43, %93, %165, %33, %79, %89, %92, %151, %161, %164, %226, %223, %211, %31, %16, %10
  %228 = phi i64 [ %14, %10 ], [ %14, %16 ], [ %14, %31 ], [ %192, %211 ], [ %192, %223 ], [ %192, %226 ], [ %132, %164 ], [ %132, %161 ], [ %132, %151 ], [ %60, %92 ], [ %60, %89 ], [ %60, %79 ], [ %98, %93 ], [ %171, %165 ], [ 0, %33 ], [ %44, %43 ], [ %114, %113 ]
  %229 = inttoptr i64 %228 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %229
}

; Function Attrs: nounwind ssp uwtable
define hidden %"struct.blink::CachedStorageArea::PendingMutation"* @_ZN5blink17CachedStorageArea18PopPendingMutationERKN3WTF6StringE(%"class.blink::CachedStorageArea"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.208", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 9
  %6 = getelementptr inbounds %"class.WTF::HashMap.198", %"class.WTF::HashMap.198"* %5, i64 0, i32 0
  %7 = tail call { %"struct.WTF::KeyValuePair.202"*, %"struct.WTF::KeyValuePair.202"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSI_ISD_EEEESJ_SC_E4findERKS1_(%"class.WTF::HashTable.199"* %6, %"class.WTF::String"* dereferenceable(8) %1) #16
  %8 = extractvalue { %"struct.WTF::KeyValuePair.202"*, %"struct.WTF::KeyValuePair.202"* } %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashMap.198", %"class.WTF::HashMap.198"* %5, i64 0, i32 0, i32 0
  %10 = load %"struct.WTF::KeyValuePair.202"*, %"struct.WTF::KeyValuePair.202"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 9, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %10, i64 %13
  %15 = icmp eq %"struct.WTF::KeyValuePair.202"* %8, %14
  br i1 %15, label %146, label %16

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::unique_ptr.208"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %3, i64 0, i32 0, i32 0, i32 0
  store %"struct.blink::CachedStorageArea::PendingMutation"* inttoptr (i64 -6148914691236517206 to %"struct.blink::CachedStorageArea::PendingMutation"*), %"struct.blink::CachedStorageArea::PendingMutation"** %18, align 8
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.std::__1::unique_ptr.208"*, %"class.std::__1::unique_ptr.208"** %19, align 8
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %8, i64 0, i32 1, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %20, i64 %23
  %25 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %24, i64 0, i32 0, i32 0, i32 0
  %26 = bitcast %"class.std::__1::unique_ptr.208"* %24 to i64*
  %27 = load i64, i64* %26, align 8
  store %"struct.blink::CachedStorageArea::PendingMutation"* null, %"struct.blink::CachedStorageArea::PendingMutation"** %25, align 8
  %28 = bitcast %"class.std::__1::unique_ptr.208"* %3 to i64*
  store i64 %27, i64* %28, align 8
  %29 = load %"class.std::__1::unique_ptr.208"*, %"class.std::__1::unique_ptr.208"** %19, align 8
  %30 = load i32, i32* %21, align 8
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %29, i64 %31
  %33 = add i32 %30, 1
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %29, i64 %34
  br label %36

36:                                               ; preds = %43, %16
  %37 = phi %"class.std::__1::unique_ptr.208"* [ %44, %43 ], [ %32, %16 ]
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %37, i64 0, i32 0, i32 0, i32 0
  %39 = load %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %38, align 8
  store %"struct.blink::CachedStorageArea::PendingMutation"* null, %"struct.blink::CachedStorageArea::PendingMutation"** %38, align 8
  %40 = icmp eq %"struct.blink::CachedStorageArea::PendingMutation"* %39, null
  br i1 %40, label %43, label %41

41:                                               ; preds = %36
  %42 = bitcast %"class.std::__1::unique_ptr.208"* %37 to %"struct.std::__1::default_delete.212"*
  tail call void @_ZNKSt3__114default_deleteIN5blink17CachedStorageArea15PendingMutationEEclEPS3_(%"struct.std::__1::default_delete.212"* %42, %"struct.blink::CachedStorageArea::PendingMutation"* nonnull %39) #16
  br label %43

43:                                               ; preds = %41, %36
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %37, i64 1
  %45 = icmp eq %"class.std::__1::unique_ptr.208"* %44, %35
  br i1 %45, label %46, label %36

46:                                               ; preds = %43
  %47 = load i32, i32* %21, align 8
  %48 = add i32 %47, 1
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = add i32 %50, -1
  %52 = icmp eq i32 %47, %51
  %53 = select i1 %52, i32 0, i32 %48
  store i32 %53, i32* %21, align 8
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %8, i64 0, i32 1, i32 2
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %53, %55
  br i1 %56, label %57, label %64

57:                                               ; preds = %46
  %58 = load %"struct.WTF::KeyValuePair.202"*, %"struct.WTF::KeyValuePair.202"** %9, align 8
  %59 = load i32, i32* %11, align 8
  %60 = zext i32 %59 to i64
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %58, i64 %60
  %62 = icmp eq %"struct.WTF::KeyValuePair.202"* %61, %8
  br i1 %62, label %64, label %63

63:                                               ; preds = %57
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSI_ISD_EEEESJ_SC_E5eraseEPKSE_(%"class.WTF::HashTable.199"* %6, %"struct.WTF::KeyValuePair.202"* %8) #16
  br label %64

64:                                               ; preds = %63, %57, %46
  %65 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %65) #16
  %66 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %66, align 8
  %67 = load %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %18, align 8
  %68 = getelementptr inbounds %"struct.blink::CachedStorageArea::PendingMutation", %"struct.blink::CachedStorageArea::PendingMutation"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  store %"class.WTF::StringImpl"* %69, %"class.WTF::StringImpl"** %66, align 8
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  %71 = ptrtoint %"struct.blink::CachedStorageArea::PendingMutation"* %67 to i64
  br i1 %70, label %118, label %72

72:                                               ; preds = %64
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %93

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = zext i32 %79 to i33
  %81 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %80, i33 1) #16
  %82 = extractvalue { i33, i1 } %81, 1
  %83 = extractvalue { i33, i1 } %81, 0
  %84 = icmp slt i33 %83, 0
  %85 = or i1 %82, %84
  br i1 %85, label %86, label %87, !prof !3

86:                                               ; preds = %77
  tail call void @llvm.trap() #16
  unreachable

87:                                               ; preds = %77
  %88 = trunc i33 %83 to i32
  store i32 %88, i32* %78, align 4
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %90 = icmp eq %"class.WTF::StringImpl"* %89, null
  br i1 %90, label %91, label %93

91:                                               ; preds = %87
  %92 = load i64, i64* %28, align 8
  br label %118

93:                                               ; preds = %72, %87
  %94 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 10
  %95 = getelementptr inbounds %"class.WTF::HashMap.214", %"class.WTF::HashMap.214"* %94, i64 0, i32 0
  %96 = call { %"struct.WTF::KeyValuePair.218"*, %"struct.WTF::KeyValuePair.218"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_S8_E4findERKS1_(%"class.WTF::HashTable.215"* %95, %"class.WTF::String"* nonnull dereferenceable(8) %4) #16
  %97 = extractvalue { %"struct.WTF::KeyValuePair.218"*, %"struct.WTF::KeyValuePair.218"* } %96, 0
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %97, i64 0, i32 1, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = add i32 %99, 1
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %97, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %102 = load i32, i32* %101, align 8
  %103 = add i32 %102, -1
  %104 = icmp eq i32 %99, %103
  %105 = select i1 %104, i32 0, i32 %100
  store i32 %105, i32* %98, align 8
  %106 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %97, i64 0, i32 1, i32 2
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %105, %107
  br i1 %108, label %109, label %120

109:                                              ; preds = %93
  %110 = getelementptr inbounds %"class.WTF::HashMap.214", %"class.WTF::HashMap.214"* %94, i64 0, i32 0, i32 0
  %111 = load %"struct.WTF::KeyValuePair.218"*, %"struct.WTF::KeyValuePair.218"** %110, align 8
  %112 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 10, i32 0, i32 1
  %113 = load i32, i32* %112, align 8
  %114 = zext i32 %113 to i64
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %111, i64 %114
  %116 = icmp eq %"struct.WTF::KeyValuePair.218"* %115, %97
  br i1 %116, label %120, label %117

117:                                              ; preds = %109
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_S8_E5eraseEPKSA_(%"class.WTF::HashTable.215"* %95, %"struct.WTF::KeyValuePair.218"* %97) #16
  br label %120

118:                                              ; preds = %91, %64
  %119 = phi i64 [ %92, %91 ], [ %71, %64 ]
  store %"struct.blink::CachedStorageArea::PendingMutation"* null, %"struct.blink::CachedStorageArea::PendingMutation"** %18, align 8
  br label %137

120:                                              ; preds = %93, %109, %117
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %122 = load i64, i64* %28, align 8
  store %"struct.blink::CachedStorageArea::PendingMutation"* null, %"struct.blink::CachedStorageArea::PendingMutation"** %18, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %123, label %137, label %124

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %124
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %130, %124 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %133
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #16
  br label %139

137:                                              ; preds = %118, %120
  %138 = phi i64 [ %122, %120 ], [ %119, %118 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #16
  store %"struct.blink::CachedStorageArea::PendingMutation"* null, %"struct.blink::CachedStorageArea::PendingMutation"** %18, align 8
  br label %144

139:                                              ; preds = %133, %136
  %140 = load %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %18, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %65) #16
  store %"struct.blink::CachedStorageArea::PendingMutation"* null, %"struct.blink::CachedStorageArea::PendingMutation"** %18, align 8
  %141 = icmp eq %"struct.blink::CachedStorageArea::PendingMutation"* %140, null
  br i1 %141, label %144, label %142

142:                                              ; preds = %139
  %143 = bitcast %"class.std::__1::unique_ptr.208"* %3 to %"struct.std::__1::default_delete.212"*
  call void @_ZNKSt3__114default_deleteIN5blink17CachedStorageArea15PendingMutationEEclEPS3_(%"struct.std::__1::default_delete.212"* nonnull %143, %"struct.blink::CachedStorageArea::PendingMutation"* nonnull %140) #16
  br label %144

144:                                              ; preds = %137, %139, %142
  %145 = phi i64 [ %138, %137 ], [ %122, %139 ], [ %122, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %146

146:                                              ; preds = %2, %144
  %147 = phi i64 [ %145, %144 ], [ 0, %2 ]
  %148 = inttoptr i64 %147 to %"struct.blink::CachedStorageArea::PendingMutation"*
  ret %"struct.blink::CachedStorageArea::PendingMutation"* %148
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CachedStorageArea32MaybeApplyNonLocalMutationForKeyERKN3WTF6StringES4_(%"class.blink::CachedStorageArea"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 10
  %5 = getelementptr inbounds %"class.WTF::HashMap.214", %"class.WTF::HashMap.214"* %4, i64 0, i32 0
  %6 = tail call { %"struct.WTF::KeyValuePair.218"*, %"struct.WTF::KeyValuePair.218"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_S8_E4findERKS1_(%"class.WTF::HashTable.215"* %5, %"class.WTF::String"* dereferenceable(8) %1) #16
  %7 = extractvalue { %"struct.WTF::KeyValuePair.218"*, %"struct.WTF::KeyValuePair.218"* } %6, 0
  %8 = getelementptr inbounds %"class.WTF::HashMap.214", %"class.WTF::HashMap.214"* %4, i64 0, i32 0, i32 0
  %9 = load %"struct.WTF::KeyValuePair.218"*, %"struct.WTF::KeyValuePair.218"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 10, i32 0, i32 1
  %11 = load i32, i32* %10, align 8
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %9, i64 %12
  %14 = icmp eq %"struct.WTF::KeyValuePair.218"* %7, %13
  br i1 %14, label %15, label %24

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  %19 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %20 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %19, align 8
  br i1 %18, label %21, label %23

21:                                               ; preds = %15
  %22 = tail call zeroext i1 @_ZN5blink14StorageAreaMap10RemoveItemERKN3WTF6StringEPS2_(%"class.blink::StorageAreaMap"* %20, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* null) #16
  br label %72

23:                                               ; preds = %15
  tail call void @_ZN5blink14StorageAreaMap20SetItemIgnoringQuotaERKN3WTF6StringES4_(%"class.blink::StorageAreaMap"* %20, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2) #16
  br label %72

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %26 = load %"struct.blink::CachedStorageArea::PendingMutation"**, %"struct.blink::CachedStorageArea::PendingMutation"*** %25, align 8
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %7, i64 0, i32 1, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %26, i64 %29
  %31 = load %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %30, align 8
  %32 = getelementptr inbounds %"struct.blink::CachedStorageArea::PendingMutation", %"struct.blink::CachedStorageArea::PendingMutation"* %31, i64 0, i32 2
  %33 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %33, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %24
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %53

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #16
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %41
  tail call void @llvm.trap() #16
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %53

53:                                               ; preds = %51, %36, %24
  %54 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %55 = bitcast %"class.WTF::String"* %32 to i64*
  %56 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %32, i64 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  store i64 %54, i64* %55, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #16
  br label %72

72:                                               ; preds = %71, %68, %53, %21, %23
  ret void
}

declare void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_112UnpackSourceERKN3WTF6StringEPNS_4KURLEPS2_(%"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"*, %"class.WTF::String"* nocapture) unnamed_addr #0 {
  %4 = alloca %"class.WTF::Vector.703", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.blink::KURL", align 8
  %7 = bitcast %"class.WTF::Vector.703"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.WTF::Vector.703", %"class.WTF::Vector.703"* %4, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::Vector.703", %"class.WTF::Vector.703"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 16, i1 false) #16
  %10 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #16
  %11 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %12 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0), i8** %13, align 8
  %14 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 1, i32* %14, align 8
  call void @_ZNK3WTF6String5SplitERKNS_10StringViewEbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"* %0, %"class.WTF::StringView"* nonnull dereferenceable(24) %5, i1 zeroext true, %"class.WTF::Vector.703"* nonnull dereferenceable(16) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #16
  %15 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %15) #16
  %16 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.703"* nonnull %4, i32 0) #16
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %6, %"class.WTF::String"* dereferenceable(8) %16) #16
  %17 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %1, %"class.blink::KURL"* nonnull dereferenceable(112) %6) #16
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %15) #16
  %18 = call dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.703"* nonnull %4, i32 1) #16
  %19 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %18, i64 0, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %39, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %39

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i33
  %31 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %30, i33 1) #16
  %32 = extractvalue { i33, i1 } %31, 1
  %33 = extractvalue { i33, i1 } %31, 0
  %34 = icmp slt i33 %33, 0
  %35 = or i1 %32, %34
  br i1 %35, label %36, label %37, !prof !3

36:                                               ; preds = %27
  call void @llvm.trap() #16
  unreachable

37:                                               ; preds = %27
  %38 = trunc i33 %33 to i32
  store i32 %38, i32* %28, align 4
  br label %39

39:                                               ; preds = %37, %22, %3
  %40 = ptrtoint %"class.WTF::StringImpl"* %20 to i64
  %41 = bitcast %"class.WTF::String"* %2 to i64*
  %42 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %42, align 8
  store i64 %40, i64* %41, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #16
  br label %58

58:                                               ; preds = %39, %54, %57
  %59 = load %"class.WTF::String"*, %"class.WTF::String"** %8, align 8
  %60 = icmp eq %"class.WTF::String"* %59, null
  br i1 %60, label %94, label %61, !prof !2

61:                                               ; preds = %58
  %62 = bitcast %"class.WTF::String"* %59 to i8*
  %63 = load i32, i32* %9, align 4
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %92, label %65, !prof !3

65:                                               ; preds = %61
  %66 = zext i32 %63 to i64
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %59, i64 %66
  br label %68

68:                                               ; preds = %86, %65
  %69 = phi %"class.WTF::String"* [ %87, %86 ], [ %59, %65 ]
  %70 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %69, i64 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %71, null
  br i1 %72, label %86, label %73

73:                                               ; preds = %68
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %71, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %82

80:                                               ; preds = %73
  %81 = add i32 %79, -1
  store i32 %81, i32* %78, align 4
  br label %82

82:                                               ; preds = %80, %73
  %83 = phi i32 [ %81, %80 ], [ %79, %73 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %71) #16
  br label %86

86:                                               ; preds = %85, %82, %68
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %69, i64 1
  %88 = icmp eq %"class.WTF::String"* %87, %67
  br i1 %88, label %89, label %68

89:                                               ; preds = %86
  store i32 0, i32* %9, align 4
  %90 = bitcast %"class.WTF::Vector.703"* %4 to i8**
  %91 = load i8*, i8** %90, align 8
  br label %92

92:                                               ; preds = %89, %61
  %93 = phi i8* [ %91, %89 ], [ %62, %61 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %93) #16
  store %"class.WTF::String"* null, %"class.WTF::String"** %8, align 8
  br label %94

94:                                               ; preds = %58, %92
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CachedStorageArea15KeyChangeFailedERKN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEERKNS1_6StringE(%"class.blink::CachedStorageArea"*, %"class.WTF::Vector.539"* dereferenceable(16), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.std::__1::unique_ptr.208", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::KURL", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %12 = tail call %"class.WTF::StringImpl"* @_ZN5blink17CachedStorageArea19Uint8VectorToStringERKN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEENS0_12FormatOptionE(%"class.WTF::Vector.539"* dereferenceable(16) %1, i32 0)
  store %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"** %11, align 8
  %13 = bitcast %"class.std::__1::unique_ptr.208"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #16
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %5, i64 0, i32 0, i32 0, i32 0
  %15 = tail call %"struct.blink::CachedStorageArea::PendingMutation"* @_ZN5blink17CachedStorageArea18PopPendingMutationERKN3WTF6StringE(%"class.blink::CachedStorageArea"* %0, %"class.WTF::String"* dereferenceable(8) %2)
  store %"struct.blink::CachedStorageArea::PendingMutation"* %15, %"struct.blink::CachedStorageArea::PendingMutation"** %14, align 8
  %16 = icmp eq %"struct.blink::CachedStorageArea::PendingMutation"* %15, null
  br i1 %16, label %17, label %18

17:                                               ; preds = %3
  store %"struct.blink::CachedStorageArea::PendingMutation"* null, %"struct.blink::CachedStorageArea::PendingMutation"** %14, align 8
  br label %170

18:                                               ; preds = %3
  %19 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #16
  %20 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.blink::CachedStorageArea::PendingMutation", %"struct.blink::CachedStorageArea::PendingMutation"* %15, i64 0, i32 2, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  store %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"** %20, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %41, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i33
  %33 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #16
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !3

38:                                               ; preds = %29
  tail call void @llvm.trap() #16
  unreachable

39:                                               ; preds = %29
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %30, align 4
  br label %41

41:                                               ; preds = %18, %24, %39
  %42 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 10
  %43 = getelementptr inbounds %"class.WTF::HashMap.214", %"class.WTF::HashMap.214"* %42, i64 0, i32 0
  %44 = call { %"struct.WTF::KeyValuePair.218"*, %"struct.WTF::KeyValuePair.218"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_S8_E4findERKS1_(%"class.WTF::HashTable.215"* %43, %"class.WTF::String"* nonnull dereferenceable(8) %4) #16
  %45 = extractvalue { %"struct.WTF::KeyValuePair.218"*, %"struct.WTF::KeyValuePair.218"* } %44, 0
  %46 = getelementptr inbounds %"class.WTF::HashMap.214", %"class.WTF::HashMap.214"* %42, i64 0, i32 0, i32 0
  %47 = load %"struct.WTF::KeyValuePair.218"*, %"struct.WTF::KeyValuePair.218"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 10, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = zext i32 %49 to i64
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %47, i64 %50
  %52 = icmp eq %"struct.WTF::KeyValuePair.218"* %45, %51
  br i1 %52, label %53, label %102

53:                                               ; preds = %41
  %54 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #16
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %57 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %56, align 8
  %58 = call %"class.WTF::StringImpl"* @_ZNK5blink14StorageAreaMap7GetItemERKN3WTF6StringE(%"class.blink::StorageAreaMap"* %57, %"class.WTF::String"* nonnull dereferenceable(8) %4) #16
  store %"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"** %55, align 8
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  %61 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %56, align 8
  br i1 %60, label %62, label %64

62:                                               ; preds = %53
  %63 = call zeroext i1 @_ZN5blink14StorageAreaMap10RemoveItemERKN3WTF6StringEPS2_(%"class.blink::StorageAreaMap"* %61, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* null) #16
  br label %65

64:                                               ; preds = %53
  call void @_ZN5blink14StorageAreaMap20SetItemIgnoringQuotaERKN3WTF6StringES4_(%"class.blink::StorageAreaMap"* %61, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %6) #16
  br label %65

65:                                               ; preds = %64, %62
  %66 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %66) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %8) #16
  %67 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #16
  %68 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %68, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_112UnpackSourceERKN3WTF6StringEPNS_4KURLEPS2_(%"class.WTF::String"* dereferenceable(8) %2, %"class.blink::KURL"* nonnull %8, %"class.WTF::String"* nonnull %9)
  %69 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 4
  call void @_ZN5blink17CachedStorageArea19EnqueueStorageEventERKN3WTF6StringES4_S4_S4_S4_(%"class.blink::CachedStorageArea"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.WTF::String"* dereferenceable(8) %69, %"class.WTF::String"* nonnull dereferenceable(8) %9)
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %68, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %65
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #16
  br label %85

85:                                               ; preds = %65, %81, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #16
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %66) #16
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #16
  br label %101

101:                                              ; preds = %85, %97, %100
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #16
  br label %149

102:                                              ; preds = %41
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %45, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %104 = load %"struct.blink::CachedStorageArea::PendingMutation"**, %"struct.blink::CachedStorageArea::PendingMutation"*** %103, align 8
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %45, i64 0, i32 1, i32 1
  %106 = load i32, i32* %105, align 8
  %107 = zext i32 %106 to i64
  %108 = getelementptr inbounds %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %104, i64 %107
  %109 = load %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %108, align 8
  %110 = getelementptr inbounds %"struct.blink::CachedStorageArea::PendingMutation", %"struct.blink::CachedStorageArea::PendingMutation"* %109, i64 0, i32 2
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %130, label %113

113:                                              ; preds = %102
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %130

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = zext i32 %120 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #16
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !3

127:                                              ; preds = %118
  call void @llvm.trap() #16
  unreachable

128:                                              ; preds = %118
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %119, align 4
  br label %130

130:                                              ; preds = %128, %113, %102
  %131 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %132 = bitcast %"class.WTF::String"* %110 to i64*
  %133 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 0, i32 0, i32 0
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  store i64 %131, i64* %132, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %149, label %136

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %136
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %136
  %146 = phi i32 [ %144, %143 ], [ %142, %136 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %134) #16
  br label %149

149:                                              ; preds = %148, %145, %130, %101
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %150, null
  br i1 %151, label %165, label %152

152:                                              ; preds = %149
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  br i1 %156, label %159, label %161

159:                                              ; preds = %152
  %160 = add i32 %158, -1
  store i32 %160, i32* %157, align 4
  br label %161

161:                                              ; preds = %159, %152
  %162 = phi i32 [ %160, %159 ], [ %158, %152 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %150) #16
  br label %165

165:                                              ; preds = %164, %161, %149
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #16
  %166 = load %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %14, align 8
  store %"struct.blink::CachedStorageArea::PendingMutation"* null, %"struct.blink::CachedStorageArea::PendingMutation"** %14, align 8
  %167 = icmp eq %"struct.blink::CachedStorageArea::PendingMutation"* %166, null
  br i1 %167, label %170, label %168

168:                                              ; preds = %165
  %169 = bitcast %"class.std::__1::unique_ptr.208"* %5 to %"struct.std::__1::default_delete.212"*
  call void @_ZNKSt3__114default_deleteIN5blink17CachedStorageArea15PendingMutationEEclEPS3_(%"struct.std::__1::default_delete.212"* nonnull %169, %"struct.blink::CachedStorageArea::PendingMutation"* nonnull %166) #16
  br label %170

170:                                              ; preds = %17, %165, %168
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #16
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %170
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %171) #16
  br label %186

186:                                              ; preds = %170, %182, %185
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #16
  ret void
}

declare void @_ZN5blink14StorageAreaMap20SetItemIgnoringQuotaERKN3WTF6StringES4_(%"class.blink::StorageAreaMap"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CachedStorageArea10KeyDeletedERKN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEERKN4absl8optionalIS4_EERKNS1_6StringE(%"class.blink::CachedStorageArea"*, %"class.WTF::Vector.539"* dereferenceable(16), %"class.absl::optional.534"* dereferenceable(24), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.std::__1::unique_ptr.208", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::KURL", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #16
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %14 = tail call %"class.WTF::StringImpl"* @_ZN5blink17CachedStorageArea19Uint8VectorToStringERKN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEENS0_12FormatOptionE(%"class.WTF::Vector.539"* dereferenceable(16) %1, i32 0)
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %13, align 8
  %15 = bitcast %"class.std::__1::unique_ptr.208"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #16
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %6, i64 0, i32 0, i32 0, i32 0
  %17 = tail call %"struct.blink::CachedStorageArea::PendingMutation"* @_ZN5blink17CachedStorageArea18PopPendingMutationERKN3WTF6StringE(%"class.blink::CachedStorageArea"* %0, %"class.WTF::String"* dereferenceable(8) %3)
  store %"struct.blink::CachedStorageArea::PendingMutation"* %17, %"struct.blink::CachedStorageArea::PendingMutation"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %19 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %18, align 8
  %20 = icmp eq %"class.blink::StorageAreaMap"* %19, null
  %21 = icmp ne %"struct.blink::CachedStorageArea::PendingMutation"* %17, null
  %22 = or i1 %21, %20
  br i1 %22, label %42, label %23

23:                                               ; preds = %4
  %24 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #16
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %25, align 8
  call void @_ZN5blink17CachedStorageArea32MaybeApplyNonLocalMutationForKeyERKN3WTF6StringES4_(%"class.blink::CachedStorageArea"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* nonnull dereferenceable(8) %7)
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #16
  br label %41

41:                                               ; preds = %23, %37, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #16
  br label %42

42:                                               ; preds = %4, %41
  %43 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8, i8* %43, align 8, !range !4
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %109, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %47) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %8) #16
  %48 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #16
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %49, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_112UnpackSourceERKN3WTF6StringEPNS_4KURLEPS2_(%"class.WTF::String"* dereferenceable(8) %3, %"class.blink::KURL"* nonnull %8, %"class.WTF::String"* nonnull %9)
  %50 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #16
  %51 = load i8, i8* %43, align 8, !range !4
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %54, !prof !3

53:                                               ; preds = %46
  call void @llvm.trap() #16
  unreachable

54:                                               ; preds = %46
  %55 = getelementptr inbounds %"class.absl::optional.534", %"class.absl::optional.534"* %2, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %56 = call %"class.WTF::StringImpl"* @_ZN5blink17CachedStorageArea19Uint8VectorToStringERKN3WTF6VectorIhLj0ENS1_18PartitionAllocatorEEENS0_12FormatOptionE(%"class.WTF::Vector.539"* dereferenceable(16) %55, i32 0)
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %57, align 8
  %58 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #16
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %59, align 8
  %60 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %8, i64 0, i32 4
  call void @_ZN5blink17CachedStorageArea19EnqueueStorageEventERKN3WTF6StringES4_S4_S4_S4_(%"class.blink::CachedStorageArea"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::String"* nonnull dereferenceable(8) %11, %"class.WTF::String"* dereferenceable(8) %60, %"class.WTF::String"* nonnull dereferenceable(8) %9)
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %54
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #16
  br label %76

76:                                               ; preds = %54, %72, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #16
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #16
  br label %92

92:                                               ; preds = %76, %88, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #16
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %108, label %95

95:                                               ; preds = %92
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %104

102:                                              ; preds = %95
  %103 = add i32 %101, -1
  store i32 %103, i32* %100, align 4
  br label %104

104:                                              ; preds = %102, %95
  %105 = phi i32 [ %103, %102 ], [ %101, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %93) #16
  br label %108

108:                                              ; preds = %92, %104, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #16
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %47) #16
  br label %109

109:                                              ; preds = %42, %108
  %110 = load %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %16, align 8
  store %"struct.blink::CachedStorageArea::PendingMutation"* null, %"struct.blink::CachedStorageArea::PendingMutation"** %16, align 8
  %111 = icmp eq %"struct.blink::CachedStorageArea::PendingMutation"* %110, null
  br i1 %111, label %114, label %112

112:                                              ; preds = %109
  %113 = bitcast %"class.std::__1::unique_ptr.208"* %6 to %"struct.std::__1::default_delete.212"*
  call void @_ZNKSt3__114default_deleteIN5blink17CachedStorageArea15PendingMutationEEclEPS3_(%"struct.std::__1::default_delete.212"* nonnull %113, %"struct.blink::CachedStorageArea::PendingMutation"* nonnull %110) #16
  br label %114

114:                                              ; preds = %109, %112
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #16
  %115 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %116 = icmp eq %"class.WTF::StringImpl"* %115, null
  br i1 %116, label %130, label %117

117:                                              ; preds = %114
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = and i32 %119, 2
  %121 = icmp eq i32 %120, 0
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %115, i64 0, i32 0
  %123 = load i32, i32* %122, align 4
  br i1 %121, label %124, label %126

124:                                              ; preds = %117
  %125 = add i32 %123, -1
  store i32 %125, i32* %122, align 4
  br label %126

126:                                              ; preds = %124, %117
  %127 = phi i32 [ %125, %124 ], [ %123, %117 ]
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %129, label %130

129:                                              ; preds = %126
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %115) #16
  br label %130

130:                                              ; preds = %114, %126, %129
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17CachedStorageArea10AllDeletedEbRKN3WTF6StringE(%"class.blink::CachedStorageArea"*, i1 zeroext, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::DequeConstIterator", align 8
  %5 = alloca %"class.std::__1::unique_ptr.208", align 8
  %6 = alloca %"class.blink::KURL", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = bitcast %"class.std::__1::unique_ptr.208"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %5, i64 0, i32 0, i32 0, i32 0
  %13 = tail call %"struct.blink::CachedStorageArea::PendingMutation"* @_ZN5blink17CachedStorageArea18PopPendingMutationERKN3WTF6StringE(%"class.blink::CachedStorageArea"* %0, %"class.WTF::String"* dereferenceable(8) %2)
  store %"struct.blink::CachedStorageArea::PendingMutation"* %13, %"struct.blink::CachedStorageArea::PendingMutation"** %12, align 8
  %14 = icmp eq %"struct.blink::CachedStorageArea::PendingMutation"* %13, null
  br i1 %14, label %15, label %118

15:                                               ; preds = %3
  %16 = tail call noalias i8* @malloc(i64 72) #16
  %17 = bitcast i8* %16 to %"class.blink::StorageAreaMap"*
  tail call void @_ZN5blink14StorageAreaMapC1Em(%"class.blink::StorageAreaMap"* %17, i64 10485760) #16
  %18 = ptrtoint i8* %16 to i64
  %19 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 8
  %20 = getelementptr inbounds %"class.std::__1::unique_ptr.187", %"class.std::__1::unique_ptr.187"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %20, align 8
  %22 = bitcast %"class.std::__1::unique_ptr.187"* %19 to i64*
  store i64 %18, i64* %22, align 8
  %23 = icmp eq %"class.blink::StorageAreaMap"* %21, null
  br i1 %23, label %33, label %24

24:                                               ; preds = %15
  %25 = getelementptr inbounds %"class.blink::StorageAreaMap", %"class.blink::StorageAreaMap"* %21, i64 0, i32 0, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair.194"*, %"struct.WTF::KeyValuePair.194"** %25, align 8
  %27 = icmp eq %"struct.WTF::KeyValuePair.194"* %26, null
  br i1 %27, label %31, label %28, !prof !2

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StorageAreaMap", %"class.blink::StorageAreaMap"* %21, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.194"* nonnull %26, i32 %30) #16
  br label %31

31:                                               ; preds = %28, %24
  %32 = bitcast %"class.blink::StorageAreaMap"* %21 to i8*
  tail call void @free(i8* %32) #16
  br label %33

33:                                               ; preds = %31, %15
  %34 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 10, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 10, i32 0, i32 0
  %38 = load %"struct.WTF::KeyValuePair.218"*, %"struct.WTF::KeyValuePair.218"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 10, i32 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %38, i64 %41
  br i1 %36, label %118, label %43

43:                                               ; preds = %33
  %44 = icmp eq i32 %40, 0
  br i1 %44, label %52, label %45

45:                                               ; preds = %43, %49
  %46 = phi %"struct.WTF::KeyValuePair.218"* [ %50, %49 ], [ %38, %43 ]
  %47 = bitcast %"struct.WTF::KeyValuePair.218"* %46 to i64*
  %48 = load i64, i64* %47, align 8
  switch i64 %48, label %52 [
    i64 -1, label %49
    i64 0, label %49
  ]

49:                                               ; preds = %45, %45
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %46, i64 1
  %51 = icmp eq %"struct.WTF::KeyValuePair.218"* %50, %42
  br i1 %51, label %118, label %45

52:                                               ; preds = %45, %43
  %53 = phi %"struct.WTF::KeyValuePair.218"* [ %38, %43 ], [ %46, %45 ]
  %54 = icmp eq %"struct.WTF::KeyValuePair.218"* %53, %42
  br i1 %54, label %118, label %55

55:                                               ; preds = %52
  %56 = bitcast %"class.WTF::DequeConstIterator"* %4 to i8*
  %57 = getelementptr inbounds %"class.WTF::DequeConstIterator", %"class.WTF::DequeConstIterator"* %4, i64 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.WTF::DequeConstIterator", %"class.WTF::DequeConstIterator"* %4, i64 0, i32 0, i32 1
  br label %59

59:                                               ; preds = %55, %116
  %60 = phi %"struct.WTF::KeyValuePair.218"* [ %53, %55 ], [ %110, %116 ]
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %60, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #16
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %60, i64 0, i32 1, i32 2
  %63 = load i32, i32* %62, align 4, !noalias !69
  store %"class.WTF::Deque.219"* %61, %"class.WTF::Deque.219"** %57, align 8, !alias.scope !69
  store i32 %63, i32* %58, align 8, !alias.scope !69
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %60, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %67 = load i32, i32* %66, align 8
  br label %68

68:                                               ; preds = %59, %65
  %69 = phi i32 [ %67, %65 ], [ %63, %59 ]
  %70 = add i32 %69, -1
  store i32 %70, i32* %58, align 8
  %71 = call dereferenceable(8) %"struct.blink::CachedStorageArea::PendingMutation"** @_ZNK3WTF18DequeConstIteratorIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEdeEv(%"class.WTF::DequeConstIterator"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #16
  %72 = load %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %71, align 8
  %73 = getelementptr inbounds %"struct.blink::CachedStorageArea::PendingMutation", %"struct.blink::CachedStorageArea::PendingMutation"* %72, i64 0, i32 1
  %74 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %73, i64 0, i32 0, i32 0
  %75 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %74, align 8
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %80, label %77

77:                                               ; preds = %68
  %78 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %20, align 8
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %60, i64 0, i32 0
  call void @_ZN5blink14StorageAreaMap20SetItemIgnoringQuotaERKN3WTF6StringES4_(%"class.blink::StorageAreaMap"* %78, %"class.WTF::String"* dereferenceable(8) %79, %"class.WTF::String"* dereferenceable(8) %73) #16
  br label %80

80:                                               ; preds = %77, %68
  %81 = getelementptr inbounds %"class.WTF::Deque.219", %"class.WTF::Deque.219"* %61, i64 0, i32 0, i32 0, i32 0, i32 0
  %82 = load %"struct.blink::CachedStorageArea::PendingMutation"**, %"struct.blink::CachedStorageArea::PendingMutation"*** %81, align 8
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %60, i64 0, i32 1, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %82, i64 %85
  %87 = load %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %86, align 8
  %88 = getelementptr inbounds %"struct.blink::CachedStorageArea::PendingMutation", %"struct.blink::CachedStorageArea::PendingMutation"* %87, i64 0, i32 2
  %89 = bitcast %"class.WTF::String"* %88 to i64*
  %90 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %88, i64 0, i32 0, i32 0
  %91 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %90, align 8
  store i64 0, i64* %89, align 8
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %80
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #16
  br label %106

106:                                              ; preds = %105, %102, %80
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %60, i64 1
  %108 = icmp eq %"struct.WTF::KeyValuePair.218"* %107, %42
  br i1 %108, label %118, label %109

109:                                              ; preds = %106, %113
  %110 = phi %"struct.WTF::KeyValuePair.218"* [ %114, %113 ], [ %107, %106 ]
  %111 = bitcast %"struct.WTF::KeyValuePair.218"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  switch i64 %112, label %116 [
    i64 -1, label %113
    i64 0, label %113
  ]

113:                                              ; preds = %109, %109
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %110, i64 1
  %115 = icmp eq %"struct.WTF::KeyValuePair.218"* %114, %42
  br i1 %115, label %118, label %109

116:                                              ; preds = %109
  %117 = icmp eq %"struct.WTF::KeyValuePair.218"* %110, %42
  br i1 %117, label %118, label %59

118:                                              ; preds = %49, %106, %116, %113, %33, %52, %3
  br i1 %1, label %119, label %194

119:                                              ; preds = %118
  %120 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %120) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %120, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1Ev(%"class.blink::KURL"* nonnull %6) #16
  %121 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %121) #16
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %122, align 8
  call fastcc void @_ZN5blink12_GLOBAL__N_112UnpackSourceERKN3WTF6StringEPNS_4KURLEPS2_(%"class.WTF::String"* dereferenceable(8) %2, %"class.blink::KURL"* nonnull %6, %"class.WTF::String"* nonnull %7)
  %123 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %123) #16
  %124 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %124, align 8
  %125 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %125) #16
  %126 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %126, align 8
  %127 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #16
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %128, align 8
  %129 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %6, i64 0, i32 4
  call void @_ZN5blink17CachedStorageArea19EnqueueStorageEventERKN3WTF6StringES4_S4_S4_S4_(%"class.blink::CachedStorageArea"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.WTF::String"* nonnull dereferenceable(8) %10, %"class.WTF::String"* dereferenceable(8) %129, %"class.WTF::String"* nonnull dereferenceable(8) %7)
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %145, label %132

132:                                              ; preds = %119
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %138 = load i32, i32* %137, align 4
  br i1 %136, label %139, label %141

139:                                              ; preds = %132
  %140 = add i32 %138, -1
  store i32 %140, i32* %137, align 4
  br label %141

141:                                              ; preds = %139, %132
  %142 = phi i32 [ %140, %139 ], [ %138, %132 ]
  %143 = icmp eq i32 %142, 0
  br i1 %143, label %144, label %145

144:                                              ; preds = %141
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #16
  br label %145

145:                                              ; preds = %119, %141, %144
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #16
  %146 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  %147 = icmp eq %"class.WTF::StringImpl"* %146, null
  br i1 %147, label %161, label %148

148:                                              ; preds = %145
  %149 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %150 = load atomic i32, i32* %149 monotonic, align 4
  %151 = and i32 %150, 2
  %152 = icmp eq i32 %151, 0
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %146, i64 0, i32 0
  %154 = load i32, i32* %153, align 4
  br i1 %152, label %155, label %157

155:                                              ; preds = %148
  %156 = add i32 %154, -1
  store i32 %156, i32* %153, align 4
  br label %157

157:                                              ; preds = %155, %148
  %158 = phi i32 [ %156, %155 ], [ %154, %148 ]
  %159 = icmp eq i32 %158, 0
  br i1 %159, label %160, label %161

160:                                              ; preds = %157
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %146) #16
  br label %161

161:                                              ; preds = %145, %157, %160
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %125) #16
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %124, align 8
  %163 = icmp eq %"class.WTF::StringImpl"* %162, null
  br i1 %163, label %177, label %164

164:                                              ; preds = %161
  %165 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = and i32 %166, 2
  %168 = icmp eq i32 %167, 0
  %169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 0
  %170 = load i32, i32* %169, align 4
  br i1 %168, label %171, label %173

171:                                              ; preds = %164
  %172 = add i32 %170, -1
  store i32 %172, i32* %169, align 4
  br label %173

173:                                              ; preds = %171, %164
  %174 = phi i32 [ %172, %171 ], [ %170, %164 ]
  %175 = icmp eq i32 %174, 0
  br i1 %175, label %176, label %177

176:                                              ; preds = %173
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %162) #16
  br label %177

177:                                              ; preds = %161, %173, %176
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #16
  %178 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  %179 = icmp eq %"class.WTF::StringImpl"* %178, null
  br i1 %179, label %193, label %180

180:                                              ; preds = %177
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %178, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %189

187:                                              ; preds = %180
  %188 = add i32 %186, -1
  store i32 %188, i32* %185, align 4
  br label %189

189:                                              ; preds = %187, %180
  %190 = phi i32 [ %188, %187 ], [ %186, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %178) #16
  br label %193

193:                                              ; preds = %177, %189, %192
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %121) #16
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %120) #16
  br label %194

194:                                              ; preds = %193, %118
  %195 = load %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %12, align 8
  store %"struct.blink::CachedStorageArea::PendingMutation"* null, %"struct.blink::CachedStorageArea::PendingMutation"** %12, align 8
  %196 = icmp eq %"struct.blink::CachedStorageArea::PendingMutation"* %195, null
  br i1 %196, label %199, label %197

197:                                              ; preds = %194
  %198 = bitcast %"class.std::__1::unique_ptr.208"* %5 to %"struct.std::__1::default_delete.212"*
  call void @_ZNKSt3__114default_deleteIN5blink17CachedStorageArea15PendingMutationEEclEPS3_(%"struct.std::__1::default_delete.212"* nonnull %198, %"struct.blink::CachedStorageArea::PendingMutation"* nonnull %195) #16
  br label %199

199:                                              ; preds = %194, %197
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #16
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5blink17CachedStorageArea29ShouldSendOldValueOnMutationsEb(%"class.blink::CachedStorageArea"* nocapture, i1 zeroext) unnamed_addr #5 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 11
  store i8 %3, i8* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink17CachedStorageArea12OnMemoryDumpERKN4base11trace_event14MemoryDumpArgsEPNS2_17ProcessMemoryDumpE(%"class.blink::CachedStorageArea"*, %"struct.base::trace_event::MemoryDumpArgs"* nocapture readnone dereferenceable(16), %"class.base::trace_event::ProcessMemoryDump"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 3
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 0
  %12 = select i1 %11, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0)
  %13 = ptrtoint %"class.blink::CachedStorageArea"* %0 to i64
  %14 = tail call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.3, i64 0, i64 0), i8* %12, i64 %13) #16
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %8, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #16
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %5, %"class.WTF::String"* nonnull %4, i32 0) #16
  %16 = call %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #16
  %17 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %3
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  call void @_ZdlPv(i8* %23) #17
  br label %24

24:                                               ; preds = %3, %21
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #16
  %25 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %26 = load %"class.blink::StorageAreaMap"*, %"class.blink::StorageAreaMap"** %25, align 8
  %27 = icmp eq %"class.blink::StorageAreaMap"* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StorageAreaMap", %"class.blink::StorageAreaMap"* %26, i64 0, i32 4
  %30 = load i64, i64* %29, align 8
  br label %31

31:                                               ; preds = %24, %28
  %32 = phi i64 [ %30, %28 ], [ 0, %24 ]
  call void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"* %16, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump9kNameSizeE, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN4base11trace_event19MemoryAllocatorDump11kUnitsBytesE, i64 0, i64 0), i64 %32) #16
  %33 = getelementptr inbounds %"class.base::trace_event::MemoryAllocatorDump", %"class.base::trace_event::MemoryAllocatorDump"* %16, i64 0, i32 1
  %34 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %34) #16
  %35 = load i8*, i8** @_ZN3WTF10Partitions24kAllocatedObjectPoolNameE, align 8
  %36 = call i64 @strlen(i8* %35) #16
  %37 = icmp ugt i64 %36, -17
  br i1 %37, label %38, label %40

38:                                               ; preds = %31
  %39 = bitcast %"class.std::__1::basic_string"* %6 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %39) #18
  unreachable

40:                                               ; preds = %31
  %41 = icmp ult i64 %36, 23
  br i1 %41, label %51, label %42

42:                                               ; preds = %40
  %43 = add nuw i64 %36, 16
  %44 = and i64 %43, -16
  %45 = call i8* @_Znwm(i64 %44) #17
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %45, i8** %46, align 8
  %47 = or i64 %44, -9223372036854775808
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %36, i64* %49, align 8
  %50 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %56

51:                                               ; preds = %40
  %52 = trunc i64 %36 to i8
  %53 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  store i8 %52, i8* %54, align 1
  %55 = icmp eq i64 %36, 0
  br i1 %55, label %59, label %56

56:                                               ; preds = %51, %42
  %57 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %53, %51 ], [ %50, %42 ]
  %58 = phi i8* [ %34, %51 ], [ %45, %42 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %58, i8* align 1 %35, i64 %36, i1 false) #16
  br label %59

59:                                               ; preds = %51, %56
  %60 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %53, %51 ], [ %57, %56 ]
  %61 = phi i8* [ %34, %51 ], [ %58, %56 ]
  %62 = getelementptr inbounds i8, i8* %61, i64 %36
  store i8 0, i8* %62, align 1
  call void @_ZN4base11trace_event17ProcessMemoryDump16AddSuballocationERKNS0_23MemoryAllocatorDumpGuidERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"* %2, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8) %33, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #16
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %59
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %68) #17
  br label %69

69:                                               ; preds = %59, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %34) #16
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %85, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = load atomic i32, i32* %73 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %70, i64 0, i32 0
  %78 = load i32, i32* %77, align 4
  br i1 %76, label %79, label %81

79:                                               ; preds = %72
  %80 = add i32 %78, -1
  store i32 %80, i32* %77, align 4
  br label %81

81:                                               ; preds = %79, %72
  %82 = phi i32 [ %80, %79 ], [ %78, %72 ]
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %81
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %70) #16
  br label %85

85:                                               ; preds = %69, %81, %84
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #16
  ret i1 true
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #1

declare %"class.base::trace_event::MemoryAllocatorDump"* @_ZN4base11trace_event17ProcessMemoryDump19CreateAllocatorDumpERKNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #1

declare void @_ZN4base11trace_event19MemoryAllocatorDump9AddScalarEPKcS3_m(%"class.base::trace_event::MemoryAllocatorDump"*, i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN4base11trace_event17ProcessMemoryDump16AddSuballocationERKNS0_23MemoryAllocatorDumpGuidERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.base::trace_event::ProcessMemoryDump"*, %"class.base::trace_event::MemoryAllocatorDumpGuid"* dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZThn16_N5blink17CachedStorageArea12OnMemoryDumpERKN4base11trace_event14MemoryDumpArgsEPNS2_17ProcessMemoryDumpE(%"class.blink::CachedStorageArea"*, %"struct.base::trace_event::MemoryDumpArgs"* nocapture readnone dereferenceable(16), %"class.base::trace_event::ProcessMemoryDump"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::CachedStorageArea", %"class.blink::CachedStorageArea"* %0, i64 -1, i32 14
  %5 = bitcast %"class.blink::Persistent"* %4 to %"class.blink::CachedStorageArea"*
  %6 = tail call zeroext i1 @_ZN5blink17CachedStorageArea12OnMemoryDumpERKN4base11trace_event14MemoryDumpArgsEPNS2_17ProcessMemoryDumpE(%"class.blink::CachedStorageArea"* %5, %"struct.base::trace_event::MemoryDumpArgs"* dereferenceable(16) undef, %"class.base::trace_event::ProcessMemoryDump"* %2)
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF21ConditionalDestructorINS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.204"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.WTF::ConditionalDestructor.204"* %0 to %"class.std::__1::unique_ptr.208"**
  %3 = load %"class.std::__1::unique_ptr.208"*, %"class.std::__1::unique_ptr.208"** %2, align 8
  %4 = icmp eq %"class.std::__1::unique_ptr.208"* %3, null
  br i1 %4, label %70, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::ConditionalDestructor.204", %"class.WTF::ConditionalDestructor.204"* %0, i64 16
  %7 = bitcast %"class.WTF::ConditionalDestructor.204"* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.WTF::ConditionalDestructor.204", %"class.WTF::ConditionalDestructor.204"* %0, i64 20
  %10 = bitcast %"class.WTF::ConditionalDestructor.204"* %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %8, %11
  br i1 %12, label %67, label %13

13:                                               ; preds = %5
  %14 = icmp ugt i32 %8, %11
  %15 = zext i32 %11 to i64
  %16 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %3, i64 %15
  br i1 %14, label %30, label %17

17:                                               ; preds = %13
  %18 = zext i32 %8 to i64
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %3, i64 %18
  br label %20

20:                                               ; preds = %27, %17
  %21 = phi %"class.std::__1::unique_ptr.208"* [ %28, %27 ], [ %19, %17 ]
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %22, align 8
  store %"struct.blink::CachedStorageArea::PendingMutation"* null, %"struct.blink::CachedStorageArea::PendingMutation"** %22, align 8
  %24 = icmp eq %"struct.blink::CachedStorageArea::PendingMutation"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.std::__1::unique_ptr.208"* %21 to %"struct.std::__1::default_delete.212"*
  tail call void @_ZNKSt3__114default_deleteIN5blink17CachedStorageArea15PendingMutationEEclEPS3_(%"struct.std::__1::default_delete.212"* %26, %"struct.blink::CachedStorageArea::PendingMutation"* nonnull %23) #16
  br label %27

27:                                               ; preds = %25, %20
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %21, i64 1
  %29 = icmp eq %"class.std::__1::unique_ptr.208"* %28, %16
  br i1 %29, label %67, label %20

30:                                               ; preds = %13
  %31 = icmp eq i32 %11, 0
  br i1 %31, label %45, label %32

32:                                               ; preds = %30, %39
  %33 = phi %"class.std::__1::unique_ptr.208"* [ %40, %39 ], [ %3, %30 ]
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %34, align 8
  store %"struct.blink::CachedStorageArea::PendingMutation"* null, %"struct.blink::CachedStorageArea::PendingMutation"** %34, align 8
  %36 = icmp eq %"struct.blink::CachedStorageArea::PendingMutation"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.std::__1::unique_ptr.208"* %33 to %"struct.std::__1::default_delete.212"*
  tail call void @_ZNKSt3__114default_deleteIN5blink17CachedStorageArea15PendingMutationEEclEPS3_(%"struct.std::__1::default_delete.212"* %38, %"struct.blink::CachedStorageArea::PendingMutation"* nonnull %35) #16
  br label %39

39:                                               ; preds = %37, %32
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %33, i64 1
  %41 = icmp eq %"class.std::__1::unique_ptr.208"* %40, %16
  br i1 %41, label %42, label %32

42:                                               ; preds = %39
  %43 = load %"class.std::__1::unique_ptr.208"*, %"class.std::__1::unique_ptr.208"** %2, align 8
  %44 = load i32, i32* %7, align 8
  br label %45

45:                                               ; preds = %42, %30
  %46 = phi i32 [ %44, %42 ], [ %8, %30 ]
  %47 = phi %"class.std::__1::unique_ptr.208"* [ %43, %42 ], [ %3, %30 ]
  %48 = getelementptr inbounds %"class.WTF::ConditionalDestructor.204", %"class.WTF::ConditionalDestructor.204"* %0, i64 8
  %49 = bitcast %"class.WTF::ConditionalDestructor.204"* %48 to i32*
  %50 = load i32, i32* %49, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %47, i64 %51
  %53 = icmp eq i32 %46, %50
  br i1 %53, label %67, label %54

54:                                               ; preds = %45
  %55 = zext i32 %46 to i64
  %56 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %47, i64 %55
  br label %57

57:                                               ; preds = %64, %54
  %58 = phi %"class.std::__1::unique_ptr.208"* [ %65, %64 ], [ %56, %54 ]
  %59 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %59, align 8
  store %"struct.blink::CachedStorageArea::PendingMutation"* null, %"struct.blink::CachedStorageArea::PendingMutation"** %59, align 8
  %61 = icmp eq %"struct.blink::CachedStorageArea::PendingMutation"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %57
  %63 = bitcast %"class.std::__1::unique_ptr.208"* %58 to %"struct.std::__1::default_delete.212"*
  tail call void @_ZNKSt3__114default_deleteIN5blink17CachedStorageArea15PendingMutationEEclEPS3_(%"struct.std::__1::default_delete.212"* %63, %"struct.blink::CachedStorageArea::PendingMutation"* nonnull %60) #16
  br label %64

64:                                               ; preds = %62, %57
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %58, i64 1
  %66 = icmp eq %"class.std::__1::unique_ptr.208"* %65, %52
  br i1 %66, label %67, label %57

67:                                               ; preds = %27, %64, %45, %5
  %68 = bitcast %"class.WTF::ConditionalDestructor.204"* %0 to i8**
  %69 = load i8*, i8** %68, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %69) #16
  store %"class.std::__1::unique_ptr.208"* null, %"class.std::__1::unique_ptr.208"** %2, align 8
  br label %70

70:                                               ; preds = %1, %67
  ret void
}

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

declare zeroext i1 @_ZN5blink5mojom5blink16StorageAreaProxy6GetAllEN4mojo13PendingRemoteINS1_19StorageAreaObserverEEEPN3WTF6VectorINS3_9StructPtrINS1_8KeyValueEEELj0ENS7_18PartitionAllocatorEEE(%"class.blink::mojom::blink::StorageAreaProxy"*, %"class.mojo::PendingRemote"*, %"class.WTF::Vector.649"*) unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base9Histogram10FactoryGetEPKciiji(i8*, i32, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN5blink16StorageNamespace23DidDispatchStorageEventEPKNS_14SecurityOriginERKN3WTF6StringES7_S7_(%"class.blink::StorageNamespace"*, %"class.blink::SecurityOrigin"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF6String8FromUTF8EPKhm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF6StringC1EPKcj(%"class.WTF::String"*, i8*, i32) unnamed_addr #1

declare %"class.base::HistogramBase"* @_ZN4base16BooleanHistogram10FactoryGetEPKci(i8*, i32) local_unnamed_addr #1

declare void @_ZN4base13HistogramBase10AddBooleanEb(%"class.base::HistogramBase"*, i1 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #1

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #4

declare i32 @_ZN3WTF7unicode19ConvertLatin1ToUTF8EPPKhS2_PPcS4_(i8**, i8*, i8**, i8*) local_unnamed_addr #1

declare void @_ZN3WTF17StringUTF8AdaptorC1ERKNS_6StringENS_18UTF8ConversionModeE(%"class.WTF::StringUTF8Adaptor"*, %"class.WTF::String"* dereferenceable(8), i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3WTF17StringUTF8AdaptorD1Ev(%"class.WTF::StringUTF8Adaptor"*) unnamed_addr #4

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend"* noalias sret, %"class.WTF::StringAppend.694"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.694", %"class.WTF::StringAppend.694"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #16
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #16
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend.694", %"class.WTF::StringAppend.694"* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #16
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !3

43:                                               ; preds = %34
  tail call void @llvm.trap() #16
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %48

46:                                               ; preds = %24
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8* %47, %"class.WTF::StringImpl"* null)
  br label %61

48:                                               ; preds = %29, %44
  %49 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend"* %0, %"class.WTF::StringImpl"* %5, i8* %49, %"class.WTF::StringImpl"* nonnull %2)
  %50 = load atomic i32, i32* %30 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #16
  br label %61

61:                                               ; preds = %46, %57, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_EcvS1_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.697", align 8
  %3 = alloca i8*, align 8
  %4 = alloca i16*, align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = select i1 %10, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %9
  %12 = bitcast %"class.WTF::StringTypeAdapter.697"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #16
  %13 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #16
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.697"* nonnull %2, i8* %14) #16
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #16
  br i1 %18, label %62, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %6, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %7, %"class.WTF::StringImpl"* %6
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %62, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %3, align 8
  %28 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %3) #16
  %30 = load i8*, i8** %3, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend"* %0, i8* %30)
  %31 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %31, label %98, label %32

32:                                               ; preds = %26
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %38 = load i32, i32* %37, align 4
  br i1 %36, label %39, label %49

39:                                               ; preds = %32
  %40 = zext i32 %38 to i33
  %41 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #16
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %39
  call void @llvm.trap() #16
  unreachable

47:                                               ; preds = %39
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %37, align 4
  br label %49

49:                                               ; preds = %32, %47
  %50 = phi i32 [ %48, %47 ], [ %38, %32 ]
  %51 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %52 = load atomic i32, i32* %33 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %58

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %57 = add i32 %50, -1
  store i32 %57, i32* %56, align 4
  br label %58

58:                                               ; preds = %55, %49
  %59 = phi i32 [ %57, %55 ], [ %50, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %98

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #16
  br label %98

62:                                               ; preds = %19, %1
  %63 = bitcast i16** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %63) #16
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %4, align 8
  %64 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %65 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %64, i16** nonnull dereferenceable(8) %4) #16
  %66 = load i16*, i16** %4, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend"* %0, i16* %66)
  %67 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %67, label %98, label %68

68:                                               ; preds = %62
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %85

75:                                               ; preds = %68
  %76 = zext i32 %74 to i33
  %77 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %76, i33 1) #16
  %78 = extractvalue { i33, i1 } %77, 1
  %79 = extractvalue { i33, i1 } %77, 0
  %80 = icmp slt i33 %79, 0
  %81 = or i1 %78, %80
  br i1 %81, label %82, label %83, !prof !3

82:                                               ; preds = %75
  call void @llvm.trap() #16
  unreachable

83:                                               ; preds = %75
  %84 = trunc i33 %79 to i32
  store i32 %84, i32* %73, align 4
  br label %85

85:                                               ; preds = %68, %83
  %86 = phi i32 [ %84, %83 ], [ %74, %68 ]
  %87 = ptrtoint %"class.WTF::StringImpl"* %65 to i64
  %88 = load atomic i32, i32* %69 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %85
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %93 = add i32 %86, -1
  store i32 %93, i32* %92, align 4
  br label %94

94:                                               ; preds = %91, %85
  %95 = phi i32 [ %93, %91 ], [ %86, %85 ]
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %94
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #16
  br label %98

98:                                               ; preds = %97, %94, %62, %61, %58, %26
  %99 = phi i8* [ %27, %26 ], [ %27, %58 ], [ %27, %61 ], [ %63, %62 ], [ %63, %94 ], [ %63, %97 ]
  %100 = phi i64 [ 0, %26 ], [ %51, %58 ], [ %51, %61 ], [ 0, %62 ], [ %87, %94 ], [ %87, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #16
  %101 = inttoptr i64 %100 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %101
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend"*, %"class.WTF::StringImpl"*, i8*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #16
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #16
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %4, %8, %23
  %26 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #16
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %37
  tail call void @llvm.trap() #16
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %30, %45
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %54 = add i32 %48, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #16
  br label %59

59:                                               ; preds = %25, %55, %58
  br i1 %7, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #16
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.694"* %8) #16
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #16
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.694"* %8) #16
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #16
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i8* %26, i8* %27) #16
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #16
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #16
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #16
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #16
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #16
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0), i8* %41, i8* %42) #16
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #16
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #16
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #16
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.695", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.697", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.695", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.695"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.695", %"class.WTF::StringTypeAdapter.695"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.695", %"class.WTF::StringTypeAdapter.695"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.695"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.695"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.695"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #16
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.695", %"class.WTF::StringTypeAdapter.695"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.695", %"class.WTF::StringTypeAdapter.695"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #16
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.695"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.697"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #16
  %47 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #16
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.697"* nonnull %4, i8* %48) #16
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.695", %"class.WTF::StringTypeAdapter.695"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.696"* nonnull %49, i8* %1) #16
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.697"* nonnull %4, i8* %52) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #16
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.695", %"class.WTF::StringTypeAdapter.695"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.694"* %6) #16
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.696"* nonnull %53, i8* %56) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #16
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.695", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.697", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.695", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.695"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.695", %"class.WTF::StringTypeAdapter.695"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.695", %"class.WTF::StringTypeAdapter.695"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.695"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.695"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.695"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #16
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.695", %"class.WTF::StringTypeAdapter.695"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.695", %"class.WTF::StringTypeAdapter.695"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #16
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.695"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.697"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #16
  %47 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #16
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.697"* nonnull %4, i8* %48) #16
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.695", %"class.WTF::StringTypeAdapter.695"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.696"* nonnull %49, i16* %1) #16
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.697"* nonnull %4, i16* %52) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #16
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.695", %"class.WTF::StringTypeAdapter.695"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.694"* %6) #16
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.696"* nonnull %53, i16* %56) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #16
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.697"*, i8*) unnamed_addr #1

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.694"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.697", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.694", %"class.WTF::StringAppend.694"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.697"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.697", %"class.WTF::StringTypeAdapter.697"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.694", %"class.WTF::StringAppend.694"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.697"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.697"* nonnull %4, i8* %21) #16
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #16
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #16
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i8* %30, i8* %31) #16
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #16
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #16
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #16
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #16
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #16
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0), i8* %46, i8* %47) #16
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.15, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #16
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #16
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #16
  ret i32 %23
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.696"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.697"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.696"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.697"*, i16*) local_unnamed_addr #1

declare void @_ZN5blink26WebScopedVirtualTimePauser16PauseVirtualTimeEv(%"class.blink::WebScopedVirtualTimePauser"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink26WebScopedVirtualTimePauserD1Ev(%"class.blink::WebScopedVirtualTimePauser"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS3_17CachedStorageArea6SourceEE3$_0JNS3_26WebScopedVirtualTimePauserEEEEFvbEE7RunOnceEPNS0_13BindStateBaseEb"(%"class.base::internal::BindStateBase"*, i1 zeroext) #0 align 2 {
  %3 = alloca %"class.blink::WebScopedVirtualTimePauser", align 8
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.blink::WebScopedVirtualTimePauser"*
  %6 = bitcast %"class.blink::WebScopedVirtualTimePauser"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %6) #16
  call void @_ZN5blink26WebScopedVirtualTimePauserC1EOS0_(%"class.blink::WebScopedVirtualTimePauser"* nonnull %3, %"class.blink::WebScopedVirtualTimePauser"* dereferenceable(40) %5) #16
  call void @_ZN5blink26WebScopedVirtualTimePauserD1Ev(%"class.blink::WebScopedVirtualTimePauser"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %6) #16
  ret void
}

declare void @_ZN5blink26WebScopedVirtualTimePauserC1EOS0_(%"class.blink::WebScopedVirtualTimePauser"*, %"class.blink::WebScopedVirtualTimePauser"* dereferenceable(40)) unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS2_17CachedStorageArea6SourceEE3$_0JNS2_26WebScopedVirtualTimePauserEEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.blink::WebScopedVirtualTimePauser"*
  tail call void @_ZN5blink26WebScopedVirtualTimePauserD1Ev(%"class.blink::WebScopedVirtualTimePauser"* %5) #16
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #17
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #9

declare void @_ZN4mojo8internal18PendingRemoteStateC1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(8) %"struct.mojo::internal::PendingRemoteState"* @_ZN4mojo8internal18PendingRemoteStateaSEOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateD1Ev(%"struct.mojo::internal::PendingRemoteState"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal18PendingRemoteStateC1EOS1_(%"struct.mojo::internal::PendingRemoteState"*, %"struct.mojo::internal::PendingRemoteState"* dereferenceable(8)) unnamed_addr #4

declare void @_ZN4mojo8internal21InterfacePtrStateBaseC2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #1

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare void @_ZN4mojo8internal16BindingStateBase5CloseEv(%"class.mojo::internal::BindingStateBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo15MessageReceiverD2Ev(%"class.mojo::MessageReceiver"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4mojo8internal16BindingStateBaseD2Ev(%"class.mojo::internal::BindingStateBase"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN4mojo8internal21InterfacePtrStateBaseD2Ev(%"class.mojo::internal::InterfacePtrStateBase"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSF_ISA_EEEESG_S9_EELb0EED2Ev(%"class.WTF::ConditionalDestructor.216"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.WTF::ConditionalDestructor.216"* %0 to %"struct.WTF::KeyValuePair.218"**
  %3 = load %"struct.WTF::KeyValuePair.218"*, %"struct.WTF::KeyValuePair.218"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.218"* %3, null
  br i1 %4, label %48, label %5, !prof !2

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::ConditionalDestructor.216", %"class.WTF::ConditionalDestructor.216"* %0, i64 8
  %7 = bitcast %"class.WTF::ConditionalDestructor.216"* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %46, label %10

10:                                               ; preds = %5
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %43, %10
  %13 = phi i64 [ 0, %10 ], [ %44, %43 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %3, i64 %13
  %15 = bitcast %"struct.WTF::KeyValuePair.218"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, inttoptr (i64 -1 to i8*)
  br i1 %17, label %43, label %18

18:                                               ; preds = %12
  %19 = bitcast i8* %16 to %"class.WTF::StringImpl"*
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %3, i64 %13, i32 1, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.blink::CachedStorageArea::PendingMutation"**, %"struct.blink::CachedStorageArea::PendingMutation"*** %20, align 8
  %22 = icmp eq %"struct.blink::CachedStorageArea::PendingMutation"** %21, null
  br i1 %22, label %27, label %23

23:                                               ; preds = %18
  %24 = bitcast %"struct.blink::CachedStorageArea::PendingMutation"** %21 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %24) #16
  store %"struct.blink::CachedStorageArea::PendingMutation"** null, %"struct.blink::CachedStorageArea::PendingMutation"*** %20, align 8
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %14, i64 0, i32 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  br label %27

27:                                               ; preds = %23, %18
  %28 = phi %"class.WTF::StringImpl"* [ %26, %23 ], [ %19, %18 ]
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #16
  br label %43

43:                                               ; preds = %42, %39, %27, %12
  %44 = add nuw nsw i64 %13, 1
  %45 = icmp eq i64 %44, %11
  br i1 %45, label %46, label %12

46:                                               ; preds = %43, %5
  %47 = bitcast %"struct.WTF::KeyValuePair.218"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %47) #16
  store %"struct.WTF::KeyValuePair.218"* null, %"struct.WTF::KeyValuePair.218"** %2, align 8
  br label %48

48:                                               ; preds = %1, %46
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4mojo8internal20PendingReceiverStateD1Ev(%"struct.mojo::internal::PendingReceiverState"*) unnamed_addr #4

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_ZN5blink17CachedStorageArea15ResetConnectionEN4mojo13PendingRemoteINS4_5mojom5blink11StorageAreaEEEE10ValueDeltaEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSH_ISC_EEEESI_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.595"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.WTF::ConditionalDestructor.595"* %0 to %"struct.WTF::KeyValuePair.597"**
  %3 = load %"struct.WTF::KeyValuePair.597"*, %"struct.WTF::KeyValuePair.597"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.597"* %3, null
  br i1 %4, label %74, label %5, !prof !2

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::ConditionalDestructor.595", %"class.WTF::ConditionalDestructor.595"* %0, i64 8
  %7 = bitcast %"class.WTF::ConditionalDestructor.595"* %6 to i32*
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %72, label %10

10:                                               ; preds = %5
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %69, %10
  %13 = phi i64 [ 0, %10 ], [ %70, %69 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %3, i64 %13
  %15 = bitcast %"struct.WTF::KeyValuePair.597"* %14 to i8**
  %16 = load i8*, i8** %15, align 8
  %17 = icmp eq i8* %16, inttoptr (i64 -1 to i8*)
  br i1 %17, label %69, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %3, i64 %13, i32 1, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #16
  br label %35

35:                                               ; preds = %34, %31, %18
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %3, i64 %13, i32 1, i32 0, i32 0, i32 0
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #16
  br label %52

52:                                               ; preds = %51, %48, %35
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %14, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %55 = icmp eq %"class.WTF::StringImpl"* %54, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %54, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %54) #16
  br label %69

69:                                               ; preds = %68, %65, %52, %12
  %70 = add nuw nsw i64 %13, 1
  %71 = icmp eq i64 %70, %11
  br i1 %71, label %72, label %12

72:                                               ; preds = %69, %5
  %73 = bitcast %"struct.WTF::KeyValuePair.597"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %73) #16
  store %"struct.WTF::KeyValuePair.597"* null, %"struct.WTF::KeyValuePair.597"** %2, align 8
  br label %74

74:                                               ; preds = %1, %72
  ret void
}

declare void @_ZNK3WTF6String5SplitERKNS_10StringViewEbRNS_6VectorIS0_Lj0ENS_18PartitionAllocatorEEE(%"class.WTF::String"*, %"class.WTF::StringView"* dereferenceable(24), i1 zeroext, %"class.WTF::Vector.703"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::String"* @_ZN3WTF6VectorINS_6StringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.703"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.703", %"class.WTF::Vector.703"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.703", %"class.WTF::Vector.703"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::String"*, %"class.WTF::String"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 %25
  ret %"class.WTF::String"* %26
}

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #11

; Function Attrs: nounwind
declare void @_ZN5blink5mojom5blink8KeyValueD1Ev(%"class.blink::mojom::blink::KeyValue"*) unnamed_addr #4

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_17CachedStorageArea6SourceEEELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.664"*, %"class.blink::Member.666"*) local_unnamed_addr #12 comdat align 2 {
  %3 = bitcast %"class.blink::Member.666"* %1 to i8*
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %3) #16
  ret void
}

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

declare i32 @_ZNK3WTF10StringImpl6CopyToEPDsjj(%"class.WTF::StringImpl"*, i16*, i32, i32) local_unnamed_addr #1

declare i32 @_ZNK3WTF10StringImpl17ComputeASCIIFlagsEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #16
  %7 = load i8, i8* %6, align 8, !range !4
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #16
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #16
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #16
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #16
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #16
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #16
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #16
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #16
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #16
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #17
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #16
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #16
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #17
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #16
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #16
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #4

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #13

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #4

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #1

declare void @_ZN4mojo8internal16BindingStateBaseC2Ev(%"class.mojo::internal::BindingStateBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink5mojom5blink23StorageAreaObserverStubIN4mojo19RawPtrImplRefTraitsINS1_19StorageAreaObserverEEEED0Ev(%"class.blink::mojom::blink::StorageAreaObserverStub"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::mojom::blink::StorageAreaObserverStub"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

declare zeroext i1 @_ZN4mojo15MessageReceiver25PrefersSerializedMessagesEv(%"class.mojo::MessageReceiver"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5mojom5blink23StorageAreaObserverStubIN4mojo19RawPtrImplRefTraitsINS1_19StorageAreaObserverEEEE6AcceptEPNS3_7MessageE(%"class.blink::mojom::blink::StorageAreaObserverStub"*, %"class.mojo::Message"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::mojom::blink::StorageAreaObserverStub", %"class.blink::mojom::blink::StorageAreaObserverStub"* %0, i64 0, i32 1
  %4 = load %"class.blink::mojom::blink::StorageAreaObserver"*, %"class.blink::mojom::blink::StorageAreaObserver"** %3, align 8
  %5 = icmp eq %"class.blink::mojom::blink::StorageAreaObserver"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = tail call zeroext i1 @_ZN5blink5mojom5blink31StorageAreaObserverStubDispatch6AcceptEPNS1_19StorageAreaObserverEPN4mojo7MessageE(%"class.blink::mojom::blink::StorageAreaObserver"* nonnull %4, %"class.mojo::Message"* %1) #16
  br label %8

8:                                                ; preds = %2, %6
  %9 = phi i1 [ %7, %6 ], [ false, %2 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink5mojom5blink23StorageAreaObserverStubIN4mojo19RawPtrImplRefTraitsINS1_19StorageAreaObserverEEEE19AcceptWithResponderEPNS3_7MessageENSt3__110unique_ptrINS3_25MessageReceiverWithStatusENSA_14default_deleteISC_EEEE(%"class.blink::mojom::blink::StorageAreaObserverStub"*, %"class.mojo::Message"*, %"class.mojo::MessageReceiverWithStatus"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.blink::mojom::blink::StorageAreaObserverStub", %"class.blink::mojom::blink::StorageAreaObserverStub"* %0, i64 0, i32 1
  %5 = load %"class.blink::mojom::blink::StorageAreaObserver"*, %"class.blink::mojom::blink::StorageAreaObserver"** %4, align 8
  %6 = icmp eq %"class.blink::mojom::blink::StorageAreaObserver"* %5, null
  br i1 %6, label %9, label %7

7:                                                ; preds = %3
  %8 = tail call zeroext i1 @_ZN5blink5mojom5blink31StorageAreaObserverStubDispatch19AcceptWithResponderEPNS1_19StorageAreaObserverEPN4mojo7MessageENSt3__110unique_ptrINS5_25MessageReceiverWithStatusENS8_14default_deleteISA_EEEE(%"class.blink::mojom::blink::StorageAreaObserver"* nonnull %5, %"class.mojo::Message"* %1, %"class.mojo::MessageReceiverWithStatus"* %2) #16
  br label %16

9:                                                ; preds = %3
  %10 = icmp eq %"class.mojo::MessageReceiverWithStatus"* %2, null
  br i1 %10, label %16, label %11

11:                                               ; preds = %9
  %12 = bitcast %"class.mojo::MessageReceiverWithStatus"* %2 to void (%"class.mojo::MessageReceiverWithStatus"*)***
  %13 = load void (%"class.mojo::MessageReceiverWithStatus"*)**, void (%"class.mojo::MessageReceiverWithStatus"*)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.mojo::MessageReceiverWithStatus"*)*, void (%"class.mojo::MessageReceiverWithStatus"*)** %13, i64 1
  %15 = load void (%"class.mojo::MessageReceiverWithStatus"*)*, void (%"class.mojo::MessageReceiverWithStatus"*)** %14, align 8
  tail call void %15(%"class.mojo::MessageReceiverWithStatus"* nonnull %2) #16
  br label %16

16:                                               ; preds = %7, %9, %11
  %17 = phi i1 [ %8, %7 ], [ false, %9 ], [ false, %11 ]
  ret i1 %17
}

declare zeroext i1 @_ZN5blink5mojom5blink31StorageAreaObserverStubDispatch6AcceptEPNS1_19StorageAreaObserverEPN4mojo7MessageE(%"class.blink::mojom::blink::StorageAreaObserver"*, %"class.mojo::Message"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink5mojom5blink31StorageAreaObserverStubDispatch19AcceptWithResponderEPNS1_19StorageAreaObserverEPN4mojo7MessageENSt3__110unique_ptrINS5_25MessageReceiverWithStatusENS8_14default_deleteISA_EEEE(%"class.blink::mojom::blink::StorageAreaObserver"*, %"class.mojo::Message"*, %"class.mojo::MessageReceiverWithStatus"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4mojo8internal21InterfacePtrStateBase24InitializeEndpointClientEbbbNSt3__110unique_ptrINS_15MessageReceiverENS2_14default_deleteIS4_EEEEPKc(%"class.mojo::internal::InterfacePtrStateBase"*, i1 zeroext, i1 zeroext, i1 zeroext, %"class.mojo::MessageReceiver"*, i8*) local_unnamed_addr #1

declare void @_ZN5blink5mojom5blink16StorageAreaProxyC1EPN4mojo28MessageReceiverWithResponderE(%"class.blink::mojom::blink::StorageAreaProxy"*, %"class.mojo::MessageReceiverWithResponder"*) unnamed_addr #1

declare void @_ZN5blink14StorageAreaMapC1Em(%"class.blink::StorageAreaMap"*, i64) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.194"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %48, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.194"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #16
  ret void

8:                                                ; preds = %48, %4
  %9 = phi i64 [ 0, %4 ], [ %49, %48 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.194", %"struct.WTF::KeyValuePair.194"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair.194"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %48, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.194", %"struct.WTF::KeyValuePair.194"* %0, i64 %9, i32 1, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #16
  br label %31

31:                                               ; preds = %30, %27, %14
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.194", %"struct.WTF::KeyValuePair.194"* %10, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #16
  br label %48

48:                                               ; preds = %47, %44, %31, %8
  %49 = add nuw nsw i64 %9, 1
  %50 = icmp eq i64 %49, %5
  br i1 %50, label %6, label %8
}

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl6CreateEPKhj(i8*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.404"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERPS4_RS7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.402"*, %"class.blink::CachedStorageArea::Source"** dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.402", %"class.WTF::HashTable.402"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.404"*, %"struct.WTF::KeyValuePair.404"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.404"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.404"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.402"* %0, %"struct.WTF::KeyValuePair.404"* null)
  %9 = load %"struct.WTF::KeyValuePair.404"*, %"struct.WTF::KeyValuePair.404"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.404"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.402", %"class.WTF::HashTable.402"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::CachedStorageArea::Source"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::CachedStorageArea::Source"*, %"class.blink::CachedStorageArea::Source"** %40, align 8
  %42 = icmp eq %"class.blink::CachedStorageArea::Source"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::CachedStorageArea::Source"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::CachedStorageArea::Source"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.404"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.404"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::CachedStorageArea::Source"* %59, %43
  br i1 %64, label %184, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::CachedStorageArea::Source"* %59, inttoptr (i64 -1 to %"class.blink::CachedStorageArea::Source"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.404"* %60, %"struct.WTF::KeyValuePair.404"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::CachedStorageArea::Source"*, %"class.blink::CachedStorageArea::Source"** %73, align 8
  %75 = icmp eq %"class.blink::CachedStorageArea::Source"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.404"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.404"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #16
  %80 = getelementptr inbounds %"class.WTF::HashTable.402", %"class.WTF::HashTable.402"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load %"class.blink::CachedStorageArea::Source"*, %"class.blink::CachedStorageArea::Source"** %1, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi %"class.blink::CachedStorageArea::Source"* [ %86, %78 ], [ %43, %76 ], [ %43, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.404"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = ptrtoint %"class.blink::CachedStorageArea::Source"* %88 to i64
  %91 = bitcast %"struct.WTF::KeyValuePair.404"* %89 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %87
  %95 = bitcast %"class.blink::CachedStorageArea::Source"* %88 to i8*
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #16
  br label %97

97:                                               ; preds = %94, %87
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %89, i64 0, i32 1
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %119, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %119

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %109 = load i32, i32* %108, align 4
  %110 = zext i32 %109 to i33
  %111 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %110, i33 1) #16
  %112 = extractvalue { i33, i1 } %111, 1
  %113 = extractvalue { i33, i1 } %111, 0
  %114 = icmp slt i33 %113, 0
  %115 = or i1 %112, %114
  br i1 %115, label %116, label %117, !prof !3

116:                                              ; preds = %107
  tail call void @llvm.trap() #16
  unreachable

117:                                              ; preds = %107
  %118 = trunc i33 %113 to i32
  store i32 %118, i32* %108, align 4
  br label %119

119:                                              ; preds = %117, %102, %97
  %120 = ptrtoint %"class.WTF::StringImpl"* %100 to i64
  %121 = bitcast %"class.WTF::String"* %98 to i64*
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %98, i64 0, i32 0, i32 0
  %123 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %122, align 8
  store i64 %120, i64* %121, align 8
  %124 = icmp eq %"class.WTF::StringImpl"* %123, null
  br i1 %124, label %138, label %125

125:                                              ; preds = %119
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = and i32 %127, 2
  %129 = icmp eq i32 %128, 0
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %123, i64 0, i32 0
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %134

132:                                              ; preds = %125
  %133 = add i32 %131, -1
  store i32 %133, i32* %130, align 4
  br label %134

134:                                              ; preds = %132, %125
  %135 = phi i32 [ %133, %132 ], [ %131, %125 ]
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %138

137:                                              ; preds = %134
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %123) #16
  br label %138

138:                                              ; preds = %119, %134, %137
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS2_6StringEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSB_IS8_EEEEEEvPT_(%"struct.WTF::KeyValuePair.404"* %89) #16
  %139 = getelementptr inbounds %"class.WTF::HashTable.402", %"class.WTF::HashTable.402"* %0, i64 0, i32 2
  %140 = load i32, i32* %139, align 4
  %141 = add i32 %140, 1
  store i32 %141, i32* %139, align 4
  %142 = getelementptr inbounds %"class.WTF::HashTable.402", %"class.WTF::HashTable.402"* %0, i64 0, i32 3
  %143 = load i32, i32* %142, align 8
  %144 = add i32 %143, %141
  %145 = shl i32 %144, 1
  %146 = load i32, i32* %12, align 8
  %147 = icmp ult i32 %145, %146
  br i1 %147, label %150, label %148

148:                                              ; preds = %138
  %149 = tail call %"struct.WTF::KeyValuePair.404"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.402"* %0, %"struct.WTF::KeyValuePair.404"* %89)
  br label %184

150:                                              ; preds = %138
  %151 = mul i32 %141, 6
  %152 = icmp ult i32 %151, %146
  %153 = icmp ugt i32 %146, 8
  %154 = and i1 %152, %153
  br i1 %154, label %155, label %184

155:                                              ; preds = %150
  %156 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %157 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %156, i64 0, i32 1
  %158 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %157) #16
  %159 = icmp eq i8* %158, null
  br i1 %159, label %160, label %162, !prof !3

160:                                              ; preds = %155
  %161 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %157, i8* %161) #16
  br label %162

162:                                              ; preds = %160, %155
  %163 = phi i8* [ %161, %160 ], [ %158, %155 ]
  %164 = bitcast i8* %163 to %"class.blink::ThreadState"**
  %165 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %165, i64 0, i32 6
  %167 = load i8, i8* %166, align 8, !range !4
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %173, label %169

169:                                              ; preds = %162
  %170 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %165, i64 0, i32 16
  %171 = load i32, i32* %170, align 4
  %172 = icmp eq i32 %171, 1
  br i1 %172, label %184, label %173

173:                                              ; preds = %162, %169
  %174 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %165, i64 0, i32 13
  %175 = load i64, i64* %174, align 8
  %176 = icmp eq i64 %175, 0
  br i1 %176, label %177, label %184

177:                                              ; preds = %173
  %178 = load i32, i32* %12, align 8
  %179 = lshr i32 %178, 1
  %180 = zext i32 %179 to i64
  %181 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS2_12KeyValuePairIS7_NS2_6StringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm(i64 %180) #16
  %182 = bitcast %"class.blink::HeapHashTableBacking"* %181 to %"struct.WTF::KeyValuePair.404"*
  %183 = tail call %"struct.WTF::KeyValuePair.404"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.402"* %0, %"struct.WTF::KeyValuePair.404"* %182, i32 %179, %"struct.WTF::KeyValuePair.404"* %89) #16
  br label %184

184:                                              ; preds = %58, %169, %150, %148, %177, %173
  %185 = phi i8 [ 1, %173 ], [ 1, %177 ], [ 1, %148 ], [ 1, %150 ], [ 1, %169 ], [ 0, %58 ]
  %186 = phi %"struct.WTF::KeyValuePair.404"* [ %89, %173 ], [ %183, %177 ], [ %149, %148 ], [ %89, %150 ], [ %89, %169 ], [ %60, %58 ]
  %187 = insertvalue { %"struct.WTF::KeyValuePair.404"*, i8 } undef, %"struct.WTF::KeyValuePair.404"* %186, 0
  %188 = insertvalue { %"struct.WTF::KeyValuePair.404"*, i8 } %187, i8 %185, 1
  ret { %"struct.WTF::KeyValuePair.404"*, i8 } %188
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.404"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.402"*, %"struct.WTF::KeyValuePair.404"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.402", %"class.WTF::HashTable.402"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.402", %"class.WTF::HashTable.402"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #16
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %23, i8* %24) #16
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #16
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #16
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #16
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.404"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb(%"class.WTF::HashTable.402"* %0, i32 %35, %"struct.WTF::KeyValuePair.404"* %1, i8* nonnull dereferenceable(1) %4) #16
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #16
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS2_12KeyValuePairIS7_NS2_6StringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #16
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"struct.WTF::KeyValuePair.404"*
  %44 = call %"struct.WTF::KeyValuePair.404"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.402"* %0, %"struct.WTF::KeyValuePair.404"* %43, i32 %40, %"struct.WTF::KeyValuePair.404"* %1) #16
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.404"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.404"* %46
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS2_6StringEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSB_IS8_EEEEEEvPT_(%"struct.WTF::KeyValuePair.404"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %97, label %4

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #16
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #16
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 9
  %16 = load i8, i8* %15, align 1, !range !4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %97, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 13
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %23, i64 0, i32 0, i32 0
  %25 = bitcast %"struct.WTF::KeyValuePair.404"* %0 to i64*
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %94, label %28

28:                                               ; preds = %18
  %29 = inttoptr i64 %26 to i8*
  %30 = and i64 %26, -131072
  %31 = inttoptr i64 %30 to i8*
  %32 = getelementptr inbounds i8, i8* %31, i64 4138
  %33 = load i8, i8* %32, align 2
  %34 = icmp eq i8 %33, 1
  br i1 %34, label %35, label %37

35:                                               ; preds = %28
  %36 = getelementptr inbounds i8, i8* %31, i64 4160
  br label %74

37:                                               ; preds = %28
  %38 = getelementptr inbounds i8, i8* %31, i64 4400
  %39 = bitcast i8* %38 to %"class.blink::ObjectStartBitmap"*
  %40 = bitcast i8* %38 to i8**
  %41 = bitcast i8* %38 to i64*
  %42 = load i64, i64* %41, align 16
  %43 = sub i64 %26, %42
  %44 = lshr i64 %43, 3
  %45 = lshr i64 %43, 6
  %46 = getelementptr inbounds %"class.blink::ObjectStartBitmap", %"class.blink::ObjectStartBitmap"* %39, i64 0, i32 1, i64 %45
  %47 = load atomic i8, i8* %46 acquire, align 1
  %48 = trunc i64 %44 to i32
  %49 = and i32 %48, 7
  %50 = shl i32 2, %49
  %51 = trunc i32 %50 to i8
  %52 = add i8 %51, -1
  %53 = and i8 %52, %47
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %55, label %61

55:                                               ; preds = %37, %55
  %56 = phi i64 [ %57, %55 ], [ %45, %37 ]
  %57 = add i64 %56, -1
  %58 = getelementptr inbounds %"class.blink::ObjectStartBitmap", %"class.blink::ObjectStartBitmap"* %39, i64 0, i32 1, i64 %57
  %59 = load atomic i8, i8* %58 acquire, align 1
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %55, label %61

61:                                               ; preds = %55, %37
  %62 = phi i64 [ %45, %37 ], [ %57, %55 ]
  %63 = phi i8 [ %53, %37 ], [ %59, %55 ]
  %64 = zext i8 %63 to i32
  %65 = tail call i32 @llvm.ctlz.i32(i32 %64, i1 true) #16, !range !72
  %66 = add nsw i32 %65, -24
  %67 = shl i64 %62, 3
  %68 = or i64 %67, 7
  %69 = sext i32 %66 to i64
  %70 = sub i64 %68, %69
  %71 = shl i64 %70, 3
  %72 = load i8*, i8** %40, align 16
  %73 = getelementptr inbounds i8, i8* %72, i64 %71
  br label %74

74:                                               ; preds = %35, %61
  %75 = phi i8* [ %36, %35 ], [ %73, %61 ]
  %76 = getelementptr inbounds i8, i8* %75, i64 8
  %77 = getelementptr inbounds i8, i8* %75, i64 4
  %78 = bitcast i8* %77 to i16*
  %79 = load atomic i16, i16* %78 acquire, align 2
  %80 = lshr i16 %79, 2
  %81 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %82 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %81, i64 0, i32 0
  %83 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %82, align 8
  %84 = zext i16 %80 to i64
  %85 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %83, i64 %84
  %86 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %85, align 8
  %87 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %86, i64 0, i32 0
  %88 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %87, align 8
  %89 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %90 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %90, i64 5
  %92 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %91, align 8
  tail call void %92(%"class.blink::Visitor"* %24, i8* nonnull %29, i8* %76, void (%"class.blink::Visitor"*, i8*)* %88) #16
  %93 = load i64, i64* %19, align 8
  br label %94

94:                                               ; preds = %18, %74
  %95 = phi i64 [ %21, %18 ], [ %93, %74 ]
  %96 = add i64 %95, -1
  store i64 %96, i64* %19, align 8
  br label %97

97:                                               ; preds = %1, %11, %94
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.404"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb(%"class.WTF::HashTable.402"*, i32, %"struct.WTF::KeyValuePair.404"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #16
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #16
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.23, i64 0, i64 0)) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.402", %"class.WTF::HashTable.402"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.404"*, %"struct.WTF::KeyValuePair.404"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.404"* %32, null
  br i1 %33, label %116, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.404"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #16
  br i1 %38, label %39, label %116

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.402", %"class.WTF::HashTable.402"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.404"*, %"struct.WTF::KeyValuePair.404"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS2_12KeyValuePairIS7_NS2_6StringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #16
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"struct.WTF::KeyValuePair.404"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %113, %39
  %48 = phi %"struct.WTF::KeyValuePair.404"* [ null, %39 ], [ %65, %113 ]
  %49 = bitcast %"class.WTF::HashTable.402"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #16
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.404"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.404"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.402"* %0, %"struct.WTF::KeyValuePair.404"* %42, i32 %1, %"struct.WTF::KeyValuePair.404"* %48)
  br label %116

58:                                               ; preds = %39, %113
  %59 = phi i64 [ %114, %113 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.404"* [ %65, %113 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.404"*, %"struct.WTF::KeyValuePair.404"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.404"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.404"* %64, %"struct.WTF::KeyValuePair.404"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair.404"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair.404"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %113

70:                                               ; preds = %58
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %45, i64 %59, i32 1, i32 0, i32 0
  %72 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %71, align 8
  %73 = icmp eq %"class.WTF::StringImpl"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %72, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %74
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %74
  %84 = phi i32 [ %82, %81 ], [ %80, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %72) #16
  br label %87

87:                                               ; preds = %70, %83, %86
  %88 = load i64, i64* %66, align 8
  %89 = bitcast %"struct.WTF::KeyValuePair.404"* %64 to i64*
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %45, i64 %59, i32 1
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %61, i64 %59, i32 1
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %91, i64 0, i32 0, i32 0
  %93 = bitcast %"class.WTF::String"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.WTF::String"* %90 to i64*
  store i64 %94, i64* %95, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %92, align 8
  %96 = load %"struct.WTF::KeyValuePair.404"*, %"struct.WTF::KeyValuePair.404"** %31, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %96, i64 %59, i32 1, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %87
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #16
  br label %113

113:                                              ; preds = %112, %109, %87, %68
  %114 = add nuw nsw i64 %59, 1
  %115 = icmp eq i64 %114, %43
  br i1 %115, label %47, label %58

116:                                              ; preds = %34, %30, %55
  %117 = phi %"struct.WTF::KeyValuePair.404"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.404"* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.404"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.402"*, %"struct.WTF::KeyValuePair.404"*, i32, %"struct.WTF::KeyValuePair.404"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.402", align 8
  %6 = bitcast %"class.WTF::HashTable.402"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.WTF::HashTable.402", %"class.WTF::HashTable.402"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.402", %"class.WTF::HashTable.402"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.402", %"class.WTF::HashTable.402"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.402", %"class.WTF::HashTable.402"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.402"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.404"* %1, %"struct.WTF::KeyValuePair.404"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.402", %"class.WTF::HashTable.402"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.404"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.404"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.402", %"class.WTF::HashTable.402"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.404"*, %"struct.WTF::KeyValuePair.404"** %19, align 8
  br label %95

21:                                               ; preds = %138
  %22 = bitcast %"class.WTF::HashTable.402"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %139, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.404"* [ null, %15 ], [ %141, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.402"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #16
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.402"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.402"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #16
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair.404"*
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %91, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %89, label %54

54:                                               ; preds = %52
  %55 = zext i32 %41 to i64
  br label %56

56:                                               ; preds = %86, %54
  %57 = phi i64 [ 0, %54 ], [ %87, %86 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %50, i64 %57
  %59 = bitcast %"struct.WTF::KeyValuePair.404"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  switch i64 %60, label %61 [
    i64 -1, label %86
    i64 0, label %86
  ]

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %50, i64 %57, i32 1, i32 0, i32 0
  %63 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %62, align 8
  %64 = icmp eq %"class.WTF::StringImpl"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load atomic i32, i32* %66 monotonic, align 4
  %68 = and i32 %67, 2
  %69 = icmp eq i32 %68, 0
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %63, i64 0, i32 0
  %71 = load i32, i32* %70, align 4
  br i1 %69, label %72, label %74

72:                                               ; preds = %65
  %73 = add i32 %71, -1
  store i32 %73, i32* %70, align 4
  br label %74

74:                                               ; preds = %72, %65
  %75 = phi i32 [ %73, %72 ], [ %71, %65 ]
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %78

77:                                               ; preds = %74
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %63) #16
  br label %78

78:                                               ; preds = %77, %74, %61
  store atomic i64 -1, i64* %59 monotonic, align 8
  %79 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %83, label %81

81:                                               ; preds = %78
  %82 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #16
  br label %83

83:                                               ; preds = %81, %78
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %50, i64 %57, i32 1
  %85 = bitcast %"class.WTF::String"* %84 to i64*
  store i64 0, i64* %85, align 1
  br label %86

86:                                               ; preds = %83, %56, %56
  %87 = add nuw nsw i64 %57, 1
  %88 = icmp eq i64 %87, %55
  br i1 %88, label %89, label %56

89:                                               ; preds = %86, %52
  %90 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* %90) #16
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %91

91:                                               ; preds = %49, %89
  %92 = getelementptr inbounds %"class.WTF::HashTable.402", %"class.WTF::HashTable.402"* %0, i64 0, i32 3
  %93 = load i32, i32* %92, align 8
  %94 = and i32 %93, -2147483648
  store i32 %94, i32* %92, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret %"struct.WTF::KeyValuePair.404"* %29

95:                                               ; preds = %18, %138
  %96 = phi i32 [ %13, %18 ], [ %139, %138 ]
  %97 = phi %"struct.WTF::KeyValuePair.404"* [ %20, %18 ], [ %140, %138 ]
  %98 = phi %"struct.WTF::KeyValuePair.404"* [ null, %18 ], [ %141, %138 ]
  %99 = phi i32 [ 0, %18 ], [ %142, %138 ]
  %100 = zext i32 %99 to i64
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %97, i64 %100
  %102 = bitcast %"struct.WTF::KeyValuePair.404"* %101 to i64*
  %103 = load i64, i64* %102, align 8
  switch i64 %103, label %104 [
    i64 -1, label %138
    i64 0, label %138
  ]

104:                                              ; preds = %95
  %105 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %101, i64 0, i32 0
  %106 = call { %"struct.WTF::KeyValuePair.404"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE16LookupForWritingERKS5_(%"class.WTF::HashTable.402"* nonnull %5, %"class.blink::WeakMember.405"* dereferenceable(8) %105) #16
  %107 = extractvalue { %"struct.WTF::KeyValuePair.404"*, i8 } %106, 0
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %107, i64 0, i32 1, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %104
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #16
  br label %124

124:                                              ; preds = %104, %120, %123
  %125 = load i64, i64* %102, align 8
  %126 = bitcast %"struct.WTF::KeyValuePair.404"* %107 to i64*
  store i64 %125, i64* %126, align 8
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %107, i64 0, i32 1
  %128 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %97, i64 %100, i32 1
  %129 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %128, i64 0, i32 0, i32 0
  %130 = bitcast %"class.WTF::String"* %128 to i64*
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.WTF::String"* %127 to i64*
  store i64 %131, i64* %132, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %129, align 8
  %133 = load %"struct.WTF::KeyValuePair.404"*, %"struct.WTF::KeyValuePair.404"** %19, align 8
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %133, i64 %100
  %135 = icmp eq %"struct.WTF::KeyValuePair.404"* %134, %3
  %136 = select i1 %135, %"struct.WTF::KeyValuePair.404"* %107, %"struct.WTF::KeyValuePair.404"* %98
  %137 = load i32, i32* %12, align 8
  br label %138

138:                                              ; preds = %95, %95, %124
  %139 = phi i32 [ %96, %95 ], [ %137, %124 ], [ %96, %95 ]
  %140 = phi %"struct.WTF::KeyValuePair.404"* [ %97, %95 ], [ %133, %124 ], [ %97, %95 ]
  %141 = phi %"struct.WTF::KeyValuePair.404"* [ %98, %95 ], [ %136, %124 ], [ %98, %95 ]
  %142 = add i32 %99, 1
  %143 = icmp eq i32 %142, %139
  br i1 %143, label %21, label %95
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS2_12KeyValuePairIS7_NS2_6StringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.25, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS1_12KeyValuePairIS6_NS1_6StringEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS5_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEE14AllocateObjectISK_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS1_12KeyValuePairIS6_NS1_6StringEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS5_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS6_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEE14AllocateObjectISK_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS2_12KeyValuePairIS7_NS2_6StringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS2_12KeyValuePairIS7_NS2_6StringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS2_12KeyValuePairIS7_NS2_6StringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([532 x i8], [532 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS7_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #15 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #16
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #16
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.26, i64 0, i64 0), i8* %21, i8* %22) #16
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.27, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #16
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #16
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #16
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #16
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS2_12KeyValuePairIS7_NS2_6StringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink10WeakMemberINS3_17CachedStorageArea6SourceEEENS_12KeyValuePairIS7_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSF_IS9_EEEESG_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS3_12KeyValuePairIS8_NS3_6StringEEENS3_24KeyValuePairKeyExtractorENS3_10MemberHashIS7_EENS3_18HashMapValueTraitsINS3_10HashTraitsIS8_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.404"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %51, label %24

24:                                               ; preds = %18, %47
  %25 = phi i64 [ %49, %47 ], [ 0, %18 ]
  %26 = phi i32 [ %48, %47 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %22, i64 %25
  %28 = bitcast %"struct.WTF::KeyValuePair.404"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  switch i64 %29, label %30 [
    i64 -1, label %47
    i64 0, label %47
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %22, i64 %25, i32 1, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #16
  br label %47

47:                                               ; preds = %46, %43, %30, %24, %24
  %48 = add i32 %26, 1
  %49 = zext i32 %48 to i64
  %50 = icmp ugt i64 %21, %49
  br i1 %50, label %24, label %51

51:                                               ; preds = %47, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS2_12KeyValuePairIS7_NS2_6StringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink10WeakMemberINS3_17CachedStorageArea6SourceEEENS_12KeyValuePairIS7_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSF_IS9_EEEESG_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.404"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #16
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %174, %20
  ret void

33:                                               ; preds = %174, %30
  %34 = phi i64 [ 0, %30 ], [ %175, %174 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.404"* %35 to i64*
  br i1 %28, label %37, label %104

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %174
    i64 0, label %174
  ]

39:                                               ; preds = %37
  %40 = inttoptr i64 %38 to i8*
  %41 = and i64 %38, -131072
  %42 = inttoptr i64 %41 to i8*
  %43 = getelementptr inbounds i8, i8* %42, i64 4138
  %44 = load i8, i8* %43, align 2
  %45 = icmp eq i8 %44, 1
  br i1 %45, label %46, label %48

46:                                               ; preds = %39
  %47 = getelementptr inbounds i8, i8* %42, i64 4160
  br label %86

48:                                               ; preds = %39
  %49 = getelementptr inbounds i8, i8* %42, i64 4096
  %50 = bitcast i8* %49 to %"class.blink::NormalPage"*
  %51 = getelementptr inbounds i8, i8* %42, i64 4400
  %52 = bitcast i8* %51 to i8**
  %53 = bitcast i8* %51 to i64*
  %54 = load i64, i64* %53, align 16
  %55 = sub i64 %38, %54
  %56 = lshr i64 %55, 3
  %57 = lshr i64 %55, 6
  %58 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %50, i64 0, i32 2, i32 0, i32 1, i64 %57
  %59 = load atomic i8, i8* %58 acquire, align 1
  %60 = trunc i64 %56 to i32
  %61 = and i32 %60, 7
  %62 = shl i32 2, %61
  %63 = trunc i32 %62 to i8
  %64 = add i8 %63, -1
  %65 = and i8 %64, %59
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %73

67:                                               ; preds = %48, %67
  %68 = phi i64 [ %69, %67 ], [ %57, %48 ]
  %69 = add i64 %68, -1
  %70 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %50, i64 0, i32 2, i32 0, i32 1, i64 %69
  %71 = load atomic i8, i8* %70 acquire, align 1
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %67, label %73

73:                                               ; preds = %67, %48
  %74 = phi i64 [ %57, %48 ], [ %69, %67 ]
  %75 = phi i8 [ %65, %48 ], [ %71, %67 ]
  %76 = zext i8 %75 to i32
  %77 = tail call i32 @llvm.ctlz.i32(i32 %76, i1 true) #16, !range !72
  %78 = add nsw i32 %77, -24
  %79 = shl i64 %74, 3
  %80 = or i64 %79, 7
  %81 = sext i32 %78 to i64
  %82 = sub i64 %80, %81
  %83 = shl i64 %82, 3
  %84 = load i8*, i8** %52, align 16
  %85 = getelementptr inbounds i8, i8* %84, i64 %83
  br label %86

86:                                               ; preds = %73, %46
  %87 = phi i8* [ %47, %46 ], [ %85, %73 ]
  %88 = getelementptr inbounds i8, i8* %87, i64 8
  %89 = getelementptr inbounds i8, i8* %87, i64 4
  %90 = bitcast i8* %89 to i16*
  %91 = load atomic i16, i16* %90 acquire, align 2
  %92 = lshr i16 %91, 2
  %93 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %94 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %93, i64 0, i32 0
  %95 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %94, align 8
  %96 = zext i16 %92 to i64
  %97 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %95, i64 %96
  %98 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %97, align 8
  %99 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %98, i64 0, i32 0
  %100 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %99, align 8
  %101 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %102 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %101, i64 5
  %103 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %102, align 8
  tail call void %103(%"class.blink::Visitor"* %0, i8* nonnull %40, i8* %88, void (%"class.blink::Visitor"*, i8*)* %100) #16
  br label %174

104:                                              ; preds = %33
  %105 = load i64, i64* %36, align 8
  switch i64 %105, label %106 [
    i64 -1, label %174
    i64 0, label %174
  ]

106:                                              ; preds = %104
  %107 = load atomic i64, i64* %36 monotonic, align 8
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %174, label %109

109:                                              ; preds = %106
  %110 = inttoptr i64 %107 to i8*
  %111 = and i64 %107, -131072
  %112 = inttoptr i64 %111 to i8*
  %113 = getelementptr inbounds i8, i8* %112, i64 4138
  %114 = load i8, i8* %113, align 2
  %115 = icmp eq i8 %114, 1
  br i1 %115, label %116, label %118

116:                                              ; preds = %109
  %117 = getelementptr inbounds i8, i8* %112, i64 4160
  br label %156

118:                                              ; preds = %109
  %119 = getelementptr inbounds i8, i8* %112, i64 4096
  %120 = bitcast i8* %119 to %"class.blink::NormalPage"*
  %121 = getelementptr inbounds i8, i8* %112, i64 4400
  %122 = bitcast i8* %121 to i8**
  %123 = bitcast i8* %121 to i64*
  %124 = load i64, i64* %123, align 16
  %125 = sub i64 %107, %124
  %126 = lshr i64 %125, 3
  %127 = lshr i64 %125, 6
  %128 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %120, i64 0, i32 2, i32 0, i32 1, i64 %127
  %129 = load atomic i8, i8* %128 acquire, align 1
  %130 = trunc i64 %126 to i32
  %131 = and i32 %130, 7
  %132 = shl i32 2, %131
  %133 = trunc i32 %132 to i8
  %134 = add i8 %133, -1
  %135 = and i8 %134, %129
  %136 = icmp eq i8 %135, 0
  br i1 %136, label %137, label %143

137:                                              ; preds = %118, %137
  %138 = phi i64 [ %139, %137 ], [ %127, %118 ]
  %139 = add i64 %138, -1
  %140 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %120, i64 0, i32 2, i32 0, i32 1, i64 %139
  %141 = load atomic i8, i8* %140 acquire, align 1
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %137, label %143

143:                                              ; preds = %137, %118
  %144 = phi i64 [ %127, %118 ], [ %139, %137 ]
  %145 = phi i8 [ %135, %118 ], [ %141, %137 ]
  %146 = zext i8 %145 to i32
  %147 = tail call i32 @llvm.ctlz.i32(i32 %146, i1 true) #16, !range !72
  %148 = add nsw i32 %147, -24
  %149 = shl i64 %144, 3
  %150 = or i64 %149, 7
  %151 = sext i32 %148 to i64
  %152 = sub i64 %150, %151
  %153 = shl i64 %152, 3
  %154 = load i8*, i8** %122, align 16
  %155 = getelementptr inbounds i8, i8* %154, i64 %153
  br label %156

156:                                              ; preds = %143, %116
  %157 = phi i8* [ %117, %116 ], [ %155, %143 ]
  %158 = getelementptr inbounds i8, i8* %157, i64 8
  %159 = getelementptr inbounds i8, i8* %157, i64 4
  %160 = bitcast i8* %159 to i16*
  %161 = load atomic i16, i16* %160 acquire, align 2
  %162 = lshr i16 %161, 2
  %163 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %164 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %163, i64 0, i32 0
  %165 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %164, align 8
  %166 = zext i16 %162 to i64
  %167 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %165, i64 %166
  %168 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %167, align 8
  %169 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %168, i64 0, i32 0
  %170 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %169, align 8
  %171 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %172 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %171, i64 5
  %173 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %172, align 8
  tail call void %173(%"class.blink::Visitor"* %0, i8* nonnull %110, i8* %158, void (%"class.blink::Visitor"*, i8*)* %170) #16
  br label %174

174:                                              ; preds = %104, %104, %37, %37, %156, %106, %86
  %175 = add nuw nsw i64 %34, 1
  %176 = icmp eq i64 %175, %23
  br i1 %176, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.404"*, i8 } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE16LookupForWritingERKS5_(%"class.WTF::HashTable.402"*, %"class.blink::WeakMember.405"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.402", %"class.WTF::HashTable.402"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.404"*, %"struct.WTF::KeyValuePair.404"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.402", %"class.WTF::HashTable.402"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::WeakMember.405"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.404"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::CachedStorageArea::Source"*, %"class.blink::CachedStorageArea::Source"** %34, align 8
  %36 = icmp eq %"class.blink::CachedStorageArea::Source"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::CachedStorageArea::Source"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.404"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.404"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.404"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.404"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.404"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::CachedStorageArea::Source"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::CachedStorageArea::Source"*, %"class.blink::CachedStorageArea::Source"** %67, align 8
  %69 = icmp eq %"class.blink::CachedStorageArea::Source"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::CachedStorageArea::Source"* %63, inttoptr (i64 -1 to %"class.blink::CachedStorageArea::Source"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.404"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::CachedStorageArea::Source"*, %"class.blink::CachedStorageArea::Source"** %79, align 8
  %81 = icmp eq %"class.blink::CachedStorageArea::Source"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.404"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.404"*, i8 } undef, %"struct.WTF::KeyValuePair.404"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.404"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.404"*, i8 } %87
}

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #1

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"*) unnamed_addr #15 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 13, i32 0
  %3 = load %"class.blink::SecurityOrigin"*, %"class.blink::SecurityOrigin"** %2, align 8
  %4 = icmp eq %"class.blink::SecurityOrigin"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #16
  %7 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink14SecurityOriginD2Ev(%"class.blink::SecurityOrigin"* nonnull %3) #16
  %11 = bitcast %"class.blink::SecurityOrigin"* %3 to i8*
  tail call void @free(i8* %11) #16
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 3, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #16
  br label %29

29:                                               ; preds = %12, %25, %28
  %30 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #16
  br label %46

46:                                               ; preds = %29, %42, %45
  %47 = getelementptr inbounds %"class.blink::SecurityOrigin", %"class.blink::SecurityOrigin"* %0, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #16
  br label %63

63:                                               ; preds = %46, %59, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_16StorageNamespaceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %4 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %4, i64 2
  %6 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, align 8
  tail call void %6(%"class.blink::Visitor"* %0, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink14PersistentBaseINS_16StorageNamespaceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv, i8* %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14PersistentBaseINS_16StorageNamespaceELNS_31WeaknessPersistentConfigurationE1ELNS_38CrossThreadnessPersistentConfigurationE0EE20HandleWeakPersistentERKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StorageNamespace"**
  %4 = load %"class.blink::StorageNamespace"*, %"class.blink::StorageNamespace"** %3, align 8
  %5 = icmp eq %"class.blink::StorageNamespace"* %4, null
  br i1 %5, label %49, label %6

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #16
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !3

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #16
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %49, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::StorageNamespace", %"class.blink::StorageNamespace"* %4, i64 -1, i32 5, i32 0, i32 3
  %20 = bitcast i32* %19 to %"class.blink::HeapObjectHeader"*
  %21 = getelementptr inbounds %"class.blink::HeapObjectHeader", %"class.blink::HeapObjectHeader"* %20, i64 0, i32 2
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %49

25:                                               ; preds = %18
  store %"class.blink::StorageNamespace"* null, %"class.blink::StorageNamespace"** %3, align 8
  %26 = getelementptr inbounds i8, i8* %1, i64 8
  %27 = bitcast i8* %26 to %"class.blink::PersistentNode"**
  %28 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %29 = icmp eq %"class.blink::PersistentNode"* %28, null
  br i1 %29, label %49, label %30

30:                                               ; preds = %25
  %31 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %32 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %31, i64 0, i32 1
  %33 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %32) #16
  %34 = icmp eq i8* %33, null
  br i1 %34, label %35, label %37, !prof !3

35:                                               ; preds = %30
  %36 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %32, i8* %36) #16
  br label %37

37:                                               ; preds = %35, %30
  %38 = phi i8* [ %36, %35 ], [ %33, %30 ]
  %39 = bitcast i8* %38 to %"class.blink::ThreadState"**
  %40 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %40, i64 0, i32 4, i32 0, i32 0, i32 0
  %42 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %41, align 8
  %43 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %27, align 8
  %44 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %42, i64 0, i32 0, i32 0
  %45 = bitcast %"class.blink::PersistentRegion"* %42 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.blink::PersistentNode"* %43 to i64*
  store i64 %46, i64* %47, align 8
  %48 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %43, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %48, align 8
  store %"class.blink::PersistentNode"* %43, %"class.blink::PersistentNode"** %44, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %27, align 8
  br label %49

49:                                               ; preds = %18, %13, %37, %25, %2
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashMapINS_10WeakMemberINS_17CachedStorageArea6SourceEEEN3WTF6StringENS7_10MemberHashIS5_EENS7_10HashTraitsIS6_EENSB_IS8_EEEEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_10WeakMemberINS_17CachedStorageArea6SourceEEEN3WTF6StringENS6_10MemberHashIS4_EENS6_10HashTraitsIS5_EENSA_IS7_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_10WeakMemberINS_17CachedStorageArea6SourceEEEN3WTF6StringENS6_10MemberHashIS4_EENS6_10HashTraitsIS5_EENSA_IS7_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashMapINS_10WeakMemberINS_17CachedStorageArea6SourceEEEN3WTF6StringENS6_10MemberHashIS4_EENS6_10HashTraitsIS5_EENSA_IS7_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([285 x i8], [285 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashMapINS1_10WeakMemberINS1_17CachedStorageArea6SourceEEENS_6StringENS_10MemberHashIS5_EENS_10HashTraitsIS6_EENSA_IS7_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11HeapHashMapINS_10WeakMemberINS_17CachedStorageArea6SourceEEEN3WTF6StringENS6_10MemberHashIS4_EENS6_10HashTraitsIS5_EENSA_IS7_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"struct.blink::TraceDescriptor", align 8
  %4 = bitcast i8* %1 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = inttoptr i64 %5 to %"struct.WTF::KeyValuePair.404"*
  %7 = bitcast i8* %1 to i8**
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %9 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %9, i64 11
  %11 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8** %7) #16
  %12 = inttoptr i64 %5 to i8*
  %13 = bitcast %"struct.blink::TraceDescriptor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #16
  %14 = bitcast %"struct.blink::TraceDescriptor"* %3 to %"struct.WTF::KeyValuePair.404"**
  store %"struct.WTF::KeyValuePair.404"* %6, %"struct.WTF::KeyValuePair.404"** %14, align 8
  %15 = getelementptr inbounds %"struct.blink::TraceDescriptor", %"struct.blink::TraceDescriptor"* %3, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %15, align 8
  %16 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %17 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %17, i64 10
  %19 = load void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, i8*, i8**, i8*, void (%"class.blink::Visitor"*, i8*)*, %"struct.blink::TraceDescriptor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %18, align 8
  tail call void %19(%"class.blink::Visitor"* %0, i8* %12, i8** %7, i8* %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS2_12KeyValuePairIS7_NS2_6StringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, %"struct.blink::TraceDescriptor"* nonnull byval(%"struct.blink::TraceDescriptor") align 8 %3, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_17CachedStorageArea6SourceEEENS_12KeyValuePairIS6_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSE_IS8_EEEESF_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv, i8* %1) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11HeapHashMapINS_10WeakMemberINS_17CachedStorageArea6SourceEEEN3WTF6StringENS6_10MemberHashIS4_EENS6_10HashTraitsIS5_EENSA_IS7_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF29WeakProcessingHashTableHelperILNS_16WeakHandlingFlagE1EN5blink10WeakMemberINS2_17CachedStorageArea6SourceEEENS_12KeyValuePairIS6_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSE_IS8_EEEESF_NS2_13HeapAllocatorEE7ProcessERKNS2_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.404"**
  %4 = load %"struct.WTF::KeyValuePair.404"*, %"struct.WTF::KeyValuePair.404"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.404"* %4, null
  br i1 %5, label %64, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds i8, i8* %1, i64 8
  %8 = bitcast i8* %7 to i32*
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %4, i64 %10
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %11, i64 -1
  %13 = icmp ult %"struct.WTF::KeyValuePair.404"* %12, %4
  br i1 %13, label %64, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds i8, i8* %1, i64 16
  %16 = bitcast i8* %15 to i32*
  %17 = getelementptr inbounds i8, i8* %1, i64 12
  %18 = bitcast i8* %17 to i32*
  br label %19

19:                                               ; preds = %14, %60
  %20 = phi %"struct.WTF::KeyValuePair.404"* [ %12, %14 ], [ %61, %60 ]
  %21 = phi %"struct.WTF::KeyValuePair.404"* [ %11, %14 ], [ %20, %60 ]
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %20, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::CachedStorageArea::Source"*, %"class.blink::CachedStorageArea::Source"** %22, align 8
  %24 = ptrtoint %"class.blink::CachedStorageArea::Source"* %23 to i64
  switch i64 %24, label %25 [
    i64 -1, label %60
    i64 0, label %60
  ]

25:                                               ; preds = %19
  %26 = tail call zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_17CachedStorageArea6SourceEEEbPKT_(%"class.blink::LivenessBroker"* %0, %"class.blink::CachedStorageArea::Source"* nonnull %23) #16
  br i1 %26, label %60, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %21, i64 -1, i32 1, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #16
  br label %44

44:                                               ; preds = %43, %40, %27
  %45 = bitcast %"struct.WTF::KeyValuePair.404"* %20 to i64*
  store atomic i64 -1, i64* %45 monotonic, align 8
  %46 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %50, label %48

48:                                               ; preds = %44
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #16
  br label %50

50:                                               ; preds = %44, %48
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %21, i64 -1, i32 1
  %52 = bitcast %"class.WTF::String"* %51 to i64*
  store i64 0, i64* %52, align 1
  %53 = load i32, i32* %16, align 8
  %54 = add i32 %53, 1
  %55 = and i32 %54, 2147483647
  %56 = and i32 %53, -2147483648
  %57 = or i32 %55, %56
  store i32 %57, i32* %16, align 8
  %58 = load i32, i32* %18, align 4
  %59 = add i32 %58, -1
  store i32 %59, i32* %18, align 4
  br label %60

60:                                               ; preds = %19, %19, %50, %25
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %20, i64 -1
  %62 = load %"struct.WTF::KeyValuePair.404"*, %"struct.WTF::KeyValuePair.404"** %3, align 8
  %63 = icmp ult %"struct.WTF::KeyValuePair.404"* %61, %62
  br i1 %63, label %64, label %19

64:                                               ; preds = %60, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_17CachedStorageArea6SourceEEEbPKT_(%"class.blink::LivenessBroker"*, %"class.blink::CachedStorageArea::Source"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::CachedStorageArea::Source"* %1, null
  br i1 %3, label %73, label %4

4:                                                ; preds = %2
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #16
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #16
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = icmp eq %"class.blink::ThreadState"* %14, null
  br i1 %15, label %73, label %16

16:                                               ; preds = %11
  %17 = ptrtoint %"class.blink::CachedStorageArea::Source"* %1 to i64
  %18 = and i64 %17, -131072
  %19 = inttoptr i64 %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 4138
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %16
  %24 = getelementptr inbounds i8, i8* %19, i64 4160
  br label %63

25:                                               ; preds = %16
  %26 = getelementptr inbounds i8, i8* %19, i64 4096
  %27 = bitcast i8* %26 to %"class.blink::NormalPage"*
  %28 = getelementptr inbounds i8, i8* %19, i64 4400
  %29 = bitcast i8* %28 to i8**
  %30 = bitcast i8* %28 to i64*
  %31 = load i64, i64* %30, align 16
  %32 = sub i64 %17, %31
  %33 = lshr i64 %32, 3
  %34 = lshr i64 %32, 6
  %35 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %34
  %36 = load atomic i8, i8* %35 acquire, align 1
  %37 = trunc i64 %33 to i32
  %38 = and i32 %37, 7
  %39 = shl i32 2, %38
  %40 = trunc i32 %39 to i8
  %41 = add i8 %40, -1
  %42 = and i8 %41, %36
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %25, %44
  %45 = phi i64 [ %46, %44 ], [ %34, %25 ]
  %46 = add i64 %45, -1
  %47 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %46
  %48 = load atomic i8, i8* %47 acquire, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %44, label %50

50:                                               ; preds = %44, %25
  %51 = phi i64 [ %34, %25 ], [ %46, %44 ]
  %52 = phi i8 [ %42, %25 ], [ %48, %44 ]
  %53 = zext i8 %52 to i32
  %54 = tail call i32 @llvm.ctlz.i32(i32 %53, i1 true) #16, !range !72
  %55 = add nsw i32 %54, -24
  %56 = shl i64 %51, 3
  %57 = or i64 %56, 7
  %58 = sext i32 %55 to i64
  %59 = sub i64 %57, %58
  %60 = shl i64 %59, 3
  %61 = load i8*, i8** %29, align 16
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  br label %63

63:                                               ; preds = %23, %50
  %64 = phi i8* [ %24, %23 ], [ %62, %50 ]
  %65 = getelementptr inbounds i8, i8* %64, i64 4
  %66 = bitcast i8* %65 to i16*
  %67 = load atomic i16, i16* %66 acquire, align 2
  %68 = getelementptr inbounds i8, i8* %64, i64 6
  %69 = bitcast i8* %68 to i16*
  %70 = load i16, i16* %69, align 2
  %71 = and i16 %70, 1
  %72 = icmp ne i16 %71, 0
  br label %73

73:                                               ; preds = %11, %2, %63
  %74 = phi i1 [ %72, %63 ], [ true, %2 ], [ true, %11 ]
  ret i1 %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_11HeapHashMapINS_10WeakMemberINS_17CachedStorageArea6SourceEEEN3WTF6StringENS7_10MemberHashIS5_EENS7_10HashTraitsIS6_EENSB_IS8_EEEELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKSH_15TracePersistentEPNS_7VisitorEEEE10TrampolineESJ_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::HeapHashMap"**
  %5 = load %"class.blink::HeapHashMap"*, %"class.blink::HeapHashMap"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #16
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #16
  %7 = icmp eq %"class.blink::HeapHashMap"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::HeapHashMap"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashMapINS_10WeakMemberINS_17CachedStorageArea6SourceEEEN3WTF6StringENS6_10MemberHashIS4_EENS6_10HashTraitsIS5_EENSA_IS7_EEEEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #16
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #16
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

declare void @_ZN4mojo8internal21InterfacePtrStateBase4BindEPNS0_18PendingRemoteStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::InterfacePtrStateBase"*, %"struct.mojo::internal::PendingRemoteState"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #1

declare i32 @MojoCreateMessagePipe(%struct.MojoCreateMessagePipeOptions*, i32*, i32*) local_unnamed_addr #1

declare i32 @MojoClose(i32) local_unnamed_addr #1

declare void @_ZN4mojo8internal18PendingRemoteStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEEj(%"struct.mojo::internal::PendingRemoteState"*, %"class.mojo::ScopedHandleBase"*, i32) unnamed_addr #1

declare void @_ZN4mojo8internal20PendingReceiverStateC1ENS_16ScopedHandleBaseINS_17MessagePipeHandleEEE(%"struct.mojo::internal::PendingReceiverState"*, %"class.mojo::ScopedHandleBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo8internal12BindingStateIN5blink5mojom5blink19StorageAreaObserverENS_19RawPtrImplRefTraitsIS5_EEE4BindEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEE(%"class.mojo::internal::BindingState"*, %"struct.mojo::internal::PendingReceiverState"*, %"class.base::SequencedTaskRunner"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.mojo::internal::BindingState", %"class.mojo::internal::BindingState"* %0, i64 0, i32 0
  %5 = icmp eq %"class.base::SequencedTaskRunner"* %2, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  %9 = tail call i8* @_Znwm(i64 8) #17
  %10 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink35StorageAreaObserverRequestValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.mojo::internal::BindingState", %"class.mojo::internal::BindingState"* %0, i64 0, i32 1, i32 0
  %12 = bitcast i8* %9 to %"class.mojo::MessageReceiver"*
  tail call void @_ZN4mojo8internal16BindingStateBase12BindInternalEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEEPKcNSt3__110unique_ptrINS_15MessageReceiverENSA_14default_deleteISC_EEEEbbPNS_34MessageReceiverWithResponderStatusEj(%"class.mojo::internal::BindingStateBase"* %4, %"struct.mojo::internal::PendingReceiverState"* %1, %"class.base::SequencedTaskRunner"* nonnull %2, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink19StorageAreaObserver5Name_E, i64 0, i64 0), %"class.mojo::MessageReceiver"* nonnull %12, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiverWithResponderStatus"* %11, i32 0) #16
  %13 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %2, i64 0, i32 0, i32 1
  %14 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = atomicrmw sub i32* %14, i32 1 acq_rel
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %17, label %25

17:                                               ; preds = %6
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %13, i64 -2
  %19 = bitcast %"class.base::RefCountedThreadSafe"* %18 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %19) #16
  br label %25

20:                                               ; preds = %3
  %21 = tail call i8* @_Znwm(i64 8) #17
  %22 = bitcast i8* %21 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink5mojom5blink35StorageAreaObserverRequestValidatorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %22, align 8
  %23 = getelementptr inbounds %"class.mojo::internal::BindingState", %"class.mojo::internal::BindingState"* %0, i64 0, i32 1, i32 0
  %24 = bitcast i8* %21 to %"class.mojo::MessageReceiver"*
  tail call void @_ZN4mojo8internal16BindingStateBase12BindInternalEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEEPKcNSt3__110unique_ptrINS_15MessageReceiverENSA_14default_deleteISC_EEEEbbPNS_34MessageReceiverWithResponderStatusEj(%"class.mojo::internal::BindingStateBase"* %4, %"struct.mojo::internal::PendingReceiverState"* %1, %"class.base::SequencedTaskRunner"* null, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink5mojom5blink19StorageAreaObserver5Name_E, i64 0, i64 0), %"class.mojo::MessageReceiver"* nonnull %24, i1 zeroext false, i1 zeroext false, %"class.mojo::MessageReceiverWithResponderStatus"* %23, i32 0) #16
  br label %25

25:                                               ; preds = %20, %6, %17
  ret void
}

declare void @_ZN4mojo8internal16BindingStateBase12BindInternalEPNS0_20PendingReceiverStateE13scoped_refptrIN4base19SequencedTaskRunnerEEPKcNSt3__110unique_ptrINS_15MessageReceiverENSA_14default_deleteISC_EEEEbbPNS_34MessageReceiverWithResponderStatusEj(%"class.mojo::internal::BindingStateBase"*, %"struct.mojo::internal::PendingReceiverState"*, %"class.base::SequencedTaskRunner"*, i8*, %"class.mojo::MessageReceiver"*, i1 zeroext, i1 zeroext, %"class.mojo::MessageReceiverWithResponderStatus"*, i32) local_unnamed_addr #1

declare void @_ZN4mojo8internal21InterfacePtrStateBase4SwapEPS1_(%"class.mojo::internal::InterfacePtrStateBase"*, %"class.mojo::internal::InterfacePtrStateBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"struct.WTF::KeyValuePair.597"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_ZN5blink17CachedStorageArea15ResetConnectionEN4mojo13PendingRemoteINS3_5mojom5blink11StorageAreaEEEE10ValueDeltaEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSG_ISB_EEEESH_NS_18PartitionAllocatorEE6ExpandEPSC_(%"class.WTF::HashTable.594"* nocapture, %"struct.WTF::KeyValuePair.597"* readnone) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::HashTable.594", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.594", %"class.WTF::HashTable.594"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %32, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.594", %"class.WTF::HashTable.594"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %32, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #16
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %23, i8* %24) #16
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #16
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #16
  br label %31

31:                                               ; preds = %21, %22, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %32

32:                                               ; preds = %10, %2, %31
  %33 = phi i32 [ %14, %31 ], [ 8, %2 ], [ %8, %10 ]
  %34 = zext i32 %33 to i64
  %35 = mul nuw nsw i64 %34, 24
  %36 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %35, i8* getelementptr inbounds ([90 x i8], [90 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringEZN5blink17CachedStorageArea15ResetConnectionEN4mojo13PendingRemoteINS3_5mojom5blink11StorageAreaEEEE10ValueDeltaEEEEPKcv, i64 0, i64 0)) #16
  %37 = icmp eq i32 %33, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %32
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 %35, i1 false) #16
  br label %39

39:                                               ; preds = %38, %32
  %40 = bitcast %"class.WTF::HashTable.594"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #16
  %41 = getelementptr inbounds %"class.WTF::HashTable.594", %"class.WTF::HashTable.594"* %4, i64 0, i32 0
  %42 = getelementptr inbounds %"class.WTF::HashTable.594", %"class.WTF::HashTable.594"* %4, i64 0, i32 1
  %43 = getelementptr inbounds %"class.WTF::HashTable.594", %"class.WTF::HashTable.594"* %4, i64 0, i32 2
  %44 = getelementptr inbounds %"class.WTF::HashTable.594", %"class.WTF::HashTable.594"* %4, i64 0, i32 3
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 24, i1 false) #16
  %45 = bitcast %"class.WTF::HashTable.594"* %4 to i8**
  store i8* %36, i8** %45, align 8
  store i32 %33, i32* %42, align 8
  store i32 0, i32* %43, align 4
  store i32 0, i32* %44, align 8
  %46 = load i32, i32* %7, align 8
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::HashTable.594", %"class.WTF::HashTable.594"* %0, i64 0, i32 0
  br i1 %47, label %49, label %54

49:                                               ; preds = %39
  %50 = ptrtoint i8* %36 to i64
  %51 = bitcast %"class.WTF::HashTable.594"* %0 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = bitcast %"class.WTF::HashTable.594"* %4 to i64*
  br label %61

54:                                               ; preds = %39
  %55 = load %"struct.WTF::KeyValuePair.597"*, %"struct.WTF::KeyValuePair.597"** %48, align 8
  %56 = ptrtoint %"struct.WTF::KeyValuePair.597"* %55 to i64
  br label %136

57:                                               ; preds = %288
  %58 = bitcast %"class.WTF::HashTable.594"* %4 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.WTF::HashTable.594"* %0 to i64*
  br label %61

61:                                               ; preds = %57, %49
  %62 = phi i64* [ %53, %49 ], [ %58, %57 ]
  %63 = phi i64* [ %51, %49 ], [ %60, %57 ]
  %64 = phi i64 [ %50, %49 ], [ %59, %57 ]
  %65 = phi i64 [ %52, %49 ], [ %289, %57 ]
  %66 = phi %"struct.WTF::KeyValuePair.597"* [ null, %49 ], [ %292, %57 ]
  %67 = phi i32 [ 0, %49 ], [ %290, %57 ]
  store atomic i64 %64, i64* %63 monotonic, align 8
  store i32 %33, i32* %7, align 8
  store i64 %65, i64* %62, align 8
  store i32 %67, i32* %42, align 8
  %68 = inttoptr i64 %65 to %"struct.WTF::KeyValuePair.597"*
  %69 = icmp eq i64 %65, 0
  br i1 %69, label %295, label %70

70:                                               ; preds = %61
  %71 = icmp eq i32 %67, 0
  br i1 %71, label %134, label %72

72:                                               ; preds = %70
  %73 = zext i32 %67 to i64
  br label %74

74:                                               ; preds = %131, %72
  %75 = phi i64 [ 0, %72 ], [ %132, %131 ]
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %68, i64 %75
  %77 = bitcast %"struct.WTF::KeyValuePair.597"* %76 to i8**
  %78 = load i8*, i8** %77, align 8
  %79 = icmp eq i8* %78, inttoptr (i64 -1 to i8*)
  br i1 %79, label %131, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %68, i64 %75, i32 1, i32 1, i32 0, i32 0
  %82 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %81, align 8
  %83 = icmp eq %"class.WTF::StringImpl"* %82, null
  br i1 %83, label %97, label %84

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load atomic i32, i32* %85 monotonic, align 4
  %87 = and i32 %86, 2
  %88 = icmp eq i32 %87, 0
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %82, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  br i1 %88, label %91, label %93

91:                                               ; preds = %84
  %92 = add i32 %90, -1
  store i32 %92, i32* %89, align 4
  br label %93

93:                                               ; preds = %91, %84
  %94 = phi i32 [ %92, %91 ], [ %90, %84 ]
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %97

96:                                               ; preds = %93
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %82) #16
  br label %97

97:                                               ; preds = %96, %93, %80
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %68, i64 %75, i32 1, i32 0, i32 0, i32 0
  %99 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %98, align 8
  %100 = icmp eq %"class.WTF::StringImpl"* %99, null
  br i1 %100, label %114, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = load atomic i32, i32* %102 monotonic, align 4
  %104 = and i32 %103, 2
  %105 = icmp eq i32 %104, 0
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %99, i64 0, i32 0
  %107 = load i32, i32* %106, align 4
  br i1 %105, label %108, label %110

108:                                              ; preds = %101
  %109 = add i32 %107, -1
  store i32 %109, i32* %106, align 4
  br label %110

110:                                              ; preds = %108, %101
  %111 = phi i32 [ %109, %108 ], [ %107, %101 ]
  %112 = icmp eq i32 %111, 0
  br i1 %112, label %113, label %114

113:                                              ; preds = %110
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %99) #16
  br label %114

114:                                              ; preds = %113, %110, %97
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %76, i64 0, i32 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #16
  br label %131

131:                                              ; preds = %130, %127, %114, %74
  %132 = add nuw nsw i64 %75, 1
  %133 = icmp eq i64 %132, %73
  br i1 %133, label %134, label %74

134:                                              ; preds = %131, %70
  %135 = inttoptr i64 %65 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %135) #16
  store atomic i64 0, i64* %62 monotonic, align 8
  store i32 0, i32* %42, align 8
  store i32 0, i32* %43, align 4
  br label %295

136:                                              ; preds = %288, %54
  %137 = phi i64 [ %289, %288 ], [ %56, %54 ]
  %138 = phi i32 [ %290, %288 ], [ %46, %54 ]
  %139 = phi %"struct.WTF::KeyValuePair.597"* [ %291, %288 ], [ %55, %54 ]
  %140 = phi %"struct.WTF::KeyValuePair.597"* [ %292, %288 ], [ null, %54 ]
  %141 = phi i32 [ %293, %288 ], [ 0, %54 ]
  %142 = zext i32 %141 to i64
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %139, i64 %142
  %144 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %143, i64 0, i32 0, i32 0, i32 0
  %145 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %146 = ptrtoint %"class.WTF::StringImpl"* %145 to i64
  switch i64 %146, label %147 [
    i64 -1, label %288
    i64 0, label %288
  ]

147:                                              ; preds = %136
  %148 = load %"struct.WTF::KeyValuePair.597"*, %"struct.WTF::KeyValuePair.597"** %41, align 8
  %149 = load i32, i32* %42, align 8
  %150 = add i32 %149, -1
  %151 = zext i32 %150 to i64
  %152 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %145, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = lshr i32 %153, 8
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %158

156:                                              ; preds = %147
  %157 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* nonnull %145) #16
  br label %158

158:                                              ; preds = %156, %147
  %159 = phi i32 [ %157, %156 ], [ %154, %147 ]
  %160 = and i32 %159, %150
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %148, i64 %161
  %163 = ptrtoint %"struct.WTF::KeyValuePair.597"* %162 to i64
  %164 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %162, i64 0, i32 0, i32 0, i32 0
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %183, label %167

167:                                              ; preds = %158
  %168 = xor i32 %159, -1
  %169 = lshr i32 %159, 23
  %170 = add i32 %169, %168
  %171 = shl i32 %170, 12
  %172 = xor i32 %171, %170
  %173 = lshr i32 %172, 7
  %174 = xor i32 %173, %172
  %175 = shl i32 %174, 2
  %176 = xor i32 %175, %174
  %177 = lshr i32 %176, 20
  %178 = xor i32 %177, %176
  %179 = or i32 %178, 1
  %180 = zext i32 %179 to i64
  br label %189

181:                                              ; preds = %202
  %182 = ptrtoint %"struct.WTF::KeyValuePair.597"* %208 to i64
  br label %183

183:                                              ; preds = %181, %158
  %184 = phi i64 [ %163, %158 ], [ %182, %181 ]
  %185 = phi %"struct.WTF::KeyValuePair.597"* [ null, %158 ], [ %203, %181 ]
  %186 = icmp eq %"struct.WTF::KeyValuePair.597"* %185, null
  %187 = ptrtoint %"struct.WTF::KeyValuePair.597"* %185 to i64
  %188 = select i1 %186, i64 %184, i64 %187
  br label %213

189:                                              ; preds = %202, %167
  %190 = phi %"struct.WTF::KeyValuePair.597"* [ null, %167 ], [ %203, %202 ]
  %191 = phi i64 [ %163, %167 ], [ %209, %202 ]
  %192 = phi %"struct.WTF::KeyValuePair.597"* [ %162, %167 ], [ %208, %202 ]
  %193 = phi i64 [ %161, %167 ], [ %207, %202 ]
  %194 = phi i64 [ 0, %167 ], [ %205, %202 ]
  %195 = bitcast %"struct.WTF::KeyValuePair.597"* %192 to i8**
  %196 = load i8*, i8** %195, align 8
  %197 = icmp eq i8* %196, inttoptr (i64 -1 to i8*)
  br i1 %197, label %202, label %198

198:                                              ; preds = %189
  %199 = bitcast i8* %196 to %"class.WTF::StringImpl"*
  %200 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %144, align 8
  %201 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %199, %"class.WTF::StringImpl"* %200) #16
  br i1 %201, label %213, label %202

202:                                              ; preds = %198, %189
  %203 = phi %"struct.WTF::KeyValuePair.597"* [ %190, %198 ], [ %192, %189 ]
  %204 = icmp eq i64 %194, 0
  %205 = select i1 %204, i64 %180, i64 %194
  %206 = add i64 %205, %193
  %207 = and i64 %206, %151
  %208 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %148, i64 %207
  %209 = ptrtoint %"struct.WTF::KeyValuePair.597"* %208 to i64
  %210 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %208, i64 0, i32 0, i32 0, i32 0
  %211 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %210, align 8
  %212 = icmp eq %"class.WTF::StringImpl"* %211, null
  br i1 %212, label %181, label %189

213:                                              ; preds = %198, %183
  %214 = phi i64 [ %188, %183 ], [ %191, %198 ]
  %215 = inttoptr i64 %214 to %"struct.WTF::KeyValuePair.597"*
  %216 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %215, i64 0, i32 1, i32 1, i32 0, i32 0
  %217 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %216, align 8
  %218 = icmp eq %"class.WTF::StringImpl"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %213
  %220 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load atomic i32, i32* %220 monotonic, align 4
  %222 = and i32 %221, 2
  %223 = icmp eq i32 %222, 0
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %217, i64 0, i32 0
  %225 = load i32, i32* %224, align 4
  br i1 %223, label %226, label %228

226:                                              ; preds = %219
  %227 = add i32 %225, -1
  store i32 %227, i32* %224, align 4
  br label %228

228:                                              ; preds = %226, %219
  %229 = phi i32 [ %227, %226 ], [ %225, %219 ]
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %231, label %232

231:                                              ; preds = %228
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %217) #16
  br label %232

232:                                              ; preds = %231, %228, %213
  %233 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %215, i64 0, i32 1, i32 0, i32 0, i32 0
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load atomic i32, i32* %237 monotonic, align 4
  %239 = and i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 0
  %242 = load i32, i32* %241, align 4
  br i1 %240, label %243, label %245

243:                                              ; preds = %236
  %244 = add i32 %242, -1
  store i32 %244, i32* %241, align 4
  br label %245

245:                                              ; preds = %243, %236
  %246 = phi i32 [ %244, %243 ], [ %242, %236 ]
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %249

248:                                              ; preds = %245
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %234) #16
  br label %249

249:                                              ; preds = %248, %245, %232
  %250 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %215, i64 0, i32 0, i32 0, i32 0
  %251 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %250, align 8
  %252 = icmp eq %"class.WTF::StringImpl"* %251, null
  br i1 %252, label %266, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = and i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 0
  %259 = load i32, i32* %258, align 4
  br i1 %257, label %260, label %262

260:                                              ; preds = %253
  %261 = add i32 %259, -1
  store i32 %261, i32* %258, align 4
  br label %262

262:                                              ; preds = %260, %253
  %263 = phi i32 [ %261, %260 ], [ %259, %253 ]
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %266

265:                                              ; preds = %262
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %251) #16
  br label %266

266:                                              ; preds = %265, %262, %249
  %267 = bitcast %"struct.WTF::KeyValuePair.597"* %143 to i64*
  %268 = load i64, i64* %267, align 8
  %269 = inttoptr i64 %214 to i64*
  store i64 %268, i64* %269, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %144, align 8
  %270 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %215, i64 0, i32 1
  %271 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %139, i64 %142, i32 1
  %272 = getelementptr inbounds %struct.ValueDelta, %struct.ValueDelta* %271, i64 0, i32 0, i32 0, i32 0
  %273 = bitcast %struct.ValueDelta* %271 to i64*
  %274 = load i64, i64* %273, align 8
  %275 = bitcast %struct.ValueDelta* %270 to i64*
  store i64 %274, i64* %275, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %272, align 8
  %276 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %215, i64 0, i32 1, i32 1
  %277 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %139, i64 %142, i32 1, i32 1
  %278 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %277, i64 0, i32 0, i32 0
  %279 = bitcast %"class.WTF::String"* %277 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = bitcast %"class.WTF::String"* %276 to i64*
  store i64 %280, i64* %281, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %278, align 8
  %282 = load %"struct.WTF::KeyValuePair.597"*, %"struct.WTF::KeyValuePair.597"** %48, align 8
  %283 = getelementptr inbounds %"struct.WTF::KeyValuePair.597", %"struct.WTF::KeyValuePair.597"* %282, i64 %142
  %284 = icmp eq %"struct.WTF::KeyValuePair.597"* %283, %1
  %285 = select i1 %284, %"struct.WTF::KeyValuePair.597"* %215, %"struct.WTF::KeyValuePair.597"* %140
  %286 = load i32, i32* %7, align 8
  %287 = ptrtoint %"struct.WTF::KeyValuePair.597"* %282 to i64
  br label %288

288:                                              ; preds = %266, %136, %136
  %289 = phi i64 [ %137, %136 ], [ %287, %266 ], [ %137, %136 ]
  %290 = phi i32 [ %138, %136 ], [ %286, %266 ], [ %138, %136 ]
  %291 = phi %"struct.WTF::KeyValuePair.597"* [ %139, %136 ], [ %282, %266 ], [ %139, %136 ]
  %292 = phi %"struct.WTF::KeyValuePair.597"* [ %140, %136 ], [ %285, %266 ], [ %140, %136 ]
  %293 = add i32 %141, 1
  %294 = icmp eq i32 %293, %290
  br i1 %294, label %57, label %136

295:                                              ; preds = %61, %134
  %296 = getelementptr inbounds %"class.WTF::HashTable.594", %"class.WTF::HashTable.594"* %0, i64 0, i32 3
  %297 = load i32, i32* %296, align 8
  %298 = and i32 %297, -2147483648
  store i32 %298, i32* %296, align 8
  %299 = bitcast %"class.WTF::HashTable.594"* %4 to %"class.WTF::ConditionalDestructor.595"*
  call fastcc void @_ZN3WTF21ConditionalDestructorINS_9HashTableINS_6StringENS_12KeyValuePairIS2_ZN5blink17CachedStorageArea15ResetConnectionEN4mojo13PendingRemoteINS4_5mojom5blink11StorageAreaEEEE10ValueDeltaEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSH_ISC_EEEESI_NS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.595"* nonnull %299) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #16
  ret %"struct.WTF::KeyValuePair.597"* %66
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEEEFvbEE7RunOnceEPNS0_13BindStateBaseEb(%"class.base::internal::BindStateBase"*, i1 zeroext) #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #17
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink17CachedStorageArea15PendingMutationEEclEPS3_(%"struct.std::__1::default_delete.212"*, %"struct.blink::CachedStorageArea::PendingMutation"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"struct.blink::CachedStorageArea::PendingMutation"* %1, null
  br i1 %3, label %57, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"struct.blink::CachedStorageArea::PendingMutation", %"struct.blink::CachedStorageArea::PendingMutation"* %1, i64 0, i32 2, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #16
  br label %21

21:                                               ; preds = %20, %17, %4
  %22 = getelementptr inbounds %"struct.blink::CachedStorageArea::PendingMutation", %"struct.blink::CachedStorageArea::PendingMutation"* %1, i64 0, i32 1, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #16
  br label %38

38:                                               ; preds = %37, %34, %21
  %39 = getelementptr inbounds %"struct.blink::CachedStorageArea::PendingMutation", %"struct.blink::CachedStorageArea::PendingMutation"* %1, i64 0, i32 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #16
  br label %55

55:                                               ; preds = %38, %51, %54
  %56 = bitcast %"struct.blink::CachedStorageArea::PendingMutation"* %1 to i8*
  tail call void @_ZdlPv(i8* %56) #17
  br label %57

57:                                               ; preds = %55, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.218"*, %"struct.WTF::KeyValuePair.218"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_S8_E4findERKS1_(%"class.WTF::HashTable.215"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.215", %"class.WTF::HashTable.215"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.218"*, %"struct.WTF::KeyValuePair.218"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.218"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.215", %"class.WTF::HashTable.215"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #16
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.218"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.218"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #16
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.218"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.218"*, %"struct.WTF::KeyValuePair.218"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.215", %"class.WTF::HashTable.215"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.218"*, %"struct.WTF::KeyValuePair.218"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.218"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.218"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.218"*, %"struct.WTF::KeyValuePair.218"* } undef, %"struct.WTF::KeyValuePair.218"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.218"*, %"struct.WTF::KeyValuePair.218"* } %77, %"struct.WTF::KeyValuePair.218"* %76, 1
  ret { %"struct.WTF::KeyValuePair.218"*, %"struct.WTF::KeyValuePair.218"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"struct.blink::CachedStorageArea::PendingMutation"** @_ZNK3WTF18DequeConstIteratorIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEdeEv(%"class.WTF::DequeConstIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.WTF::DequeConstIterator", %"class.WTF::DequeConstIterator"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = getelementptr inbounds %"class.WTF::DequeConstIterator", %"class.WTF::DequeConstIterator"* %0, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::Deque.219"*, %"class.WTF::Deque.219"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::Deque.219", %"class.WTF::Deque.219"* %10, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #16
  %14 = icmp eq i32 %8, %12
  br i1 %14, label %16, label %15

15:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #16
  store i8* null, i8** %6, align 8
  br label %25

16:                                               ; preds = %1
  %17 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  %18 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.29, i64 0, i64 0), i8* %17, i8* %18) #16
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #16
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([54 x i8], [54 x i8]* @.str.30, i64 0, i64 0), i32 693, %"class.logging::CheckOpResult"* nonnull %3) #16
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #16
  br label %25

25:                                               ; preds = %15, %16, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %26 = load %"class.WTF::Deque.219"*, %"class.WTF::Deque.219"** %9, align 8
  %27 = getelementptr inbounds %"class.WTF::Deque.219", %"class.WTF::Deque.219"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = load %"struct.blink::CachedStorageArea::PendingMutation"**, %"struct.blink::CachedStorageArea::PendingMutation"*** %27, align 8
  %29 = load i32, i32* %7, align 8
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %28, i64 %30
  ret %"struct.blink::CachedStorageArea::PendingMutation"** %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.218"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_S8_E6insertINS_17HashMapTranslatorISH_SC_S8_EERKS1_S9_EENS_18HashTableAddResultISI_SA_EEOT0_OT1_(%"class.WTF::HashTable.215"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::Deque.219"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.215", %"class.WTF::HashTable.215"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.218"*, %"struct.WTF::KeyValuePair.218"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.218"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.218"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_S8_E6ExpandEPSA_(%"class.WTF::HashTable.215"* %0, %"struct.WTF::KeyValuePair.218"* null)
  %9 = load %"struct.WTF::KeyValuePair.218"*, %"struct.WTF::KeyValuePair.218"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.218"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.215", %"class.WTF::HashTable.215"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #16
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %82, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.218"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.218"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.218"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #16
  br i1 %57, label %95, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.218"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.218"* %59, null
  br i1 %69, label %82, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %59, i64 0, i32 1
  %72 = bitcast %"class.WTF::Deque.219"* %71 to i64*
  %73 = bitcast %"struct.WTF::KeyValuePair.218"* %59 to i64*
  store i64 0, i64* %73, align 8
  store atomic i64 0, i64* %72 monotonic, align 8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %59, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %75 = bitcast i32* %74 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %75, i8 0, i64 16, i1 false) #16
  %76 = getelementptr inbounds %"class.WTF::HashTable.215", %"class.WTF::HashTable.215"* %0, i64 0, i32 3
  %77 = load i32, i32* %76, align 8
  %78 = add i32 %77, 2147483647
  %79 = and i32 %78, 2147483647
  %80 = and i32 %77, -2147483648
  %81 = or i32 %79, %80
  store i32 %81, i32* %76, align 8
  br label %82

82:                                               ; preds = %24, %68, %70
  %83 = phi %"struct.WTF::KeyValuePair.218"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_INS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEEEENS_10StringHashESA_E9TranslateINS_12KeyValuePairIS3_SB_EERKS3_SB_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.218"* dereferenceable(32) %83, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::Deque.219"* dereferenceable(24) %2)
  %84 = getelementptr inbounds %"class.WTF::HashTable.215", %"class.WTF::HashTable.215"* %0, i64 0, i32 2
  %85 = load i32, i32* %84, align 4
  %86 = add i32 %85, 1
  store i32 %86, i32* %84, align 4
  %87 = getelementptr inbounds %"class.WTF::HashTable.215", %"class.WTF::HashTable.215"* %0, i64 0, i32 3
  %88 = load i32, i32* %87, align 8
  %89 = add i32 %88, %86
  %90 = shl i32 %89, 1
  %91 = load i32, i32* %12, align 8
  %92 = icmp ult i32 %90, %91
  br i1 %92, label %95, label %93

93:                                               ; preds = %82
  %94 = tail call %"struct.WTF::KeyValuePair.218"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_S8_E6ExpandEPSA_(%"class.WTF::HashTable.215"* %0, %"struct.WTF::KeyValuePair.218"* %83)
  br label %95

95:                                               ; preds = %54, %82, %93
  %96 = phi i8 [ 1, %82 ], [ 1, %93 ], [ 0, %54 ]
  %97 = phi %"struct.WTF::KeyValuePair.218"* [ %83, %82 ], [ %94, %93 ], [ %47, %54 ]
  %98 = insertvalue { %"struct.WTF::KeyValuePair.218"*, i8 } undef, %"struct.WTF::KeyValuePair.218"* %97, 0
  %99 = insertvalue { %"struct.WTF::KeyValuePair.218"*, i8 } %98, i8 %96, 1
  ret { %"struct.WTF::KeyValuePair.218"*, i8 } %99
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.218"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_S8_E6ExpandEPSA_(%"class.WTF::HashTable.215"*, %"struct.WTF::KeyValuePair.218"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.215", %"class.WTF::HashTable.215"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.215", %"class.WTF::HashTable.215"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %22, i8* %23) #16
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 5
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([164 x i8], [164 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringENS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEEEEPKcv, i64 0, i64 0)) #16
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.218"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %72, label %38

38:                                               ; preds = %31
  %39 = and i64 %33, 1
  %40 = icmp eq i32 %32, 1
  br i1 %40, label %62, label %41

41:                                               ; preds = %38
  %42 = sub nsw i64 %33, %39
  br label %43

43:                                               ; preds = %43, %41
  %44 = phi i64 [ 0, %41 ], [ %59, %43 ]
  %45 = phi i64 [ %42, %41 ], [ %60, %43 ]
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %36, i64 %44
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %36, i64 %44, i32 1
  %48 = bitcast %"class.WTF::Deque.219"* %47 to i64*
  %49 = bitcast %"struct.WTF::KeyValuePair.218"* %46 to i64*
  store i64 0, i64* %49, align 8
  store atomic i64 0, i64* %48 monotonic, align 8
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %36, i64 %44, i32 1, i32 0, i32 0, i32 0, i32 1
  %51 = bitcast i32* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %51, i8 0, i64 16, i1 false) #16
  %52 = or i64 %44, 1
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %36, i64 %52
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %36, i64 %52, i32 1
  %55 = bitcast %"class.WTF::Deque.219"* %54 to i64*
  %56 = bitcast %"struct.WTF::KeyValuePair.218"* %53 to i64*
  store i64 0, i64* %56, align 8
  store atomic i64 0, i64* %55 monotonic, align 8
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %36, i64 %52, i32 1, i32 0, i32 0, i32 0, i32 1
  %58 = bitcast i32* %57 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %58, i8 0, i64 16, i1 false) #16
  %59 = add nuw nsw i64 %44, 2
  %60 = add i64 %45, -2
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %43

62:                                               ; preds = %43, %38
  %63 = phi i64 [ 0, %38 ], [ %59, %43 ]
  %64 = icmp eq i64 %39, 0
  br i1 %64, label %72, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %36, i64 %63
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %36, i64 %63, i32 1
  %68 = bitcast %"class.WTF::Deque.219"* %67 to i64*
  %69 = bitcast %"struct.WTF::KeyValuePair.218"* %66 to i64*
  store i64 0, i64* %69, align 8
  store atomic i64 0, i64* %68 monotonic, align 8
  %70 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %36, i64 %63, i32 1, i32 0, i32 0, i32 0, i32 1
  %71 = bitcast i32* %70 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %71, i8 0, i64 16, i1 false) #16
  br label %72

72:                                               ; preds = %65, %62, %31
  %73 = call %"struct.WTF::KeyValuePair.218"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_S8_E8RehashToEPSA_jSJ_(%"class.WTF::HashTable.215"* %0, %"struct.WTF::KeyValuePair.218"* %36, i32 %32, %"struct.WTF::KeyValuePair.218"* %1) #16
  ret %"struct.WTF::KeyValuePair.218"* %73
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_INS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEEEENS_10StringHashESA_E9TranslateINS_12KeyValuePairIS3_SB_EERKS3_SB_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.218"* dereferenceable(32), %"class.WTF::String"* dereferenceable(8), %"class.WTF::Deque.219"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #16
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #16
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair.218"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #16
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %0, i64 0, i32 1, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %0, i64 0, i32 1, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = icmp ugt i32 %46, %48
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = select i1 %49, i32 %51, i32 %48
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store i32 %52, i32* %53, align 4
  %54 = getelementptr inbounds %"class.WTF::Deque.219", %"class.WTF::Deque.219"* %2, i64 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds %"class.WTF::Deque.219", %"class.WTF::Deque.219"* %2, i64 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp ugt i32 %55, %57
  %59 = getelementptr inbounds %"class.WTF::Deque.219", %"class.WTF::Deque.219"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = select i1 %58, i32 %60, i32 %57
  %62 = getelementptr inbounds %"class.WTF::Deque.219", %"class.WTF::Deque.219"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %61, i32* %62, align 4
  %63 = bitcast %"class.WTF::Deque.219"* %2 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.WTF::Deque.219"* %44 to i64*
  %66 = load i64, i64* %65, align 8
  store atomic i64 %66, i64* %63 monotonic, align 8
  store atomic i64 %64, i64* %65 monotonic, align 8
  %67 = load i32, i32* %50, align 4
  %68 = load i32, i32* %59, align 4
  store i32 %68, i32* %50, align 4
  store i32 %67, i32* %59, align 4
  %69 = load i32, i32* %53, align 4
  %70 = load i32, i32* %62, align 4
  store i32 %70, i32* %53, align 4
  store i32 %69, i32* %62, align 4
  %71 = load i32, i32* %45, align 4
  %72 = load i32, i32* %54, align 4
  store i32 %72, i32* %45, align 4
  store i32 %71, i32* %54, align 4
  %73 = load i32, i32* %47, align 4
  %74 = load i32, i32* %56, align 4
  store i32 %74, i32* %47, align 4
  store i32 %73, i32* %56, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.218"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_S8_E8RehashToEPSA_jSJ_(%"class.WTF::HashTable.215"*, %"struct.WTF::KeyValuePair.218"*, i32, %"struct.WTF::KeyValuePair.218"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.215", align 8
  %6 = bitcast %"class.WTF::HashTable.215"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.WTF::HashTable.215", %"class.WTF::HashTable.215"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.215", %"class.WTF::HashTable.215"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.215", %"class.WTF::HashTable.215"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.215", %"class.WTF::HashTable.215"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.215"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.218"* %1, %"struct.WTF::KeyValuePair.218"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.215", %"class.WTF::HashTable.215"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.215", %"class.WTF::HashTable.215"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.218"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.215"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.215"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.218"*, %"struct.WTF::KeyValuePair.218"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.218"* %22 to i64
  br label %81

24:                                               ; preds = %101
  %25 = bitcast %"class.WTF::HashTable.215"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.215"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %102, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.218"* [ null, %16 ], [ %105, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %103, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.218"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %77, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %75, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %72, %39
  %42 = phi i64 [ 0, %39 ], [ %73, %72 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.218"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, inttoptr (i64 -1 to i8*)
  br i1 %46, label %72, label %47

47:                                               ; preds = %41
  %48 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %35, i64 %42, i32 1, i32 0, i32 0, i32 0, i32 0
  %50 = load %"struct.blink::CachedStorageArea::PendingMutation"**, %"struct.blink::CachedStorageArea::PendingMutation"*** %49, align 8
  %51 = icmp eq %"struct.blink::CachedStorageArea::PendingMutation"** %50, null
  br i1 %51, label %56, label %52

52:                                               ; preds = %47
  %53 = bitcast %"struct.blink::CachedStorageArea::PendingMutation"** %50 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %53) #16
  store %"struct.blink::CachedStorageArea::PendingMutation"** null, %"struct.blink::CachedStorageArea::PendingMutation"*** %49, align 8
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %43, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  br label %56

56:                                               ; preds = %52, %47
  %57 = phi %"class.WTF::StringImpl"* [ %55, %52 ], [ %48, %47 ]
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #16
  br label %72

72:                                               ; preds = %71, %68, %56, %41
  %73 = add nuw nsw i64 %42, 1
  %74 = icmp eq i64 %73, %40
  br i1 %74, label %75, label %41

75:                                               ; preds = %72, %37
  %76 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %76) #16
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %77

77:                                               ; preds = %28, %75
  %78 = getelementptr inbounds %"class.WTF::HashTable.215", %"class.WTF::HashTable.215"* %0, i64 0, i32 3
  %79 = load i32, i32* %78, align 8
  %80 = and i32 %79, -2147483648
  store i32 %80, i32* %78, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret %"struct.WTF::KeyValuePair.218"* %33

81:                                               ; preds = %21, %101
  %82 = phi i64 [ %102, %101 ], [ %23, %21 ]
  %83 = phi i32 [ %103, %101 ], [ %13, %21 ]
  %84 = phi %"struct.WTF::KeyValuePair.218"* [ %104, %101 ], [ %22, %21 ]
  %85 = phi %"struct.WTF::KeyValuePair.218"* [ %105, %101 ], [ null, %21 ]
  %86 = phi i32 [ %106, %101 ], [ 0, %21 ]
  %87 = zext i32 %86 to i64
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %84, i64 %87
  %89 = bitcast %"struct.WTF::KeyValuePair.218"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %101
    i64 0, label %101
  ]

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %88, i64 0, i32 0
  %93 = call { %"struct.WTF::KeyValuePair.218"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_S8_E16LookupForWritingERKS1_(%"class.WTF::HashTable.215"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %92) #16
  %94 = extractvalue { %"struct.WTF::KeyValuePair.218"*, i8 } %93, 0
  call void @_ZN3WTF5MoverINS_12KeyValuePairINS_6StringENS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEES8_NS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS9_EEEELb1EE4MoveEOSA_RSA_(%"struct.WTF::KeyValuePair.218"* dereferenceable(32) %88, %"struct.WTF::KeyValuePair.218"* dereferenceable(32) %94) #16
  %95 = load %"struct.WTF::KeyValuePair.218"*, %"struct.WTF::KeyValuePair.218"** %15, align 8
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %95, i64 %87
  %97 = icmp eq %"struct.WTF::KeyValuePair.218"* %96, %3
  %98 = select i1 %97, %"struct.WTF::KeyValuePair.218"* %94, %"struct.WTF::KeyValuePair.218"* %85
  %99 = load i32, i32* %12, align 8
  %100 = ptrtoint %"struct.WTF::KeyValuePair.218"* %95 to i64
  br label %101

101:                                              ; preds = %81, %81, %91
  %102 = phi i64 [ %82, %81 ], [ %100, %91 ], [ %82, %81 ]
  %103 = phi i32 [ %83, %81 ], [ %99, %91 ], [ %83, %81 ]
  %104 = phi %"struct.WTF::KeyValuePair.218"* [ %84, %81 ], [ %95, %91 ], [ %84, %81 ]
  %105 = phi %"struct.WTF::KeyValuePair.218"* [ %85, %81 ], [ %98, %91 ], [ %85, %81 ]
  %106 = add i32 %86, 1
  %107 = icmp eq i32 %106, %103
  br i1 %107, label %24, label %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.218"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_S8_E16LookupForWritingERKS1_(%"class.WTF::HashTable.215"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.215", %"class.WTF::HashTable.215"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.218"*, %"struct.WTF::KeyValuePair.218"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.215", %"class.WTF::HashTable.215"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #16
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.218"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.218"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.218"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.218"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.218"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.218"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.218"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.218"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #16
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.218"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.218"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.218"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.218"*, i8 } undef, %"struct.WTF::KeyValuePair.218"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.218"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.218"*, i8 } %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverINS_12KeyValuePairINS_6StringENS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEES8_NS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSC_IS9_EEEELb1EE4MoveEOSA_RSA_(%"struct.WTF::KeyValuePair.218"* dereferenceable(32), %"struct.WTF::KeyValuePair.218"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::CachedStorageArea::PendingMutation"**, %"struct.blink::CachedStorageArea::PendingMutation"*** %3, align 8
  %5 = icmp eq %"struct.blink::CachedStorageArea::PendingMutation"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = bitcast %"struct.blink::CachedStorageArea::PendingMutation"** %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %7) #16
  store %"struct.blink::CachedStorageArea::PendingMutation"** null, %"struct.blink::CachedStorageArea::PendingMutation"*** %3, align 8
  br label %8

8:                                                ; preds = %6, %2
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #16
  br label %25

25:                                               ; preds = %8, %21, %24
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %0, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"struct.WTF::KeyValuePair.218"* %0 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"struct.WTF::KeyValuePair.218"* %1 to i64*
  store i64 %28, i64* %29, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %26, align 8
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %0, i64 0, i32 1
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %1, i64 0, i32 1, i32 1
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %1, i64 0, i32 1, i32 2
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %0, i64 0, i32 1, i32 1
  %36 = bitcast %"class.WTF::Deque.219"* %30 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 24, i1 false) #16
  %37 = load i32, i32* %35, align 8
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %0, i64 0, i32 1, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = icmp ugt i32 %37, %39
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = select i1 %40, i32 %42, i32 %39
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store i32 %43, i32* %44, align 4
  %45 = bitcast %"class.WTF::Deque.219"* %31 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.WTF::Deque.219"* %30 to i64*
  %48 = load i64, i64* %47, align 8
  store atomic i64 %48, i64* %45 monotonic, align 8
  store atomic i64 %46, i64* %47 monotonic, align 8
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 4
  %51 = load i32, i32* %41, align 4
  store i32 %51, i32* %49, align 4
  store i32 %50, i32* %41, align 4
  %52 = load i32, i32* %34, align 4
  %53 = load i32, i32* %44, align 4
  store i32 %53, i32* %34, align 4
  store i32 %52, i32* %44, align 4
  %54 = load i32, i32* %32, align 4
  %55 = load i32, i32* %35, align 4
  store i32 %55, i32* %32, align 4
  store i32 %54, i32* %35, align 4
  %56 = load i32, i32* %33, align 4
  %57 = load i32, i32* %38, align 4
  store i32 %57, i32* %33, align 4
  store i32 %56, i32* %38, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.219"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque.219", %"class.WTF::Deque.219"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque.219", %"class.WTF::Deque.219"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.blink::CachedStorageArea::PendingMutation"**, %"struct.blink::CachedStorageArea::PendingMutation"*** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink17CachedStorageArea15PendingMutationEEEmm(i64 %11) #16
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink17CachedStorageArea15PendingMutationEEEmm(i64 %11) #16
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([91 x i8], [91 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink17CachedStorageArea15PendingMutationEEEPKcv, i64 0, i64 0)) #16
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque.219"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque.219", %"class.WTF::Deque.219"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque.219", %"class.WTF::Deque.219"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to %"struct.blink::CachedStorageArea::PendingMutation"**
  br i1 %23, label %40, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %5, i64 %26
  %28 = getelementptr inbounds %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %24, i64 %26
  %29 = icmp ne %"struct.blink::CachedStorageArea::PendingMutation"** %28, null
  %30 = icmp ne %"struct.blink::CachedStorageArea::PendingMutation"** %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %73, !prof !2

32:                                               ; preds = %25
  %33 = zext i32 %22 to i64
  %34 = getelementptr inbounds %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %5, i64 %33
  %35 = bitcast %"struct.blink::CachedStorageArea::PendingMutation"** %27 to i8*
  %36 = ptrtoint %"struct.blink::CachedStorageArea::PendingMutation"** %34 to i64
  %37 = ptrtoint %"struct.blink::CachedStorageArea::PendingMutation"** %27 to i64
  %38 = sub i64 %36, %37
  %39 = bitcast %"struct.blink::CachedStorageArea::PendingMutation"** %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %35, i64 %38, i1 false) #16
  br label %73

40:                                               ; preds = %1
  %41 = icmp ne i8* %14, null
  %42 = icmp ne %"struct.blink::CachedStorageArea::PendingMutation"** %5, null
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %51, !prof !2

44:                                               ; preds = %40
  %45 = zext i32 %22 to i64
  %46 = bitcast %"struct.blink::CachedStorageArea::PendingMutation"** %5 to i8*
  %47 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %46, i64 %47, i1 false) #16
  %48 = load i32, i32* %2, align 8
  %49 = load i32, i32* %19, align 8
  %50 = load %"struct.blink::CachedStorageArea::PendingMutation"**, %"struct.blink::CachedStorageArea::PendingMutation"*** %4, align 8
  br label %51

51:                                               ; preds = %40, %44
  %52 = phi %"struct.blink::CachedStorageArea::PendingMutation"** [ %24, %40 ], [ %50, %44 ]
  %53 = phi i32 [ %20, %40 ], [ %49, %44 ]
  %54 = phi i32 [ %18, %40 ], [ %48, %44 ]
  %55 = sub i32 %53, %3
  %56 = add i32 %55, %54
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %5, i64 %57
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %52, i64 %59
  %61 = icmp ne %"struct.blink::CachedStorageArea::PendingMutation"** %60, null
  %62 = icmp ne %"struct.blink::CachedStorageArea::PendingMutation"** %58, null
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %72, !prof !2

64:                                               ; preds = %51
  %65 = zext i32 %3 to i64
  %66 = getelementptr inbounds %"struct.blink::CachedStorageArea::PendingMutation"*, %"struct.blink::CachedStorageArea::PendingMutation"** %5, i64 %65
  %67 = bitcast %"struct.blink::CachedStorageArea::PendingMutation"** %58 to i8*
  %68 = ptrtoint %"struct.blink::CachedStorageArea::PendingMutation"** %66 to i64
  %69 = ptrtoint %"struct.blink::CachedStorageArea::PendingMutation"** %58 to i64
  %70 = sub i64 %68, %69
  %71 = bitcast %"struct.blink::CachedStorageArea::PendingMutation"** %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %67, i64 %70, i1 false) #16
  br label %72

72:                                               ; preds = %51, %64
  store i32 %56, i32* %19, align 8
  br label %73

73:                                               ; preds = %32, %25, %72
  %74 = bitcast %"struct.blink::CachedStorageArea::PendingMutation"** %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink17CachedStorageArea15PendingMutationEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.32, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.202"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSI_ISD_EEEESJ_SC_E6insertINS_17HashMapTranslatorISL_SG_SC_EERKS1_SD_EENS_18HashTableAddResultISM_SE_EEOT0_OT1_(%"class.WTF::HashTable.199"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::Deque.203"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.199", %"class.WTF::HashTable.199"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.202"*, %"struct.WTF::KeyValuePair.202"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.202"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.202"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSI_ISD_EEEESJ_SC_E6ExpandEPSE_(%"class.WTF::HashTable.199"* %0, %"struct.WTF::KeyValuePair.202"* null)
  %9 = load %"struct.WTF::KeyValuePair.202"*, %"struct.WTF::KeyValuePair.202"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.202"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.199", %"class.WTF::HashTable.199"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #16
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %77, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.202"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.202"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.202"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #16
  br i1 %57, label %90, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.202"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.202"* %59, null
  br i1 %69, label %77, label %70

70:                                               ; preds = %68
  tail call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS4_INS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS8_14default_deleteISC_EEEELj0ENS_18PartitionAllocatorEEEEEEESG_NS_12KeyValuePairIS5_SH_EEEEvRT1_(%"struct.WTF::KeyValuePair.202"* nonnull dereferenceable(32) %59) #16
  %71 = getelementptr inbounds %"class.WTF::HashTable.199", %"class.WTF::HashTable.199"* %0, i64 0, i32 3
  %72 = load i32, i32* %71, align 8
  %73 = add i32 %72, 2147483647
  %74 = and i32 %73, 2147483647
  %75 = and i32 %72, -2147483648
  %76 = or i32 %74, %75
  store i32 %76, i32* %71, align 8
  br label %77

77:                                               ; preds = %24, %68, %70
  %78 = phi %"struct.WTF::KeyValuePair.202"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  tail call void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_INS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS6_14default_deleteISA_EEEELj0ENS_18PartitionAllocatorEEEEEEENS_10StringHashESE_E9TranslateINS_12KeyValuePairIS3_SF_EERKS3_SF_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.202"* dereferenceable(32) %78, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::Deque.203"* dereferenceable(24) %2)
  %79 = getelementptr inbounds %"class.WTF::HashTable.199", %"class.WTF::HashTable.199"* %0, i64 0, i32 2
  %80 = load i32, i32* %79, align 4
  %81 = add i32 %80, 1
  store i32 %81, i32* %79, align 4
  %82 = getelementptr inbounds %"class.WTF::HashTable.199", %"class.WTF::HashTable.199"* %0, i64 0, i32 3
  %83 = load i32, i32* %82, align 8
  %84 = add i32 %83, %81
  %85 = shl i32 %84, 1
  %86 = load i32, i32* %12, align 8
  %87 = icmp ult i32 %85, %86
  br i1 %87, label %90, label %88

88:                                               ; preds = %77
  %89 = tail call %"struct.WTF::KeyValuePair.202"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSI_ISD_EEEESJ_SC_E6ExpandEPSE_(%"class.WTF::HashTable.199"* %0, %"struct.WTF::KeyValuePair.202"* %78)
  br label %90

90:                                               ; preds = %54, %77, %88
  %91 = phi i8 [ 1, %77 ], [ 1, %88 ], [ 0, %54 ]
  %92 = phi %"struct.WTF::KeyValuePair.202"* [ %78, %77 ], [ %89, %88 ], [ %47, %54 ]
  %93 = insertvalue { %"struct.WTF::KeyValuePair.202"*, i8 } undef, %"struct.WTF::KeyValuePair.202"* %92, 0
  %94 = insertvalue { %"struct.WTF::KeyValuePair.202"*, i8 } %93, i8 %91, 1
  ret { %"struct.WTF::KeyValuePair.202"*, i8 } %94
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.202"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSI_ISD_EEEESJ_SC_E6ExpandEPSE_(%"class.WTF::HashTable.199"*, %"struct.WTF::KeyValuePair.202"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.199", %"class.WTF::HashTable.199"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.199", %"class.WTF::HashTable.199"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i8* %22, i8* %23) #16
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.22, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 5
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([254 x i8], [254 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringENS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEEEEPKcv, i64 0, i64 0)) #16
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.202"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %43, label %38

38:                                               ; preds = %31, %38
  %39 = phi i64 [ %41, %38 ], [ 0, %31 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %36, i64 %39
  call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS4_INS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS8_14default_deleteISC_EEEELj0ENS_18PartitionAllocatorEEEEEEESG_NS_12KeyValuePairIS5_SH_EEEEvRT1_(%"struct.WTF::KeyValuePair.202"* dereferenceable(32) %40) #16
  %41 = add nuw nsw i64 %39, 1
  %42 = icmp eq i64 %41, %33
  br i1 %42, label %43, label %38

43:                                               ; preds = %38, %31
  %44 = call %"struct.WTF::KeyValuePair.202"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSI_ISD_EEEESJ_SC_E8RehashToEPSE_jSN_(%"class.WTF::HashTable.199"* %0, %"struct.WTF::KeyValuePair.202"* %36, i32 %32, %"struct.WTF::KeyValuePair.202"* %1) #16
  ret %"struct.WTF::KeyValuePair.202"* %44
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF17HashMapTranslatorINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS2_INS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS6_14default_deleteISA_EEEELj0ENS_18PartitionAllocatorEEEEEEENS_10StringHashESE_E9TranslateINS_12KeyValuePairIS3_SF_EERKS3_SF_EEvRT_OT0_OT1_(%"struct.WTF::KeyValuePair.202"* dereferenceable(32), %"class.WTF::String"* dereferenceable(8), %"class.WTF::Deque.203"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #16
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #16
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %3
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"struct.WTF::KeyValuePair.202"* %0 to i64*
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #16
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %0, i64 0, i32 1
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %0, i64 0, i32 1, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %0, i64 0, i32 1, i32 2
  %48 = load i32, i32* %47, align 4
  %49 = icmp ugt i32 %46, %48
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %51 = load i32, i32* %50, align 8
  %52 = select i1 %49, i32 %51, i32 %48
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store i32 %52, i32* %53, align 4
  %54 = getelementptr inbounds %"class.WTF::Deque.203", %"class.WTF::Deque.203"* %2, i64 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds %"class.WTF::Deque.203", %"class.WTF::Deque.203"* %2, i64 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp ugt i32 %55, %57
  %59 = getelementptr inbounds %"class.WTF::Deque.203", %"class.WTF::Deque.203"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = select i1 %58, i32 %60, i32 %57
  %62 = getelementptr inbounds %"class.WTF::Deque.203", %"class.WTF::Deque.203"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  store i32 %61, i32* %62, align 4
  %63 = bitcast %"class.WTF::Deque.203"* %2 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.WTF::Deque.203"* %44 to i64*
  %66 = load i64, i64* %65, align 8
  store atomic i64 %66, i64* %63 monotonic, align 8
  store atomic i64 %64, i64* %65 monotonic, align 8
  %67 = load i32, i32* %50, align 4
  %68 = load i32, i32* %59, align 4
  store i32 %68, i32* %50, align 4
  store i32 %67, i32* %59, align 4
  %69 = load i32, i32* %53, align 4
  %70 = load i32, i32* %62, align 4
  store i32 %70, i32* %53, align 4
  store i32 %69, i32* %62, align 4
  %71 = load i32, i32* %45, align 4
  %72 = load i32, i32* %54, align 4
  store i32 %72, i32* %45, align 4
  store i32 %71, i32* %54, align 4
  %73 = load i32, i32* %47, align 4
  %74 = load i32, i32* %56, align 4
  store i32 %74, i32* %47, align 4
  store i32 %73, i32* %56, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.202"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSI_ISD_EEEESJ_SC_E8RehashToEPSE_jSN_(%"class.WTF::HashTable.199"*, %"struct.WTF::KeyValuePair.202"*, i32, %"struct.WTF::KeyValuePair.202"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.199", align 8
  %6 = bitcast %"class.WTF::HashTable.199"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.WTF::HashTable.199", %"class.WTF::HashTable.199"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.199", %"class.WTF::HashTable.199"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.199", %"class.WTF::HashTable.199"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.199", %"class.WTF::HashTable.199"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.199"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.202"* %1, %"struct.WTF::KeyValuePair.202"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.199", %"class.WTF::HashTable.199"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.199", %"class.WTF::HashTable.199"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.202"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.199"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.199"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.202"*, %"struct.WTF::KeyValuePair.202"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.202"* %22 to i64
  br label %75

24:                                               ; preds = %95
  %25 = bitcast %"class.WTF::HashTable.199"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.199"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %96, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.202"* [ null, %16 ], [ %99, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %97, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.202"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %71, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %69, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %66, %39
  %42 = phi i64 [ 0, %39 ], [ %67, %66 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %35, i64 %42
  %44 = bitcast %"struct.WTF::KeyValuePair.202"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = icmp eq i8* %45, inttoptr (i64 -1 to i8*)
  br i1 %46, label %66, label %47

47:                                               ; preds = %41
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %35, i64 %42, i32 1
  %49 = bitcast %"class.WTF::Deque.203"* %48 to %"class.WTF::ConditionalDestructor.204"*
  call void @_ZN3WTF21ConditionalDestructorINS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.204"* %49) #16
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %43, i64 0, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %53
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %53
  %63 = phi i32 [ %61, %60 ], [ %59, %53 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #16
  br label %66

66:                                               ; preds = %65, %62, %47, %41
  %67 = add nuw nsw i64 %42, 1
  %68 = icmp eq i64 %67, %40
  br i1 %68, label %69, label %41

69:                                               ; preds = %66, %37
  %70 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %70) #16
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %71

71:                                               ; preds = %28, %69
  %72 = getelementptr inbounds %"class.WTF::HashTable.199", %"class.WTF::HashTable.199"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = and i32 %73, -2147483648
  store i32 %74, i32* %72, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret %"struct.WTF::KeyValuePair.202"* %33

75:                                               ; preds = %21, %95
  %76 = phi i64 [ %96, %95 ], [ %23, %21 ]
  %77 = phi i32 [ %97, %95 ], [ %13, %21 ]
  %78 = phi %"struct.WTF::KeyValuePair.202"* [ %98, %95 ], [ %22, %21 ]
  %79 = phi %"struct.WTF::KeyValuePair.202"* [ %99, %95 ], [ null, %21 ]
  %80 = phi i32 [ %100, %95 ], [ 0, %21 ]
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %78, i64 %81
  %83 = bitcast %"struct.WTF::KeyValuePair.202"* %82 to i64*
  %84 = load i64, i64* %83, align 8
  switch i64 %84, label %85 [
    i64 -1, label %95
    i64 0, label %95
  ]

85:                                               ; preds = %75
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %82, i64 0, i32 0
  %87 = call { %"struct.WTF::KeyValuePair.202"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSI_ISD_EEEESJ_SC_E16LookupForWritingERKS1_(%"class.WTF::HashTable.199"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %86) #16
  %88 = extractvalue { %"struct.WTF::KeyValuePair.202"*, i8 } %87, 0
  call void @_ZN3WTF5MoverINS_12KeyValuePairINS_6StringENS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEESC_NS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_ISD_EEEELb1EE4MoveEOSE_RSE_(%"struct.WTF::KeyValuePair.202"* dereferenceable(32) %82, %"struct.WTF::KeyValuePair.202"* dereferenceable(32) %88) #16
  %89 = load %"struct.WTF::KeyValuePair.202"*, %"struct.WTF::KeyValuePair.202"** %15, align 8
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %89, i64 %81
  %91 = icmp eq %"struct.WTF::KeyValuePair.202"* %90, %3
  %92 = select i1 %91, %"struct.WTF::KeyValuePair.202"* %88, %"struct.WTF::KeyValuePair.202"* %79
  %93 = load i32, i32* %12, align 8
  %94 = ptrtoint %"struct.WTF::KeyValuePair.202"* %89 to i64
  br label %95

95:                                               ; preds = %75, %75, %85
  %96 = phi i64 [ %76, %75 ], [ %94, %85 ], [ %76, %75 ]
  %97 = phi i32 [ %77, %75 ], [ %93, %85 ], [ %77, %75 ]
  %98 = phi %"struct.WTF::KeyValuePair.202"* [ %78, %75 ], [ %89, %85 ], [ %78, %75 ]
  %99 = phi %"struct.WTF::KeyValuePair.202"* [ %79, %75 ], [ %92, %85 ], [ %79, %75 ]
  %100 = add i32 %80, 1
  %101 = icmp eq i32 %100, %97
  br i1 %101, label %24, label %75
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS4_INS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS8_14default_deleteISC_EEEELj0ENS_18PartitionAllocatorEEEEEEESG_NS_12KeyValuePairIS5_SH_EEEEvRT1_(%"struct.WTF::KeyValuePair.202"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::Deque.203", align 8
  %3 = alloca %"struct.WTF::KeyValuePair.202", align 8
  %4 = bitcast %"struct.WTF::KeyValuePair.202"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %4) #16
  %5 = bitcast %"class.WTF::Deque.203"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %5) #16, !noalias !73
  %6 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::Deque.203", %"class.WTF::Deque.203"* %2, i64 0, i32 0, i32 0, i32 0, i32 1
  %8 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %3, i64 0, i32 1
  %9 = bitcast %"class.WTF::Deque.203"* %8 to i64*
  store i64 0, i64* %9, align 8
  %10 = bitcast %"class.WTF::Deque.203"* %2 to i64*
  %11 = bitcast %"class.WTF::Deque.203"* %6 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8, !noalias !73
  store atomic i64 0, i64* %11 monotonic, align 8, !alias.scope !73
  %12 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast i32* %7 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %13, align 8, !noalias !73
  %14 = bitcast %"class.WTF::Deque.203"* %2 to %"class.WTF::ConditionalDestructor.204"*
  call void @_ZN3WTF21ConditionalDestructorINS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.204"* nonnull %14) #16, !noalias !73
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %5) #16, !noalias !73
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %15, align 8
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %0, i64 0, i32 1
  %17 = bitcast %"struct.WTF::KeyValuePair.202"* %0 to <2 x i64>*
  store <2 x i64> zeroinitializer, <2 x i64>* %17, align 8
  %18 = bitcast %"class.WTF::Deque.203"* %16 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  store atomic i64 0, i64* %18 monotonic, align 8
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast i32* %19 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %20, align 4
  %21 = bitcast i32* %12 to <4 x i32>*
  store <4 x i32> zeroinitializer, <4 x i32>* %21, align 8
  %22 = bitcast %"class.WTF::Deque.203"* %6 to %"class.WTF::ConditionalDestructor.204"*
  call void @_ZN3WTF21ConditionalDestructorINS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.204"* %22) #16
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %24 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %24, label %38, label %25

25:                                               ; preds = %1
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = and i32 %27, 2
  %29 = icmp eq i32 %28, 0
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  br i1 %29, label %32, label %34

32:                                               ; preds = %25
  %33 = add i32 %31, -1
  store i32 %33, i32* %30, align 4
  br label %34

34:                                               ; preds = %32, %25
  %35 = phi i32 [ %33, %32 ], [ %31, %25 ]
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %34
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #16
  br label %38

38:                                               ; preds = %1, %34, %37
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %4) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.202"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSI_ISD_EEEESJ_SC_E16LookupForWritingERKS1_(%"class.WTF::HashTable.199"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.199", %"class.WTF::HashTable.199"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.202"*, %"struct.WTF::KeyValuePair.202"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.199", %"class.WTF::HashTable.199"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #16
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.202"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.202"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.202"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.202"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.202"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.202"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.202"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.202"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #16
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.202"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.202"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.202"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.202"*, i8 } undef, %"struct.WTF::KeyValuePair.202"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.202"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.202"*, i8 } %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverINS_12KeyValuePairINS_6StringENS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEESC_NS_18HashMapValueTraitsINS_10HashTraitsIS2_EENSG_ISD_EEEELb1EE4MoveEOSE_RSE_(%"struct.WTF::KeyValuePair.202"* dereferenceable(32), %"struct.WTF::KeyValuePair.202"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %1, i64 0, i32 1
  %4 = bitcast %"class.WTF::Deque.203"* %3 to %"class.WTF::ConditionalDestructor.204"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.204"* %4) #16
  %5 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #16
  br label %21

21:                                               ; preds = %2, %17, %20
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = bitcast %"struct.WTF::KeyValuePair.202"* %0 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"struct.WTF::KeyValuePair.202"* %1 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %22, align 8
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %0, i64 0, i32 1
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %1, i64 0, i32 1, i32 1
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %1, i64 0, i32 1, i32 2
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %0, i64 0, i32 1, i32 1
  %31 = bitcast %"class.WTF::Deque.203"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 24, i1 false) #16
  %32 = load i32, i32* %30, align 8
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %0, i64 0, i32 1, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = icmp ugt i32 %32, %34
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = select i1 %35, i32 %37, i32 %34
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  store i32 %38, i32* %39, align 4
  %40 = bitcast %"class.WTF::Deque.203"* %26 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.WTF::Deque.203"* %3 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %43, i64* %40 monotonic, align 8
  store atomic i64 %41, i64* %42 monotonic, align 8
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %45 = load i32, i32* %44, align 4
  %46 = load i32, i32* %36, align 4
  store i32 %46, i32* %44, align 4
  store i32 %45, i32* %36, align 4
  %47 = load i32, i32* %29, align 4
  %48 = load i32, i32* %39, align 4
  store i32 %48, i32* %29, align 4
  store i32 %47, i32* %39, align 4
  %49 = load i32, i32* %27, align 4
  %50 = load i32, i32* %30, align 4
  store i32 %50, i32* %27, align 4
  store i32 %49, i32* %30, align 4
  %51 = load i32, i32* %28, align 4
  %52 = load i32, i32* %33, align 4
  store i32 %52, i32* %28, align 4
  store i32 %51, i32* %33, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS1_14default_deleteIS5_EEEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque.203"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque.203", %"class.WTF::Deque.203"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque.203", %"class.WTF::Deque.203"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::unique_ptr.208"*, %"class.std::__1::unique_ptr.208"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS2_14default_deleteIS6_EEEEEEmm(i64 %11) #16
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS2_14default_deleteIS6_EEEEEEmm(i64 %11) #16
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([181 x i8], [181 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS1_14default_deleteIS5_EEEEEEPKcv, i64 0, i64 0)) #16
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque.203"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 3
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque.203", %"class.WTF::Deque.203"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque.203", %"class.WTF::Deque.203"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to %"class.std::__1::unique_ptr.208"*
  br i1 %23, label %40, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %5, i64 %26
  %28 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %24, i64 %26
  %29 = icmp ne %"class.std::__1::unique_ptr.208"* %28, null
  %30 = icmp ne %"class.std::__1::unique_ptr.208"* %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %73, !prof !2

32:                                               ; preds = %25
  %33 = zext i32 %22 to i64
  %34 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %5, i64 %33
  %35 = bitcast %"class.std::__1::unique_ptr.208"* %27 to i8*
  %36 = ptrtoint %"class.std::__1::unique_ptr.208"* %34 to i64
  %37 = ptrtoint %"class.std::__1::unique_ptr.208"* %27 to i64
  %38 = sub i64 %36, %37
  %39 = bitcast %"class.std::__1::unique_ptr.208"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %35, i64 %38, i1 false) #16
  br label %73

40:                                               ; preds = %1
  %41 = icmp ne i8* %14, null
  %42 = icmp ne %"class.std::__1::unique_ptr.208"* %5, null
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %51, !prof !2

44:                                               ; preds = %40
  %45 = zext i32 %22 to i64
  %46 = bitcast %"class.std::__1::unique_ptr.208"* %5 to i8*
  %47 = shl nuw nsw i64 %45, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %46, i64 %47, i1 false) #16
  %48 = load i32, i32* %2, align 8
  %49 = load i32, i32* %19, align 8
  %50 = load %"class.std::__1::unique_ptr.208"*, %"class.std::__1::unique_ptr.208"** %4, align 8
  br label %51

51:                                               ; preds = %40, %44
  %52 = phi %"class.std::__1::unique_ptr.208"* [ %24, %40 ], [ %50, %44 ]
  %53 = phi i32 [ %20, %40 ], [ %49, %44 ]
  %54 = phi i32 [ %18, %40 ], [ %48, %44 ]
  %55 = sub i32 %53, %3
  %56 = add i32 %55, %54
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %5, i64 %57
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %52, i64 %59
  %61 = icmp ne %"class.std::__1::unique_ptr.208"* %60, null
  %62 = icmp ne %"class.std::__1::unique_ptr.208"* %58, null
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %72, !prof !2

64:                                               ; preds = %51
  %65 = zext i32 %3 to i64
  %66 = getelementptr inbounds %"class.std::__1::unique_ptr.208", %"class.std::__1::unique_ptr.208"* %5, i64 %65
  %67 = bitcast %"class.std::__1::unique_ptr.208"* %58 to i8*
  %68 = ptrtoint %"class.std::__1::unique_ptr.208"* %66 to i64
  %69 = ptrtoint %"class.std::__1::unique_ptr.208"* %58 to i64
  %70 = sub i64 %68, %69
  %71 = bitcast %"class.std::__1::unique_ptr.208"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %67, i64 %70, i1 false) #16
  br label %72

72:                                               ; preds = %51, %64
  store i32 %56, i32* %19, align 8
  br label %73

73:                                               ; preds = %32, %25, %72
  %74 = bitcast %"class.std::__1::unique_ptr.208"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS2_14default_deleteIS6_EEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.32, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.202"*, %"struct.WTF::KeyValuePair.202"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSI_ISD_EEEESJ_SC_E4findERKS1_(%"class.WTF::HashTable.199"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.199", %"class.WTF::HashTable.199"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.202"*, %"struct.WTF::KeyValuePair.202"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.202"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.199", %"class.WTF::HashTable.199"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #16
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.202"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.202"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #16
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.202"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.202"*, %"struct.WTF::KeyValuePair.202"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.199", %"class.WTF::HashTable.199"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.202"*, %"struct.WTF::KeyValuePair.202"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.202"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.202"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.202"*, %"struct.WTF::KeyValuePair.202"* } undef, %"struct.WTF::KeyValuePair.202"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.202"*, %"struct.WTF::KeyValuePair.202"* } %77, %"struct.WTF::KeyValuePair.202"* %76, 1
  ret { %"struct.WTF::KeyValuePair.202"*, %"struct.WTF::KeyValuePair.202"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSI_ISD_EEEESJ_SC_E5eraseEPKSE_(%"class.WTF::HashTable.199"*, %"struct.WTF::KeyValuePair.202"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %1, i64 0, i32 1
  %4 = bitcast %"class.WTF::Deque.203"* %3 to %"class.WTF::ConditionalDestructor.204"*
  tail call void @_ZN3WTF21ConditionalDestructorINS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS2_14default_deleteIS6_EEEELj0ENS_18PartitionAllocatorEEELb0EED2Ev(%"class.WTF::ConditionalDestructor.204"* %4) #16
  %5 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %1, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %21, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  br i1 %12, label %15, label %17

15:                                               ; preds = %8
  %16 = add i32 %14, -1
  store i32 %16, i32* %13, align 4
  br label %17

17:                                               ; preds = %15, %8
  %18 = phi i32 [ %16, %15 ], [ %14, %8 ]
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %21

20:                                               ; preds = %17
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %6) #16
  br label %21

21:                                               ; preds = %2, %17, %20
  %22 = bitcast %"struct.WTF::KeyValuePair.202"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %22, align 8
  %23 = getelementptr inbounds %"class.WTF::HashTable.199", %"class.WTF::HashTable.199"* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = add i32 %24, 1
  %26 = and i32 %25, 2147483647
  %27 = and i32 %24, -2147483648
  %28 = or i32 %26, %27
  store i32 %28, i32* %23, align 8
  %29 = getelementptr inbounds %"class.WTF::HashTable.199", %"class.WTF::HashTable.199"* %0, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %30, -1
  store i32 %31, i32* %29, align 4
  %32 = mul i32 %31, 6
  %33 = getelementptr inbounds %"class.WTF::HashTable.199", %"class.WTF::HashTable.199"* %0, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = icmp ult i32 %32, %34
  %36 = icmp ugt i32 %34, 8
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %52

38:                                               ; preds = %21
  %39 = lshr i32 %34, 1
  %40 = zext i32 %39 to i64
  %41 = shl nuw nsw i64 %40, 5
  %42 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %41, i8* getelementptr inbounds ([254 x i8], [254 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringENS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEEEEPKcv, i64 0, i64 0)) #16
  %43 = bitcast i8* %42 to %"struct.WTF::KeyValuePair.202"*
  %44 = icmp eq i32 %39, 0
  br i1 %44, label %50, label %45

45:                                               ; preds = %38, %45
  %46 = phi i64 [ %48, %45 ], [ 0, %38 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.202", %"struct.WTF::KeyValuePair.202"* %43, i64 %46
  tail call void @_ZN3WTF26HashTableBucketInitializerILb0EE10InitializeINS_18HashMapValueTraitsINS_10HashTraitsINS_6StringEEENS4_INS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS8_14default_deleteISC_EEEELj0ENS_18PartitionAllocatorEEEEEEESG_NS_12KeyValuePairIS5_SH_EEEEvRT1_(%"struct.WTF::KeyValuePair.202"* dereferenceable(32) %47) #16
  %48 = add nuw nsw i64 %46, 1
  %49 = icmp eq i64 %48, %40
  br i1 %49, label %50, label %45

50:                                               ; preds = %45, %38
  %51 = tail call %"struct.WTF::KeyValuePair.202"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS4_14default_deleteIS8_EEEELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSI_ISD_EEEESJ_SC_E8RehashToEPSE_jSN_(%"class.WTF::HashTable.199"* %0, %"struct.WTF::KeyValuePair.202"* %43, i32 %39, %"struct.WTF::KeyValuePair.202"* null) #16
  br label %52

52:                                               ; preds = %50, %21
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_S8_E5eraseEPKSA_(%"class.WTF::HashTable.215"*, %"struct.WTF::KeyValuePair.218"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load %"struct.blink::CachedStorageArea::PendingMutation"**, %"struct.blink::CachedStorageArea::PendingMutation"*** %3, align 8
  %5 = icmp eq %"struct.blink::CachedStorageArea::PendingMutation"** %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %2
  %7 = bitcast %"struct.blink::CachedStorageArea::PendingMutation"** %4 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %7) #16
  store %"struct.blink::CachedStorageArea::PendingMutation"** null, %"struct.blink::CachedStorageArea::PendingMutation"*** %3, align 8
  br label %8

8:                                                ; preds = %6, %2
  %9 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #16
  br label %25

25:                                               ; preds = %8, %21, %24
  %26 = bitcast %"struct.WTF::KeyValuePair.218"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %26, align 8
  %27 = getelementptr inbounds %"class.WTF::HashTable.215", %"class.WTF::HashTable.215"* %0, i64 0, i32 3
  %28 = load i32, i32* %27, align 8
  %29 = add i32 %28, 1
  %30 = and i32 %29, 2147483647
  %31 = and i32 %28, -2147483648
  %32 = or i32 %30, %31
  store i32 %32, i32* %27, align 8
  %33 = getelementptr inbounds %"class.WTF::HashTable.215", %"class.WTF::HashTable.215"* %0, i64 0, i32 2
  %34 = load i32, i32* %33, align 4
  %35 = add i32 %34, -1
  store i32 %35, i32* %33, align 4
  %36 = mul i32 %35, 6
  %37 = getelementptr inbounds %"class.WTF::HashTable.215", %"class.WTF::HashTable.215"* %0, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = icmp ult i32 %36, %38
  %40 = icmp ugt i32 %38, 8
  %41 = and i1 %39, %40
  br i1 %41, label %42, label %85

42:                                               ; preds = %25
  %43 = lshr i32 %38, 1
  %44 = zext i32 %43 to i64
  %45 = shl nuw nsw i64 %44, 5
  %46 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %45, i8* getelementptr inbounds ([164 x i8], [164 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringENS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEEEEPKcv, i64 0, i64 0)) #16
  %47 = bitcast i8* %46 to %"struct.WTF::KeyValuePair.218"*
  %48 = icmp eq i32 %43, 0
  br i1 %48, label %83, label %49

49:                                               ; preds = %42
  %50 = and i64 %44, 1
  %51 = icmp eq i32 %43, 1
  br i1 %51, label %73, label %52

52:                                               ; preds = %49
  %53 = sub nsw i64 %44, %50
  br label %54

54:                                               ; preds = %54, %52
  %55 = phi i64 [ 0, %52 ], [ %70, %54 ]
  %56 = phi i64 [ %53, %52 ], [ %71, %54 ]
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %47, i64 %55
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %47, i64 %55, i32 1
  %59 = bitcast %"class.WTF::Deque.219"* %58 to i64*
  %60 = bitcast %"struct.WTF::KeyValuePair.218"* %57 to i64*
  store i64 0, i64* %60, align 8
  store atomic i64 0, i64* %59 monotonic, align 8
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %47, i64 %55, i32 1, i32 0, i32 0, i32 0, i32 1
  %62 = bitcast i32* %61 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %62, i8 0, i64 16, i1 false) #16
  %63 = or i64 %55, 1
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %47, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %47, i64 %63, i32 1
  %66 = bitcast %"class.WTF::Deque.219"* %65 to i64*
  %67 = bitcast %"struct.WTF::KeyValuePair.218"* %64 to i64*
  store i64 0, i64* %67, align 8
  store atomic i64 0, i64* %66 monotonic, align 8
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %47, i64 %63, i32 1, i32 0, i32 0, i32 0, i32 1
  %69 = bitcast i32* %68 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %69, i8 0, i64 16, i1 false) #16
  %70 = add nuw nsw i64 %55, 2
  %71 = add i64 %56, -2
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %54

73:                                               ; preds = %54, %49
  %74 = phi i64 [ 0, %49 ], [ %70, %54 ]
  %75 = icmp eq i64 %50, 0
  br i1 %75, label %83, label %76

76:                                               ; preds = %73
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %47, i64 %74
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %47, i64 %74, i32 1
  %79 = bitcast %"class.WTF::Deque.219"* %78 to i64*
  %80 = bitcast %"struct.WTF::KeyValuePair.218"* %77 to i64*
  store i64 0, i64* %80, align 8
  store atomic i64 0, i64* %79 monotonic, align 8
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.218", %"struct.WTF::KeyValuePair.218"* %47, i64 %74, i32 1, i32 0, i32 0, i32 0, i32 1
  %82 = bitcast i32* %81 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %82, i8 0, i64 16, i1 false) #16
  br label %83

83:                                               ; preds = %76, %73, %42
  %84 = tail call %"struct.WTF::KeyValuePair.218"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSE_IS9_EEEESF_S8_E8RehashToEPSA_jSJ_(%"class.WTF::HashTable.215"* %0, %"struct.WTF::KeyValuePair.218"* %47, i32 %43, %"struct.WTF::KeyValuePair.218"* null) #16
  br label %85

85:                                               ; preds = %83, %25
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17CachedStorageArea6SourceEEELj1ENS1_13HeapAllocatorEE14AppendSlowCaseIRKNS1_10WeakMemberIS4_EEEEvOT_(%"class.WTF::Vector.663"*, %"class.blink::WeakMember.405"* dereferenceable(8)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.663", %"class.WTF::Vector.663"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_17CachedStorageArea6SourceEEELj1ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.663"* %0, i32 %5) #16
  %6 = getelementptr inbounds %"class.WTF::Vector.663", %"class.WTF::Vector.663"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::Member.666"*, %"class.blink::Member.666"** %6, align 8
  %8 = load i32, i32* %3, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"class.blink::Member.666", %"class.blink::Member.666"* %7, i64 %9
  %11 = bitcast %"class.blink::WeakMember.405"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.blink::Member.666"* %10 to i64*
  store atomic i64 %12, i64* %13 monotonic, align 8
  %14 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %19, label %16

16:                                               ; preds = %2
  %17 = inttoptr i64 %12 to i8*
  %18 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %17) #16
  br label %19

19:                                               ; preds = %2, %16
  %20 = load i32, i32* %3, align 4
  %21 = add i32 %20, 1
  store i32 %21, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17CachedStorageArea6SourceEEELj1ENS1_13HeapAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.663"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.663", %"class.WTF::Vector.663"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.33, i64 0, i64 0), i8* %15, i8* %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #16
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_17CachedStorageArea6SourceEEELj1ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.663"* %0, i32 %27)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17CachedStorageArea6SourceEEELj1ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.663"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.663", %"class.WTF::Vector.663"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %75, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.663", %"class.WTF::Vector.663"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.666"*, %"class.blink::Member.666"** %8, align 8
  %10 = icmp eq %"class.blink::Member.666"* %9, null
  br i1 %10, label %11, label %30

11:                                               ; preds = %7
  %12 = icmp ugt i32 %1, 1
  br i1 %12, label %13, label %26

13:                                               ; preds = %11
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17CachedStorageArea6SourceEEEEEmm(i64 %14) #16
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17CachedStorageArea6SourceEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #16
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = bitcast %"class.WTF::Vector.663"* %0 to i64*
  store atomic i64 %18, i64* %19 monotonic, align 8
  %20 = trunc i64 %16 to i32
  store i32 %20, i32* %4, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %75, label %23

23:                                               ; preds = %13
  %24 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %25 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %24) #16
  br label %75

26:                                               ; preds = %11
  %27 = getelementptr inbounds %"class.WTF::Vector.663", %"class.WTF::Vector.663"* %0, i64 0, i32 0, i32 1, i64 0
  %28 = ptrtoint i8* %27 to i64
  %29 = bitcast %"class.WTF::Vector.663"* %0 to i64*
  store atomic i64 %28, i64* %29 monotonic, align 8
  store i32 1, i32* %4, align 8
  br label %75

30:                                               ; preds = %7
  %31 = getelementptr inbounds %"class.WTF::Vector.663", %"class.WTF::Vector.663"* %0, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast i8* %31 to %"class.blink::Member.666"*
  %33 = icmp eq %"class.blink::Member.666"* %9, %32
  br i1 %33, label %49, label %34

34:                                               ; preds = %30
  %35 = icmp ult i32 %1, 2
  br i1 %35, label %41, label %36

36:                                               ; preds = %34
  %37 = zext i32 %1 to i64
  %38 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17CachedStorageArea6SourceEEEEEmm(i64 %37) #16
  %39 = load %"class.blink::Member.666"*, %"class.blink::Member.666"** %8, align 8
  %40 = icmp eq %"class.blink::Member.666"* %39, null
  br i1 %40, label %49, label %41

41:                                               ; preds = %34, %36
  %42 = phi i64 [ %38, %36 ], [ 8, %34 ]
  %43 = phi %"class.blink::Member.666"* [ %39, %36 ], [ %9, %34 ]
  %44 = bitcast %"class.blink::Member.666"* %43 to i8*
  %45 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %44, i64 %42) #16
  br i1 %45, label %46, label %49

46:                                               ; preds = %41
  %47 = lshr i64 %42, 3
  %48 = trunc i64 %47 to i32
  store i32 %48, i32* %4, align 8
  br label %75

49:                                               ; preds = %30, %36, %41
  %50 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %51 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %50, i64 0, i32 1
  %52 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %51) #16
  %53 = icmp eq i8* %52, null
  br i1 %53, label %54, label %56, !prof !3

54:                                               ; preds = %49
  %55 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %51, i8* %55) #16
  br label %56

56:                                               ; preds = %54, %49
  %57 = phi i8* [ %55, %54 ], [ %52, %49 ]
  %58 = bitcast i8* %57 to %"class.blink::ThreadState"**
  %59 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 6
  %61 = load i8, i8* %60, align 8, !range !4
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %67, label %63

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 16
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 1
  br i1 %66, label %71, label %67

67:                                               ; preds = %56, %63
  %68 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %59, i64 0, i32 13
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %63, %67
  %72 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %72) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.23, i64 0, i64 0)) #16
  %73 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %72) #16
  br label %74

74:                                               ; preds = %67, %71
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_17CachedStorageArea6SourceEEELj1ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.663"* %0, i32 %1)
  br label %75

75:                                               ; preds = %46, %26, %23, %13, %2, %74
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17CachedStorageArea6SourceEEELj1ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.663"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  br i1 %3, label %4, label %43

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.663", %"class.WTF::Vector.663"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::Member.666"*, %"class.blink::Member.666"** %5, align 8
  %7 = icmp eq %"class.blink::Member.666"* %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.663", %"class.WTF::Vector.663"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::Member.666"*
  %10 = icmp eq %"class.blink::Member.666"* %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.663"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.663", %"class.WTF::Vector.663"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %15, align 8
  br label %102

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.663", %"class.WTF::Vector.663"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.WTF::Vector.663", %"class.WTF::Vector.663"* %0, i64 0, i32 0
  %21 = ptrtoint i8* %8 to i64
  %22 = bitcast %"class.WTF::Vector.663"* %0 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::Vector.663", %"class.WTF::Vector.663"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 1, i32* %23, align 8
  %24 = icmp eq i8* %8, null
  %25 = bitcast %"class.blink::Member.666"* %6 to i8*
  %26 = shl nuw nsw i64 %19, 3
  br i1 %24, label %42, label %27, !prof !3

27:                                               ; preds = %16
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %8, i8* nonnull %25, i64 %26) #16
  %28 = icmp eq i32 %18, 0
  br i1 %28, label %42, label %29

29:                                               ; preds = %27, %39
  %30 = phi i64 [ %32, %39 ], [ %19, %27 ]
  %31 = phi %"class.blink::Member.666"* [ %40, %39 ], [ %9, %27 ]
  %32 = add nsw i64 %30, -1
  %33 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.blink::Member.666"* %31 to i8**
  %37 = load i8*, i8** %36, align 8
  %38 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %37) #16
  br label %39

39:                                               ; preds = %35, %29
  %40 = getelementptr inbounds %"class.blink::Member.666", %"class.blink::Member.666"* %31, i64 1
  %41 = icmp eq i64 %32, 0
  br i1 %41, label %42, label %29

42:                                               ; preds = %39, %16, %27
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %25, i64 %26) #16
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_17CachedStorageArea6SourceEEELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.664"* %20, %"class.blink::Member.666"* %6) #16
  br label %102

43:                                               ; preds = %2
  %44 = zext i32 %1 to i64
  %45 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17CachedStorageArea6SourceEEEEEmm(i64 %44) #16
  %46 = lshr i64 %45, 3
  %47 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17CachedStorageArea6SourceEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %46) #16
  %48 = ptrtoint %"class.blink::HeapVectorBacking"* %47 to i64
  %49 = getelementptr inbounds %"class.WTF::Vector.663", %"class.WTF::Vector.663"* %0, i64 0, i32 0, i32 0, i32 0
  %50 = load %"class.blink::Member.666"*, %"class.blink::Member.666"** %49, align 8
  %51 = getelementptr inbounds %"class.WTF::Vector.663", %"class.WTF::Vector.663"* %0, i64 0, i32 0, i32 0, i32 2
  %52 = icmp ne %"class.blink::HeapVectorBacking"* %47, null
  %53 = icmp ne %"class.blink::Member.666"* %50, null
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %81, !prof !2

55:                                               ; preds = %43
  %56 = getelementptr inbounds %"class.WTF::Vector.663", %"class.WTF::Vector.663"* %0, i64 0, i32 0, i32 1, i64 0
  %57 = bitcast i8* %56 to %"class.blink::Member.666"*
  %58 = icmp ne %"class.blink::Member.666"* %50, %57
  %59 = load i32, i32* %51, align 4
  %60 = zext i32 %59 to i64
  %61 = bitcast %"class.blink::Member.666"* %50 to i8*
  %62 = shl nuw nsw i64 %60, 3
  %63 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %63, i8* nonnull %61, i64 %62) #16
  %64 = icmp eq i32 %59, 0
  %65 = or i1 %58, %64
  br i1 %65, label %81, label %66

66:                                               ; preds = %55
  %67 = bitcast %"class.blink::HeapVectorBacking"* %47 to %"class.blink::Member.666"*
  br label %68

68:                                               ; preds = %66, %78
  %69 = phi i64 [ %71, %78 ], [ %60, %66 ]
  %70 = phi %"class.blink::Member.666"* [ %79, %78 ], [ %67, %66 ]
  %71 = add nsw i64 %69, -1
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %78, label %74

74:                                               ; preds = %68
  %75 = bitcast %"class.blink::Member.666"* %70 to i8**
  %76 = load i8*, i8** %75, align 8
  %77 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %76) #16
  br label %78

78:                                               ; preds = %74, %68
  %79 = getelementptr inbounds %"class.blink::Member.666", %"class.blink::Member.666"* %70, i64 1
  %80 = icmp eq i64 %71, 0
  br i1 %80, label %81, label %68

81:                                               ; preds = %78, %43, %55
  %82 = bitcast %"class.WTF::Vector.663"* %0 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = load i32, i32* %51, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %83, i64 %86) #16
  %87 = load %"class.blink::Member.666"*, %"class.blink::Member.666"** %49, align 8
  %88 = getelementptr inbounds %"class.WTF::Vector.663", %"class.WTF::Vector.663"* %0, i64 0, i32 0, i32 1, i64 0
  %89 = bitcast i8* %88 to %"class.blink::Member.666"*
  %90 = icmp eq %"class.blink::Member.666"* %87, %89
  br i1 %90, label %93, label %91, !prof !2

91:                                               ; preds = %81
  %92 = getelementptr inbounds %"class.WTF::Vector.663", %"class.WTF::Vector.663"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIN5blink6MemberINS1_17CachedStorageArea6SourceEEELj1ENS1_13HeapAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.664"* %92, %"class.blink::Member.666"* %87) #16
  br label %93

93:                                               ; preds = %81, %91
  %94 = bitcast %"class.WTF::Vector.663"* %0 to i64*
  store atomic i64 %48, i64* %94 monotonic, align 8
  %95 = trunc i64 %46 to i32
  %96 = getelementptr inbounds %"class.WTF::Vector.663", %"class.WTF::Vector.663"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %95, i32* %96, align 8
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %102, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %47, i64 0, i32 0
  %101 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %100) #16
  br label %102

102:                                              ; preds = %99, %93, %42, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17CachedStorageArea6SourceEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.34, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17CachedStorageArea6SourceEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.24, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.35, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_17CachedStorageArea6SourceEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_17CachedStorageArea6SourceEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17CachedStorageArea6SourceEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17CachedStorageArea6SourceEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17CachedStorageArea6SourceEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([191 x i8], [191 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_17CachedStorageArea6SourceEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17CachedStorageArea6SourceEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.666"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %101, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %25, %98
  %28 = phi i64 [ %99, %98 ], [ 0, %25 ]
  %29 = getelementptr inbounds %"class.blink::Member.666", %"class.blink::Member.666"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.666"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %98, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = and i64 %31, -131072
  %36 = inttoptr i64 %35 to i8*
  %37 = getelementptr inbounds i8, i8* %36, i64 4138
  %38 = load i8, i8* %37, align 2
  %39 = icmp eq i8 %38, 1
  br i1 %39, label %40, label %42

40:                                               ; preds = %33
  %41 = getelementptr inbounds i8, i8* %36, i64 4160
  br label %80

42:                                               ; preds = %33
  %43 = getelementptr inbounds i8, i8* %36, i64 4096
  %44 = bitcast i8* %43 to %"class.blink::NormalPage"*
  %45 = getelementptr inbounds i8, i8* %36, i64 4400
  %46 = bitcast i8* %45 to i8**
  %47 = bitcast i8* %45 to i64*
  %48 = load i64, i64* %47, align 16
  %49 = sub i64 %31, %48
  %50 = lshr i64 %49, 3
  %51 = lshr i64 %49, 6
  %52 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %44, i64 0, i32 2, i32 0, i32 1, i64 %51
  %53 = load atomic i8, i8* %52 acquire, align 1
  %54 = trunc i64 %50 to i32
  %55 = and i32 %54, 7
  %56 = shl i32 2, %55
  %57 = trunc i32 %56 to i8
  %58 = add i8 %57, -1
  %59 = and i8 %58, %53
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %61, label %67

61:                                               ; preds = %42, %61
  %62 = phi i64 [ %63, %61 ], [ %51, %42 ]
  %63 = add i64 %62, -1
  %64 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %44, i64 0, i32 2, i32 0, i32 1, i64 %63
  %65 = load atomic i8, i8* %64 acquire, align 1
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %61, label %67

67:                                               ; preds = %61, %42
  %68 = phi i64 [ %51, %42 ], [ %63, %61 ]
  %69 = phi i8 [ %59, %42 ], [ %65, %61 ]
  %70 = zext i8 %69 to i32
  %71 = tail call i32 @llvm.ctlz.i32(i32 %70, i1 true) #16, !range !72
  %72 = add nsw i32 %71, -24
  %73 = shl i64 %68, 3
  %74 = or i64 %73, 7
  %75 = sext i32 %72 to i64
  %76 = sub i64 %74, %75
  %77 = shl i64 %76, 3
  %78 = load i8*, i8** %46, align 16
  %79 = getelementptr inbounds i8, i8* %78, i64 %77
  br label %80

80:                                               ; preds = %67, %40
  %81 = phi i8* [ %41, %40 ], [ %79, %67 ]
  %82 = getelementptr inbounds i8, i8* %81, i64 8
  %83 = getelementptr inbounds i8, i8* %81, i64 4
  %84 = bitcast i8* %83 to i16*
  %85 = load atomic i16, i16* %84 acquire, align 2
  %86 = lshr i16 %85, 2
  %87 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %88 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %87, i64 0, i32 0
  %89 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %88, align 8
  %90 = zext i16 %86 to i64
  %91 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %89, i64 %90
  %92 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %91, align 8
  %93 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %92, i64 0, i32 0
  %94 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %93, align 8
  %95 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %96 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %95, i64 5
  %97 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %96, align 8
  tail call void %97(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* %82, void (%"class.blink::Visitor"*, i8*)* %94) #16
  br label %98

98:                                               ; preds = %27, %80
  %99 = add nuw nsw i64 %28, 1
  %100 = icmp eq i64 %99, %23
  br i1 %100, label %101, label %27

101:                                              ; preds = %98, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17CachedStorageArea6SourceEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.28, i64 0, i64 0), i8 1 }
}

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE5eraseEPKS8_(%"class.WTF::HashTable.402"*, %"struct.WTF::KeyValuePair.404"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %1, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #16
  br label %19

19:                                               ; preds = %18, %15, %2
  %20 = bitcast %"struct.WTF::KeyValuePair.404"* %1 to i64*
  store atomic i64 -1, i64* %20 monotonic, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* nonnull inttoptr (i64 -1 to i8*)) #16
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %1, i64 0, i32 1
  %27 = bitcast %"class.WTF::String"* %26 to i64*
  store i64 0, i64* %27, align 1
  %28 = getelementptr inbounds %"class.WTF::HashTable.402", %"class.WTF::HashTable.402"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = add i32 %29, 1
  %31 = and i32 %30, 2147483647
  %32 = and i32 %29, -2147483648
  %33 = or i32 %31, %32
  store i32 %33, i32* %28, align 8
  %34 = getelementptr inbounds %"class.WTF::HashTable.402", %"class.WTF::HashTable.402"* %0, i64 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = add i32 %35, -1
  store i32 %36, i32* %34, align 4
  %37 = mul i32 %36, 6
  %38 = getelementptr inbounds %"class.WTF::HashTable.402", %"class.WTF::HashTable.402"* %0, i64 0, i32 1
  %39 = load i32, i32* %38, align 8
  %40 = icmp ult i32 %37, %39
  %41 = icmp ugt i32 %39, 8
  %42 = and i1 %40, %41
  br i1 %42, label %43, label %72

43:                                               ; preds = %25
  %44 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %45 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %44, i64 0, i32 1
  %46 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %45) #16
  %47 = icmp eq i8* %46, null
  br i1 %47, label %48, label %50, !prof !3

48:                                               ; preds = %43
  %49 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %45, i8* %49) #16
  br label %50

50:                                               ; preds = %48, %43
  %51 = phi i8* [ %49, %48 ], [ %46, %43 ]
  %52 = bitcast i8* %51 to %"class.blink::ThreadState"**
  %53 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %53, i64 0, i32 6
  %55 = load i8, i8* %54, align 8, !range !4
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %61, label %57

57:                                               ; preds = %50
  %58 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %53, i64 0, i32 16
  %59 = load i32, i32* %58, align 4
  %60 = icmp eq i32 %59, 1
  br i1 %60, label %72, label %61

61:                                               ; preds = %50, %57
  %62 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %53, i64 0, i32 13
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, 0
  br i1 %64, label %65, label %72

65:                                               ; preds = %61
  %66 = load i32, i32* %38, align 8
  %67 = lshr i32 %66, 1
  %68 = zext i32 %67 to i64
  %69 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_10WeakMemberINS_17CachedStorageArea6SourceEEENS2_12KeyValuePairIS7_NS2_6StringEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm(i64 %68) #16
  %70 = bitcast %"class.blink::HeapHashTableBacking"* %69 to %"struct.WTF::KeyValuePair.404"*
  %71 = tail call %"struct.WTF::KeyValuePair.404"* @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.402"* %0, %"struct.WTF::KeyValuePair.404"* %70, i32 %67, %"struct.WTF::KeyValuePair.404"* null) #16
  br label %72

72:                                               ; preds = %57, %25, %65, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.404"*, %"struct.WTF::KeyValuePair.404"* } @_ZN3WTF9HashTableIN5blink10WeakMemberINS1_17CachedStorageArea6SourceEEENS_12KeyValuePairIS5_NS_6StringEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE4findEPS4_(%"class.WTF::HashTable.402"*, %"class.blink::CachedStorageArea::Source"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::CachedStorageArea::Source"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.402", %"class.WTF::HashTable.402"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.404"*, %"struct.WTF::KeyValuePair.404"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.404"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.402", %"class.WTF::HashTable.402"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::CachedStorageArea::Source"*, %"class.blink::CachedStorageArea::Source"** %34, align 8
  %36 = icmp eq %"class.blink::CachedStorageArea::Source"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::CachedStorageArea::Source"*, %"class.blink::CachedStorageArea::Source"** %54, align 8
  %56 = icmp eq %"class.blink::CachedStorageArea::Source"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::CachedStorageArea::Source"*, %"class.blink::CachedStorageArea::Source"** %63, align 8
  %65 = icmp eq %"class.blink::CachedStorageArea::Source"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair.404"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.404"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.404", %"struct.WTF::KeyValuePair.404"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair.404"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair.404"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair.404"*, %"struct.WTF::KeyValuePair.404"* } undef, %"struct.WTF::KeyValuePair.404"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair.404"*, %"struct.WTF::KeyValuePair.404"* } %78, %"struct.WTF::KeyValuePair.404"* %77, 1
  ret { %"struct.WTF::KeyValuePair.404"*, %"struct.WTF::KeyValuePair.404"* } %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(1) i8* @_ZNK3WTF6VectorIhLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.539"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  ret i8* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIhEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 2145386496
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 2145386496) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.32, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %0) #16
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(1) i8* @_ZN3WTF6VectorIhLj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.539"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.18, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.19, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.539", %"class.WTF::Vector.539"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds i8, i8* %24, i64 %25
  ret i8* %26
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { builtin nounwind }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS_17CachedStorageArea6SourceE: argument 0"}
!7 = distinct !{!7, !"_ZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS_17CachedStorageArea6SourceE"}
!8 = !{!9, !11, !13, !6}
!9 = distinct !{!9, !10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS3_17CachedStorageArea6SourceEE3$_0JNS3_26WebScopedVirtualTimePauserEEEEDcOT0_DpOT1_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS3_17CachedStorageArea6SourceEE3$_0JNS3_26WebScopedVirtualTimePauserEEEEDcOT0_DpOT1_"}
!11 = distinct !{!11, !12, !"_ZN4base8BindOnceIZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS1_17CachedStorageArea6SourceEE3$_0JNS1_26WebScopedVirtualTimePauserEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8BindOnceIZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS1_17CachedStorageArea6SourceEE3$_0JNS1_26WebScopedVirtualTimePauserEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!13 = distinct !{!13, !14, !"_ZN3WTF4BindIZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS1_17CachedStorageArea6SourceEE3$_0JNS1_26WebScopedVirtualTimePauserEEFvbEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!14 = distinct !{!14, !"_ZN3WTF4BindIZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS1_17CachedStorageArea6SourceEE3$_0JNS1_26WebScopedVirtualTimePauserEEFvbEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.isvectorized", i32 1}
!17 = distinct !{!17, !18, !16}
!18 = !{!"llvm.loop.unroll.runtime.disable"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS_17CachedStorageArea6SourceE: argument 0"}
!21 = distinct !{!21, !"_ZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS_17CachedStorageArea6SourceE"}
!22 = !{!23, !25, !27, !20}
!23 = distinct !{!23, !24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS3_17CachedStorageArea6SourceEE3$_0JNS3_26WebScopedVirtualTimePauserEEEEDcOT0_DpOT1_: argument 0"}
!24 = distinct !{!24, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS3_17CachedStorageArea6SourceEE3$_0JNS3_26WebScopedVirtualTimePauserEEEEDcOT0_DpOT1_"}
!25 = distinct !{!25, !26, !"_ZN4base8BindOnceIZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS1_17CachedStorageArea6SourceEE3$_0JNS1_26WebScopedVirtualTimePauserEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!26 = distinct !{!26, !"_ZN4base8BindOnceIZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS1_17CachedStorageArea6SourceEE3$_0JNS1_26WebScopedVirtualTimePauserEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!27 = distinct !{!27, !28, !"_ZN3WTF4BindIZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS1_17CachedStorageArea6SourceEE3$_0JNS1_26WebScopedVirtualTimePauserEEFvbEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!28 = distinct !{!28, !"_ZN3WTF4BindIZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS1_17CachedStorageArea6SourceEE3$_0JNS1_26WebScopedVirtualTimePauserEEFvbEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS_17CachedStorageArea6SourceE: argument 0"}
!31 = distinct !{!31, !"_ZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS_17CachedStorageArea6SourceE"}
!32 = !{!33, !35, !37, !30}
!33 = distinct !{!33, !34, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS3_17CachedStorageArea6SourceEE3$_0JNS3_26WebScopedVirtualTimePauserEEEEDcOT0_DpOT1_: argument 0"}
!34 = distinct !{!34, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS3_17CachedStorageArea6SourceEE3$_0JNS3_26WebScopedVirtualTimePauserEEEEDcOT0_DpOT1_"}
!35 = distinct !{!35, !36, !"_ZN4base8BindOnceIZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS1_17CachedStorageArea6SourceEE3$_0JNS1_26WebScopedVirtualTimePauserEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!36 = distinct !{!36, !"_ZN4base8BindOnceIZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS1_17CachedStorageArea6SourceEE3$_0JNS1_26WebScopedVirtualTimePauserEEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!37 = distinct !{!37, !38, !"_ZN3WTF4BindIZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS1_17CachedStorageArea6SourceEE3$_0JNS1_26WebScopedVirtualTimePauserEEFvbEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!38 = distinct !{!38, !"_ZN3WTF4BindIZN5blink12_GLOBAL__N_119MakeSuccessCallbackEPNS1_17CachedStorageArea6SourceEE3$_0JNS1_26WebScopedVirtualTimePauserEEFvbEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!41 = distinct !{!41, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!44 = distinct !{!44, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN4mojo13PendingRemoteIN5blink5mojom5blink19StorageAreaObserverEE30InitWithNewPipeAndPassReceiverEv: argument 0"}
!47 = distinct !{!47, !"_ZN4mojo13PendingRemoteIN5blink5mojom5blink19StorageAreaObserverEE30InitWithNewPipeAndPassReceiverEv"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv: argument 0"}
!50 = distinct !{!50, !"_ZN4mojo16ScopedHandleBaseINS_17MessagePipeHandleEE7releaseEv"}
!51 = !{!52, !54, !56, !58}
!52 = distinct !{!52, !53, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZNS_9DoNothing4OnceIJbEEENS2_IFvDpT_EEEvEUlbE_JEEEDcOT0_DpOT1_: argument 0"}
!53 = distinct !{!53, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZNS_9DoNothing4OnceIJbEEENS2_IFvDpT_EEEvEUlbE_JEEEDcOT0_DpOT1_"}
!54 = distinct !{!54, !55, !"_ZN4base8BindOnceIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEEENS3_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!55 = distinct !{!55, !"_ZN4base8BindOnceIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEEENS3_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!56 = distinct !{!56, !57, !"_ZN4base9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEv: argument 0"}
!57 = distinct !{!57, !"_ZN4base9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEv"}
!58 = distinct !{!58, !59, !"_ZNK4base9DoNothingcvNS_12OnceCallbackIFvDpT_EEEIJbEEEv: argument 0"}
!59 = distinct !{!59, !"_ZNK4base9DoNothingcvNS_12OnceCallbackIFvDpT_EEEIJbEEEv"}
!60 = !{!61, !63, !65, !67}
!61 = distinct !{!61, !62, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZNS_9DoNothing4OnceIJbEEENS2_IFvDpT_EEEvEUlbE_JEEEDcOT0_DpOT1_: argument 0"}
!62 = distinct !{!62, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZNS_9DoNothing4OnceIJbEEENS2_IFvDpT_EEEvEUlbE_JEEEDcOT0_DpOT1_"}
!63 = distinct !{!63, !64, !"_ZN4base8BindOnceIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEEENS3_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!64 = distinct !{!64, !"_ZN4base8BindOnceIZNS_9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEvEUlbE_JEEENS3_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!65 = distinct !{!65, !66, !"_ZN4base9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEv: argument 0"}
!66 = distinct !{!66, !"_ZN4base9DoNothing4OnceIJbEEENS_12OnceCallbackIFvDpT_EEEv"}
!67 = distinct !{!67, !68, !"_ZNK4base9DoNothingcvNS_12OnceCallbackIFvDpT_EEEIJbEEEv: argument 0"}
!68 = distinct !{!68, !"_ZNK4base9DoNothingcvNS_12OnceCallbackIFvDpT_EEEIJbEEEv"}
!69 = !{!70}
!70 = distinct !{!70, !71, !"_ZNK3WTF5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEE3endEv: argument 0"}
!71 = distinct !{!71, !"_ZNK3WTF5DequeIPN5blink17CachedStorageArea15PendingMutationELj0ENS_18PartitionAllocatorEE3endEv"}
!72 = !{i32 24, i32 33}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINS_6StringEEENS1_INS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS5_14default_deleteIS9_EEEELj0ENS_18PartitionAllocatorEEEEEE10EmptyValueEv: argument 0"}
!75 = distinct !{!75, !"_ZN3WTF22KeyValuePairHashTraitsINS_10HashTraitsINS_6StringEEENS1_INS_5DequeINSt3__110unique_ptrIN5blink17CachedStorageArea15PendingMutationENS5_14default_deleteIS9_EEEELj0ENS_18PartitionAllocatorEEEEEE10EmptyValueEv"}
