; ModuleID = '../../third_party/skia/src/gpu/tessellate/GrFillPathShader.cpp'
source_filename = "../../third_party/skia/src/gpu/tessellate/GrFillPathShader.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrGLSLGeometryProcessor = type { i32 (...)**, %class.SkTArray }
%class.SkTArray = type { %"struct.GrGLSLGeometryProcessor::TransformInfo"*, i64 }
%"struct.GrGLSLGeometryProcessor::TransformInfo" = type { %class.GrShaderVar, %class.GrShaderVar, %class.GrFragmentProcessor* }
%class.GrShaderVar = type { i32, i32, i32, %class.SkString, %class.SkString, %class.SkString }
%class.SkString = type { %class.sk_sp }
%class.sk_sp = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray.1 }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray.1 = type { %"class.std::__1::unique_ptr"*, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%class.GrFillPathShader = type { %class.GrPathShader.base, %struct.SkRGBA4f, [4 x i8] }
%class.GrPathShader.base = type { %class.GrGeometryProcessor.base, %class.SkMatrix, i8, i32 }
%class.GrGeometryProcessor.base = type <{ %class.GrProcessor, %class.GrNonAtomicRef, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32 }>
%class.GrNonAtomicRef = type { i32 }
%"class.GrGeometryProcessor::AttributeSet" = type { %"class.GrGeometryProcessor::Attribute"*, i32, i32, i64 }
%"class.GrGeometryProcessor::Attribute" = type { i8*, i32, i32 }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkRGBA4f = type { float, float, float, float }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.GrFillTriangleShader = type { %class.GrFillPathShader.base, [4 x i8] }
%class.GrFillPathShader.base = type { %class.GrPathShader.base, %struct.SkRGBA4f }
%"class.GrFillPathShader::Impl" = type <{ %class.GrGLSLGeometryProcessor, %class.GrResourceHandle, %class.GrResourceHandle, %class.GrResourceHandle, [4 x i8] }>
%class.GrResourceHandle = type { i32 }
%class.GrGLSLVertexBuilder = type { %class.GrGLSLVertexGeoBuilder.base, [12 x i8] }
%class.GrGLSLVertexGeoBuilder.base = type { %class.GrGLSLShaderBuilder.base }
%class.GrGLSLShaderBuilder.base = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.6, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.9, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.18], i32, i8, [3 x i8], i32 }>
%class.GrGLSLProgramBuilder = type opaque
%"class.SkSL::String" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%class.SkSTArray.6 = type { %class.SkAlignedSTStorage.7, %class.SkTArray.8 }
%class.SkAlignedSTStorage.7 = type { [120 x i8] }
%class.SkTArray.8 = type { %class.SkString*, i64 }
%class.SkSTArray.9 = type { %class.SkAlignedSTStorage.10, %class.SkTArray.11 }
%class.SkAlignedSTStorage.10 = type { [16 x i8] }
%class.SkTArray.11 = type { %"class.std::__1::unique_ptr.12"*, i64 }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.SkSL::Statement"* }
%"class.SkSL::Statement" = type { %"class.SkSL::IRNode" }
%"class.SkSL::IRNode" = type { i32 (...)**, i32, i32 }
%class.GrTBlockList = type { %class.GrSBlockAllocator }
%class.GrSBlockAllocator = type { [88 x i8], [8 x i8] }
%class.SkSTArray.18 = type { %class.SkAlignedSTStorage.19, %class.SkTArray.8 }
%class.SkAlignedSTStorage.19 = type { [8 x i8] }
%class.GrGLSLUniformHandler = type { i32 (...)**, %class.GrGLSLProgramBuilder* }
%class.GrFillCubicHullShader = type { %class.GrFillPathShader.base, [4 x i8] }
%class.GrFillBoundingBoxShader = type { %class.GrFillPathShader.base, [4 x i8] }
%class.GrGLSLShaderBuilder = type <{ i32 (...)**, %class.GrGLSLProgramBuilder*, %"class.SkSL::String", %class.SkSTArray.6, %class.SkString, %class.SkString, %class.SkString, %class.SkSTArray.9, [8 x i8], %class.GrTBlockList, %class.GrTBlockList, i32, [4 x i8], [2 x %class.SkSTArray.18], i32, i8, [3 x i8], i32, [12 x i8] }>
%struct.__va_list_tag = type { i32, i32, i8*, i8* }
%class.GrProcessorKeyBuilder = type { i32 (...)**, %class.SkTArray.20*, i32, i32 }
%class.SkTArray.20 = type { i32*, i64 }
%"class.GrGeometryProcessor::TextureSampler" = type <{ %class.GrSamplerState, [4 x i8], %class.GrBackendFormat, %class.GrSwizzle, i8, [5 x i8] }>
%class.GrSamplerState = type { [2 x i8], i32, i32 }
%class.GrBackendFormat = type { i32, i8, %union.anon.21, i32, [4 x i8] }
%union.anon.21 = type { %struct.anon.22 }
%struct.anon.22 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.GrSwizzle = type { i16 }
%class.GrGeometryProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef, i32, %"class.GrGeometryProcessor::AttributeSet", %"class.GrGeometryProcessor::AttributeSet", i32, [4 x i8] }>
%class.GrGLSLProgramDataManager = type { i32 (...)** }
%"struct.GrGLSLGeometryProcessor::EmitArgs" = type { %class.GrGLSLVertexBuilder*, %class.GrGLSLGeometryBuilder*, %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLVaryingHandler*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*, %class.GrGeometryProcessor*, i8*, i8*, %class.GrResourceHandle.26*, %"class.GrGLSLGeometryProcessor::FPCoordTransformHandler"* }
%class.GrGLSLGeometryBuilder = type { %class.GrGLSLVertexGeoBuilder.base, i32, [8 x i8] }
%class.GrGLSLFPFragmentBuilder = type <{ i32 (...)**, [4 x i8], [4 x i8], %class.GrGLSLShaderBuilder.base, [12 x i8] }>
%class.GrGLSLVaryingHandler = type { i32 (...)**, [8 x i8], %class.GrTBlockList.24, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrTBlockList, %class.GrGLSLProgramBuilder*, i8* }
%class.GrTBlockList.24 = type { %class.GrSBlockAllocator.25 }
%class.GrSBlockAllocator.25 = type { [80 x i8] }
%class.GrResourceHandle.26 = type { i32 }
%"class.GrGLSLGeometryProcessor::FPCoordTransformHandler" = type { %"class.GrFragmentProcessor::CIter", %class.SkTArray.30* }
%"class.GrFragmentProcessor::CIter" = type { %class.SkSTArray.27 }
%class.SkSTArray.27 = type { %class.SkAlignedSTStorage.28, %class.SkTArray.29 }
%class.SkAlignedSTStorage.28 = type { [32 x i8] }
%class.SkTArray.29 = type { %class.GrFragmentProcessor**, i64 }
%class.SkTArray.30 = type { %class.GrShaderVar*, i64 }
%"struct.GrGLSLGeometryProcessor::GrGPArgs" = type { %class.GrShaderVar, %class.GrShaderVar }

$_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz = comdat any

$_ZN16GrFillPathShaderD0Ev = comdat any

$_ZNK16GrFillPathShader19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder = comdat any

$_ZNK19GrGeometryProcessor16onTextureSamplerEi = comdat any

$_ZN20GrFillTriangleShaderD0Ev = comdat any

$_ZNK20GrFillTriangleShader4nameEv = comdat any

$_ZN21GrFillCubicHullShaderD0Ev = comdat any

$_ZNK21GrFillCubicHullShader4nameEv = comdat any

$_ZN11GrProcessorD2Ev = comdat any

$_ZN23GrFillBoundingBoxShaderD0Ev = comdat any

$_ZNK23GrFillBoundingBoxShader4nameEv = comdat any

$_ZN16GrFillPathShader4ImplD0Ev = comdat any

$_ZN16GrFillPathShader4Impl7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor = comdat any

$_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps = comdat any

$_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps = comdat any

$_ZN16GrFillPathShader4Impl10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS1_8GrGPArgsE = comdat any

$_ZN23GrGLSLGeometryProcessorD2Ev = comdat any

$_ZN23GrGLSLGeometryProcessorD0Ev = comdat any

$_ZN23GrGLSLGeometryProcessor13TransformInfoD2Ev = comdat any

$_ZTVN16GrFillPathShader4ImplE = comdat any

$_ZTV23GrGLSLGeometryProcessor = comdat any

@.str = private unnamed_addr constant [87 x i8] c"\0A    localcoord = input_point;\0A    vertexpos = AFFINE_MATRIX * localcoord + TRANSLATE;\00", align 1
@.str.1 = private unnamed_addr constant [1976 x i8] c"\0A    float4x2 P = float4x2(input_points_0_1, input_points_2_3);\0A    if (isinf(P[3].y)) {  // Is the curve a conic?\0A        float w = P[3].x;\0A        if (isinf(w)) {\0A            // A conic with w=Inf is an exact triangle.\0A            P = float4x2(P[0], P[1], P[2], P[2]);\0A        } else {\0A            // Convert the control points to a trapeziodal hull that circumcscribes the conic.\0A            float2 p1w = P[1] * w;\0A            float T = .51;  // Bias outward a bit to ensure we cover the outermost samples.\0A            float2 c1 = mix(P[0], p1w, T);\0A            float2 c2 = mix(P[2], p1w, T);\0A            float iw = 1 / mix(1, w, T);\0A            P = float4x2(P[0], c1 * iw, c2 * iw, P[2]);\0A        }\0A    }\0A\0A    // Translate the points to v0..3 where v0=0.\0A    float2 v1 = P[1] - P[0], v2 = P[2] - P[0], v3 = P[3] - P[0];\0A\0A    // Reorder the points so v2 bisects v1 and v3.\0A    if (sign(determinant(float2x2(v2,v1))) == sign(determinant(float2x2(v2,v3)))) {\0A        float2 tmp = P[2];\0A        if (sign(determinant(float2x2(v1,v2))) != sign(determinant(float2x2(v1,v3)))) {\0A            P[2] = P[1];  // swap(P2, P1)\0A            P[1] = tmp;\0A        } else {\0A            P[2] = P[3];  // swap(P2, P3)\0A            P[3] = tmp;\0A        }\0A    }\0A\0A    // sk_VertexID comes in fan order. Convert to strip order.\0A    int vertexidx = sk_VertexID;\0A    vertexidx ^= vertexidx >> 1;\0A\0A    // Find the \22turn direction\22 of each corner and net turn direction.\0A    float vertexdir = 0;\0A    float netdir = 0;\0A    for (int i = 0; i < 4; ++i) {\0A        float2 prev = P[i] - P[(i + 3) & 3], next = P[(i + 1) & 3] - P[i];\0A        float dir = sign(determinant(float2x2(prev, next)));\0A        if (i == vertexidx) {\0A            vertexdir = dir;\0A        }\0A        netdir += dir;\0A    }\0A\0A    // Remove the non-convex vertex, if any.\0A    if (vertexdir != sign(netdir)) {\0A        vertexidx = (vertexidx + 1) & 3;\0A    }\0A\0A    localcoord = P[vertexidx];\0A    vertexpos = AFFINE_MATRIX * localcoord + TRANSLATE;\00", align 1
@.str.2 = private unnamed_addr constant [404 x i8] c"\0A    // Bloat the bounding box by 1/4px to avoid potential T-junctions at the edges.\0A    float2x2 M_ = inverse(AFFINE_MATRIX);\0A    float2 bloat = float2(abs(M_[0]) + abs(M_[1])) * .25;\0A\0A    // Find the vertex position.\0A    float2 T = float2(sk_VertexID & 1, sk_VertexID >> 1);\0A    localcoord = mix(pathBounds.xy - bloat, pathBounds.zw + bloat, T);\0A    vertexpos = AFFINE_MATRIX * localcoord + TRANSLATE;\00", align 1
@_ZTV16GrFillPathShader = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrProcessor*)* @_ZN11GrProcessorD2Ev to i8*), i8* bitcast (void (%class.GrFillPathShader*)* @_ZN16GrFillPathShaderD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.GrFillPathShader*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK16GrFillPathShader19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (%class.GrGLSLGeometryProcessor* (%class.GrFillPathShader*, %class.GrShaderCaps*)* @_ZNK16GrFillPathShader18createGLSLInstanceERK12GrShaderCaps to i8*), i8* bitcast (%"class.GrGeometryProcessor::TextureSampler"* (%class.GrGeometryProcessor*, i32)* @_ZNK19GrGeometryProcessor16onTextureSamplerEi to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTV20GrFillTriangleShader = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrProcessor*)* @_ZN11GrProcessorD2Ev to i8*), i8* bitcast (void (%class.GrFillTriangleShader*)* @_ZN20GrFillTriangleShaderD0Ev to i8*), i8* bitcast (i8* (%class.GrFillTriangleShader*)* @_ZNK20GrFillTriangleShader4nameEv to i8*), i8* bitcast (void (%class.GrFillPathShader*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK16GrFillPathShader19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (%class.GrGLSLGeometryProcessor* (%class.GrFillPathShader*, %class.GrShaderCaps*)* @_ZNK16GrFillPathShader18createGLSLInstanceERK12GrShaderCaps to i8*), i8* bitcast (%"class.GrGeometryProcessor::TextureSampler"* (%class.GrGeometryProcessor*, i32)* @_ZNK19GrGeometryProcessor16onTextureSamplerEi to i8*), i8* bitcast (void (%class.GrFillTriangleShader*, %"class.GrFillPathShader::Impl"*, %class.GrGLSLVertexBuilder*, %class.GrGLSLUniformHandler*)* @_ZNK20GrFillTriangleShader14emitVertexCodeEPN16GrFillPathShader4ImplEP19GrGLSLVertexBuilderP20GrGLSLUniformHandler to i8*)] }, align 8
@_ZTV21GrFillCubicHullShader = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrProcessor*)* @_ZN11GrProcessorD2Ev to i8*), i8* bitcast (void (%class.GrFillCubicHullShader*)* @_ZN21GrFillCubicHullShaderD0Ev to i8*), i8* bitcast (i8* (%class.GrFillCubicHullShader*)* @_ZNK21GrFillCubicHullShader4nameEv to i8*), i8* bitcast (void (%class.GrFillPathShader*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK16GrFillPathShader19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (%class.GrGLSLGeometryProcessor* (%class.GrFillPathShader*, %class.GrShaderCaps*)* @_ZNK16GrFillPathShader18createGLSLInstanceERK12GrShaderCaps to i8*), i8* bitcast (%"class.GrGeometryProcessor::TextureSampler"* (%class.GrGeometryProcessor*, i32)* @_ZNK19GrGeometryProcessor16onTextureSamplerEi to i8*), i8* bitcast (void (%class.GrFillCubicHullShader*, %"class.GrFillPathShader::Impl"*, %class.GrGLSLVertexBuilder*, %class.GrGLSLUniformHandler*)* @_ZNK21GrFillCubicHullShader14emitVertexCodeEPN16GrFillPathShader4ImplEP19GrGLSLVertexBuilderP20GrGLSLUniformHandler to i8*)] }, align 8
@_ZTV23GrFillBoundingBoxShader = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrProcessor*)* @_ZN11GrProcessorD2Ev to i8*), i8* bitcast (void (%class.GrFillBoundingBoxShader*)* @_ZN23GrFillBoundingBoxShaderD0Ev to i8*), i8* bitcast (i8* (%class.GrFillBoundingBoxShader*)* @_ZNK23GrFillBoundingBoxShader4nameEv to i8*), i8* bitcast (void (%class.GrFillPathShader*, %class.GrShaderCaps*, %class.GrProcessorKeyBuilder*)* @_ZNK16GrFillPathShader19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder to i8*), i8* bitcast (%class.GrGLSLGeometryProcessor* (%class.GrFillPathShader*, %class.GrShaderCaps*)* @_ZNK16GrFillPathShader18createGLSLInstanceERK12GrShaderCaps to i8*), i8* bitcast (%"class.GrGeometryProcessor::TextureSampler"* (%class.GrGeometryProcessor*, i32)* @_ZNK19GrGeometryProcessor16onTextureSamplerEi to i8*), i8* bitcast (void (%class.GrFillBoundingBoxShader*, %"class.GrFillPathShader::Impl"*, %class.GrGLSLVertexBuilder*, %class.GrGLSLUniformHandler*)* @_ZNK23GrFillBoundingBoxShader14emitVertexCodeEPN16GrFillPathShader4ImplEP19GrGLSLVertexBuilderP20GrGLSLUniformHandler to i8*)] }, align 8
@_ZTVN16GrFillPathShader4ImplE = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD2Ev to i8*), i8* bitcast (void (%"class.GrFillPathShader::Impl"*)* @_ZN16GrFillPathShader4ImplD0Ev to i8*), i8* bitcast (void (%"class.GrFillPathShader::Impl"*, %class.GrGLSLProgramDataManager*, %class.GrShaderCaps*, %class.GrGeometryProcessor*)* @_ZN16GrFillPathShader4Impl7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%"class.GrFillPathShader::Impl"*, %"struct.GrGLSLGeometryProcessor::EmitArgs"*, %"struct.GrGLSLGeometryProcessor::GrGPArgs"*)* @_ZN16GrFillPathShader4Impl10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS1_8GrGPArgsE to i8*)] }, comdat, align 8
@_ZTV23GrGLSLGeometryProcessor = linkonce_odr hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD2Ev to i8*), i8* bitcast (void (%class.GrGLSLGeometryProcessor*)* @_ZN23GrGLSLGeometryProcessorD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void (%class.SkString*, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor*, i8*, %class.GrGLSLUniformHandler*, %class.GrShaderCaps*)* @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@.str.3 = private unnamed_addr constant [62 x i8] c"../../third_party/skia/src/gpu/glsl/GrGLSLGeometryProcessor.h\00", align 1
@.str.4 = private unnamed_addr constant [17 x i8] c"Not implemented.\00", align 1
@.str.5 = private unnamed_addr constant [13 x i8] c"affineMatrix\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"translate\00", align 1
@.str.7 = private unnamed_addr constant [39 x i8] c"float2x2 AFFINE_MATRIX = float2x2(%s);\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"float2 TRANSLATE = %s;\00", align 1
@.str.9 = private unnamed_addr constant [30 x i8] c"float2 localcoord, vertexpos;\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"vertexpos\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"localcoord\00", align 1
@.str.12 = private unnamed_addr constant [6 x i8] c"color\00", align 1
@.str.13 = private unnamed_addr constant [15 x i8] c"half4 %s = %s;\00", align 1
@.str.14 = private unnamed_addr constant [27 x i8] c"const half4 %s = half4(1);\00", align 1
@.str.16 = private unnamed_addr constant [53 x i8] c"../../third_party/skia/src/gpu/GrGeometryProcessor.h\00", align 1
@.str.17 = private unnamed_addr constant [30 x i8] c"Illegal texture sampler index\00", align 1
@.str.18 = private unnamed_addr constant [21 x i8] c"GrFillTriangleShader\00", align 1
@.str.19 = private unnamed_addr constant [22 x i8] c"GrFillCubicHullShader\00", align 1
@.str.20 = private unnamed_addr constant [24 x i8] c"GrFillBoundingBoxShader\00", align 1

; Function Attrs: nofree nounwind ssp uwtable
define hidden noalias nonnull %class.GrGLSLGeometryProcessor* @_ZNK16GrFillPathShader18createGLSLInstanceERK12GrShaderCaps(%class.GrFillPathShader* nocapture readnone, %class.GrShaderCaps* nocapture readnone dereferenceable(144)) unnamed_addr #0 align 2 {
  %3 = tail call i8* @_Znwm(i64 40) #11
  %4 = bitcast i8* %3 to i32 (...)***
  %5 = getelementptr inbounds i8, i8* %3, i64 16
  %6 = bitcast i8* %5 to i64*
  %7 = getelementptr inbounds i8, i8* %3, i64 8
  %8 = bitcast i8* %7 to %"struct.GrGLSLGeometryProcessor::TransformInfo"**
  store %"struct.GrGLSLGeometryProcessor::TransformInfo"* null, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %8, align 8
  store i64 1, i64* %6, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN16GrFillPathShader4ImplE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %9 = getelementptr inbounds i8, i8* %3, i64 24
  %10 = bitcast i8* %9 to i32*
  store i32 -1, i32* %10, align 4
  %11 = getelementptr inbounds i8, i8* %3, i64 28
  %12 = bitcast i8* %11 to i32*
  store i32 -1, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %3, i64 32
  %14 = bitcast i8* %13 to i32*
  store i32 -1, i32* %14, align 4
  %15 = bitcast i8* %3 to %class.GrGLSLGeometryProcessor*
  ret %class.GrGLSLGeometryProcessor* %15
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK20GrFillTriangleShader14emitVertexCodeEPN16GrFillPathShader4ImplEP19GrGLSLVertexBuilderP20GrGLSLUniformHandler(%class.GrFillTriangleShader* nocapture readnone, %"class.GrFillPathShader::Impl"* nocapture readnone, %class.GrGLSLVertexBuilder* nocapture readonly, %class.GrGLSLUniformHandler* nocapture readnone) unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %class.GrGLSLVertexBuilder, %class.GrGLSLVertexBuilder* %2, i64 0, i32 0, i32 0, i32 14
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %class.GrGLSLVertexBuilder, %class.GrGLSLVertexBuilder* %2, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %8 = load %class.SkString*, %class.SkString** %7, align 8
  %9 = sext i32 %6 to i64
  %10 = getelementptr inbounds %class.SkString, %class.SkString* %8, i64 %9
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %10, i64 -1, i8* getelementptr inbounds ([87 x i8], [87 x i8]* @.str, i64 0, i64 0)) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK21GrFillCubicHullShader14emitVertexCodeEPN16GrFillPathShader4ImplEP19GrGLSLVertexBuilderP20GrGLSLUniformHandler(%class.GrFillCubicHullShader* nocapture readnone, %"class.GrFillPathShader::Impl"* nocapture readnone, %class.GrGLSLVertexBuilder* nocapture readonly, %class.GrGLSLUniformHandler* nocapture readnone) unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %class.GrGLSLVertexBuilder, %class.GrGLSLVertexBuilder* %2, i64 0, i32 0, i32 0, i32 14
  %6 = load i32, i32* %5, align 8
  %7 = getelementptr inbounds %class.GrGLSLVertexBuilder, %class.GrGLSLVertexBuilder* %2, i64 0, i32 0, i32 0, i32 3, i32 1, i32 0
  %8 = load %class.SkString*, %class.SkString** %7, align 8
  %9 = sext i32 %6 to i64
  %10 = getelementptr inbounds %class.SkString, %class.SkString* %8, i64 %9
  tail call void @_ZN8SkString6insertEmPKc(%class.SkString* %10, i64 -1, i8* getelementptr inbounds ([1976 x i8], [1976 x i8]* @.str.1, i64 0, i64 0)) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK23GrFillBoundingBoxShader14emitVertexCodeEPN16GrFillPathShader4ImplEP19GrGLSLVertexBuilderP20GrGLSLUniformHandler(%class.GrFillBoundingBoxShader* nocapture readnone, %"class.GrFillPathShader::Impl"* nocapture readnone, %class.GrGLSLVertexBuilder*, %class.GrGLSLUniformHandler* nocapture readnone) unnamed_addr #2 align 2 {
  %5 = bitcast %class.GrGLSLVertexBuilder* %2 to %class.GrGLSLShaderBuilder*
  tail call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %5, i8* getelementptr inbounds ([404 x i8], [404 x i8]* @.str.2, i64 0, i64 0))
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder*, i8*, ...) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca [1 x %struct.__va_list_tag], align 16
  %4 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #10
  %5 = getelementptr inbounds [1 x %struct.__va_list_tag], [1 x %struct.__va_list_tag]* %3, i64 0, i64 0
  %6 = bitcast [1 x %struct.__va_list_tag]* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 24, i1 false)
  call void @llvm.va_start(i8* nonnull %4)
  %7 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 3, i32 0, i32 0, i64 120
  %8 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %0, i64 0, i32 14
  %9 = load i32, i32* %8, align 8
  %10 = bitcast i8* %7 to %class.SkString**
  %11 = load %class.SkString*, %class.SkString** %10, align 8
  %12 = sext i32 %9 to i64
  %13 = getelementptr inbounds %class.SkString, %class.SkString* %11, i64 %12
  call void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString* %13, i8* %1, %struct.__va_list_tag* nonnull %5) #10
  call void @llvm.va_end(i8* nonnull %4)
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #10
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16GrFillPathShaderD0Ev(%class.GrFillPathShader*) unnamed_addr #3 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK16GrFillPathShader19getGLSLProcessorKeyERK12GrShaderCapsP21GrProcessorKeyBuilder(%class.GrFillPathShader*, %class.GrShaderCaps* dereferenceable(144), %class.GrProcessorKeyBuilder*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(96) %"class.GrGeometryProcessor::TextureSampler"* @_ZNK19GrGeometryProcessor16onTextureSamplerEi(%class.GrGeometryProcessor*, i32) unnamed_addr #2 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([53 x i8], [53 x i8]* @.str.16, i64 0, i64 0), i32 304, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.17, i64 0, i64 0)) #12
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN20GrFillTriangleShaderD0Ev(%class.GrFillTriangleShader*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %class.GrFillTriangleShader* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK20GrFillTriangleShader4nameEv(%class.GrFillTriangleShader*) unnamed_addr #2 comdat align 2 {
  ret i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.18, i64 0, i64 0)
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN21GrFillCubicHullShaderD0Ev(%class.GrFillCubicHullShader*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %class.GrFillCubicHullShader* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK21GrFillCubicHullShader4nameEv(%class.GrFillCubicHullShader*) unnamed_addr #2 comdat align 2 {
  ret i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.19, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11GrProcessorD2Ev(%class.GrProcessor*) unnamed_addr #2 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrFillBoundingBoxShaderD0Ev(%class.GrFillBoundingBoxShader*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %class.GrFillBoundingBoxShader* %0 to i8*
  tail call void @_ZN11GrProcessordlEPv(i8* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK23GrFillBoundingBoxShader4nameEv(%class.GrFillBoundingBoxShader*) unnamed_addr #2 comdat align 2 {
  ret i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.20, i64 0, i64 0)
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16GrFillPathShader4ImplD0Ev(%"class.GrFillPathShader::Impl"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.GrFillPathShader::Impl", %"class.GrFillPathShader::Impl"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV23GrGLSLGeometryProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.GrFillPathShader::Impl", %"class.GrFillPathShader::Impl"* %0, i64 0, i32 0, i32 1
  %4 = getelementptr inbounds %"class.GrFillPathShader::Impl", %"class.GrFillPathShader::Impl"* %0, i64 0, i32 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %14, %1
  %11 = phi i64 [ %5, %1 ], [ %24, %14 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %31, label %28

14:                                               ; preds = %14, %8
  %15 = phi i64 [ 0, %8 ], [ %23, %14 ]
  %16 = load %"struct.GrGLSLGeometryProcessor::TransformInfo"*, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %9, align 8
  %17 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 1, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %17) #10
  %18 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 1, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %18) #10
  %19 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 1, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %19) #10
  %20 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 0, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %20) #10
  %21 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 0, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %21) #10
  %22 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15, i32 0, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %22) #10
  %23 = add nuw nsw i64 %15, 1
  %24 = load i64, i64* %4, align 8
  %25 = lshr i64 %24, 1
  %26 = and i64 %25, 2147483647
  %27 = icmp ult i64 %23, %26
  br i1 %27, label %14, label %10

28:                                               ; preds = %10
  %29 = bitcast %class.SkTArray* %3 to i8**
  %30 = load i8*, i8** %29, align 8
  tail call void @_Z7sk_freePv(i8* %30) #10
  br label %31

31:                                               ; preds = %10, %28
  %32 = bitcast %"class.GrFillPathShader::Impl"* %0 to i8*
  tail call void @_ZdlPv(i8* %32) #11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16GrFillPathShader4Impl7setDataERK24GrGLSLProgramDataManagerRK12GrShaderCapsRK19GrGeometryProcessor(%"class.GrFillPathShader::Impl"*, %class.GrGLSLProgramDataManager* dereferenceable(8), %class.GrShaderCaps* dereferenceable(144), %class.GrGeometryProcessor* dereferenceable(80)) unnamed_addr #2 comdat align 2 {
  %5 = bitcast %class.GrGeometryProcessor* %3 to %class.GrFillPathShader*
  %6 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %3, i64 0, i32 6
  %7 = getelementptr inbounds %"class.GrFillPathShader::Impl", %"class.GrFillPathShader::Impl"* %0, i64 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 8
  %9 = bitcast [4 x i8]* %6 to float*
  %10 = load float, float* %9, align 4
  %11 = getelementptr inbounds [4 x i8], [4 x i8]* %6, i64 3
  %12 = bitcast [4 x i8]* %11 to float*
  %13 = load float, float* %12, align 4
  %14 = getelementptr inbounds [4 x i8], [4 x i8]* %6, i64 1
  %15 = bitcast [4 x i8]* %14 to float*
  %16 = load float, float* %15, align 4
  %17 = getelementptr inbounds [4 x i8], [4 x i8]* %6, i64 4
  %18 = bitcast [4 x i8]* %17 to float*
  %19 = load float, float* %18, align 4
  %20 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)***
  %21 = load void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)**, void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)*** %20, align 8
  %22 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)** %21, i64 16
  %23 = load void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)** %22, align 8
  tail call void %23(%class.GrGLSLProgramDataManager* %1, i32 %8, float %10, float %13, float %16, float %19) #10
  %24 = getelementptr inbounds %"class.GrFillPathShader::Impl", %"class.GrFillPathShader::Impl"* %0, i64 0, i32 2, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds [4 x i8], [4 x i8]* %6, i64 2
  %27 = bitcast [4 x i8]* %26 to float*
  %28 = load float, float* %27, align 4
  %29 = getelementptr inbounds [4 x i8], [4 x i8]* %6, i64 5
  %30 = bitcast [4 x i8]* %29 to float*
  %31 = load float, float* %30, align 4
  %32 = bitcast %class.GrGLSLProgramDataManager* %1 to void (%class.GrGLSLProgramDataManager*, i32, float, float)***
  %33 = load void (%class.GrGLSLProgramDataManager*, i32, float, float)**, void (%class.GrGLSLProgramDataManager*, i32, float, float)*** %32, align 8
  %34 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float)** %33, i64 8
  %35 = load void (%class.GrGLSLProgramDataManager*, i32, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float)** %34, align 8
  tail call void %35(%class.GrGLSLProgramDataManager* %1, i32 %25, float %28, float %31) #10
  %36 = getelementptr inbounds %"class.GrFillPathShader::Impl", %"class.GrFillPathShader::Impl"* %0, i64 0, i32 3, i32 0
  %37 = load i32, i32* %36, align 8
  %38 = getelementptr inbounds %class.GrFillPathShader, %class.GrFillPathShader* %5, i64 0, i32 1, i32 0
  %39 = load float, float* %38, align 4
  %40 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %3, i64 1, i32 4
  %41 = bitcast %"class.GrGeometryProcessor::AttributeSet"* %40 to float*
  %42 = load float, float* %41, align 4
  %43 = getelementptr inbounds %class.GrFillPathShader, %class.GrFillPathShader* %5, i64 0, i32 1, i32 2
  %44 = load float, float* %43, align 4
  %45 = getelementptr inbounds %class.GrGeometryProcessor, %class.GrGeometryProcessor* %3, i64 1, i32 4, i32 1
  %46 = bitcast i32* %45 to float*
  %47 = load float, float* %46, align 4
  %48 = load void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)**, void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)*** %20, align 8
  %49 = getelementptr inbounds void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)** %48, i64 16
  %50 = load void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)*, void (%class.GrGLSLProgramDataManager*, i32, float, float, float, float)** %49, align 8
  tail call void %50(%class.GrGLSLProgramDataManager* %1, i32 %37, float %39, float %42, float %44, float %47) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK23GrGLSLGeometryProcessor24getTessControlShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps(%class.SkString* noalias sret, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor* dereferenceable(80), i8*, %class.GrGLSLUniformHandler* dereferenceable(16), %class.GrShaderCaps* dereferenceable(144)) unnamed_addr #2 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0), i32 139, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK23GrGLSLGeometryProcessor27getTessEvaluationShaderGLSLERK19GrGeometryProcessorPKcRK20GrGLSLUniformHandlerRK12GrShaderCaps(%class.SkString* noalias sret, %class.GrGLSLGeometryProcessor*, %class.GrGeometryProcessor* dereferenceable(80), i8*, %class.GrGLSLUniformHandler* dereferenceable(16), %class.GrShaderCaps* dereferenceable(144)) unnamed_addr #2 comdat align 2 {
  tail call void (i8*, i32, i8*, ...) @_Z16SkAbort_FileLinePKciS0_z(i8* getelementptr inbounds ([62 x i8], [62 x i8]* @.str.3, i64 0, i64 0), i32 145, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.4, i64 0, i64 0)) #12
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16GrFillPathShader4Impl10onEmitCodeERN23GrGLSLGeometryProcessor8EmitArgsEPNS1_8GrGPArgsE(%"class.GrFillPathShader::Impl"*, %"struct.GrGLSLGeometryProcessor::EmitArgs"* dereferenceable(88), %"struct.GrGLSLGeometryProcessor::GrGPArgs"*) unnamed_addr #2 comdat align 2 {
  %4 = alloca i8*, align 8
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 6
  %8 = bitcast %class.GrGeometryProcessor** %7 to %class.GrFillPathShader**
  %9 = load %class.GrFillPathShader*, %class.GrFillPathShader** %8, align 8
  %10 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 3
  %11 = load %class.GrGLSLVaryingHandler*, %class.GrGLSLVaryingHandler** %10, align 8
  %12 = bitcast %class.GrFillPathShader* %9 to %class.GrGeometryProcessor*
  tail call void @_ZN20GrGLSLVaryingHandler14emitAttributesERK19GrGeometryProcessor(%class.GrGLSLVaryingHandler* %11, %class.GrGeometryProcessor* dereferenceable(80) %12) #10
  %13 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %4, align 8
  %14 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %15 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 4
  %16 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %15, align 8
  %17 = bitcast %class.GrGLSLUniformHandler* %16 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %18 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %17, align 8
  %19 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %18, i64 13
  %20 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %19, align 8
  %21 = call i32 %20(%class.GrGLSLUniformHandler* %16, %class.GrFragmentProcessor* null, i32 1, i32 24, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.5, i64 0, i64 0), i1 zeroext true, i32 0, i8** nonnull %4) #10
  %22 = getelementptr inbounds %"class.GrFillPathShader::Impl", %"class.GrFillPathShader::Impl"* %0, i64 0, i32 1, i32 0
  store i32 %21, i32* %22, align 8
  %23 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %15, align 8
  %24 = bitcast %class.GrGLSLUniformHandler* %23 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %25 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %24, align 8
  %26 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %25, i64 13
  %27 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %26, align 8
  %28 = call i32 %27(%class.GrGLSLUniformHandler* %23, %class.GrFragmentProcessor* null, i32 1, i32 22, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0), i1 zeroext true, i32 0, i8** nonnull %5) #10
  %29 = getelementptr inbounds %"class.GrFillPathShader::Impl", %"class.GrFillPathShader::Impl"* %0, i64 0, i32 2, i32 0
  store i32 %28, i32* %29, align 4
  %30 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 0
  %31 = bitcast %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1 to %class.GrGLSLShaderBuilder**
  %32 = load %class.GrGLSLShaderBuilder*, %class.GrGLSLShaderBuilder** %31, align 8
  %33 = load i8*, i8** %4, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %32, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.7, i64 0, i64 0), i8* %33)
  %34 = load %class.GrGLSLShaderBuilder*, %class.GrGLSLShaderBuilder** %31, align 8
  %35 = load i8*, i8** %5, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %34, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %35)
  %36 = load %class.GrGLSLShaderBuilder*, %class.GrGLSLShaderBuilder** %31, align 8
  %37 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %36, i64 0, i32 3, i32 0, i32 0, i64 120
  %38 = getelementptr inbounds %class.GrGLSLShaderBuilder, %class.GrGLSLShaderBuilder* %36, i64 0, i32 14
  %39 = load i32, i32* %38, align 8
  %40 = bitcast i8* %37 to %class.SkString**
  %41 = load %class.SkString*, %class.SkString** %40, align 8
  %42 = sext i32 %39 to i64
  %43 = getelementptr inbounds %class.SkString, %class.SkString* %41, i64 %42
  call void @_ZN8SkString6insertEmPKc(%class.SkString* %43, i64 -1, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.9, i64 0, i64 0)) #10
  %44 = load %class.GrGLSLVertexBuilder*, %class.GrGLSLVertexBuilder** %30, align 8
  %45 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %15, align 8
  %46 = bitcast %class.GrFillPathShader* %9 to void (%class.GrFillPathShader*, %"class.GrFillPathShader::Impl"*, %class.GrGLSLVertexBuilder*, %class.GrGLSLUniformHandler*)***
  %47 = load void (%class.GrFillPathShader*, %"class.GrFillPathShader::Impl"*, %class.GrGLSLVertexBuilder*, %class.GrGLSLUniformHandler*)**, void (%class.GrFillPathShader*, %"class.GrFillPathShader::Impl"*, %class.GrGLSLVertexBuilder*, %class.GrGLSLUniformHandler*)*** %46, align 8
  %48 = getelementptr inbounds void (%class.GrFillPathShader*, %"class.GrFillPathShader::Impl"*, %class.GrGLSLVertexBuilder*, %class.GrGLSLUniformHandler*)*, void (%class.GrFillPathShader*, %"class.GrFillPathShader::Impl"*, %class.GrGLSLVertexBuilder*, %class.GrGLSLUniformHandler*)** %47, i64 6
  %49 = load void (%class.GrFillPathShader*, %"class.GrFillPathShader::Impl"*, %class.GrGLSLVertexBuilder*, %class.GrGLSLUniformHandler*)*, void (%class.GrFillPathShader*, %"class.GrFillPathShader::Impl"*, %class.GrGLSLVertexBuilder*, %class.GrGLSLUniformHandler*)** %48, align 8
  call void %49(%class.GrFillPathShader* %9, %"class.GrFillPathShader::Impl"* %0, %class.GrGLSLVertexBuilder* %44, %class.GrGLSLUniformHandler* %45) #10
  %50 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 0, i32 0
  store i32 22, i32* %50, align 8
  %51 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 0, i32 3
  %52 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString* %51, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0)) #10
  %53 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 1, i32 0
  store i32 22, i32* %53, align 8
  %54 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::GrGPArgs", %"struct.GrGLSLGeometryProcessor::GrGPArgs"* %2, i64 0, i32 1, i32 3
  %55 = call dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString* %54, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0)) #10
  %56 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %57 = load %class.GrGLSLUniformHandler*, %class.GrGLSLUniformHandler** %15, align 8
  %58 = bitcast %class.GrGLSLUniformHandler* %57 to i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)***
  %59 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)**, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*** %58, align 8
  %60 = getelementptr inbounds i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %59, i64 13
  %61 = load i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)*, i32 (%class.GrGLSLUniformHandler*, %class.GrFragmentProcessor*, i32, i32, i8*, i1, i32, i8**)** %60, align 8
  %62 = call i32 %61(%class.GrGLSLUniformHandler* %57, %class.GrFragmentProcessor* null, i32 16, i32 31, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.12, i64 0, i64 0), i1 zeroext true, i32 0, i8** nonnull %6) #10
  %63 = getelementptr inbounds %"class.GrFillPathShader::Impl", %"class.GrFillPathShader::Impl"* %0, i64 0, i32 3, i32 0
  store i32 %62, i32* %63, align 8
  %64 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 2
  %65 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %64, align 8
  %66 = bitcast %class.GrGLSLFPFragmentBuilder* %65 to i8**
  %67 = load i8*, i8** %66, align 8
  %68 = getelementptr i8, i8* %67, i64 -24
  %69 = bitcast i8* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = bitcast %class.GrGLSLFPFragmentBuilder* %65 to i8*
  %72 = getelementptr inbounds i8, i8* %71, i64 %70
  %73 = bitcast i8* %72 to %class.GrGLSLShaderBuilder*
  %74 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 7
  %75 = load i8*, i8** %74, align 8
  %76 = load i8*, i8** %6, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %73, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.13, i64 0, i64 0), i8* %75, i8* %76)
  %77 = load %class.GrGLSLFPFragmentBuilder*, %class.GrGLSLFPFragmentBuilder** %64, align 8
  %78 = bitcast %class.GrGLSLFPFragmentBuilder* %77 to i8**
  %79 = load i8*, i8** %78, align 8
  %80 = getelementptr i8, i8* %79, i64 -24
  %81 = bitcast i8* %80 to i64*
  %82 = load i64, i64* %81, align 8
  %83 = bitcast %class.GrGLSLFPFragmentBuilder* %77 to i8*
  %84 = getelementptr inbounds i8, i8* %83, i64 %82
  %85 = bitcast i8* %84 to %class.GrGLSLShaderBuilder*
  %86 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::EmitArgs", %"struct.GrGLSLGeometryProcessor::EmitArgs"* %1, i64 0, i32 8
  %87 = load i8*, i8** %86, align 8
  call void (%class.GrGLSLShaderBuilder*, i8*, ...) @_ZN19GrGLSLShaderBuilder11codeAppendfEPKcz(%class.GrGLSLShaderBuilder* %85, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.14, i64 0, i64 0), i8* %87)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLGeometryProcessorD2Ev(%class.GrGLSLGeometryProcessor*) unnamed_addr #2 comdat align 2 {
  %2 = getelementptr inbounds %class.GrGLSLGeometryProcessor, %class.GrGLSLGeometryProcessor* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTV23GrGLSLGeometryProcessor, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.GrGLSLGeometryProcessor, %class.GrGLSLGeometryProcessor* %0, i64 0, i32 1
  %4 = getelementptr inbounds %class.GrGLSLGeometryProcessor, %class.GrGLSLGeometryProcessor* %0, i64 0, i32 1, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967294
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %class.SkTArray, %class.SkTArray* %3, i64 0, i32 0
  br label %14

10:                                               ; preds = %14, %1
  %11 = phi i64 [ %5, %1 ], [ %19, %14 ]
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %26, label %23

14:                                               ; preds = %14, %8
  %15 = phi i64 [ 0, %8 ], [ %18, %14 ]
  %16 = load %"struct.GrGLSLGeometryProcessor::TransformInfo"*, %"struct.GrGLSLGeometryProcessor::TransformInfo"** %9, align 8
  %17 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %16, i64 %15
  tail call void @_ZN23GrGLSLGeometryProcessor13TransformInfoD2Ev(%"struct.GrGLSLGeometryProcessor::TransformInfo"* %17) #10
  %18 = add nuw nsw i64 %15, 1
  %19 = load i64, i64* %4, align 8
  %20 = lshr i64 %19, 1
  %21 = and i64 %20, 2147483647
  %22 = icmp ult i64 %18, %21
  br i1 %22, label %14, label %10

23:                                               ; preds = %10
  %24 = bitcast %class.SkTArray* %3 to i8**
  %25 = load i8*, i8** %24, align 8
  tail call void @_Z7sk_freePv(i8* %25) #10
  br label %26

26:                                               ; preds = %10, %23
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLGeometryProcessorD0Ev(%class.GrGLSLGeometryProcessor*) unnamed_addr #2 comdat align 2 {
  tail call void @llvm.trap() #12
  unreachable
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN23GrGLSLGeometryProcessor13TransformInfoD2Ev(%"struct.GrGLSLGeometryProcessor::TransformInfo"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 1, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %2) #10
  %3 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 1, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %3) #10
  %4 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 1, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %4) #10
  %5 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 0, i32 5
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %5) #10
  %6 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 0, i32 4
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %6) #10
  %7 = getelementptr inbounds %"struct.GrGLSLGeometryProcessor::TransformInfo", %"struct.GrGLSLGeometryProcessor::TransformInfo"* %0, i64 0, i32 0, i32 3
  tail call void @_ZN8SkStringD1Ev(%class.SkString* %7) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @_ZN8SkStringD1Ev(%class.SkString*) unnamed_addr #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

; Function Attrs: noreturn
declare void @_Z16SkAbort_FileLinePKciS0_z(i8*, i32, i8*, ...) local_unnamed_addr #9

declare void @_ZN20GrGLSLVaryingHandler14emitAttributesERK19GrGeometryProcessor(%class.GrGLSLVaryingHandler*, %class.GrGeometryProcessor* dereferenceable(80)) local_unnamed_addr #5

declare dereferenceable(8) %class.SkString* @_ZN8SkStringaSEPKc(%class.SkString*, i8*) local_unnamed_addr #5

declare void @_ZN8SkString6insertEmPKc(%class.SkString*, i64, i8*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @llvm.va_start(i8*) #10

declare void @_ZN8SkString12appendVAListEPKcP13__va_list_tag(%class.SkString*, i8*, %struct.__va_list_tag*) local_unnamed_addr #5

; Function Attrs: nounwind
declare void @llvm.va_end(i8*) #10

; Function Attrs: nounwind
declare void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
