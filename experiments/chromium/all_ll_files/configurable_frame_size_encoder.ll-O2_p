; ModuleID = '../../third_party/webrtc/test/configurable_frame_size_encoder.cc'
source_filename = "../../third_party/webrtc/test/configurable_frame_size_encoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.webrtc::VideoPlayoutDelay" = type { i32, i32 }
%"class.rtc::scoped_refptr.57" = type { %"class.webrtc::EncodedImageBufferInterface"* }
%"class.webrtc::EncodedImageBufferInterface" = type { %"class.rtc::RefCountInterface" }
%"class.rtc::RefCountInterface" = type { i32 (...)** }
%union.anon.4 = type { i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.58", %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.58" = type { %"struct.std::__1::__compressed_pair_elem.59" }
%"struct.std::__1::__compressed_pair_elem.59" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { i64 }
%union.anon.16 = type { %"struct.webrtc::HdrMetadata" }
%"struct.webrtc::HdrMetadata" = type { %"struct.webrtc::HdrMasteringMetadata", i32, i32 }
%"struct.webrtc::HdrMasteringMetadata" = type { %"struct.webrtc::HdrMasteringMetadata::Chromaticity", %"struct.webrtc::HdrMasteringMetadata::Chromaticity", %"struct.webrtc::HdrMasteringMetadata::Chromaticity", %"struct.webrtc::HdrMasteringMetadata::Chromaticity", float, float }
%"struct.webrtc::HdrMasteringMetadata::Chromaticity" = type { float, float }
%union.anon.70 = type { i16 }
%"class.webrtc::RtpPacketInfos" = type { %"class.rtc::scoped_refptr.22" }
%"class.rtc::scoped_refptr.22" = type { %"class.webrtc::RtpPacketInfos::Data"* }
%"class.webrtc::RtpPacketInfos::Data" = type { %"class.rtc::RefCountedBase.base", %"class.std::__1::vector" }
%"class.rtc::RefCountedBase.base" = type <{ i32 (...)**, %"class.webrtc::webrtc_impl::RefCounter" }>
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.23" }
%"struct.std::__1::__atomic_base.23" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.webrtc::RtpPacketInfo"*, %"class.webrtc::RtpPacketInfo"*, %"class.std::__1::__compressed_pair.46" }
%"class.webrtc::RtpPacketInfo" = type { i32, %"class.std::__1::vector.24", i32, %"class.absl::optional.31", %"class.absl::optional.36", %"class.absl::optional.41", %"class.webrtc::Timestamp" }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { i32*, i32*, %"class.std::__1::__compressed_pair.26" }
%"class.std::__1::__compressed_pair.26" = type { %"struct.std::__1::__compressed_pair_elem.27" }
%"struct.std::__1::__compressed_pair_elem.27" = type { i32* }
%"class.absl::optional.31" = type { %"class.absl::optional_internal::optional_data.32" }
%"class.absl::optional_internal::optional_data.32" = type { %"class.absl::optional_internal::optional_data_base.33" }
%"class.absl::optional_internal::optional_data_base.33" = type { %"class.absl::optional_internal::optional_data_dtor_base.34" }
%"class.absl::optional_internal::optional_data_dtor_base.34" = type { i8, %union.anon.35 }
%union.anon.35 = type { i8 }
%"class.absl::optional.36" = type { %"class.absl::optional_internal::optional_data.37" }
%"class.absl::optional_internal::optional_data.37" = type { %"class.absl::optional_internal::optional_data_base.38" }
%"class.absl::optional_internal::optional_data_base.38" = type { %"class.absl::optional_internal::optional_data_dtor_base.39" }
%"class.absl::optional_internal::optional_data_dtor_base.39" = type { i8, %union.anon.40 }
%union.anon.40 = type { %"struct.webrtc::AbsoluteCaptureTime" }
%"struct.webrtc::AbsoluteCaptureTime" = type { i64, %"class.absl::optional.41" }
%"class.absl::optional.41" = type { %"class.absl::optional_internal::optional_data.42" }
%"class.absl::optional_internal::optional_data.42" = type { %"class.absl::optional_internal::optional_data_base.43" }
%"class.absl::optional_internal::optional_data_base.43" = type { %"class.absl::optional_internal::optional_data_dtor_base.44" }
%"class.absl::optional_internal::optional_data_dtor_base.44" = type { i8, %union.anon.45 }
%union.anon.45 = type { i64 }
%"class.webrtc::Timestamp" = type { %"class.webrtc::rtc_units_impl::UnitBase" }
%"class.webrtc::rtc_units_impl::UnitBase" = type { i64 }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.webrtc::RtpPacketInfo"* }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.webrtc::test::ConfigurableFrameSizeEncoder" = type <{ %"class.webrtc::VideoEncoder", %"class.webrtc::EncodedImageCallback"*, %"class.absl::optional", i64, i32, [4 x i8] }>
%"class.webrtc::VideoEncoder" = type { i32 (...)** }
%"class.webrtc::EncodedImageCallback" = type { i32 (...)** }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::function" }
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { void (%"union.std::__1::__function::__policy_storage"*)* }
%"class.webrtc::FecControllerOverride" = type { i32 (...)** }
%"class.webrtc::VideoCodec" = type { i32, i16, i16, i32, i32, i32, i32, i8, i32, i8, [3 x %"struct.webrtc::SpatialLayer"], [5 x %"struct.webrtc::SpatialLayer"], i32, i8, %"class.absl::optional.0", %"struct.webrtc::VideoCodec::TimingFrameTriggerThresholds", i8, %"union.webrtc::VideoCodecUnion", %"class.std::__1::basic_string" }
%"struct.webrtc::SpatialLayer" = type { i16, i16, float, i8, i32, i32, i32, i32, i8 }
%"class.absl::optional.0" = type { %"class.absl::optional_internal::optional_data.1" }
%"class.absl::optional_internal::optional_data.1" = type { %"class.absl::optional_internal::optional_data_base.2" }
%"class.absl::optional_internal::optional_data_base.2" = type { %"class.absl::optional_internal::optional_data_dtor_base.3" }
%"class.absl::optional_internal::optional_data_dtor_base.3" = type { i8, %union.anon.4 }
%"struct.webrtc::VideoCodec::TimingFrameTriggerThresholds" = type { i64, i16 }
%"union.webrtc::VideoCodecUnion" = type { %"struct.webrtc::VideoCodecVP9" }
%"struct.webrtc::VideoCodecVP9" = type { i32, i8, i8, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.5 }
%union.anon.5 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.webrtc::VideoEncoder::Settings" = type { %"struct.webrtc::VideoEncoder::Capabilities", i32, i64 }
%"struct.webrtc::VideoEncoder::Capabilities" = type { i8 }
%"class.webrtc::VideoFrame" = type { i16, %"class.rtc::scoped_refptr", i32, i64, i64, i32, %"class.absl::optional.7", %"class.absl::optional.0", %"class.absl::optional.17", %"class.webrtc::RtpPacketInfos", %"class.absl::optional.51" }
%"class.rtc::scoped_refptr" = type { %"class.webrtc::VideoFrameBuffer"* }
%"class.webrtc::VideoFrameBuffer" = type { %"class.rtc::RefCountInterface" }
%"class.absl::optional.7" = type { %"class.absl::optional_internal::optional_data.8" }
%"class.absl::optional_internal::optional_data.8" = type { %"class.absl::optional_internal::optional_data_base.9" }
%"class.absl::optional_internal::optional_data_base.9" = type { %"class.absl::optional_internal::optional_data_dtor_base.10" }
%"class.absl::optional_internal::optional_data_dtor_base.10" = type { i8, %union.anon.11 }
%union.anon.11 = type { %"class.webrtc::ColorSpace" }
%"class.webrtc::ColorSpace" = type { i8, i8, i8, i32, i32, i32, %"class.absl::optional.12" }
%"class.absl::optional.12" = type { %"class.absl::optional_internal::optional_data.13" }
%"class.absl::optional_internal::optional_data.13" = type { %"class.absl::optional_internal::optional_data_base.14" }
%"class.absl::optional_internal::optional_data_base.14" = type { %"class.absl::optional_internal::optional_data_dtor_base.15" }
%"class.absl::optional_internal::optional_data_dtor_base.15" = type { i8, %union.anon.16 }
%"class.absl::optional.17" = type { %"class.absl::optional_internal::optional_data.18" }
%"class.absl::optional_internal::optional_data.18" = type { %"class.absl::optional_internal::optional_data_base.19" }
%"class.absl::optional_internal::optional_data_base.19" = type { %"class.absl::optional_internal::optional_data_dtor_base.20" }
%"class.absl::optional_internal::optional_data_dtor_base.20" = type { i8, %union.anon.21 }
%union.anon.21 = type { %"struct.webrtc::VideoFrame::UpdateRect" }
%"struct.webrtc::VideoFrame::UpdateRect" = type { i32, i32, i32, i32 }
%"class.absl::optional.51" = type { %"class.absl::optional_internal::optional_data.52" }
%"class.absl::optional_internal::optional_data.52" = type { %"class.absl::optional_internal::optional_data_base.53" }
%"class.absl::optional_internal::optional_data_base.53" = type { %"class.absl::optional_internal::optional_data_dtor_base.54" }
%"class.absl::optional_internal::optional_data_dtor_base.54" = type { i8, %union.anon.55 }
%union.anon.55 = type { %"struct.webrtc::VideoFrame::ProcessingTime" }
%"struct.webrtc::VideoFrame::ProcessingTime" = type { %"class.webrtc::Timestamp", %"class.webrtc::Timestamp" }
%"class.std::__1::vector.56" = type opaque
%"class.webrtc::EncodedImage" = type <{ i32, i32, i64, i64, i32, i32, i8, [3 x i8], i32, %"struct.webrtc::VideoPlayoutDelay", %"struct.webrtc::EncodedImage::Timing", %"class.rtc::scoped_refptr.57", i64, i32, %"class.absl::optional.0", [4 x i8], %"class.std::__1::map", %"class.absl::optional.7", %"class.absl::optional.66", [4 x i8], %"class.webrtc::RtpPacketInfos", i8, [7 x i8] }>
%"struct.webrtc::EncodedImage::Timing" = type { i8, i64, i64, i64, i64, i64, i64, i64, i64 }
%"class.absl::optional.66" = type { %"class.absl::optional_internal::optional_data.67" }
%"class.absl::optional_internal::optional_data.67" = type { %"class.absl::optional_internal::optional_data_base.68" }
%"class.absl::optional_internal::optional_data_base.68" = type { %"class.absl::optional_internal::optional_data_dtor_base.69" }
%"class.absl::optional_internal::optional_data_dtor_base.69" = type { i8, %union.anon.70 }
%"class.rtc::scoped_refptr.71" = type { %"class.webrtc::EncodedImageBuffer"* }
%"class.webrtc::EncodedImageBuffer" = type { %"class.webrtc::EncodedImageBufferInterface", i64, i8* }
%"struct.webrtc::CodecSpecificInfo" = type { i32, %"union.webrtc::CodecSpecificInfoUnion", i8, %"class.absl::optional.72", %"class.absl::optional.99" }
%"union.webrtc::CodecSpecificInfoUnion" = type { %"struct.webrtc::CodecSpecificInfoVP9" }
%"struct.webrtc::CodecSpecificInfoVP9" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i64, i64, i8, [8 x i16], [8 x i16], %"struct.webrtc::GofInfoVP9", i8, [3 x i8], i8 }
%"struct.webrtc::GofInfoVP9" = type { i64, [255 x i8], [255 x i8], [255 x i8], [255 x [3 x i8]], i16 }
%"class.absl::optional.72" = type { %"class.absl::optional_internal::optional_data.73" }
%"class.absl::optional_internal::optional_data.73" = type { %"class.absl::optional_internal::optional_data_base.74" }
%"class.absl::optional_internal::optional_data_base.74" = type { %"class.absl::optional_internal::optional_data_dtor_base.75" }
%"class.absl::optional_internal::optional_data_dtor_base.75" = type { i8, %union.anon.76 }
%union.anon.76 = type { %"struct.webrtc::GenericFrameInfo" }
%"struct.webrtc::GenericFrameInfo" = type { %"struct.webrtc::FrameDependencyTemplate", %"class.absl::InlinedVector.87", %"class.std::__1::vector.94", %"class.std::__1::bitset" }
%"struct.webrtc::FrameDependencyTemplate" = type { i32, i32, %"class.absl::InlinedVector", %"class.absl::InlinedVector.80", %"class.absl::InlinedVector.80" }
%"class.absl::InlinedVector" = type { %"class.absl::inlined_vector_internal::Storage" }
%"class.absl::inlined_vector_internal::Storage" = type { %"class.absl::container_internal::CompressedTuple", %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data" }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.79" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.79" = type { i64 }
%"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Allocated", [24 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Allocated" = type { i32*, i64 }
%"class.absl::InlinedVector.80" = type { %"class.absl::inlined_vector_internal::Storage.81" }
%"class.absl::inlined_vector_internal::Storage.81" = type { %"class.absl::container_internal::CompressedTuple.82", %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data" }
%"class.absl::container_internal::CompressedTuple.82" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.83" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.83" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.79" }
%"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Allocated" }
%"struct.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Allocated" = type { i32*, i64 }
%"class.absl::InlinedVector.87" = type { %"class.absl::inlined_vector_internal::Storage.88" }
%"class.absl::inlined_vector_internal::Storage.88" = type { %"class.absl::container_internal::CompressedTuple.89", %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data" }
%"class.absl::container_internal::CompressedTuple.89" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.90" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.90" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.79" }
%"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Allocated", [48 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Allocated" = type { %"struct.webrtc::CodecBufferUsage"*, i64 }
%"struct.webrtc::CodecBufferUsage" = type <{ i32, i8, i8, [2 x i8] }>
%"class.std::__1::vector.94" = type { i64*, i64, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.absl::optional.99" = type { %"class.absl::optional_internal::optional_data.100" }
%"class.absl::optional_internal::optional_data.100" = type { %"class.absl::optional_internal::optional_data_base.101" }
%"class.absl::optional_internal::optional_data_base.101" = type { %"class.absl::optional_internal::optional_data_dtor_base.102" }
%"class.absl::optional_internal::optional_data_dtor_base.102" = type { i8, %union.anon.103 }
%union.anon.103 = type { %"struct.webrtc::FrameDependencyStructure" }
%"struct.webrtc::FrameDependencyStructure" = type { i32, i32, i32, %"class.absl::InlinedVector.104", %"class.absl::InlinedVector.106", %"class.std::__1::vector.113" }
%"class.absl::InlinedVector.104" = type { %"class.absl::inlined_vector_internal::Storage.105" }
%"class.absl::inlined_vector_internal::Storage.105" = type { %"class.absl::container_internal::CompressedTuple.82", %"union.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Data" }
%"union.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Allocated", [24 x i8] }
%"struct.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Allocated" = type { i32*, i64 }
%"class.absl::InlinedVector.106" = type { %"class.absl::inlined_vector_internal::Storage.107" }
%"class.absl::inlined_vector_internal::Storage.107" = type { %"class.absl::container_internal::CompressedTuple.108", %"union.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Data" }
%"class.absl::container_internal::CompressedTuple.108" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.109" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.109" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.79" }
%"union.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Allocated", [16 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Allocated" = type { %"class.webrtc::RenderResolution"*, i64 }
%"class.webrtc::RenderResolution" = type { i32, i32 }
%"class.std::__1::vector.113" = type { %"class.std::__1::__vector_base.114" }
%"class.std::__1::__vector_base.114" = type { %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"*, %"class.std::__1::__compressed_pair.115" }
%"class.std::__1::__compressed_pair.115" = type { %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"struct.webrtc::FrameDependencyTemplate"* }
%"struct.webrtc::VideoEncoder::RateControlParameters" = type { i32 (...)**, %"class.webrtc::VideoBitrateAllocation", %"class.webrtc::VideoBitrateAllocation", double, %"class.webrtc::DataRate" }
%"class.webrtc::VideoBitrateAllocation" = type <{ i32, [5 x [4 x %"class.absl::optional.120"]], i8, [3 x i8] }>
%"class.absl::optional.120" = type { %"class.absl::optional_internal::optional_data.121" }
%"class.absl::optional_internal::optional_data.121" = type { %"class.absl::optional_internal::optional_data_base.122" }
%"class.absl::optional_internal::optional_data_base.122" = type { %"class.absl::optional_internal::optional_data_dtor_base.123" }
%"class.absl::optional_internal::optional_data_dtor_base.123" = type { i8, %union.anon.124 }
%union.anon.124 = type { i32 }
%"class.webrtc::DataRate" = type { %"class.webrtc::rtc_units_impl::RelativeUnit" }
%"class.webrtc::rtc_units_impl::RelativeUnit" = type { %"class.webrtc::rtc_units_impl::UnitBase.125" }
%"class.webrtc::rtc_units_impl::UnitBase.125" = type { i64 }
%"struct.webrtc::VideoEncoder::LossNotification" = type { i32, i32, %"class.absl::optional.126", %"class.absl::optional.126" }
%"class.absl::optional.126" = type { %"class.absl::optional_internal::optional_data.127" }
%"class.absl::optional_internal::optional_data.127" = type { %"class.absl::optional_internal::optional_data_base.128" }
%"class.absl::optional_internal::optional_data_base.128" = type { %"class.absl::optional_internal::optional_data_dtor_base.129" }
%"class.absl::optional_internal::optional_data_dtor_base.129" = type { i8, %union.anon.130 }
%union.anon.130 = type { i8 }
%"struct.webrtc::VideoEncoder::EncoderInfo" = type { %"struct.webrtc::VideoEncoder::ScalingSettings", i32, i8, i8, %"class.std::__1::basic_string", i8, i8, i8, [5 x %"class.absl::InlinedVector.136"], %"class.std::__1::vector.143", i8, %"class.absl::InlinedVector.150" }
%"struct.webrtc::VideoEncoder::ScalingSettings" = type { %"class.absl::optional.131", i32 }
%"class.absl::optional.131" = type { %"class.absl::optional_internal::optional_data.132" }
%"class.absl::optional_internal::optional_data.132" = type { %"class.absl::optional_internal::optional_data_base.133" }
%"class.absl::optional_internal::optional_data_base.133" = type { %"class.absl::optional_internal::optional_data_dtor_base.134" }
%"class.absl::optional_internal::optional_data_dtor_base.134" = type { i8, %union.anon.135 }
%union.anon.135 = type { %"struct.webrtc::VideoEncoder::QpThresholds" }
%"struct.webrtc::VideoEncoder::QpThresholds" = type { i32, i32 }
%"class.absl::InlinedVector.136" = type { %"class.absl::inlined_vector_internal::Storage.137" }
%"class.absl::inlined_vector_internal::Storage.137" = type { %"class.absl::container_internal::CompressedTuple.138", %"union.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Data" }
%"class.absl::container_internal::CompressedTuple.138" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.139" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.139" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.79" }
%"union.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Allocated" }
%"struct.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Allocated" = type { i8*, i64 }
%"class.std::__1::vector.143" = type { %"class.std::__1::__vector_base.144" }
%"class.std::__1::__vector_base.144" = type { %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*, %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*, %"class.std::__1::__compressed_pair.145" }
%"struct.webrtc::VideoEncoder::ResolutionBitrateLimits" = type { i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* }
%"class.absl::InlinedVector.150" = type { %"class.absl::inlined_vector_internal::Storage.151" }
%"class.absl::inlined_vector_internal::Storage.151" = type { %"class.absl::container_internal::CompressedTuple.152", %"union.absl::inlined_vector_internal::Storage<webrtc::VideoFrameBuffer::Type, 5, std::__1::allocator<webrtc::VideoFrameBuffer::Type> >::Data" }
%"class.absl::container_internal::CompressedTuple.152" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.153" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.153" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.79" }
%"union.absl::inlined_vector_internal::Storage<webrtc::VideoFrameBuffer::Type, 5, std::__1::allocator<webrtc::VideoFrameBuffer::Type> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::VideoFrameBuffer::Type, 5, std::__1::allocator<webrtc::VideoFrameBuffer::Type> >::Allocated", [8 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::VideoFrameBuffer::Type, 5, std::__1::allocator<webrtc::VideoFrameBuffer::Type> >::Allocated" = type { i32*, i64 }

$_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE = comdat any

$_ZNSt3__125__throw_bad_function_callEv = comdat any

$_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = comdat any

@_ZTVN6webrtc4test28ConfigurableFrameSizeEncoderE = hidden unnamed_addr constant { [15 x i8*] } { [15 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::test::ConfigurableFrameSizeEncoder"*)* @_ZN6webrtc4test28ConfigurableFrameSizeEncoderD2Ev to i8*), i8* bitcast (void (%"class.webrtc::test::ConfigurableFrameSizeEncoder"*)* @_ZN6webrtc4test28ConfigurableFrameSizeEncoderD0Ev to i8*), i8* bitcast (void (%"class.webrtc::test::ConfigurableFrameSizeEncoder"*, %"class.webrtc::FecControllerOverride"*)* @_ZN6webrtc4test28ConfigurableFrameSizeEncoder24SetFecControllerOverrideEPNS_21FecControllerOverrideE to i8*), i8* bitcast (i32 (%"class.webrtc::VideoEncoder"*, %"class.webrtc::VideoCodec"*, i32, i64)* @_ZN6webrtc12VideoEncoder10InitEncodeEPKNS_10VideoCodecEim to i8*), i8* bitcast (i32 (%"class.webrtc::test::ConfigurableFrameSizeEncoder"*, %"class.webrtc::VideoCodec"*, %"struct.webrtc::VideoEncoder::Settings"*)* @_ZN6webrtc4test28ConfigurableFrameSizeEncoder10InitEncodeEPKNS_10VideoCodecERKNS_12VideoEncoder8SettingsE to i8*), i8* bitcast (i32 (%"class.webrtc::test::ConfigurableFrameSizeEncoder"*, %"class.webrtc::EncodedImageCallback"*)* @_ZN6webrtc4test28ConfigurableFrameSizeEncoder30RegisterEncodeCompleteCallbackEPNS_20EncodedImageCallbackE to i8*), i8* bitcast (i32 (%"class.webrtc::test::ConfigurableFrameSizeEncoder"*)* @_ZN6webrtc4test28ConfigurableFrameSizeEncoder7ReleaseEv to i8*), i8* bitcast (i32 (%"class.webrtc::test::ConfigurableFrameSizeEncoder"*, %"class.webrtc::VideoFrame"*, %"class.std::__1::vector.56"*)* @_ZN6webrtc4test28ConfigurableFrameSizeEncoder6EncodeERKNS_10VideoFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS5_9allocatorIS7_EEEE to i8*), i8* bitcast (void (%"class.webrtc::test::ConfigurableFrameSizeEncoder"*, %"struct.webrtc::VideoEncoder::RateControlParameters"*)* @_ZN6webrtc4test28ConfigurableFrameSizeEncoder8SetRatesERKNS_12VideoEncoder21RateControlParametersE to i8*), i8* bitcast (void (%"class.webrtc::VideoEncoder"*, float)* @_ZN6webrtc12VideoEncoder22OnPacketLossRateUpdateEf to i8*), i8* bitcast (void (%"class.webrtc::VideoEncoder"*, i64)* @_ZN6webrtc12VideoEncoder11OnRttUpdateEl to i8*), i8* bitcast (void (%"class.webrtc::VideoEncoder"*, %"struct.webrtc::VideoEncoder::LossNotification"*)* @_ZN6webrtc12VideoEncoder18OnLossNotificationERKNS0_16LossNotificationE to i8*), i8* bitcast (void (%"struct.webrtc::VideoEncoder::EncoderInfo"*, %"class.webrtc::VideoEncoder"*)* @_ZNK6webrtc12VideoEncoder14GetEncoderInfoEv to i8*)] }, align 8
@__const._ZN6webrtc4test28ConfigurableFrameSizeEncoder6EncodeERKNS_10VideoFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS5_9allocatorIS7_EEEE.encodedImage = private unnamed_addr constant <{ i32, i32, i64, i64, i32, i32, i8, [3 x i8], i32, %"struct.webrtc::VideoPlayoutDelay", { i8, [7 x i8], i64, i64, i64, i64, i64, i64, i64, i64 }, %"class.rtc::scoped_refptr.57", i64, i32, { { { { i8, [3 x i8], %union.anon.4 } } } }, [4 x i8], %"class.std::__1::map", { { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.16 } } } } } } } } } }, { { { { i8, [1 x i8], %union.anon.70 } } } }, [4 x i8], %"class.webrtc::RtpPacketInfos", i8, [7 x i8] }> <{ i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, i64 -6148914691236517206, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, %"struct.webrtc::VideoPlayoutDelay" { i32 -1431655766, i32 -1431655766 }, { i8, [7 x i8], i64, i64, i64, i64, i64, i64, i64, i64 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206 }, %"class.rtc::scoped_refptr.57" { %"class.webrtc::EncodedImageBufferInterface"* inttoptr (i64 -6148914691236517206 to %"class.webrtc::EncodedImageBufferInterface"*) }, i64 -6148914691236517206, i32 -1431655766, { { { { i8, [3 x i8], %union.anon.4 } } } } { { { { i8, [3 x i8], %union.anon.4 } } } { { { i8, [3 x i8], %union.anon.4 } } { { i8, [3 x i8], %union.anon.4 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.4 { i32 -1431655766 } } } } }, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::map" { %"class.std::__1::__tree" { %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__compressed_pair.58" { %"struct.std::__1::__compressed_pair_elem.59" { %"class.std::__1::__tree_end_node" { %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*) } } }, %"class.std::__1::__compressed_pair.63" { %"struct.std::__1::__compressed_pair_elem.64" { i64 -6148914691236517206 } } } }, { { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.16 } } } } } } } } } } { { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.16 } } } } } } } } } { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.16 } } } } } } } } { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.16 } } } } } } } { i8 -86, [3 x i8] c"\AA\AA\AA", { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.16 } } } } } } { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.16 } } } } } { i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, { { { { i8, [3 x i8], %union.anon.16 } } } } { { { { i8, [3 x i8], %union.anon.16 } } } { { { i8, [3 x i8], %union.anon.16 } } { { i8, [3 x i8], %union.anon.16 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.16 { %"struct.webrtc::HdrMetadata" { %"struct.webrtc::HdrMasteringMetadata" { %"struct.webrtc::HdrMasteringMetadata::Chromaticity" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.webrtc::HdrMasteringMetadata::Chromaticity" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.webrtc::HdrMasteringMetadata::Chromaticity" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.webrtc::HdrMasteringMetadata::Chromaticity" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i32 -1431655766 } } } } } } } } } } } }, { { { { i8, [1 x i8], %union.anon.70 } } } } { { { { i8, [1 x i8], %union.anon.70 } } } { { { i8, [1 x i8], %union.anon.70 } } { { i8, [1 x i8], %union.anon.70 } { i8 -86, [1 x i8] c"\AA", %union.anon.70 { i16 -21846 } } } } }, [4 x i8] c"\AA\AA\AA\AA", %"class.webrtc::RtpPacketInfos" { %"class.rtc::scoped_refptr.22" { %"class.webrtc::RtpPacketInfos::Data"* inttoptr (i64 -6148914691236517206 to %"class.webrtc::RtpPacketInfos::Data"*) } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, align 8
@_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_ = linkonce_odr hidden constant %"struct.std::__1::__function::__policy" { i8* (i8*)* null, void (i8*)* null, i8 1, %"class.std::type_info"* null }, comdat, align 8

@_ZN6webrtc4test28ConfigurableFrameSizeEncoderC1Em = hidden unnamed_addr alias void (%"class.webrtc::test::ConfigurableFrameSizeEncoder"*, i64), void (%"class.webrtc::test::ConfigurableFrameSizeEncoder"*, i64)* @_ZN6webrtc4test28ConfigurableFrameSizeEncoderC2Em
@_ZN6webrtc4test28ConfigurableFrameSizeEncoderD1Ev = hidden unnamed_addr alias void (%"class.webrtc::test::ConfigurableFrameSizeEncoder"*), void (%"class.webrtc::test::ConfigurableFrameSizeEncoder"*)* @_ZN6webrtc4test28ConfigurableFrameSizeEncoderD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4test28ConfigurableFrameSizeEncoderC2Em(%"class.webrtc::test::ConfigurableFrameSizeEncoder"* nocapture, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6webrtc4test28ConfigurableFrameSizeEncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 1
  store %"class.webrtc::EncodedImageCallback"* null, %"class.webrtc::EncodedImageCallback"** %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %7 = bitcast %union.anon* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 32, i1 false) #9
  %8 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 3
  store i64 %1, i64* %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 4
  store i32 0, i32* %9, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4test28ConfigurableFrameSizeEncoderD2Ev(%"class.webrtc::test::ConfigurableFrameSizeEncoder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6webrtc4test28ConfigurableFrameSizeEncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %8 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %8, i64 0, i32 1
  %10 = load void (i8*)*, void (i8*)** %9, align 8
  %11 = icmp eq void (i8*)* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  tail call void %10(i8* %14) #9
  br label %15

15:                                               ; preds = %12, %6
  store i8 0, i8* %3, align 8
  br label %16

16:                                               ; preds = %1, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4test28ConfigurableFrameSizeEncoderD0Ev(%"class.webrtc::test::ConfigurableFrameSizeEncoder"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [15 x i8*] }, { [15 x i8*] }* @_ZTVN6webrtc4test28ConfigurableFrameSizeEncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %15, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %8 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %7, align 8
  %9 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %8, i64 0, i32 1
  %10 = load void (i8*)*, void (i8*)** %9, align 8
  %11 = icmp eq void (i8*)* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  tail call void %10(i8* %14) #9
  br label %15

15:                                               ; preds = %6, %12, %1
  %16 = bitcast %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0 to i8*
  tail call void @_ZdlPv(i8* %16) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc4test28ConfigurableFrameSizeEncoder24SetFecControllerOverrideEPNS_21FecControllerOverrideE(%"class.webrtc::test::ConfigurableFrameSizeEncoder"* nocapture, %"class.webrtc::FecControllerOverride"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN6webrtc4test28ConfigurableFrameSizeEncoder10InitEncodeEPKNS_10VideoCodecERKNS_12VideoEncoder8SettingsE(%"class.webrtc::test::ConfigurableFrameSizeEncoder"* nocapture readnone, %"class.webrtc::VideoCodec"* nocapture readnone, %"struct.webrtc::VideoEncoder::Settings"* nocapture readnone dereferenceable(16)) unnamed_addr #2 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc4test28ConfigurableFrameSizeEncoder6EncodeERKNS_10VideoFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS5_9allocatorIS7_EEEE(%"class.webrtc::test::ConfigurableFrameSizeEncoder"*, %"class.webrtc::VideoFrame"* dereferenceable(176), %"class.std::__1::vector.56"* nocapture readnone) unnamed_addr #0 align 2 {
  %4 = alloca %"class.webrtc::EncodedImage", align 8
  %5 = alloca %"class.rtc::scoped_refptr.71", align 8
  %6 = alloca %"struct.webrtc::CodecSpecificInfo", align 8
  %7 = bitcast %"class.webrtc::EncodedImage"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %7) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %7, i8* align 8 bitcast (<{ i32, i32, i64, i64, i32, i32, i8, [3 x i8], i32, %"struct.webrtc::VideoPlayoutDelay", { i8, [7 x i8], i64, i64, i64, i64, i64, i64, i64, i64 }, %"class.rtc::scoped_refptr.57", i64, i32, { { { { i8, [3 x i8], %union.anon.4 } } } }, [4 x i8], %"class.std::__1::map", { { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.16 } } } } } } } } } }, { { { { i8, [1 x i8], %union.anon.70 } } } }, [4 x i8], %"class.webrtc::RtpPacketInfos", i8, [7 x i8] }>* @__const._ZN6webrtc4test28ConfigurableFrameSizeEncoder6EncodeERKNS_10VideoFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS5_9allocatorIS7_EEEE.encodedImage to i8*), i64 272, i1 false)
  call void @_ZN6webrtc12EncodedImageC1Ev(%"class.webrtc::EncodedImage"* nonnull %4) #9
  %8 = bitcast %"class.rtc::scoped_refptr.71"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #9
  %9 = getelementptr inbounds %"class.rtc::scoped_refptr.71", %"class.rtc::scoped_refptr.71"* %5, i64 0, i32 0
  store %"class.webrtc::EncodedImageBuffer"* inttoptr (i64 -6148914691236517206 to %"class.webrtc::EncodedImageBuffer"*), %"class.webrtc::EncodedImageBuffer"** %9, align 8
  %10 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 3
  %11 = load i64, i64* %10, align 8
  call void @_ZN6webrtc18EncodedImageBuffer6CreateEm(%"class.rtc::scoped_refptr.71"* nonnull sret %5, i64 %11) #9
  %12 = load %"class.webrtc::EncodedImageBuffer"*, %"class.webrtc::EncodedImageBuffer"** %9, align 8
  %13 = bitcast %"class.webrtc::EncodedImageBuffer"* %12 to i8* (%"class.webrtc::EncodedImageBuffer"*)***
  %14 = load i8* (%"class.webrtc::EncodedImageBuffer"*)**, i8* (%"class.webrtc::EncodedImageBuffer"*)*** %13, align 8
  %15 = getelementptr inbounds i8* (%"class.webrtc::EncodedImageBuffer"*)*, i8* (%"class.webrtc::EncodedImageBuffer"*)** %14, i64 5
  %16 = load i8* (%"class.webrtc::EncodedImageBuffer"*)*, i8* (%"class.webrtc::EncodedImageBuffer"*)** %15, align 8
  %17 = call i8* %16(%"class.webrtc::EncodedImageBuffer"* %12) #9
  %18 = load i64, i64* %10, align 8
  call void @llvm.memset.p0i8.i64(i8* align 1 %17, i8 0, i64 %18, i1 false)
  %19 = load %"class.webrtc::EncodedImageBuffer"*, %"class.webrtc::EncodedImageBuffer"** %9, align 8
  %20 = getelementptr inbounds %"class.webrtc::EncodedImageBuffer", %"class.webrtc::EncodedImageBuffer"* %19, i64 0, i32 0
  %21 = icmp eq %"class.webrtc::EncodedImageBuffer"* %19, null
  br i1 %21, label %31, label %22

22:                                               ; preds = %3
  %23 = getelementptr inbounds %"class.webrtc::EncodedImageBuffer", %"class.webrtc::EncodedImageBuffer"* %19, i64 0, i32 0, i32 0
  %24 = bitcast %"class.webrtc::EncodedImageBuffer"* %19 to void (%"class.rtc::RefCountInterface"*)***
  %25 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %24, align 8
  %26 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %25, align 8
  call void %26(%"class.rtc::RefCountInterface"* %23) #9
  %27 = getelementptr inbounds %"class.webrtc::EncodedImageBuffer", %"class.webrtc::EncodedImageBuffer"* %19, i64 0, i32 0, i32 0
  %28 = bitcast %"class.webrtc::EncodedImageBuffer"* %19 to void (%"class.rtc::RefCountInterface"*)***
  %29 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %28, align 8
  %30 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %29, align 8
  call void %30(%"class.rtc::RefCountInterface"* %27) #9
  br label %31

31:                                               ; preds = %3, %22
  %32 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %4, i64 0, i32 11, i32 0
  %33 = load %"class.webrtc::EncodedImageBufferInterface"*, %"class.webrtc::EncodedImageBufferInterface"** %32, align 8
  %34 = icmp eq %"class.webrtc::EncodedImageBufferInterface"* %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.webrtc::EncodedImageBufferInterface", %"class.webrtc::EncodedImageBufferInterface"* %33, i64 0, i32 0
  %37 = bitcast %"class.webrtc::EncodedImageBufferInterface"* %33 to i32 (%"class.rtc::RefCountInterface"*)***
  %38 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %37, align 8
  %39 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %38, i64 1
  %40 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %39, align 8
  %41 = call i32 %40(%"class.rtc::RefCountInterface"* %36) #9
  br label %42

42:                                               ; preds = %31, %35
  store %"class.webrtc::EncodedImageBufferInterface"* %20, %"class.webrtc::EncodedImageBufferInterface"** %32, align 8
  %43 = bitcast %"class.webrtc::EncodedImageBuffer"* %19 to i64 (%"class.webrtc::EncodedImageBufferInterface"*)***
  %44 = load i64 (%"class.webrtc::EncodedImageBufferInterface"*)**, i64 (%"class.webrtc::EncodedImageBufferInterface"*)*** %43, align 8
  %45 = getelementptr inbounds i64 (%"class.webrtc::EncodedImageBufferInterface"*)*, i64 (%"class.webrtc::EncodedImageBufferInterface"*)** %44, i64 6
  %46 = load i64 (%"class.webrtc::EncodedImageBufferInterface"*)*, i64 (%"class.webrtc::EncodedImageBufferInterface"*)** %45, align 8
  %47 = call i64 %46(%"class.webrtc::EncodedImageBufferInterface"* %20) #9
  %48 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %4, i64 0, i32 12
  store i64 %47, i64* %48, align 8
  br i1 %21, label %56, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.webrtc::EncodedImageBuffer", %"class.webrtc::EncodedImageBuffer"* %19, i64 0, i32 0, i32 0
  %51 = bitcast %"class.webrtc::EncodedImageBuffer"* %19 to i32 (%"class.rtc::RefCountInterface"*)***
  %52 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %51, align 8
  %53 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %52, i64 1
  %54 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %53, align 8
  %55 = call i32 %54(%"class.rtc::RefCountInterface"* %50) #9
  br label %56

56:                                               ; preds = %42, %49
  %57 = call i32 @_ZNK6webrtc10VideoFrame6heightEv(%"class.webrtc::VideoFrame"* %1) #9
  %58 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %4, i64 0, i32 1
  store i32 %57, i32* %58, align 4
  %59 = call i32 @_ZNK6webrtc10VideoFrame5widthEv(%"class.webrtc::VideoFrame"* %1) #9
  %60 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %4, i64 0, i32 0
  store i32 %59, i32* %60, align 8
  %61 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %4, i64 0, i32 4
  store i32 3, i32* %61, align 8
  %62 = getelementptr inbounds %"class.webrtc::VideoFrame", %"class.webrtc::VideoFrame"* %1, i64 0, i32 2
  %63 = load i32, i32* %62, align 8
  %64 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %4, i64 0, i32 13
  store i32 %63, i32* %64, align 8
  %65 = call i64 @_ZNK6webrtc10VideoFrame14render_time_msEv(%"class.webrtc::VideoFrame"* %1) #9
  %66 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %4, i64 0, i32 3
  store i64 %65, i64* %66, align 8
  %67 = bitcast %"struct.webrtc::CodecSpecificInfo"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1992, i8* nonnull %67) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 1992, i1 false)
  call void @_ZN6webrtc17CodecSpecificInfoC1Ev(%"struct.webrtc::CodecSpecificInfo"* nonnull %6) #9
  %68 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 4
  %69 = load i32, i32* %68, align 8
  %70 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %6, i64 0, i32 0
  store i32 %69, i32* %70, align 8
  %71 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 1
  %72 = load %"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImageCallback"** %71, align 8
  %73 = bitcast %"class.webrtc::EncodedImageCallback"* %72 to { i64, i8 } (%"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImage"*, %"struct.webrtc::CodecSpecificInfo"*)***
  %74 = load { i64, i8 } (%"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImage"*, %"struct.webrtc::CodecSpecificInfo"*)**, { i64, i8 } (%"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImage"*, %"struct.webrtc::CodecSpecificInfo"*)*** %73, align 8
  %75 = getelementptr inbounds { i64, i8 } (%"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImage"*, %"struct.webrtc::CodecSpecificInfo"*)*, { i64, i8 } (%"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImage"*, %"struct.webrtc::CodecSpecificInfo"*)** %74, i64 2
  %76 = load { i64, i8 } (%"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImage"*, %"struct.webrtc::CodecSpecificInfo"*)*, { i64, i8 } (%"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImage"*, %"struct.webrtc::CodecSpecificInfo"*)** %75, align 8
  %77 = call { i64, i8 } %76(%"class.webrtc::EncodedImageCallback"* %72, %"class.webrtc::EncodedImage"* nonnull dereferenceable(272) %4, %"struct.webrtc::CodecSpecificInfo"* nonnull %6) #9
  %78 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %79 = load i8, i8* %78, align 8, !range !2
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %85, label %81

81:                                               ; preds = %56
  %82 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1, i32 0
  %83 = load void (%"union.std::__1::__function::__policy_storage"*)*, void (%"union.std::__1::__function::__policy_storage"*)** %82, align 8
  %84 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  call void %83(%"union.std::__1::__function::__policy_storage"* %84) #9
  br label %85

85:                                               ; preds = %56, %81
  call void @_ZN6webrtc17CodecSpecificInfoD1Ev(%"struct.webrtc::CodecSpecificInfo"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 1992, i8* nonnull %67) #9
  %86 = load %"class.webrtc::EncodedImageBuffer"*, %"class.webrtc::EncodedImageBuffer"** %9, align 8
  %87 = icmp eq %"class.webrtc::EncodedImageBuffer"* %86, null
  br i1 %87, label %95, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.webrtc::EncodedImageBuffer", %"class.webrtc::EncodedImageBuffer"* %86, i64 0, i32 0, i32 0
  %90 = bitcast %"class.webrtc::EncodedImageBuffer"* %86 to i32 (%"class.rtc::RefCountInterface"*)***
  %91 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %90, align 8
  %92 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %91, i64 1
  %93 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %92, align 8
  %94 = call i32 %93(%"class.rtc::RefCountInterface"* %89) #9
  br label %95

95:                                               ; preds = %85, %88
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #9
  call void @_ZN6webrtc12EncodedImageD1Ev(%"class.webrtc::EncodedImage"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %7) #9
  ret i32 0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZN6webrtc12EncodedImageC1Ev(%"class.webrtc::EncodedImage"*) unnamed_addr #4

declare void @_ZN6webrtc18EncodedImageBuffer6CreateEm(%"class.rtc::scoped_refptr.71"* sret, i64) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare i32 @_ZNK6webrtc10VideoFrame6heightEv(%"class.webrtc::VideoFrame"*) local_unnamed_addr #4

declare i32 @_ZNK6webrtc10VideoFrame5widthEv(%"class.webrtc::VideoFrame"*) local_unnamed_addr #4

declare i64 @_ZNK6webrtc10VideoFrame14render_time_msEv(%"class.webrtc::VideoFrame"*) local_unnamed_addr #4

declare void @_ZN6webrtc17CodecSpecificInfoC1Ev(%"struct.webrtc::CodecSpecificInfo"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6webrtc17CodecSpecificInfoD1Ev(%"struct.webrtc::CodecSpecificInfo"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind
declare void @_ZN6webrtc12EncodedImageD1Ev(%"class.webrtc::EncodedImage"*) unnamed_addr #5

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @_ZN6webrtc4test28ConfigurableFrameSizeEncoder30RegisterEncodeCompleteCallbackEPNS_20EncodedImageCallbackE(%"class.webrtc::test::ConfigurableFrameSizeEncoder"* nocapture, %"class.webrtc::EncodedImageCallback"*) unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 1
  store %"class.webrtc::EncodedImageCallback"* %1, %"class.webrtc::EncodedImageCallback"** %3, align 8
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN6webrtc4test28ConfigurableFrameSizeEncoder7ReleaseEv(%"class.webrtc::test::ConfigurableFrameSizeEncoder"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc4test28ConfigurableFrameSizeEncoder8SetRatesERKNS_12VideoEncoder21RateControlParametersE(%"class.webrtc::test::ConfigurableFrameSizeEncoder"* nocapture, %"struct.webrtc::VideoEncoder::RateControlParameters"* nocapture dereferenceable(360)) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @_ZN6webrtc4test28ConfigurableFrameSizeEncoder12SetFrameSizeEm(%"class.webrtc::test::ConfigurableFrameSizeEncoder"* nocapture, i64) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 3
  store i64 %1, i64* %3, align 8
  ret i32 0
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc4test28ConfigurableFrameSizeEncoder12SetCodecTypeENS_14VideoCodecTypeE(%"class.webrtc::test::ConfigurableFrameSizeEncoder"* nocapture, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 4
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4test28ConfigurableFrameSizeEncoder26RegisterPostEncodeCallbackENSt3__18functionIFvvEEE(%"class.webrtc::test::ConfigurableFrameSizeEncoder"* nocapture, %"class.std::__1::function"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  %6 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %5, label %28, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %9 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %8, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %8, align 8
  %10 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.std::__1::__function::__policy_invoker"* %10 to i64*
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE to i64), i64* %11, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %9, i64 0, i32 1
  %13 = load void (i8*)*, void (i8*)** %12, align 8
  %14 = icmp eq void (i8*)* %13, null
  br i1 %14, label %18, label %15

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %6, i64 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  tail call void %13(i8* %17) #9
  br label %18

18:                                               ; preds = %15, %7
  %19 = bitcast %"class.std::__1::function"* %6 to i8*
  %20 = bitcast %"class.std::__1::function"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false) #9
  %21 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1
  %22 = bitcast %"struct.std::__1::__function::__policy_invoker"* %21 to i64*
  %23 = load i64, i64* %22, align 8
  store i64 %23, i64* %11, align 8
  %24 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 2
  %25 = bitcast %"struct.std::__1::__function::__policy"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"struct.std::__1::__function::__policy"** %8 to i64*
  store i64 %26, i64* %27, align 8
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %24, align 8
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE to i64), i64* %22, align 8
  br label %44

28:                                               ; preds = %2
  %29 = bitcast %"class.std::__1::function"* %6 to i8*
  %30 = bitcast %"class.std::__1::function"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 16, i1 false) #9
  %31 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 1
  %33 = bitcast %"struct.std::__1::__function::__policy_invoker"* %32 to i64*
  %34 = bitcast %"struct.std::__1::__function::__policy_invoker"* %31 to i64*
  %35 = load i64, i64* %33, align 8
  store i64 %35, i64* %34, align 8
  %36 = getelementptr inbounds %"class.webrtc::test::ConfigurableFrameSizeEncoder", %"class.webrtc::test::ConfigurableFrameSizeEncoder"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %1, i64 0, i32 0, i32 2
  %38 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %37, align 8
  store %"struct.std::__1::__function::__policy"* %38, %"struct.std::__1::__function::__policy"** %36, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %38, i64 0, i32 1
  %40 = load void (i8*)*, void (i8*)** %39, align 8
  %41 = icmp eq void (i8*)* %40, null
  br i1 %41, label %43, label %42

42:                                               ; preds = %28
  store %"struct.std::__1::__function::__policy"* @_ZZNSt3__110__function8__policy14__create_emptyEvE9__policy_, %"struct.std::__1::__function::__policy"** %37, align 8
  store i64 ptrtoint (void (%"union.std::__1::__function::__policy_storage"*)* @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE to i64), i64* %33, align 8
  br label %43

43:                                               ; preds = %42, %28
  store i8 1, i8* %3, align 8
  br label %44

44:                                               ; preds = %18, %43
  ret void
}

declare i32 @_ZN6webrtc12VideoEncoder10InitEncodeEPKNS_10VideoCodecEim(%"class.webrtc::VideoEncoder"*, %"class.webrtc::VideoCodec"*, i32, i64) unnamed_addr #4

declare void @_ZN6webrtc12VideoEncoder22OnPacketLossRateUpdateEf(%"class.webrtc::VideoEncoder"*, float) unnamed_addr #4

declare void @_ZN6webrtc12VideoEncoder11OnRttUpdateEl(%"class.webrtc::VideoEncoder"*, i64) unnamed_addr #4

declare void @_ZN6webrtc12VideoEncoder18OnLossNotificationERKNS0_16LossNotificationE(%"class.webrtc::VideoEncoder"*, %"struct.webrtc::VideoEncoder::LossNotification"* dereferenceable(12)) unnamed_addr #4

declare void @_ZNK6webrtc12VideoEncoder14GetEncoderInfoEv(%"struct.webrtc::VideoEncoder::EncoderInfo"* sret, %"class.webrtc::VideoEncoder"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110__function16__policy_invokerIFvvEE12__call_emptyEPKNS0_16__policy_storageE(%"union.std::__1::__function::__policy_storage"*) #0 comdat align 2 {
  tail call void @_ZNSt3__125__throw_bad_function_callEv() #11
  unreachable
}

; Function Attrs: inlinehint noreturn nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__125__throw_bad_function_callEv() local_unnamed_addr #7 comdat {
  tail call void @abort() #12
  unreachable
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
