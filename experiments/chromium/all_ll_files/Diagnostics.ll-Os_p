; ModuleID = '../../third_party/swiftshader/src/OpenGL/compiler/Diagnostics.cpp'
source_filename = "../../third_party/swiftshader/src/OpenGL/compiler/Diagnostics.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.TDiagnostics = type <{ %"class.pp::Diagnostics", i32, [4 x i8], %class.TInfoSink*, i32, i32, i32, [4 x i8] }>
%"class.pp::Diagnostics" = type { i32 (...)** }
%class.TInfoSink = type { %class.TInfoSinkBase, %class.TInfoSinkBase, %class.TInfoSinkBase }
%class.TInfoSinkBase = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.pp::SourceLocation" = type { i32, i32 }
%struct.TSourceLoc = type { i32, i32, i32, i32 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }

$_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc = comdat any

@_ZTV12TDiagnostics = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.TDiagnostics*)* @_ZN12TDiagnosticsD2Ev to i8*), i8* bitcast (void (%class.TDiagnostics*)* @_ZN12TDiagnosticsD0Ev to i8*), i8* bitcast (void (%class.TDiagnostics*, i32, %"struct.pp::SourceLocation"*, %"class.std::__1::basic_string"*)* @_ZN12TDiagnostics5printEN2pp11Diagnostics2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE to i8*)] }, align 8
@.str.2 = private unnamed_addr constant [2 x i8] c"'\00", align 1
@.str.3 = private unnamed_addr constant [5 x i8] c"' : \00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c" \00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.6 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1

@_ZN12TDiagnosticsC1ER9TInfoSink = hidden unnamed_addr alias void (%class.TDiagnostics*, %class.TInfoSink*), void (%class.TDiagnostics*, %class.TInfoSink*)* @_ZN12TDiagnosticsC2ER9TInfoSink
@_ZN12TDiagnosticsD1Ev = hidden unnamed_addr alias void (%class.TDiagnostics*), void (%class.TDiagnostics*)* @_ZN12TDiagnosticsD2Ev

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN12TDiagnosticsC2ER9TInfoSink(%class.TDiagnostics* nocapture, %class.TInfoSink* dereferenceable(72)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.TDiagnostics, %class.TDiagnostics* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTV12TDiagnostics, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.TDiagnostics, %class.TDiagnostics* %0, i64 0, i32 1
  store i32 100, i32* %4, align 8
  %5 = getelementptr inbounds %class.TDiagnostics, %class.TDiagnostics* %0, i64 0, i32 3
  store %class.TInfoSink* %1, %class.TInfoSink** %5, align 8
  %6 = getelementptr inbounds %class.TDiagnostics, %class.TDiagnostics* %0, i64 0, i32 4
  store i32 0, i32* %6, align 8
  %7 = getelementptr inbounds %class.TDiagnostics, %class.TDiagnostics* %0, i64 0, i32 5
  store i32 0, i32* %7, align 4
  %8 = getelementptr inbounds %class.TDiagnostics, %class.TDiagnostics* %0, i64 0, i32 6
  store i32 0, i32* %8, align 8
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZN2pp11DiagnosticsD2Ev(%"class.pp::Diagnostics"*) unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN12TDiagnosticsD2Ev(%class.TDiagnostics*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.TDiagnostics, %class.TDiagnostics* %0, i64 0, i32 0
  tail call void @_ZN2pp11DiagnosticsD2Ev(%"class.pp::Diagnostics"* %2) #9
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN12TDiagnosticsD0Ev(%class.TDiagnostics*) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.TDiagnostics, %class.TDiagnostics* %0, i64 0, i32 0
  tail call void @_ZN2pp11DiagnosticsD2Ev(%"class.pp::Diagnostics"* %2) #9
  %3 = bitcast %class.TDiagnostics* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #10
  ret void
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable writeonly
define hidden void @_ZN12TDiagnostics16setShaderVersionEi(%class.TDiagnostics* nocapture, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.TDiagnostics, %class.TDiagnostics* %0, i64 0, i32 1
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN12TDiagnostics9writeInfoEN2pp11Diagnostics8SeverityERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEESE_SE_(%class.TDiagnostics* nocapture, i32, %"struct.pp::SourceLocation"* nocapture readonly dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %7 = alloca <4 x i32>, align 16
  %8 = bitcast <4 x i32>* %7 to %struct.TSourceLoc*
  switch i32 %1, label %21 [
    i32 2, label %9
    i32 1, label %13
    i32 0, label %17
  ]

9:                                                ; preds = %6
  %10 = getelementptr inbounds %class.TDiagnostics, %class.TDiagnostics* %0, i64 0, i32 4
  %11 = load i32, i32* %10, align 8
  %12 = add nsw i32 %11, 1
  store i32 %12, i32* %10, align 8
  br label %21

13:                                               ; preds = %6
  %14 = getelementptr inbounds %class.TDiagnostics, %class.TDiagnostics* %0, i64 0, i32 5
  %15 = load i32, i32* %14, align 4
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 4
  br label %21

17:                                               ; preds = %6
  %18 = getelementptr inbounds %class.TDiagnostics, %class.TDiagnostics* %0, i64 0, i32 6
  %19 = load i32, i32* %18, align 8
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %18, align 8
  br label %21

21:                                               ; preds = %6, %17, %13, %9
  %22 = phi i32 [ 1, %17 ], [ 2, %13 ], [ 3, %9 ], [ 0, %6 ]
  %23 = getelementptr inbounds %class.TDiagnostics, %class.TDiagnostics* %0, i64 0, i32 3
  %24 = load %class.TInfoSink*, %class.TInfoSink** %23, align 8
  %25 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %24, i64 0, i32 0
  tail call void @_ZN13TInfoSinkBase6prefixE11TPrefixType(%class.TInfoSinkBase* %25, i32 %22) #9
  %26 = bitcast <4 x i32>* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #11
  %27 = bitcast %"struct.pp::SourceLocation"* %2 to <2 x i32>*
  %28 = load <2 x i32>, <2 x i32>* %27, align 4
  %29 = shufflevector <2 x i32> %28, <2 x i32> undef, <4 x i32> <i32 0, i32 1, i32 0, i32 1>
  store <4 x i32> %29, <4 x i32>* %7, align 16
  call void @_ZN13TInfoSinkBase8locationERK10TSourceLoc(%class.TInfoSinkBase* %25, %struct.TSourceLoc* nonnull dereferenceable(16) %8) #9
  %30 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %24, i64 0, i32 0, i32 0
  %31 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.2, i64 0, i64 0)) #9
  %32 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %41 = zext i8 %34 to i64
  %42 = select i1 %35, i8* %37, i8* %40
  %43 = select i1 %35, i64 %39, i64 %41
  %44 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %30, i8* %42, i64 %43) #9
  %45 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %30, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.3, i64 0, i64 0)) #9
  %46 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  %55 = zext i8 %48 to i64
  %56 = select i1 %49, i8* %51, i8* %54
  %57 = select i1 %49, i64 %53, i64 %55
  %58 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %30, i8* %56, i64 %57) #9
  %59 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0)) #9
  %60 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %69 = zext i8 %62 to i64
  %70 = select i1 %63, i8* %65, i8* %68
  %71 = select i1 %63, i64 %67, i64 %69
  %72 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %30, i8* %70, i64 %71) #9
  %73 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* %30, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0)) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #11
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: optsize
declare void @_ZN13TInfoSinkBase6prefixE11TPrefixType(%class.TInfoSinkBase*, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN13TInfoSinkBase8locationERK10TSourceLoc(%class.TInfoSinkBase*, %struct.TSourceLoc* dereferenceable(16)) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN12TDiagnostics10writeDebugERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE(%class.TDiagnostics* nocapture readonly, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.TDiagnostics, %class.TDiagnostics* %0, i64 0, i32 3
  %4 = load %class.TInfoSink*, %class.TInfoSink** %3, align 8
  %5 = getelementptr inbounds %class.TInfoSink, %class.TInfoSink* %4, i64 0, i32 1, i32 0
  %6 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %15 = zext i8 %8 to i64
  %16 = select i1 %9, i8* %11, i8* %14
  %17 = select i1 %9, i64 %13, i64 %15
  %18 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* %5, i8* %16, i64 %17) #9
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN12TDiagnostics5printEN2pp11Diagnostics2IDERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEE(%class.TDiagnostics*, i32, %"struct.pp::SourceLocation"* nocapture readonly dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) unnamed_addr #2 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %class.TDiagnostics, %class.TDiagnostics* %0, i64 0, i32 0
  %8 = tail call i32 @_ZN2pp11Diagnostics8severityENS0_2IDE(%"class.pp::Diagnostics"* %7, i32 %1) #9
  %9 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #11
  %10 = tail call i8* @_ZN2pp11Diagnostics7messageENS0_2IDE(%"class.pp::Diagnostics"* %7, i32 %1) #9
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %5, i8* %10) #12
  %11 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #11
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"* nonnull %6, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.6, i64 0, i64 0)) #12
  call void @_ZN12TDiagnostics9writeInfoEN2pp11Diagnostics8SeverityERKNS0_14SourceLocationERKNSt3__112basic_stringIcNS6_11char_traitsIcEENS6_9allocatorIcEEEESE_SE_(%class.TDiagnostics* %0, i32 %8, %"struct.pp::SourceLocation"* dereferenceable(8) %2, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5, %"class.std::__1::basic_string"* dereferenceable(24) %3, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6) #12
  %12 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %4, %16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #11
  %20 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @_ZdlPv(i8* %26) #10
  br label %27

27:                                               ; preds = %19, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #11
  ret void
}

; Function Attrs: optsize
declare i32 @_ZN2pp11Diagnostics8severityENS0_2IDE(%"class.pp::Diagnostics"*, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare i8* @_ZN2pp11Diagnostics7messageENS0_2IDE(%"class.pp::Diagnostics"*, i32) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC2IDnEEPKc(%"class.std::__1::basic_string"*, i8*) unnamed_addr #2 comdat align 2 {
  %3 = tail call i64 @strlen(i8* %1) #9
  %4 = icmp ugt i64 %3, -17
  br i1 %4, label %5, label %7

5:                                                ; preds = %2
  %6 = bitcast %"class.std::__1::basic_string"* %0 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %6) #13
  unreachable

7:                                                ; preds = %2
  %8 = icmp ult i64 %3, 23
  br i1 %8, label %17, label %9

9:                                                ; preds = %7
  %10 = add nuw i64 %3, 16
  %11 = and i64 %10, -16
  %12 = tail call i8* @_Znwm(i64 %11) #10
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %12, i8** %13, align 8
  %14 = or i64 %11, -9223372036854775808
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %3, i64* %16, align 8
  br label %23

17:                                               ; preds = %7
  %18 = trunc i64 %3 to i8
  %19 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  store i8 %18, i8* %20, align 1
  %21 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %22 = icmp eq i64 %3, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %17, %9
  %24 = phi i8* [ %12, %9 ], [ %21, %17 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %24, i8* align 1 %1, i64 %3, i1 false) #11
  br label %25

25:                                               ; preds = %17, %23
  %26 = phi i8* [ %21, %17 ], [ %24, %23 ]
  %27 = getelementptr inbounds i8, i8* %26, i64 %3
  store i8 0, i8* %27, align 1
  ret void
}

; Function Attrs: optsize
declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #5

; Function Attrs: optsize
declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #5

; Function Attrs: noreturn optsize
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #6

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nofree nounwind optsize readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #8

attributes #0 = { nofree norecurse nounwind optsize ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { noreturn optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nofree nounwind optsize readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind optsize }
attributes #10 = { builtin nounwind optsize }
attributes #11 = { nounwind }
attributes #12 = { optsize }
attributes #13 = { noreturn nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
