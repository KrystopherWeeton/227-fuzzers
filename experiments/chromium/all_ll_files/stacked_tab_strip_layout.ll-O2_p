; ModuleID = '../../chrome/browser/ui/views/tabs/stacked_tab_strip_layout.cc'
source_filename = "../../chrome/browser/ui/views/tabs/stacked_tab_strip_layout.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.StackedTabStripLayout = type { %"class.gfx::Size", i32, i32, i32, %"class.views::ViewModelBase"*, i32, i32, i32, i32, i32, i32 }
%"class.gfx::Size" = type { i32, i32 }
%"class.views::ViewModelBase" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"*, %"class.std::__1::__compressed_pair" }
%"struct.views::ViewModelBase::Entry" = type { %"class.views::View"*, %"class.gfx::Rect" }
%"class.views::View" = type opaque
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.views::ViewModelBase::Entry"* }
%"struct.base::UserMetricsAction" = type { i8* }

@.str = private unnamed_addr constant [25 x i8] c"StackedTab_DragActiveTab\00", align 1

@_ZN21StackedTabStripLayoutC1ERKN3gfx4SizeEiiiPN5views13ViewModelBaseE = hidden unnamed_addr alias void (%class.StackedTabStripLayout*, %"class.gfx::Size"*, i32, i32, i32, %"class.views::ViewModelBase"*), void (%class.StackedTabStripLayout*, %"class.gfx::Size"*, i32, i32, i32, %"class.views::ViewModelBase"*)* @_ZN21StackedTabStripLayoutC2ERKN3gfx4SizeEiiiPN5views13ViewModelBaseE
@_ZN21StackedTabStripLayoutD1Ev = hidden unnamed_addr alias void (%class.StackedTabStripLayout*), void (%class.StackedTabStripLayout*)* @_ZN21StackedTabStripLayoutD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayoutC2ERKN3gfx4SizeEiiiPN5views13ViewModelBaseE(%class.StackedTabStripLayout* nocapture, %"class.gfx::Size"* nocapture readonly dereferenceable(8), i32, i32, i32, %"class.views::ViewModelBase"*) unnamed_addr #0 align 2 {
  %7 = bitcast %"class.gfx::Size"* %1 to i64*
  %8 = bitcast %class.StackedTabStripLayout* %0 to i64*
  %9 = load i64, i64* %7, align 4
  store i64 %9, i64* %8, align 8
  %10 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  store i32 %2, i32* %10, align 8
  %11 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  store i32 %3, i32* %11, align 4
  %12 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  store i32 %4, i32* %12, align 8
  %13 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  store %"class.views::ViewModelBase"* %5, %"class.views::ViewModelBase"** %13, align 8
  %14 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 5
  %15 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 10
  %16 = bitcast i32* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 20, i1 false)
  store i32 -1, i32* %15, align 4
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN21StackedTabStripLayoutD2Ev(%class.StackedTabStripLayout* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout18SetXAndPinnedCountEii(%class.StackedTabStripLayout*, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 5
  store i32 %1, i32* %4, align 8
  %5 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 6
  store i32 %1, i32* %5, align 4
  %6 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  store i32 %2, i32* %6, align 4
  %7 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 9
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %9 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %8, align 8
  %10 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %9, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"struct.views::ViewModelBase::Entry"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.views::ViewModelBase"* %9 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = sub i64 %12, %14
  %16 = sdiv exact i64 %15, 24
  %17 = trunc i64 %16 to i32
  %18 = icmp eq i32 %17, %2
  %19 = inttoptr i64 %14 to %"struct.views::ViewModelBase::Entry"*
  br i1 %18, label %36, label %20

20:                                               ; preds = %3
  %21 = sub nsw i32 %17, %2
  %22 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = mul nsw i32 %23, %21
  %25 = icmp sgt i32 %21, 1
  %26 = select i1 %25, i32 %21, i32 1
  %27 = add nsw i32 %26, -1
  %28 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = mul nsw i32 %29, %27
  %31 = add i32 %24, %1
  %32 = sub i32 %31, %30
  %33 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 7
  %34 = load i32, i32* %33, align 8
  %35 = icmp sgt i32 %32, %34
  br i1 %35, label %37, label %36

36:                                               ; preds = %3, %20
  tail call void @_ZN21StackedTabStripLayout17ResetToIdealStateEv(%class.StackedTabStripLayout* %0)
  br label %179

37:                                               ; preds = %20
  %38 = icmp sgt i32 %2, 0
  br i1 %38, label %39, label %51

39:                                               ; preds = %37
  %40 = add nsw i32 %2, -1
  %41 = sext i32 %40 to i64
  %42 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %9, i64 0, i32 0, i32 0, i32 0
  %43 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %19, i64 %41, i32 1, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = sub nsw i32 %1, %44
  store i32 %45, i32* %7, align 8
  %46 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %42, align 8
  %47 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %46, i64 0, i32 1, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  store i32 %48, i32* %4, align 8
  %49 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %42, align 8
  %50 = load i64, i64* %11, align 8
  br label %51

51:                                               ; preds = %39, %37
  %52 = phi i64 [ %50, %39 ], [ %12, %37 ]
  %53 = phi %"struct.views::ViewModelBase::Entry"* [ %49, %39 ], [ %19, %37 ]
  %54 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 10
  %55 = load i32, i32* %54, align 4
  %56 = icmp slt i32 %55, %2
  %57 = select i1 %56, i32 %2, i32 %55
  %58 = sext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %53, i64 %58, i32 1, i32 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = sub nsw i32 %57, %2
  %62 = ptrtoint %"struct.views::ViewModelBase::Entry"* %53 to i64
  %63 = sub i64 %52, %62
  %64 = sdiv exact i64 %63, 24
  %65 = trunc i64 %64 to i32
  %66 = sub nsw i32 %65, %57
  %67 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = icmp slt i32 %68, %61
  %70 = select i1 %69, i32 %68, i32 %61
  %71 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = mul nsw i32 %70, %72
  %74 = add nsw i32 %73, %1
  %75 = mul nsw i32 %23, %66
  %76 = icmp sgt i32 %66, 1
  %77 = select i1 %76, i32 %66, i32 1
  %78 = add nsw i32 %77, -1
  %79 = mul nsw i32 %78, %29
  %80 = sub i32 %79, %75
  %81 = add i32 %80, %34
  %82 = icmp slt i32 %74, %81
  %83 = select i1 %82, i32 %81, i32 %74
  %84 = xor i32 %57, -1
  %85 = add i32 %65, %84
  %86 = icmp slt i32 %68, %85
  %87 = select i1 %86, i32 %68, i32 %85
  %88 = mul nsw i32 %87, %72
  %89 = mul nsw i32 %23, %61
  %90 = icmp sgt i32 %61, 1
  %91 = select i1 %90, i32 %61, i32 1
  %92 = add nsw i32 %91, -1
  %93 = mul nsw i32 %29, %92
  %94 = icmp sgt i32 %55, %2
  %95 = sub i32 0, %29
  %96 = select i1 %94, i32 %95, i32 0
  %97 = add i32 %89, %1
  %98 = add i32 %97, %96
  %99 = sub i32 %98, %93
  %100 = sub nsw i32 %34, %88
  %101 = sub i32 %100, %23
  %102 = icmp slt i32 %99, %101
  %103 = select i1 %102, i32 %99, i32 %101
  %104 = icmp sgt i32 %83, %60
  %105 = select i1 %104, i32 %83, i32 %60
  %106 = icmp slt i32 %103, %105
  %107 = select i1 %106, i32 %103, i32 %105
  %108 = zext i32 %107 to i64
  %109 = icmp sgt i32 %107, 0
  %110 = icmp sgt i32 %23, 0
  %111 = and i1 %110, %109
  %112 = sub nuw nsw i32 2147483647, %107
  %113 = icmp ult i32 %112, %23
  %114 = and i1 %113, %111
  %115 = select i1 %114, i32 %112, i32 %23
  %116 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %117 = load i32, i32* %116, align 4
  %118 = icmp sgt i32 %117, 0
  %119 = icmp sgt i32 %115, 0
  %120 = select i1 %119, i32 %115, i32 0
  %121 = select i1 %118, i32 %117, i32 0
  %122 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %53, i64 %58, i32 1
  %123 = bitcast %"class.gfx::Rect"* %122 to i64*
  store i64 %108, i64* %123, align 8
  %124 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %53, i64 %58, i32 1, i32 1, i32 0
  store i32 %120, i32* %124, align 8
  %125 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %53, i64 %58, i32 1, i32 1, i32 1
  store i32 %121, i32* %125, align 4
  %126 = load i32, i32* %54, align 4
  %127 = load i32, i32* %6, align 4
  %128 = icmp slt i32 %126, %127
  %129 = select i1 %128, i32 %127, i32 %126
  tail call void @_ZN21StackedTabStripLayout22LayoutByTabOffsetAfterEi(%class.StackedTabStripLayout* %0, i32 %129)
  %130 = load i32, i32* %54, align 4
  %131 = load i32, i32* %6, align 4
  %132 = icmp slt i32 %131, %130
  br i1 %132, label %133, label %179

133:                                              ; preds = %51
  %134 = sext i32 %130 to i64
  br label %135

135:                                              ; preds = %135, %133
  %136 = phi i64 [ %134, %133 ], [ %138, %135 ]
  %137 = phi i32 [ %131, %133 ], [ %176, %135 ]
  %138 = add nsw i64 %136, -1
  %139 = load i32, i32* %5, align 4
  %140 = trunc i64 %138 to i32
  %141 = sub nsw i32 %140, %137
  %142 = load i32, i32* %67, align 4
  %143 = icmp slt i32 %142, %141
  %144 = select i1 %143, i32 %142, i32 %141
  %145 = load i32, i32* %71, align 4
  %146 = mul nsw i32 %144, %145
  %147 = add nsw i32 %146, %139
  %148 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %8, align 8
  %149 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %148, i64 0, i32 0, i32 0, i32 0
  %150 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %149, align 8
  %151 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %150, i64 %136, i32 1, i32 0, i32 0
  %152 = load i32, i32* %151, align 4
  %153 = load i32, i32* %22, align 4
  %154 = load i32, i32* %28, align 8
  %155 = sub i32 %154, %153
  %156 = add i32 %155, %152
  %157 = icmp slt i32 %147, %156
  %158 = select i1 %157, i32 %156, i32 %147
  %159 = zext i32 %158 to i64
  %160 = icmp sgt i32 %158, 0
  %161 = icmp sgt i32 %153, 0
  %162 = and i1 %161, %160
  %163 = sub nuw nsw i32 2147483647, %158
  %164 = icmp ult i32 %163, %153
  %165 = and i1 %164, %162
  %166 = select i1 %165, i32 %163, i32 %153
  %167 = load i32, i32* %116, align 4
  %168 = icmp sgt i32 %167, 0
  %169 = icmp sgt i32 %166, 0
  %170 = select i1 %169, i32 %166, i32 0
  %171 = select i1 %168, i32 %167, i32 0
  %172 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %150, i64 %138, i32 1
  %173 = bitcast %"class.gfx::Rect"* %172 to i64*
  store i64 %159, i64* %173, align 8
  %174 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %150, i64 %138, i32 1, i32 1, i32 0
  store i32 %170, i32* %174, align 8
  %175 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %150, i64 %138, i32 1, i32 1, i32 1
  store i32 %171, i32* %175, align 4
  %176 = load i32, i32* %6, align 4
  %177 = sext i32 %176 to i64
  %178 = icmp sgt i64 %138, %177
  br i1 %178, label %135, label %179

179:                                              ; preds = %135, %51, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout17ResetToIdealStateEv(%class.StackedTabStripLayout* readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %3 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %2, align 8
  %4 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %3, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.views::ViewModelBase::Entry"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.views::ViewModelBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 24
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, %11
  %15 = inttoptr i64 %8 to %"struct.views::ViewModelBase::Entry"*
  br i1 %14, label %350, label %16

16:                                               ; preds = %1
  %17 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 6
  %18 = load i32, i32* %17, align 4
  %19 = sub nsw i32 %11, %13
  %20 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = mul nsw i32 %21, %19
  %23 = icmp sgt i32 %19, 1
  %24 = select i1 %23, i32 %19, i32 1
  %25 = add nsw i32 %24, -1
  %26 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = mul nsw i32 %27, %25
  %29 = add i32 %22, %18
  %30 = sub i32 %29, %28
  %31 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 7
  %32 = load i32, i32* %31, align 8
  %33 = icmp sgt i32 %30, %32
  br i1 %33, label %55, label %34

34:                                               ; preds = %16
  %35 = zext i32 %18 to i64
  %36 = icmp sgt i32 %18, 0
  %37 = icmp sgt i32 %21, 0
  %38 = and i1 %36, %37
  %39 = sub nuw nsw i32 2147483647, %18
  %40 = icmp ult i32 %39, %21
  %41 = and i1 %40, %38
  %42 = select i1 %41, i32 %39, i32 %21
  %43 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 4
  %45 = icmp sgt i32 %44, 0
  %46 = icmp sgt i32 %42, 0
  %47 = select i1 %46, i32 %42, i32 0
  %48 = select i1 %45, i32 %44, i32 0
  %49 = sext i32 %13 to i64
  %50 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %15, i64 %49, i32 1
  %51 = bitcast %"class.gfx::Rect"* %50 to i64*
  store i64 %35, i64* %51, align 8
  %52 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %15, i64 %49, i32 1, i32 1, i32 0
  store i32 %47, i32* %52, align 8
  %53 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %15, i64 %49, i32 1, i32 1, i32 1
  store i32 %48, i32* %53, align 4
  %54 = load i32, i32* %12, align 4
  tail call void @_ZN21StackedTabStripLayout22LayoutByTabOffsetAfterEi(%class.StackedTabStripLayout* %0, i32 %54)
  br label %350

55:                                               ; preds = %16
  %56 = icmp eq i32 %19, 1
  br i1 %56, label %57, label %69

57:                                               ; preds = %55
  %58 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = icmp sgt i32 %59, 0
  %61 = icmp sgt i32 %21, 0
  %62 = select i1 %61, i32 %21, i32 0
  %63 = select i1 %60, i32 %59, i32 0
  %64 = sext i32 %13 to i64
  %65 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %15, i64 %64, i32 1
  %66 = bitcast %"class.gfx::Rect"* %65 to i64*
  store i64 0, i64* %66, align 8
  %67 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %15, i64 %64, i32 1, i32 1, i32 0
  store i32 %62, i32* %67, align 8
  %68 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %15, i64 %64, i32 1, i32 1, i32 1
  store i32 %63, i32* %68, align 4
  br label %350

69:                                               ; preds = %55
  %70 = sub nsw i32 %32, %18
  %71 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 10
  %72 = load i32, i32* %71, align 4
  %73 = icmp slt i32 %72, %13
  %74 = select i1 %73, i32 %13, i32 %72
  %75 = sub nsw i32 %74, %13
  %76 = add nsw i32 %75, 1
  %77 = mul nsw i32 %76, %21
  %78 = icmp sgt i32 %76, 1
  %79 = select i1 %78, i32 %76, i32 1
  %80 = add nsw i32 %79, -1
  %81 = mul nsw i32 %80, %27
  %82 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %83 = load i32, i32* %82, align 4
  %84 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %85 = load i32, i32* %84, align 8
  %86 = mul nsw i32 %85, %83
  %87 = add i32 %86, %77
  %88 = sub i32 %87, %81
  %89 = icmp slt i32 %88, %70
  br i1 %89, label %90, label %112

90:                                               ; preds = %69
  %91 = zext i32 %18 to i64
  %92 = icmp sgt i32 %18, 0
  %93 = icmp sgt i32 %21, 0
  %94 = and i1 %92, %93
  %95 = sub nuw nsw i32 2147483647, %18
  %96 = icmp ult i32 %95, %21
  %97 = and i1 %96, %94
  %98 = select i1 %97, i32 %95, i32 %21
  %99 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = icmp sgt i32 %100, 0
  %102 = icmp sgt i32 %98, 0
  %103 = select i1 %102, i32 %98, i32 0
  %104 = select i1 %101, i32 %100, i32 0
  %105 = sext i32 %13 to i64
  %106 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %15, i64 %105, i32 1
  %107 = bitcast %"class.gfx::Rect"* %106 to i64*
  store i64 %91, i64* %107, align 8
  %108 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %15, i64 %105, i32 1, i32 1, i32 0
  store i32 %103, i32* %108, align 8
  %109 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %15, i64 %105, i32 1, i32 1, i32 1
  store i32 %104, i32* %109, align 4
  %110 = load i32, i32* %12, align 4
  tail call void @_ZN21StackedTabStripLayout22LayoutByTabOffsetAfterEi(%class.StackedTabStripLayout* %0, i32 %110)
  %111 = load i32, i32* %12, align 4
  br label %320

112:                                              ; preds = %69
  %113 = sub nsw i32 %11, %74
  %114 = mul nsw i32 %113, %21
  %115 = icmp sgt i32 %113, 1
  %116 = select i1 %115, i32 %113, i32 1
  %117 = add nsw i32 %116, -1
  %118 = mul nsw i32 %117, %27
  %119 = add i32 %86, %114
  %120 = sub i32 %119, %118
  %121 = icmp slt i32 %120, %70
  br i1 %121, label %125, label %122

122:                                              ; preds = %112
  %123 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %124 = sext i32 %74 to i64
  br label %208

125:                                              ; preds = %112
  %126 = sub nsw i32 %32, %21
  %127 = zext i32 %126 to i64
  %128 = icmp sgt i32 %126, 0
  %129 = icmp sgt i32 %21, 0
  %130 = and i1 %129, %128
  %131 = sub nuw nsw i32 2147483647, %126
  %132 = icmp ult i32 %131, %21
  %133 = and i1 %132, %130
  %134 = select i1 %133, i32 %131, i32 %21
  %135 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = icmp sgt i32 %136, 0
  %138 = icmp sgt i32 %134, 0
  %139 = select i1 %138, i32 %134, i32 0
  %140 = select i1 %137, i32 %136, i32 0
  %141 = shl i64 %10, 32
  %142 = add i64 %141, -4294967296
  %143 = ashr exact i64 %142, 32
  %144 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %15, i64 %143, i32 1
  %145 = bitcast %"class.gfx::Rect"* %144 to i64*
  store i64 %127, i64* %145, align 8
  %146 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %15, i64 %143, i32 1, i32 1, i32 0
  store i32 %139, i32* %146, align 8
  %147 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %15, i64 %143, i32 1, i32 1, i32 1
  store i32 %140, i32* %147, align 4
  %148 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %2, align 8
  %149 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %148, i64 0, i32 0, i32 0, i32 1
  %150 = bitcast %"struct.views::ViewModelBase::Entry"** %149 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.views::ViewModelBase"* %148 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = sub i64 %151, %153
  %155 = sdiv exact i64 %154, 24
  %156 = trunc i64 %155 to i32
  %157 = add nsw i32 %156, -1
  %158 = load i32, i32* %12, align 4
  %159 = icmp slt i32 %158, %157
  br i1 %159, label %160, label %320

160:                                              ; preds = %125
  %161 = sext i32 %157 to i64
  br label %162

162:                                              ; preds = %206, %160
  %163 = phi %"class.views::ViewModelBase"* [ %148, %160 ], [ %207, %206 ]
  %164 = phi i64 [ %161, %160 ], [ %166, %206 ]
  %165 = phi i32 [ %158, %160 ], [ %203, %206 ]
  %166 = add nsw i64 %164, -1
  %167 = load i32, i32* %17, align 4
  %168 = trunc i64 %166 to i32
  %169 = sub nsw i32 %168, %165
  %170 = load i32, i32* %84, align 4
  %171 = icmp slt i32 %170, %169
  %172 = select i1 %171, i32 %170, i32 %169
  %173 = load i32, i32* %82, align 4
  %174 = mul nsw i32 %172, %173
  %175 = add nsw i32 %174, %167
  %176 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %163, i64 0, i32 0, i32 0, i32 0
  %177 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %176, align 8
  %178 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %177, i64 %164, i32 1, i32 0, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = load i32, i32* %20, align 4
  %181 = load i32, i32* %26, align 8
  %182 = sub i32 %181, %180
  %183 = add i32 %182, %179
  %184 = icmp slt i32 %175, %183
  %185 = select i1 %184, i32 %183, i32 %175
  %186 = zext i32 %185 to i64
  %187 = icmp sgt i32 %185, 0
  %188 = icmp sgt i32 %180, 0
  %189 = and i1 %188, %187
  %190 = sub nuw nsw i32 2147483647, %185
  %191 = icmp ult i32 %190, %180
  %192 = and i1 %191, %189
  %193 = select i1 %192, i32 %190, i32 %180
  %194 = load i32, i32* %135, align 4
  %195 = icmp sgt i32 %194, 0
  %196 = icmp sgt i32 %193, 0
  %197 = select i1 %196, i32 %193, i32 0
  %198 = select i1 %195, i32 %194, i32 0
  %199 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %177, i64 %166, i32 1
  %200 = bitcast %"class.gfx::Rect"* %199 to i64*
  store i64 %186, i64* %200, align 8
  %201 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %177, i64 %166, i32 1, i32 1, i32 0
  store i32 %197, i32* %201, align 8
  %202 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %177, i64 %166, i32 1, i32 1, i32 1
  store i32 %198, i32* %202, align 4
  %203 = load i32, i32* %12, align 4
  %204 = sext i32 %203 to i64
  %205 = icmp sgt i64 %166, %204
  br i1 %205, label %206, label %320

206:                                              ; preds = %162
  %207 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %2, align 8
  br label %162

208:                                              ; preds = %317, %122
  %209 = phi %"struct.views::ViewModelBase::Entry"* [ %15, %122 ], [ %296, %317 ]
  %210 = phi i32 [ %21, %122 ], [ %314, %317 ]
  %211 = phi i32 [ %18, %122 ], [ %299, %317 ]
  %212 = phi i32 [ %83, %122 ], [ %319, %317 ]
  %213 = phi i32 [ %85, %122 ], [ %318, %317 ]
  %214 = phi i32 [ %13, %122 ], [ %290, %317 ]
  %215 = phi i64 [ %124, %122 ], [ %291, %317 ]
  %216 = trunc i64 %215 to i32
  %217 = sub nsw i32 %216, %214
  %218 = icmp slt i32 %213, %217
  %219 = select i1 %218, i32 %213, i32 %217
  %220 = mul nsw i32 %219, %212
  %221 = add nsw i32 %220, %211
  %222 = zext i32 %221 to i64
  %223 = icmp sgt i32 %221, 0
  %224 = icmp sgt i32 %210, 0
  %225 = and i1 %223, %224
  %226 = sub nuw nsw i32 2147483647, %221
  %227 = icmp ult i32 %226, %210
  %228 = and i1 %227, %225
  %229 = select i1 %228, i32 %226, i32 %210
  %230 = load i32, i32* %123, align 4
  %231 = icmp sgt i32 %230, 0
  %232 = icmp sgt i32 %229, 0
  %233 = select i1 %232, i32 %229, i32 0
  %234 = select i1 %231, i32 %230, i32 0
  %235 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %209, i64 %215, i32 1
  %236 = bitcast %"class.gfx::Rect"* %235 to i64*
  store i64 %222, i64* %236, align 8
  %237 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %209, i64 %215, i32 1, i32 1, i32 0
  store i32 %233, i32* %237, align 8
  %238 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %209, i64 %215, i32 1, i32 1, i32 1
  store i32 %234, i32* %238, align 4
  tail call void @_ZN21StackedTabStripLayout22LayoutByTabOffsetAfterEi(%class.StackedTabStripLayout* %0, i32 %216)
  %239 = load i32, i32* %12, align 4
  %240 = sext i32 %239 to i64
  %241 = icmp sgt i64 %215, %240
  br i1 %241, label %242, label %288

242:                                              ; preds = %208, %242
  %243 = phi i64 [ %245, %242 ], [ %215, %208 ]
  %244 = phi i32 [ %283, %242 ], [ %239, %208 ]
  %245 = add nsw i64 %243, -1
  %246 = load i32, i32* %17, align 4
  %247 = trunc i64 %245 to i32
  %248 = sub nsw i32 %247, %244
  %249 = load i32, i32* %84, align 4
  %250 = icmp slt i32 %249, %248
  %251 = select i1 %250, i32 %249, i32 %248
  %252 = load i32, i32* %82, align 4
  %253 = mul nsw i32 %251, %252
  %254 = add nsw i32 %253, %246
  %255 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %2, align 8
  %256 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %255, i64 0, i32 0, i32 0, i32 0
  %257 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %256, align 8
  %258 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %257, i64 %243, i32 1, i32 0, i32 0
  %259 = load i32, i32* %258, align 4
  %260 = load i32, i32* %20, align 4
  %261 = load i32, i32* %26, align 8
  %262 = sub i32 %261, %260
  %263 = add i32 %262, %259
  %264 = icmp slt i32 %254, %263
  %265 = select i1 %264, i32 %263, i32 %254
  %266 = zext i32 %265 to i64
  %267 = icmp sgt i32 %265, 0
  %268 = icmp sgt i32 %260, 0
  %269 = and i1 %268, %267
  %270 = sub nuw nsw i32 2147483647, %265
  %271 = icmp ult i32 %270, %260
  %272 = and i1 %271, %269
  %273 = select i1 %272, i32 %270, i32 %260
  %274 = load i32, i32* %123, align 4
  %275 = icmp sgt i32 %274, 0
  %276 = icmp sgt i32 %273, 0
  %277 = select i1 %276, i32 %273, i32 0
  %278 = select i1 %275, i32 %274, i32 0
  %279 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %257, i64 %245, i32 1
  %280 = bitcast %"class.gfx::Rect"* %279 to i64*
  store i64 %266, i64* %280, align 8
  %281 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %257, i64 %245, i32 1, i32 1, i32 0
  store i32 %277, i32* %281, align 8
  %282 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %257, i64 %245, i32 1, i32 1, i32 1
  store i32 %278, i32* %282, align 4
  %283 = load i32, i32* %12, align 4
  %284 = sext i32 %283 to i64
  %285 = icmp sgt i64 %245, %284
  br i1 %285, label %242, label %286

286:                                              ; preds = %242
  %287 = sext i32 %283 to i64
  br label %288

288:                                              ; preds = %286, %208
  %289 = phi i64 [ %240, %208 ], [ %287, %286 ]
  %290 = phi i32 [ %239, %208 ], [ %283, %286 ]
  %291 = add nsw i64 %215, -1
  %292 = icmp sgt i64 %215, %289
  br i1 %292, label %293, label %320

293:                                              ; preds = %288
  %294 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %2, align 8
  %295 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %294, i64 0, i32 0, i32 0, i32 0
  %296 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %295, align 8
  %297 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %296, i64 %289, i32 1, i32 0, i32 0
  %298 = load i32, i32* %297, align 4
  %299 = load i32, i32* %17, align 4
  %300 = icmp eq i32 %298, %299
  br i1 %300, label %320, label %301

301:                                              ; preds = %293
  %302 = ptrtoint %"struct.views::ViewModelBase::Entry"* %296 to i64
  %303 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %294, i64 0, i32 0, i32 0, i32 1
  %304 = bitcast %"struct.views::ViewModelBase::Entry"** %303 to i64*
  %305 = load i64, i64* %304, align 8
  %306 = sub i64 %305, %302
  %307 = sdiv exact i64 %306, 24
  %308 = shl i64 %307, 32
  %309 = add i64 %308, -4294967296
  %310 = ashr exact i64 %309, 32
  %311 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %296, i64 %310, i32 1, i32 0, i32 0
  %312 = load i32, i32* %311, align 4
  %313 = load i32, i32* %31, align 8
  %314 = load i32, i32* %20, align 4
  %315 = sub nsw i32 %313, %314
  %316 = icmp eq i32 %312, %315
  br i1 %316, label %320, label %317

317:                                              ; preds = %301
  %318 = load i32, i32* %84, align 4
  %319 = load i32, i32* %82, align 4
  br label %208

320:                                              ; preds = %288, %293, %301, %162, %125, %90
  %321 = phi i32 [ %158, %125 ], [ %111, %90 ], [ %203, %162 ], [ %290, %301 ], [ %290, %293 ], [ %290, %288 ]
  %322 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %2, align 8
  %323 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %322, i64 0, i32 0, i32 0, i32 1
  %324 = bitcast %"struct.views::ViewModelBase::Entry"** %323 to i64*
  %325 = load i64, i64* %324, align 8
  %326 = bitcast %"class.views::ViewModelBase"* %322 to i64*
  %327 = load i64, i64* %326, align 8
  %328 = sub i64 %325, %327
  %329 = sdiv exact i64 %328, 24
  %330 = trunc i64 %329 to i32
  %331 = icmp eq i32 %321, %330
  br i1 %331, label %350, label %332

332:                                              ; preds = %320
  %333 = load i32, i32* %17, align 4
  %334 = sub nsw i32 %330, %321
  %335 = load i32, i32* %20, align 4
  %336 = mul nsw i32 %335, %334
  %337 = icmp sgt i32 %334, 1
  %338 = select i1 %337, i32 %334, i32 1
  %339 = add nsw i32 %338, -1
  %340 = load i32, i32* %26, align 8
  %341 = mul nsw i32 %340, %339
  %342 = add i32 %336, %333
  %343 = sub i32 %342, %341
  %344 = load i32, i32* %31, align 8
  %345 = icmp sgt i32 %343, %344
  %346 = add nsw i32 %321, 1
  %347 = icmp slt i32 %346, %330
  %348 = and i1 %347, %345
  br i1 %348, label %349, label %350

349:                                              ; preds = %332
  tail call void @_ZN21StackedTabStripLayout24AdjustLeadingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  tail call void @_ZN21StackedTabStripLayout25AdjustTrailingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  br label %350

350:                                              ; preds = %349, %332, %320, %1, %57, %34
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout16SetIdealBoundsAtEii(%class.StackedTabStripLayout* nocapture readonly, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %5 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %4, align 8
  %6 = zext i32 %2 to i64
  %7 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %2, 0
  %10 = icmp sgt i32 %8, 0
  %11 = and i1 %9, %10
  %12 = sub nuw nsw i32 2147483647, %2
  %13 = icmp ult i32 %12, %8
  %14 = and i1 %13, %11
  %15 = select i1 %14, i32 %12, i32 %8
  %16 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp sgt i32 %17, 0
  %19 = icmp sgt i32 %15, 0
  %20 = select i1 %19, i32 %15, i32 0
  %21 = select i1 %18, i32 %17, i32 0
  %22 = sext i32 %1 to i64
  %23 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %5, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %23, align 8
  %25 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %24, i64 %22, i32 1
  %26 = bitcast %"class.gfx::Rect"* %25 to i64*
  store i64 %6, i64* %26, align 8
  %27 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %24, i64 %22, i32 1, i32 1, i32 0
  store i32 %20, i32* %27, align 8
  %28 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %24, i64 %22, i32 1, i32 1, i32 1
  store i32 %21, i32* %28, align 4
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK21StackedTabStripLayout16ConstrainActiveXEi(%class.StackedTabStripLayout* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 10
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %4, %6
  %8 = select i1 %7, i32 %6, i32 %4
  %9 = sub nsw i32 %8, %6
  %10 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %11 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %10, align 8
  %12 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %11, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast %"struct.views::ViewModelBase::Entry"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.views::ViewModelBase"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = sdiv exact i64 %17, 24
  %19 = trunc i64 %18 to i32
  %20 = sub nsw i32 %19, %8
  %21 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 6
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %24, %9
  %26 = select i1 %25, i32 %24, i32 %9
  %27 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %28 = load i32, i32* %27, align 4
  %29 = mul nsw i32 %26, %28
  %30 = add nsw i32 %29, %22
  %31 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 7
  %32 = load i32, i32* %31, align 8
  %33 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = mul nsw i32 %34, %20
  %36 = icmp sgt i32 %20, 1
  %37 = select i1 %36, i32 %20, i32 1
  %38 = add nsw i32 %37, -1
  %39 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = mul nsw i32 %38, %40
  %42 = sub i32 %41, %35
  %43 = add i32 %42, %32
  %44 = icmp slt i32 %30, %43
  %45 = select i1 %44, i32 %43, i32 %30
  %46 = xor i32 %8, -1
  %47 = add i32 %19, %46
  %48 = icmp slt i32 %24, %47
  %49 = select i1 %48, i32 %24, i32 %47
  %50 = mul nsw i32 %49, %28
  %51 = mul nsw i32 %34, %9
  %52 = icmp sgt i32 %9, 1
  %53 = select i1 %52, i32 %9, i32 1
  %54 = add nsw i32 %53, -1
  %55 = mul nsw i32 %40, %54
  %56 = icmp slt i32 %6, %4
  %57 = sub i32 0, %40
  %58 = select i1 %56, i32 %57, i32 0
  %59 = add i32 %51, %22
  %60 = add i32 %59, %58
  %61 = sub i32 %60, %55
  %62 = sub nsw i32 %32, %50
  %63 = sub i32 %62, %34
  %64 = icmp slt i32 %61, %63
  %65 = select i1 %64, i32 %61, i32 %63
  %66 = icmp sgt i32 %45, %1
  %67 = select i1 %66, i32 %45, i32 %1
  %68 = icmp slt i32 %65, %67
  %69 = select i1 %68, i32 %65, i32 %67
  ret i32 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout22LayoutByTabOffsetAfterEi(%class.StackedTabStripLayout* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = add i32 %1, 1
  %4 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %5 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %4, align 8
  %6 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %5, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.views::ViewModelBase::Entry"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.views::ViewModelBase"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = sdiv exact i64 %11, 24
  %13 = trunc i64 %12 to i32
  %14 = icmp slt i32 %3, %13
  br i1 %14, label %15, label %23

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 7
  %17 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %19 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %20 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %21 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %22 = sext i32 %3 to i64
  br label %24

23:                                               ; preds = %24, %2
  ret void

24:                                               ; preds = %15, %24
  %25 = phi i64 [ %22, %15 ], [ %67, %24 ]
  %26 = phi i32 [ %13, %15 ], [ %76, %24 ]
  %27 = phi %"class.views::ViewModelBase"* [ %5, %15 ], [ %68, %24 ]
  %28 = phi i32 [ %1, %15 ], [ %80, %24 ]
  %29 = load i32, i32* %16, align 8
  %30 = load i32, i32* %17, align 4
  %31 = sub nsw i32 %29, %30
  %32 = sub i32 -2, %28
  %33 = add i32 %26, %32
  %34 = load i32, i32* %18, align 4
  %35 = icmp slt i32 %34, %33
  %36 = select i1 %35, i32 %34, i32 %33
  %37 = load i32, i32* %19, align 4
  %38 = mul nsw i32 %36, %37
  %39 = sub i32 %31, %38
  %40 = sext i32 %28 to i64
  %41 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %27, i64 0, i32 0, i32 0, i32 0
  %42 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %41, align 8
  %43 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %42, i64 %40, i32 1, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = load i32, i32* %20, align 8
  %46 = sub nsw i32 %30, %45
  %47 = add nsw i32 %46, %44
  %48 = icmp slt i32 %47, %39
  %49 = select i1 %48, i32 %47, i32 %39
  %50 = zext i32 %49 to i64
  %51 = icmp sgt i32 %49, 0
  %52 = icmp sgt i32 %30, 0
  %53 = and i1 %52, %51
  %54 = sub nuw nsw i32 2147483647, %49
  %55 = icmp ult i32 %54, %30
  %56 = and i1 %55, %53
  %57 = select i1 %56, i32 %54, i32 %30
  %58 = load i32, i32* %21, align 4
  %59 = icmp sgt i32 %58, 0
  %60 = icmp sgt i32 %57, 0
  %61 = select i1 %60, i32 %57, i32 0
  %62 = select i1 %59, i32 %58, i32 0
  %63 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %42, i64 %25, i32 1
  %64 = bitcast %"class.gfx::Rect"* %63 to i64*
  store i64 %50, i64* %64, align 8
  %65 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %42, i64 %25, i32 1, i32 1, i32 0
  store i32 %61, i32* %65, align 8
  %66 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %42, i64 %25, i32 1, i32 1, i32 1
  store i32 %62, i32* %66, align 4
  %67 = add nsw i64 %25, 1
  %68 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %4, align 8
  %69 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %68, i64 0, i32 0, i32 0, i32 1
  %70 = bitcast %"struct.views::ViewModelBase::Entry"** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = bitcast %"class.views::ViewModelBase"* %68 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = sub i64 %71, %73
  %75 = sdiv exact i64 %74, 24
  %76 = trunc i64 %75 to i32
  %77 = shl i64 %75, 32
  %78 = ashr exact i64 %77, 32
  %79 = icmp slt i64 %67, %78
  %80 = trunc i64 %25 to i32
  br i1 %79, label %24, label %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout23LayoutByTabOffsetBeforeEi(%class.StackedTabStripLayout* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, %1
  br i1 %5, label %6, label %15

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 6
  %8 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %9 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %10 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %11 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %13 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %14 = sext i32 %1 to i64
  br label %16

15:                                               ; preds = %16, %2
  ret void

16:                                               ; preds = %6, %16
  %17 = phi i64 [ %14, %6 ], [ %19, %16 ]
  %18 = phi i32 [ %4, %6 ], [ %57, %16 ]
  %19 = add nsw i64 %17, -1
  %20 = load i32, i32* %7, align 4
  %21 = trunc i64 %19 to i32
  %22 = sub nsw i32 %21, %18
  %23 = load i32, i32* %8, align 4
  %24 = icmp slt i32 %23, %22
  %25 = select i1 %24, i32 %23, i32 %22
  %26 = load i32, i32* %9, align 4
  %27 = mul nsw i32 %25, %26
  %28 = add nsw i32 %27, %20
  %29 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %10, align 8
  %30 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %30, align 8
  %32 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %31, i64 %17, i32 1, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = load i32, i32* %11, align 4
  %35 = load i32, i32* %12, align 8
  %36 = sub i32 %35, %34
  %37 = add i32 %36, %33
  %38 = icmp slt i32 %28, %37
  %39 = select i1 %38, i32 %37, i32 %28
  %40 = zext i32 %39 to i64
  %41 = icmp sgt i32 %39, 0
  %42 = icmp sgt i32 %34, 0
  %43 = and i1 %42, %41
  %44 = sub nuw nsw i32 2147483647, %39
  %45 = icmp ult i32 %44, %34
  %46 = and i1 %45, %43
  %47 = select i1 %46, i32 %44, i32 %34
  %48 = load i32, i32* %13, align 4
  %49 = icmp sgt i32 %48, 0
  %50 = icmp sgt i32 %47, 0
  %51 = select i1 %50, i32 %47, i32 0
  %52 = select i1 %49, i32 %48, i32 0
  %53 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %31, i64 %19, i32 1
  %54 = bitcast %"class.gfx::Rect"* %53 to i64*
  store i64 %40, i64* %54, align 8
  %55 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %31, i64 %19, i32 1, i32 1, i32 0
  store i32 %51, i32* %55, align 8
  %56 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %31, i64 %19, i32 1, i32 1, i32 1
  store i32 %52, i32* %56, align 4
  %57 = load i32, i32* %3, align 4
  %58 = sext i32 %57 to i64
  %59 = icmp sgt i64 %19, %58
  br i1 %59, label %16, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout8SetWidthEi(%class.StackedTabStripLayout*, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 7
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, %1
  br i1 %5, label %192, label %6

6:                                                ; preds = %2
  store i32 %1, i32* %3, align 8
  %7 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %8 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %7, align 8
  %9 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %8, i64 0, i32 0, i32 0, i32 1
  %10 = bitcast %"struct.views::ViewModelBase::Entry"** %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.views::ViewModelBase"* %8 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = sub i64 %11, %13
  %15 = sdiv exact i64 %14, 24
  %16 = trunc i64 %15 to i32
  %17 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, %16
  %20 = inttoptr i64 %13 to %"struct.views::ViewModelBase::Entry"*
  br i1 %19, label %37, label %21

21:                                               ; preds = %6
  %22 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 6
  %23 = load i32, i32* %22, align 4
  %24 = sub nsw i32 %16, %18
  %25 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = mul nsw i32 %26, %24
  %28 = icmp sgt i32 %24, 1
  %29 = select i1 %28, i32 %24, i32 1
  %30 = add nsw i32 %29, -1
  %31 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = mul nsw i32 %32, %30
  %34 = add i32 %27, %23
  %35 = sub i32 %34, %33
  %36 = icmp sgt i32 %35, %1
  br i1 %36, label %38, label %37

37:                                               ; preds = %6, %21
  tail call void @_ZN21StackedTabStripLayout17ResetToIdealStateEv(%class.StackedTabStripLayout* %0)
  br label %192

38:                                               ; preds = %21
  %39 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 10
  %40 = load i32, i32* %39, align 4
  %41 = icmp slt i32 %40, %18
  %42 = select i1 %41, i32 %18, i32 %40
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %20, i64 %43, i32 1, i32 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = sub nsw i32 %42, %18
  %47 = sub nsw i32 %16, %42
  %48 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %49 = load i32, i32* %48, align 4
  %50 = icmp slt i32 %49, %46
  %51 = select i1 %50, i32 %49, i32 %46
  %52 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = mul nsw i32 %51, %53
  %55 = add nsw i32 %54, %23
  %56 = mul nsw i32 %26, %47
  %57 = icmp sgt i32 %47, 1
  %58 = select i1 %57, i32 %47, i32 1
  %59 = add nsw i32 %58, -1
  %60 = mul nsw i32 %32, %59
  %61 = sub i32 %60, %56
  %62 = add i32 %61, %1
  %63 = icmp slt i32 %55, %62
  %64 = select i1 %63, i32 %62, i32 %55
  %65 = xor i32 %42, -1
  %66 = add i32 %65, %16
  %67 = icmp slt i32 %49, %66
  %68 = select i1 %67, i32 %49, i32 %66
  %69 = mul nsw i32 %68, %53
  %70 = mul nsw i32 %26, %46
  %71 = icmp sgt i32 %46, 1
  %72 = select i1 %71, i32 %46, i32 1
  %73 = add nsw i32 %72, -1
  %74 = mul nsw i32 %32, %73
  %75 = icmp slt i32 %18, %40
  %76 = sub i32 0, %32
  %77 = select i1 %75, i32 %76, i32 0
  %78 = add i32 %70, %23
  %79 = add i32 %78, %77
  %80 = sub i32 %79, %74
  %81 = sub nsw i32 %1, %69
  %82 = sub i32 %81, %26
  %83 = icmp slt i32 %80, %82
  %84 = select i1 %83, i32 %80, i32 %82
  %85 = icmp sgt i32 %64, %45
  %86 = select i1 %85, i32 %64, i32 %45
  %87 = icmp slt i32 %84, %86
  %88 = select i1 %87, i32 %84, i32 %86
  %89 = zext i32 %88 to i64
  %90 = icmp sgt i32 %88, 0
  %91 = icmp sgt i32 %26, 0
  %92 = and i1 %91, %90
  %93 = sub nuw nsw i32 2147483647, %88
  %94 = icmp ult i32 %93, %26
  %95 = and i1 %94, %92
  %96 = select i1 %95, i32 %93, i32 %26
  %97 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = icmp sgt i32 %98, 0
  %100 = icmp sgt i32 %96, 0
  %101 = select i1 %100, i32 %96, i32 0
  %102 = select i1 %99, i32 %98, i32 0
  %103 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %20, i64 %43, i32 1
  %104 = bitcast %"class.gfx::Rect"* %103 to i64*
  store i64 %89, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %20, i64 %43, i32 1, i32 1, i32 0
  store i32 %101, i32* %105, align 8
  %106 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %20, i64 %43, i32 1, i32 1, i32 1
  store i32 %102, i32* %106, align 4
  %107 = load i32, i32* %39, align 4
  %108 = load i32, i32* %17, align 4
  %109 = icmp slt i32 %108, %107
  br i1 %109, label %110, label %158

110:                                              ; preds = %38
  %111 = sext i32 %107 to i64
  br label %112

112:                                              ; preds = %112, %110
  %113 = phi i64 [ %111, %110 ], [ %115, %112 ]
  %114 = phi i32 [ %108, %110 ], [ %153, %112 ]
  %115 = add nsw i64 %113, -1
  %116 = load i32, i32* %22, align 4
  %117 = trunc i64 %115 to i32
  %118 = sub nsw i32 %117, %114
  %119 = load i32, i32* %48, align 4
  %120 = icmp slt i32 %119, %118
  %121 = select i1 %120, i32 %119, i32 %118
  %122 = load i32, i32* %52, align 4
  %123 = mul nsw i32 %121, %122
  %124 = add nsw i32 %123, %116
  %125 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %7, align 8
  %126 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %125, i64 0, i32 0, i32 0, i32 0
  %127 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %126, align 8
  %128 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %127, i64 %113, i32 1, i32 0, i32 0
  %129 = load i32, i32* %128, align 4
  %130 = load i32, i32* %25, align 4
  %131 = load i32, i32* %31, align 8
  %132 = sub i32 %131, %130
  %133 = add i32 %132, %129
  %134 = icmp slt i32 %124, %133
  %135 = select i1 %134, i32 %133, i32 %124
  %136 = zext i32 %135 to i64
  %137 = icmp sgt i32 %135, 0
  %138 = icmp sgt i32 %130, 0
  %139 = and i1 %138, %137
  %140 = sub nuw nsw i32 2147483647, %135
  %141 = icmp ult i32 %140, %130
  %142 = and i1 %141, %139
  %143 = select i1 %142, i32 %140, i32 %130
  %144 = load i32, i32* %97, align 4
  %145 = icmp sgt i32 %144, 0
  %146 = icmp sgt i32 %143, 0
  %147 = select i1 %146, i32 %143, i32 0
  %148 = select i1 %145, i32 %144, i32 0
  %149 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %127, i64 %115, i32 1
  %150 = bitcast %"class.gfx::Rect"* %149 to i64*
  store i64 %136, i64* %150, align 8
  %151 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %127, i64 %115, i32 1, i32 1, i32 0
  store i32 %147, i32* %151, align 8
  %152 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %127, i64 %115, i32 1, i32 1, i32 1
  store i32 %148, i32* %152, align 4
  %153 = load i32, i32* %17, align 4
  %154 = sext i32 %153 to i64
  %155 = icmp sgt i64 %115, %154
  br i1 %155, label %112, label %156

156:                                              ; preds = %112
  %157 = load i32, i32* %39, align 4
  br label %158

158:                                              ; preds = %156, %38
  %159 = phi i32 [ %153, %156 ], [ %108, %38 ]
  %160 = phi i32 [ %157, %156 ], [ %107, %38 ]
  %161 = icmp slt i32 %160, %159
  %162 = select i1 %161, i32 %159, i32 %160
  tail call void @_ZN21StackedTabStripLayout22LayoutByTabOffsetAfterEi(%class.StackedTabStripLayout* %0, i32 %162)
  %163 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %7, align 8
  %164 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %163, i64 0, i32 0, i32 0, i32 1
  %165 = bitcast %"struct.views::ViewModelBase::Entry"** %164 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = bitcast %"class.views::ViewModelBase"* %163 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = sub i64 %166, %168
  %170 = sdiv exact i64 %169, 24
  %171 = trunc i64 %170 to i32
  %172 = load i32, i32* %17, align 4
  %173 = icmp eq i32 %172, %171
  br i1 %173, label %192, label %174

174:                                              ; preds = %158
  %175 = load i32, i32* %22, align 4
  %176 = sub nsw i32 %171, %172
  %177 = load i32, i32* %25, align 4
  %178 = mul nsw i32 %177, %176
  %179 = icmp sgt i32 %176, 1
  %180 = select i1 %179, i32 %176, i32 1
  %181 = add nsw i32 %180, -1
  %182 = load i32, i32* %31, align 8
  %183 = mul nsw i32 %182, %181
  %184 = add i32 %178, %175
  %185 = sub i32 %184, %183
  %186 = load i32, i32* %3, align 8
  %187 = icmp sgt i32 %185, %186
  %188 = add nsw i32 %172, 1
  %189 = icmp slt i32 %188, %171
  %190 = and i1 %189, %187
  br i1 %190, label %191, label %192

191:                                              ; preds = %174
  tail call void @_ZN21StackedTabStripLayout24AdjustLeadingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  tail call void @_ZN21StackedTabStripLayout25AdjustTrailingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  br label %192

192:                                              ; preds = %191, %174, %158, %2, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout17AdjustStackedTabsEv(%class.StackedTabStripLayout* readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %3 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %2, align 8
  %4 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %3, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.views::ViewModelBase::Entry"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.views::ViewModelBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 24
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, %11
  br i1 %14, label %37, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 6
  %17 = load i32, i32* %16, align 4
  %18 = sub nsw i32 %11, %13
  %19 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = mul nsw i32 %20, %18
  %22 = icmp sgt i32 %18, 1
  %23 = select i1 %22, i32 %18, i32 1
  %24 = add nsw i32 %23, -1
  %25 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = mul nsw i32 %26, %24
  %28 = add i32 %21, %17
  %29 = sub i32 %28, %27
  %30 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 7
  %31 = load i32, i32* %30, align 8
  %32 = icmp sgt i32 %29, %31
  %33 = add nsw i32 %13, 1
  %34 = icmp slt i32 %33, %11
  %35 = and i1 %34, %32
  br i1 %35, label %36, label %37

36:                                               ; preds = %15
  tail call void @_ZN21StackedTabStripLayout24AdjustLeadingStackedTabsEv(%class.StackedTabStripLayout* %0)
  tail call void @_ZN21StackedTabStripLayout25AdjustTrailingStackedTabsEv(%class.StackedTabStripLayout* %0)
  br label %37

37:                                               ; preds = %1, %15, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout14SetActiveIndexEi(%class.StackedTabStripLayout*, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 10
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %4, %6
  %8 = select i1 %7, i32 %6, i32 %4
  store i32 %1, i32* %3, align 4
  %9 = icmp sgt i32 %6, %1
  %10 = select i1 %9, i32 %6, i32 %1
  %11 = icmp eq i32 %8, %10
  br i1 %11, label %193, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %14 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %13, align 8
  %15 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %14, i64 0, i32 0, i32 0, i32 1
  %16 = bitcast %"struct.views::ViewModelBase::Entry"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"class.views::ViewModelBase"* %14 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = sub i64 %17, %19
  %21 = sdiv exact i64 %20, 24
  %22 = trunc i64 %21 to i32
  %23 = icmp eq i32 %6, %22
  %24 = inttoptr i64 %19 to %"struct.views::ViewModelBase::Entry"*
  br i1 %23, label %193, label %25

25:                                               ; preds = %12
  %26 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 6
  %27 = load i32, i32* %26, align 4
  %28 = sub nsw i32 %22, %6
  %29 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = mul nsw i32 %30, %28
  %32 = icmp sgt i32 %28, 1
  %33 = select i1 %32, i32 %28, i32 1
  %34 = add nsw i32 %33, -1
  %35 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = mul nsw i32 %36, %34
  %38 = add i32 %31, %27
  %39 = sub i32 %38, %37
  %40 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 7
  %41 = load i32, i32* %40, align 8
  %42 = icmp sgt i32 %39, %41
  br i1 %42, label %43, label %193

43:                                               ; preds = %25
  %44 = sext i32 %10 to i64
  %45 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %24, i64 %44, i32 1, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = sub nsw i32 %10, %6
  %48 = sub nsw i32 %22, %10
  %49 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %50 = load i32, i32* %49, align 4
  %51 = icmp slt i32 %50, %47
  %52 = select i1 %51, i32 %50, i32 %47
  %53 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = mul nsw i32 %52, %54
  %56 = add nsw i32 %55, %27
  %57 = mul nsw i32 %30, %48
  %58 = icmp sgt i32 %48, 1
  %59 = select i1 %58, i32 %48, i32 1
  %60 = add nsw i32 %59, -1
  %61 = mul nsw i32 %36, %60
  %62 = sub i32 %61, %57
  %63 = add i32 %62, %41
  %64 = icmp slt i32 %56, %63
  %65 = select i1 %64, i32 %63, i32 %56
  %66 = xor i32 %10, -1
  %67 = add i32 %22, %66
  %68 = icmp slt i32 %50, %67
  %69 = select i1 %68, i32 %50, i32 %67
  %70 = mul nsw i32 %69, %54
  %71 = mul nsw i32 %30, %47
  %72 = icmp sgt i32 %47, 1
  %73 = select i1 %72, i32 %47, i32 1
  %74 = add nsw i32 %73, -1
  %75 = mul nsw i32 %36, %74
  %76 = icmp slt i32 %6, %1
  %77 = sub i32 0, %36
  %78 = select i1 %76, i32 %77, i32 0
  %79 = add i32 %71, %27
  %80 = add i32 %79, %78
  %81 = sub i32 %80, %75
  %82 = sub nsw i32 %41, %70
  %83 = sub i32 %82, %30
  %84 = icmp slt i32 %81, %83
  %85 = select i1 %84, i32 %81, i32 %83
  %86 = icmp sgt i32 %65, %46
  %87 = select i1 %86, i32 %65, i32 %46
  %88 = icmp slt i32 %85, %87
  %89 = select i1 %88, i32 %85, i32 %87
  %90 = zext i32 %89 to i64
  %91 = icmp sgt i32 %89, 0
  %92 = icmp sgt i32 %30, 0
  %93 = and i1 %92, %91
  %94 = sub nuw nsw i32 2147483647, %89
  %95 = icmp ult i32 %94, %30
  %96 = and i1 %95, %93
  %97 = select i1 %96, i32 %94, i32 %30
  %98 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %99 = load i32, i32* %98, align 4
  %100 = icmp sgt i32 %99, 0
  %101 = icmp sgt i32 %97, 0
  %102 = select i1 %101, i32 %97, i32 0
  %103 = select i1 %100, i32 %99, i32 0
  %104 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %24, i64 %44, i32 1
  %105 = bitcast %"class.gfx::Rect"* %104 to i64*
  store i64 %90, i64* %105, align 8
  %106 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %24, i64 %44, i32 1, i32 1, i32 0
  store i32 %102, i32* %106, align 8
  %107 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %24, i64 %44, i32 1, i32 1, i32 1
  store i32 %103, i32* %107, align 4
  %108 = load i32, i32* %3, align 4
  %109 = load i32, i32* %5, align 4
  %110 = icmp slt i32 %109, %108
  br i1 %110, label %111, label %159

111:                                              ; preds = %43
  %112 = sext i32 %108 to i64
  br label %113

113:                                              ; preds = %113, %111
  %114 = phi i64 [ %112, %111 ], [ %116, %113 ]
  %115 = phi i32 [ %109, %111 ], [ %154, %113 ]
  %116 = add nsw i64 %114, -1
  %117 = load i32, i32* %26, align 4
  %118 = trunc i64 %116 to i32
  %119 = sub nsw i32 %118, %115
  %120 = load i32, i32* %49, align 4
  %121 = icmp slt i32 %120, %119
  %122 = select i1 %121, i32 %120, i32 %119
  %123 = load i32, i32* %53, align 4
  %124 = mul nsw i32 %122, %123
  %125 = add nsw i32 %124, %117
  %126 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %13, align 8
  %127 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %126, i64 0, i32 0, i32 0, i32 0
  %128 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %127, align 8
  %129 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %128, i64 %114, i32 1, i32 0, i32 0
  %130 = load i32, i32* %129, align 4
  %131 = load i32, i32* %29, align 4
  %132 = load i32, i32* %35, align 8
  %133 = sub i32 %132, %131
  %134 = add i32 %133, %130
  %135 = icmp slt i32 %125, %134
  %136 = select i1 %135, i32 %134, i32 %125
  %137 = zext i32 %136 to i64
  %138 = icmp sgt i32 %136, 0
  %139 = icmp sgt i32 %131, 0
  %140 = and i1 %139, %138
  %141 = sub nuw nsw i32 2147483647, %136
  %142 = icmp ult i32 %141, %131
  %143 = and i1 %142, %140
  %144 = select i1 %143, i32 %141, i32 %131
  %145 = load i32, i32* %98, align 4
  %146 = icmp sgt i32 %145, 0
  %147 = icmp sgt i32 %144, 0
  %148 = select i1 %147, i32 %144, i32 0
  %149 = select i1 %146, i32 %145, i32 0
  %150 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %128, i64 %116, i32 1
  %151 = bitcast %"class.gfx::Rect"* %150 to i64*
  store i64 %137, i64* %151, align 8
  %152 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %128, i64 %116, i32 1, i32 1, i32 0
  store i32 %148, i32* %152, align 8
  %153 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %128, i64 %116, i32 1, i32 1, i32 1
  store i32 %149, i32* %153, align 4
  %154 = load i32, i32* %5, align 4
  %155 = sext i32 %154 to i64
  %156 = icmp sgt i64 %116, %155
  br i1 %156, label %113, label %157

157:                                              ; preds = %113
  %158 = load i32, i32* %3, align 4
  br label %159

159:                                              ; preds = %157, %43
  %160 = phi i32 [ %154, %157 ], [ %109, %43 ]
  %161 = phi i32 [ %158, %157 ], [ %108, %43 ]
  %162 = icmp slt i32 %161, %160
  %163 = select i1 %162, i32 %160, i32 %161
  tail call void @_ZN21StackedTabStripLayout22LayoutByTabOffsetAfterEi(%class.StackedTabStripLayout* %0, i32 %163)
  %164 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %13, align 8
  %165 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %164, i64 0, i32 0, i32 0, i32 1
  %166 = bitcast %"struct.views::ViewModelBase::Entry"** %165 to i64*
  %167 = load i64, i64* %166, align 8
  %168 = bitcast %"class.views::ViewModelBase"* %164 to i64*
  %169 = load i64, i64* %168, align 8
  %170 = sub i64 %167, %169
  %171 = sdiv exact i64 %170, 24
  %172 = trunc i64 %171 to i32
  %173 = load i32, i32* %5, align 4
  %174 = icmp eq i32 %173, %172
  br i1 %174, label %193, label %175

175:                                              ; preds = %159
  %176 = load i32, i32* %26, align 4
  %177 = sub nsw i32 %172, %173
  %178 = load i32, i32* %29, align 4
  %179 = mul nsw i32 %178, %177
  %180 = icmp sgt i32 %177, 1
  %181 = select i1 %180, i32 %177, i32 1
  %182 = add nsw i32 %181, -1
  %183 = load i32, i32* %35, align 8
  %184 = mul nsw i32 %183, %182
  %185 = add i32 %179, %176
  %186 = sub i32 %185, %184
  %187 = load i32, i32* %40, align 8
  %188 = icmp sgt i32 %186, %187
  %189 = add nsw i32 %173, 1
  %190 = icmp slt i32 %189, %172
  %191 = and i1 %190, %188
  br i1 %191, label %192, label %193

192:                                              ; preds = %175
  tail call void @_ZN21StackedTabStripLayout24AdjustLeadingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  tail call void @_ZN21StackedTabStripLayout25AdjustTrailingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  br label %193

193:                                              ; preds = %12, %192, %175, %159, %2, %25
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout13DragActiveTabEi(%class.StackedTabStripLayout* readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = alloca %"struct.base::UserMetricsAction", align 8
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = icmp eq i32 %1, 0
  br i1 %8, label %441, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %11 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %10, align 8
  %12 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %11, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast %"struct.views::ViewModelBase::Entry"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.views::ViewModelBase"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = sdiv exact i64 %17, 24
  %19 = trunc i64 %18 to i32
  %20 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, %19
  br i1 %22, label %441, label %23

23:                                               ; preds = %9
  %24 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 6
  %25 = load i32, i32* %24, align 4
  %26 = sub nsw i32 %19, %21
  %27 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = mul nsw i32 %28, %26
  %30 = icmp sgt i32 %26, 1
  %31 = select i1 %30, i32 %26, i32 1
  %32 = add nsw i32 %31, -1
  %33 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = mul nsw i32 %34, %32
  %36 = add i32 %29, %25
  %37 = sub i32 %36, %35
  %38 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 7
  %39 = load i32, i32* %38, align 8
  %40 = icmp sgt i32 %37, %39
  br i1 %40, label %41, label %441

41:                                               ; preds = %23
  %42 = bitcast %"struct.base::UserMetricsAction"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #7
  %43 = getelementptr inbounds %"struct.base::UserMetricsAction", %"struct.base::UserMetricsAction"* %3, i64 0, i32 0
  store i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str, i64 0, i64 0), i8** %43, align 8
  call void @_ZN4base12RecordActionERKNS_17UserMetricsActionE(%"struct.base::UserMetricsAction"* nonnull dereferenceable(8) %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #7
  %44 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 10
  %45 = load i32, i32* %44, align 4
  %46 = load i32, i32* %20, align 4
  %47 = icmp slt i32 %45, %46
  %48 = select i1 %47, i32 %46, i32 %45
  %49 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %10, align 8
  %50 = sext i32 %48 to i64
  %51 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %49, i64 0, i32 0, i32 0, i32 0
  %52 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %51, align 8
  %53 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %52, i64 %50, i32 1, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp sgt i32 %1, 0
  %56 = ptrtoint %"struct.views::ViewModelBase::Entry"* %52 to i64
  br i1 %55, label %57, label %118

57:                                               ; preds = %41
  %58 = sub nsw i32 %48, %46
  %59 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %49, i64 0, i32 0, i32 0, i32 1
  %60 = bitcast %"struct.views::ViewModelBase::Entry"** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = sub i64 %61, %56
  %63 = sdiv exact i64 %62, 24
  %64 = trunc i64 %63 to i32
  %65 = sub nsw i32 %64, %48
  %66 = load i32, i32* %24, align 4
  %67 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %68 = load i32, i32* %67, align 4
  %69 = icmp slt i32 %68, %58
  %70 = select i1 %69, i32 %68, i32 %58
  %71 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = mul nsw i32 %70, %72
  %74 = add nsw i32 %73, %66
  %75 = load i32, i32* %38, align 8
  %76 = load i32, i32* %27, align 4
  %77 = mul nsw i32 %76, %65
  %78 = icmp sgt i32 %65, 1
  %79 = select i1 %78, i32 %65, i32 1
  %80 = add nsw i32 %79, -1
  %81 = load i32, i32* %33, align 8
  %82 = mul nsw i32 %80, %81
  %83 = sub i32 %82, %77
  %84 = add i32 %83, %75
  %85 = icmp slt i32 %74, %84
  %86 = select i1 %85, i32 %84, i32 %74
  %87 = icmp eq i32 %54, %86
  br i1 %87, label %88, label %242

88:                                               ; preds = %57
  call void @_ZN21StackedTabStripLayout22LayoutByTabOffsetAfterEi(%class.StackedTabStripLayout* %0, i32 %48)
  %89 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %10, align 8
  %90 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %89, i64 0, i32 0, i32 0, i32 1
  %91 = bitcast %"struct.views::ViewModelBase::Entry"** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = bitcast %"class.views::ViewModelBase"* %89 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = sub i64 %92, %94
  %96 = sdiv exact i64 %95, 24
  %97 = trunc i64 %96 to i32
  %98 = load i32, i32* %20, align 4
  %99 = icmp eq i32 %98, %97
  br i1 %99, label %242, label %100

100:                                              ; preds = %88
  %101 = load i32, i32* %24, align 4
  %102 = sub nsw i32 %97, %98
  %103 = load i32, i32* %27, align 4
  %104 = mul nsw i32 %103, %102
  %105 = icmp sgt i32 %102, 1
  %106 = select i1 %105, i32 %102, i32 1
  %107 = add nsw i32 %106, -1
  %108 = load i32, i32* %33, align 8
  %109 = mul nsw i32 %108, %107
  %110 = add i32 %104, %101
  %111 = sub i32 %110, %109
  %112 = load i32, i32* %38, align 8
  %113 = icmp sgt i32 %111, %112
  %114 = add nsw i32 %98, 1
  %115 = icmp slt i32 %114, %97
  %116 = and i1 %115, %113
  br i1 %116, label %117, label %242

117:                                              ; preds = %100
  call void @_ZN21StackedTabStripLayout24AdjustLeadingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  call void @_ZN21StackedTabStripLayout25AdjustTrailingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  br label %242

118:                                              ; preds = %41
  %119 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %49, i64 0, i32 0, i32 0, i32 1
  %120 = bitcast %"struct.views::ViewModelBase::Entry"** %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = sub i64 %121, %56
  %123 = sdiv exact i64 %122, 24
  %124 = trunc i64 %123 to i32
  %125 = xor i32 %48, -1
  %126 = add i32 %124, %125
  %127 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %128 = load i32, i32* %127, align 4
  %129 = icmp slt i32 %128, %126
  %130 = select i1 %129, i32 %128, i32 %126
  %131 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %132 = load i32, i32* %131, align 4
  %133 = mul nsw i32 %130, %132
  %134 = sub nsw i32 %48, %46
  %135 = load i32, i32* %27, align 4
  %136 = mul nsw i32 %135, %134
  %137 = icmp sgt i32 %134, 1
  %138 = select i1 %137, i32 %134, i32 1
  %139 = add nsw i32 %138, -1
  %140 = load i32, i32* %33, align 8
  %141 = mul nsw i32 %140, %139
  %142 = load i32, i32* %24, align 4
  %143 = icmp slt i32 %46, %45
  %144 = sub i32 0, %140
  %145 = select i1 %143, i32 %144, i32 0
  %146 = add i32 %142, %136
  %147 = add i32 %146, %145
  %148 = sub i32 %147, %141
  %149 = load i32, i32* %38, align 8
  %150 = sub nsw i32 %149, %133
  %151 = sub i32 %150, %135
  %152 = icmp slt i32 %148, %151
  %153 = select i1 %152, i32 %148, i32 %151
  %154 = icmp eq i32 %54, %153
  br i1 %154, label %155, label %242

155:                                              ; preds = %118
  br i1 %143, label %156, label %220

156:                                              ; preds = %155
  %157 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  br label %158

158:                                              ; preds = %199, %156
  %159 = phi i32 [ %140, %156 ], [ %209, %199 ]
  %160 = phi i32 [ %135, %156 ], [ %208, %199 ]
  %161 = phi i32 [ %54, %156 ], [ %207, %199 ]
  %162 = phi %"struct.views::ViewModelBase::Entry"* [ %52, %156 ], [ %205, %199 ]
  %163 = phi i32 [ %132, %156 ], [ %202, %199 ]
  %164 = phi i32 [ %128, %156 ], [ %201, %199 ]
  %165 = phi i32 [ %142, %156 ], [ %200, %199 ]
  %166 = phi i64 [ %50, %156 ], [ %168, %199 ]
  %167 = phi i32 [ %46, %156 ], [ %196, %199 ]
  %168 = add nsw i64 %166, -1
  %169 = trunc i64 %168 to i32
  %170 = sub nsw i32 %169, %167
  %171 = icmp slt i32 %164, %170
  %172 = select i1 %171, i32 %164, i32 %170
  %173 = mul nsw i32 %172, %163
  %174 = add nsw i32 %173, %165
  %175 = sub i32 %159, %160
  %176 = add i32 %175, %161
  %177 = icmp slt i32 %174, %176
  %178 = select i1 %177, i32 %176, i32 %174
  %179 = zext i32 %178 to i64
  %180 = icmp sgt i32 %178, 0
  %181 = icmp sgt i32 %160, 0
  %182 = and i1 %181, %180
  %183 = sub nuw nsw i32 2147483647, %178
  %184 = icmp ult i32 %183, %160
  %185 = and i1 %184, %182
  %186 = select i1 %185, i32 %183, i32 %160
  %187 = load i32, i32* %157, align 4
  %188 = icmp sgt i32 %187, 0
  %189 = icmp sgt i32 %186, 0
  %190 = select i1 %189, i32 %186, i32 0
  %191 = select i1 %188, i32 %187, i32 0
  %192 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %162, i64 %168, i32 1
  %193 = bitcast %"class.gfx::Rect"* %192 to i64*
  store i64 %179, i64* %193, align 8
  %194 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %162, i64 %168, i32 1, i32 1, i32 0
  store i32 %190, i32* %194, align 8
  %195 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %162, i64 %168, i32 1, i32 1, i32 1
  store i32 %191, i32* %195, align 4
  %196 = load i32, i32* %20, align 4
  %197 = sext i32 %196 to i64
  %198 = icmp sgt i64 %168, %197
  br i1 %198, label %199, label %210

199:                                              ; preds = %158
  %200 = load i32, i32* %24, align 4
  %201 = load i32, i32* %127, align 4
  %202 = load i32, i32* %131, align 4
  %203 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %10, align 8
  %204 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %203, i64 0, i32 0, i32 0, i32 0
  %205 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %204, align 8
  %206 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %205, i64 %168, i32 1, i32 0, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = load i32, i32* %27, align 4
  %209 = load i32, i32* %33, align 8
  br label %158

210:                                              ; preds = %158
  %211 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %10, align 8
  %212 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %211, i64 0, i32 0, i32 0, i32 1
  %213 = bitcast %"struct.views::ViewModelBase::Entry"** %212 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = bitcast %"class.views::ViewModelBase"* %211 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = sub i64 %214, %216
  %218 = sdiv exact i64 %217, 24
  %219 = trunc i64 %218 to i32
  br label %220

220:                                              ; preds = %210, %155
  %221 = phi i32 [ %219, %210 ], [ %124, %155 ]
  %222 = phi i32 [ %196, %210 ], [ %46, %155 ]
  %223 = icmp eq i32 %221, %222
  br i1 %223, label %242, label %224

224:                                              ; preds = %220
  %225 = load i32, i32* %24, align 4
  %226 = sub nsw i32 %221, %222
  %227 = load i32, i32* %27, align 4
  %228 = mul nsw i32 %227, %226
  %229 = icmp sgt i32 %226, 1
  %230 = select i1 %229, i32 %226, i32 1
  %231 = add nsw i32 %230, -1
  %232 = load i32, i32* %33, align 8
  %233 = mul nsw i32 %232, %231
  %234 = add i32 %228, %225
  %235 = sub i32 %234, %233
  %236 = load i32, i32* %38, align 8
  %237 = icmp sgt i32 %235, %236
  %238 = add nsw i32 %222, 1
  %239 = icmp slt i32 %238, %221
  %240 = and i1 %239, %237
  br i1 %240, label %241, label %242

241:                                              ; preds = %224
  call void @_ZN21StackedTabStripLayout24AdjustLeadingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  call void @_ZN21StackedTabStripLayout25AdjustTrailingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  br label %242

242:                                              ; preds = %241, %224, %220, %57, %117, %100, %88, %118
  %243 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %243)
  %244 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %244)
  %245 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %245)
  %246 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %246)
  %247 = add i32 %54, %1
  br i1 %55, label %248, label %277

248:                                              ; preds = %242
  store i32 %247, i32* %4, align 4
  %249 = load i32, i32* %44, align 4
  %250 = load i32, i32* %20, align 4
  %251 = icmp slt i32 %249, %250
  %252 = select i1 %251, i32 %250, i32 %249
  %253 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %10, align 8
  %254 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %253, i64 0, i32 0, i32 0, i32 1
  %255 = bitcast %"struct.views::ViewModelBase::Entry"** %254 to i64*
  %256 = load i64, i64* %255, align 8
  %257 = bitcast %"class.views::ViewModelBase"* %253 to i64*
  %258 = load i64, i64* %257, align 8
  %259 = sub i64 %256, %258
  %260 = sdiv exact i64 %259, 24
  %261 = trunc i64 %260 to i32
  %262 = xor i32 %252, -1
  %263 = add i32 %261, %262
  %264 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %265 = load i32, i32* %264, align 4
  %266 = icmp slt i32 %265, %263
  %267 = select i1 %266, i32 %265, i32 %263
  %268 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %269 = load i32, i32* %268, align 4
  %270 = mul nsw i32 %267, %269
  %271 = load i32, i32* %38, align 8
  %272 = load i32, i32* %27, align 4
  %273 = sub i32 %271, %272
  %274 = sub i32 %273, %270
  store i32 %274, i32* %5, align 4
  %275 = icmp slt i32 %274, %247
  %276 = select i1 %275, i32* %5, i32* %4
  br label %294

277:                                              ; preds = %242
  store i32 %247, i32* %6, align 4
  %278 = load i32, i32* %44, align 4
  %279 = load i32, i32* %20, align 4
  %280 = icmp slt i32 %278, %279
  %281 = select i1 %280, i32 %279, i32 %278
  %282 = load i32, i32* %24, align 4
  %283 = sub nsw i32 %281, %279
  %284 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %285 = load i32, i32* %284, align 4
  %286 = icmp slt i32 %285, %283
  %287 = select i1 %286, i32 %285, i32 %283
  %288 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %289 = load i32, i32* %288, align 4
  %290 = mul nsw i32 %287, %289
  %291 = add nsw i32 %290, %282
  store i32 %291, i32* %7, align 4
  %292 = icmp slt i32 %247, %291
  %293 = select i1 %292, i32* %7, i32* %6
  br label %294

294:                                              ; preds = %277, %248
  %295 = phi i32 [ %250, %248 ], [ %279, %277 ]
  %296 = phi i32 [ %249, %248 ], [ %278, %277 ]
  %297 = phi i32* [ %276, %248 ], [ %293, %277 ]
  %298 = load i32, i32* %297, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %246)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %245)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %244)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %243)
  %299 = icmp eq i32 %298, %54
  br i1 %299, label %395, label %300

300:                                              ; preds = %294
  %301 = icmp slt i32 %296, %295
  %302 = select i1 %301, i32 %295, i32 %296
  %303 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %10, align 8
  %304 = zext i32 %298 to i64
  %305 = load i32, i32* %27, align 4
  %306 = icmp sgt i32 %298, 0
  %307 = icmp sgt i32 %305, 0
  %308 = and i1 %306, %307
  %309 = sub nuw nsw i32 2147483647, %298
  %310 = icmp ult i32 %309, %305
  %311 = and i1 %310, %308
  %312 = select i1 %311, i32 %309, i32 %305
  %313 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %314 = load i32, i32* %313, align 4
  %315 = icmp sgt i32 %314, 0
  %316 = icmp sgt i32 %312, 0
  %317 = select i1 %316, i32 %312, i32 0
  %318 = select i1 %315, i32 %314, i32 0
  %319 = sext i32 %302 to i64
  %320 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %303, i64 0, i32 0, i32 0, i32 0
  %321 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %320, align 8
  %322 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %321, i64 %319, i32 1
  %323 = bitcast %"class.gfx::Rect"* %322 to i64*
  store i64 %304, i64* %323, align 8
  %324 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %321, i64 %319, i32 1, i32 1, i32 0
  store i32 %317, i32* %324, align 8
  %325 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %321, i64 %319, i32 1, i32 1, i32 1
  store i32 %318, i32* %325, align 4
  %326 = load i32, i32* %44, align 4
  %327 = load i32, i32* %20, align 4
  %328 = icmp slt i32 %326, %327
  %329 = select i1 %328, i32 %327, i32 %326
  br i1 %55, label %330, label %336

330:                                              ; preds = %300
  %331 = sub nsw i32 %298, %54
  call void @_ZN21StackedTabStripLayout13PushTabsAfterEii(%class.StackedTabStripLayout* %0, i32 %329, i32 %331)
  %332 = load i32, i32* %44, align 4
  %333 = load i32, i32* %20, align 4
  %334 = icmp slt i32 %332, %333
  %335 = select i1 %334, i32 %333, i32 %332
  call void @_ZN21StackedTabStripLayout19LayoutForDragBeforeEi(%class.StackedTabStripLayout* %0, i32 %335)
  br label %393

336:                                              ; preds = %300
  %337 = add i32 %329, -1
  %338 = icmp sgt i32 %337, %327
  br i1 %338, label %339, label %388

339:                                              ; preds = %336
  %340 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %341 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %342 = sext i32 %337 to i64
  %343 = sub i32 %298, %54
  br label %344

344:                                              ; preds = %344, %339
  %345 = phi i64 [ %342, %339 ], [ %382, %344 ]
  %346 = phi i32 [ %327, %339 ], [ %383, %344 ]
  %347 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %10, align 8
  %348 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %347, i64 0, i32 0, i32 0, i32 0
  %349 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %348, align 8
  %350 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %349, i64 %345, i32 1, i32 0, i32 0
  %351 = load i32, i32* %350, align 4
  %352 = add i32 %351, %343
  %353 = load i32, i32* %24, align 4
  %354 = trunc i64 %345 to i32
  %355 = sub nsw i32 %354, %346
  %356 = load i32, i32* %340, align 4
  %357 = icmp slt i32 %356, %355
  %358 = select i1 %357, i32 %356, i32 %355
  %359 = load i32, i32* %341, align 4
  %360 = mul nsw i32 %358, %359
  %361 = add nsw i32 %360, %353
  %362 = icmp slt i32 %352, %361
  %363 = select i1 %362, i32 %361, i32 %352
  %364 = zext i32 %363 to i64
  %365 = load i32, i32* %27, align 4
  %366 = icmp sgt i32 %363, 0
  %367 = icmp sgt i32 %365, 0
  %368 = and i1 %367, %366
  %369 = sub nuw nsw i32 2147483647, %363
  %370 = icmp ult i32 %369, %365
  %371 = and i1 %370, %368
  %372 = select i1 %371, i32 %369, i32 %365
  %373 = load i32, i32* %313, align 4
  %374 = icmp sgt i32 %373, 0
  %375 = icmp sgt i32 %372, 0
  %376 = select i1 %375, i32 %372, i32 0
  %377 = select i1 %374, i32 %373, i32 0
  %378 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %349, i64 %345, i32 1
  %379 = bitcast %"class.gfx::Rect"* %378 to i64*
  store i64 %364, i64* %379, align 8
  %380 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %349, i64 %345, i32 1, i32 1, i32 0
  store i32 %376, i32* %380, align 8
  %381 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %349, i64 %345, i32 1, i32 1, i32 1
  store i32 %377, i32* %381, align 4
  %382 = add nsw i64 %345, -1
  %383 = load i32, i32* %20, align 4
  %384 = sext i32 %383 to i64
  %385 = icmp sgt i64 %382, %384
  br i1 %385, label %344, label %386

386:                                              ; preds = %344
  %387 = load i32, i32* %44, align 4
  br label %388

388:                                              ; preds = %386, %336
  %389 = phi i32 [ %383, %386 ], [ %327, %336 ]
  %390 = phi i32 [ %387, %386 ], [ %326, %336 ]
  %391 = icmp slt i32 %390, %389
  %392 = select i1 %391, i32 %389, i32 %390
  call void @_ZN21StackedTabStripLayout18LayoutForDragAfterEi(%class.StackedTabStripLayout* %0, i32 %392)
  br label %393

393:                                              ; preds = %388, %330
  %394 = sub i32 %247, %298
  br label %395

395:                                              ; preds = %294, %393
  %396 = phi i32 [ %394, %393 ], [ %1, %294 ]
  %397 = icmp sgt i32 %396, 0
  br i1 %397, label %398, label %403

398:                                              ; preds = %395
  %399 = load i32, i32* %44, align 4
  %400 = load i32, i32* %20, align 4
  %401 = icmp slt i32 %399, %400
  %402 = select i1 %401, i32 %400, i32 %399
  call void @_ZN21StackedTabStripLayout16ExpandTabsBeforeEii(%class.StackedTabStripLayout* %0, i32 %402, i32 %396)
  br label %411

403:                                              ; preds = %395
  %404 = icmp slt i32 %396, 0
  br i1 %404, label %405, label %411

405:                                              ; preds = %403
  %406 = load i32, i32* %44, align 4
  %407 = load i32, i32* %20, align 4
  %408 = icmp slt i32 %406, %407
  %409 = select i1 %408, i32 %407, i32 %406
  %410 = sub nsw i32 0, %396
  call void @_ZN21StackedTabStripLayout15ExpandTabsAfterEii(%class.StackedTabStripLayout* %0, i32 %409, i32 %410)
  br label %411

411:                                              ; preds = %403, %405, %398
  %412 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %10, align 8
  %413 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %412, i64 0, i32 0, i32 0, i32 1
  %414 = bitcast %"struct.views::ViewModelBase::Entry"** %413 to i64*
  %415 = load i64, i64* %414, align 8
  %416 = bitcast %"class.views::ViewModelBase"* %412 to i64*
  %417 = load i64, i64* %416, align 8
  %418 = sub i64 %415, %417
  %419 = sdiv exact i64 %418, 24
  %420 = trunc i64 %419 to i32
  %421 = load i32, i32* %20, align 4
  %422 = icmp eq i32 %421, %420
  br i1 %422, label %441, label %423

423:                                              ; preds = %411
  %424 = load i32, i32* %24, align 4
  %425 = sub nsw i32 %420, %421
  %426 = load i32, i32* %27, align 4
  %427 = mul nsw i32 %426, %425
  %428 = icmp sgt i32 %425, 1
  %429 = select i1 %428, i32 %425, i32 1
  %430 = add nsw i32 %429, -1
  %431 = load i32, i32* %33, align 8
  %432 = mul nsw i32 %431, %430
  %433 = add i32 %427, %424
  %434 = sub i32 %433, %432
  %435 = load i32, i32* %38, align 8
  %436 = icmp sgt i32 %434, %435
  %437 = add nsw i32 %421, 1
  %438 = icmp slt i32 %437, %420
  %439 = and i1 %438, %436
  br i1 %439, label %440, label %441

440:                                              ; preds = %423
  call void @_ZN21StackedTabStripLayout24AdjustLeadingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  call void @_ZN21StackedTabStripLayout25AdjustTrailingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  br label %441

441:                                              ; preds = %9, %440, %423, %411, %2, %23
  ret void
}

declare void @_ZN4base12RecordActionERKNS_17UserMetricsActionE(%"struct.base::UserMetricsAction"* dereferenceable(8)) local_unnamed_addr #5

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK21StackedTabStripLayout7GetMinXEi(%class.StackedTabStripLayout* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 4
  %5 = sub nsw i32 %1, %4
  %6 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %7 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %6, align 8
  %8 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %7, i64 0, i32 0, i32 0, i32 1
  %9 = bitcast %"struct.views::ViewModelBase::Entry"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.views::ViewModelBase"* %7 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = trunc i64 %14 to i32
  %16 = sub nsw i32 %15, %1
  %17 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 6
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %20 = load i32, i32* %19, align 4
  %21 = icmp slt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = mul nsw i32 %22, %24
  %26 = add nsw i32 %25, %18
  %27 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 7
  %28 = load i32, i32* %27, align 8
  %29 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = mul nsw i32 %30, %16
  %32 = icmp sgt i32 %16, 1
  %33 = select i1 %32, i32 %16, i32 1
  %34 = add nsw i32 %33, -1
  %35 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %36 = load i32, i32* %35, align 8
  %37 = mul nsw i32 %34, %36
  %38 = sub i32 %37, %31
  %39 = add i32 %38, %28
  %40 = icmp slt i32 %26, %39
  %41 = select i1 %40, i32 %39, i32 %26
  ret i32 %41
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK21StackedTabStripLayout7GetMaxXEi(%class.StackedTabStripLayout* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %4 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %3, align 8
  %5 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %4, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.views::ViewModelBase::Entry"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.views::ViewModelBase"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 24
  %12 = trunc i64 %11 to i32
  %13 = xor i32 %1, -1
  %14 = add i32 %12, %13
  %15 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, %14
  %18 = select i1 %17, i32 %16, i32 %14
  %19 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = mul nsw i32 %18, %20
  %22 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %23 = load i32, i32* %22, align 4
  %24 = sub nsw i32 %1, %23
  %25 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = mul nsw i32 %26, %24
  %28 = icmp sgt i32 %24, 1
  %29 = select i1 %28, i32 %24, i32 1
  %30 = add nsw i32 %29, -1
  %31 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %32 = load i32, i32* %31, align 8
  %33 = mul nsw i32 %30, %32
  %34 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 6
  %35 = load i32, i32* %34, align 4
  %36 = icmp slt i32 %23, %1
  %37 = sub i32 0, %32
  %38 = select i1 %36, i32 %37, i32 0
  %39 = add i32 %35, %27
  %40 = add i32 %39, %38
  %41 = sub i32 %40, %33
  %42 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 7
  %43 = load i32, i32* %42, align 8
  %44 = sub nsw i32 %43, %21
  %45 = sub i32 %44, %26
  %46 = icmp slt i32 %41, %45
  %47 = select i1 %46, i32 %41, i32 %45
  ret i32 %47
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK21StackedTabStripLayout11GetMaxDragXEi(%class.StackedTabStripLayout* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %4 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %3, align 8
  %5 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %4, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.views::ViewModelBase::Entry"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.views::ViewModelBase"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 24
  %12 = trunc i64 %11 to i32
  %13 = xor i32 %1, -1
  %14 = add i32 %12, %13
  %15 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, %14
  %18 = select i1 %17, i32 %16, i32 %14
  %19 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = mul nsw i32 %18, %20
  %22 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 7
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = sub i32 %23, %25
  %27 = sub i32 %26, %21
  ret i32 %27
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK21StackedTabStripLayout11GetMinDragXEi(%class.StackedTabStripLayout* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 6
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %6 = load i32, i32* %5, align 4
  %7 = sub nsw i32 %1, %6
  %8 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %9 = load i32, i32* %8, align 4
  %10 = icmp slt i32 %9, %7
  %11 = select i1 %10, i32 %9, i32 %7
  %12 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = mul nsw i32 %11, %13
  %15 = add nsw i32 %14, %4
  ret i32 %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout13PushTabsAfterEii(%class.StackedTabStripLayout* nocapture readonly, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = add i32 %1, 1
  %5 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %6 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %5, align 8
  %7 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %6, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.views::ViewModelBase::Entry"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.views::ViewModelBase"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 24
  %14 = trunc i64 %13 to i32
  %15 = icmp slt i32 %4, %14
  br i1 %15, label %16, label %23

16:                                               ; preds = %3
  %17 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %18 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %19 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 7
  %20 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %22 = sext i32 %4 to i64
  br label %24

23:                                               ; preds = %24, %3
  ret void

24:                                               ; preds = %16, %24
  %25 = phi i64 [ %22, %16 ], [ %64, %24 ]
  %26 = phi i32 [ %14, %16 ], [ %73, %24 ]
  %27 = phi %"class.views::ViewModelBase"* [ %6, %16 ], [ %65, %24 ]
  %28 = phi i32 [ %1, %16 ], [ %77, %24 ]
  %29 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %27, i64 0, i32 0, i32 0, i32 0
  %30 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %29, align 8
  %31 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %30, i64 %25, i32 1, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = add nsw i32 %32, %2
  %34 = sub i32 -2, %28
  %35 = add i32 %26, %34
  %36 = load i32, i32* %17, align 4
  %37 = icmp slt i32 %36, %35
  %38 = select i1 %37, i32 %36, i32 %35
  %39 = load i32, i32* %18, align 4
  %40 = mul nsw i32 %38, %39
  %41 = load i32, i32* %19, align 8
  %42 = load i32, i32* %20, align 4
  %43 = sub i32 %41, %42
  %44 = sub i32 %43, %40
  %45 = icmp slt i32 %44, %33
  %46 = select i1 %45, i32 %44, i32 %33
  %47 = zext i32 %46 to i64
  %48 = icmp sgt i32 %46, 0
  %49 = icmp sgt i32 %42, 0
  %50 = and i1 %49, %48
  %51 = sub nuw nsw i32 2147483647, %46
  %52 = icmp ult i32 %51, %42
  %53 = and i1 %52, %50
  %54 = select i1 %53, i32 %51, i32 %42
  %55 = load i32, i32* %21, align 4
  %56 = icmp sgt i32 %55, 0
  %57 = icmp sgt i32 %54, 0
  %58 = select i1 %57, i32 %54, i32 0
  %59 = select i1 %56, i32 %55, i32 0
  %60 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %30, i64 %25, i32 1
  %61 = bitcast %"class.gfx::Rect"* %60 to i64*
  store i64 %47, i64* %61, align 8
  %62 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %30, i64 %25, i32 1, i32 1, i32 0
  store i32 %58, i32* %62, align 8
  %63 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %30, i64 %25, i32 1, i32 1, i32 1
  store i32 %59, i32* %63, align 4
  %64 = add nsw i64 %25, 1
  %65 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %5, align 8
  %66 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %65, i64 0, i32 0, i32 0, i32 1
  %67 = bitcast %"struct.views::ViewModelBase::Entry"** %66 to i64*
  %68 = load i64, i64* %67, align 8
  %69 = bitcast %"class.views::ViewModelBase"* %65 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = sub i64 %68, %70
  %72 = sdiv exact i64 %71, 24
  %73 = trunc i64 %72 to i32
  %74 = shl i64 %72, 32
  %75 = ashr exact i64 %74, 32
  %76 = icmp slt i64 %64, %75
  %77 = trunc i64 %25 to i32
  br i1 %76, label %24, label %23
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout19LayoutForDragBeforeEi(%class.StackedTabStripLayout* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, %1
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %8 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %9 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %11 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %12 = sext i32 %1 to i64
  br label %16

13:                                               ; preds = %16, %2
  %14 = phi i32 [ %4, %2 ], [ %53, %16 ]
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %108, label %56

16:                                               ; preds = %6, %16
  %17 = phi i64 [ %12, %6 ], [ %18, %16 ]
  %18 = add nsw i64 %17, -1
  %19 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %7, align 8
  %20 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %20, align 8
  %22 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %21, i64 %17, i32 1, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = load i32, i32* %8, align 4
  %25 = sub nsw i32 %23, %24
  %26 = load i32, i32* %9, align 4
  %27 = load i32, i32* %10, align 8
  %28 = sub i32 %27, %26
  %29 = add i32 %28, %23
  %30 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %21, i64 %18, i32 1, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp slt i32 %31, %29
  %33 = select i1 %32, i32 %29, i32 %31
  %34 = icmp slt i32 %25, %33
  %35 = select i1 %34, i32 %25, i32 %33
  %36 = zext i32 %35 to i64
  %37 = icmp sgt i32 %35, 0
  %38 = icmp sgt i32 %26, 0
  %39 = and i1 %38, %37
  %40 = sub nuw nsw i32 2147483647, %35
  %41 = icmp ult i32 %40, %26
  %42 = and i1 %41, %39
  %43 = select i1 %42, i32 %40, i32 %26
  %44 = load i32, i32* %11, align 4
  %45 = icmp sgt i32 %44, 0
  %46 = icmp sgt i32 %43, 0
  %47 = select i1 %46, i32 %43, i32 0
  %48 = select i1 %45, i32 %44, i32 0
  %49 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %21, i64 %18, i32 1
  %50 = bitcast %"class.gfx::Rect"* %49 to i64*
  store i64 %36, i64* %50, align 8
  %51 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %21, i64 %18, i32 1, i32 1, i32 0
  store i32 %47, i32* %51, align 8
  %52 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %21, i64 %18, i32 1, i32 1, i32 1
  store i32 %48, i32* %52, align 4
  %53 = load i32, i32* %3, align 4
  %54 = sext i32 %53 to i64
  %55 = icmp sgt i64 %18, %54
  br i1 %55, label %16, label %13

56:                                               ; preds = %13
  %57 = icmp sgt i32 %14, 1
  br i1 %57, label %58, label %68

58:                                               ; preds = %56
  %59 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %60 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %59, align 8
  %61 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %61, align 8
  %63 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %62, i64 1, i32 1, i32 0, i32 0
  %64 = load i32, i32* %63, align 4
  %65 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %62, i64 0, i32 1, i32 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = sub nsw i32 %64, %66
  br label %70

68:                                               ; preds = %56
  %69 = icmp eq i32 %14, 1
  br i1 %69, label %70, label %108

70:                                               ; preds = %58, %68
  %71 = phi i32 [ %67, %58 ], [ 0, %68 ]
  %72 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %73 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 9
  %74 = sext i32 %14 to i64
  br label %75

75:                                               ; preds = %106, %70
  %76 = phi i32 [ %14, %70 ], [ %107, %106 ]
  %77 = phi i64 [ %74, %70 ], [ %78, %106 ]
  %78 = add nsw i64 %77, -1
  %79 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %72, align 8
  %80 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %79, i64 0, i32 0, i32 0, i32 0
  %81 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %80, align 8
  %82 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %81, i64 %78, i32 1, i32 0, i32 0
  %83 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %81, i64 %78, i32 1, i32 1, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = zext i32 %76 to i64
  %86 = icmp eq i64 %77, %85
  %87 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %81, i64 %77, i32 1, i32 0, i32 0
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %92

89:                                               ; preds = %75
  %90 = load i32, i32* %73, align 8
  %91 = sub nsw i32 %88, %90
  br label %94

92:                                               ; preds = %75
  %93 = sub nsw i32 %88, %71
  br label %94

94:                                               ; preds = %92, %89
  %95 = phi i32 [ %93, %92 ], [ %91, %89 ]
  %96 = icmp sgt i32 %95, 0
  %97 = icmp sgt i32 %84, 0
  %98 = and i1 %97, %96
  %99 = sub nuw nsw i32 2147483647, %95
  %100 = icmp ult i32 %99, %84
  %101 = and i1 %100, %98
  %102 = select i1 %101, i32 %99, i32 %84
  %103 = icmp sgt i32 %102, 0
  %104 = select i1 %103, i32 %102, i32 0
  store i32 %95, i32* %82, align 8
  store i32 %104, i32* %83, align 8
  %105 = icmp sgt i64 %78, 0
  br i1 %105, label %106, label %108

106:                                              ; preds = %94
  %107 = load i32, i32* %3, align 4
  br label %75

108:                                              ; preds = %94, %68, %13
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout14PushTabsBeforeEii(%class.StackedTabStripLayout* nocapture readonly, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = add i32 %1, -1
  %5 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %6 = load i32, i32* %5, align 4
  %7 = icmp sgt i32 %4, %6
  br i1 %7, label %8, label %16

8:                                                ; preds = %3
  %9 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %10 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 6
  %11 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %12 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %13 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %15 = sext i32 %4 to i64
  br label %17

16:                                               ; preds = %17, %3
  ret void

17:                                               ; preds = %8, %17
  %18 = phi i64 [ %15, %8 ], [ %55, %17 ]
  %19 = phi i32 [ %6, %8 ], [ %56, %17 ]
  %20 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %9, align 8
  %21 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %20, i64 0, i32 0, i32 0, i32 0
  %22 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %21, align 8
  %23 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %22, i64 %18, i32 1, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = sub nsw i32 %24, %2
  %26 = load i32, i32* %10, align 4
  %27 = trunc i64 %18 to i32
  %28 = sub nsw i32 %27, %19
  %29 = load i32, i32* %11, align 4
  %30 = icmp slt i32 %29, %28
  %31 = select i1 %30, i32 %29, i32 %28
  %32 = load i32, i32* %12, align 4
  %33 = mul nsw i32 %31, %32
  %34 = add nsw i32 %33, %26
  %35 = icmp slt i32 %25, %34
  %36 = select i1 %35, i32 %34, i32 %25
  %37 = zext i32 %36 to i64
  %38 = load i32, i32* %13, align 4
  %39 = icmp sgt i32 %36, 0
  %40 = icmp sgt i32 %38, 0
  %41 = and i1 %40, %39
  %42 = sub nuw nsw i32 2147483647, %36
  %43 = icmp ult i32 %42, %38
  %44 = and i1 %43, %41
  %45 = select i1 %44, i32 %42, i32 %38
  %46 = load i32, i32* %14, align 4
  %47 = icmp sgt i32 %46, 0
  %48 = icmp sgt i32 %45, 0
  %49 = select i1 %48, i32 %45, i32 0
  %50 = select i1 %47, i32 %46, i32 0
  %51 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %22, i64 %18, i32 1
  %52 = bitcast %"class.gfx::Rect"* %51 to i64*
  store i64 %37, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %22, i64 %18, i32 1, i32 1, i32 0
  store i32 %49, i32* %53, align 8
  %54 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %22, i64 %18, i32 1, i32 1, i32 1
  store i32 %50, i32* %54, align 4
  %55 = add nsw i64 %18, -1
  %56 = load i32, i32* %5, align 4
  %57 = sext i32 %56 to i64
  %58 = icmp sgt i64 %55, %57
  br i1 %58, label %17, label %16
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout18LayoutForDragAfterEi(%class.StackedTabStripLayout* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = add i32 %1, 1
  %4 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %5 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %4, align 8
  %6 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %5, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.views::ViewModelBase::Entry"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.views::ViewModelBase"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = sdiv exact i64 %11, 24
  %13 = trunc i64 %12 to i32
  %14 = icmp slt i32 %3, %13
  br i1 %14, label %15, label %21

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %17 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %18 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %19 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %20 = sext i32 %3 to i64
  br label %22

21:                                               ; preds = %22, %2
  ret void

22:                                               ; preds = %15, %22
  %23 = phi i64 [ %20, %15 ], [ %60, %22 ]
  %24 = phi %"class.views::ViewModelBase"* [ %5, %15 ], [ %61, %22 ]
  %25 = phi i32 [ %1, %15 ], [ %72, %22 ]
  %26 = sext i32 %25 to i64
  %27 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %24, i64 0, i32 0, i32 0, i32 0
  %28 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %27, align 8
  %29 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %28, i64 %26, i32 1, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = load i32, i32* %16, align 4
  %32 = add nsw i32 %31, %30
  %33 = load i32, i32* %17, align 4
  %34 = load i32, i32* %18, align 8
  %35 = sub nsw i32 %33, %34
  %36 = add nsw i32 %35, %30
  %37 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %28, i64 %23, i32 1, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %38, %32
  %40 = select i1 %39, i32 %32, i32 %38
  %41 = icmp slt i32 %36, %40
  %42 = select i1 %41, i32 %36, i32 %40
  %43 = zext i32 %42 to i64
  %44 = icmp sgt i32 %42, 0
  %45 = icmp sgt i32 %33, 0
  %46 = and i1 %45, %44
  %47 = sub nuw nsw i32 2147483647, %42
  %48 = icmp ult i32 %47, %33
  %49 = and i1 %48, %46
  %50 = select i1 %49, i32 %47, i32 %33
  %51 = load i32, i32* %19, align 4
  %52 = icmp sgt i32 %51, 0
  %53 = icmp sgt i32 %50, 0
  %54 = select i1 %53, i32 %50, i32 0
  %55 = select i1 %52, i32 %51, i32 0
  %56 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %28, i64 %23, i32 1
  %57 = bitcast %"class.gfx::Rect"* %56 to i64*
  store i64 %43, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %28, i64 %23, i32 1, i32 1, i32 0
  store i32 %54, i32* %58, align 8
  %59 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %28, i64 %23, i32 1, i32 1, i32 1
  store i32 %55, i32* %59, align 4
  %60 = add nsw i64 %23, 1
  %61 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %4, align 8
  %62 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %61, i64 0, i32 0, i32 0, i32 1
  %63 = bitcast %"struct.views::ViewModelBase::Entry"** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.views::ViewModelBase"* %61 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = sub i64 %64, %66
  %68 = sdiv exact i64 %67, 24
  %69 = shl i64 %68, 32
  %70 = ashr exact i64 %69, 32
  %71 = icmp slt i64 %60, %70
  %72 = trunc i64 %23 to i32
  br i1 %71, label %22, label %21
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout16ExpandTabsBeforeEii(%class.StackedTabStripLayout* nocapture readonly, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %5, %1
  %7 = icmp sgt i32 %2, 0
  %8 = and i1 %7, %6
  br i1 %8, label %9, label %17

9:                                                ; preds = %3
  %10 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 10
  %11 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %12 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %13 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %14 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %15 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %16 = sext i32 %1 to i64
  br label %18

17:                                               ; preds = %68, %3
  ret void

18:                                               ; preds = %9, %68
  %19 = phi i32 [ %5, %9 ], [ %69, %68 ]
  %20 = phi i64 [ %16, %9 ], [ %22, %68 ]
  %21 = phi i32 [ %2, %9 ], [ %70, %68 ]
  %22 = add nsw i64 %20, -1
  %23 = load i32, i32* %10, align 4
  %24 = icmp slt i32 %23, %19
  %25 = select i1 %24, i32 %19, i32 %23
  %26 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %11, align 8
  %27 = sext i32 %25 to i64
  %28 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %26, i64 0, i32 0, i32 0, i32 0
  %29 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %28, align 8
  %30 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %29, i64 %27, i32 1, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = trunc i64 %22 to i32
  %33 = sub nsw i32 %25, %32
  %34 = load i32, i32* %12, align 4
  %35 = icmp slt i32 %34, %33
  %36 = select i1 %35, i32 %34, i32 %33
  %37 = load i32, i32* %13, align 4
  %38 = mul nsw i32 %36, %37
  %39 = sub nsw i32 %31, %38
  %40 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %29, i64 %22, i32 1, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = sub i32 %39, %41
  %43 = icmp slt i32 %42, %21
  %44 = select i1 %43, i32 %42, i32 %21
  %45 = icmp slt i32 %44, 1
  br i1 %45, label %68, label %46

46:                                               ; preds = %18
  %47 = add nsw i32 %44, %41
  %48 = zext i32 %47 to i64
  %49 = load i32, i32* %14, align 4
  %50 = icmp sgt i32 %47, 0
  %51 = icmp sgt i32 %49, 0
  %52 = and i1 %50, %51
  %53 = sub nuw nsw i32 2147483647, %47
  %54 = icmp ult i32 %53, %49
  %55 = and i1 %54, %52
  %56 = select i1 %55, i32 %53, i32 %49
  %57 = load i32, i32* %15, align 4
  %58 = icmp sgt i32 %57, 0
  %59 = icmp sgt i32 %56, 0
  %60 = select i1 %59, i32 %56, i32 0
  %61 = select i1 %58, i32 %57, i32 0
  %62 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %29, i64 %22, i32 1
  %63 = bitcast %"class.gfx::Rect"* %62 to i64*
  store i64 %48, i64* %63, align 8
  %64 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %29, i64 %22, i32 1, i32 1, i32 0
  store i32 %60, i32* %64, align 8
  %65 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %29, i64 %22, i32 1, i32 1, i32 1
  store i32 %61, i32* %65, align 4
  %66 = sub nsw i32 %21, %44
  tail call void @_ZN21StackedTabStripLayout19LayoutForDragBeforeEi(%class.StackedTabStripLayout* %0, i32 %32)
  %67 = load i32, i32* %4, align 4
  br label %68

68:                                               ; preds = %18, %46
  %69 = phi i32 [ %19, %18 ], [ %67, %46 ]
  %70 = phi i32 [ %21, %18 ], [ %66, %46 ]
  %71 = sext i32 %69 to i64
  %72 = icmp sgt i64 %22, %71
  %73 = icmp sgt i32 %70, 0
  %74 = and i1 %73, %72
  br i1 %74, label %18, label %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout15ExpandTabsAfterEii(%class.StackedTabStripLayout* nocapture readonly, i32, i32) local_unnamed_addr #2 align 2 {
  %4 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %5 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %4, align 8
  %6 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %5, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.views::ViewModelBase::Entry"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.views::ViewModelBase"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = sdiv exact i64 %11, 24
  %13 = trunc i64 %12 to i32
  %14 = add nsw i32 %13, -1
  %15 = icmp eq i32 %14, %1
  br i1 %15, label %94, label %16

16:                                               ; preds = %3
  %17 = add i32 %1, 1
  %18 = icmp slt i32 %17, %13
  %19 = icmp sgt i32 %2, 0
  %20 = and i1 %19, %18
  br i1 %20, label %21, label %94

21:                                               ; preds = %16
  %22 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 10
  %23 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %24 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %25 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %26 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %27 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %28 = sext i32 %17 to i64
  br label %29

29:                                               ; preds = %21, %78
  %30 = phi %"class.views::ViewModelBase"* [ %5, %21 ], [ %79, %78 ]
  %31 = phi i64 [ %28, %21 ], [ %81, %78 ]
  %32 = phi i32 [ %2, %21 ], [ %80, %78 ]
  %33 = load i32, i32* %22, align 4
  %34 = load i32, i32* %23, align 4
  %35 = icmp slt i32 %33, %34
  %36 = select i1 %35, i32 %34, i32 %33
  %37 = sext i32 %36 to i64
  %38 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %30, i64 0, i32 0, i32 0, i32 0
  %39 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %38, align 8
  %40 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %39, i64 %37, i32 1, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = trunc i64 %31 to i32
  %43 = sub nsw i32 %42, %36
  %44 = load i32, i32* %24, align 4
  %45 = icmp slt i32 %44, %43
  %46 = select i1 %45, i32 %44, i32 %43
  %47 = load i32, i32* %25, align 4
  %48 = mul nsw i32 %46, %47
  %49 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %39, i64 %31, i32 1, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = sub i32 %50, %41
  %52 = sub i32 %51, %48
  %53 = icmp slt i32 %32, %52
  %54 = select i1 %53, i32 %32, i32 %52
  %55 = icmp slt i32 %54, 1
  br i1 %55, label %78, label %56

56:                                               ; preds = %29
  %57 = sub nsw i32 %50, %54
  %58 = zext i32 %57 to i64
  %59 = load i32, i32* %26, align 4
  %60 = icmp sgt i32 %57, 0
  %61 = icmp sgt i32 %59, 0
  %62 = and i1 %60, %61
  %63 = sub nuw nsw i32 2147483647, %57
  %64 = icmp ult i32 %63, %59
  %65 = and i1 %64, %62
  %66 = select i1 %65, i32 %63, i32 %59
  %67 = load i32, i32* %27, align 4
  %68 = icmp sgt i32 %67, 0
  %69 = icmp sgt i32 %66, 0
  %70 = select i1 %69, i32 %66, i32 0
  %71 = select i1 %68, i32 %67, i32 0
  %72 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %39, i64 %31, i32 1
  %73 = bitcast %"class.gfx::Rect"* %72 to i64*
  store i64 %58, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %39, i64 %31, i32 1, i32 1, i32 0
  store i32 %70, i32* %74, align 8
  %75 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %39, i64 %31, i32 1, i32 1, i32 1
  store i32 %71, i32* %75, align 4
  %76 = sub nsw i32 %32, %54
  tail call void @_ZN21StackedTabStripLayout18LayoutForDragAfterEi(%class.StackedTabStripLayout* %0, i32 %42)
  %77 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %4, align 8
  br label %78

78:                                               ; preds = %29, %56
  %79 = phi %"class.views::ViewModelBase"* [ %30, %29 ], [ %77, %56 ]
  %80 = phi i32 [ %32, %29 ], [ %76, %56 ]
  %81 = add nsw i64 %31, 1
  %82 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %79, i64 0, i32 0, i32 0, i32 1
  %83 = bitcast %"struct.views::ViewModelBase::Entry"** %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.views::ViewModelBase"* %79 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %84, %86
  %88 = sdiv exact i64 %87, 24
  %89 = shl i64 %88, 32
  %90 = ashr exact i64 %89, 32
  %91 = icmp slt i64 %81, %90
  %92 = icmp sgt i32 %80, 0
  %93 = and i1 %92, %91
  br i1 %93, label %29, label %94

94:                                               ; preds = %78, %16, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout9SizeToFitEv(%class.StackedTabStripLayout* readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %3 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %2, align 8
  %4 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %3, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.views::ViewModelBase::Entry"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.views::ViewModelBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 24
  %11 = trunc i64 %10 to i32
  %12 = icmp eq i32 %11, 0
  %13 = inttoptr i64 %8 to %"struct.views::ViewModelBase::Entry"*
  br i1 %12, label %287, label %14

14:                                               ; preds = %1
  %15 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, %11
  br i1 %17, label %36, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 6
  %20 = load i32, i32* %19, align 4
  %21 = sub nsw i32 %11, %16
  %22 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = mul nsw i32 %23, %21
  %25 = icmp sgt i32 %21, 1
  %26 = select i1 %25, i32 %21, i32 1
  %27 = add nsw i32 %26, -1
  %28 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %29 = load i32, i32* %28, align 8
  %30 = mul nsw i32 %29, %27
  %31 = add i32 %24, %20
  %32 = sub i32 %31, %30
  %33 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 7
  %34 = load i32, i32* %33, align 8
  %35 = icmp sgt i32 %32, %34
  br i1 %35, label %37, label %36

36:                                               ; preds = %14, %18
  tail call void @_ZN21StackedTabStripLayout17ResetToIdealStateEv(%class.StackedTabStripLayout* %0)
  br label %287

37:                                               ; preds = %18
  %38 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %13, i64 0, i32 1, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 5
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %39, %41
  br i1 %42, label %160, label %43

43:                                               ; preds = %37
  %44 = sub nsw i32 %39, %41
  %45 = icmp sgt i32 %16, 0
  br i1 %45, label %54, label %48

46:                                               ; preds = %54
  %47 = and i64 %71, 4294967295
  br label %48

48:                                               ; preds = %46, %43
  %49 = phi i32 [ %16, %43 ], [ %72, %46 ]
  %50 = phi i64 [ 0, %43 ], [ %47, %46 ]
  %51 = icmp sgt i32 %44, 0
  br i1 %51, label %52, label %130

52:                                               ; preds = %48
  %53 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  br label %81

54:                                               ; preds = %43, %75
  %55 = phi i32 [ %80, %75 ], [ %39, %43 ]
  %56 = phi %"struct.views::ViewModelBase::Entry"* [ %78, %75 ], [ %13, %43 ]
  %57 = phi i64 [ %71, %75 ], [ 0, %43 ]
  %58 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %56, i64 %57, i32 1, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %56, i64 %57, i32 1, i32 1, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = sub nsw i32 %55, %44
  %62 = icmp sgt i32 %61, 0
  %63 = icmp sgt i32 %60, 0
  %64 = and i1 %63, %62
  %65 = sub nuw nsw i32 2147483647, %61
  %66 = icmp ult i32 %65, %60
  %67 = and i1 %66, %64
  %68 = select i1 %67, i32 %65, i32 %60
  %69 = icmp sgt i32 %68, 0
  %70 = select i1 %69, i32 %68, i32 0
  store i32 %61, i32* %58, align 8
  store i32 %70, i32* %59, align 8
  %71 = add nuw nsw i64 %57, 1
  %72 = load i32, i32* %15, align 4
  %73 = sext i32 %72 to i64
  %74 = icmp slt i64 %71, %73
  br i1 %74, label %75, label %46

75:                                               ; preds = %54
  %76 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %2, align 8
  %77 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %77, align 8
  %79 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %78, i64 %71, i32 1, i32 0, i32 0
  %80 = load i32, i32* %79, align 4
  br label %54

81:                                               ; preds = %52, %97
  %82 = phi i64 [ %50, %52 ], [ %100, %97 ]
  %83 = phi i32 [ %44, %52 ], [ %126, %97 ]
  %84 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %2, align 8
  %85 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %84, i64 0, i32 0, i32 0, i32 1
  %86 = bitcast %"struct.views::ViewModelBase::Entry"** %85 to i64*
  %87 = load i64, i64* %86, align 8
  %88 = bitcast %"class.views::ViewModelBase"* %84 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = sub i64 %87, %89
  %91 = sdiv exact i64 %90, 24
  %92 = shl i64 %91, 32
  %93 = add i64 %92, -4294967296
  %94 = ashr exact i64 %93, 32
  %95 = icmp slt i64 %82, %94
  %96 = inttoptr i64 %89 to %"struct.views::ViewModelBase::Entry"*
  br i1 %95, label %97, label %128

97:                                               ; preds = %81
  %98 = load i32, i32* %22, align 4
  %99 = load i32, i32* %28, align 8
  %100 = add nuw nsw i64 %82, 1
  %101 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %96, i64 %100, i32 1, i32 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %96, i64 %82, i32 1, i32 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = sub nsw i32 %104, %83
  %106 = zext i32 %105 to i64
  %107 = icmp sgt i32 %105, 0
  %108 = icmp sgt i32 %98, 0
  %109 = and i1 %108, %107
  %110 = sub nuw nsw i32 2147483647, %105
  %111 = icmp ult i32 %110, %98
  %112 = and i1 %111, %109
  %113 = select i1 %112, i32 %110, i32 %98
  %114 = load i32, i32* %53, align 4
  %115 = icmp sgt i32 %114, 0
  %116 = icmp sgt i32 %113, 0
  %117 = select i1 %116, i32 %113, i32 0
  %118 = select i1 %115, i32 %114, i32 0
  %119 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %96, i64 %82, i32 1
  %120 = bitcast %"class.gfx::Rect"* %119 to i64*
  store i64 %106, i64* %120, align 8
  %121 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %96, i64 %82, i32 1, i32 1, i32 0
  store i32 %117, i32* %121, align 8
  %122 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %96, i64 %82, i32 1, i32 1, i32 1
  store i32 %118, i32* %122, align 4
  %123 = sub i32 %83, %98
  %124 = add i32 %123, %99
  %125 = add i32 %124, %102
  %126 = sub i32 %125, %104
  %127 = icmp sgt i32 %126, 0
  br i1 %127, label %81, label %128

128:                                              ; preds = %97, %81
  %129 = load i32, i32* %15, align 4
  br label %130

130:                                              ; preds = %128, %48
  %131 = phi i32 [ %129, %128 ], [ %49, %48 ]
  %132 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %2, align 8
  %133 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %132, i64 0, i32 0, i32 0, i32 1
  %134 = bitcast %"struct.views::ViewModelBase::Entry"** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = bitcast %"class.views::ViewModelBase"* %132 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = sub i64 %135, %137
  %139 = sdiv exact i64 %138, 24
  %140 = trunc i64 %139 to i32
  %141 = icmp eq i32 %131, %140
  br i1 %141, label %287, label %142

142:                                              ; preds = %130
  %143 = load i32, i32* %19, align 4
  %144 = sub nsw i32 %140, %131
  %145 = load i32, i32* %22, align 4
  %146 = mul nsw i32 %145, %144
  %147 = icmp sgt i32 %144, 1
  %148 = select i1 %147, i32 %144, i32 1
  %149 = add nsw i32 %148, -1
  %150 = load i32, i32* %28, align 8
  %151 = mul nsw i32 %150, %149
  %152 = add i32 %146, %143
  %153 = sub i32 %152, %151
  %154 = load i32, i32* %33, align 8
  %155 = icmp sgt i32 %153, %154
  %156 = add nsw i32 %131, 1
  %157 = icmp slt i32 %156, %140
  %158 = and i1 %157, %155
  br i1 %158, label %159, label %287

159:                                              ; preds = %142
  tail call void @_ZN21StackedTabStripLayout24AdjustLeadingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  tail call void @_ZN21StackedTabStripLayout25AdjustTrailingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  br label %287

160:                                              ; preds = %37
  %161 = sub nsw i32 %34, %23
  %162 = shl i64 %10, 32
  %163 = add i64 %162, -4294967296
  %164 = ashr exact i64 %163, 32
  %165 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %13, i64 %164, i32 1, i32 0, i32 0
  %166 = load i32, i32* %165, align 4
  %167 = icmp eq i32 %166, %161
  br i1 %167, label %287, label %168

168:                                              ; preds = %160
  %169 = zext i32 %161 to i64
  %170 = icmp sgt i32 %161, 0
  %171 = icmp sgt i32 %23, 0
  %172 = and i1 %170, %171
  %173 = sub nuw nsw i32 2147483647, %161
  %174 = icmp ult i32 %173, %23
  %175 = and i1 %174, %172
  %176 = select i1 %175, i32 %173, i32 %23
  %177 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %178 = load i32, i32* %177, align 4
  %179 = icmp sgt i32 %178, 0
  %180 = icmp sgt i32 %176, 0
  %181 = select i1 %180, i32 %176, i32 0
  %182 = select i1 %179, i32 %178, i32 0
  %183 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %13, i64 %164, i32 1
  %184 = bitcast %"class.gfx::Rect"* %183 to i64*
  store i64 %169, i64* %184, align 8
  %185 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %13, i64 %164, i32 1, i32 1, i32 0
  store i32 %181, i32* %185, align 8
  %186 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %13, i64 %164, i32 1, i32 1, i32 1
  store i32 %182, i32* %186, align 4
  %187 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %2, align 8
  %188 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %187, i64 0, i32 0, i32 0, i32 1
  %189 = bitcast %"struct.views::ViewModelBase::Entry"** %188 to i64*
  %190 = load i64, i64* %189, align 8
  %191 = bitcast %"class.views::ViewModelBase"* %187 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = sub i64 %190, %192
  %194 = sdiv exact i64 %193, 24
  %195 = trunc i64 %194 to i32
  %196 = add i32 %195, -2
  %197 = load i32, i32* %15, align 4
  %198 = icmp sgt i32 %196, %197
  br i1 %198, label %199, label %224

199:                                              ; preds = %168
  %200 = sext i32 %196 to i64
  %201 = add nsw i64 %200, 1
  %202 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %187, i64 0, i32 0, i32 0, i32 0
  %203 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %202, align 8
  %204 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %203, i64 %201, i32 1, i32 0, i32 0
  %205 = load i32, i32* %204, align 4
  %206 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %203, i64 %200, i32 1, i32 0, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = sub nsw i32 %205, %207
  %209 = load i32, i32* %22, align 4
  %210 = load i32, i32* %28, align 8
  %211 = sub nsw i32 %209, %210
  %212 = icmp sgt i32 %208, %211
  br i1 %212, label %246, label %213

213:                                              ; preds = %246, %275, %199
  %214 = phi %"class.views::ViewModelBase"* [ %187, %199 ], [ %274, %275 ], [ %274, %246 ]
  %215 = phi i32 [ %197, %199 ], [ %271, %275 ], [ %271, %246 ]
  %216 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %214, i64 0, i32 0, i32 0, i32 1
  %217 = bitcast %"struct.views::ViewModelBase::Entry"** %216 to i64*
  %218 = load i64, i64* %217, align 8
  %219 = bitcast %"class.views::ViewModelBase"* %214 to i64*
  %220 = load i64, i64* %219, align 8
  %221 = sub i64 %218, %220
  %222 = sdiv exact i64 %221, 24
  %223 = trunc i64 %222 to i32
  br label %224

224:                                              ; preds = %213, %168
  %225 = phi i32 [ %223, %213 ], [ %195, %168 ]
  %226 = phi i32 [ %215, %213 ], [ %197, %168 ]
  %227 = icmp eq i32 %225, %226
  br i1 %227, label %287, label %228

228:                                              ; preds = %224
  %229 = load i32, i32* %19, align 4
  %230 = sub nsw i32 %225, %226
  %231 = load i32, i32* %22, align 4
  %232 = mul nsw i32 %231, %230
  %233 = icmp sgt i32 %230, 1
  %234 = select i1 %233, i32 %230, i32 1
  %235 = add nsw i32 %234, -1
  %236 = load i32, i32* %28, align 8
  %237 = mul nsw i32 %236, %235
  %238 = add i32 %232, %229
  %239 = sub i32 %238, %237
  %240 = load i32, i32* %33, align 8
  %241 = icmp sgt i32 %239, %240
  %242 = add nsw i32 %226, 1
  %243 = icmp slt i32 %242, %225
  %244 = and i1 %243, %241
  br i1 %244, label %245, label %287

245:                                              ; preds = %228
  tail call void @_ZN21StackedTabStripLayout24AdjustLeadingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  tail call void @_ZN21StackedTabStripLayout25AdjustTrailingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  br label %287

246:                                              ; preds = %199, %275
  %247 = phi i32 [ %285, %275 ], [ %211, %199 ]
  %248 = phi i32 [ %283, %275 ], [ %209, %199 ]
  %249 = phi i32 [ %279, %275 ], [ %205, %199 ]
  %250 = phi %"struct.views::ViewModelBase::Entry"* [ %277, %275 ], [ %203, %199 ]
  %251 = phi i64 [ %270, %275 ], [ %200, %199 ]
  %252 = sub nsw i32 %249, %247
  %253 = zext i32 %252 to i64
  %254 = icmp sgt i32 %252, 0
  %255 = icmp sgt i32 %248, 0
  %256 = and i1 %255, %254
  %257 = sub nuw nsw i32 2147483647, %252
  %258 = icmp ult i32 %257, %248
  %259 = and i1 %258, %256
  %260 = select i1 %259, i32 %257, i32 %248
  %261 = load i32, i32* %177, align 4
  %262 = icmp sgt i32 %261, 0
  %263 = icmp sgt i32 %260, 0
  %264 = select i1 %263, i32 %260, i32 0
  %265 = select i1 %262, i32 %261, i32 0
  %266 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %250, i64 %251, i32 1
  %267 = bitcast %"class.gfx::Rect"* %266 to i64*
  store i64 %253, i64* %267, align 8
  %268 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %250, i64 %251, i32 1, i32 1, i32 0
  store i32 %264, i32* %268, align 8
  %269 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %250, i64 %251, i32 1, i32 1, i32 1
  store i32 %265, i32* %269, align 4
  %270 = add i64 %251, -1
  %271 = load i32, i32* %15, align 4
  %272 = sext i32 %271 to i64
  %273 = icmp sgt i64 %270, %272
  %274 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %2, align 8
  br i1 %273, label %275, label %213

275:                                              ; preds = %246
  %276 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %274, i64 0, i32 0, i32 0, i32 0
  %277 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %276, align 8
  %278 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %277, i64 %251, i32 1, i32 0, i32 0
  %279 = load i32, i32* %278, align 4
  %280 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %277, i64 %270, i32 1, i32 0, i32 0
  %281 = load i32, i32* %280, align 4
  %282 = sub nsw i32 %279, %281
  %283 = load i32, i32* %22, align 4
  %284 = load i32, i32* %28, align 8
  %285 = sub nsw i32 %283, %284
  %286 = icmp sgt i32 %282, %285
  br i1 %286, label %246, label %213

287:                                              ; preds = %245, %228, %224, %159, %142, %130, %160, %1, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout6AddTabEiii(%class.StackedTabStripLayout*, i32, i32, i32) local_unnamed_addr #2 align 2 {
  %5 = and i32 %2, 2
  %6 = icmp ne i32 %5, 0
  %7 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 10
  br i1 %6, label %13, label %8

8:                                                ; preds = %4
  %9 = load i32, i32* %7, align 4
  %10 = icmp slt i32 %9, %1
  br i1 %10, label %15, label %11

11:                                               ; preds = %8
  %12 = add nsw i32 %9, 1
  br label %13

13:                                               ; preds = %4, %11
  %14 = phi i32 [ %12, %11 ], [ %1, %4 ]
  store i32 %14, i32* %7, align 4
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i32 [ %9, %8 ], [ %14, %13 ]
  %17 = and i32 %2, 1
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %23, label %21

21:                                               ; preds = %15
  %22 = add nsw i32 %20, 1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %15, %21
  %24 = phi i32 [ %22, %21 ], [ %20, %15 ]
  %25 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 6
  store i32 %3, i32* %25, align 4
  %26 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %27 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %26, align 8
  %28 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %27, i64 0, i32 0, i32 0, i32 1
  %29 = bitcast %"struct.views::ViewModelBase::Entry"** %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = bitcast %"class.views::ViewModelBase"* %27 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = sub i64 %30, %32
  %34 = sdiv exact i64 %33, 24
  %35 = trunc i64 %34 to i32
  %36 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %37 = icmp eq i32 %24, %35
  %38 = inttoptr i64 %32 to %"struct.views::ViewModelBase::Entry"*
  br i1 %37, label %57, label %39

39:                                               ; preds = %23
  %40 = sub nsw i32 %35, %24
  %41 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = mul nsw i32 %42, %40
  %44 = icmp sgt i32 %40, 1
  %45 = select i1 %44, i32 %40, i32 1
  %46 = add nsw i32 %45, -1
  %47 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = mul nsw i32 %48, %46
  %50 = add i32 %43, %3
  %51 = sub i32 %50, %49
  %52 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 7
  %53 = load i32, i32* %52, align 8
  %54 = icmp sle i32 %51, %53
  %55 = icmp slt i32 %40, 2
  %56 = or i1 %55, %54
  br i1 %56, label %57, label %58

57:                                               ; preds = %39, %23
  tail call void @_ZN21StackedTabStripLayout17ResetToIdealStateEv(%class.StackedTabStripLayout* %0)
  br label %222

58:                                               ; preds = %39
  %59 = icmp slt i32 %16, %24
  %60 = select i1 %59, i32 %24, i32 %16
  %61 = sext i32 %60 to i64
  %62 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %38, i64 %61, i32 1, i32 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %6, label %64, label %73

64:                                               ; preds = %58
  %65 = add nsw i32 %1, 1
  %66 = icmp eq i32 %65, %35
  br i1 %66, label %67, label %69

67:                                               ; preds = %64
  %68 = sub nsw i32 %53, %42
  br label %73

69:                                               ; preds = %64
  %70 = sext i32 %65 to i64
  %71 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %38, i64 %70, i32 1, i32 0, i32 0
  %72 = load i32, i32* %71, align 4
  br label %73

73:                                               ; preds = %67, %69, %58
  %74 = phi i32 [ %63, %58 ], [ %68, %67 ], [ %72, %69 ]
  %75 = sub nsw i32 %60, %24
  %76 = sub nsw i32 %35, %60
  %77 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %78 = load i32, i32* %77, align 4
  %79 = icmp slt i32 %78, %75
  %80 = select i1 %79, i32 %78, i32 %75
  %81 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = mul nsw i32 %80, %82
  %84 = add nsw i32 %83, %3
  %85 = mul nsw i32 %42, %76
  %86 = icmp sgt i32 %76, 1
  %87 = select i1 %86, i32 %76, i32 1
  %88 = add nsw i32 %87, -1
  %89 = mul nsw i32 %48, %88
  %90 = sub i32 %89, %85
  %91 = add i32 %90, %53
  %92 = icmp slt i32 %84, %91
  %93 = select i1 %92, i32 %91, i32 %84
  %94 = xor i32 %60, -1
  %95 = add i32 %94, %35
  %96 = icmp slt i32 %78, %95
  %97 = select i1 %96, i32 %78, i32 %95
  %98 = mul nsw i32 %97, %82
  %99 = mul nsw i32 %42, %75
  %100 = icmp sgt i32 %75, 1
  %101 = select i1 %100, i32 %75, i32 1
  %102 = add nsw i32 %101, -1
  %103 = mul nsw i32 %48, %102
  %104 = icmp slt i32 %24, %16
  %105 = sub i32 0, %48
  %106 = select i1 %104, i32 %105, i32 0
  %107 = add i32 %99, %3
  %108 = add i32 %107, %106
  %109 = sub i32 %108, %103
  %110 = sub nsw i32 %53, %98
  %111 = sub i32 %110, %42
  %112 = icmp slt i32 %109, %111
  %113 = select i1 %112, i32 %109, i32 %111
  %114 = icmp sgt i32 %93, %74
  %115 = select i1 %114, i32 %93, i32 %74
  %116 = icmp slt i32 %113, %115
  %117 = select i1 %116, i32 %113, i32 %115
  %118 = zext i32 %117 to i64
  %119 = icmp sgt i32 %117, 0
  %120 = icmp sgt i32 %42, 0
  %121 = and i1 %120, %119
  %122 = sub nuw nsw i32 2147483647, %117
  %123 = icmp ult i32 %122, %42
  %124 = and i1 %123, %121
  %125 = select i1 %124, i32 %122, i32 %42
  %126 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %127 = load i32, i32* %126, align 4
  %128 = icmp sgt i32 %127, 0
  %129 = icmp sgt i32 %125, 0
  %130 = select i1 %129, i32 %125, i32 0
  %131 = select i1 %128, i32 %127, i32 0
  %132 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %38, i64 %61, i32 1
  %133 = bitcast %"class.gfx::Rect"* %132 to i64*
  store i64 %118, i64* %133, align 8
  %134 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %38, i64 %61, i32 1, i32 1, i32 0
  store i32 %130, i32* %134, align 8
  %135 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %38, i64 %61, i32 1, i32 1, i32 1
  store i32 %131, i32* %135, align 4
  %136 = load i32, i32* %7, align 4
  %137 = load i32, i32* %36, align 4
  %138 = icmp slt i32 %136, %137
  %139 = select i1 %138, i32 %137, i32 %136
  tail call void @_ZN21StackedTabStripLayout22LayoutByTabOffsetAfterEi(%class.StackedTabStripLayout* %0, i32 %139)
  %140 = load i32, i32* %7, align 4
  %141 = load i32, i32* %36, align 4
  %142 = icmp slt i32 %141, %140
  br i1 %142, label %143, label %189

143:                                              ; preds = %73
  %144 = sext i32 %140 to i64
  br label %145

145:                                              ; preds = %145, %143
  %146 = phi i64 [ %144, %143 ], [ %148, %145 ]
  %147 = phi i32 [ %141, %143 ], [ %186, %145 ]
  %148 = add nsw i64 %146, -1
  %149 = load i32, i32* %25, align 4
  %150 = trunc i64 %148 to i32
  %151 = sub nsw i32 %150, %147
  %152 = load i32, i32* %77, align 4
  %153 = icmp slt i32 %152, %151
  %154 = select i1 %153, i32 %152, i32 %151
  %155 = load i32, i32* %81, align 4
  %156 = mul nsw i32 %154, %155
  %157 = add nsw i32 %156, %149
  %158 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %26, align 8
  %159 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %158, i64 0, i32 0, i32 0, i32 0
  %160 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %159, align 8
  %161 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %160, i64 %146, i32 1, i32 0, i32 0
  %162 = load i32, i32* %161, align 4
  %163 = load i32, i32* %41, align 4
  %164 = load i32, i32* %47, align 8
  %165 = sub i32 %164, %163
  %166 = add i32 %165, %162
  %167 = icmp slt i32 %157, %166
  %168 = select i1 %167, i32 %166, i32 %157
  %169 = zext i32 %168 to i64
  %170 = icmp sgt i32 %168, 0
  %171 = icmp sgt i32 %163, 0
  %172 = and i1 %171, %170
  %173 = sub nuw nsw i32 2147483647, %168
  %174 = icmp ult i32 %173, %163
  %175 = and i1 %174, %172
  %176 = select i1 %175, i32 %173, i32 %163
  %177 = load i32, i32* %126, align 4
  %178 = icmp sgt i32 %177, 0
  %179 = icmp sgt i32 %176, 0
  %180 = select i1 %179, i32 %176, i32 0
  %181 = select i1 %178, i32 %177, i32 0
  %182 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %160, i64 %148, i32 1
  %183 = bitcast %"class.gfx::Rect"* %182 to i64*
  store i64 %169, i64* %183, align 8
  %184 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %160, i64 %148, i32 1, i32 1, i32 0
  store i32 %180, i32* %184, align 8
  %185 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %160, i64 %148, i32 1, i32 1, i32 1
  store i32 %181, i32* %185, align 4
  %186 = load i32, i32* %36, align 4
  %187 = sext i32 %186 to i64
  %188 = icmp sgt i64 %148, %187
  br i1 %188, label %145, label %189

189:                                              ; preds = %145, %73
  %190 = phi i32 [ %141, %73 ], [ %186, %145 ]
  %191 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %26, align 8
  %192 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %191, i64 0, i32 0, i32 0, i32 1
  %193 = bitcast %"struct.views::ViewModelBase::Entry"** %192 to i64*
  %194 = load i64, i64* %193, align 8
  %195 = bitcast %"class.views::ViewModelBase"* %191 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = sub i64 %194, %196
  %198 = sdiv exact i64 %197, 24
  %199 = trunc i64 %198 to i32
  %200 = icmp eq i32 %190, %199
  br i1 %200, label %219, label %201

201:                                              ; preds = %189
  %202 = load i32, i32* %25, align 4
  %203 = sub nsw i32 %199, %190
  %204 = load i32, i32* %41, align 4
  %205 = mul nsw i32 %204, %203
  %206 = icmp sgt i32 %203, 1
  %207 = select i1 %206, i32 %203, i32 1
  %208 = add nsw i32 %207, -1
  %209 = load i32, i32* %47, align 8
  %210 = mul nsw i32 %209, %208
  %211 = add i32 %205, %202
  %212 = sub i32 %211, %210
  %213 = load i32, i32* %52, align 8
  %214 = icmp sgt i32 %212, %213
  %215 = add nsw i32 %190, 1
  %216 = icmp slt i32 %215, %199
  %217 = and i1 %216, %214
  br i1 %217, label %218, label %219

218:                                              ; preds = %201
  tail call void @_ZN21StackedTabStripLayout24AdjustLeadingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  tail call void @_ZN21StackedTabStripLayout25AdjustTrailingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  br label %219

219:                                              ; preds = %189, %201, %218
  %220 = icmp eq i32 %5, 0
  br i1 %220, label %221, label %222

221:                                              ; preds = %219
  tail call void @_ZN21StackedTabStripLayout11MakeVisibleEi(%class.StackedTabStripLayout* %0, i32 %1)
  br label %222

222:                                              ; preds = %219, %221, %57
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout11MakeVisibleEi(%class.StackedTabStripLayout* readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 10
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %4, %6
  %8 = select i1 %7, i32 %6, i32 %4
  %9 = icmp slt i32 %8, %1
  br i1 %9, label %10, label %370

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %12 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %11, align 8
  %13 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %12, i64 0, i32 0, i32 0, i32 1
  %14 = bitcast %"struct.views::ViewModelBase::Entry"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.views::ViewModelBase"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = sdiv exact i64 %18, 24
  %20 = trunc i64 %19 to i32
  %21 = icmp eq i32 %6, %20
  %22 = inttoptr i64 %17 to %"struct.views::ViewModelBase::Entry"*
  br i1 %21, label %370, label %23

23:                                               ; preds = %10
  %24 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 6
  %25 = load i32, i32* %24, align 4
  %26 = sub nsw i32 %20, %6
  %27 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = mul nsw i32 %28, %26
  %30 = icmp sgt i32 %26, 1
  %31 = select i1 %30, i32 %26, i32 1
  %32 = add nsw i32 %31, -1
  %33 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = mul nsw i32 %34, %32
  %36 = add i32 %29, %25
  %37 = sub i32 %36, %35
  %38 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 7
  %39 = load i32, i32* %38, align 8
  %40 = icmp sle i32 %37, %39
  %41 = icmp sgt i32 %6, %1
  %42 = or i1 %40, %41
  br i1 %42, label %370, label %43

43:                                               ; preds = %23
  %44 = sext i32 %1 to i64
  %45 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %22, i64 %44, i32 1, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = add nsw i32 %1, -1
  %48 = sext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %22, i64 %48, i32 1, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = add i32 %28, %50
  %52 = sub i32 %51, %34
  %53 = icmp eq i32 %46, %52
  br i1 %53, label %370, label %54

54:                                               ; preds = %43
  %55 = sub nsw i32 %1, %8
  %56 = mul nsw i32 %28, %55
  %57 = icmp sgt i32 %55, 1
  %58 = select i1 %57, i32 %55, i32 1
  %59 = add nsw i32 %58, -1
  %60 = mul nsw i32 %34, %59
  %61 = sub nsw i32 %56, %60
  %62 = sub i32 %61, %34
  %63 = sext i32 %8 to i64
  %64 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %22, i64 %63, i32 1, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = sub nsw i32 %46, %65
  %67 = icmp eq i32 %66, %62
  br i1 %67, label %370, label %68

68:                                               ; preds = %54
  %69 = sub nsw i32 %46, %62
  %70 = sub nsw i32 %8, %6
  %71 = sub nsw i32 %20, %8
  %72 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 4
  %74 = icmp slt i32 %73, %70
  %75 = select i1 %74, i32 %73, i32 %70
  %76 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %77 = load i32, i32* %76, align 4
  %78 = mul nsw i32 %75, %77
  %79 = add nsw i32 %78, %25
  %80 = mul nsw i32 %28, %71
  %81 = icmp sgt i32 %71, 1
  %82 = select i1 %81, i32 %71, i32 1
  %83 = add nsw i32 %82, -1
  %84 = mul nsw i32 %34, %83
  %85 = sub i32 %84, %80
  %86 = add i32 %39, %85
  %87 = icmp slt i32 %79, %86
  %88 = select i1 %87, i32 %86, i32 %79
  %89 = icmp slt i32 %69, %88
  %90 = select i1 %89, i32 %88, i32 %69
  %91 = icmp slt i32 %65, %90
  %92 = select i1 %91, i32 %65, i32 %90
  %93 = zext i32 %92 to i64
  %94 = icmp sgt i32 %92, 0
  %95 = icmp sgt i32 %28, 0
  %96 = and i1 %95, %94
  %97 = sub nuw nsw i32 2147483647, %92
  %98 = icmp ult i32 %97, %28
  %99 = and i1 %98, %96
  %100 = select i1 %99, i32 %97, i32 %28
  %101 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %102 = load i32, i32* %101, align 4
  %103 = icmp sgt i32 %102, 0
  %104 = icmp sgt i32 %100, 0
  %105 = select i1 %104, i32 %100, i32 0
  %106 = select i1 %103, i32 %102, i32 0
  %107 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %22, i64 %63, i32 1
  %108 = bitcast %"class.gfx::Rect"* %107 to i64*
  store i64 %93, i64* %108, align 8
  %109 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %22, i64 %63, i32 1, i32 1, i32 0
  store i32 %105, i32* %109, align 8
  %110 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %22, i64 %63, i32 1, i32 1, i32 1
  store i32 %106, i32* %110, align 4
  %111 = load i32, i32* %3, align 4
  %112 = load i32, i32* %5, align 4
  %113 = icmp slt i32 %112, %111
  br i1 %113, label %114, label %162

114:                                              ; preds = %68
  %115 = sext i32 %111 to i64
  br label %116

116:                                              ; preds = %116, %114
  %117 = phi i64 [ %115, %114 ], [ %119, %116 ]
  %118 = phi i32 [ %112, %114 ], [ %157, %116 ]
  %119 = add nsw i64 %117, -1
  %120 = load i32, i32* %24, align 4
  %121 = trunc i64 %119 to i32
  %122 = sub nsw i32 %121, %118
  %123 = load i32, i32* %72, align 4
  %124 = icmp slt i32 %123, %122
  %125 = select i1 %124, i32 %123, i32 %122
  %126 = load i32, i32* %76, align 4
  %127 = mul nsw i32 %125, %126
  %128 = add nsw i32 %127, %120
  %129 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %11, align 8
  %130 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %129, i64 0, i32 0, i32 0, i32 0
  %131 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %130, align 8
  %132 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %131, i64 %117, i32 1, i32 0, i32 0
  %133 = load i32, i32* %132, align 4
  %134 = load i32, i32* %27, align 4
  %135 = load i32, i32* %33, align 8
  %136 = sub i32 %135, %134
  %137 = add i32 %136, %133
  %138 = icmp slt i32 %128, %137
  %139 = select i1 %138, i32 %137, i32 %128
  %140 = zext i32 %139 to i64
  %141 = icmp sgt i32 %139, 0
  %142 = icmp sgt i32 %134, 0
  %143 = and i1 %142, %141
  %144 = sub nuw nsw i32 2147483647, %139
  %145 = icmp ult i32 %144, %134
  %146 = and i1 %145, %143
  %147 = select i1 %146, i32 %144, i32 %134
  %148 = load i32, i32* %101, align 4
  %149 = icmp sgt i32 %148, 0
  %150 = icmp sgt i32 %147, 0
  %151 = select i1 %150, i32 %147, i32 0
  %152 = select i1 %149, i32 %148, i32 0
  %153 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %131, i64 %119, i32 1
  %154 = bitcast %"class.gfx::Rect"* %153 to i64*
  store i64 %140, i64* %154, align 8
  %155 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %131, i64 %119, i32 1, i32 1, i32 0
  store i32 %151, i32* %155, align 8
  %156 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %131, i64 %119, i32 1, i32 1, i32 1
  store i32 %152, i32* %156, align 4
  %157 = load i32, i32* %5, align 4
  %158 = sext i32 %157 to i64
  %159 = icmp sgt i64 %119, %158
  br i1 %159, label %116, label %160

160:                                              ; preds = %116
  %161 = load i32, i32* %3, align 4
  br label %162

162:                                              ; preds = %160, %68
  %163 = phi i32 [ %157, %160 ], [ %112, %68 ]
  %164 = phi i32 [ %161, %160 ], [ %111, %68 ]
  %165 = icmp slt i32 %164, %163
  %166 = select i1 %165, i32 %163, i32 %164
  tail call void @_ZN21StackedTabStripLayout22LayoutByTabOffsetAfterEi(%class.StackedTabStripLayout* %0, i32 %166)
  %167 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %11, align 8
  %168 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %167, i64 0, i32 0, i32 0, i32 1
  %169 = bitcast %"struct.views::ViewModelBase::Entry"** %168 to i64*
  %170 = load i64, i64* %169, align 8
  %171 = bitcast %"class.views::ViewModelBase"* %167 to i64*
  %172 = load i64, i64* %171, align 8
  %173 = sub i64 %170, %172
  %174 = sdiv exact i64 %173, 24
  %175 = trunc i64 %174 to i32
  %176 = load i32, i32* %5, align 4
  %177 = icmp eq i32 %176, %175
  br i1 %177, label %198, label %178

178:                                              ; preds = %162
  %179 = load i32, i32* %24, align 4
  %180 = sub nsw i32 %175, %176
  %181 = load i32, i32* %27, align 4
  %182 = mul nsw i32 %181, %180
  %183 = icmp sgt i32 %180, 1
  %184 = select i1 %183, i32 %180, i32 1
  %185 = add nsw i32 %184, -1
  %186 = load i32, i32* %33, align 8
  %187 = mul nsw i32 %186, %185
  %188 = add i32 %182, %179
  %189 = sub i32 %188, %187
  %190 = load i32, i32* %38, align 8
  %191 = icmp sgt i32 %189, %190
  %192 = add nsw i32 %176, 1
  %193 = icmp slt i32 %192, %175
  %194 = and i1 %193, %191
  br i1 %194, label %195, label %198

195:                                              ; preds = %178
  tail call void @_ZN21StackedTabStripLayout24AdjustLeadingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  tail call void @_ZN21StackedTabStripLayout25AdjustTrailingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  %196 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %11, align 8
  %197 = load i32, i32* %5, align 4
  br label %198

198:                                              ; preds = %162, %178, %195
  %199 = phi i32 [ %175, %162 ], [ %176, %178 ], [ %197, %195 ]
  %200 = phi %"class.views::ViewModelBase"* [ %167, %162 ], [ %167, %178 ], [ %196, %195 ]
  %201 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %200, i64 0, i32 0, i32 0, i32 0
  %202 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %201, align 8
  %203 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %202, i64 %44, i32 1, i32 0, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = load i32, i32* %3, align 4
  %206 = icmp slt i32 %205, %199
  %207 = select i1 %206, i32 %199, i32 %205
  %208 = sext i32 %207 to i64
  %209 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %202, i64 %208, i32 1, i32 0, i32 0
  %210 = load i32, i32* %209, align 4
  %211 = sub nsw i32 %204, %210
  %212 = icmp eq i32 %211, %62
  br i1 %212, label %370, label %213

213:                                              ; preds = %198
  %214 = ptrtoint %"struct.views::ViewModelBase::Entry"* %202 to i64
  %215 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %200, i64 0, i32 0, i32 0, i32 1
  %216 = bitcast %"struct.views::ViewModelBase::Entry"** %215 to i64*
  %217 = load i64, i64* %216, align 8
  %218 = sub i64 %217, %214
  %219 = sdiv exact i64 %218, 24
  %220 = trunc i64 %219 to i32
  %221 = xor i32 %1, -1
  %222 = add i32 %220, %221
  %223 = load i32, i32* %72, align 4
  %224 = icmp slt i32 %223, %222
  %225 = select i1 %224, i32 %223, i32 %222
  %226 = load i32, i32* %76, align 4
  %227 = mul nsw i32 %225, %226
  %228 = sub nsw i32 %1, %199
  %229 = load i32, i32* %27, align 4
  %230 = mul nsw i32 %229, %228
  %231 = icmp sgt i32 %228, 1
  %232 = select i1 %231, i32 %228, i32 1
  %233 = add nsw i32 %232, -1
  %234 = load i32, i32* %33, align 8
  %235 = mul nsw i32 %234, %233
  %236 = load i32, i32* %24, align 4
  %237 = icmp slt i32 %199, %1
  %238 = sub i32 0, %234
  %239 = select i1 %237, i32 %238, i32 0
  %240 = add i32 %236, %230
  %241 = add i32 %240, %239
  %242 = sub i32 %241, %235
  %243 = load i32, i32* %38, align 8
  %244 = sub nsw i32 %243, %227
  %245 = sub i32 %244, %229
  %246 = icmp slt i32 %242, %245
  %247 = select i1 %246, i32 %242, i32 %245
  %248 = add nsw i32 %92, %62
  %249 = icmp slt i32 %248, %247
  %250 = select i1 %249, i32 %248, i32 %247
  %251 = zext i32 %250 to i64
  %252 = icmp sgt i32 %250, 0
  %253 = icmp sgt i32 %229, 0
  %254 = and i1 %253, %252
  %255 = sub nuw nsw i32 2147483647, %250
  %256 = icmp ult i32 %255, %229
  %257 = and i1 %256, %254
  %258 = select i1 %257, i32 %255, i32 %229
  %259 = load i32, i32* %101, align 4
  %260 = icmp sgt i32 %259, 0
  %261 = icmp sgt i32 %258, 0
  %262 = select i1 %261, i32 %258, i32 0
  %263 = select i1 %260, i32 %259, i32 0
  %264 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %202, i64 %44, i32 1
  %265 = bitcast %"class.gfx::Rect"* %264 to i64*
  store i64 %251, i64* %265, align 8
  %266 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %202, i64 %44, i32 1, i32 1, i32 0
  store i32 %262, i32* %266, align 8
  %267 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %202, i64 %44, i32 1, i32 1, i32 1
  store i32 %263, i32* %267, align 4
  tail call void @_ZN21StackedTabStripLayout22LayoutByTabOffsetAfterEi(%class.StackedTabStripLayout* %0, i32 %1)
  %268 = load i32, i32* %3, align 4
  %269 = load i32, i32* %5, align 4
  %270 = icmp slt i32 %268, %269
  %271 = select i1 %270, i32 %269, i32 %268
  %272 = icmp sgt i32 %47, %271
  br i1 %272, label %304, label %273

273:                                              ; preds = %304, %213
  %274 = phi i32 [ %271, %213 ], [ %367, %304 ]
  tail call void @_ZN21StackedTabStripLayout23LayoutUsingCurrentAfterEi(%class.StackedTabStripLayout* %0, i32 %274)
  %275 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %11, align 8
  %276 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %275, i64 0, i32 0, i32 0, i32 1
  %277 = bitcast %"struct.views::ViewModelBase::Entry"** %276 to i64*
  %278 = load i64, i64* %277, align 8
  %279 = bitcast %"class.views::ViewModelBase"* %275 to i64*
  %280 = load i64, i64* %279, align 8
  %281 = sub i64 %278, %280
  %282 = sdiv exact i64 %281, 24
  %283 = trunc i64 %282 to i32
  %284 = load i32, i32* %5, align 4
  %285 = icmp eq i32 %284, %283
  br i1 %285, label %370, label %286

286:                                              ; preds = %273
  %287 = load i32, i32* %24, align 4
  %288 = sub nsw i32 %283, %284
  %289 = load i32, i32* %27, align 4
  %290 = mul nsw i32 %289, %288
  %291 = icmp sgt i32 %288, 1
  %292 = select i1 %291, i32 %288, i32 1
  %293 = add nsw i32 %292, -1
  %294 = load i32, i32* %33, align 8
  %295 = mul nsw i32 %294, %293
  %296 = add i32 %290, %287
  %297 = sub i32 %296, %295
  %298 = load i32, i32* %38, align 8
  %299 = icmp sgt i32 %297, %298
  %300 = add nsw i32 %284, 1
  %301 = icmp slt i32 %300, %283
  %302 = and i1 %301, %299
  br i1 %302, label %303, label %370

303:                                              ; preds = %286
  tail call void @_ZN21StackedTabStripLayout24AdjustLeadingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  tail call void @_ZN21StackedTabStripLayout25AdjustTrailingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  br label %370

304:                                              ; preds = %213, %304
  %305 = phi i64 [ %363, %304 ], [ %48, %213 ]
  %306 = phi i32 [ %367, %304 ], [ %271, %213 ]
  %307 = phi i32 [ %345, %304 ], [ %250, %213 ]
  %308 = load i32, i32* %38, align 8
  %309 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %11, align 8
  %310 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %309, i64 0, i32 0, i32 0, i32 1
  %311 = bitcast %"struct.views::ViewModelBase::Entry"** %310 to i64*
  %312 = load i64, i64* %311, align 8
  %313 = bitcast %"class.views::ViewModelBase"* %309 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = sub i64 %312, %314
  %316 = sdiv exact i64 %315, 24
  %317 = trunc i64 %316 to i32
  %318 = trunc i64 %305 to i32
  %319 = sub nsw i32 %317, %318
  %320 = load i32, i32* %27, align 4
  %321 = mul nsw i32 %319, %320
  %322 = icmp sgt i32 %319, 1
  %323 = select i1 %322, i32 %319, i32 1
  %324 = add nsw i32 %323, -1
  %325 = load i32, i32* %33, align 8
  %326 = mul nsw i32 %324, %325
  %327 = sub i32 %326, %321
  %328 = add i32 %327, %308
  %329 = sext i32 %306 to i64
  %330 = inttoptr i64 %314 to %"struct.views::ViewModelBase::Entry"*
  %331 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %330, i64 %329, i32 1, i32 0, i32 0
  %332 = load i32, i32* %331, align 4
  %333 = sub nsw i32 %318, %306
  %334 = load i32, i32* %72, align 4
  %335 = icmp slt i32 %334, %333
  %336 = select i1 %335, i32 %334, i32 %333
  %337 = load i32, i32* %76, align 4
  %338 = mul nsw i32 %336, %337
  %339 = add nsw i32 %338, %332
  %340 = icmp slt i32 %328, %339
  %341 = select i1 %340, i32 %339, i32 %328
  %342 = sub i32 %325, %320
  %343 = add i32 %342, %307
  %344 = icmp slt i32 %341, %343
  %345 = select i1 %344, i32 %343, i32 %341
  %346 = zext i32 %345 to i64
  %347 = icmp sgt i32 %345, 0
  %348 = icmp sgt i32 %320, 0
  %349 = and i1 %348, %347
  %350 = sub nuw nsw i32 2147483647, %345
  %351 = icmp ult i32 %350, %320
  %352 = and i1 %351, %349
  %353 = select i1 %352, i32 %350, i32 %320
  %354 = load i32, i32* %101, align 4
  %355 = icmp sgt i32 %354, 0
  %356 = icmp sgt i32 %353, 0
  %357 = select i1 %356, i32 %353, i32 0
  %358 = select i1 %355, i32 %354, i32 0
  %359 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %330, i64 %305, i32 1
  %360 = bitcast %"class.gfx::Rect"* %359 to i64*
  store i64 %346, i64* %360, align 8
  %361 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %330, i64 %305, i32 1, i32 1, i32 0
  store i32 %357, i32* %361, align 8
  %362 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %330, i64 %305, i32 1, i32 1, i32 1
  store i32 %358, i32* %362, align 4
  %363 = add i64 %305, -1
  %364 = load i32, i32* %3, align 4
  %365 = load i32, i32* %5, align 4
  %366 = icmp slt i32 %364, %365
  %367 = select i1 %366, i32 %365, i32 %364
  %368 = sext i32 %367 to i64
  %369 = icmp sgt i64 %363, %368
  br i1 %369, label %304, label %273

370:                                              ; preds = %23, %43, %10, %303, %286, %273, %54, %198, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout9RemoveTabEiii(%class.StackedTabStripLayout*, i32, i32, i32) local_unnamed_addr #2 align 2 {
  %5 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 10
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, %1
  br i1 %7, label %8, label %22

8:                                                ; preds = %4
  %9 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %10 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %9, align 8
  %11 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %10, i64 0, i32 0, i32 0, i32 1
  %12 = bitcast %"struct.views::ViewModelBase::Entry"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.views::ViewModelBase"* %10 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = sdiv exact i64 %16, 24
  %18 = trunc i64 %17 to i32
  %19 = add nsw i32 %18, -1
  %20 = icmp slt i32 %19, %1
  %21 = select i1 %20, i32 %19, i32 %1
  br label %26

22:                                               ; preds = %4
  %23 = icmp sgt i32 %6, %1
  br i1 %23, label %24, label %28

24:                                               ; preds = %22
  %25 = add nsw i32 %6, -1
  br label %26

26:                                               ; preds = %8, %24
  %27 = phi i32 [ %25, %24 ], [ %21, %8 ]
  store i32 %27, i32* %5, align 4
  br label %28

28:                                               ; preds = %26, %22
  %29 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %30 = load i32, i32* %29, align 4
  %31 = icmp sgt i32 %30, %1
  br i1 %31, label %32, label %34

32:                                               ; preds = %28
  %33 = add nsw i32 %30, -1
  store i32 %33, i32* %29, align 4
  br label %34

34:                                               ; preds = %32, %28
  %35 = phi i32 [ %33, %32 ], [ %30, %28 ]
  %36 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 6
  %37 = load i32, i32* %36, align 4
  %38 = sub nsw i32 %2, %37
  store i32 %2, i32* %36, align 4
  %39 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %40 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %39, align 8
  %41 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %40, i64 0, i32 0, i32 0, i32 1
  %42 = bitcast %"struct.views::ViewModelBase::Entry"** %41 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.views::ViewModelBase"* %40 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = sub i64 %43, %45
  %47 = sdiv exact i64 %46, 24
  %48 = trunc i64 %47 to i32
  %49 = icmp eq i32 %35, %48
  br i1 %49, label %66, label %50

50:                                               ; preds = %34
  %51 = sub nsw i32 %48, %35
  %52 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = mul nsw i32 %53, %51
  %55 = icmp sgt i32 %51, 1
  %56 = select i1 %55, i32 %51, i32 1
  %57 = add nsw i32 %56, -1
  %58 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = mul nsw i32 %59, %57
  %61 = add i32 %54, %2
  %62 = sub i32 %61, %60
  %63 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 7
  %64 = load i32, i32* %63, align 8
  %65 = icmp sgt i32 %62, %64
  br i1 %65, label %67, label %66

66:                                               ; preds = %34, %50
  tail call void @_ZN21StackedTabStripLayout17ResetToIdealStateEv(%class.StackedTabStripLayout* %0)
  br label %143

67:                                               ; preds = %50
  %68 = icmp slt i32 %35, %48
  %69 = and i1 %31, %68
  br i1 %69, label %70, label %113

70:                                               ; preds = %67
  %71 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %72 = sext i32 %35 to i64
  br label %73

73:                                               ; preds = %111, %70
  %74 = phi i32 [ %53, %70 ], [ %112, %111 ]
  %75 = phi i64 [ %72, %70 ], [ %99, %111 ]
  %76 = phi %"class.views::ViewModelBase"* [ %40, %70 ], [ %100, %111 ]
  %77 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %76, i64 0, i32 0, i32 0, i32 0
  %78 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %77, align 8
  %79 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %78, i64 %75, i32 1, i32 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = add nsw i32 %80, %38
  %82 = zext i32 %81 to i64
  %83 = icmp sgt i32 %81, 0
  %84 = icmp sgt i32 %74, 0
  %85 = and i1 %83, %84
  %86 = sub nuw nsw i32 2147483647, %81
  %87 = icmp ult i32 %86, %74
  %88 = and i1 %87, %85
  %89 = select i1 %88, i32 %86, i32 %74
  %90 = load i32, i32* %71, align 4
  %91 = icmp sgt i32 %90, 0
  %92 = icmp sgt i32 %89, 0
  %93 = select i1 %92, i32 %89, i32 0
  %94 = select i1 %91, i32 %90, i32 0
  %95 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %78, i64 %75, i32 1
  %96 = bitcast %"class.gfx::Rect"* %95 to i64*
  store i64 %82, i64* %96, align 8
  %97 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %78, i64 %75, i32 1, i32 1, i32 0
  store i32 %93, i32* %97, align 8
  %98 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %78, i64 %75, i32 1, i32 1, i32 1
  store i32 %94, i32* %98, align 4
  %99 = add nsw i64 %75, 1
  %100 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %39, align 8
  %101 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %100, i64 0, i32 0, i32 0, i32 1
  %102 = bitcast %"struct.views::ViewModelBase::Entry"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.views::ViewModelBase"* %100 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = sub i64 %103, %105
  %107 = sdiv exact i64 %106, 24
  %108 = shl i64 %107, 32
  %109 = ashr exact i64 %108, 32
  %110 = icmp slt i64 %99, %109
  br i1 %110, label %111, label %113

111:                                              ; preds = %73
  %112 = load i32, i32* %52, align 4
  br label %73

113:                                              ; preds = %73, %67
  tail call void @_ZN21StackedTabStripLayout37SetActiveBoundsAndLayoutFromActiveTabEv(%class.StackedTabStripLayout* %0)
  %114 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %39, align 8
  %115 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %114, i64 0, i32 0, i32 0, i32 1
  %116 = bitcast %"struct.views::ViewModelBase::Entry"** %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.views::ViewModelBase"* %114 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = sub i64 %117, %119
  %121 = sdiv exact i64 %120, 24
  %122 = trunc i64 %121 to i32
  %123 = load i32, i32* %29, align 4
  %124 = icmp eq i32 %123, %122
  br i1 %124, label %143, label %125

125:                                              ; preds = %113
  %126 = load i32, i32* %36, align 4
  %127 = sub nsw i32 %122, %123
  %128 = load i32, i32* %52, align 4
  %129 = mul nsw i32 %128, %127
  %130 = icmp sgt i32 %127, 1
  %131 = select i1 %130, i32 %127, i32 1
  %132 = add nsw i32 %131, -1
  %133 = load i32, i32* %58, align 8
  %134 = mul nsw i32 %133, %132
  %135 = add i32 %129, %126
  %136 = sub i32 %135, %134
  %137 = load i32, i32* %63, align 8
  %138 = icmp sgt i32 %136, %137
  %139 = add nsw i32 %123, 1
  %140 = icmp slt i32 %139, %122
  %141 = and i1 %140, %138
  br i1 %141, label %142, label %143

142:                                              ; preds = %125
  tail call void @_ZN21StackedTabStripLayout24AdjustLeadingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  tail call void @_ZN21StackedTabStripLayout25AdjustTrailingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  br label %143

143:                                              ; preds = %142, %125, %113, %66
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout37SetActiveBoundsAndLayoutFromActiveTabEv(%class.StackedTabStripLayout* readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 10
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %5 = load i32, i32* %4, align 4
  %6 = icmp slt i32 %3, %5
  %7 = select i1 %6, i32 %5, i32 %3
  %8 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %9 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %8, align 8
  %10 = sext i32 %7 to i64
  %11 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %9, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %11, align 8
  %13 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %12, i64 %10, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sub nsw i32 %7, %5
  %16 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %9, i64 0, i32 0, i32 0, i32 1
  %17 = bitcast %"struct.views::ViewModelBase::Entry"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = ptrtoint %"struct.views::ViewModelBase::Entry"* %12 to i64
  %20 = sub i64 %18, %19
  %21 = sdiv exact i64 %20, 24
  %22 = trunc i64 %21 to i32
  %23 = sub nsw i32 %22, %7
  %24 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 6
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = icmp slt i32 %27, %15
  %29 = select i1 %28, i32 %27, i32 %15
  %30 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = mul nsw i32 %29, %31
  %33 = add nsw i32 %32, %25
  %34 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 7
  %35 = load i32, i32* %34, align 8
  %36 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = mul nsw i32 %37, %23
  %39 = icmp sgt i32 %23, 1
  %40 = select i1 %39, i32 %23, i32 1
  %41 = add nsw i32 %40, -1
  %42 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = mul nsw i32 %41, %43
  %45 = sub i32 %44, %38
  %46 = add i32 %45, %35
  %47 = icmp slt i32 %33, %46
  %48 = select i1 %47, i32 %46, i32 %33
  %49 = xor i32 %7, -1
  %50 = add i32 %22, %49
  %51 = icmp slt i32 %27, %50
  %52 = select i1 %51, i32 %27, i32 %50
  %53 = mul nsw i32 %52, %31
  %54 = mul nsw i32 %37, %15
  %55 = icmp sgt i32 %15, 1
  %56 = select i1 %55, i32 %15, i32 1
  %57 = add nsw i32 %56, -1
  %58 = mul nsw i32 %43, %57
  %59 = icmp slt i32 %5, %3
  %60 = sub i32 0, %43
  %61 = select i1 %59, i32 %60, i32 0
  %62 = add i32 %54, %25
  %63 = add i32 %62, %61
  %64 = sub i32 %63, %58
  %65 = sub nsw i32 %35, %53
  %66 = sub i32 %65, %37
  %67 = icmp slt i32 %64, %66
  %68 = select i1 %67, i32 %64, i32 %66
  %69 = icmp sgt i32 %48, %14
  %70 = select i1 %69, i32 %48, i32 %14
  %71 = icmp slt i32 %68, %70
  %72 = select i1 %71, i32 %68, i32 %70
  %73 = zext i32 %72 to i64
  %74 = icmp sgt i32 %72, 0
  %75 = icmp sgt i32 %37, 0
  %76 = and i1 %75, %74
  %77 = sub nuw nsw i32 2147483647, %72
  %78 = icmp ult i32 %77, %37
  %79 = and i1 %78, %76
  %80 = select i1 %79, i32 %77, i32 %37
  %81 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %82 = load i32, i32* %81, align 4
  %83 = icmp sgt i32 %82, 0
  %84 = icmp sgt i32 %80, 0
  %85 = select i1 %84, i32 %80, i32 0
  %86 = select i1 %83, i32 %82, i32 0
  %87 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %12, i64 %10, i32 1
  %88 = bitcast %"class.gfx::Rect"* %87 to i64*
  store i64 %73, i64* %88, align 8
  %89 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %12, i64 %10, i32 1, i32 1, i32 0
  store i32 %85, i32* %89, align 8
  %90 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %12, i64 %10, i32 1, i32 1, i32 1
  store i32 %86, i32* %90, align 4
  %91 = load i32, i32* %2, align 4
  %92 = load i32, i32* %4, align 4
  %93 = icmp slt i32 %91, %92
  %94 = select i1 %93, i32 %92, i32 %91
  tail call void @_ZN21StackedTabStripLayout24LayoutUsingCurrentBeforeEi(%class.StackedTabStripLayout* %0, i32 %94)
  %95 = load i32, i32* %2, align 4
  %96 = load i32, i32* %4, align 4
  %97 = icmp slt i32 %95, %96
  %98 = select i1 %97, i32 %96, i32 %95
  tail call void @_ZN21StackedTabStripLayout23LayoutUsingCurrentAfterEi(%class.StackedTabStripLayout* %0, i32 %98)
  %99 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %8, align 8
  %100 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %99, i64 0, i32 0, i32 0, i32 1
  %101 = bitcast %"struct.views::ViewModelBase::Entry"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = bitcast %"class.views::ViewModelBase"* %99 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = sub i64 %102, %104
  %106 = sdiv exact i64 %105, 24
  %107 = trunc i64 %106 to i32
  %108 = load i32, i32* %4, align 4
  %109 = icmp eq i32 %108, %107
  br i1 %109, label %128, label %110

110:                                              ; preds = %1
  %111 = load i32, i32* %24, align 4
  %112 = sub nsw i32 %107, %108
  %113 = load i32, i32* %36, align 4
  %114 = mul nsw i32 %113, %112
  %115 = icmp sgt i32 %112, 1
  %116 = select i1 %115, i32 %112, i32 1
  %117 = add nsw i32 %116, -1
  %118 = load i32, i32* %42, align 8
  %119 = mul nsw i32 %118, %117
  %120 = add i32 %114, %111
  %121 = sub i32 %120, %119
  %122 = load i32, i32* %34, align 8
  %123 = icmp sgt i32 %121, %122
  %124 = add nsw i32 %108, 1
  %125 = icmp slt i32 %124, %107
  %126 = and i1 %125, %123
  br i1 %126, label %127, label %128

127:                                              ; preds = %110
  tail call void @_ZN21StackedTabStripLayout24AdjustLeadingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  tail call void @_ZN21StackedTabStripLayout25AdjustTrailingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  br label %128

128:                                              ; preds = %1, %110, %127
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout7MoveTabEiiiii(%class.StackedTabStripLayout*, i32, i32, i32, i32, i32) local_unnamed_addr #2 align 2 {
  %7 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 6
  store i32 %4, i32* %7, align 4
  %8 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  store i32 %5, i32* %8, align 4
  %9 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 10
  store i32 %3, i32* %9, align 4
  %10 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %11 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %10, align 8
  %12 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %11, i64 0, i32 0, i32 0, i32 1
  %13 = bitcast %"struct.views::ViewModelBase::Entry"** %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.views::ViewModelBase"* %11 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = sub i64 %14, %16
  %18 = sdiv exact i64 %17, 24
  %19 = trunc i64 %18 to i32
  %20 = icmp eq i32 %19, %5
  %21 = inttoptr i64 %16 to %"struct.views::ViewModelBase::Entry"*
  br i1 %20, label %38, label %22

22:                                               ; preds = %6
  %23 = sub nsw i32 %19, %5
  %24 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = mul nsw i32 %25, %23
  %27 = icmp sgt i32 %23, 1
  %28 = select i1 %27, i32 %23, i32 1
  %29 = add nsw i32 %28, -1
  %30 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = mul nsw i32 %31, %29
  %33 = add i32 %26, %4
  %34 = sub i32 %33, %32
  %35 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 7
  %36 = load i32, i32* %35, align 8
  %37 = icmp sgt i32 %34, %36
  br i1 %37, label %39, label %38

38:                                               ; preds = %6, %22
  tail call void @_ZN21StackedTabStripLayout17ResetToIdealStateEv(%class.StackedTabStripLayout* %0)
  br label %189

39:                                               ; preds = %22
  %40 = icmp slt i32 %3, %5
  %41 = select i1 %40, i32 %5, i32 %3
  %42 = sext i32 %41 to i64
  %43 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %21, i64 %42, i32 1, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = sub nsw i32 %41, %5
  %46 = sub nsw i32 %19, %41
  %47 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %48 = load i32, i32* %47, align 4
  %49 = icmp slt i32 %48, %45
  %50 = select i1 %49, i32 %48, i32 %45
  %51 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %52 = load i32, i32* %51, align 4
  %53 = mul nsw i32 %50, %52
  %54 = add nsw i32 %53, %4
  %55 = mul nsw i32 %25, %46
  %56 = icmp sgt i32 %46, 1
  %57 = select i1 %56, i32 %46, i32 1
  %58 = add nsw i32 %57, -1
  %59 = mul nsw i32 %31, %58
  %60 = sub i32 %59, %55
  %61 = add i32 %60, %36
  %62 = icmp slt i32 %54, %61
  %63 = select i1 %62, i32 %61, i32 %54
  %64 = xor i32 %41, -1
  %65 = add i32 %19, %64
  %66 = icmp slt i32 %48, %65
  %67 = select i1 %66, i32 %48, i32 %65
  %68 = mul nsw i32 %67, %52
  %69 = mul nsw i32 %25, %45
  %70 = icmp sgt i32 %45, 1
  %71 = select i1 %70, i32 %45, i32 1
  %72 = add nsw i32 %71, -1
  %73 = mul nsw i32 %31, %72
  %74 = icmp slt i32 %5, %3
  %75 = sub i32 0, %31
  %76 = select i1 %74, i32 %75, i32 0
  %77 = add i32 %69, %4
  %78 = add i32 %77, %76
  %79 = sub i32 %78, %73
  %80 = sub nsw i32 %36, %68
  %81 = sub i32 %80, %25
  %82 = icmp slt i32 %79, %81
  %83 = select i1 %82, i32 %79, i32 %81
  %84 = icmp sgt i32 %63, %44
  %85 = select i1 %84, i32 %63, i32 %44
  %86 = icmp slt i32 %83, %85
  %87 = select i1 %86, i32 %83, i32 %85
  %88 = zext i32 %87 to i64
  %89 = icmp sgt i32 %87, 0
  %90 = icmp sgt i32 %25, 0
  %91 = and i1 %90, %89
  %92 = sub nuw nsw i32 2147483647, %87
  %93 = icmp ult i32 %92, %25
  %94 = and i1 %93, %91
  %95 = select i1 %94, i32 %92, i32 %25
  %96 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = icmp sgt i32 %97, 0
  %99 = icmp sgt i32 %95, 0
  %100 = select i1 %99, i32 %95, i32 0
  %101 = select i1 %98, i32 %97, i32 0
  %102 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %21, i64 %42, i32 1
  %103 = bitcast %"class.gfx::Rect"* %102 to i64*
  store i64 %88, i64* %103, align 8
  %104 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %21, i64 %42, i32 1, i32 1, i32 0
  store i32 %100, i32* %104, align 8
  %105 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %21, i64 %42, i32 1, i32 1, i32 1
  store i32 %101, i32* %105, align 4
  %106 = load i32, i32* %9, align 4
  %107 = load i32, i32* %8, align 4
  %108 = icmp slt i32 %106, %107
  %109 = select i1 %108, i32 %107, i32 %106
  tail call void @_ZN21StackedTabStripLayout22LayoutByTabOffsetAfterEi(%class.StackedTabStripLayout* %0, i32 %109)
  %110 = load i32, i32* %9, align 4
  %111 = load i32, i32* %8, align 4
  %112 = icmp slt i32 %111, %110
  br i1 %112, label %113, label %159

113:                                              ; preds = %39
  %114 = sext i32 %110 to i64
  br label %115

115:                                              ; preds = %115, %113
  %116 = phi i64 [ %114, %113 ], [ %118, %115 ]
  %117 = phi i32 [ %111, %113 ], [ %156, %115 ]
  %118 = add nsw i64 %116, -1
  %119 = load i32, i32* %7, align 4
  %120 = trunc i64 %118 to i32
  %121 = sub nsw i32 %120, %117
  %122 = load i32, i32* %47, align 4
  %123 = icmp slt i32 %122, %121
  %124 = select i1 %123, i32 %122, i32 %121
  %125 = load i32, i32* %51, align 4
  %126 = mul nsw i32 %124, %125
  %127 = add nsw i32 %126, %119
  %128 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %10, align 8
  %129 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %128, i64 0, i32 0, i32 0, i32 0
  %130 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %129, align 8
  %131 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %130, i64 %116, i32 1, i32 0, i32 0
  %132 = load i32, i32* %131, align 4
  %133 = load i32, i32* %24, align 4
  %134 = load i32, i32* %30, align 8
  %135 = sub i32 %134, %133
  %136 = add i32 %135, %132
  %137 = icmp slt i32 %127, %136
  %138 = select i1 %137, i32 %136, i32 %127
  %139 = zext i32 %138 to i64
  %140 = icmp sgt i32 %138, 0
  %141 = icmp sgt i32 %133, 0
  %142 = and i1 %141, %140
  %143 = sub nuw nsw i32 2147483647, %138
  %144 = icmp ult i32 %143, %133
  %145 = and i1 %144, %142
  %146 = select i1 %145, i32 %143, i32 %133
  %147 = load i32, i32* %96, align 4
  %148 = icmp sgt i32 %147, 0
  %149 = icmp sgt i32 %146, 0
  %150 = select i1 %149, i32 %146, i32 0
  %151 = select i1 %148, i32 %147, i32 0
  %152 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %130, i64 %118, i32 1
  %153 = bitcast %"class.gfx::Rect"* %152 to i64*
  store i64 %139, i64* %153, align 8
  %154 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %130, i64 %118, i32 1, i32 1, i32 0
  store i32 %150, i32* %154, align 8
  %155 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %130, i64 %118, i32 1, i32 1, i32 1
  store i32 %151, i32* %155, align 4
  %156 = load i32, i32* %8, align 4
  %157 = sext i32 %156 to i64
  %158 = icmp sgt i64 %118, %157
  br i1 %158, label %115, label %159

159:                                              ; preds = %115, %39
  %160 = phi i32 [ %111, %39 ], [ %156, %115 ]
  %161 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %10, align 8
  %162 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %161, i64 0, i32 0, i32 0, i32 1
  %163 = bitcast %"struct.views::ViewModelBase::Entry"** %162 to i64*
  %164 = load i64, i64* %163, align 8
  %165 = bitcast %"class.views::ViewModelBase"* %161 to i64*
  %166 = load i64, i64* %165, align 8
  %167 = sub i64 %164, %166
  %168 = sdiv exact i64 %167, 24
  %169 = trunc i64 %168 to i32
  %170 = icmp eq i32 %160, %169
  br i1 %170, label %189, label %171

171:                                              ; preds = %159
  %172 = load i32, i32* %7, align 4
  %173 = sub nsw i32 %169, %160
  %174 = load i32, i32* %24, align 4
  %175 = mul nsw i32 %174, %173
  %176 = icmp sgt i32 %173, 1
  %177 = select i1 %176, i32 %173, i32 1
  %178 = add nsw i32 %177, -1
  %179 = load i32, i32* %30, align 8
  %180 = mul nsw i32 %179, %178
  %181 = add i32 %175, %172
  %182 = sub i32 %181, %180
  %183 = load i32, i32* %35, align 8
  %184 = icmp sgt i32 %182, %183
  %185 = add nsw i32 %160, 1
  %186 = icmp slt i32 %185, %169
  %187 = and i1 %186, %184
  br i1 %187, label %188, label %189

188:                                              ; preds = %171
  tail call void @_ZN21StackedTabStripLayout24AdjustLeadingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  tail call void @_ZN21StackedTabStripLayout25AdjustTrailingStackedTabsEv(%class.StackedTabStripLayout* %0) #7
  br label %189

189:                                              ; preds = %188, %171, %159, %38
  %190 = icmp sgt i32 %5, 0
  br i1 %190, label %191, label %204

191:                                              ; preds = %189
  %192 = add nsw i32 %5, -1
  %193 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %10, align 8
  %194 = sext i32 %192 to i64
  %195 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %193, i64 0, i32 0, i32 0, i32 0
  %196 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %195, align 8
  %197 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %196, i64 %194, i32 1, i32 0, i32 0
  %198 = load i32, i32* %197, align 4
  %199 = sub nsw i32 %4, %198
  %200 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 9
  store i32 %199, i32* %200, align 8
  %201 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %195, align 8
  %202 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %201, i64 0, i32 1, i32 0, i32 0
  %203 = load i32, i32* %202, align 4
  br label %206

204:                                              ; preds = %189
  %205 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 9
  store i32 0, i32* %205, align 8
  br label %206

206:                                              ; preds = %204, %191
  %207 = phi i32 [ %203, %191 ], [ %4, %204 ]
  %208 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 5
  store i32 %207, i32* %208, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK21StackedTabStripLayout9IsStackedEi(%class.StackedTabStripLayout* nocapture readonly, i32) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 10
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %4, %6
  %8 = select i1 %7, i32 %6, i32 %4
  %9 = icmp eq i32 %8, %1
  br i1 %9, label %57, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %12 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %11, align 8
  %13 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %12, i64 0, i32 0, i32 0, i32 1
  %14 = bitcast %"struct.views::ViewModelBase::Entry"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.views::ViewModelBase"* %12 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = sdiv exact i64 %18, 24
  %20 = trunc i64 %19 to i32
  %21 = icmp eq i32 %6, %20
  %22 = icmp sgt i32 %6, %1
  %23 = or i1 %22, %21
  %24 = inttoptr i64 %17 to %"struct.views::ViewModelBase::Entry"*
  br i1 %23, label %57, label %25

25:                                               ; preds = %10
  %26 = icmp slt i32 %8, %1
  br i1 %26, label %27, label %42

27:                                               ; preds = %25
  %28 = sext i32 %1 to i64
  %29 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %24, i64 %28, i32 1, i32 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = add nsw i32 %1, -1
  %32 = sext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %24, i64 %32, i32 1, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %38 = load i32, i32* %37, align 8
  %39 = add i32 %36, %34
  %40 = sub i32 %39, %38
  %41 = icmp ne i32 %30, %40
  br label %57

42:                                               ; preds = %25
  %43 = add nsw i32 %1, 1
  %44 = sext i32 %43 to i64
  %45 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %24, i64 %44, i32 1, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = sext i32 %1 to i64
  %48 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %24, i64 %47, i32 1, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %53 = load i32, i32* %52, align 8
  %54 = add i32 %51, %49
  %55 = sub i32 %54, %53
  %56 = icmp ne i32 %46, %55
  br label %57

57:                                               ; preds = %2, %10, %42, %27
  %58 = phi i1 [ %41, %27 ], [ %56, %42 ], [ false, %10 ], [ false, %2 ]
  ret i1 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout20SetActiveTabLocationEi(%class.StackedTabStripLayout* readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %4 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %3, align 8
  %5 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %4, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"struct.views::ViewModelBase::Entry"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.views::ViewModelBase"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = sdiv exact i64 %10, 24
  %12 = trunc i64 %11 to i32
  %13 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, %12
  %16 = inttoptr i64 %9 to %"struct.views::ViewModelBase::Entry"*
  br i1 %15, label %152, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 6
  %19 = load i32, i32* %18, align 4
  %20 = sub nsw i32 %12, %14
  %21 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = mul nsw i32 %22, %20
  %24 = icmp sgt i32 %20, 1
  %25 = select i1 %24, i32 %20, i32 1
  %26 = add nsw i32 %25, -1
  %27 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = mul nsw i32 %28, %26
  %30 = add i32 %23, %19
  %31 = sub i32 %30, %29
  %32 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 7
  %33 = load i32, i32* %32, align 8
  %34 = icmp sgt i32 %31, %33
  br i1 %34, label %35, label %152

35:                                               ; preds = %17
  %36 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 10
  %37 = load i32, i32* %36, align 4
  %38 = icmp slt i32 %37, %14
  %39 = select i1 %38, i32 %14, i32 %37
  %40 = icmp slt i32 %14, %37
  br i1 %40, label %41, label %152

41:                                               ; preds = %35
  %42 = sub nsw i32 %39, %14
  %43 = sub nsw i32 %12, %39
  %44 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %45 = load i32, i32* %44, align 4
  %46 = icmp slt i32 %45, %42
  %47 = select i1 %46, i32 %45, i32 %42
  %48 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = mul nsw i32 %47, %49
  %51 = add nsw i32 %50, %19
  %52 = mul nsw i32 %22, %43
  %53 = icmp sgt i32 %43, 1
  %54 = select i1 %53, i32 %43, i32 1
  %55 = add nsw i32 %54, -1
  %56 = mul nsw i32 %28, %55
  %57 = sub i32 %56, %52
  %58 = add i32 %57, %33
  %59 = icmp slt i32 %51, %58
  %60 = select i1 %59, i32 %58, i32 %51
  %61 = xor i32 %39, -1
  %62 = add i32 %61, %12
  %63 = icmp slt i32 %45, %62
  %64 = select i1 %63, i32 %45, i32 %62
  %65 = mul nsw i32 %64, %49
  %66 = mul nsw i32 %22, %42
  %67 = icmp sgt i32 %42, 1
  %68 = select i1 %67, i32 %42, i32 1
  %69 = add nsw i32 %68, -1
  %70 = mul nsw i32 %28, %69
  %71 = add i32 %66, %19
  %72 = sub i32 %71, %28
  %73 = sub i32 %72, %70
  %74 = sub nsw i32 %33, %65
  %75 = sub i32 %74, %22
  %76 = icmp slt i32 %73, %75
  %77 = select i1 %76, i32 %73, i32 %75
  %78 = icmp sgt i32 %60, %1
  %79 = select i1 %78, i32 %60, i32 %1
  %80 = icmp slt i32 %77, %79
  %81 = select i1 %80, i32 %77, i32 %79
  %82 = sext i32 %39 to i64
  %83 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %16, i64 %82, i32 1, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %81, %84
  br i1 %85, label %152, label %86

86:                                               ; preds = %41
  %87 = zext i32 %81 to i64
  %88 = icmp sgt i32 %81, 0
  %89 = icmp sgt i32 %22, 0
  %90 = and i1 %89, %88
  %91 = sub nuw nsw i32 2147483647, %81
  %92 = icmp ult i32 %91, %22
  %93 = and i1 %92, %90
  %94 = select i1 %93, i32 %91, i32 %22
  %95 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %96 = load i32, i32* %95, align 4
  %97 = icmp sgt i32 %96, 0
  %98 = icmp sgt i32 %94, 0
  %99 = select i1 %98, i32 %94, i32 0
  %100 = select i1 %97, i32 %96, i32 0
  %101 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %16, i64 %82, i32 1
  %102 = bitcast %"class.gfx::Rect"* %101 to i64*
  store i64 %87, i64* %102, align 8
  %103 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %16, i64 %82, i32 1, i32 1, i32 0
  store i32 %99, i32* %103, align 8
  %104 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %16, i64 %82, i32 1, i32 1, i32 1
  store i32 %100, i32* %104, align 4
  %105 = load i32, i32* %13, align 4
  %106 = icmp slt i32 %105, %39
  br i1 %106, label %107, label %151

107:                                              ; preds = %86, %107
  %108 = phi i64 [ %110, %107 ], [ %82, %86 ]
  %109 = phi i32 [ %148, %107 ], [ %105, %86 ]
  %110 = add nsw i64 %108, -1
  %111 = load i32, i32* %18, align 4
  %112 = trunc i64 %110 to i32
  %113 = sub nsw i32 %112, %109
  %114 = load i32, i32* %44, align 4
  %115 = icmp slt i32 %114, %113
  %116 = select i1 %115, i32 %114, i32 %113
  %117 = load i32, i32* %48, align 4
  %118 = mul nsw i32 %116, %117
  %119 = add nsw i32 %118, %111
  %120 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %3, align 8
  %121 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %120, i64 0, i32 0, i32 0, i32 0
  %122 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %121, align 8
  %123 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %122, i64 %108, i32 1, i32 0, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = load i32, i32* %21, align 4
  %126 = load i32, i32* %27, align 8
  %127 = sub i32 %126, %125
  %128 = add i32 %127, %124
  %129 = icmp slt i32 %119, %128
  %130 = select i1 %129, i32 %128, i32 %119
  %131 = zext i32 %130 to i64
  %132 = icmp sgt i32 %130, 0
  %133 = icmp sgt i32 %125, 0
  %134 = and i1 %133, %132
  %135 = sub nuw nsw i32 2147483647, %130
  %136 = icmp ult i32 %135, %125
  %137 = and i1 %136, %134
  %138 = select i1 %137, i32 %135, i32 %125
  %139 = load i32, i32* %95, align 4
  %140 = icmp sgt i32 %139, 0
  %141 = icmp sgt i32 %138, 0
  %142 = select i1 %141, i32 %138, i32 0
  %143 = select i1 %140, i32 %139, i32 0
  %144 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %122, i64 %110, i32 1
  %145 = bitcast %"class.gfx::Rect"* %144 to i64*
  store i64 %131, i64* %145, align 8
  %146 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %122, i64 %110, i32 1, i32 1, i32 0
  store i32 %142, i32* %146, align 8
  %147 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %122, i64 %110, i32 1, i32 1, i32 1
  store i32 %143, i32* %147, align 4
  %148 = load i32, i32* %13, align 4
  %149 = sext i32 %148 to i64
  %150 = icmp sgt i64 %110, %149
  br i1 %150, label %107, label %151

151:                                              ; preds = %107, %86
  tail call void @_ZN21StackedTabStripLayout22LayoutByTabOffsetAfterEi(%class.StackedTabStripLayout* %0, i32 %39)
  br label %152

152:                                              ; preds = %2, %151, %35, %41, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout5ResetEiiii(%class.StackedTabStripLayout*, i32, i32, i32, i32) local_unnamed_addr #2 align 2 {
  %6 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 6
  store i32 %1, i32* %6, align 4
  %7 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 7
  store i32 %2, i32* %7, align 8
  %8 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  store i32 %3, i32* %8, align 4
  %9 = icmp sgt i32 %3, 0
  br i1 %9, label %10, label %24

10:                                               ; preds = %5
  %11 = add nsw i32 %3, -1
  %12 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %13 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %12, align 8
  %14 = sext i32 %11 to i64
  %15 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %13, i64 0, i32 0, i32 0, i32 0
  %16 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %15, align 8
  %17 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %16, i64 %14, i32 1, i32 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = sub nsw i32 %1, %18
  %20 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 9
  store i32 %19, i32* %20, align 8
  %21 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %15, align 8
  %22 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %21, i64 0, i32 1, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  br label %26

24:                                               ; preds = %5
  %25 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 9
  store i32 0, i32* %25, align 8
  br label %26

26:                                               ; preds = %24, %10
  %27 = phi i32 [ %23, %10 ], [ %1, %24 ]
  %28 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 5
  store i32 %27, i32* %28, align 8
  %29 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 10
  store i32 %4, i32* %29, align 4
  tail call void @_ZN21StackedTabStripLayout17ResetToIdealStateEv(%class.StackedTabStripLayout* %0)
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK21StackedTabStripLayout17GetMinXCompressedEi(%class.StackedTabStripLayout* nocapture readonly, i32) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 7
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %6 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %5, align 8
  %7 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %6, i64 0, i32 0, i32 0, i32 1
  %8 = bitcast %"struct.views::ViewModelBase::Entry"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.views::ViewModelBase"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = sdiv exact i64 %12, 24
  %14 = trunc i64 %13 to i32
  %15 = sub nsw i32 %14, %1
  %16 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = mul nsw i32 %15, %17
  %19 = icmp sgt i32 %15, 1
  %20 = select i1 %19, i32 %15, i32 1
  %21 = add nsw i32 %20, -1
  %22 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %23 = load i32, i32* %22, align 8
  %24 = mul nsw i32 %21, %23
  %25 = sub i32 %24, %18
  %26 = add i32 %25, %4
  %27 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 10
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %28, %30
  %32 = select i1 %31, i32 %30, i32 %28
  %33 = sext i32 %32 to i64
  %34 = inttoptr i64 %11 to %"struct.views::ViewModelBase::Entry"*
  %35 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %34, i64 %33, i32 1, i32 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = sub nsw i32 %1, %32
  %38 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %39 = load i32, i32* %38, align 4
  %40 = icmp slt i32 %39, %37
  %41 = select i1 %40, i32 %39, i32 %37
  %42 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = mul nsw i32 %41, %43
  %45 = add nsw i32 %44, %36
  %46 = icmp slt i32 %26, %45
  %47 = select i1 %46, i32 %45, i32 %26
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout23LayoutUsingCurrentAfterEi(%class.StackedTabStripLayout* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = add i32 %1, 1
  %4 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %5 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %4, align 8
  %6 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %5, i64 0, i32 0, i32 0, i32 1
  %7 = bitcast %"struct.views::ViewModelBase::Entry"** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.views::ViewModelBase"* %5 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = sub i64 %8, %10
  %12 = sdiv exact i64 %11, 24
  %13 = trunc i64 %12 to i32
  %14 = icmp slt i32 %3, %13
  br i1 %14, label %15, label %25

15:                                               ; preds = %2
  %16 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %18 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 7
  %19 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %20 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %21 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %22 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 6
  %23 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %24 = sext i32 %3 to i64
  br label %26

25:                                               ; preds = %26, %2
  ret void

26:                                               ; preds = %15, %26
  %27 = phi i64 [ %24, %15 ], [ %100, %26 ]
  %28 = phi i32 [ %13, %15 ], [ %109, %26 ]
  %29 = phi %"class.views::ViewModelBase"* [ %5, %15 ], [ %101, %26 ]
  %30 = phi i32 [ %1, %15 ], [ %45, %26 ]
  %31 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %29, i64 0, i32 0, i32 0, i32 0
  %32 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %31, align 8
  %33 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %32, i64 %27, i32 1, i32 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = sext i32 %30 to i64
  %36 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %32, i64 %35, i32 1, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = load i32, i32* %16, align 4
  %39 = load i32, i32* %17, align 8
  %40 = sub nsw i32 %38, %39
  %41 = add nsw i32 %40, %37
  %42 = icmp slt i32 %41, %34
  %43 = select i1 %42, i32 %41, i32 %34
  %44 = load i32, i32* %18, align 8
  %45 = trunc i64 %27 to i32
  %46 = sub nsw i32 %28, %45
  %47 = mul nsw i32 %38, %46
  %48 = icmp sgt i32 %46, 1
  %49 = select i1 %48, i32 %46, i32 1
  %50 = add nsw i32 %49, -1
  %51 = mul nsw i32 %39, %50
  %52 = sub i32 %51, %47
  %53 = add i32 %52, %44
  %54 = sub i32 -2, %30
  %55 = add i32 %28, %54
  %56 = load i32, i32* %19, align 4
  %57 = icmp slt i32 %56, %55
  %58 = select i1 %57, i32 %56, i32 %55
  %59 = load i32, i32* %20, align 4
  %60 = mul nsw i32 %58, %59
  %61 = load i32, i32* %21, align 4
  %62 = sub nsw i32 %45, %61
  %63 = mul nsw i32 %62, %38
  %64 = icmp sgt i32 %62, 1
  %65 = select i1 %64, i32 %62, i32 1
  %66 = add nsw i32 %65, -1
  %67 = mul nsw i32 %66, %39
  %68 = load i32, i32* %22, align 4
  %69 = icmp slt i32 %30, %61
  %70 = sub i32 0, %39
  %71 = select i1 %69, i32 0, i32 %70
  %72 = add i32 %63, %68
  %73 = add i32 %72, %71
  %74 = sub i32 %73, %67
  %75 = sub nsw i32 %44, %60
  %76 = sub i32 %75, %38
  %77 = icmp slt i32 %74, %76
  %78 = select i1 %77, i32 %74, i32 %76
  %79 = icmp slt i32 %43, %53
  %80 = select i1 %79, i32 %53, i32 %43
  %81 = icmp slt i32 %78, %80
  %82 = select i1 %81, i32 %78, i32 %80
  %83 = zext i32 %82 to i64
  %84 = icmp sgt i32 %82, 0
  %85 = icmp sgt i32 %38, 0
  %86 = and i1 %85, %84
  %87 = sub nuw nsw i32 2147483647, %82
  %88 = icmp ult i32 %87, %38
  %89 = and i1 %88, %86
  %90 = select i1 %89, i32 %87, i32 %38
  %91 = load i32, i32* %23, align 4
  %92 = icmp sgt i32 %91, 0
  %93 = icmp sgt i32 %90, 0
  %94 = select i1 %93, i32 %90, i32 0
  %95 = select i1 %92, i32 %91, i32 0
  %96 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %32, i64 %27, i32 1
  %97 = bitcast %"class.gfx::Rect"* %96 to i64*
  store i64 %83, i64* %97, align 8
  %98 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %32, i64 %27, i32 1, i32 1, i32 0
  store i32 %94, i32* %98, align 8
  %99 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %32, i64 %27, i32 1, i32 1, i32 1
  store i32 %95, i32* %99, align 4
  %100 = add nsw i64 %27, 1
  %101 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %4, align 8
  %102 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %101, i64 0, i32 0, i32 0, i32 1
  %103 = bitcast %"struct.views::ViewModelBase::Entry"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.views::ViewModelBase"* %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = sub i64 %104, %106
  %108 = sdiv exact i64 %107, 24
  %109 = trunc i64 %108 to i32
  %110 = shl i64 %108, 32
  %111 = ashr exact i64 %110, 32
  %112 = icmp slt i64 %100, %111
  br i1 %112, label %26, label %25
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout24LayoutUsingCurrentBeforeEi(%class.StackedTabStripLayout* nocapture readonly, i32) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, %1
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %8 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 1
  %10 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 6
  %11 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %12 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %13 = sext i32 %1 to i64
  br label %15

14:                                               ; preds = %15, %2
  ret void

15:                                               ; preds = %6, %15
  %16 = phi i64 [ %13, %6 ], [ %18, %15 ]
  %17 = phi i32 [ %4, %6 ], [ %70, %15 ]
  %18 = add nsw i64 %16, -1
  %19 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %7, align 8
  %20 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %19, i64 0, i32 0, i32 0, i32 0
  %21 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %20, align 8
  %22 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %21, i64 %18, i32 1, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %21, i64 %16, i32 1, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = load i32, i32* %8, align 4
  %27 = load i32, i32* %9, align 8
  %28 = sub i32 %27, %26
  %29 = add i32 %28, %25
  %30 = icmp slt i32 %23, %29
  %31 = select i1 %30, i32 %29, i32 %23
  %32 = load i32, i32* %10, align 4
  %33 = trunc i64 %18 to i32
  %34 = sub nsw i32 %33, %17
  %35 = mul nsw i32 %26, %34
  %36 = icmp sgt i32 %34, 1
  %37 = select i1 %36, i32 %34, i32 1
  %38 = add nsw i32 %37, -1
  %39 = mul nsw i32 %27, %38
  %40 = sext i32 %17 to i64
  %41 = icmp sgt i64 %18, %40
  %42 = sub i32 0, %27
  %43 = select i1 %41, i32 %42, i32 0
  %44 = add i32 %32, %35
  %45 = add i32 %44, %43
  %46 = sub i32 %45, %39
  %47 = load i32, i32* %11, align 4
  %48 = sub nsw i32 %25, %47
  %49 = icmp slt i32 %48, %31
  %50 = select i1 %49, i32 %48, i32 %31
  %51 = icmp slt i32 %46, %50
  %52 = select i1 %51, i32 %46, i32 %50
  %53 = zext i32 %52 to i64
  %54 = icmp sgt i32 %52, 0
  %55 = icmp sgt i32 %26, 0
  %56 = and i1 %55, %54
  %57 = sub nuw nsw i32 2147483647, %52
  %58 = icmp ult i32 %57, %26
  %59 = and i1 %58, %56
  %60 = select i1 %59, i32 %57, i32 %26
  %61 = load i32, i32* %12, align 4
  %62 = icmp sgt i32 %61, 0
  %63 = icmp sgt i32 %60, 0
  %64 = select i1 %63, i32 %60, i32 0
  %65 = select i1 %62, i32 %61, i32 0
  %66 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %21, i64 %18, i32 1
  %67 = bitcast %"class.gfx::Rect"* %66 to i64*
  store i64 %53, i64* %67, align 8
  %68 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %21, i64 %18, i32 1, i32 1, i32 0
  store i32 %64, i32* %68, align 8
  %69 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %21, i64 %18, i32 1, i32 1, i32 1
  store i32 %65, i32* %69, align 4
  %70 = load i32, i32* %3, align 4
  %71 = sext i32 %70 to i64
  %72 = icmp sgt i64 %18, %71
  br i1 %72, label %15, label %14
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout24AdjustLeadingStackedTabsEv(%class.StackedTabStripLayout* readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 4
  %4 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %5 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 6
  %6 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 10
  %7 = load i32, i32* %6, align 4
  %8 = icmp slt i32 %7, %3
  %9 = select i1 %8, i32 %3, i32 %7
  %10 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %11 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %12 = sext i32 %3 to i64
  %13 = sext i32 %9 to i64
  %14 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %4, align 8
  %15 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %15, align 8
  br label %17

17:                                               ; preds = %31, %1
  %18 = phi i64 [ %19, %31 ], [ %12, %1 ]
  %19 = add nsw i64 %18, 1
  %20 = icmp slt i64 %19, %13
  br i1 %20, label %23, label %21

21:                                               ; preds = %17
  %22 = load i32, i32* %10, align 4
  br label %37

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %16, i64 %19, i32 1, i32 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %16, i64 %18, i32 1, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = sub nsw i32 %25, %27
  %29 = load i32, i32* %10, align 4
  %30 = icmp sgt i32 %28, %29
  br i1 %30, label %37, label %31

31:                                               ; preds = %23
  %32 = load i32, i32* %5, align 4
  %33 = load i32, i32* %11, align 8
  %34 = mul nsw i32 %33, %29
  %35 = add nsw i32 %34, %32
  %36 = icmp sgt i32 %25, %35
  br i1 %36, label %37, label %17

37:                                               ; preds = %31, %23, %21
  %38 = phi i32 [ %22, %21 ], [ %29, %23 ], [ %29, %31 ]
  %39 = trunc i64 %19 to i32
  %40 = shl i64 %19, 32
  %41 = ashr exact i64 %40, 32
  %42 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %16, i64 %41, i32 1, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = shl i64 %18, 32
  %45 = ashr exact i64 %44, 32
  %46 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %16, i64 %45, i32 1, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = sub nsw i32 %43, %47
  %49 = icmp sgt i32 %48, %38
  br i1 %49, label %50, label %52

50:                                               ; preds = %37
  %51 = load i32, i32* %11, align 8
  br label %61

52:                                               ; preds = %37
  %53 = trunc i64 %18 to i32
  %54 = load i32, i32* %5, align 4
  %55 = load i32, i32* %11, align 8
  %56 = mul nsw i32 %55, %38
  %57 = add nsw i32 %56, %54
  %58 = icmp sgt i32 %43, %57
  %59 = add nsw i32 %53, 2
  %60 = select i1 %58, i32 %39, i32 %59
  br label %61

61:                                               ; preds = %50, %52
  %62 = phi i32 [ %51, %50 ], [ %55, %52 ]
  %63 = phi i32 [ %39, %50 ], [ %60, %52 ]
  %64 = add nsw i32 %62, %3
  %65 = icmp slt i32 %63, %64
  br i1 %65, label %143, label %66

66:                                               ; preds = %61
  %67 = load i32, i32* %5, align 4
  %68 = xor i32 %62, -1
  %69 = add i32 %63, %68
  %70 = icmp slt i32 %3, %69
  br i1 %70, label %71, label %79

71:                                               ; preds = %66
  %72 = zext i32 %67 to i64
  %73 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %74 = icmp sgt i32 %67, 0
  %75 = sub nuw nsw i32 2147483647, %67
  %76 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  br label %87

77:                                               ; preds = %87
  %78 = trunc i64 %105 to i32
  br label %79

79:                                               ; preds = %77, %66
  %80 = phi i32 [ %3, %66 ], [ %78, %77 ]
  %81 = icmp slt i32 %80, %63
  br i1 %81, label %82, label %143

82:                                               ; preds = %79
  %83 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %84 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %85 = sext i32 %80 to i64
  %86 = sext i32 %63 to i64
  br label %115

87:                                               ; preds = %111, %71
  %88 = phi %"struct.views::ViewModelBase::Entry"* [ %16, %71 ], [ %114, %111 ]
  %89 = phi i64 [ %12, %71 ], [ %105, %111 ]
  %90 = load i32, i32* %73, align 4
  %91 = icmp sgt i32 %90, 0
  %92 = and i1 %74, %91
  %93 = icmp ult i32 %75, %90
  %94 = and i1 %93, %92
  %95 = select i1 %94, i32 %75, i32 %90
  %96 = load i32, i32* %76, align 4
  %97 = icmp sgt i32 %96, 0
  %98 = icmp sgt i32 %95, 0
  %99 = select i1 %98, i32 %95, i32 0
  %100 = select i1 %97, i32 %96, i32 0
  %101 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %88, i64 %89, i32 1
  %102 = bitcast %"class.gfx::Rect"* %101 to i64*
  store i64 %72, i64* %102, align 8
  %103 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %88, i64 %89, i32 1, i32 1, i32 0
  store i32 %99, i32* %103, align 8
  %104 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %88, i64 %89, i32 1, i32 1, i32 1
  store i32 %100, i32* %104, align 4
  %105 = add nsw i64 %89, 1
  %106 = load i32, i32* %11, align 8
  %107 = xor i32 %106, -1
  %108 = add i32 %63, %107
  %109 = sext i32 %108 to i64
  %110 = icmp slt i64 %105, %109
  br i1 %110, label %111, label %77

111:                                              ; preds = %87
  %112 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %4, align 8
  %113 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %112, i64 0, i32 0, i32 0, i32 0
  %114 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %113, align 8
  br label %87

115:                                              ; preds = %115, %82
  %116 = phi i64 [ %85, %82 ], [ %139, %115 ]
  %117 = phi i32 [ %67, %82 ], [ %141, %115 ]
  %118 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %4, align 8
  %119 = zext i32 %117 to i64
  %120 = load i32, i32* %83, align 4
  %121 = icmp sgt i32 %117, 0
  %122 = icmp sgt i32 %120, 0
  %123 = and i1 %121, %122
  %124 = sub nuw nsw i32 2147483647, %117
  %125 = icmp ult i32 %124, %120
  %126 = and i1 %125, %123
  %127 = select i1 %126, i32 %124, i32 %120
  %128 = load i32, i32* %84, align 4
  %129 = icmp sgt i32 %128, 0
  %130 = icmp sgt i32 %127, 0
  %131 = select i1 %130, i32 %127, i32 0
  %132 = select i1 %129, i32 %128, i32 0
  %133 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %118, i64 0, i32 0, i32 0, i32 0
  %134 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %133, align 8
  %135 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %134, i64 %116, i32 1
  %136 = bitcast %"class.gfx::Rect"* %135 to i64*
  store i64 %119, i64* %136, align 8
  %137 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %134, i64 %116, i32 1, i32 1, i32 0
  store i32 %131, i32* %137, align 8
  %138 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %134, i64 %116, i32 1, i32 1, i32 1
  store i32 %132, i32* %138, align 4
  %139 = add nsw i64 %116, 1
  %140 = load i32, i32* %10, align 4
  %141 = add nsw i32 %140, %117
  %142 = icmp eq i64 %139, %86
  br i1 %142, label %143, label %115

143:                                              ; preds = %115, %79, %61
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN21StackedTabStripLayout25AdjustTrailingStackedTabsEv(%class.StackedTabStripLayout* readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 4
  %3 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %2, align 8
  %4 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %3, i64 0, i32 0, i32 0, i32 1
  %5 = bitcast %"struct.views::ViewModelBase::Entry"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.views::ViewModelBase"* %3 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 24
  %11 = trunc i64 %10 to i32
  %12 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 7
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = sub nsw i32 %13, %15
  %17 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = mul nsw i32 %20, %18
  %22 = sub nsw i32 %16, %21
  %23 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 10
  %24 = load i32, i32* %23, align 4
  %25 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 8
  %26 = load i32, i32* %25, align 4
  %27 = icmp slt i32 %24, %26
  %28 = select i1 %27, i32 %26, i32 %24
  %29 = shl i64 %10, 32
  %30 = ashr exact i64 %29, 32
  %31 = sext i32 %28 to i64
  %32 = inttoptr i64 %8 to %"struct.views::ViewModelBase::Entry"*
  br label %33

33:                                               ; preds = %37, %1
  %34 = phi i64 [ %35, %37 ], [ %30, %1 ]
  %35 = add nsw i64 %34, -1
  %36 = icmp sgt i64 %35, %31
  br i1 %36, label %37, label %63

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %32, i64 %35, i32 1, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = add nsw i64 %34, -2
  %41 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %32, i64 %40, i32 1, i32 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = sub nsw i32 %39, %42
  %44 = icmp sle i32 %43, %18
  %45 = icmp sge i32 %42, %22
  %46 = and i1 %45, %44
  br i1 %46, label %33, label %47

47:                                               ; preds = %37
  %48 = trunc i64 %34 to i32
  %49 = trunc i64 %35 to i32
  %50 = shl i64 %35, 32
  %51 = ashr exact i64 %50, 32
  %52 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %32, i64 %51, i32 1, i32 0, i32 0
  %53 = load i32, i32* %52, align 4
  %54 = add nsw i32 %48, -2
  %55 = sext i32 %54 to i64
  %56 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %32, i64 %55, i32 1, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = sub nsw i32 %53, %57
  %59 = icmp sgt i32 %58, %18
  br i1 %59, label %65, label %60

60:                                               ; preds = %47
  %61 = icmp slt i32 %57, %22
  %62 = select i1 %61, i32 %49, i32 %54
  br label %65

63:                                               ; preds = %33
  %64 = trunc i64 %35 to i32
  br label %65

65:                                               ; preds = %63, %60, %47
  %66 = phi i32 [ %49, %47 ], [ %62, %60 ], [ %64, %63 ]
  %67 = sub nsw i32 %11, %20
  %68 = icmp slt i32 %66, %67
  br i1 %68, label %69, label %168

69:                                               ; preds = %65
  %70 = sub nsw i32 %11, %66
  %71 = icmp slt i32 %20, %70
  %72 = select i1 %71, i32 %20, i32 %70
  %73 = mul nsw i32 %72, %18
  %74 = sub nsw i32 %16, %73
  %75 = icmp sgt i32 %20, 0
  br i1 %75, label %76, label %90

76:                                               ; preds = %69
  %77 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %78 = sext i32 %66 to i64
  br label %102

79:                                               ; preds = %102
  %80 = trunc i64 %124 to i32
  %81 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %2, align 8
  %82 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %81, i64 0, i32 0, i32 0, i32 1
  %83 = bitcast %"struct.views::ViewModelBase::Entry"** %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.views::ViewModelBase"* %81 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = sub i64 %84, %86
  %88 = sdiv exact i64 %87, 24
  %89 = trunc i64 %88 to i32
  br label %90

90:                                               ; preds = %79, %69
  %91 = phi i32 [ %89, %79 ], [ %11, %69 ]
  %92 = phi %"class.views::ViewModelBase"* [ %81, %79 ], [ %3, %69 ]
  %93 = phi i32 [ %80, %79 ], [ %66, %69 ]
  %94 = phi i32 [ %126, %79 ], [ %74, %69 ]
  %95 = icmp slt i32 %93, %91
  br i1 %95, label %96, label %168

96:                                               ; preds = %90
  %97 = zext i32 %94 to i64
  %98 = icmp sgt i32 %94, 0
  %99 = sub nuw nsw i32 2147483647, %94
  %100 = getelementptr inbounds %class.StackedTabStripLayout, %class.StackedTabStripLayout* %0, i64 0, i32 0, i32 1
  %101 = sext i32 %93 to i64
  br label %136

102:                                              ; preds = %131, %76
  %103 = phi %"struct.views::ViewModelBase::Entry"* [ %32, %76 ], [ %135, %131 ]
  %104 = phi i32 [ %15, %76 ], [ %133, %131 ]
  %105 = phi i64 [ %78, %76 ], [ %124, %131 ]
  %106 = phi i32 [ %74, %76 ], [ %126, %131 ]
  %107 = zext i32 %106 to i64
  %108 = icmp sgt i32 %106, 0
  %109 = icmp sgt i32 %104, 0
  %110 = and i1 %108, %109
  %111 = sub nuw nsw i32 2147483647, %106
  %112 = icmp ult i32 %111, %104
  %113 = and i1 %112, %110
  %114 = select i1 %113, i32 %111, i32 %104
  %115 = load i32, i32* %77, align 4
  %116 = icmp sgt i32 %115, 0
  %117 = icmp sgt i32 %114, 0
  %118 = select i1 %117, i32 %114, i32 0
  %119 = select i1 %116, i32 %115, i32 0
  %120 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %103, i64 %105, i32 1
  %121 = bitcast %"class.gfx::Rect"* %120 to i64*
  store i64 %107, i64* %121, align 8
  %122 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %103, i64 %105, i32 1, i32 1, i32 0
  store i32 %118, i32* %122, align 8
  %123 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %103, i64 %105, i32 1, i32 1, i32 1
  store i32 %119, i32* %123, align 4
  %124 = add nsw i64 %105, 1
  %125 = load i32, i32* %17, align 4
  %126 = add nsw i32 %125, %106
  %127 = load i32, i32* %19, align 8
  %128 = add nsw i32 %127, %66
  %129 = sext i32 %128 to i64
  %130 = icmp slt i64 %124, %129
  br i1 %130, label %131, label %79

131:                                              ; preds = %102
  %132 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %2, align 8
  %133 = load i32, i32* %14, align 4
  %134 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %132, i64 0, i32 0, i32 0, i32 0
  %135 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %134, align 8
  br label %102

136:                                              ; preds = %96, %136
  %137 = phi i64 [ %101, %96 ], [ %156, %136 ]
  %138 = phi %"class.views::ViewModelBase"* [ %92, %96 ], [ %157, %136 ]
  %139 = load i32, i32* %14, align 4
  %140 = icmp sgt i32 %139, 0
  %141 = and i1 %98, %140
  %142 = icmp ult i32 %99, %139
  %143 = and i1 %142, %141
  %144 = select i1 %143, i32 %99, i32 %139
  %145 = load i32, i32* %100, align 4
  %146 = icmp sgt i32 %145, 0
  %147 = icmp sgt i32 %144, 0
  %148 = select i1 %147, i32 %144, i32 0
  %149 = select i1 %146, i32 %145, i32 0
  %150 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %138, i64 0, i32 0, i32 0, i32 0
  %151 = load %"struct.views::ViewModelBase::Entry"*, %"struct.views::ViewModelBase::Entry"** %150, align 8
  %152 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %151, i64 %137, i32 1
  %153 = bitcast %"class.gfx::Rect"* %152 to i64*
  store i64 %97, i64* %153, align 8
  %154 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %151, i64 %137, i32 1, i32 1, i32 0
  store i32 %148, i32* %154, align 8
  %155 = getelementptr inbounds %"struct.views::ViewModelBase::Entry", %"struct.views::ViewModelBase::Entry"* %151, i64 %137, i32 1, i32 1, i32 1
  store i32 %149, i32* %155, align 4
  %156 = add nsw i64 %137, 1
  %157 = load %"class.views::ViewModelBase"*, %"class.views::ViewModelBase"** %2, align 8
  %158 = getelementptr inbounds %"class.views::ViewModelBase", %"class.views::ViewModelBase"* %157, i64 0, i32 0, i32 0, i32 1
  %159 = bitcast %"struct.views::ViewModelBase::Entry"** %158 to i64*
  %160 = load i64, i64* %159, align 8
  %161 = bitcast %"class.views::ViewModelBase"* %157 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = sub i64 %160, %162
  %164 = sdiv exact i64 %163, 24
  %165 = shl i64 %164, 32
  %166 = ashr exact i64 %165, 32
  %167 = icmp slt i64 %156, %166
  br i1 %167, label %136, label %168

168:                                              ; preds = %136, %90, %65
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
