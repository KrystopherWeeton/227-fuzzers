; ModuleID = '../../third_party/blink/renderer/core/layout/layout_block.cc'
source_filename = "../../third_party/blink/renderer/core/layout/layout_block.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::HashMap<const blink::LayoutBlock *, std::__1::unique_ptr<WTF::ListHashSet<blink::LayoutBox *, 16, WTF::PtrHash<blink::LayoutBox>, WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16> >, std::__1::default_delete<WTF::ListHashSet<blink::LayoutBox *, 16, WTF::PtrHash<blink::LayoutBox>, WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16> > > >, WTF::PtrHash<const blink::LayoutBlock>, WTF::HashTraits<const blink::LayoutBlock *>, WTF::HashTraits<std::__1::unique_ptr<WTF::ListHashSet<blink::LayoutBox *, 16, WTF::PtrHash<blink::LayoutBox>, WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16> >, std::__1::default_delete<WTF::ListHashSet<blink::LayoutBox *, 16, WTF::PtrHash<blink::LayoutBox>, WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16> > > > >, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<const blink::LayoutBlock *, std::__1::unique_ptr<WTF::ListHashSet<blink::LayoutBox *, 16, WTF::PtrHash<blink::LayoutBox>, WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16> >, std::__1::default_delete<WTF::ListHashSet<blink::LayoutBox *, 16, WTF::PtrHash<blink::LayoutBox>, WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16> > > >, WTF::PtrHash<const blink::LayoutBlock>, WTF::HashTraits<const blink::LayoutBlock *>, WTF::HashTraits<std::__1::unique_ptr<WTF::ListHashSet<blink::LayoutBox *, 16, WTF::PtrHash<blink::LayoutBox>, WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16> >, std::__1::default_delete<WTF::ListHashSet<blink::LayoutBox *, 16, WTF::PtrHash<blink::LayoutBox>, WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16> > > > >, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.WTF::StaticSingleton.3203" = type { %"class.WTF::StaticSingleton<WTF::HashMap<const blink::LayoutBox *, blink::LayoutBlock *, WTF::PtrHash<const blink::LayoutBox>, WTF::HashTraits<const blink::LayoutBox *>, WTF::HashTraits<blink::LayoutBlock *>, WTF::PartitionAllocator> >::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::HashMap<const blink::LayoutBox *, blink::LayoutBlock *, WTF::PtrHash<const blink::LayoutBox>, WTF::HashTraits<const blink::LayoutBox *>, WTF::HashTraits<blink::LayoutBlock *>, WTF::PartitionAllocator> >::InstanceStorage" = type { [24 x i8] }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.base::trace_event::TraceCategory" = type { i8, i32, i8* }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1827", i64 }
%"class.std::__1::vector.1827" = type { %"class.std::__1::__vector_base.1828" }
%"class.std::__1::__vector_base.1828" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1829" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1829" = type { %"struct.std::__1::__compressed_pair_elem.1830" }
%"struct.std::__1::__compressed_pair_elem.1830" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::HTMLQualifiedName" = type { %"class.blink::QualifiedName" }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1852, %"class.WTF::Vector.1853", %"class.std::__1::unique_ptr.1858", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.1884, %"class.blink::Persistent.1885" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.731", %"class.std::__1::unique_ptr.733" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1834", [4 x i8] }>
%"class.WTF::RefCounted.1834" = type { %"class.base::RefCounted.1835" }
%"class.base::RefCounted.1835" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::Color" = type { i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3461 }
%class.scoped_refptr.3461 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.3462", %"class.WTF::Vector.630", %"class.WTF::Vector.3464", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.3462" = type { %"class.base::RefCounted.3463" }
%"class.base::RefCounted.3463" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.630" = type { %"class.WTF::VectorBuffer.631" }
%"class.WTF::VectorBuffer.631" = type { %"class.WTF::VectorBufferBase.632" }
%"class.WTF::VectorBufferBase.632" = type { %"class.WTF::String"*, i32, i32 }
%"class.WTF::Vector.3464" = type { %"class.WTF::VectorBuffer.3465" }
%"class.WTF::VectorBuffer.3465" = type { %"class.WTF::VectorBufferBase.3466" }
%"class.WTF::VectorBufferBase.3466" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.3467 }
%union.anon.3467 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type opaque
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.441" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.771", %"class.WTF::Vector.771", i8, i32, %"class.blink::Member.1004", %"class.blink::Member.1006", %"class.blink::Member.1008", %"class.blink::Member.1010", %"class.blink::Member.1012", %"class.blink::Member.1014", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1022", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1028", %"class.blink::Member.1030", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1033", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.1056", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.1065", double, double, i64, i64, %"class.blink::HeapHashSet.1067", %"class.blink::HeapHashSet.1074", i16, i8, %"class.blink::Member.1081", %"class.blink::Member.1083", %"class.blink::Member.1407", %"class.blink::Member.1409", %"class.blink::TextLinkColors", %"class.blink::Member.1411", i8, [7 x i8], %"class.blink::HeapHashMap.1413", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1420", %"class.blink::Member.1425", %"class.blink::Member.1427", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1429", %"class.blink::HeapVector.1431", %"class.std::__1::unique_ptr.1439", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1445", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1458", %"class.WTF::Vector.1460", i8, i8, %"class.std::__1::unique_ptr.1465", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1471", i32, i8, %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::DocumentTiming", %"class.blink::Member.1479", i8, i32, %"class.blink::Member.1481", %"class.blink::Member.1483", %"class.blink::Member.1485", %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::Member.1487", %"class.WTF::HashMap.1489", %"class.blink::Member.1494", %"class.blink::Member.1496", %"class.blink::Member.1498", %"class.blink::Member.1500", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer.1054", %"class.blink::HeapHashSet.1502", i8, i32, %"class.blink::Member.1509", %"class.blink::Member.1511", i32, %"class.blink::Member.1513", %"class.blink::Member.1515", %"class.blink::Member.1517", %"class.std::__1::unique_ptr.1519", i64, %"class.std::__1::unique_ptr.1525", i32, i32, %"class.blink::Member.1536", %"class.blink::Member.1538", %"class.blink::Member.1540", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1542", %"class.WTF::Vector.1544", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1549", %"class.blink::Member.1556", %"class.std::__1::unique_ptr.1558", %"class.blink::Member.1564", i8, i8, %"class.WTF::String", %"class.blink::Member.1566", i8, [7 x i8], %"class.blink::HeapHashMap.1568", %"class.blink::HeapObserverSet", %"class.blink::Member.1582", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1584", i32, i8, i8, %"class.blink::WeakMember.1586", %"class.blink::Member.1587" }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.997" }
%"class.blink::HeapHashMap.997" = type { %"class.WTF::HashMap.1000" }
%"class.WTF::HashMap.1000" = type { %"class.WTF::HashTable.1001" }
%"class.WTF::HashTable.1001" = type <{ %"struct.WTF::KeyValuePair.1003"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1003" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.771" = type { %"class.WTF::VectorBuffer.772" }
%"class.WTF::VectorBuffer.772" = type { %"class.WTF::VectorBufferBase.773" }
%"class.WTF::VectorBufferBase.773" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.774 }
%class.scoped_refptr.774 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.775", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.775" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.1004" = type { %"class.blink::MemberBase.1005" }
%"class.blink::MemberBase.1005" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1006" = type { %"class.blink::MemberBase.1007" }
%"class.blink::MemberBase.1007" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1611", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1678", i32, i8, [3 x i8], %"class.blink::HeapVector.1680", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1688", %"class.blink::Member.1690", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1699", %"class.blink::Member.1822", %"class.blink::Member.1824", i8, [7 x i8] }>
%"class.blink::Supplementable.1611" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1612" }
%"class.blink::HeapHashMap.1612" = type { %"class.WTF::HashMap.1615" }
%"class.WTF::HashMap.1615" = type { %"class.WTF::HashTable.1616" }
%"class.WTF::HashTable.1616" = type <{ %"struct.WTF::KeyValuePair.1618"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1618" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1627" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1619" }
%"class.blink::HeapObserverSet.1619" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1620" }
%"class.blink::HeapHashSet.1620" = type { %"class.WTF::HashSet.1623" }
%"class.WTF::HashSet.1623" = type { %"class.WTF::HashTable.1624" }
%"class.WTF::HashTable.1624" = type <{ %"class.blink::WeakMember.1626"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1626" = type opaque
%"class.blink::Supplementable.1627" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1628" }
%"class.blink::HeapHashMap.1628" = type { %"class.WTF::HashMap.1631" }
%"class.WTF::HashMap.1631" = type { %"class.WTF::HashTable.1632" }
%"class.WTF::HashTable.1632" = type <{ %"struct.WTF::KeyValuePair.1634"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1634" = type { i8*, %"class.blink::Member.3457" }
%"class.blink::Member.3457" = type { %"class.blink::MemberBase.3458" }
%"class.blink::MemberBase.3458" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.3459" }
%"class.blink::Member.3459" = type { %"class.blink::MemberBase.3460" }
%"class.blink::MemberBase.3460" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1635, %"class.std::__1::unique_ptr.1644", %"class.std::__1::unique_ptr.1644", %"class.std::__1::unique_ptr.1668", %"class.std::__1::unique_ptr.1668", %"class.blink::Member.1006", i32, [4 x i8], %"class.WTF::HashSet.1674", i32, i32 }
%class.scoped_refptr.1635 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1636", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1638", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1643 }
%"class.WTF::RefCounted.1636" = type { %"class.base::RefCounted.1637" }
%"class.base::RefCounted.1637" = type { %"class.base::subtle::RefCountedBase" }
%"class.absl::optional.1638" = type { %"class.absl::optional_internal::optional_data.1639" }
%"class.absl::optional_internal::optional_data.1639" = type { %"class.absl::optional_internal::optional_data_base.1640" }
%"class.absl::optional_internal::optional_data_base.1640" = type { %"class.absl::optional_internal::optional_data_dtor_base.1641" }
%"class.absl::optional_internal::optional_data_dtor_base.1641" = type { i8, %union.anon.1642 }
%union.anon.1642 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%class.scoped_refptr.1643 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1644" = type { %"class.std::__1::__compressed_pair.1645" }
%"class.std::__1::__compressed_pair.1645" = type { %"struct.std::__1::__compressed_pair_elem.1646" }
%"struct.std::__1::__compressed_pair_elem.1646" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1655", %"class.std::__1::map.1664"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1638" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1647", %"class.std::__1::__compressed_pair.1652" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1647" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"struct.std::__1::__compressed_pair_elem.1648" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1652" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1655" = type { %"class.std::__1::__tree.1656" }
%"class.std::__1::__tree.1656" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1657", %"class.std::__1::__compressed_pair.1661" }
%"class.std::__1::__compressed_pair.1657" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"class.std::__1::__compressed_pair.1661" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1664" = type opaque
%"class.std::__1::unique_ptr.1668" = type { %"class.std::__1::__compressed_pair.1669" }
%"class.std::__1::__compressed_pair.1669" = type { %"struct.std::__1::__compressed_pair_elem.1670" }
%"struct.std::__1::__compressed_pair_elem.1670" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1674" = type { %"class.WTF::HashTable.1675" }
%"class.WTF::HashTable.1675" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1678" = type { %"class.blink::MemberBase.1679" }
%"class.blink::MemberBase.1679" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1680" = type { %"class.WTF::Vector.1683" }
%"class.WTF::Vector.1683" = type { %"class.WTF::VectorBuffer.1684" }
%"class.WTF::VectorBuffer.1684" = type { %"class.WTF::VectorBufferBase.1685" }
%"class.WTF::VectorBufferBase.1685" = type { %"class.blink::Member.1686"*, i32, i32 }
%"class.blink::Member.1686" = type opaque
%"class.blink::Member.1688" = type { %"class.blink::MemberBase.1689" }
%"class.blink::MemberBase.1689" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1690" = type { %"class.blink::MemberBase.1691" }
%"class.blink::MemberBase.1691" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1692", i32, i32 }
%"class.blink::HeapHashMap.1692" = type { %"class.WTF::HashMap.1695" }
%"class.WTF::HashMap.1695" = type { %"class.WTF::HashTable.1696" }
%"class.WTF::HashTable.1696" = type <{ %"struct.WTF::KeyValuePair.1698"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1698" = type opaque
%"class.std::__1::unique_ptr.1699" = type { %"class.std::__1::__compressed_pair.1700" }
%"class.std::__1::__compressed_pair.1700" = type { %"struct.std::__1::__compressed_pair_elem.1701" }
%"struct.std::__1::__compressed_pair_elem.1701" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1702" }
%"class.std::__1::unique_ptr.1702" = type { %"class.std::__1::__compressed_pair.1703" }
%"class.std::__1::__compressed_pair.1703" = type { %"struct.std::__1::__compressed_pair_elem.1704" }
%"struct.std::__1::__compressed_pair_elem.1704" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1705" }
%"class.WTF::Vector.1705" = type { %"class.WTF::VectorBuffer.1706" }
%"class.WTF::VectorBuffer.1706" = type { %"class.WTF::VectorBufferBase.1707" }
%"class.WTF::VectorBufferBase.1707" = type { %"class.mojo::StructPtr.1708"*, i32, i32 }
%"class.mojo::StructPtr.1708" = type { %"class.std::__1::unique_ptr.1709" }
%"class.std::__1::unique_ptr.1709" = type { %"class.std::__1::__compressed_pair.1710" }
%"class.std::__1::__compressed_pair.1710" = type { %"struct.std::__1::__compressed_pair_elem.1711" }
%"struct.std::__1::__compressed_pair_elem.1711" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1712", %"class.WTF::HashMap.1719", %"class.WTF::HashMap.1724", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.630", i32, %"class.mojo::StructPtr.1729", %"class.WTF::Vector.630" }
%"class.mojo::StructPtr.1712" = type { %"class.std::__1::unique_ptr.1713" }
%"class.std::__1::unique_ptr.1713" = type { %"class.std::__1::__compressed_pair.1714" }
%"class.std::__1::__compressed_pair.1714" = type { %"struct.std::__1::__compressed_pair_elem.1715" }
%"struct.std::__1::__compressed_pair_elem.1715" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1719" = type { %"class.WTF::HashTable.1720" }
%"class.WTF::HashTable.1720" = type <{ %"struct.WTF::KeyValuePair.1723"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1723" = type opaque
%"class.WTF::HashMap.1724" = type { %"class.WTF::HashTable.1725" }
%"class.WTF::HashTable.1725" = type <{ %"struct.WTF::KeyValuePair.1728"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1728" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1729" = type { %"class.std::__1::unique_ptr.1730" }
%"class.std::__1::unique_ptr.1730" = type { %"class.std::__1::__compressed_pair.1731" }
%"class.std::__1::__compressed_pair.1731" = type { %"struct.std::__1::__compressed_pair_elem.1732" }
%"struct.std::__1::__compressed_pair_elem.1732" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.630", i8, i8, [6 x i8] }>
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1813" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1744", i32 }>
%"class.std::__1::unique_ptr.1744" = type { %"class.std::__1::__compressed_pair.1745" }
%"class.std::__1::__compressed_pair.1745" = type { %"struct.std::__1::__compressed_pair_elem.1746" }
%"struct.std::__1::__compressed_pair_elem.1746" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1747", %"class.absl::optional.1748", %"class.absl::optional.1753", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1766", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1788", %"class.std::__1::map.1799", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1808", i8, %class.scoped_refptr.1758, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1809" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1747" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1748" = type { %"class.absl::optional_internal::optional_data.1749" }
%"class.absl::optional_internal::optional_data.1749" = type { %"class.absl::optional_internal::optional_data_base.1750" }
%"class.absl::optional_internal::optional_data_base.1750" = type { %"class.absl::optional_internal::optional_data_dtor_base.1751" }
%"class.absl::optional_internal::optional_data_dtor_base.1751" = type { i8, %union.anon.1752 }
%union.anon.1752 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1753" = type { %"class.absl::optional_internal::optional_data.1754" }
%"class.absl::optional_internal::optional_data.1754" = type { %"class.absl::optional_internal::optional_data_base.1755" }
%"class.absl::optional_internal::optional_data_base.1755" = type { %"class.absl::optional_internal::optional_data_dtor_base.1756" }
%"class.absl::optional_internal::optional_data_dtor_base.1756" = type { i8, %union.anon.1757 }
%union.anon.1757 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1758, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1759" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::TickClock" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1759" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.993 }
%class.scoped_refptr.993 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1764 }
%class.scoped_refptr.1764 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1826", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1758, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1826" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1765 }
%class.scoped_refptr.1765 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1766" = type { %"class.std::__1::__compressed_pair.1767" }
%"class.std::__1::__compressed_pair.1767" = type { %"struct.std::__1::__compressed_pair_elem.1768" }
%"struct.std::__1::__compressed_pair_elem.1768" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1769", %class.scoped_refptr.1770 }
%"class.base::RepeatingCallback.1769" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1770 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1771", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1771" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1775", %"class.std::__1::unique_ptr.1781", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1787" }
%"class.std::__1::unique_ptr.1775" = type { %"class.std::__1::__compressed_pair.1776" }
%"class.std::__1::__compressed_pair.1776" = type { %"struct.std::__1::__compressed_pair_elem.1777" }
%"struct.std::__1::__compressed_pair_elem.1777" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1781" = type { %"class.std::__1::__compressed_pair.1782" }
%"class.std::__1::__compressed_pair.1782" = type { %"struct.std::__1::__compressed_pair_elem.1783" }
%"struct.std::__1::__compressed_pair_elem.1783" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1787" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1788" = type { %"class.std::__1::__tree.1789" }
%"class.std::__1::__tree.1789" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1790", %"class.std::__1::__compressed_pair.1794" }
%"class.std::__1::__compressed_pair.1790" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"class.std::__1::__compressed_pair.1794" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1799" = type { %"class.std::__1::__tree.1800" }
%"class.std::__1::__tree.1800" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1801", %"class.std::__1::__compressed_pair.1805" }
%"class.std::__1::__compressed_pair.1801" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"class.std::__1::__compressed_pair.1805" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1808" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1758 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.779" }>
%"class.base::RefCountedThreadSafe.779" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1809" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1813" = type { %"class.std::__1::__compressed_pair.1814" }
%"class.std::__1::__compressed_pair.1814" = type { %"struct.std::__1::__compressed_pair_elem.1815" }
%"struct.std::__1::__compressed_pair_elem.1815" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1822" = type { %"class.blink::MemberBase.1823" }
%"class.blink::MemberBase.1823" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1824" = type { %"class.blink::MemberBase.1825" }
%"class.blink::MemberBase.1825" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.1008" = type { %"class.blink::MemberBase.1009" }
%"class.blink::MemberBase.1009" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1010" = type { %"class.blink::MemberBase.1011" }
%"class.blink::MemberBase.1011" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1012" = type { %"class.blink::MemberBase.1013" }
%"class.blink::MemberBase.1013" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1014" = type { %"class.blink::MemberBase.1015" }
%"class.blink::MemberBase.1015" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1022" = type { %"class.std::__1::__compressed_pair.1023" }
%"class.std::__1::__compressed_pair.1023" = type { %"struct.std::__1::__compressed_pair_elem.1024" }
%"struct.std::__1::__compressed_pair_elem.1024" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.1016" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"class.blink::KURL"* }
%"class.blink::Member.1028" = type { %"class.blink::MemberBase.1029" }
%"class.blink::MemberBase.1029" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1030" = type { %"class.blink::MemberBase.1031" }
%"class.blink::MemberBase.1031" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.393, %"class.WTF::Vector.412", %"class.WTF::Vector.412", %"class.blink::Member.318", %"class.blink::Member.417", %"class.blink::HeapHashSet", %"class.blink::Member.326", %"class.WTF::HashSet.425", %"class.WTF::TextPosition", %"class.blink::Member.429", %"class.blink::HeapVector.431", %"class.blink::Member.438" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type opaque
%class.scoped_refptr.393 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.394", %"class.WTF::Vector.396" }
%"class.WTF::RefCounted.394" = type { %"class.base::RefCounted.395" }
%"class.base::RefCounted.395" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.396" = type { %"class.WTF::VectorBuffer.397" }
%"class.WTF::VectorBuffer.397" = type { %"class.WTF::VectorBufferBase.398" }
%"class.WTF::VectorBufferBase.398" = type { %"class.std::__1::unique_ptr.399"*, i32, i32 }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.402", %"class.WTF::String" }
%"class.WTF::Vector.402" = type { %"class.WTF::VectorBuffer.403" }
%"class.WTF::VectorBuffer.403" = type { %"class.WTF::VectorBufferBase.404" }
%"class.WTF::VectorBufferBase.404" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.WTF::Vector.412" = type { %"class.WTF::VectorBuffer.413" }
%"class.WTF::VectorBuffer.413" = type { %"class.WTF::VectorBufferBase.414" }
%"class.WTF::VectorBufferBase.414" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.417" = type { %"class.blink::MemberBase.418" }
%"class.blink::MemberBase.418" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.419" }
%"class.blink::Member.419" = type { %"class.blink::MemberBase.420" }
%"class.blink::MemberBase.420" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.423" }
%"class.WTF::HashTable.423" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.WTF::HashSet.425" = type { %"class.WTF::HashTable.426" }
%"class.WTF::HashTable.426" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.429" = type { %"class.blink::MemberBase.430" }
%"class.blink::MemberBase.430" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.393, %"class.blink::Member.389", %"class.blink::Member.417" }
%"class.blink::HeapVector.431" = type { %"class.WTF::Vector.434" }
%"class.WTF::Vector.434" = type { %"class.WTF::VectorBuffer.435" }
%"class.WTF::VectorBuffer.435" = type { %"class.WTF::VectorBufferBase.436" }
%"class.WTF::VectorBufferBase.436" = type { %"class.blink::Member.417"*, i32, i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1032 }
%class.scoped_refptr.1032 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.1033" = type { %"class.WTF::VectorBuffer.1034" }
%"class.WTF::VectorBuffer.1034" = type { %"class.WTF::VectorBufferBase.1035" }
%"class.WTF::VectorBufferBase.1035" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.1036 }
%class.scoped_refptr.1036 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.1037", i32, i32, %"class.blink::Persistent.1039" }
%"class.WTF::RefCounted.1037" = type { %"class.base::RefCounted.1038" }
%"class.base::RefCounted.1038" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.1039" = type { %"class.blink::PersistentBase.1040" }
%"class.blink::PersistentBase.1040" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.1043" }
%"class.blink::HeapHashMap.1043" = type { %"class.WTF::HashMap.1046" }
%"class.WTF::HashMap.1046" = type { %"class.WTF::HashTable.1047" }
%"class.WTF::HashTable.1047" = type <{ %"struct.WTF::KeyValuePair.1049"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1049" = type { %"class.blink::WeakMember.1050", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.1050" = type { %"class.blink::MemberBase.1051" }
%"class.blink::MemberBase.1051" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::Member.1056" = type { %"class.blink::MemberBase.1057" }
%"class.blink::MemberBase.1057" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1058" }
%"class.blink::HeapHashMap.1058" = type { %"class.WTF::HashMap.1061" }
%"class.WTF::HashMap.1061" = type { %"class.WTF::HashTable.1062" }
%"class.WTF::HashTable.1062" = type <{ %"struct.WTF::KeyValuePair.1064"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1064" = type opaque
%"class.blink::Member.1065" = type { %"class.blink::MemberBase.1066" }
%"class.blink::MemberBase.1066" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type { %"class.blink::WeakMember.1055", %"class.blink::WeakMember.3184", %"class.blink::Member.318", %"class.blink::HeapHashSet.3185", %"class.blink::WeakMember.3184" }
%"class.blink::WeakMember.1055" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.3185" = type { %"class.WTF::HashSet.3188" }
%"class.WTF::HashSet.3188" = type { %"class.WTF::HashTable.3189" }
%"class.WTF::HashTable.3189" = type <{ %"class.blink::WeakMember.3184"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3184" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.blink::HeapHashSet.1067" = type { %"class.WTF::HashSet.1070" }
%"class.WTF::HashSet.1070" = type { %"class.WTF::HashTable.1071" }
%"class.WTF::HashTable.1071" = type <{ %"class.blink::WeakMember.1073"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1073" = type opaque
%"class.blink::HeapHashSet.1074" = type { %"class.WTF::HashSet.1077" }
%"class.WTF::HashSet.1077" = type { %"class.WTF::HashTable.1078" }
%"class.WTF::HashTable.1078" = type <{ %"class.blink::WeakMember.1080"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1080" = type opaque
%"class.blink::Member.1081" = type { %"class.blink::MemberBase.1082" }
%"class.blink::MemberBase.1082" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.1087", %"class.blink::Member.1114", %"class.blink::HeapHashMap.1116", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1123", %"class.blink::HeapHashSet.1123", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1129", %"class.blink::Member.1141", %"class.blink::Member.1170", %"class.blink::Member.1172", %"class.blink::Member.1178", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1340", %"class.blink::Member.1346", %"class.blink::HeapHashMap.1348", %"class.blink::HeapHashMap.1355", %"class.std::__1::unique_ptr.1362", i32, %"class.blink::HeapVector.1368", %"class.blink::HeapVector.1368", %"class.blink::HeapVector.1099", %"class.blink::HeapHashSet.1376", %"class.blink::HeapHashMap.1383", %"class.blink::Member.1390", %"class.blink::HeapHashMap.1392", %class.scoped_refptr.1399, %class.scoped_refptr.259, %"class.blink::Member.1304", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1400", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1091", %"class.blink::HeapVector.1099", i8 }>
%"class.blink::HeapVector.1091" = type { %"class.WTF::Vector.1094" }
%"class.WTF::Vector.1094" = type { %"class.WTF::VectorBuffer.1095" }
%"class.WTF::VectorBuffer.1095" = type { %"class.WTF::VectorBufferBase.1096" }
%"class.WTF::VectorBufferBase.1096" = type { %"class.blink::Member.1097"*, i32, i32 }
%"class.blink::Member.1097" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1110", %"class.blink::Member.1112", %"class.blink::Member.1112", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1110" = type <{ %"class.blink::Member.1112"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1112" = type { %"class.blink::MemberBase.1113" }
%"class.blink::MemberBase.1113" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1112", %"class.blink::Member.1112" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.1114" = type { %"class.blink::MemberBase.1115" }
%"class.blink::MemberBase.1115" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.1116" = type { %"class.WTF::HashMap.1119" }
%"class.WTF::HashMap.1119" = type { %"class.WTF::HashTable.1120" }
%"class.WTF::HashTable.1120" = type <{ %"struct.WTF::KeyValuePair.1122"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1122" = type opaque
%"class.blink::HeapHashSet.1123" = type { %"class.WTF::HashSet.1126" }
%"class.WTF::HashSet.1126" = type { %"class.WTF::HashTable.1127" }
%"class.WTF::HashTable.1127" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1129" = type { %"class.blink::MemberBase.1130" }
%"class.blink::MemberBase.1130" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1131", %"class.blink::Member.1133" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1131" = type { %"class.blink::MemberBase.1132" }
%"class.blink::MemberBase.1132" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.687" }
%"class.blink::HeapHashMap.687" = type { %"class.WTF::HashMap.690" }
%"class.WTF::HashMap.690" = type { %"class.WTF::HashTable.691" }
%"class.WTF::HashTable.691" = type <{ %"struct.WTF::KeyValuePair.693"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.693" = type opaque
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1137", %"class.blink::Member.1139" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1137" = type { %"class.blink::MemberBase.1138" }
%"class.blink::MemberBase.1138" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1139" = type { %"class.blink::MemberBase.1140" }
%"class.blink::MemberBase.1140" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1602", %"class.blink::Member.1133", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.911] }
%"class.blink::HeapVector.1602" = type { %"class.WTF::Vector.1605" }
%"class.WTF::Vector.1605" = type { %"class.WTF::VectorBuffer.1606" }
%"class.WTF::VectorBuffer.1606" = type { %"class.WTF::VectorBufferBase.1607" }
%"class.WTF::VectorBufferBase.1607" = type { %"class.blink::Member.1139"*, i32, i32 }
%class.sk_sp.911 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.912, i32, %"class.absl::optional.913", i8, i32 }
%class.sk_sp.912 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.913" = type { %"class.absl::optional_internal::optional_data.914" }
%"class.absl::optional_internal::optional_data.914" = type { %"class.absl::optional_internal::optional_data_base.915" }
%"class.absl::optional_internal::optional_data_base.915" = type { %"class.absl::optional_internal::optional_data_dtor_base.916" }
%"class.absl::optional_internal::optional_data_dtor_base.916" = type { i8, %union.anon.917 }
%union.anon.917 = type { %struct.SkRect }
%"class.blink::Member.1141" = type { %"class.blink::MemberBase.1142" }
%"class.blink::MemberBase.1142" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1114", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1145" }
%"class.blink::HeapHashMap.1145" = type { %"class.WTF::HashMap.1148" }
%"class.WTF::HashMap.1148" = type { %"class.WTF::HashTable.1149" }
%"class.WTF::HashTable.1149" = type <{ %"struct.WTF::KeyValuePair.1151"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1151" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1152", %"class.std::__1::unique_ptr.1164" }
%"class.blink::HeapVector.1152" = type { %"class.WTF::Vector.1155" }
%"class.WTF::Vector.1155" = type { %"class.WTF::VectorBuffer.1156" }
%"class.WTF::VectorBuffer.1156" = type { %"class.WTF::VectorBufferBase.1157" }
%"class.WTF::VectorBufferBase.1157" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1158" }
%"class.WTF::Vector.1158" = type { %"class.WTF::VectorBuffer.1159" }
%"class.WTF::VectorBuffer.1159" = type { %"class.WTF::VectorBufferBase.1160", [16 x i8] }
%"class.WTF::VectorBufferBase.1160" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1164" = type { %"class.std::__1::__compressed_pair.1165" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.1166" }
%"struct.std::__1::__compressed_pair_elem.1166" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1170" = type { %"class.blink::MemberBase.1171" }
%"class.blink::MemberBase.1171" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1172" = type { %"class.blink::MemberBase.1173" }
%"class.blink::MemberBase.1173" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1176", i8, [7 x i8] }>
%"class.blink::Member.1176" = type { %"class.blink::MemberBase.1177" }
%"class.blink::MemberBase.1177" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.1178" = type { %"class.blink::MemberBase.1179" }
%"class.blink::MemberBase.1179" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.1200", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.1182", %"class.WTF::HashMap.1182", %"class.WTF::HashMap.1182", %"class.WTF::HashMap.1187", %class.scoped_refptr.1192, %class.scoped_refptr.1199, %class.scoped_refptr.1198, %"class.WTF::Vector.412", %"class.WTF::Vector.412", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.1182" = type { %"class.WTF::HashTable.1183" }
%"class.WTF::HashTable.1183" = type <{ %"struct.WTF::KeyValuePair.1186"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1186" = type { %"class.WTF::AtomicString", %class.scoped_refptr.3475 }
%class.scoped_refptr.3475 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.1193", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1195", %"union.blink::InvalidationSet::Backing.1196", %"union.blink::InvalidationSet::Backing.1197", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.1193" = type { %"class.base::RefCounted.1194" }
%"class.base::RefCounted.1194" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1195" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1196" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.1197" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.1187" = type { %"class.WTF::HashTable.1188" }
%"class.WTF::HashTable.1188" = type <{ %"struct.WTF::KeyValuePair.1191"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1191" = type opaque
%class.scoped_refptr.1192 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.1198, %class.scoped_refptr.1198 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.1193", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.1195", %"union.blink::InvalidationSet::Backing.1196", %"union.blink::InvalidationSet::Backing.1197", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.1199 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.1198 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::Member.1200" = type { %"class.blink::MemberBase.1201" }
%"class.blink::MemberBase.1201" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.1204", %"class.blink::HeapHashMap.1204", %"class.blink::HeapHashMap.1204", %"class.blink::HeapHashMap.1204", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::HeapVector.1211", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.1247", %"class.blink::HeapVector.1255", %"class.blink::HeapVector.1263", %"class.blink::HeapVector.1280", %"class.blink::HeapVector.1288", %"class.blink::HeapVector.1296", %"class.blink::HeapVector.1309", %"class.WTF::Vector.1316", i32, %"class.blink::Member.1322" }
%"class.blink::HeapHashMap.1204" = type { %"class.WTF::HashMap.1207" }
%"class.WTF::HashMap.1207" = type { %"class.WTF::HashTable.1208" }
%"class.WTF::HashTable.1208" = type <{ %"struct.WTF::KeyValuePair.1210"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1210" = type { %"class.WTF::AtomicString", %"class.blink::Member.3485" }
%"class.blink::Member.3485" = type { %"class.blink::MemberBase.3486" }
%"class.blink::MemberBase.3486" = type { %"class.blink::HeapVector.1211"* }
%"class.blink::HeapVector.1211" = type { %"class.WTF::Vector.1214" }
%"class.WTF::Vector.1214" = type { %"class.WTF::VectorBuffer.1215" }
%"class.WTF::VectorBuffer.1215" = type { %"class.WTF::VectorBufferBase.1216" }
%"class.WTF::VectorBufferBase.1216" = type { %"class.blink::Member.1217"*, i32, i32 }
%"class.blink::Member.1217" = type { %"class.blink::MemberBase.1218" }
%"class.blink::MemberBase.1218" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.1221", i64, [4 x i32] }
%"class.blink::Member.1221" = type { %"class.blink::MemberBase.1222" }
%"class.blink::MemberBase.1222" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.1242" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.1242" = type { %"class.blink::MemberBase.1243" }
%"class.blink::MemberBase.1243" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.1247" = type { %"class.WTF::Vector.1250" }
%"class.WTF::Vector.1250" = type { %"class.WTF::VectorBuffer.1251" }
%"class.WTF::VectorBuffer.1251" = type { %"class.WTF::VectorBufferBase.1252" }
%"class.WTF::VectorBufferBase.1252" = type { %"class.blink::Member.1253"*, i32, i32 }
%"class.blink::Member.1253" = type { %"class.blink::MemberBase.3481" }
%"class.blink::MemberBase.3481" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.1255" = type { %"class.WTF::Vector.1258" }
%"class.WTF::Vector.1258" = type { %"class.WTF::VectorBuffer.1259" }
%"class.WTF::VectorBuffer.1259" = type { %"class.WTF::VectorBufferBase.1260" }
%"class.WTF::VectorBufferBase.1260" = type { %"class.blink::Member.1261"*, i32, i32 }
%"class.blink::Member.1261" = type { %"class.blink::MemberBase.3482" }
%"class.blink::MemberBase.3482" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.1263" = type { %"class.WTF::Vector.1266" }
%"class.WTF::Vector.1266" = type { %"class.WTF::VectorBuffer.1267" }
%"class.WTF::VectorBuffer.1267" = type { %"class.WTF::VectorBufferBase.1268" }
%"class.WTF::VectorBufferBase.1268" = type { %"class.blink::Member.1269"*, i32, i32 }
%"class.blink::Member.1269" = type { %"class.blink::MemberBase.1270" }
%"class.blink::MemberBase.1270" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.1271", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.1271" = type { %"class.WTF::Vector.1274" }
%"class.WTF::Vector.1274" = type { %"class.WTF::VectorBuffer.1275" }
%"class.WTF::VectorBuffer.1275" = type { %"class.WTF::VectorBufferBase.1276" }
%"class.WTF::VectorBufferBase.1276" = type { %"class.blink::Member.1277"*, i32, i32 }
%"class.blink::Member.1277" = type opaque
%"class.blink::HeapVector.1280" = type { %"class.WTF::Vector.1283" }
%"class.WTF::Vector.1283" = type { %"class.WTF::VectorBuffer.1284" }
%"class.WTF::VectorBuffer.1284" = type { %"class.WTF::VectorBufferBase.1285" }
%"class.WTF::VectorBufferBase.1285" = type { %"class.blink::Member.1286"*, i32, i32 }
%"class.blink::Member.1286" = type { %"class.blink::MemberBase.3483" }
%"class.blink::MemberBase.3483" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.1288" = type { %"class.WTF::Vector.1291" }
%"class.WTF::Vector.1291" = type { %"class.WTF::VectorBuffer.1292" }
%"class.WTF::VectorBuffer.1292" = type { %"class.WTF::VectorBufferBase.1293" }
%"class.WTF::VectorBufferBase.1293" = type { %"class.blink::Member.1294"*, i32, i32 }
%"class.blink::Member.1294" = type { %"class.blink::MemberBase.3484" }
%"class.blink::MemberBase.3484" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", i32, [4 x i8] }>
%"class.blink::HeapVector.1296" = type { %"class.WTF::Vector.1299" }
%"class.WTF::Vector.1299" = type { %"class.WTF::VectorBuffer.1300" }
%"class.WTF::VectorBuffer.1300" = type { %"class.WTF::VectorBufferBase.1301" }
%"class.WTF::VectorBufferBase.1301" = type { %"class.blink::Member.1302"*, i32, i32 }
%"class.blink::Member.1302" = type { %"class.blink::MemberBase.1303" }
%"class.blink::MemberBase.1303" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304", %"class.blink::Member.1304" }
%"class.blink::HeapVector.1309" = type { %"class.WTF::Vector.1312" }
%"class.WTF::Vector.1312" = type { %"class.WTF::VectorBuffer.1313" }
%"class.WTF::VectorBuffer.1313" = type { %"class.WTF::VectorBufferBase.1314" }
%"class.WTF::VectorBufferBase.1314" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.1221", i32, i32 }
%"class.WTF::Vector.1316" = type { %"class.WTF::VectorBuffer.1317" }
%"class.WTF::VectorBuffer.1317" = type { %"class.WTF::VectorBufferBase.1318" }
%"class.WTF::VectorBufferBase.1318" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.1319, i8, [7 x i8] }>
%class.scoped_refptr.1319 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.1322" = type { %"class.blink::MemberBase.1323" }
%"class.blink::MemberBase.1323" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.1326", %"class.blink::HeapHashMap.1326", %"class.blink::HeapHashMap.1326", %"class.blink::HeapHashMap.1326" }
%"class.blink::HeapHashMap.1326" = type { %"class.WTF::HashMap.1329" }
%"class.WTF::HashMap.1329" = type { %"class.WTF::HashTable.1330" }
%"class.WTF::HashTable.1330" = type <{ %"struct.WTF::KeyValuePair.1332"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1332" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1333" }
%"class.blink::HeapHashMap.1333" = type { %"class.WTF::HashMap.1336" }
%"class.WTF::HashMap.1336" = type { %"class.WTF::HashTable.1337" }
%"class.WTF::HashTable.1337" = type <{ %"struct.WTF::KeyValuePair.1339"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1339" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.3476", %"class.WTF::Vector.3476" }
%"class.WTF::Vector.3476" = type { %"class.WTF::VectorBuffer.3477" }
%"class.WTF::VectorBuffer.3477" = type { %"class.WTF::VectorBufferBase.3478" }
%"class.WTF::VectorBufferBase.3478" = type { %class.scoped_refptr.3475*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1340" = type { %"class.WTF::HashSet.1343" }
%"class.WTF::HashSet.1343" = type { %"class.WTF::HashTable.1344" }
%"class.WTF::HashTable.1344" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1346" = type { %"class.blink::MemberBase.1347" }
%"class.blink::MemberBase.1347" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.1348" = type { %"class.WTF::HashMap.1351" }
%"class.WTF::HashMap.1351" = type { %"class.WTF::HashTable.1352" }
%"class.WTF::HashTable.1352" = type <{ %"struct.WTF::KeyValuePair.1354"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1354" = type opaque
%"class.blink::HeapHashMap.1355" = type { %"class.WTF::HashMap.1358" }
%"class.WTF::HashMap.1358" = type { %"class.WTF::HashTable.1359" }
%"class.WTF::HashTable.1359" = type <{ %"struct.WTF::KeyValuePair.1361"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1361" = type opaque
%"class.std::__1::unique_ptr.1362" = type { %"class.std::__1::__compressed_pair.1363" }
%"class.std::__1::__compressed_pair.1363" = type { %"struct.std::__1::__compressed_pair_elem.1364" }
%"struct.std::__1::__compressed_pair_elem.1364" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1368" = type { %"class.WTF::Vector.1371" }
%"class.WTF::Vector.1371" = type { %"class.WTF::VectorBuffer.1372" }
%"class.WTF::VectorBuffer.1372" = type { %"class.WTF::VectorBufferBase.1373" }
%"class.WTF::VectorBufferBase.1373" = type { %"struct.std::__1::pair.1374"*, i32, i32 }
%"struct.std::__1::pair.1374" = type opaque
%"class.blink::HeapVector.1099" = type { %"class.WTF::Vector.1102" }
%"class.WTF::Vector.1102" = type { %"class.WTF::VectorBuffer.1103" }
%"class.WTF::VectorBuffer.1103" = type { %"class.WTF::VectorBufferBase.1104" }
%"class.WTF::VectorBufferBase.1104" = type { %"struct.std::__1::pair.1105"*, i32, i32 }
%"struct.std::__1::pair.1105" = type opaque
%"class.blink::HeapHashSet.1376" = type { %"class.WTF::HashSet.1379" }
%"class.WTF::HashSet.1379" = type { %"class.WTF::HashTable.1380" }
%"class.WTF::HashTable.1380" = type <{ %"class.blink::WeakMember.1382"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1382" = type { %"class.blink::MemberBase.390" }
%"class.blink::HeapHashMap.1383" = type { %"class.WTF::HashMap.1386" }
%"class.WTF::HashMap.1386" = type { %"class.WTF::HashTable.1387" }
%"class.WTF::HashTable.1387" = type <{ %"struct.WTF::KeyValuePair.1389"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1389" = type { %"class.WTF::AtomicString", %"class.blink::Member.1269" }
%"class.blink::Member.1390" = type { %"class.blink::MemberBase.1391" }
%"class.blink::MemberBase.1391" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1392" = type { %"class.WTF::HashMap.1395" }
%"class.WTF::HashMap.1395" = type { %"class.WTF::HashTable.1396" }
%"class.WTF::HashTable.1396" = type <{ %"struct.WTF::KeyValuePair.1398"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1398" = type opaque
%class.scoped_refptr.1399 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%"class.blink::Member.1304" = type { %"class.blink::MemberBase.1305" }
%"class.blink::MemberBase.1305" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapHashSet.1400" = type { %"class.WTF::HashSet.1403" }
%"class.WTF::HashSet.1403" = type { %"class.WTF::HashTable.1404" }
%"class.WTF::HashTable.1404" = type <{ %"class.blink::Member.1406"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1406" = type opaque
%"class.blink::Member.1407" = type { %"class.blink::MemberBase.1408" }
%"class.blink::MemberBase.1408" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1409" = type { %"class.blink::MemberBase.1410" }
%"class.blink::MemberBase.1410" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1411" = type { %"class.blink::MemberBase.1412" }
%"class.blink::MemberBase.1412" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1413" = type { %"class.WTF::HashMap.1416" }
%"class.WTF::HashMap.1416" = type { %"class.WTF::HashTable.1417" }
%"class.WTF::HashTable.1417" = type <{ %"struct.WTF::KeyValuePair.1419"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1419" = type opaque
%"class.WTF::Vector.1420" = type { %"class.WTF::VectorBuffer.1421" }
%"class.WTF::VectorBuffer.1421" = type { %"class.WTF::VectorBufferBase.1422" }
%"class.WTF::VectorBufferBase.1422" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1425" = type { %"class.blink::MemberBase.1426" }
%"class.blink::MemberBase.1426" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1427" = type { %"class.blink::MemberBase.1428" }
%"class.blink::MemberBase.1428" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1429" = type { %"class.blink::MemberBase.1430" }
%"class.blink::MemberBase.1430" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1431" = type { %"class.WTF::Vector.1434" }
%"class.WTF::Vector.1434" = type { %"class.WTF::VectorBuffer.1435" }
%"class.WTF::VectorBuffer.1435" = type { %"class.WTF::VectorBufferBase.1436" }
%"class.WTF::VectorBufferBase.1436" = type { %"class.blink::Member.1437"*, i32, i32 }
%"class.blink::Member.1437" = type opaque
%"class.std::__1::unique_ptr.1439" = type { %"class.std::__1::__compressed_pair.1440" }
%"class.std::__1::__compressed_pair.1440" = type { %"struct.std::__1::__compressed_pair_elem.1441" }
%"struct.std::__1::__compressed_pair_elem.1441" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1445" = type { %"class.WTF::HashSet.1448" }
%"class.WTF::HashSet.1448" = type { %"class.WTF::HashTable.1449" }
%"class.WTF::HashTable.1449" = type <{ %"class.blink::WeakMember.1451"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1451" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1452", i32, [4 x i8] }>
%"class.WTF::Vector.1452" = type { %"class.WTF::VectorBuffer.1453" }
%"class.WTF::VectorBuffer.1453" = type { %"class.WTF::VectorBufferBase.1454" }
%"class.WTF::VectorBufferBase.1454" = type { %"struct.std::__1::pair.1455"*, i32, i32 }
%"struct.std::__1::pair.1455" = type opaque
%"class.blink::Member.1458" = type { %"class.blink::MemberBase.1459" }
%"class.blink::MemberBase.1459" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1460" = type { %"class.WTF::VectorBuffer.1461" }
%"class.WTF::VectorBuffer.1461" = type { %"class.WTF::VectorBufferBase.1462" }
%"class.WTF::VectorBufferBase.1462" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1465" = type { %"class.std::__1::__compressed_pair.1466" }
%"class.std::__1::__compressed_pair.1466" = type { %"struct.std::__1::__compressed_pair_elem.1467" }
%"struct.std::__1::__compressed_pair_elem.1467" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.1942", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.2173", %"class.std::__1::unique_ptr.2179", %"class.std::__1::unique_ptr.2185", %class.scoped_refptr.1938, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.2191", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.1901", %"class.std::__1::unique_ptr.1911" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1836", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.std::__1::unique_ptr.1836" = type { %"class.std::__1::__compressed_pair.1837" }
%"class.std::__1::__compressed_pair.1837" = type { %"struct.std::__1::__compressed_pair_elem.1838" }
%"struct.std::__1::__compressed_pair_elem.1838" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1839", %"class.absl::optional.1844" }
%"class.absl::optional.1839" = type { %"class.absl::optional_internal::optional_data.1840" }
%"class.absl::optional_internal::optional_data.1840" = type { %"class.absl::optional_internal::optional_data_base.1841" }
%"class.absl::optional_internal::optional_data_base.1841" = type { %"class.absl::optional_internal::optional_data_dtor_base.1842" }
%"class.absl::optional_internal::optional_data_dtor_base.1842" = type { i8, %union.anon.1843 }
%union.anon.1843 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1844" = type { %"class.absl::optional_internal::optional_data.1845" }
%"class.absl::optional_internal::optional_data.1845" = type { %"class.absl::optional_internal::optional_data_base.1846" }
%"class.absl::optional_internal::optional_data_base.1846" = type { %"class.absl::optional_internal::optional_data_dtor_base.1847" }
%"class.absl::optional_internal::optional_data_dtor_base.1847" = type { i8, %union.anon.1848 }
%union.anon.1848 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::Persistent.1901" = type { %"class.blink::PersistentBase.1902" }
%"class.blink::PersistentBase.1902" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.1905", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type <{ %"class.blink::LayoutFlowThread.base", [7 x i8], %"class.blink::FragmentationContext", %"class.blink::LayoutMultiColumnSet"*, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutFlowThread.base" = type <{ %"class.blink::LayoutBlockFlow", %"class.WTF::LinkedHashSet.2155", %"class.WTF::PODIntervalTree.2168", i8 }>
%"class.WTF::LinkedHashSet.2155" = type { %"class.WTF::HashMap.2156", %"class.WTF::VectorBackedLinkedList.2161" }
%"class.WTF::HashMap.2156" = type { %"class.WTF::HashTable.2157" }
%"class.WTF::HashTable.2157" = type <{ %"struct.WTF::KeyValuePair.2160"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2160" = type opaque
%"class.WTF::VectorBackedLinkedList.2161" = type { %"class.WTF::Vector.2162", i32, i32 }
%"class.WTF::Vector.2162" = type { %"class.WTF::VectorBuffer.2163" }
%"class.WTF::VectorBuffer.2163" = type { %"class.WTF::VectorBufferBase.2164" }
%"class.WTF::VectorBufferBase.2164" = type { %"class.WTF::VectorBackedLinkedListNode.2165"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2165" = type opaque
%"class.WTF::PODIntervalTree.2168" = type { %"class.WTF::PODRedBlackTree.base.2172", [7 x i8] }
%"class.WTF::PODRedBlackTree.base.2172" = type <{ i32 (...)**, %class.scoped_refptr.2170, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node"*, i8 }>
%class.scoped_refptr.2170 = type { %"class.WTF::PODFreeListArena.2171"* }
%"class.WTF::PODFreeListArena.2171" = type opaque
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::LayoutMultiColumnSet *> >::Node" = type opaque
%"class.blink::FragmentationContext" = type { i32 (...)** }
%"class.blink::LayoutMultiColumnSet" = type opaque
%"class.std::__1::unique_ptr.1905" = type { %"class.std::__1::__compressed_pair.1906" }
%"class.std::__1::__compressed_pair.1906" = type { %"struct.std::__1::__compressed_pair_elem.1907" }
%"struct.std::__1::__compressed_pair_elem.1907" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.2819", %"class.WTF::HashMap.2824", %"class.WTF::String" }
%"class.WTF::Vector.2819" = type { %"class.WTF::VectorBuffer.2820" }
%"class.WTF::VectorBuffer.2820" = type { %"class.WTF::VectorBufferBase.2821" }
%"class.WTF::VectorBufferBase.2821" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.2824" = type { %"class.WTF::HashTable.2825" }
%"class.WTF::HashTable.2825" = type <{ %"struct.WTF::KeyValuePair.2828"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2828" = type opaque
%"class.std::__1::unique_ptr.1911" = type { %"class.std::__1::__compressed_pair.1912" }
%"class.std::__1::__compressed_pair.1912" = type { %"struct.std::__1::__compressed_pair_elem.1913" }
%"struct.std::__1::__compressed_pair_elem.1913" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.1914", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.1914" = type { %"class.WTF::HashTable.1917", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.1917" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.1920", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.1920" = type { %"class.std::__1::__compressed_pair.1921" }
%"class.std::__1::__compressed_pair.1921" = type { %"struct.std::__1::__compressed_pair_elem.1922" }
%"struct.std::__1::__compressed_pair_elem.1922" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.1923, %"class.std::__1::unique_ptr.1924", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1836", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.1923 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.2817", i16, %class.scoped_refptr.1923 }
%"class.WTF::ThreadSafeRefCounted.2817" = type { %"class.base::RefCountedThreadSafe.2818" }
%"class.base::RefCountedThreadSafe.2818" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.1924" = type { %"class.std::__1::__compressed_pair.1925" }
%"class.std::__1::__compressed_pair.1925" = type { %"struct.std::__1::__compressed_pair_elem.1926" }
%"struct.std::__1::__compressed_pair_elem.1926" = type { %"class.WTF::Vector.1927"* }
%"class.WTF::Vector.1927" = type { %"class.WTF::VectorBuffer.1928" }
%"class.WTF::VectorBuffer.1928" = type { %"class.WTF::VectorBufferBase.1929" }
%"class.WTF::VectorBufferBase.1929" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.1938, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.1942" = type { %"class.blink::MemberBase.1943" }
%"class.blink::MemberBase.1943" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.1946", %"class.blink::Member.1951", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.1953", i8, i32, %"class.blink::Color", %"class.absl::optional.1956", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.1961", %"class.blink::Member.1963", %"class.blink::Member.1963", %"class.std::__1::unique_ptr.1966", i32, [4 x i8], %"class.WTF::HashSet.1969", %"class.blink::Member.1976", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1978", %"class.blink::HeapHashSet.1985", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.1991", i8, %"class.blink::Member.1997", i8, i8, i32, %"class.blink::HeapLinkedHashSet", %"class.blink::HeapLinkedHashSet.2009", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2023", i8, %"class.std::__1::unique_ptr.2029", %"class.std::__1::unique_ptr.2105", %"class.WTF::Vector.2111", i32, %class.scoped_refptr.2116, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2117", %"class.blink::Member.2119", %"class.blink::Member.2121", %"class.blink::HeapHashSet.2123", %"class.blink::HeapHashSet.2130", %"class.std::__1::unique_ptr.2137", %"class.std::__1::unique_ptr.2144", %"class.WTF::Vector.771" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.WTF::HashSet.1946" = type { %"class.WTF::HashTable.1947" }
%"class.WTF::HashTable.1947" = type <{ %class.scoped_refptr.1950*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.1950 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::Member.1951" = type { %"class.blink::MemberBase.1952" }
%"class.blink::MemberBase.1952" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2377", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2385", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2399", %"class.blink::FrameLoader", %"class.blink::Member.2420", %"class.blink::Member.343", %"class.blink::Member.2421", %"class.blink::Member.2423", %"class.blink::Member.2439", %"class.blink::Member.2441", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2443", %class.scoped_refptr.2667, %"class.blink::Member.2668", %"class.blink::Member.2670", %"class.blink::Member.2672", %"class.blink::Member.2674", %"class.blink::Member.2676", %"class.blink::Member.2680", %"class.blink::Member.2682", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2686", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2692", %"class.std::__1::unique_ptr.2693", %"class.absl::optional.2365", i32, [4 x i8], %"class.std::__1::unique_ptr.2699", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2707", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2712", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2717", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2720", %"class.blink::Member.2722", %"class.blink::Member.2724", %"class.blink::Member.2726", %"class.mojo::StructPtr.2729", %"class.blink::Member.2738", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2740", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2210", %"class.blink::Member.2212", %"class.blink::Member.2214", i8, i32, i8, i32, %"class.blink::Member.2347", %"class.blink::Member.2237", %"class.blink::FrameLifecycle", %"class.blink::Member.2208", %"class.blink::Member.2208", %"class.blink::Member.2208", %"class.blink::Member.2208", %"class.blink::Member.2208", %"class.blink::Member.2208", %"class.blink::Member.1951", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2358", i8, %"class.base::UnguessableToken", %"class.absl::optional.2360", %"class.absl::optional.2365", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.2208", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2210" = type { %"class.blink::MemberBase.2211" }
%"class.blink::MemberBase.2211" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.3049", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.2208", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.3075", %"class.blink::Member.3079", %"class.blink::Member.3081", %"class.blink::Member.3083", %"class.blink::Member.3094", %"class.blink::Member.3096", %"class.blink::Member.3098", %"class.blink::Member.3100", %"class.blink::HeapObserverSet.3102", %"class.blink::Member.3110", %"class.blink::Member.3112", %"class.blink::Member.3114", %"class.blink::Member.3116", %"class.blink::Member.3118", %"class.blink::Member.3120", %"class.blink::Member.3122", %"class.blink::Member.3124", %"class.blink::Member.3126", %"class.blink::Member.3128", %"class.blink::Member.3130", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.3155", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.3162", %"class.blink::Member.2210", %"class.blink::Member.2210", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.3170", %"class.std::__1::unique_ptr.3176", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.3049" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.3050" }
%"class.blink::HeapHashMap.3050" = type { %"class.WTF::HashMap.3053" }
%"class.WTF::HashMap.3053" = type { %"class.WTF::HashTable.3054" }
%"class.WTF::HashTable.3054" = type <{ %"struct.WTF::KeyValuePair.3056"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3056" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.3057" }
%"class.std::__1::unique_ptr.3057" = type { %"class.std::__1::__compressed_pair.3058" }
%"class.std::__1::__compressed_pair.3058" = type { %"struct.std::__1::__compressed_pair_elem.3059" }
%"struct.std::__1::__compressed_pair_elem.3059" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type <{ %"class.blink::SettingsDelegate"*, %"class.blink::GenericFontFamilySettings", double, i32, [4 x i8], double, i32, i32, i32, i32, i32, [4 x i8], %"class.WTF::String", %"class.WTF::String", double, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", i32, i32, double, i32, i32, i32, i32, i32, %"class.blink::IntSize", [4 x i8], %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], double, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i32, i32, i32, [4 x i8], %"class.WTF::String", [14 x i8], [2 x i8] }>
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.3060", %"class.WTF::HashMap.3060", %"class.WTF::HashMap.3060", %"class.WTF::HashMap.3060", %"class.WTF::HashMap.3060", %"class.WTF::HashMap.3060", %"class.WTF::HashMap.3060", %"class.std::__1::unique_ptr.3065" }
%"class.WTF::HashMap.3060" = type { %"class.WTF::HashTable.3061" }
%"class.WTF::HashTable.3061" = type <{ %"struct.WTF::KeyValuePair.3064"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3064" = type opaque
%"class.std::__1::unique_ptr.3065" = type { %"class.std::__1::__compressed_pair.3066" }
%"class.std::__1::__compressed_pair.3066" = type { %"struct.std::__1::__compressed_pair_elem.3067" }
%"struct.std::__1::__compressed_pair_elem.3067" = type { %"class.WTF::Vector.3068"* }
%"class.WTF::Vector.3068" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.3075" = type { %"class.blink::MemberBase.3076" }
%"class.blink::MemberBase.3076" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.2210", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.blink::Member.3079" = type { %"class.blink::MemberBase.3080" }
%"class.blink::MemberBase.3080" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.3081" = type { %"class.blink::MemberBase.3082" }
%"class.blink::MemberBase.3082" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type opaque
%"class.blink::Member.3083" = type { %"class.blink::MemberBase.3084" }
%"class.blink::MemberBase.3084" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::PositionWithAffinityTemplate", %"class.std::__1::unique_ptr.3087" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1055" }
%"class.blink::PositionWithAffinityTemplate" = type <{ %"class.blink::PositionTemplate", i32, [4 x i8] }>
%"class.blink::PositionTemplate" = type { %"class.blink::Member.318", i32, i32 }
%"class.std::__1::unique_ptr.3087" = type { %"class.std::__1::__compressed_pair.3088" }
%"class.std::__1::__compressed_pair.3088" = type { %"struct.std::__1::__compressed_pair_elem.3089" }
%"struct.std::__1::__compressed_pair_elem.3089" = type { %"class.blink::CaretDisplayItemClient"* }
%"class.blink::CaretDisplayItemClient" = type <{ %"class.blink::DisplayItemClient.base", [3 x i8], %"class.blink::Color", %"struct.blink::PhysicalRect", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*, %"class.blink::NGPhysicalBoxFragment"*, i8, i8, [6 x i8] }>
%"class.blink::NGPhysicalBoxFragment" = type { %"class.blink::NGPhysicalFragment", i24, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::NGInkOverflow", [0 x %"struct.blink::NGLink"] }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.2973", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.2975, %"class.std::__1::unique_ptr.2978" }
%"class.WTF::RefCounted.2973" = type { %"class.base::RefCounted.2974" }
%"class.base::RefCounted.2974" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.2975 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.2976", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.2976" = type { %"class.base::RefCounted.2977" }
%"class.base::RefCounted.2977" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2978" = type { %"class.std::__1::__compressed_pair.2979" }
%"class.std::__1::__compressed_pair.2979" = type { %"struct.std::__1::__compressed_pair_elem.2980" }
%"struct.std::__1::__compressed_pair_elem.2980" = type { %"class.WTF::Vector.2981"* }
%"class.WTF::Vector.2981" = type { %"class.WTF::VectorBuffer.2982" }
%"class.WTF::VectorBuffer.2982" = type { %"class.WTF::VectorBufferBase.2983" }
%"class.WTF::VectorBufferBase.2983" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.2984 }
%union.anon.2984 = type { %"class.blink::LineBoxList" }
%"class.blink::NGInkOverflow" = type { %union.anon.3090 }
%union.anon.3090 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"struct.blink::NGLink" = type { %"class.blink::NGPhysicalFragment"*, %"struct.blink::PhysicalOffset" }
%"class.blink::Member.3094" = type { %"class.blink::MemberBase.3095" }
%"class.blink::MemberBase.3095" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.3096" = type { %"class.blink::MemberBase.3097" }
%"class.blink::MemberBase.3097" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.3098" = type { %"class.blink::MemberBase.3099" }
%"class.blink::MemberBase.3099" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.3100" = type { %"class.blink::MemberBase.3101" }
%"class.blink::MemberBase.3101" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.3102" = type { i32, [4 x i8], %"class.blink::HeapHashSet.3103" }
%"class.blink::HeapHashSet.3103" = type { %"class.WTF::HashSet.3106" }
%"class.WTF::HashSet.3106" = type { %"class.WTF::HashTable.3107" }
%"class.WTF::HashTable.3107" = type <{ %"class.blink::WeakMember.3109"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3109" = type opaque
%"class.blink::Member.3110" = type { %"class.blink::MemberBase.3111" }
%"class.blink::MemberBase.3111" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.3112" = type { %"class.blink::MemberBase.3113" }
%"class.blink::MemberBase.3113" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.3114" = type { %"class.blink::MemberBase.3115" }
%"class.blink::MemberBase.3115" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.3116" = type { %"class.blink::MemberBase.3117" }
%"class.blink::MemberBase.3117" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.3118" = type { %"class.blink::MemberBase.3119" }
%"class.blink::MemberBase.3119" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.3120" = type { %"class.blink::MemberBase.3121" }
%"class.blink::MemberBase.3121" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.3122" = type { %"class.blink::MemberBase.3123" }
%"class.blink::MemberBase.3123" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.3124" = type { %"class.blink::MemberBase.3125" }
%"class.blink::MemberBase.3125" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.3126" = type { %"class.blink::MemberBase.3127" }
%"class.blink::MemberBase.3127" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.3128" = type { %"class.blink::MemberBase.3129" }
%"class.blink::MemberBase.3129" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.3130" = type { %"class.blink::MemberBase.3131" }
%"class.blink::MemberBase.3131" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.3132" }
%"class.WTF::Deque.3132" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.3135" }
%"class.WTF::VectorBuffer.3135" = type { %"class.WTF::VectorBufferBase.3136" }
%"class.WTF::VectorBufferBase.3136" = type { %"class.std::__1::unique_ptr.3137"*, i32, i32 }
%"class.std::__1::unique_ptr.3137" = type { %"class.std::__1::__compressed_pair.3138" }
%"class.std::__1::__compressed_pair.3138" = type { %"struct.std::__1::__compressed_pair_elem.3139" }
%"struct.std::__1::__compressed_pair_elem.3139" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.3143", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.3143" = type { %"class.std::__1::__bitset.3144" }
%"class.std::__1::__bitset.3144" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.3145" }
%"class.absl::optional.3145" = type { %"class.absl::optional_internal::optional_data.3146" }
%"class.absl::optional_internal::optional_data.3146" = type { %"class.absl::optional_internal::optional_data_base.3147" }
%"class.absl::optional_internal::optional_data_base.3147" = type { %"class.absl::optional_internal::optional_data_dtor_base.3148" }
%"class.absl::optional_internal::optional_data_dtor_base.3148" = type { i8, %union.anon.3149 }
%union.anon.3149 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.3150", i64, %"class.absl::optional.1748", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.absl::optional.3150" = type { %"class.absl::optional_internal::optional_data.3151" }
%"class.absl::optional_internal::optional_data.3151" = type { %"class.absl::optional_internal::optional_data_base.3152" }
%"class.absl::optional_internal::optional_data_base.3152" = type { %"class.absl::optional_internal::optional_data_dtor_base.3153" }
%"class.absl::optional_internal::optional_data_dtor_base.3153" = type { i8, %union.anon.3154 }
%union.anon.3154 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.3155" = type { %"class.std::__1::unique_ptr.3156" }
%"class.std::__1::unique_ptr.3156" = type { %"class.std::__1::__compressed_pair.3157" }
%"class.std::__1::__compressed_pair.3157" = type { %"struct.std::__1::__compressed_pair_elem.3158" }
%"struct.std::__1::__compressed_pair_elem.3158" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.3162" = type { %"class.WTF::HashSet.3165" }
%"class.WTF::HashSet.3165" = type { %"class.WTF::HashTable.3166" }
%"class.WTF::HashTable.3166" = type <{ %"class.blink::WeakMember.3168"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3168" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.3169" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.3169" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.3170" = type { %"class.std::__1::__compressed_pair.3171" }
%"class.std::__1::__compressed_pair.3171" = type { %"struct.std::__1::__compressed_pair_elem.3172" }
%"struct.std::__1::__compressed_pair_elem.3172" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3176" = type { %"class.std::__1::__compressed_pair.3177" }
%"class.std::__1::__compressed_pair.3177" = type { %"struct.std::__1::__compressed_pair_elem.3178" }
%"struct.std::__1::__compressed_pair_elem.3178" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.blink::Member.2212" = type { %"class.blink::MemberBase.2213" }
%"class.blink::MemberBase.2213" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type opaque
%"class.blink::Member.2214" = type { %"class.blink::MemberBase.2215" }
%"class.blink::MemberBase.2215" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.2208", %"class.blink::Member.2237", %"class.blink::Member.2239", %"class.blink::Member.2241", i8, %"class.WTF::Vector.2243" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.2230" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.2218" }
%"class.blink::HeapVector.2218" = type { %"class.WTF::Vector.2221" }
%"class.WTF::Vector.2221" = type { %"class.WTF::VectorBuffer.2222" }
%"class.WTF::VectorBuffer.2222" = type { %"class.WTF::VectorBufferBase.2223", [32 x i8] }
%"class.WTF::VectorBufferBase.2223" = type { %"struct.std::__1::pair.2224"*, i32, i32 }
%"struct.std::__1::pair.2224" = type { %"class.WTF::AtomicString", %"class.blink::Member.2225" }
%"class.blink::Member.2225" = type { %"class.blink::MemberBase.2226" }
%"class.blink::MemberBase.2226" = type { %"class.blink::HeapVector.2227"* }
%"class.blink::HeapVector.2227" = type opaque
%"class.std::__1::unique_ptr.2230" = type { %"class.std::__1::__compressed_pair.2231" }
%"class.std::__1::__compressed_pair.2231" = type { %"struct.std::__1::__compressed_pair_elem.2232" }
%"struct.std::__1::__compressed_pair_elem.2232" = type { %"class.WTF::Vector.2233"* }
%"class.WTF::Vector.2233" = type opaque
%"class.blink::Member.2239" = type { %"class.blink::MemberBase.2240" }
%"class.blink::MemberBase.2240" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.2241" = type { %"class.blink::MemberBase.2242" }
%"class.blink::MemberBase.2242" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.2243" = type { %"class.WTF::VectorBuffer.2244" }
%"class.WTF::VectorBuffer.2244" = type { %"class.WTF::VectorBufferBase.2245" }
%"class.WTF::VectorBufferBase.2245" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2339" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2246, %"class.std::__1::unique_ptr.1744", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1758, i32 }>
%class.scoped_refptr.2246 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1758, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2305", %"class.absl::optional.2310", %"class.absl::optional.2263", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2330", i8, [7 x i8], %class.scoped_refptr.1758, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1771" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1758, %"class.std::__1::unique_ptr.2247", %"class.absl::optional.2257", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2263", %"class.std::__1::unique_ptr.2268", i8, i64, %class.scoped_refptr.2302, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2303", %"class.base::WeakPtrFactory.2304" }
%"class.std::__1::unique_ptr.2247" = type { %"class.std::__1::__compressed_pair.2248" }
%"class.std::__1::__compressed_pair.2248" = type { %"struct.std::__1::__compressed_pair_elem.2249" }
%"struct.std::__1::__compressed_pair_elem.2249" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1758, i8, %"class.mojo::ScopedHandleBase.2250", %class.scoped_refptr.2251, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2252", i8*, %"class.base::WeakPtrFactory.2253" }
%"class.mojo::ScopedHandleBase.2250" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2251 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.mojo::Handle" = type { i32 }
%"class.base::RepeatingCallback.2252" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2253" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2257" = type { %"class.absl::optional_internal::optional_data.2258" }
%"class.absl::optional_internal::optional_data.2258" = type { %"class.absl::optional_internal::optional_data_base.2259" }
%"class.absl::optional_internal::optional_data_base.2259" = type { %"class.absl::optional_internal::optional_data_dtor_base.2260" }
%"class.absl::optional_internal::optional_data_dtor_base.2260" = type { i8, %union.anon.2261 }
%union.anon.2261 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2262", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2262" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2268" = type { %"class.std::__1::__compressed_pair.2269" }
%"class.std::__1::__compressed_pair.2269" = type { %"struct.std::__1::__compressed_pair_elem.2270" }
%"struct.std::__1::__compressed_pair_elem.2270" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2271", i8, i64, %class.scoped_refptr.2272, %class.scoped_refptr.2297 }
%"class.base::RepeatingCallback.2271" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2272 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2273", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2275", %"class.std::__1::map.2286", i8, [7 x i8] }>
%"class.base::RefCounted.2273" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2274 }
%class.scoped_refptr.2274 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2275" = type { %"class.std::__1::__tree.2276" }
%"class.std::__1::__tree.2276" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2277", %"class.std::__1::__compressed_pair.2281" }
%"class.std::__1::__compressed_pair.2277" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"class.std::__1::__compressed_pair.2281" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2286" = type { %"class.std::__1::__tree.2287" }
%"class.std::__1::__tree.2287" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2288", %"class.std::__1::__compressed_pair.2292" }
%"class.std::__1::__compressed_pair.2288" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"class.std::__1::__compressed_pair.2292" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.2297 = type { %"class.base::RefCountedData.2298"* }
%"class.base::RefCountedData.2298" = type opaque
%class.scoped_refptr.2302 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2303" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2304" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2305" = type { %"class.absl::optional_internal::optional_data.2306" }
%"class.absl::optional_internal::optional_data.2306" = type { %"class.absl::optional_internal::optional_data_base.2307" }
%"class.absl::optional_internal::optional_data_base.2307" = type { %"class.absl::optional_internal::optional_data_dtor_base.2308" }
%"class.absl::optional_internal::optional_data_dtor_base.2308" = type { i8, %union.anon.2309 }
%union.anon.2309 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2310" = type { %"class.absl::optional_internal::optional_data.2311" }
%"class.absl::optional_internal::optional_data.2311" = type { %"class.absl::optional_internal::optional_data_base.2312" }
%"class.absl::optional_internal::optional_data_base.2312" = type { %"class.absl::optional_internal::optional_data_dtor_base.2313" }
%"class.absl::optional_internal::optional_data_dtor_base.2313" = type { i8, [7 x i8], %union.anon.2314 }
%union.anon.2314 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2263" = type { %"class.absl::optional_internal::optional_data.2264" }
%"class.absl::optional_internal::optional_data.2264" = type { %"class.absl::optional_internal::optional_data_base.2265" }
%"class.absl::optional_internal::optional_data_base.2265" = type { %"class.absl::optional_internal::optional_data_dtor_base.2266" }
%"class.absl::optional_internal::optional_data_dtor_base.2266" = type { i8, %union.anon.2267 }
%union.anon.2267 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2315 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2315 = type { %"class.std::__1::map.2318" }
%"class.std::__1::map.2318" = type { %"class.std::__1::__tree.2319" }
%"class.std::__1::__tree.2319" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2320", %"class.std::__1::__compressed_pair.2324" }
%"class.std::__1::__compressed_pair.2320" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"class.std::__1::__compressed_pair.2324" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2329"*, i64 }
%"class.std::__1::unique_ptr.2329" = type opaque
%"class.std::__1::map.2330" = type { %"class.std::__1::__tree.2331" }
%"class.std::__1::__tree.2331" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2332", %"class.std::__1::__compressed_pair.2336" }
%"class.std::__1::__compressed_pair.2332" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"class.std::__1::__compressed_pair.2336" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.2339" = type { %"class.std::__1::__compressed_pair.2340" }
%"class.std::__1::__compressed_pair.2340" = type { %"struct.std::__1::__compressed_pair_elem.2341" }
%"struct.std::__1::__compressed_pair_elem.2341" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.2347" = type { %"class.blink::MemberBase.2348" }
%"class.blink::MemberBase.2348" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.2237" = type { %"class.blink::MemberBase.2238" }
%"class.blink::MemberBase.2238" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.2208" = type { %"class.blink::MemberBase.2209" }
%"class.blink::MemberBase.2209" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.2208", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2349" }
%"class.base::internal::flat_tree.2349" = type { %"class.std::__1::vector.2350" }
%"class.std::__1::vector.2350" = type { %"class.std::__1::__vector_base.2351" }
%"class.std::__1::__vector_base.2351" = type { %"struct.std::__1::pair.2352"*, %"struct.std::__1::pair.2352"*, %"class.std::__1::__compressed_pair.2353" }
%"struct.std::__1::pair.2352" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.std::__1::__compressed_pair.2353" = type { %"struct.std::__1::__compressed_pair_elem.2354" }
%"struct.std::__1::__compressed_pair_elem.2354" = type { %"struct.std::__1::pair.2352"* }
%"class.blink::Member.2358" = type { %"class.blink::MemberBase.2359" }
%"class.blink::MemberBase.2359" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.absl::optional.2360" = type { %"class.absl::optional_internal::optional_data.2361" }
%"class.absl::optional_internal::optional_data.2361" = type { %"class.absl::optional_internal::optional_data_base.2362" }
%"class.absl::optional_internal::optional_data_base.2362" = type { %"class.absl::optional_internal::optional_data_dtor_base.2363" }
%"class.absl::optional_internal::optional_data_dtor_base.2363" = type { i8, %union.anon.2364 }
%union.anon.2364 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2370" }
%"class.blink::HeapHashSet.2370" = type { %"class.WTF::HashSet.2373" }
%"class.WTF::HashSet.2373" = type { %"class.WTF::HashTable.2374" }
%"class.WTF::HashTable.2374" = type <{ %"class.blink::WeakMember.2376"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2376" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2377" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2378" }
%"class.blink::HeapHashMap.2378" = type { %"class.WTF::HashMap.2381" }
%"class.WTF::HashMap.2381" = type { %"class.WTF::HashTable.2382" }
%"class.WTF::HashTable.2382" = type <{ %"struct.WTF::KeyValuePair.2384"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2384" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2385" = type { %"class.std::__1::__compressed_pair.2386" }
%"class.std::__1::__compressed_pair.2386" = type { %"struct.std::__1::__compressed_pair_elem.2387" }
%"struct.std::__1::__compressed_pair_elem.2387" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2388", %"class.base::WeakPtrFactory.2393" }
%"class.WTF::HashMap.2388" = type { %"class.WTF::HashTable.2389" }
%"class.WTF::HashTable.2389" = type <{ %"struct.WTF::KeyValuePair.2392"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2392" = type opaque
%"class.base::WeakPtrFactory.2393" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2397" }
%"class.blink::Member.2397" = type { %"class.blink::MemberBase.2398" }
%"class.blink::MemberBase.2398" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3330" }
%"class.blink::WeakMember.3330" = type { %"class.blink::MemberBase.3331" }
%"class.blink::MemberBase.3331" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.3495", i64, %"class.std::__1::map.3496", i8*, i64, %"class.base::WeakPtrFactory.3505" }
%"class.base::RepeatingCallback.3495" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.3496" = type { %"class.std::__1::__tree.3497" }
%"class.std::__1::__tree.3497" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3498", %"class.std::__1::__compressed_pair.3502" }
%"class.std::__1::__compressed_pair.3498" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"class.std::__1::__compressed_pair.3502" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.3505" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2399" = type { %"class.WTF::HashSet.2402" }
%"class.WTF::HashSet.2402" = type { %"class.WTF::HashTable.2403" }
%"class.WTF::HashTable.2403" = type <{ %"class.blink::WeakMember.2405"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2405" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.1951", %"class.blink::Member.2406", %"class.blink::Member.2408", %"class.std::__1::unique_ptr.2410", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2416" }
%"class.blink::Member.2406" = type { %"class.blink::MemberBase.2407" }
%"class.blink::MemberBase.2407" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2408" = type { %"class.blink::MemberBase.2409" }
%"class.blink::MemberBase.2409" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type opaque
%"class.std::__1::unique_ptr.2410" = type { %"class.std::__1::__compressed_pair.2411" }
%"class.std::__1::__compressed_pair.2411" = type { %"struct.std::__1::__compressed_pair_elem.2412" }
%"struct.std::__1::__compressed_pair_elem.2412" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.2416" = type { %"class.WTF::HashTable.2417" }
%"class.WTF::HashTable.2417" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2420" = type { %"class.blink::MemberBase.1955" }
%"class.blink::MemberBase.1955" = type { %"class.blink::LocalFrameView"* }
%"class.blink::Member.2421" = type { %"class.blink::MemberBase.2422" }
%"class.blink::MemberBase.2422" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2423" = type { %"class.blink::MemberBase.2424" }
%"class.blink::MemberBase.2424" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.1951", %"class.blink::Member.2427", %"class.blink::Member.2429", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2431", %"class.blink::Member.2437" }
%"class.blink::Member.2427" = type { %"class.blink::MemberBase.2428" }
%"class.blink::MemberBase.2428" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.2429" = type { %"class.blink::MemberBase.2430" }
%"class.blink::MemberBase.2430" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.2431" = type { %"class.std::__1::__compressed_pair.2432" }
%"class.std::__1::__compressed_pair.2432" = type { %"struct.std::__1::__compressed_pair_elem.2433" }
%"struct.std::__1::__compressed_pair_elem.2433" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.2437" = type { %"class.blink::MemberBase.2438" }
%"class.blink::MemberBase.2438" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2439" = type { %"class.blink::MemberBase.2440" }
%"class.blink::MemberBase.2440" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2441" = type { %"class.blink::MemberBase.2442" }
%"class.blink::MemberBase.2442" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%"class.blink::Member.2443" = type { %"class.blink::MemberBase.2444" }
%"class.blink::MemberBase.2444" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2447", %"class.blink::HeapListHashSet.2458", %"class.blink::HeapListHashSet.2469", %"class.blink::HeapListHashSet.2480", %"class.blink::HeapListHashSet.2491", %"class.blink::HeapListHashSet.2502", %"class.blink::HeapListHashSet.2513", %"class.blink::HeapListHashSet.2524", %"class.blink::HeapListHashSet.2535", %"class.blink::HeapListHashSet.2546", %"class.blink::HeapListHashSet.2557", %"class.blink::HeapListHashSet.2568", %"class.blink::HeapListHashSet.2579", %"class.blink::HeapListHashSet.2590", %"class.blink::HeapListHashSet.2601", %"class.blink::HeapListHashSet.2612", %"class.blink::HeapListHashSet.2623", %"class.blink::HeapListHashSet.2634", %"class.blink::HeapListHashSet.2645", %"class.blink::HeapListHashSet.2656" }
%"class.blink::HeapListHashSet.2447" = type { %"class.WTF::ListHashSet.base.2457", [7 x i8] }
%"class.WTF::ListHashSet.base.2457" = type <{ %"class.WTF::HashTable.2452", %"class.blink::Member.2454", %"class.blink::Member.2454", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2452" = type <{ %"class.blink::Member.2454"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2454" = type { %"class.blink::MemberBase.2455" }
%"class.blink::MemberBase.2455" = type { %"class.blink::HeapListHashSetNode.2456"* }
%"class.blink::HeapListHashSetNode.2456" = type { %"class.blink::Member.2670", %"class.blink::Member.2454", %"class.blink::Member.2454" }
%"class.blink::HeapListHashSet.2458" = type { %"class.WTF::ListHashSet.base.2468", [7 x i8] }
%"class.WTF::ListHashSet.base.2468" = type <{ %"class.WTF::HashTable.2463", %"class.blink::Member.2465", %"class.blink::Member.2465", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2463" = type <{ %"class.blink::Member.2465"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2465" = type { %"class.blink::MemberBase.2466" }
%"class.blink::MemberBase.2466" = type { %"class.blink::HeapListHashSetNode.2467"* }
%"class.blink::HeapListHashSetNode.2467" = type { %"class.blink::Member.2813", %"class.blink::Member.2465", %"class.blink::Member.2465" }
%"class.blink::Member.2813" = type { %"class.blink::MemberBase.2814" }
%"class.blink::MemberBase.2814" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2469" = type { %"class.WTF::ListHashSet.base.2479", [7 x i8] }
%"class.WTF::ListHashSet.base.2479" = type <{ %"class.WTF::HashTable.2474", %"class.blink::Member.2476", %"class.blink::Member.2476", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2474" = type <{ %"class.blink::Member.2476"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2476" = type { %"class.blink::MemberBase.2477" }
%"class.blink::MemberBase.2477" = type { %"class.blink::HeapListHashSetNode.2478"* }
%"class.blink::HeapListHashSetNode.2478" = type { %"class.blink::Member.2809", %"class.blink::Member.2476", %"class.blink::Member.2476" }
%"class.blink::Member.2809" = type { %"class.blink::MemberBase.2810" }
%"class.blink::MemberBase.2810" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2480" = type { %"class.WTF::ListHashSet.base.2490", [7 x i8] }
%"class.WTF::ListHashSet.base.2490" = type <{ %"class.WTF::HashTable.2485", %"class.blink::Member.2487", %"class.blink::Member.2487", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2485" = type <{ %"class.blink::Member.2487"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2487" = type { %"class.blink::MemberBase.2488" }
%"class.blink::MemberBase.2488" = type { %"class.blink::HeapListHashSetNode.2489"* }
%"class.blink::HeapListHashSetNode.2489" = type { %"class.blink::Member.2805", %"class.blink::Member.2487", %"class.blink::Member.2487" }
%"class.blink::Member.2805" = type { %"class.blink::MemberBase.2806" }
%"class.blink::MemberBase.2806" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2491" = type { %"class.WTF::ListHashSet.base.2501", [7 x i8] }
%"class.WTF::ListHashSet.base.2501" = type <{ %"class.WTF::HashTable.2496", %"class.blink::Member.2498", %"class.blink::Member.2498", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2496" = type <{ %"class.blink::Member.2498"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2498" = type { %"class.blink::MemberBase.2499" }
%"class.blink::MemberBase.2499" = type { %"class.blink::HeapListHashSetNode.2500"* }
%"class.blink::HeapListHashSetNode.2500" = type { %"class.blink::Member.2801", %"class.blink::Member.2498", %"class.blink::Member.2498" }
%"class.blink::Member.2801" = type { %"class.blink::MemberBase.2802" }
%"class.blink::MemberBase.2802" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2502" = type { %"class.WTF::ListHashSet.base.2512", [7 x i8] }
%"class.WTF::ListHashSet.base.2512" = type <{ %"class.WTF::HashTable.2507", %"class.blink::Member.2509", %"class.blink::Member.2509", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2507" = type <{ %"class.blink::Member.2509"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2509" = type { %"class.blink::MemberBase.2510" }
%"class.blink::MemberBase.2510" = type { %"class.blink::HeapListHashSetNode.2511"* }
%"class.blink::HeapListHashSetNode.2511" = type { %"class.blink::Member.2797", %"class.blink::Member.2509", %"class.blink::Member.2509" }
%"class.blink::Member.2797" = type { %"class.blink::MemberBase.2798" }
%"class.blink::MemberBase.2798" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::InspectorCSSAgent" = type opaque
%"class.blink::HeapListHashSet.2513" = type { %"class.WTF::ListHashSet.base.2523", [7 x i8] }
%"class.WTF::ListHashSet.base.2523" = type <{ %"class.WTF::HashTable.2518", %"class.blink::Member.2520", %"class.blink::Member.2520", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2518" = type <{ %"class.blink::Member.2520"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2520" = type { %"class.blink::MemberBase.2521" }
%"class.blink::MemberBase.2521" = type { %"class.blink::HeapListHashSetNode.2522"* }
%"class.blink::HeapListHashSetNode.2522" = type { %"class.blink::Member.2793", %"class.blink::Member.2520", %"class.blink::Member.2520" }
%"class.blink::Member.2793" = type { %"class.blink::MemberBase.2794" }
%"class.blink::MemberBase.2794" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::InspectorDOMAgent" = type opaque
%"class.blink::HeapListHashSet.2524" = type { %"class.WTF::ListHashSet.base.2534", [7 x i8] }
%"class.WTF::ListHashSet.base.2534" = type <{ %"class.WTF::HashTable.2529", %"class.blink::Member.2531", %"class.blink::Member.2531", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2529" = type <{ %"class.blink::Member.2531"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2531" = type { %"class.blink::MemberBase.2532" }
%"class.blink::MemberBase.2532" = type { %"class.blink::HeapListHashSetNode.2533"* }
%"class.blink::HeapListHashSetNode.2533" = type { %"class.blink::Member.2789", %"class.blink::Member.2531", %"class.blink::Member.2531" }
%"class.blink::Member.2789" = type { %"class.blink::MemberBase.2790" }
%"class.blink::MemberBase.2790" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2535" = type { %"class.WTF::ListHashSet.base.2545", [7 x i8] }
%"class.WTF::ListHashSet.base.2545" = type <{ %"class.WTF::HashTable.2540", %"class.blink::Member.2542", %"class.blink::Member.2542", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2540" = type <{ %"class.blink::Member.2542"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2542" = type { %"class.blink::MemberBase.2543" }
%"class.blink::MemberBase.2543" = type { %"class.blink::HeapListHashSetNode.2544"* }
%"class.blink::HeapListHashSetNode.2544" = type { %"class.blink::Member.2785", %"class.blink::Member.2542", %"class.blink::Member.2542" }
%"class.blink::Member.2785" = type { %"class.blink::MemberBase.2786" }
%"class.blink::MemberBase.2786" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2546" = type { %"class.WTF::ListHashSet.base.2556", [7 x i8] }
%"class.WTF::ListHashSet.base.2556" = type <{ %"class.WTF::HashTable.2551", %"class.blink::Member.2553", %"class.blink::Member.2553", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2551" = type <{ %"class.blink::Member.2553"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2553" = type { %"class.blink::MemberBase.2554" }
%"class.blink::MemberBase.2554" = type { %"class.blink::HeapListHashSetNode.2555"* }
%"class.blink::HeapListHashSetNode.2555" = type { %"class.blink::Member.2781", %"class.blink::Member.2553", %"class.blink::Member.2553" }
%"class.blink::Member.2781" = type { %"class.blink::MemberBase.2782" }
%"class.blink::MemberBase.2782" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2557" = type { %"class.WTF::ListHashSet.base.2567", [7 x i8] }
%"class.WTF::ListHashSet.base.2567" = type <{ %"class.WTF::HashTable.2562", %"class.blink::Member.2564", %"class.blink::Member.2564", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2562" = type <{ %"class.blink::Member.2564"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2564" = type { %"class.blink::MemberBase.2565" }
%"class.blink::MemberBase.2565" = type { %"class.blink::HeapListHashSetNode.2566"* }
%"class.blink::HeapListHashSetNode.2566" = type { %"class.blink::Member.2674", %"class.blink::Member.2564", %"class.blink::Member.2564" }
%"class.blink::HeapListHashSet.2568" = type { %"class.WTF::ListHashSet.base.2578", [7 x i8] }
%"class.WTF::ListHashSet.base.2578" = type <{ %"class.WTF::HashTable.2573", %"class.blink::Member.2575", %"class.blink::Member.2575", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2573" = type <{ %"class.blink::Member.2575"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2575" = type { %"class.blink::MemberBase.2576" }
%"class.blink::MemberBase.2576" = type { %"class.blink::HeapListHashSetNode.2577"* }
%"class.blink::HeapListHashSetNode.2577" = type { %"class.blink::Member.2775", %"class.blink::Member.2575", %"class.blink::Member.2575" }
%"class.blink::Member.2775" = type { %"class.blink::MemberBase.2776" }
%"class.blink::MemberBase.2776" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2579" = type { %"class.WTF::ListHashSet.base.2589", [7 x i8] }
%"class.WTF::ListHashSet.base.2589" = type <{ %"class.WTF::HashTable.2584", %"class.blink::Member.2586", %"class.blink::Member.2586", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2584" = type <{ %"class.blink::Member.2586"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2586" = type { %"class.blink::MemberBase.2587" }
%"class.blink::MemberBase.2587" = type { %"class.blink::HeapListHashSetNode.2588"* }
%"class.blink::HeapListHashSetNode.2588" = type { %"class.blink::Member.2771", %"class.blink::Member.2586", %"class.blink::Member.2586" }
%"class.blink::Member.2771" = type { %"class.blink::MemberBase.2772" }
%"class.blink::MemberBase.2772" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2590" = type { %"class.WTF::ListHashSet.base.2600", [7 x i8] }
%"class.WTF::ListHashSet.base.2600" = type <{ %"class.WTF::HashTable.2595", %"class.blink::Member.2597", %"class.blink::Member.2597", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2595" = type <{ %"class.blink::Member.2597"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2597" = type { %"class.blink::MemberBase.2598" }
%"class.blink::MemberBase.2598" = type { %"class.blink::HeapListHashSetNode.2599"* }
%"class.blink::HeapListHashSetNode.2599" = type { %"class.blink::Member.2767", %"class.blink::Member.2597", %"class.blink::Member.2597" }
%"class.blink::Member.2767" = type { %"class.blink::MemberBase.2768" }
%"class.blink::MemberBase.2768" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2601" = type { %"class.WTF::ListHashSet.base.2611", [7 x i8] }
%"class.WTF::ListHashSet.base.2611" = type <{ %"class.WTF::HashTable.2606", %"class.blink::Member.2608", %"class.blink::Member.2608", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2606" = type <{ %"class.blink::Member.2608"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2608" = type { %"class.blink::MemberBase.2609" }
%"class.blink::MemberBase.2609" = type { %"class.blink::HeapListHashSetNode.2610"* }
%"class.blink::HeapListHashSetNode.2610" = type { %"class.blink::Member.2763", %"class.blink::Member.2608", %"class.blink::Member.2608" }
%"class.blink::Member.2763" = type { %"class.blink::MemberBase.2764" }
%"class.blink::MemberBase.2764" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::InspectorNetworkAgent" = type opaque
%"class.blink::HeapListHashSet.2612" = type { %"class.WTF::ListHashSet.base.2622", [7 x i8] }
%"class.WTF::ListHashSet.base.2622" = type <{ %"class.WTF::HashTable.2617", %"class.blink::Member.2619", %"class.blink::Member.2619", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2617" = type <{ %"class.blink::Member.2619"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2619" = type { %"class.blink::MemberBase.2620" }
%"class.blink::MemberBase.2620" = type { %"class.blink::HeapListHashSetNode.2621"* }
%"class.blink::HeapListHashSetNode.2621" = type { %"class.blink::Member.2759", %"class.blink::Member.2619", %"class.blink::Member.2619" }
%"class.blink::Member.2759" = type { %"class.blink::MemberBase.2760" }
%"class.blink::MemberBase.2760" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type opaque
%"class.blink::HeapListHashSet.2623" = type { %"class.WTF::ListHashSet.base.2633", [7 x i8] }
%"class.WTF::ListHashSet.base.2633" = type <{ %"class.WTF::HashTable.2628", %"class.blink::Member.2630", %"class.blink::Member.2630", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2628" = type <{ %"class.blink::Member.2630"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2630" = type { %"class.blink::MemberBase.2631" }
%"class.blink::MemberBase.2631" = type { %"class.blink::HeapListHashSetNode.2632"* }
%"class.blink::HeapListHashSetNode.2632" = type { %"class.blink::Member.2755", %"class.blink::Member.2630", %"class.blink::Member.2630" }
%"class.blink::Member.2755" = type { %"class.blink::MemberBase.2756" }
%"class.blink::MemberBase.2756" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2634" = type { %"class.WTF::ListHashSet.base.2644", [7 x i8] }
%"class.WTF::ListHashSet.base.2644" = type <{ %"class.WTF::HashTable.2639", %"class.blink::Member.2641", %"class.blink::Member.2641", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2639" = type <{ %"class.blink::Member.2641"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2641" = type { %"class.blink::MemberBase.2642" }
%"class.blink::MemberBase.2642" = type { %"class.blink::HeapListHashSetNode.2643"* }
%"class.blink::HeapListHashSetNode.2643" = type { %"class.blink::Member.2751", %"class.blink::Member.2641", %"class.blink::Member.2641" }
%"class.blink::Member.2751" = type { %"class.blink::MemberBase.2752" }
%"class.blink::MemberBase.2752" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2645" = type { %"class.WTF::ListHashSet.base.2655", [7 x i8] }
%"class.WTF::ListHashSet.base.2655" = type <{ %"class.WTF::HashTable.2650", %"class.blink::Member.2652", %"class.blink::Member.2652", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2650" = type <{ %"class.blink::Member.2652"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2652" = type { %"class.blink::MemberBase.2653" }
%"class.blink::MemberBase.2653" = type { %"class.blink::HeapListHashSetNode.2654"* }
%"class.blink::HeapListHashSetNode.2654" = type { %"class.blink::Member.2676", %"class.blink::Member.2652", %"class.blink::Member.2652" }
%"class.blink::HeapListHashSet.2656" = type { %"class.WTF::ListHashSet.base.2666", [7 x i8] }
%"class.WTF::ListHashSet.base.2666" = type <{ %"class.WTF::HashTable.2661", %"class.blink::Member.2663", %"class.blink::Member.2663", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2661" = type <{ %"class.blink::Member.2663"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2663" = type { %"class.blink::MemberBase.2664" }
%"class.blink::MemberBase.2664" = type { %"class.blink::HeapListHashSetNode.2665"* }
%"class.blink::HeapListHashSetNode.2665" = type { %"class.blink::Member.2668", %"class.blink::Member.2663", %"class.blink::Member.2663" }
%class.scoped_refptr.2667 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2668" = type { %"class.blink::MemberBase.2669" }
%"class.blink::MemberBase.2669" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2670" = type { %"class.blink::MemberBase.2671" }
%"class.blink::MemberBase.2671" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type opaque
%"class.blink::Member.2672" = type { %"class.blink::MemberBase.2673" }
%"class.blink::MemberBase.2673" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2674" = type { %"class.blink::MemberBase.2675" }
%"class.blink::MemberBase.2675" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2676" = type { %"class.blink::MemberBase.2677" }
%"class.blink::MemberBase.2677" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2680" = type { %"class.blink::MemberBase.2681" }
%"class.blink::MemberBase.2681" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2682" = type { %"class.blink::MemberBase.2683" }
%"class.blink::MemberBase.2683" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2684" }
%"class.blink::Member.2684" = type { %"class.blink::MemberBase.2685" }
%"class.blink::MemberBase.2685" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.3508" }
%"class.mojo::Remote.3508" = type { %"class.mojo::internal::InterfacePtrState.3509" }
%"class.mojo::internal::InterfacePtrState.3509" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3510" }
%"class.std::__1::unique_ptr.3510" = type { %"class.std::__1::__compressed_pair.3511" }
%"class.std::__1::__compressed_pair.3511" = type { %"struct.std::__1::__compressed_pair_elem.3512" }
%"struct.std::__1::__compressed_pair_elem.3512" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Point" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2686" = type { %"class.std::__1::__compressed_pair.2687" }
%"class.std::__1::__compressed_pair.2687" = type { %"struct.std::__1::__compressed_pair_elem.2688" }
%"struct.std::__1::__compressed_pair_elem.2688" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2692" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2693" = type { %"class.std::__1::__compressed_pair.2694" }
%"class.std::__1::__compressed_pair.2694" = type { %"struct.std::__1::__compressed_pair_elem.2695" }
%"struct.std::__1::__compressed_pair_elem.2695" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.2365" = type { %"class.absl::optional_internal::optional_data.2366" }
%"class.absl::optional_internal::optional_data.2366" = type { %"class.absl::optional_internal::optional_data_base.2367" }
%"class.absl::optional_internal::optional_data_base.2367" = type { %"class.absl::optional_internal::optional_data_dtor_base.2368" }
%"class.absl::optional_internal::optional_data_dtor_base.2368" = type { i8, %union.anon.2369 }
%union.anon.2369 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2699" = type { %"class.std::__1::__compressed_pair.2700" }
%"class.std::__1::__compressed_pair.2700" = type { %"struct.std::__1::__compressed_pair_elem.2701" }
%"struct.std::__1::__compressed_pair_elem.2701" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2705" }
%"class.blink::Member.2705" = type { %"class.blink::MemberBase.2706" }
%"class.blink::MemberBase.2706" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3518" }
%"class.mojo::AssociatedRemote.3518" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3519" }
%"class.mojo::internal::AssociatedInterfacePtrState.3519" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3520" }
%"class.std::__1::unique_ptr.3520" = type { %"class.std::__1::__compressed_pair.3521" }
%"class.std::__1::__compressed_pair.3521" = type { %"struct.std::__1::__compressed_pair_elem.3522" }
%"struct.std::__1::__compressed_pair_elem.3522" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2707" = type { %"class.blink::Member.2708" }
%"class.blink::Member.2708" = type { %"class.blink::MemberBase.2709" }
%"class.blink::MemberBase.2709" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.3528" }
%"class.mojo::AssociatedRemote.3528" = type { %"class.mojo::internal::AssociatedInterfacePtrState.3529" }
%"class.mojo::internal::AssociatedInterfacePtrState.3529" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3530" }
%"class.std::__1::unique_ptr.3530" = type { %"class.std::__1::__compressed_pair.3531" }
%"class.std::__1::__compressed_pair.3531" = type { %"struct.std::__1::__compressed_pair_elem.3532" }
%"struct.std::__1::__compressed_pair_elem.3532" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2710" }
%"class.blink::Member.2710" = type { %"class.blink::MemberBase.2711" }
%"class.blink::MemberBase.2711" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3538", %"class.blink::Member.1951", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3538" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.3539" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1744" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.3539" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2712" = type { %"class.blink::Member.2713" }
%"class.blink::Member.2713" = type { %"class.blink::MemberBase.2714" }
%"class.blink::MemberBase.2714" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3542", %"class.blink::Member.1951", %"class.mojo::AssociatedReceiver.3543" }
%"class.blink::ThreadState::PrefinalizerRegistration.3542" = type { i8 }
%"class.mojo::AssociatedReceiver.3543" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.3544" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.3544" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2715" }
%"class.blink::Member.2715" = type { %"class.blink::MemberBase.2716" }
%"class.blink::MemberBase.2716" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3547", %"class.blink::Member.1951", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.3547" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2246, %"class.std::__1::unique_ptr.1744", %"class.base::WeakPtrFactory.3548" }
%"class.base::WeakPtrFactory.3548" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2717" = type { %"class.blink::Member.2718" }
%"class.blink::Member.2718" = type { %"class.blink::MemberBase.2719" }
%"class.blink::MemberBase.2719" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.3551", %"class.blink::Member.1951", %"class.mojo::AssociatedReceiver.3552" }
%"class.blink::ThreadState::PrefinalizerRegistration.3551" = type { i8 }
%"class.mojo::AssociatedReceiver.3552" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.3553" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.3553" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2720" = type { %"class.blink::MemberBase.2721" }
%"class.blink::MemberBase.2721" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2722" = type { %"class.blink::MemberBase.2723" }
%"class.blink::MemberBase.2723" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2724" = type { %"class.blink::MemberBase.2725" }
%"class.blink::MemberBase.2725" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2726" = type { %"class.blink::MemberBase.2727" }
%"class.blink::MemberBase.2727" = type { %"class.blink::HeapHashMap.2728"* }
%"class.blink::HeapHashMap.2728" = type opaque
%"class.mojo::StructPtr.2729" = type { %"class.std::__1::unique_ptr.2730" }
%"class.std::__1::unique_ptr.2730" = type { %"class.std::__1::__compressed_pair.2731" }
%"class.std::__1::__compressed_pair.2731" = type { %"struct.std::__1::__compressed_pair_elem.2732" }
%"struct.std::__1::__compressed_pair_elem.2732" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2733", %"class.mojo::InlinedStructPtr.2734" }
%"class.mojo::InlinedStructPtr.2733" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2734" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2738" = type { %"class.blink::MemberBase.2739" }
%"class.blink::MemberBase.2739" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2740" = type { %"class.absl::optional_internal::optional_data.2741" }
%"class.absl::optional_internal::optional_data.2741" = type { %"class.absl::optional_internal::optional_data_base.2742" }
%"class.absl::optional_internal::optional_data_base.2742" = type { %"class.absl::optional_internal::optional_data_dtor_base.2743" }
%"class.absl::optional_internal::optional_data_dtor_base.2743" = type { i8, %union.anon.2744 }
%union.anon.2744 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.1953" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1954", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.778, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.778 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1954" = type { %"class.blink::MemberBase.1955" }
%"class.absl::optional.1956" = type { %"class.absl::optional_internal::optional_data.1957" }
%"class.absl::optional_internal::optional_data.1957" = type { %"class.absl::optional_internal::optional_data_base.1958" }
%"class.absl::optional_internal::optional_data_base.1958" = type { %"class.absl::optional_internal::optional_data_dtor_base.1959" }
%"class.absl::optional_internal::optional_data_dtor_base.1959" = type { i8, %union.anon.1960 }
%union.anon.1960 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.1961" = type { %"class.blink::MemberBase.1962" }
%"class.blink::MemberBase.1962" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.1963" = type { %"class.blink::MemberBase.1964" }
%"class.blink::MemberBase.1964" = type { %"class.blink::HeapHashSet.1965"* }
%"class.blink::HeapHashSet.1965" = type opaque
%"class.std::__1::unique_ptr.1966" = type { %"class.std::__1::__compressed_pair.1967" }
%"class.std::__1::__compressed_pair.1967" = type { %"struct.std::__1::__compressed_pair_elem.1968" }
%"struct.std::__1::__compressed_pair_elem.1968" = type { %"class.WTF::HashSet.1969"* }
%"class.WTF::HashSet.1969" = type { %"class.WTF::HashTable.1970" }
%"class.WTF::HashTable.1970" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1976" = type { %"class.blink::MemberBase.1977" }
%"class.blink::MemberBase.1977" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.1978" = type { %"class.WTF::HashSet.1981" }
%"class.WTF::HashSet.1981" = type { %"class.WTF::HashTable.1982" }
%"class.WTF::HashTable.1982" = type <{ %"class.blink::Member.1984"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1984" = type opaque
%"class.blink::HeapHashSet.1985" = type { %"class.WTF::HashSet.1988" }
%"class.WTF::HashSet.1988" = type { %"class.WTF::HashTable.1989" }
%"class.WTF::HashTable.1989" = type <{ %"class.blink::Member.782"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.782" = type { %"class.blink::MemberBase.783" }
%"class.blink::MemberBase.783" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.784", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.784" = type { %"class.blink::MemberBase.785" }
%"class.blink::MemberBase.785" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.763", %"class.blink::Member.765", %"class.blink::Member.767", %"class.blink::Member.769", %"class.WTF::Vector.771", i16, %class.scoped_refptr.778 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.763" = type { %"class.blink::MemberBase.764" }
%"class.blink::MemberBase.764" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.765" = type { %"class.blink::MemberBase.766" }
%"class.blink::MemberBase.766" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.767" = type { %"class.blink::MemberBase.768" }
%"class.blink::MemberBase.768" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.769" = type { %"class.blink::MemberBase.770" }
%"class.blink::MemberBase.770" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.994", { i64, i64 } }
%"class.blink::WeakMember.994" = type { %"class.blink::MemberBase.783" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.std::__1::unique_ptr.1991" = type { %"class.std::__1::__compressed_pair.1992" }
%"class.std::__1::__compressed_pair.1992" = type { %"struct.std::__1::__compressed_pair_elem.1993" }
%"struct.std::__1::__compressed_pair_elem.1993" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type { i32, [21 x i32] }
%"class.blink::Member.1997" = type { %"class.blink::MemberBase.1998" }
%"class.blink::MemberBase.1998" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.2001", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.2001" = type { %"class.WTF::HashTable.2002" }
%"class.WTF::HashTable.2002" = type <{ %"struct.WTF::KeyValuePair.2004"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2004" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.2005", i32, i32 }
%"class.WTF::Vector.2005" = type { %"class.WTF::VectorBuffer.2006" }
%"class.WTF::VectorBuffer.2006" = type { %"class.WTF::VectorBufferBase.2007" }
%"class.WTF::VectorBufferBase.2007" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type opaque
%"class.blink::HeapLinkedHashSet.2009" = type { %"class.WTF::LinkedHashSet.2012" }
%"class.WTF::LinkedHashSet.2012" = type { %"class.WTF::HashMap.2013", %"class.WTF::VectorBackedLinkedList.2017" }
%"class.WTF::HashMap.2013" = type { %"class.WTF::HashTable.2014" }
%"class.WTF::HashTable.2014" = type <{ %"struct.WTF::KeyValuePair.2016"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2016" = type opaque
%"class.WTF::VectorBackedLinkedList.2017" = type { %"class.WTF::Vector.2018", i32, i32 }
%"class.WTF::Vector.2018" = type { %"class.WTF::VectorBuffer.2019" }
%"class.WTF::VectorBuffer.2019" = type { %"class.WTF::VectorBufferBase.2020" }
%"class.WTF::VectorBufferBase.2020" = type { %"class.WTF::VectorBackedLinkedListNode.2021"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2021" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2023" = type { %"class.std::__1::__compressed_pair.2024" }
%"class.std::__1::__compressed_pair.2024" = type { %"struct.std::__1::__compressed_pair_elem.2025" }
%"struct.std::__1::__compressed_pair_elem.2025" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2029" = type { %"class.std::__1::__compressed_pair.2030" }
%"class.std::__1::__compressed_pair.2030" = type { %"struct.std::__1::__compressed_pair_elem.2031" }
%"struct.std::__1::__compressed_pair_elem.2031" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2032, %class.scoped_refptr.2032, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2082", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2087", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2032 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2033", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2040" }
%"class.WTF::RefCounted.2033" = type { %"class.base::RefCounted.2034" }
%"class.base::RefCounted.2034" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2035", i32, [4 x i8] }>
%"class.WTF::Vector.2035" = type { %"class.WTF::VectorBuffer.2036" }
%"class.WTF::VectorBuffer.2036" = type { %"class.WTF::VectorBufferBase.2037" }
%"class.WTF::VectorBufferBase.2037" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2040" = type { %"class.WTF::VectorBuffer.2041" }
%"class.WTF::VectorBuffer.2041" = type { %"class.WTF::VectorBufferBase.2042" }
%"class.WTF::VectorBufferBase.2042" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2043", %"class.std::__1::unique_ptr.2054", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.866, %class.scoped_refptr.908, %class.scoped_refptr.907 }
%class.scoped_refptr.866 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.864", i8, i8, %class.scoped_refptr.866, i32, i32 }
%"class.WTF::RefCounted.864" = type { %"class.base::RefCounted.865" }
%"class.base::RefCounted.865" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.908 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.945" }
%"class.blink::PaintPropertyNode.945" = type { %"class.WTF::RefCounted.946", i8, i8, %class.scoped_refptr.908, i32, i32 }
%"class.WTF::RefCounted.946" = type { %"class.base::RefCounted.947" }
%"class.base::RefCounted.947" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.907 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.904" }
%"class.blink::PaintPropertyNode.904" = type { %"class.WTF::RefCounted.905", i8, i8, %class.scoped_refptr.907, i32, i32 }
%"class.WTF::RefCounted.905" = type { %"class.base::RefCounted.906" }
%"class.base::RefCounted.906" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.2043" = type { %"class.std::__1::__compressed_pair.2044" }
%"class.std::__1::__compressed_pair.2044" = type { %"struct.std::__1::__compressed_pair_elem.2045" }
%"struct.std::__1::__compressed_pair_elem.2045" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2046", %"class.WTF::Vector.804", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2046" = type { %"class.WTF::VectorBuffer.2047" }
%"class.WTF::VectorBuffer.2047" = type { %"class.WTF::VectorBufferBase.2048" }
%"class.WTF::VectorBufferBase.2048" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.WTF::Vector.804" = type { %"class.WTF::VectorBuffer.805" }
%"class.WTF::VectorBuffer.805" = type { %"class.WTF::VectorBufferBase.806" }
%"class.WTF::VectorBufferBase.806" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.880" }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.873, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.874", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.867" }
%"class.std::__1::unique_ptr.867" = type { %"class.std::__1::__compressed_pair.868" }
%"class.std::__1::__compressed_pair.868" = type { %"struct.std::__1::__compressed_pair_elem.869" }
%"struct.std::__1::__compressed_pair_elem.869" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.873 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.899", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.899" = type { %"class.WTF::RefCounted.900", i8, i8, %class.scoped_refptr.873, i32, i32 }
%"class.WTF::RefCounted.900" = type { %"class.base::RefCounted.901" }
%"class.base::RefCounted.901" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.794" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"class.absl::optional.794" = type { %"class.absl::optional_internal::optional_data.795" }
%"class.absl::optional_internal::optional_data.795" = type { %"class.absl::optional_internal::optional_data_base.796" }
%"class.absl::optional_internal::optional_data_base.796" = type { %"class.absl::optional_internal::optional_data_dtor_base.797" }
%"class.absl::optional_internal::optional_data_dtor_base.797" = type { i8, %union.anon.798 }
%union.anon.798 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.799" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.874" = type { %"class.std::__1::__compressed_pair.875" }
%"class.std::__1::__compressed_pair.875" = type { %"struct.std::__1::__compressed_pair_elem.876" }
%"struct.std::__1::__compressed_pair_elem.876" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::unique_ptr.880" = type { %"class.std::__1::__compressed_pair.881" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.883", %"class.std::__1::unique_ptr.889", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.889" = type { %"class.std::__1::__compressed_pair.890" }
%"class.std::__1::__compressed_pair.890" = type { %"struct.std::__1::__compressed_pair_elem.891" }
%"struct.std::__1::__compressed_pair_elem.891" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.2054" = type { %"class.std::__1::__compressed_pair.2055" }
%"class.std::__1::__compressed_pair.2055" = type { %"struct.std::__1::__compressed_pair_elem.2056" }
%"struct.std::__1::__compressed_pair_elem.2056" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2057", %"class.absl::optional.2057" }
%"class.absl::optional.2057" = type { %"class.absl::optional_internal::optional_data.2058" }
%"class.absl::optional_internal::optional_data.2058" = type { %"class.absl::optional_internal::optional_data_base.2059" }
%"class.absl::optional_internal::optional_data_base.2059" = type { %"class.absl::optional_internal::optional_data_dtor_base.2060" }
%"class.absl::optional_internal::optional_data_dtor_base.2060" = type { i8, [3 x i8], %union.anon.2061 }
%union.anon.2061 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2040"*, %"class.absl::optional.2067", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2067" = type { %"class.absl::optional_internal::optional_data.2068" }
%"class.absl::optional_internal::optional_data.2068" = type { %"class.absl::optional_internal::optional_data_base.2069" }
%"class.absl::optional_internal::optional_data_base.2069" = type { %"class.absl::optional_internal::optional_data_dtor_base.2070" }
%"class.absl::optional_internal::optional_data_dtor_base.2070" = type { i8, %union.anon.2071 }
%union.anon.2071 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2072", %"class.WTF::Vector.2077" }
%"class.WTF::Vector.2072" = type { %"class.WTF::VectorBuffer.2073" }
%"class.WTF::VectorBuffer.2073" = type { %"class.WTF::VectorBufferBase.2074", [128 x i8] }
%"class.WTF::VectorBufferBase.2074" = type { i32*, i32, i32 }
%"class.WTF::Vector.2077" = type { %"class.WTF::VectorBuffer.2078" }
%"class.WTF::VectorBuffer.2078" = type { %"class.WTF::VectorBufferBase.2079", [128 x i8] }
%"class.WTF::VectorBufferBase.2079" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2082" = type { %"class.WTF::VectorBuffer.2083" }
%"class.WTF::VectorBuffer.2083" = type { %"class.WTF::VectorBufferBase.2084" }
%"class.WTF::VectorBufferBase.2084" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2087" = type { %"class.WTF::HashTable.2088" }
%"class.WTF::HashTable.2088" = type <{ %"struct.WTF::KeyValuePair.2091"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2091" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2092", %"class.WTF::Vector.2097" }
%"class.WTF::HashMap.2092" = type { %"class.WTF::HashTable.2093" }
%"class.WTF::HashTable.2093" = type <{ %"struct.WTF::KeyValuePair.2096"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2096" = type opaque
%"class.WTF::Vector.2097" = type { %"class.WTF::VectorBuffer.2098" }
%"class.WTF::VectorBuffer.2098" = type { %"class.WTF::VectorBufferBase.2099" }
%"class.WTF::VectorBufferBase.2099" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2105" = type { %"class.std::__1::__compressed_pair.2106" }
%"class.std::__1::__compressed_pair.2106" = type { %"struct.std::__1::__compressed_pair_elem.2107" }
%"struct.std::__1::__compressed_pair_elem.2107" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2111" = type { %"class.WTF::VectorBuffer.2112" }
%"class.WTF::VectorBuffer.2112" = type { %"class.WTF::VectorBufferBase.2113" }
%"class.WTF::VectorBufferBase.2113" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2116 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2117" = type { %"class.blink::MemberBase.2118" }
%"class.blink::MemberBase.2118" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2119" = type { %"class.blink::MemberBase.2120" }
%"class.blink::MemberBase.2120" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2121" = type { %"class.blink::MemberBase.2122" }
%"class.blink::MemberBase.2122" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2123" = type { %"class.WTF::HashSet.2126" }
%"class.WTF::HashSet.2126" = type { %"class.WTF::HashTable.2127" }
%"class.WTF::HashTable.2127" = type <{ %"class.blink::WeakMember.2129"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2129" = type opaque
%"class.blink::HeapHashSet.2130" = type { %"class.WTF::HashSet.2133" }
%"class.WTF::HashSet.2133" = type { %"class.WTF::HashTable.2134" }
%"class.WTF::HashTable.2134" = type <{ %"class.blink::WeakMember.2136"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2136" = type opaque
%"class.std::__1::unique_ptr.2137" = type { %"class.std::__1::__compressed_pair.2138" }
%"class.std::__1::__compressed_pair.2138" = type { %"struct.std::__1::__compressed_pair_elem.2139" }
%"struct.std::__1::__compressed_pair_elem.2139" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2140" }
%"class.base::time_internal::TimeBase.2140" = type { i64 }
%"class.std::__1::unique_ptr.2144" = type { %"class.std::__1::__compressed_pair.2145" }
%"class.std::__1::__compressed_pair.2145" = type { %"struct.std::__1::__compressed_pair_elem.2146" }
%"struct.std::__1::__compressed_pair_elem.2146" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2147", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2147" = type { %"class.absl::optional_internal::optional_data.2148" }
%"class.absl::optional_internal::optional_data.2148" = type { %"class.absl::optional_internal::optional_data_base.2149" }
%"class.absl::optional_internal::optional_data_base.2149" = type { %"class.absl::optional_internal::optional_data_dtor_base.2150" }
%"class.absl::optional_internal::optional_data_dtor_base.2150" = type { i8, %union.anon.2151 }
%union.anon.2151 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type <{ %"class.blink::LayoutBlockFlow", %"class.WTF::LinkedHashSet.2155", %"class.WTF::PODIntervalTree.2168", i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2173" = type { %"class.std::__1::__compressed_pair.2174" }
%"class.std::__1::__compressed_pair.2174" = type { %"struct.std::__1::__compressed_pair_elem.2175" }
%"struct.std::__1::__compressed_pair_elem.2175" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.2179" = type { %"class.std::__1::__compressed_pair.2180" }
%"class.std::__1::__compressed_pair.2180" = type { %"struct.std::__1::__compressed_pair_elem.2181" }
%"struct.std::__1::__compressed_pair_elem.2181" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.2185" = type { %"class.std::__1::__compressed_pair.2186" }
%"class.std::__1::__compressed_pair.2186" = type { %"struct.std::__1::__compressed_pair_elem.2187" }
%"struct.std::__1::__compressed_pair_elem.2187" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.1938 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.2191" = type { %"class.blink::PersistentBase.2192" }
%"class.blink::PersistentBase.2192" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.2195", i64 }
%"class.blink::HeapVector.2195" = type { %"class.WTF::Vector.2198" }
%"class.WTF::Vector.2198" = type { %"class.WTF::VectorBuffer.2199" }
%"class.WTF::VectorBuffer.2199" = type { %"class.WTF::VectorBufferBase.2200", [368 x i8] }
%"class.WTF::VectorBufferBase.2200" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.782", i8, %"class.blink::Member.2201", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.2201" = type { %"class.blink::MemberBase.2202" }
%"class.blink::MemberBase.2202" = type { %"class.blink::HeapLinkedHashSet.2203"* }
%"class.blink::HeapLinkedHashSet.2203" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1471" = type { %"class.WTF::Vector.1474" }
%"class.WTF::Vector.1474" = type { %"class.WTF::VectorBuffer.1475" }
%"class.WTF::VectorBuffer.1475" = type { %"class.WTF::VectorBufferBase.1476" }
%"class.WTF::VectorBufferBase.1476" = type { %"class.blink::Member.1477"*, i32, i32 }
%"class.blink::Member.1477" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1479" = type { %"class.blink::MemberBase.1480" }
%"class.blink::MemberBase.1480" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1481" = type { %"class.blink::MemberBase.1482" }
%"class.blink::MemberBase.1482" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1483" = type { %"class.blink::MemberBase.1484" }
%"class.blink::MemberBase.1484" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1485" = type { %"class.blink::MemberBase.1486" }
%"class.blink::MemberBase.1486" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type <{ %"class.blink::Member.3019", %"class.blink::LayoutBlock"*, %"class.WTF::Vector.3021", %"class.blink::TextAutosizer::FingerprintMapper", %"struct.blink::TextAutosizer::PageInfo", i8, i8, [2 x i8] }>
%"class.blink::Member.3019" = type { %"class.blink::MemberBase.3020" }
%"class.blink::MemberBase.3020" = type { %"class.blink::Document"* }
%"class.WTF::Vector.3021" = type { %"class.WTF::VectorBuffer.3022" }
%"class.WTF::VectorBuffer.3022" = type { %"class.WTF::VectorBufferBase.3023" }
%"class.WTF::VectorBufferBase.3023" = type { %"class.std::__1::unique_ptr.3024"*, i32, i32 }
%"class.std::__1::unique_ptr.3024" = type opaque
%"class.blink::TextAutosizer::FingerprintMapper" = type { %"class.WTF::HashMap.3027", %"class.WTF::HashMap.3032", %"class.WTF::HashMap.3037", %"class.WTF::HashSet.3042" }
%"class.WTF::HashMap.3027" = type { %"class.WTF::HashTable.3028" }
%"class.WTF::HashTable.3028" = type <{ %"struct.WTF::KeyValuePair.3031"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3031" = type opaque
%"class.WTF::HashMap.3032" = type { %"class.WTF::HashTable.3033" }
%"class.WTF::HashTable.3033" = type <{ %"struct.WTF::KeyValuePair.3036"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3036" = type opaque
%"class.WTF::HashMap.3037" = type { %"class.WTF::HashTable.3038" }
%"class.WTF::HashTable.3038" = type <{ %"struct.WTF::KeyValuePair.3041"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3041" = type opaque
%"class.WTF::HashSet.3042" = type { %"class.WTF::HashTable.3043" }
%"class.WTF::HashTable.3043" = type <{ %"struct.blink::TextAutosizer::Supercluster"**, i32, i32, i32, [4 x i8] }>
%"struct.blink::TextAutosizer::Supercluster" = type <{ %"class.WTF::HashSet.3046"*, i32, float, i32, [4 x i8] }>
%"class.WTF::HashSet.3046" = type opaque
%"struct.blink::TextAutosizer::PageInfo" = type <{ %"class.blink::mojom::blink::TextAutosizerPageInfo", float, i8, i8, i8, i8 }>
%"class.blink::Member.1487" = type { %"class.blink::MemberBase.1488" }
%"class.blink::MemberBase.1488" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1489" = type { %"class.WTF::HashTable.1490" }
%"class.WTF::HashTable.1490" = type <{ %"struct.WTF::KeyValuePair.1493"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1493" = type opaque
%"class.blink::Member.1494" = type { %"class.blink::MemberBase.1495" }
%"class.blink::MemberBase.1495" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1496" = type { %"class.blink::MemberBase.1497" }
%"class.blink::MemberBase.1497" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1498" = type { %"class.blink::MemberBase.1499" }
%"class.blink::MemberBase.1499" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1054" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1055", { i64, i64 } }
%"class.blink::HeapHashSet.1502" = type { %"class.WTF::HashSet.1505" }
%"class.WTF::HashSet.1505" = type { %"class.WTF::HashTable.1506" }
%"class.WTF::HashTable.1506" = type <{ %"class.blink::Member.1508"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1508" = type opaque
%"class.blink::Member.1509" = type { %"class.blink::MemberBase.1510" }
%"class.blink::MemberBase.1510" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1511" = type { %"class.blink::MemberBase.1512" }
%"class.blink::MemberBase.1512" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1513" = type { %"class.blink::MemberBase.1514" }
%"class.blink::MemberBase.1514" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1515" = type { %"class.blink::MemberBase.1516" }
%"class.blink::MemberBase.1516" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1517" = type { %"class.blink::MemberBase.1518" }
%"class.blink::MemberBase.1518" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1519" = type { %"class.std::__1::__compressed_pair.1520" }
%"class.std::__1::__compressed_pair.1520" = type { %"struct.std::__1::__compressed_pair_elem.1521" }
%"struct.std::__1::__compressed_pair_elem.1521" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1525" = type { %"class.std::__1::__compressed_pair.1526" }
%"class.std::__1::__compressed_pair.1526" = type { %"struct.std::__1::__compressed_pair_elem.1527" }
%"struct.std::__1::__compressed_pair_elem.1527" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", %"class.WTF::HashSet.425", i32, [4 x i8], %"class.WTF::HashMap.1528", %"class.WTF::HashMap.1528", %"class.WTF::HashMap.1528", %"class.WTF::HashMap.1528", %"class.WTF::HashMap.1528", %"class.WTF::HashMap.1528", %"class.WTF::HashMap.1528", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1528" = type { %"class.WTF::HashTable.1529" }
%"class.WTF::HashTable.1529" = type <{ %"struct.WTF::KeyValuePair.1532"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1532" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1536" = type { %"class.blink::MemberBase.1537" }
%"class.blink::MemberBase.1537" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1538" = type { %"class.blink::MemberBase.1539" }
%"class.blink::MemberBase.1539" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1540" = type { %"class.blink::MemberBase.1541" }
%"class.blink::MemberBase.1541" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1542" = type { %"class.blink::MemberBase.1543" }
%"class.blink::MemberBase.1543" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1544" = type { %"class.WTF::VectorBuffer.1545" }
%"class.WTF::VectorBuffer.1545" = type { %"class.WTF::VectorBufferBase.1546" }
%"class.WTF::VectorBufferBase.1546" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1549" = type { %"class.WTF::HashMap.1552" }
%"class.WTF::HashMap.1552" = type { %"class.WTF::HashTable.1553" }
%"class.WTF::HashTable.1553" = type <{ %"struct.WTF::KeyValuePair.1555"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1555" = type opaque
%"class.blink::Member.1556" = type { %"class.blink::MemberBase.1557" }
%"class.blink::MemberBase.1557" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1558" = type { %"class.std::__1::__compressed_pair.1559" }
%"class.std::__1::__compressed_pair.1559" = type { %"struct.std::__1::__compressed_pair_elem.1560" }
%"struct.std::__1::__compressed_pair_elem.1560" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1564" = type { %"class.blink::MemberBase.1565" }
%"class.blink::MemberBase.1565" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1566" = type { %"class.blink::MemberBase.1567" }
%"class.blink::MemberBase.1567" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1568" = type { %"class.WTF::HashMap.1571" }
%"class.WTF::HashMap.1571" = type { %"class.WTF::HashTable.1572" }
%"class.WTF::HashTable.1572" = type <{ %"struct.WTF::KeyValuePair.1574"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1574" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1575" }
%"class.blink::HeapHashSet.1575" = type { %"class.WTF::HashSet.1578" }
%"class.WTF::HashSet.1578" = type { %"class.WTF::HashTable.1579" }
%"class.WTF::HashTable.1579" = type <{ %"class.blink::WeakMember.1581"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1581" = type opaque
%"class.blink::Member.1582" = type { %"class.blink::MemberBase.1583" }
%"class.blink::MemberBase.1583" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1584" = type { %"class.blink::MemberBase.1585" }
%"class.blink::MemberBase.1585" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1591", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1598", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1591" = type { %"class.WTF::HashSet.1594" }
%"class.WTF::HashSet.1594" = type { %"class.WTF::HashTable.1595" }
%"class.WTF::HashTable.1595" = type <{ %"class.blink::Member.1597"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1597" = type opaque
%"class.blink::HeapTaskRunnerTimer.1598" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1599", { i64, i64 } }
%"class.blink::WeakMember.1599" = type { %"class.blink::MemberBase.1585" }
%"class.blink::WeakMember.1586" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.1587" = type { %"class.blink::MemberBase.1588" }
%"class.blink::MemberBase.1588" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.441" = type { %"class.blink::MemberBase.442" }
%"class.blink::MemberBase.442" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.443" = type { %class.scoped_refptr.444 }
%class.scoped_refptr.444 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.445", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.445" = type { %"class.base::RefCounted.446" }
%"class.base::RefCounted.446" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.447" = type { %class.scoped_refptr.448 }
%class.scoped_refptr.448 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.449", [4 x i8], %"class.blink::DataRef.451", %"class.blink::DataRef.517", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.641", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.449" = type { %"class.base::RefCounted.450" }
%"class.base::RefCounted.450" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.451" = type { %class.scoped_refptr.452 }
%class.scoped_refptr.452 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.453", [4 x i8], %"class.blink::DataRef.455", %"class.blink::Persistent.493", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.453" = type { %"class.base::RefCounted.454" }
%"class.base::RefCounted.454" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.455" = type { %class.scoped_refptr.456 }
%class.scoped_refptr.456 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.457", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.475, %class.scoped_refptr.478, %class.scoped_refptr.481, %class.scoped_refptr.484, %class.scoped_refptr.485, %class.scoped_refptr.486, %"class.blink::Persistent.493", %"class.blink::Persistent.508", %"class.absl::optional.512", %"class.absl::optional.512", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.457" = type { %"class.base::RefCounted.458" }
%"class.base::RefCounted.458" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.459", %"class.std::__1::unique_ptr.464" }
%"class.WTF::Vector.459" = type { %"class.WTF::VectorBuffer.460" }
%"class.WTF::VectorBuffer.460" = type { %"class.WTF::VectorBufferBase.461" }
%"class.WTF::VectorBufferBase.461" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.464" = type { %"class.std::__1::__compressed_pair.465" }
%"class.std::__1::__compressed_pair.465" = type { %"struct.std::__1::__compressed_pair_elem.466" }
%"struct.std::__1::__compressed_pair_elem.466" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.467", %"class.WTF::Vector.459", i32, i32 }
%"class.WTF::Vector.467" = type { %"class.WTF::VectorBuffer.468" }
%"class.WTF::VectorBuffer.468" = type { %"class.WTF::VectorBufferBase.469" }
%"class.WTF::VectorBufferBase.469" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.475 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.476", [4 x i8] }>
%"class.WTF::RefCounted.476" = type { %"class.base::RefCounted.477" }
%"class.base::RefCounted.477" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.478 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.479", [4 x i8] }>
%"class.WTF::RefCounted.479" = type { %"class.base::RefCounted.480" }
%"class.base::RefCounted.480" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.481 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.482" }>
%"class.WTF::RefCounted.482" = type { %"class.base::RefCounted.483" }
%"class.base::RefCounted.483" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%class.scoped_refptr.484 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.485 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.486 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.487", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.487" = type { %"class.base::RefCounted.488" }
%"class.base::RefCounted.488" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.489" }
%"class.blink::DataRef.489" = type { %class.scoped_refptr.490 }
%class.scoped_refptr.490 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.491" }
%"class.WTF::RefCounted.491" = type { %"class.base::RefCounted.492" }
%"class.base::RefCounted.492" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.508" = type { %"class.blink::PersistentBase.509" }
%"class.blink::PersistentBase.509" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.478, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.512" = type { %"class.absl::optional_internal::optional_data.513" }
%"class.absl::optional_internal::optional_data.513" = type { %"class.absl::optional_internal::optional_data_base.514" }
%"class.absl::optional_internal::optional_data_base.514" = type { %"class.absl::optional_internal::optional_data_dtor_base.515" }
%"class.absl::optional_internal::optional_data_dtor_base.515" = type { i8, [3 x i8], %union.anon.516 }
%union.anon.516 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::Persistent.493" = type { %"class.blink::PersistentBase.494" }
%"class.blink::PersistentBase.494" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.497" }
%"class.blink::HeapVector.497" = type { %"class.WTF::Vector.500" }
%"class.WTF::Vector.500" = type { %"class.WTF::VectorBuffer.501" }
%"class.WTF::VectorBuffer.501" = type { %"class.WTF::VectorBufferBase.502" }
%"class.WTF::VectorBufferBase.502" = type { %"class.blink::Member.503"*, i32, i32 }
%"class.blink::Member.503" = type { %"class.blink::MemberBase.504" }
%"class.blink::MemberBase.504" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.517" = type { %class.scoped_refptr.518 }
%class.scoped_refptr.518 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.519", %"class.blink::DataRef.521", %"class.blink::DataRef.525", %"class.blink::DataRef.534", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.553", %"class.std::__1::unique_ptr.564", %"class.std::__1::unique_ptr.602", %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.624", %"class.WTF::Vector.630", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.519" = type { %"class.base::RefCounted.520" }
%"class.base::RefCounted.520" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.521" = type { %class.scoped_refptr.522 }
%class.scoped_refptr.522 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.523", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.523" = type { %"class.base::RefCounted.524" }
%"class.base::RefCounted.524" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.525" = type { %class.scoped_refptr.526 }
%class.scoped_refptr.526 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.527", [4 x i8], %"class.WTF::Vector.529", i8, [7 x i8] }>
%"class.WTF::RefCounted.527" = type { %"class.base::RefCounted.528" }
%"class.base::RefCounted.528" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.529" = type { %"class.WTF::VectorBuffer.530" }
%"class.WTF::VectorBuffer.530" = type { %"class.WTF::VectorBufferBase.531" }
%"class.WTF::VectorBufferBase.531" = type { i32*, i32, i32 }
%"class.blink::DataRef.534" = type { %class.scoped_refptr.535 }
%class.scoped_refptr.535 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.536", [4 x i8], %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.538", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.543", %"class.WTF::HashMap.548", %"class.WTF::Vector.459", %"class.WTF::Vector.459", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.536" = type { %"class.base::RefCounted.537" }
%"class.base::RefCounted.537" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.538" = type { %"class.WTF::HashTable.539" }
%"class.WTF::HashTable.539" = type <{ %"struct.WTF::KeyValuePair.542"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.542" = type { %"class.WTF::String", %"class.WTF::Vector.3264" }
%"class.WTF::Vector.3264" = type { %"class.WTF::VectorBuffer.3265" }
%"class.WTF::VectorBuffer.3265" = type { %"class.WTF::VectorBufferBase.3266" }
%"class.WTF::VectorBufferBase.3266" = type { i64*, i32, i32 }
%"class.WTF::HashMap.543" = type { %"class.WTF::HashTable.544" }
%"class.WTF::HashTable.544" = type <{ %"struct.WTF::KeyValuePair.547"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.547" = type { i64, %"class.WTF::Vector.630" }
%"class.WTF::HashMap.548" = type { %"class.WTF::HashTable.549" }
%"class.WTF::HashTable.549" = type <{ %"struct.WTF::KeyValuePair.552"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.552" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.553" = type { %"class.std::__1::__compressed_pair.554" }
%"class.std::__1::__compressed_pair.554" = type { %"struct.std::__1::__compressed_pair_elem.555" }
%"struct.std::__1::__compressed_pair_elem.555" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.556" }
%"class.WTF::HashMap.556" = type { %"class.WTF::HashTable.557" }
%"class.WTF::HashTable.557" = type <{ %"struct.WTF::KeyValuePair.560"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.560" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.2833", %"class.absl::optional.2833", %"class.absl::optional.2833" }
%"class.absl::optional.2833" = type { %"class.absl::optional_internal::optional_data.2834" }
%"class.absl::optional_internal::optional_data.2834" = type { %"class.absl::optional_internal::optional_data_base.2835" }
%"class.absl::optional_internal::optional_data_base.2835" = type { %"class.absl::optional_internal::optional_data_dtor_base.2836" }
%"class.absl::optional_internal::optional_data_dtor_base.2836" = type { i8, %union.anon.2837 }
%union.anon.2837 = type { i32 }
%"class.std::__1::unique_ptr.564" = type { %"class.std::__1::__compressed_pair.565" }
%"class.std::__1::__compressed_pair.565" = type { %"struct.std::__1::__compressed_pair_elem.566" }
%"struct.std::__1::__compressed_pair_elem.566" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.579", %"class.WTF::Vector.567", %"class.WTF::Vector.584", %"class.WTF::Vector.589", %"class.WTF::Vector.594" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.567", %"class.WTF::Vector.567", %"class.WTF::Vector.572" }
%"class.WTF::Vector.572" = type { %"class.WTF::VectorBuffer.573" }
%"class.WTF::VectorBuffer.573" = type { %"class.WTF::VectorBufferBase.574" }
%"class.WTF::VectorBufferBase.574" = type { %class.scoped_refptr.575*, i32, i32 }
%class.scoped_refptr.575 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.576" }
%"class.base::RefCountedThreadSafe.576" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.579" = type { %"class.WTF::VectorBuffer.580" }
%"class.WTF::VectorBuffer.580" = type { %"class.WTF::VectorBufferBase.581" }
%"class.WTF::VectorBufferBase.581" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.567" = type { %"class.WTF::VectorBuffer.568" }
%"class.WTF::VectorBuffer.568" = type { %"class.WTF::VectorBufferBase.569" }
%"class.WTF::VectorBufferBase.569" = type { double*, i32, i32 }
%"class.WTF::Vector.584" = type { %"class.WTF::VectorBuffer.585" }
%"class.WTF::VectorBuffer.585" = type { %"class.WTF::VectorBufferBase.586" }
%"class.WTF::VectorBufferBase.586" = type { i32*, i32, i32 }
%"class.WTF::Vector.589" = type { %"class.WTF::VectorBuffer.590" }
%"class.WTF::VectorBuffer.590" = type { %"class.WTF::VectorBufferBase.591" }
%"class.WTF::VectorBufferBase.591" = type { i32*, i32, i32 }
%"class.WTF::Vector.594" = type { %"class.WTF::VectorBuffer.595" }
%"class.WTF::VectorBuffer.595" = type { %"class.WTF::VectorBufferBase.596" }
%"class.WTF::VectorBufferBase.596" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.602" = type { %"class.std::__1::__compressed_pair.603" }
%"class.std::__1::__compressed_pair.603" = type { %"struct.std::__1::__compressed_pair_elem.604" }
%"struct.std::__1::__compressed_pair_elem.604" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.605" }
%"class.WTF::Vector.605" = type { %"class.WTF::VectorBuffer.606" }
%"class.WTF::VectorBuffer.606" = type { %"class.WTF::VectorBufferBase.607" }
%"class.WTF::VectorBufferBase.607" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.613" = type { %"class.std::__1::__compressed_pair.614" }
%"class.std::__1::__compressed_pair.614" = type { %"struct.std::__1::__compressed_pair_elem.615" }
%"struct.std::__1::__compressed_pair_elem.615" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.616" }
%"class.WTF::Vector.616" = type { %"class.WTF::VectorBuffer.617" }
%"class.WTF::VectorBuffer.617" = type { %"class.WTF::VectorBufferBase.618" }
%"class.WTF::VectorBufferBase.618" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.624" = type { %"class.std::__1::__compressed_pair.625" }
%"class.std::__1::__compressed_pair.625" = type { %"struct.std::__1::__compressed_pair_elem.626" }
%"struct.std::__1::__compressed_pair_elem.626" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.635" }
%"class.WTF::Vector.635" = type { %"class.WTF::VectorBuffer.636" }
%"class.WTF::VectorBuffer.636" = type { %"class.WTF::VectorBufferBase.637" }
%"class.WTF::VectorBufferBase.637" = type { %class.scoped_refptr.638*, i32, i32 }
%class.scoped_refptr.638 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.482", [4 x i8] }>
%"class.blink::Persistent.641" = type { %"class.blink::PersistentBase.642" }
%"class.blink::PersistentBase.642" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.645" }
%"class.blink::Member.645" = type { %"class.blink::MemberBase.646" }
%"class.blink::MemberBase.646" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.647" = type { %class.scoped_refptr.648 }
%class.scoped_refptr.648 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.649", [4 x i8], %"class.blink::DataRef.651", %"class.blink::DataRef.655", %"class.blink::DataRef.676", %"class.blink::DataRef.694", %"class.blink::DataRef.706", %"class.blink::DataRef.710", %class.scoped_refptr.680, i32, [4 x i8] }>
%"class.WTF::RefCounted.649" = type { %"class.base::RefCounted.650" }
%"class.base::RefCounted.650" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.651" = type { %class.scoped_refptr.652 }
%class.scoped_refptr.652 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.653", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.653" = type { %"class.base::RefCounted.654" }
%"class.base::RefCounted.654" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.655" = type { %class.scoped_refptr.656 }
%class.scoped_refptr.656 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.657", %class.scoped_refptr.659, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.657" = type { %"class.base::RefCounted.658" }
%"class.base::RefCounted.658" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.659 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.660", %"class.std::__1::unique_ptr.666", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.479" }>
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.669, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.669 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.670, %class.SkTDArray.671, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.670 = type { i8*, i32, i32 }
%class.SkTDArray.671 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.672 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.672 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.676" = type { %class.scoped_refptr.677 }
%class.scoped_refptr.677 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.678", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.678" = type { %"class.base::RefCounted.679" }
%"class.base::RefCounted.679" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.680, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.694" = type { %class.scoped_refptr.695 }
%class.scoped_refptr.695 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.696", [4 x i8], %class.scoped_refptr.698, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.696" = type { %"class.base::RefCounted.697" }
%"class.base::RefCounted.697" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.698 = type { %"class.base::RefCountedData.699"* }
%"class.base::RefCountedData.699" = type { %"class.base::RefCountedThreadSafe.700", %"class.WTF::Vector.701" }
%"class.base::RefCountedThreadSafe.700" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.701" = type { %"class.WTF::VectorBuffer.702" }
%"class.WTF::VectorBuffer.702" = type { %"class.WTF::VectorBufferBase.703" }
%"class.WTF::VectorBufferBase.703" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.706" = type { %class.scoped_refptr.707 }
%class.scoped_refptr.707 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.708", %class.scoped_refptr.680, %class.scoped_refptr.680, %class.scoped_refptr.680 }
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.710" = type { %class.scoped_refptr.711 }
%class.scoped_refptr.711 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.712", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.712" = type { %"class.base::RefCounted.713" }
%"class.base::RefCounted.713" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.680 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.681", %"class.blink::Persistent.683", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.681" = type { %"class.base::RefCounted.682" }
%"class.base::RefCounted.682" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.683" = type { %"class.blink::PersistentBase.684" }
%"class.blink::PersistentBase.684" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.714" = type { %class.scoped_refptr.715 }
%class.scoped_refptr.715 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.716", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.716" = type { %"class.base::RefCounted.717" }
%"class.base::RefCounted.717" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.718" = type { %class.scoped_refptr.719 }
%class.scoped_refptr.719 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.720", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.720" = type { %"class.base::RefCounted.721" }
%"class.base::RefCounted.721" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.722" = type { %class.scoped_refptr.723 }
%class.scoped_refptr.723 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.724", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.724" = type { %"class.base::RefCounted.725" }
%"class.base::RefCounted.725" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.726" = type { %class.scoped_refptr.727 }
%class.scoped_refptr.727 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.728", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.728" = type { %"class.base::RefCounted.729" }
%"class.base::RefCounted.729" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.730 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.995", %"class.blink::StyleVariables", %class.scoped_refptr.730 }
%"class.WTF::RefCounted.995" = type { %"class.base::RefCounted.996" }
%"class.base::RefCounted.996" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.731" = type { %"class.base::RefCounted.732" }
%"class.base::RefCounted.732" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.733" = type { %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.735" }
%"struct.std::__1::__compressed_pair_elem.735" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.736" }
%"class.std::__1::unique_ptr.736" = type { %"class.std::__1::__compressed_pair.737" }
%"class.std::__1::__compressed_pair.737" = type { %"struct.std::__1::__compressed_pair_elem.738" }
%"struct.std::__1::__compressed_pair_elem.738" = type { %"class.WTF::Vector.739"* }
%"class.WTF::Vector.739" = type { %"class.WTF::VectorBuffer.3471" }
%"class.WTF::VectorBuffer.3471" = type { %"class.WTF::VectorBufferBase.3472", [32 x i8] }
%"class.WTF::VectorBufferBase.3472" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.746" }
%"class.blink::MemberBase.746" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.747" }
%"class.std::__1::unique_ptr.747" = type { %"class.std::__1::__compressed_pair.748" }
%"class.std::__1::__compressed_pair.748" = type { %"struct.std::__1::__compressed_pair_elem.749" }
%"struct.std::__1::__compressed_pair_elem.749" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.750", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.860", %"class.std::__1::unique_ptr.971", i8, %"class.absl::optional.977", %class.scoped_refptr.953, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.982" }
%"class.std::__1::unique_ptr.750" = type { %"class.std::__1::__compressed_pair.751" }
%"class.std::__1::__compressed_pair.751" = type { %"struct.std::__1::__compressed_pair_elem.752" }
%"struct.std::__1::__compressed_pair_elem.752" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.753", %"class.blink::Persistent.759", %"class.std::__1::unique_ptr.819", %"class.blink::CullRect", %"class.std::__1::unique_ptr.835" }
%"class.std::__1::unique_ptr.753" = type { %"class.std::__1::__compressed_pair.754" }
%"class.std::__1::__compressed_pair.754" = type { %"struct.std::__1::__compressed_pair_elem.755" }
%"struct.std::__1::__compressed_pair_elem.755" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.759" = type { %"class.blink::PersistentBase.760" }
%"class.blink::PersistentBase.760" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.786", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.814" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.780", %"class.blink::Member.782", %"class.blink::Member.782", i8, [7 x i8] }>
%"class.blink::Member.780" = type { %"class.blink::MemberBase.781" }
%"class.blink::MemberBase.781" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.784", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.786" = type { %"class.std::__1::__compressed_pair.787" }
%"class.std::__1::__compressed_pair.787" = type { %"struct.std::__1::__compressed_pair_elem.788" }
%"struct.std::__1::__compressed_pair_elem.788" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.789", %"class.absl::optional.794", i8, i8, %"class.WTF::Vector.804" }
%"class.WTF::HashMap.789" = type { %"class.WTF::HashTable.790" }
%"class.WTF::HashTable.790" = type <{ %"struct.WTF::KeyValuePair.793"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.793" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.812" }
%"class.blink::Member.812" = type { %"class.blink::MemberBase.813" }
%"class.blink::MemberBase.813" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.812" }
%"class.absl::optional.814" = type { %"class.absl::optional_internal::optional_data.815" }
%"class.absl::optional_internal::optional_data.815" = type { %"class.absl::optional_internal::optional_data_base.816" }
%"class.absl::optional_internal::optional_data_base.816" = type { %"class.absl::optional_internal::optional_data_dtor_base.817" }
%"class.absl::optional_internal::optional_data_dtor_base.817" = type { i8, %union.anon.818 }
%union.anon.818 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.std::__1::unique_ptr.819" = type { %"class.std::__1::__compressed_pair.820" }
%"class.std::__1::__compressed_pair.820" = type { %"struct.std::__1::__compressed_pair_elem.821" }
%"struct.std::__1::__compressed_pair_elem.821" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.822", %"class.WTF::Vector.822", %"class.WTF::HashMap.827", %"class.WTF::Vector.822", i8, [7 x i8] }>
%"class.WTF::HashMap.827" = type { %"class.WTF::HashTable.828" }
%"class.WTF::HashTable.828" = type <{ %"struct.WTF::KeyValuePair.831"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.831" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.822" }
%"class.WTF::Vector.822" = type { %"class.WTF::VectorBuffer.823" }
%"class.WTF::VectorBuffer.823" = type { %"class.WTF::VectorBufferBase.824" }
%"class.WTF::VectorBufferBase.824" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.835" = type { %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.838", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.844", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.850", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.838" = type { %"class.std::__1::__compressed_pair.839" }
%"class.std::__1::__compressed_pair.839" = type { %"struct.std::__1::__compressed_pair_elem.840" }
%"struct.std::__1::__compressed_pair_elem.840" = type { %"class.blink::TransformationMatrix"* }
%"class.std::__1::unique_ptr.844" = type { %"class.std::__1::__compressed_pair.845" }
%"class.std::__1::__compressed_pair.845" = type { %"struct.std::__1::__compressed_pair_elem.846" }
%"struct.std::__1::__compressed_pair_elem.846" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.850" = type { %"class.blink::PersistentBase.851" }
%"class.blink::PersistentBase.851" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.860" = type { %"class.std::__1::__compressed_pair.861" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.863, %class.scoped_refptr.898, %class.scoped_refptr.902, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.903, %class.scoped_refptr.943, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.944, %class.scoped_refptr.967 }
%class.scoped_refptr.863 = type { %"class.blink::TransformPaintPropertyNode"* }
%class.scoped_refptr.898 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.902 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.903 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.866, %class.scoped_refptr.908, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.930", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.909" }
%"class.std::__1::vector.909" = type { %"class.std::__1::__vector_base.910" }
%"class.std::__1::__vector_base.910" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.925" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.911, [20 x float], i32, [4 x i8], %"class.std::__1::vector.918", i32, [4 x i8] }>
%"class.std::__1::vector.918" = type { %"class.std::__1::__vector_base.919" }
%"class.std::__1::__vector_base.919" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.920" }
%"class.std::__1::__compressed_pair.920" = type { %"struct.std::__1::__compressed_pair_elem.921" }
%"struct.std::__1::__compressed_pair_elem.921" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.930" = type { %"class.std::__1::__compressed_pair.931" }
%"class.std::__1::__compressed_pair.931" = type { %"struct.std::__1::__compressed_pair_elem.932" }
%"struct.std::__1::__compressed_pair_elem.932" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.936" }
%"class.std::__1::vector.936" = type { %"class.std::__1::__vector_base.937" }
%"class.std::__1::__vector_base.937" = type { i32*, i32*, %"class.std::__1::__compressed_pair.938" }
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { i32* }
%class.scoped_refptr.943 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.944 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.956" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.866, %"class.absl::optional.948", %class.scoped_refptr.953, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.948" = type { %"class.absl::optional_internal::optional_data.949" }
%"class.absl::optional_internal::optional_data.949" = type { %"class.absl::optional_internal::optional_data_base.950" }
%"class.absl::optional_internal::optional_data_base.950" = type { %"class.absl::optional_internal::optional_data_dtor_base.951" }
%"class.absl::optional_internal::optional_data_dtor_base.951" = type { i8, [3 x i8], %union.anon.952 }
%union.anon.952 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.956" = type { %"class.std::__1::__compressed_pair.957" }
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.959", i32, [4 x i8] }>
%"class.WTF::Vector.959" = type { %"class.WTF::VectorBuffer.960" }
%"class.WTF::VectorBuffer.960" = type { %"class.WTF::VectorBufferBase.961" }
%"class.WTF::VectorBufferBase.961" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.967 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.971" = type { %"class.std::__1::__compressed_pair.972" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.absl::optional.977" = type { %"class.absl::optional_internal::optional_data.978" }
%"class.absl::optional_internal::optional_data.978" = type { %"class.absl::optional_internal::optional_data_base.979" }
%"class.absl::optional_internal::optional_data_base.979" = type { %"class.absl::optional_internal::optional_data_dtor_base.980" }
%"class.absl::optional_internal::optional_data_dtor_base.980" = type { i8, %union.anon.981 }
%union.anon.981 = type { %"class.blink::IntRect" }
%class.scoped_refptr.953 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.954", [4 x i8] }
%"class.WTF::RefCounted.954" = type { %"class.base::RefCounted.955" }
%"class.base::RefCounted.955" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.982" = type { %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%class.scoped_refptr.1852 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.2829", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.2972, %union.anon.2990, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.2829" = type { %"class.base::RefCounted.2830" }
%"class.base::RefCounted.2830" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.2831, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.2831 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.2832 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.2832 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.2861 }
%class.scoped_refptr.2861 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.2862", [4 x i8], %"class.std::__1::unique_ptr.2864", i64, %"class.WTF::Vector.2868", %"class.WTF::Vector.2873", %"class.WTF::Vector.2879", %"class.WTF::Vector.2897", %class.scoped_refptr.1635, %"class.WTF::HashMap.2903", %"class.WTF::Vector.2908", %"class.WTF::Vector.2868", %"class.WTF::Vector.2914", %"class.WTF::HashMap.2919", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.2862" = type { %"class.base::RefCountedThreadSafe.2863" }
%"class.base::RefCountedThreadSafe.2863" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.2864" = type { %"class.std::__1::__compressed_pair.2865" }
%"class.std::__1::__compressed_pair.2865" = type { %"struct.std::__1::__compressed_pair_elem.2866" }
%"struct.std::__1::__compressed_pair_elem.2866" = type { i8* }
%"class.WTF::Vector.2873" = type { %"class.WTF::VectorBuffer.2874" }
%"class.WTF::VectorBuffer.2874" = type { %"class.WTF::VectorBufferBase.2875", [8 x i8] }
%"class.WTF::VectorBufferBase.2875" = type { %class.scoped_refptr.2876*, i32, i32 }
%class.scoped_refptr.2876 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.2879" = type { %"class.WTF::VectorBuffer.2880" }
%"class.WTF::VectorBuffer.2880" = type { %"class.WTF::VectorBufferBase.2881" }
%"class.WTF::VectorBufferBase.2881" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.2883", %"class.std::__1::unique_ptr.2889" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.2882 }
%class.scoped_refptr.2882 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.2883" = type { %"class.std::__1::__compressed_pair.2884" }
%"class.std::__1::__compressed_pair.2884" = type { %"struct.std::__1::__compressed_pair_elem.2885" }
%"struct.std::__1::__compressed_pair_elem.2885" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2889" = type { %"class.std::__1::__compressed_pair.2890" }
%"class.std::__1::__compressed_pair.2890" = type { %"struct.std::__1::__compressed_pair_elem.2891" }
%"struct.std::__1::__compressed_pair_elem.2891" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.2897" = type { %"class.WTF::VectorBuffer.2898" }
%"class.WTF::VectorBuffer.2898" = type { %"class.WTF::VectorBufferBase.2899" }
%"class.WTF::VectorBufferBase.2899" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.2900", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.2900" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.2903" = type { %"class.WTF::HashTable.2904" }
%"class.WTF::HashTable.2904" = type <{ %"struct.WTF::KeyValuePair.2907"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2907" = type opaque
%"class.WTF::Vector.2908" = type { %"class.WTF::VectorBuffer.2909" }
%"class.WTF::VectorBuffer.2909" = type { %"class.WTF::VectorBufferBase.2910" }
%"class.WTF::VectorBufferBase.2910" = type { %"class.mojo::ScopedHandleBase.2911"*, i32, i32 }
%"class.mojo::ScopedHandleBase.2911" = type { %"class.mojo::Handle" }
%"class.WTF::Vector.2868" = type { %"class.WTF::VectorBuffer.2869" }
%"class.WTF::VectorBuffer.2869" = type { %"class.WTF::VectorBufferBase.2870", [16 x i8] }
%"class.WTF::VectorBufferBase.2870" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.2914" = type { %"class.WTF::VectorBuffer.2915" }
%"class.WTF::VectorBuffer.2915" = type { %"class.WTF::VectorBufferBase.2916" }
%"class.WTF::VectorBufferBase.2916" = type { %"class.mojo::PendingRemote"*, i32, i32 }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.WTF::HashMap.2919" = type { %"class.WTF::HashTable.2920" }
%"class.WTF::HashTable.2920" = type <{ %"struct.WTF::KeyValuePair.2923"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2923" = type { i8**, %"class.std::__1::unique_ptr.3487" }
%"class.std::__1::unique_ptr.3487" = type { %"class.std::__1::__compressed_pair.3488" }
%"class.std::__1::__compressed_pair.3488" = type { %"struct.std::__1::__compressed_pair_elem.3489" }
%"struct.std::__1::__compressed_pair_elem.3489" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.2924" }
%"class.std::__1::unique_ptr.2924" = type { %"class.std::__1::__compressed_pair.2925" }
%"class.std::__1::__compressed_pair.2925" = type { %"struct.std::__1::__compressed_pair_elem.2926" }
%"struct.std::__1::__compressed_pair_elem.2926" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.2927, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.2944" }
%class.scoped_refptr.2927 = type { %"class.base::RefCountedData.2928"* }
%"class.base::RefCountedData.2928" = type { %"class.base::RefCountedThreadSafe.2929", %"class.WTF::Vector.2930" }
%"class.base::RefCountedThreadSafe.2929" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.2930" = type { %"class.WTF::VectorBuffer.2931" }
%"class.WTF::VectorBuffer.2931" = type { %"class.WTF::VectorBufferBase.2932" }
%"class.WTF::VectorBufferBase.2932" = type { %class.scoped_refptr.2933*, i32, i32 }
%class.scoped_refptr.2933 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.2934", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.2936" }
%"class.WTF::RefCounted.2934" = type { %"class.base::RefCounted.2935" }
%"class.base::RefCounted.2935" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.2936" = type { %"class.std::__1::__compressed_pair.2937" }
%"class.std::__1::__compressed_pair.2937" = type { %"struct.std::__1::__compressed_pair_elem.2938" }
%"struct.std::__1::__compressed_pair_elem.2938" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.2944" = type { %"class.std::__1::__compressed_pair.2945" }
%"class.std::__1::__compressed_pair.2945" = type { %"struct.std::__1::__compressed_pair_elem.2946" }
%"struct.std::__1::__compressed_pair_elem.2946" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.2947", %"class.WTF::Vector.2960", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.2947" = type { %"class.WTF::VectorBuffer.2948" }
%"class.WTF::VectorBuffer.2948" = type { %"class.WTF::VectorBufferBase.2949", [320 x i8] }
%"class.WTF::VectorBufferBase.2949" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.2950", %"class.WTF::Vector.2950", %class.scoped_refptr.2955, i8, [7 x i8] }>
%"class.WTF::Vector.2950" = type { %"class.WTF::VectorBuffer.2951" }
%"class.WTF::VectorBuffer.2951" = type { %"class.WTF::VectorBufferBase.2952", [8 x i8] }
%"class.WTF::VectorBufferBase.2952" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.2955 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.2956", %"class.WTF::Vector.2930", %"class.WTF::Vector.2930" }
%"class.WTF::RefCounted.2956" = type { %"class.base::RefCounted.2957" }
%"class.base::RefCounted.2957" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2960" = type { %"class.WTF::VectorBuffer.2961" }
%"class.WTF::VectorBuffer.2961" = type { %"class.WTF::VectorBufferBase.2962", [288 x i8] }
%"class.WTF::VectorBufferBase.2962" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.2950", %"class.WTF::Vector.2950" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.2963 }
%class.scoped_refptr.2963 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.2972 = type { %"class.blink::NGPhysicalFragment"* }
%union.anon.2990 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.1879", %class.scoped_refptr.2991, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.2992, %"class.blink::NGExclusionSpace", %class.scoped_refptr.2861, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.2993", %"class.absl::optional.3009" }
%"class.absl::optional.1879" = type { %"class.absl::optional_internal::optional_data.1880" }
%"class.absl::optional_internal::optional_data.1880" = type { %"class.absl::optional_internal::optional_data_base.1881" }
%"class.absl::optional_internal::optional_data_base.1881" = type { %"class.absl::optional_internal::optional_data_dtor_base.1882" }
%"class.absl::optional_internal::optional_data_dtor_base.1882" = type { i8, %union.anon.1883 }
%union.anon.1883 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.2991 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.3014", [4 x i8], %union.anon.3016, %class.scoped_refptr.2991, i32, [4 x i8] }>
%"class.WTF::RefCounted.3014" = type { %"class.base::RefCounted.3015" }
%"class.base::RefCounted.3015" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.3016 = type { %"class.blink::LayoutBox"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%union.anon.2992 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.2993" = type { %"class.std::__1::__compressed_pair.2994" }
%"class.std::__1::__compressed_pair.2994" = type { %"struct.std::__1::__compressed_pair_elem.2995" }
%"struct.std::__1::__compressed_pair_elem.2995" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.2996", %"class.WTF::Vector.3001", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.2996" = type { %"class.WTF::VectorBuffer.2997" }
%"class.WTF::VectorBuffer.2997" = type { %"class.WTF::VectorBufferBase.2998" }
%"class.WTF::VectorBufferBase.2998" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.3001" = type { %"class.WTF::VectorBuffer.3002" }
%"class.WTF::VectorBuffer.3002" = type { %"class.WTF::VectorBufferBase.3003" }
%"class.WTF::VectorBufferBase.3003" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.3009" = type { %"class.absl::optional_internal::optional_data.3010" }
%"class.absl::optional_internal::optional_data.3010" = type { %"class.absl::optional_internal::optional_data_base.3011" }
%"class.absl::optional_internal::optional_data_base.3011" = type { %"class.absl::optional_internal::optional_data_dtor_base.3012" }
%"class.absl::optional_internal::optional_data_dtor_base.3012" = type { i8, %union.anon.3013 }
%union.anon.3013 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.1853" = type { %"class.WTF::VectorBuffer.1854" }
%"class.WTF::VectorBuffer.1854" = type { %"class.WTF::VectorBufferBase.1855", [8 x i8] }
%"class.WTF::VectorBufferBase.1855" = type { %class.scoped_refptr.1852*, i32, i32 }
%"class.std::__1::unique_ptr.1858" = type { %"class.std::__1::__compressed_pair.1859" }
%"class.std::__1::__compressed_pair.1859" = type { %"struct.std::__1::__compressed_pair_elem.1860" }
%"struct.std::__1::__compressed_pair_elem.1860" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1861", %"class.absl::optional.1866", %"class.absl::optional.1871" }
%"class.absl::optional.1861" = type { %"class.absl::optional_internal::optional_data.1862" }
%"class.absl::optional_internal::optional_data.1862" = type { %"class.absl::optional_internal::optional_data_base.1863" }
%"class.absl::optional_internal::optional_data_base.1863" = type { %"class.absl::optional_internal::optional_data_dtor_base.1864" }
%"class.absl::optional_internal::optional_data_dtor_base.1864" = type { i8, %union.anon.1865 }
%union.anon.1865 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1866" = type { %"class.absl::optional_internal::optional_data.1867" }
%"class.absl::optional_internal::optional_data.1867" = type { %"class.absl::optional_internal::optional_data_base.1868" }
%"class.absl::optional_internal::optional_data_base.1868" = type { %"class.absl::optional_internal::optional_data_dtor_base.1869" }
%"class.absl::optional_internal::optional_data_dtor_base.1869" = type { i8, [3 x i8], %union.anon.1870 }
%union.anon.1870 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.1871" = type { %"class.absl::optional_internal::optional_data.1872" }
%"class.absl::optional_internal::optional_data.1872" = type { %"class.absl::optional_internal::optional_data_base.1873" }
%"class.absl::optional_internal::optional_data_base.1873" = type { %"class.absl::optional_internal::optional_data_dtor_base.1874" }
%"class.absl::optional_internal::optional_data_dtor_base.1874" = type { i8, %union.anon.1875 }
%union.anon.1875 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type { %"class.blink::LayoutBox"*, %"class.absl::optional.1879", %"class.absl::optional.1879", i8, i8, i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.1884 = type { %"class.blink::InlineBox"* }
%"class.blink::Persistent.1885" = type { %"class.blink::PersistentBase.1886" }
%"class.blink::PersistentBase.1886" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.1889", %"struct.blink::PhysicalRect", %"class.blink::Member.1899" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type { %"class.blink::LayoutBox", %"class.blink::LayoutBox"* }
%"class.std::__1::unique_ptr.1889" = type { %"class.std::__1::__compressed_pair.1890" }
%"class.std::__1::__compressed_pair.1890" = type { %"struct.std::__1::__compressed_pair_elem.1891" }
%"struct.std::__1::__compressed_pair_elem.1891" = type { %"class.WTF::HashSet.1892"* }
%"class.WTF::HashSet.1892" = type { %"class.WTF::HashTable.1893" }
%"class.WTF::HashTable.1893" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1899" = type { %"class.blink::MemberBase.1900" }
%"class.blink::MemberBase.1900" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.WTF::HashMap.3191" = type { %"class.WTF::HashTable.3192" }
%"class.WTF::HashTable.3192" = type <{ %"struct.WTF::KeyValuePair.3195"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3195" = type { %"class.blink::LayoutBlock"*, %"class.std::__1::unique_ptr.3208" }
%"class.std::__1::unique_ptr.3208" = type { %"class.std::__1::__compressed_pair.3209" }
%"class.std::__1::__compressed_pair.3209" = type { %"struct.std::__1::__compressed_pair_elem.3210" }
%"struct.std::__1::__compressed_pair_elem.3210" = type { %"class.WTF::ListHashSet.3211"* }
%"class.WTF::ListHashSet.3211" = type { %"class.WTF::HashTable.3214", %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16>::AllocatorProvider" }
%"class.WTF::HashTable.3214" = type <{ %"class.WTF::MallocedListHashSetNode.3217"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode.3217" = type { %"class.blink::LayoutBox"*, %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"* }
%"class.WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator.3218"* }
%"struct.WTF::MallocedListHashSetAllocator.3218" = type { %"class.WTF::MallocedListHashSetNode.3217"*, i8, [7 x i8], [384 x i8] }
%"class.WTF::HashMap.3198" = type { %"class.WTF::HashTable.3199" }
%"class.WTF::HashTable.3199" = type <{ %"struct.WTF::KeyValuePair.3202"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3202" = type { %"class.blink::LayoutBox"*, %"class.blink::LayoutBlock"* }
%"class.blink::LayoutObject::AncestorSkipInfo" = type <{ %"class.blink::LayoutObject"*, i8, i8, i8, [5 x i8] }>
%"class.WTF::Vector.3310" = type { %"class.WTF::VectorBuffer.3311" }
%"class.WTF::VectorBuffer.3311" = type { %"class.WTF::VectorBufferBase.1929", [128 x i8] }
%"class.blink::DisableCompositingQueryAsserts" = type { %"class.base::AutoReset" }
%"class.base::AutoReset" = type <{ i32*, i32, [4 x i8] }>
%"class.blink::ObjectPaintInvalidator" = type { %"class.blink::LayoutObject"* }
%"class.blink::SubtreeLayoutScope" = type { %"class.blink::LayoutObject"* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::LayoutGrid" = type <{ %"class.blink::LayoutBlock.base", [6 x i8], %"class.blink::LayoutNGGridInterface", %"class.std::__1::unique_ptr.3222", %"class.blink::GridTrackSizingAlgorithm", %"class.WTF::Vector.3285", %"class.WTF::Vector.3285", %"struct.blink::ContentAlignmentData", %"struct.blink::ContentAlignmentData", %"class.WTF::HashMap.3290", %"class.WTF::HashMap.3290", i8, i8, %"class.absl::optional.3295", [4 x i8] }>
%"class.blink::LayoutNGGridInterface" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3222" = type { %"class.std::__1::__compressed_pair.3223" }
%"class.std::__1::__compressed_pair.3223" = type { %"struct.std::__1::__compressed_pair_elem.3224" }
%"struct.std::__1::__compressed_pair_elem.3224" = type { %"class.blink::Grid"* }
%"class.blink::Grid" = type { i32 (...)**, %"class.blink::OrderIterator", i64, i64, i64, i64, i8, [7 x i8], %"class.WTF::HashMap.3234", %"class.WTF::HashMap.3239", %"class.std::__1::unique_ptr.3244", %"class.std::__1::unique_ptr.3244" }
%"class.blink::OrderIterator" = type <{ %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*, %"class.std::__1::set", %"class.std::__1::__tree_const_iterator", i8, [7 x i8] }>
%"class.std::__1::set" = type { %"class.std::__1::__tree.3225" }
%"class.std::__1::__tree.3225" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3226", %"class.std::__1::__compressed_pair.3230" }
%"class.std::__1::__compressed_pair.3226" = type { %"struct.std::__1::__compressed_pair_elem.1648" }
%"class.std::__1::__compressed_pair.3230" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__tree_const_iterator" = type { %"class.std::__1::__tree_end_node"* }
%"class.WTF::HashMap.3234" = type { %"class.WTF::HashTable.3235" }
%"class.WTF::HashTable.3235" = type <{ %"struct.WTF::KeyValuePair.3238"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3238" = type { %"class.blink::LayoutBox"*, %"struct.blink::GridArea" }
%"class.WTF::HashMap.3239" = type { %"class.WTF::HashTable.3240" }
%"class.WTF::HashTable.3240" = type <{ %"struct.WTF::KeyValuePair.3243"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3243" = type { %"class.blink::LayoutBox"*, i64 }
%"class.std::__1::unique_ptr.3244" = type { %"class.std::__1::__compressed_pair.3245" }
%"class.std::__1::__compressed_pair.3245" = type { %"struct.std::__1::__compressed_pair_elem.3246" }
%"struct.std::__1::__compressed_pair_elem.3246" = type { %"class.WTF::LinkedHashSet.3247"* }
%"class.WTF::LinkedHashSet.3247" = type { %"class.WTF::HashMap.3554", %"class.WTF::VectorBackedLinkedList.3559" }
%"class.WTF::HashMap.3554" = type { %"class.WTF::HashTable.3555" }
%"class.WTF::HashTable.3555" = type <{ %"struct.WTF::KeyValuePair.3558"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3558" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::VectorBackedLinkedList.3559" = type { %"class.WTF::Vector.3560", i32, i32 }
%"class.WTF::Vector.3560" = type { %"class.WTF::VectorBuffer.3561" }
%"class.WTF::VectorBuffer.3561" = type { %"class.WTF::VectorBufferBase.3562" }
%"class.WTF::VectorBufferBase.3562" = type { %"class.WTF::VectorBackedLinkedListNode.3563"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.3563" = type { i32, i32, i64 }
%"class.blink::GridTrackSizingAlgorithm" = type { i8, i8, %"class.absl::optional.1879", %"class.absl::optional.1879", %"class.absl::optional.1879", %"class.absl::optional.1879", %"class.WTF::Vector.3254", %"class.WTF::Vector.3254", %"class.WTF::Vector.3264", %"class.WTF::Vector.3264", %"class.WTF::Vector.3264", i32, %"class.blink::Grid"*, %"class.blink::LayoutGrid"*, %"class.std::__1::unique_ptr.3269", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, [4 x i8], %"class.blink::GridBaselineAlignment", %"class.WTF::HashMap.3280", %"class.WTF::HashMap.3280" }
%"class.WTF::Vector.3254" = type { %"class.WTF::VectorBuffer.3255" }
%"class.WTF::VectorBuffer.3255" = type { %"class.WTF::VectorBufferBase.3256" }
%"class.WTF::VectorBufferBase.3256" = type { %"class.blink::GridTrack"*, i32, i32 }
%"class.blink::GridTrack" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.absl::optional.1879", i8, [7 x i8], %"class.absl::optional.3257" }
%"class.absl::optional.3257" = type { %"class.absl::optional_internal::optional_data.3258" }
%"class.absl::optional_internal::optional_data.3258" = type { %"class.absl::optional_internal::optional_data_base.3259" }
%"class.absl::optional_internal::optional_data_base.3259" = type { %"class.absl::optional_internal::optional_data_dtor_base.3260" }
%"class.absl::optional_internal::optional_data_dtor_base.3260" = type { i8, [7 x i8], %union.anon.3261 }
%union.anon.3261 = type { %"class.blink::GridTrackSize" }
%"class.std::__1::unique_ptr.3269" = type { %"class.std::__1::__compressed_pair.3270" }
%"class.std::__1::__compressed_pair.3270" = type { %"struct.std::__1::__compressed_pair_elem.3271" }
%"struct.std::__1::__compressed_pair_elem.3271" = type { %"class.blink::GridTrackSizingAlgorithmStrategy"* }
%"class.blink::GridTrackSizingAlgorithmStrategy" = type { i32 (...)**, %"class.blink::GridTrackSizingAlgorithm"* }
%"class.blink::GridBaselineAlignment" = type { i8, [7 x i8], %"class.WTF::HashMap.3275", %"class.WTF::HashMap.3275" }
%"class.WTF::HashMap.3275" = type { %"class.WTF::HashTable.3276" }
%"class.WTF::HashTable.3276" = type <{ %"struct.WTF::KeyValuePair.3279"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3279" = type { i32, %"class.std::__1::unique_ptr.3566" }
%"class.std::__1::unique_ptr.3566" = type { %"class.std::__1::__compressed_pair.3567" }
%"class.std::__1::__compressed_pair.3567" = type { %"struct.std::__1::__compressed_pair_elem.3568" }
%"struct.std::__1::__compressed_pair_elem.3568" = type { %"class.blink::BaselineContext"* }
%"class.blink::BaselineContext" = type { %"class.WTF::Vector.3569" }
%"class.WTF::Vector.3569" = type { %"class.WTF::VectorBuffer.3570" }
%"class.WTF::VectorBuffer.3570" = type { %"class.WTF::VectorBufferBase.3571" }
%"class.WTF::VectorBufferBase.3571" = type { %"class.blink::BaselineGroup"*, i32, i32 }
%"class.blink::BaselineGroup" = type { i8, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::HashSet.3572" }
%"class.WTF::HashSet.3572" = type { %"class.WTF::HashTable.3573" }
%"class.WTF::HashTable.3573" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::HashMap.3280" = type { %"class.WTF::HashTable.3281" }
%"class.WTF::HashTable.3281" = type <{ %"struct.WTF::KeyValuePair.3284"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3284" = type <{ %"class.blink::LayoutBox"*, i8, [7 x i8] }>
%"class.WTF::Vector.3285" = type { %"class.WTF::VectorBuffer.3286" }
%"class.WTF::VectorBuffer.3286" = type { %"class.WTF::VectorBufferBase.3287" }
%"class.WTF::VectorBufferBase.3287" = type { %"class.blink::LayoutUnit"*, i32, i32 }
%"struct.blink::ContentAlignmentData" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.WTF::HashMap.3290" = type { %"class.WTF::HashTable.3291" }
%"class.WTF::HashTable.3291" = type <{ %"struct.WTF::KeyValuePair.3294"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3294" = type opaque
%"class.absl::optional.3295" = type { %"class.absl::optional_internal::optional_data.3296" }
%"class.absl::optional_internal::optional_data.3296" = type { %"class.absl::optional_internal::optional_data_base.3297" }
%"class.absl::optional_internal::optional_data_base.3297" = type { %"class.absl::optional_internal::optional_data_dtor_base.3298" }
%"class.absl::optional_internal::optional_data_dtor_base.3298" = type { i8, %union.anon.3299 }
%union.anon.3299 = type { i8 }
%"class.blink::LayoutAnalyzer::Scope" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutAnalyzer"* }
%"class.blink::ComputedStyleBase" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.443", %"class.blink::DataRef.447", %"class.blink::DataRef.647", %"class.blink::DataRef.714", %"class.blink::DataRef.718", %"class.blink::DataRef.722", %"class.blink::DataRef.726", [20 x i8], [4 x i8] }>
%"class.blink::DisplayLockContext" = type <{ %"class.blink::LocalFrameView::LifecycleNotificationObserver", %"class.blink::WeakMember.3184", %"class.blink::WeakMember.1055", i32, [4 x i8], %"class.blink::HeapHashSet.1340", i32, i32, i8, i8, i8, i8, i8, i8, i8, i8, i16, i8, i8, i8, i8, i8, i8, i8, [6 x i8], i8, i32, i8, i8, [2 x i8], %"class.absl::optional.3588", [4 x i8] }>
%"class.blink::LocalFrameView::LifecycleNotificationObserver" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.3588" = type { %"class.absl::optional_internal::optional_data.3589" }
%"class.absl::optional_internal::optional_data.3589" = type { %"class.absl::optional_internal::optional_data_base.3590" }
%"class.absl::optional_internal::optional_data_base.3590" = type { %"class.absl::optional_internal::optional_data_dtor_base.3591" }
%"class.absl::optional_internal::optional_data_dtor_base.3591" = type { i8, %union.anon.3592 }
%union.anon.3592 = type { %"class.blink::FloatSize" }
%"class.blink::TextAutosizer::LayoutScope" = type { %"class.blink::TextAutosizer"*, %"class.blink::LayoutBlock"* }
%"struct.blink::LayoutBox::LogicalExtentComputedValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::LayoutBox::ComputedMarginValues" }
%"struct.blink::LayoutBox::ComputedMarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.anon.3595 = type { %"class.blink::LayoutObject"*, i8** }
%"class.blink::LayoutFlexibleBox" = type <{ %"class.blink::LayoutBlock.base", [6 x i8], %"class.WTF::HashMap.3300", %"class.WTF::HashSet.3305", %"class.blink::OrderIterator", i32, i32, i8, [7 x i8] }>
%"class.WTF::HashMap.3300" = type { %"class.WTF::HashTable.3301" }
%"class.WTF::HashTable.3301" = type <{ %"struct.WTF::KeyValuePair.3304"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3304" = type opaque
%"class.WTF::HashSet.3305" = type { %"class.WTF::HashTable.3306" }
%"class.WTF::HashTable.3306" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"struct.blink::PaintInfo" = type opaque
%"class.blink::BlockPainter" = type { %"class.blink::LayoutBlock"* }
%"struct.blink::PaintInvalidatorContext" = type opaque
%"class.blink::BlockPaintInvalidator" = type { %"class.blink::LayoutBlock"* }
%"class.blink::NGBoxFragmentPainter" = type { %"class.blink::BoxPainterBase", %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::DisplayItemClient"*, %"class.blink::NGFragmentItems"*, %"class.blink::NGFragmentItem"*, %"class.blink::NGInlineCursor"* }
%"class.blink::BoxPainterBase" = type { i32 (...)**, %"class.blink::Document"*, %"class.blink::ComputedStyle"*, %"class.blink::Node"* }
%"class.blink::NGFragmentItems" = type { %"class.WTF::String", %"class.WTF::String", i32, i32, [0 x %"class.blink::NGFragmentItem"] }
%"class.blink::NGFragmentItem" = type <{ %"class.blink::LayoutObject"*, %union.anon.3314, %"struct.blink::PhysicalRect", %"class.blink::NGInkOverflow", i32, i32, i16, [6 x i8] }>
%union.anon.3314 = type { %"struct.blink::NGFragmentItem::TextItem" }
%"struct.blink::NGFragmentItem::TextItem" = type { %class.scoped_refptr.3315, %"struct.blink::NGTextOffset" }
%class.scoped_refptr.3315 = type { %"class.blink::ShapeResultView"* }
%"class.blink::ShapeResultView" = type { %"class.WTF::RefCounted.3316", %class.scoped_refptr.3318, i32, i32, i32, i32, float, i32, [0 x %struct.anon.3319] }
%"class.WTF::RefCounted.3316" = type { %"class.base::RefCounted.3317" }
%"class.base::RefCounted.3317" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.3318 = type { %"class.blink::SimpleFontData"* }
%struct.anon.3319 = type { i8* }
%"struct.blink::NGTextOffset" = type { i32, i32 }
%"class.blink::NGInlineCursor" = type <{ %"class.blink::NGInlineCursorPosition", %"class.base::span", %"class.blink::NGFragmentItems"*, %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGInlineCursor::CulledInlineTraversal", %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutUnit", i32, i32, [4 x i8] }>
%"class.blink::NGInlineCursorPosition" = type { %"class.blink::NGFragmentItem"*, %"class.base::CheckedContiguousIterator" }
%"class.base::CheckedContiguousIterator" = type { %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"* }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"class.blink::NGFragmentItem"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.blink::NGInlineCursor::CulledInlineTraversal" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutInline"*, i8, [7 x i8] }>
%"class.blink::InlineTextBox" = type { %"class.blink::InlineBox", %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*, i32, i16, i16 }
%"class.blink::HTMLMarqueeElement" = type { %"class.blink::HTMLElement", i32, i32, %"class.blink::Member.343", %"class.blink::Member.3328" }
%"class.blink::HTMLElement" = type { %"class.blink::Element" }
%"class.blink::Member.3328" = type { %"class.blink::MemberBase.3329" }
%"class.blink::MemberBase.3329" = type { %"class.blink::Animation"* }
%"class.blink::Animation" = type <{ %"class.blink::EventTargetWithInlineData", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextLifecycleObserver.base", [4 x i8], %"class.blink::CompositorAnimationDelegate", %"class.blink::CompositorAnimationClient", %"class.blink::AnimationEffectOwner", %"class.blink::ThreadState::PrefinalizerRegistration.3332", [7 x i8], %"class.WTF::String", i32, [4 x i8], double, %"class.absl::optional.3333", %"class.absl::optional.3338", %"class.absl::optional.3338", %"class.absl::optional.3343", %"class.absl::optional.3338", i8, [3 x i8], i32, %"class.blink::Member.3348", %"class.blink::Member.3348", %"class.blink::Member.3350", %"class.blink::Member.326", %"class.blink::Member.3363", i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], %"class.blink::Member.3415", %"class.blink::Member.3415", %"class.blink::Member.3415", %"class.std::__1::unique_ptr.3428", i8, [3 x i8], i32, %"class.blink::Member.3434", i8, [7 x i8], %"class.base::TimeTicks", i8, i8, i8, [5 x i8] }>
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextLifecycleObserver.base" = type <{ %"class.blink::ContextLifecycleObserver", i32 }>
%"class.blink::CompositorAnimationDelegate" = type { i32 (...)** }
%"class.blink::CompositorAnimationClient" = type { i32 (...)** }
%"class.blink::AnimationEffectOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ThreadState::PrefinalizerRegistration.3332" = type { i8 }
%"class.absl::optional.3333" = type { %"class.absl::optional_internal::optional_data.3334" }
%"class.absl::optional_internal::optional_data.3334" = type { %"class.absl::optional_internal::optional_data_base.3335" }
%"class.absl::optional_internal::optional_data_base.3335" = type { %"class.absl::optional_internal::optional_data_dtor_base.3336" }
%"class.absl::optional_internal::optional_data_dtor_base.3336" = type { i8, %union.anon.3337 }
%union.anon.3337 = type { double }
%"class.absl::optional.3343" = type { %"class.absl::optional_internal::optional_data.3344" }
%"class.absl::optional_internal::optional_data.3344" = type { %"class.absl::optional_internal::optional_data_base.3345" }
%"class.absl::optional_internal::optional_data_base.3345" = type { %"class.absl::optional_internal::optional_data_dtor_base.3346" }
%"class.absl::optional_internal::optional_data_dtor_base.3346" = type { i8, %union.anon.3347 }
%union.anon.3347 = type { i32 }
%"class.absl::optional.3338" = type { %"class.absl::optional_internal::optional_data.3339" }
%"class.absl::optional_internal::optional_data.3339" = type { %"class.absl::optional_internal::optional_data_base.3340" }
%"class.absl::optional_internal::optional_data_base.3340" = type { %"class.absl::optional_internal::optional_data_dtor_base.3341" }
%"class.absl::optional_internal::optional_data_dtor_base.3341" = type { i8, %union.anon.3342 }
%union.anon.3342 = type { %"class.blink::AnimationTimeDelta" }
%"class.blink::AnimationTimeDelta" = type { double }
%"class.blink::Member.3348" = type { %"class.blink::MemberBase.3349" }
%"class.blink::MemberBase.3349" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.3350" = type { %"class.blink::MemberBase.3351" }
%"class.blink::MemberBase.3351" = type { %"class.blink::AnimationEffect"* }
%"class.blink::AnimationEffect" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.3352", %"struct.blink::Timing", %"class.blink::Member.3354", %"struct.blink::Timing::CalculatedTiming", i8, %"class.absl::optional.3338", %"class.absl::optional.3358", %"class.blink::AnimationTimeDelta" }
%"class.blink::Member.3352" = type { %"class.blink::MemberBase.3353" }
%"class.blink::MemberBase.3353" = type { %"class.blink::AnimationEffectOwner"* }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional.3338", i32, [4 x i8], %class.scoped_refptr.575, i16, [6 x i8] }>
%"class.blink::Member.3354" = type { %"class.blink::MemberBase.3355" }
%"class.blink::MemberBase.3355" = type { %"class.blink::AnimationEffect::EventDelegate"* }
%"class.blink::AnimationEffect::EventDelegate" = type { i32 (...)** }
%"struct.blink::Timing::CalculatedTiming" = type { i32, %"class.absl::optional.3333", %"class.absl::optional.3333", i8, i8, i8, %"class.absl::optional.3338", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta" }
%"class.absl::optional.3358" = type { %"class.absl::optional_internal::optional_data.3359" }
%"class.absl::optional_internal::optional_data.3359" = type { %"class.absl::optional_internal::optional_data_base.3360" }
%"class.absl::optional_internal::optional_data_base.3360" = type { %"class.absl::optional_internal::optional_data_dtor_base.3361" }
%"class.absl::optional_internal::optional_data_dtor_base.3361" = type { i8, %union.anon.3362 }
%union.anon.3362 = type { i32 }
%"class.blink::Member.3363" = type { %"class.blink::MemberBase.3364" }
%"class.blink::MemberBase.3364" = type { %"class.blink::AnimationTimeline"* }
%"class.blink::AnimationTimeline" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.326", i32, [4 x i8], %"class.blink::HeapHashSet.3365", %"class.blink::HeapHashSet.3371", %"class.std::__1::unique_ptr.3378", %"class.absl::optional.3410" }
%"class.blink::HeapHashSet.3365" = type { %"class.WTF::HashSet.3368" }
%"class.WTF::HashSet.3368" = type { %"class.WTF::HashTable.3369" }
%"class.WTF::HashTable.3369" = type <{ %"class.blink::Member.3328"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashSet.3371" = type { %"class.WTF::HashSet.3374" }
%"class.WTF::HashSet.3374" = type { %"class.WTF::HashTable.3375" }
%"class.WTF::HashTable.3375" = type <{ %"class.blink::WeakMember.3377"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3377" = type opaque
%"class.std::__1::unique_ptr.3378" = type { %"class.std::__1::__compressed_pair.3379" }
%"class.std::__1::__compressed_pair.3379" = type { %"struct.std::__1::__compressed_pair_elem.3380" }
%"struct.std::__1::__compressed_pair_elem.3380" = type { %"class.blink::CompositorAnimationTimeline"* }
%"class.blink::CompositorAnimationTimeline" = type { %class.scoped_refptr.3381 }
%class.scoped_refptr.3381 = type { %"class.cc::AnimationTimeline"* }
%"class.cc::AnimationTimeline" = type <{ i32 (...)**, %"class.base::RefCounted.3382", [4 x i8], %"class.std::__1::unordered_map", i32, [4 x i8], %"class.cc::AnimationHost"*, i8, i8, [6 x i8] }>
%"class.base::RefCounted.3382" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table.3383" }
%"class.std::__1::__hash_table.3383" = type <{ %"class.std::__1::unique_ptr.3384", %"class.std::__1::__compressed_pair.3394", %"class.std::__1::__compressed_pair.3399", %"class.std::__1::__compressed_pair.3403", [4 x i8] }>
%"class.std::__1::unique_ptr.3384" = type { %"class.std::__1::__compressed_pair.3385" }
%"class.std::__1::__compressed_pair.3385" = type { %"struct.std::__1::__compressed_pair_elem.3386", %"struct.std::__1::__compressed_pair_elem.3388" }
%"struct.std::__1::__compressed_pair_elem.3386" = type { %"struct.std::__1::__hash_node_base.3387"** }
%"struct.std::__1::__hash_node_base.3387" = type { %"struct.std::__1::__hash_node_base.3387"* }
%"struct.std::__1::__compressed_pair_elem.3388" = type { %"class.std::__1::__bucket_list_deallocator.3389" }
%"class.std::__1::__bucket_list_deallocator.3389" = type { %"class.std::__1::__compressed_pair.3390" }
%"class.std::__1::__compressed_pair.3390" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.3394" = type { %"struct.std::__1::__compressed_pair_elem.3395" }
%"struct.std::__1::__compressed_pair_elem.3395" = type { %"struct.std::__1::__hash_node_base.3387" }
%"class.std::__1::__compressed_pair.3399" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.3403" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"class.cc::AnimationHost" = type opaque
%"class.absl::optional.3410" = type { %"class.absl::optional_internal::optional_data.3411" }
%"class.absl::optional_internal::optional_data.3411" = type { %"class.absl::optional_internal::optional_data_base.3412" }
%"class.absl::optional_internal::optional_data_base.3412" = type { %"class.absl::optional_internal::optional_data_dtor_base.3413" }
%"class.absl::optional_internal::optional_data_dtor_base.3413" = type { i8, %union.anon.3414 }
%union.anon.3414 = type { %"struct.blink::AnimationTimeline::PhaseAndTime" }
%"struct.blink::AnimationTimeline::PhaseAndTime" = type { i32, %"class.absl::optional.1748" }
%"class.blink::Member.3415" = type { %"class.blink::MemberBase.3416" }
%"class.blink::MemberBase.3416" = type { %"class.blink::Event"* }
%"class.blink::Event" = type { %"class.blink::ScriptWrappable", %"class.WTF::AtomicString", i16, i32, i8, %"class.blink::probe::AsyncTaskId", %"class.blink::Member.3422", %"class.blink::Member.3422", %"class.blink::Member.3424", %"class.blink::Member.3426", %"class.base::TimeTicks" }
%"class.blink::probe::AsyncTaskId" = type { i8, %"class.absl::optional.3417" }
%"class.absl::optional.3417" = type { %"class.absl::optional_internal::optional_data.3418" }
%"class.absl::optional_internal::optional_data.3418" = type { %"class.absl::optional_internal::optional_data_base.3419" }
%"class.absl::optional_internal::optional_data_base.3419" = type { %"class.absl::optional_internal::optional_data_dtor_base.3420" }
%"class.absl::optional_internal::optional_data_dtor_base.3420" = type { i8, %union.anon.3421 }
%union.anon.3421 = type { i64 }
%"class.blink::Member.3422" = type { %"class.blink::MemberBase.3423" }
%"class.blink::MemberBase.3423" = type { %"class.blink::EventTarget"* }
%"class.blink::Member.3424" = type { %"class.blink::MemberBase.3425" }
%"class.blink::MemberBase.3425" = type { %"class.blink::Event"* }
%"class.blink::Member.3426" = type { %"class.blink::MemberBase.3427" }
%"class.blink::MemberBase.3427" = type { %"class.blink::EventPath"* }
%"class.blink::EventPath" = type opaque
%"class.std::__1::unique_ptr.3428" = type { %"class.std::__1::__compressed_pair.3429" }
%"class.std::__1::__compressed_pair.3429" = type { %"struct.std::__1::__compressed_pair_elem.3430" }
%"struct.std::__1::__compressed_pair_elem.3430" = type { %"class.blink::Animation::CompositorState"* }
%"class.blink::Animation::CompositorState" = type { %"class.absl::optional.3333", %"class.absl::optional.3333", double, i8, i32 }
%"class.blink::Member.3434" = type { %"class.blink::MemberBase.3435" }
%"class.blink::MemberBase.3435" = type { %"class.blink::Animation::CompositorAnimationHolder"* }
%"class.blink::Animation::CompositorAnimationHolder" = type { %"class.blink::ThreadState::PrefinalizerRegistration.3438", %"class.std::__1::unique_ptr.3439", %"class.blink::Member.3328" }
%"class.blink::ThreadState::PrefinalizerRegistration.3438" = type { i8 }
%"class.std::__1::unique_ptr.3439" = type { %"class.std::__1::__compressed_pair.3440" }
%"class.std::__1::__compressed_pair.3440" = type { %"struct.std::__1::__compressed_pair_elem.3441" }
%"struct.std::__1::__compressed_pair_elem.3441" = type { %"class.blink::CompositorAnimation"* }
%"class.blink::CompositorAnimation" = type opaque
%"class.blink::LayoutNGTableCellInterface" = type { i32 (...)** }
%"class.WTF::Vector.3445" = type { %"class.WTF::VectorBuffer.3446" }
%"class.WTF::VectorBuffer.3446" = type { %"class.WTF::VectorBufferBase.3447" }
%"class.WTF::VectorBufferBase.3447" = type { %"struct.blink::PhysicalRect"*, i32, i32 }
%"class.absl::optional.3451" = type { %"class.absl::optional_internal::optional_data.3452" }
%"class.absl::optional_internal::optional_data.3452" = type { %"class.absl::optional_internal::optional_data_base.3453" }
%"class.absl::optional_internal::optional_data_base.3453" = type { %"class.absl::optional_internal::optional_data_dtor_base.3454" }
%"class.absl::optional_internal::optional_data_dtor_base.3454" = type { i8, %union.anon.3455 }
%union.anon.3455 = type { %"struct.blink::PhysicalRect" }
%"class.blink::ImageResourceContent" = type opaque
%"class.blink::LayoutNGTableInterface" = type { i32 (...)** }
%"class.blink::LayoutNGTableSectionInterface" = type { i32 (...)** }
%"class.blink::LayoutNGTableRowInterface" = type { i32 (...)** }
%"class.blink::AffineTransform" = type { [6 x double] }
%"class.WTF::Vector.3456" = type opaque
%"class.ui::Cursor" = type opaque
%"class.blink::TransformState" = type { %"class.blink::FloatPoint", %"class.blink::FloatQuad", %"class.std::__1::unique_ptr.838", %"struct.blink::PhysicalOffset", i8, i8, i8, i8, i32 }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type { %"class.protozero::Message.base", [7 x i8] }
%"class.protozero::Message.base" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8 }>
%"class.protozero::ScatteredStreamWriter" = type { %"class.protozero::ScatteredStreamWriter::Delegate"*, %"struct.protozero::ContiguousMemoryRange", i8*, i64 }
%"class.protozero::ScatteredStreamWriter::Delegate" = type { i32 (...)** }
%"struct.protozero::ContiguousMemoryRange" = type { i8*, i8* }
%"class.protozero::MessageArena" = type { %"class.std::__1::list" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.3608" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.3608" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.protozero::Message" = type <{ %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*, %"class.protozero::Message"*, i8*, i32, i32, i8, [7 x i8] }>
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.base::trace_event::TraceArguments" = type { i8, [2 x i8], [2 x i8*], [2 x %"union.base::trace_event::TraceValue"] }
%"union.base::trace_event::TraceValue" = type { i64 }
%"class.protozero::ScatteredHeapBuffer" = type { %"class.protozero::ScatteredStreamWriter::Delegate", i64, i64, %"class.protozero::ScatteredStreamWriter"*, %"class.std::__1::vector.3596", %"class.protozero::ScatteredHeapBuffer::Slice" }
%"class.std::__1::vector.3596" = type { %"class.std::__1::__vector_base.3597" }
%"class.std::__1::__vector_base.3597" = type { %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.protozero::ScatteredHeapBuffer::Slice"*, %"class.std::__1::__compressed_pair.3603" }
%"class.std::__1::__compressed_pair.3603" = type { %"struct.std::__1::__compressed_pair_elem.3604" }
%"struct.std::__1::__compressed_pair_elem.3604" = type { %"class.protozero::ScatteredHeapBuffer::Slice"* }
%"class.protozero::ScatteredHeapBuffer::Slice" = type { %"class.std::__1::unique_ptr.3598", i64, i64 }
%"class.std::__1::unique_ptr.3598" = type { %"class.std::__1::__compressed_pair.3599" }
%"class.std::__1::__compressed_pair.3599" = type { %"struct.std::__1::__compressed_pair_elem.2866" }
%"struct.std::__1::__list_node" = type { %"struct.std::__1::__list_node_base", %"struct.protozero::MessageArena::Block" }
%"struct.protozero::MessageArena::Block" = type { [16 x %"struct.std::__1::aligned_storage<48, 8>::type"], i32, [4 x i8] }
%"struct.std::__1::aligned_storage<48, 8>::type" = type { [48 x i8] }
%"class.base::trace_event::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.protozero::HeapBuffered" = type { %"class.protozero::ScatteredHeapBuffer", %"class.protozero::ScatteredStreamWriter", %"class.protozero::RootMessage" }
%"class.protozero::RootMessage" = type { %"class.perfetto::protos::pbzero::DebugAnnotation.base", %"class.protozero::MessageArena" }
%"class.perfetto::protos::pbzero::DebugAnnotation.base" = type { %"class.protozero::Message.base" }
%"class.WTF::VectorBuffer.302" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8], [4 x i8] }>
%"struct.std::__1::default_delete.473" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }

$_ZN3WTF7HashMapIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS8_EENS_28MallocedListHashSetAllocatorIS9_Lj16EEEEENS5_14default_deleteISE_EEEENSA_IS3_EENS_10HashTraitsIS4_EENSJ_ISH_EENS_18PartitionAllocatorEE4TakeERKS4_ = comdat any

$_ZN5blink12LayoutObject16ClearNeedsLayoutEv = comdat any

$_ZNK3WTF7HashMapIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS8_EENS_28MallocedListHashSetAllocatorIS9_Lj16EEEEENS5_14default_deleteISE_EEEENSA_IS3_EENS_10HashTraitsIS4_EENSJ_ISH_EENS_18PartitionAllocatorEE2atERKS4_ = comdat any

$_ZN3WTF11ListHashSetIPN5blink9LayoutBoxELm16ENS_7PtrHashIS2_EENS_28MallocedListHashSetAllocatorIS3_Lj16EEEE18AppendOrMoveToLastIRS3_EENS8_9AddResultEOT_ = comdat any

$_ZN3WTF7HashMapIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS8_EENS_28MallocedListHashSetAllocatorIS9_Lj16EEEEENS5_14default_deleteISE_EEEENSA_IS3_EENS_10HashTraitsIS4_EENSJ_ISH_EENS_18PartitionAllocatorEE3SetIPS2_SH_EENS_18HashTableAddResultINS_9HashTableIS4_NS_12KeyValuePairIS4_SH_EENS_24KeyValuePairKeyExtractorESI_NS_18HashMapValueTraitsISK_SL_EESK_SM_EEST_EEOT_OT0_ = comdat any

$_ZN3WTF11ListHashSetIPN5blink9LayoutBoxELm16ENS_7PtrHashIS2_EENS_28MallocedListHashSetAllocatorIS3_Lj16EEEE5eraseERKS3_ = comdat any

$_ZNK5blink9LayoutBox19ContentLogicalWidthEv = comdat any

$_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv = comdat any

$_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv = comdat any

$_ZNK5blink9LayoutBox41ShouldComputeLogicalHeightFromAspectRatioEv = comdat any

$_ZNK5blink9LayoutBox20ContentLogicalHeightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv = comdat any

$_ZN5blink11LayoutBlock15VirtualChildrenEv = comdat any

$_ZNK5blink11LayoutBlock15VirtualChildrenEv = comdat any

$_ZNK5blink12LayoutObject15CanHaveChildrenEv = comdat any

$_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE = comdat any

$_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ = comdat any

$_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv = comdat any

$_ZNK5blink12LayoutObject7IsImageEv = comdat any

$_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv = comdat any

$_ZNK5blink11LayoutBlock13IsLayoutBlockEv = comdat any

$_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv = comdat any

$_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv = comdat any

$_ZNK5blink12LayoutObject14IsLayoutInlineEv = comdat any

$_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv = comdat any

$_ZNK5blink12LayoutObject16IsLayoutNGObjectEv = comdat any

$_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv = comdat any

$_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv = comdat any

$_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv = comdat any

$_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv = comdat any

$_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv = comdat any

$_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv = comdat any

$_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv = comdat any

$_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE = comdat any

$_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv = comdat any

$_ZNK5blink12LayoutObject19VirtualContinuationEv = comdat any

$_ZNK5blink9LayoutBox18SpannerPlaceholderEv = comdat any

$_ZNK5blink12LayoutObject13HoverAncestorEv = comdat any

$_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv = comdat any

$_ZN5blink12LayoutObject16SubtreeDidChangeEv = comdat any

$_ZN5blink12LayoutObject17UpdateFromElementEv = comdat any

$_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE = comdat any

$_ZNK5blink12LayoutObject6lengthEv = comdat any

$_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv = comdat any

$_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject13IsFlexibleBoxEv = comdat any

$_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv = comdat any

$_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv = comdat any

$_ZNK5blink12LayoutObject13IsCombineTextEv = comdat any

$_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv = comdat any

$_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE = comdat any

$_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv = comdat any

$_ZNK5blink12LayoutObject8IsOfTypeENS0_16LayoutObjectTypeE = comdat any

$_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv = comdat any

$_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv = comdat any

$_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_ = comdat any

$_ZNK5blink9LayoutBox11OffsetWidthEv = comdat any

$_ZNK5blink9LayoutBox12OffsetHeightEv = comdat any

$_ZNK5blink9LayoutBox17BorderBoundingBoxEv = comdat any

$_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv = comdat any

$_ZNK5blink20LayoutBoxModelObject10PaddingTopEv = comdat any

$_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv = comdat any

$_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv = comdat any

$_ZNK5blink20LayoutBoxModelObject12PaddingRightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject9BorderTopEv = comdat any

$_ZNK5blink20LayoutBoxModelObject12BorderBottomEv = comdat any

$_ZNK5blink20LayoutBoxModelObject10BorderLeftEv = comdat any

$_ZNK5blink20LayoutBoxModelObject11BorderRightEv = comdat any

$_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv = comdat any

$_ZNK5blink9LayoutBox9MarginTopEv = comdat any

$_ZNK5blink9LayoutBox12MarginBottomEv = comdat any

$_ZNK5blink9LayoutBox10MarginLeftEv = comdat any

$_ZNK5blink9LayoutBox11MarginRightEv = comdat any

$_ZN5blink20LayoutBoxModelObject20ChildBecameNonInlineEPNS_12LayoutObjectE = comdat any

$_ZNK5blink20LayoutBoxModelObject33AccumulateRelativePositionOffsetsEv = comdat any

$_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv = comdat any

$_ZNK5blink9LayoutBox21IsSelfCollapsingBlockEv = comdat any

$_ZNK5blink9LayoutBox21CollapsedMarginBeforeEv = comdat any

$_ZNK5blink9LayoutBox20CollapsedMarginAfterEv = comdat any

$_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE = comdat any

$_ZNK5blink9LayoutBox13IntrinsicSizeEv = comdat any

$_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv = comdat any

$_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv = comdat any

$_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv = comdat any

$_ZNK5blink9LayoutBox16ScrollsOverflowXEv = comdat any

$_ZNK5blink9LayoutBox16ScrollsOverflowYEv = comdat any

$_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE = comdat any

$_ZNK5blink9LayoutBox27CreatesNewFormattingContextEv = comdat any

$_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_ = comdat any

$_ZNK5blink11LayoutBlock15CurrentFragmentEv = comdat any

$_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_ = comdat any

$_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_ = comdat any

$_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm = comdat any

$_ZN3WTF12VectorBufferIPN5blink9LayoutBoxELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_ = comdat any

$_ZNK5blink9LayoutBox49ShouldComputeLogicalWidthFromAspectRatioAndInsetsEv = comdat any

$_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE = comdat any

$_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE = comdat any

$_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE = comdat any

$_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE = comdat any

$_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_ = comdat any

$_ZNK4base10RefCountedIN5blink13ComputedStyleEN3WTF23DefaultRefCountedTraitsIS2_EEE7ReleaseEv = comdat any

$_ZN5blink17ComputedStyleBaseD2Ev = comdat any

$_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_ = comdat any

$_ZN5blink23StyleInheritedVariablesD2Ev = comdat any

$_ZN5blink14StyleVariablesD2Ev = comdat any

$_ZN5blink15CSSVariableDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev = comdat any

$_ZN5blink18NinePieceImageDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev = comdat any

$_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev = comdat any

$_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev = comdat any

$_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev = comdat any

$_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_ = comdat any

$_ZN5blink13CSSTimingDataD2Ev = comdat any

$_ZN5blink16CSSAnimationDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev = comdat any

$_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev = comdat any

$_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_ = comdat any

$_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev = comdat any

$_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev = comdat any

$_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE4findERKS4_ = comdat any

$_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE12DeleteBucketERKSJ_ = comdat any

$_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE8RehashToEPSJ_jST_ = comdat any

$_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF5MoverINS_12KeyValuePairIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS2_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_18PartitionAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSM_ISI_EEEELb0EE4MoveEOSJ_RSJ_ = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_PNS1_11LayoutBlockEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_ = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_PNS1_11LayoutBlockEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_PNS1_11LayoutBlockEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE4findERKS4_ = comdat any

$_ZN3WTF9HashTableIPNS_23MallocedListHashSetNodeIPN5blink9LayoutBoxENS_28MallocedListHashSetAllocatorIS4_Lj16EEEEES8_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_7PtrHashIS3_EEEENS_17ListHashSetTraitsIS4_Lj16ES6_EESF_NS_18PartitionAllocatorEE6insertINS_21ListHashSetTranslatorISC_S7_EERS4_RS6_EENS_18HashTableAddResultISH_S8_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPNS_23MallocedListHashSetNodeIPN5blink9LayoutBoxENS_28MallocedListHashSetAllocatorIS4_Lj16EEEEES8_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_7PtrHashIS3_EEEENS_17ListHashSetTraitsIS4_Lj16ES6_EESF_NS_18PartitionAllocatorEE6ExpandEPS8_ = comdat any

$_ZN3WTF9HashTableIPNS_23MallocedListHashSetNodeIPN5blink9LayoutBoxENS_28MallocedListHashSetAllocatorIS4_Lj16EEEEES8_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_7PtrHashIS3_EEEENS_17ListHashSetTraitsIS4_Lj16ES6_EESF_NS_18PartitionAllocatorEE8RehashToEPS8_jSI_ = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_PNS1_11LayoutBlockEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERPS2_S7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_PNS1_11LayoutBlockEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_ = comdat any

$_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISQ_SL_SR_EEPS2_SI_EENS_18HashTableAddResultISS_SJ_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE6ExpandEPSJ_ = comdat any

$_ZN3WTF11ListHashSetIPN5blink9LayoutBoxELm16ENS_7PtrHashIS2_EENS_28MallocedListHashSetAllocatorIS3_Lj16EEEE5eraseENS_19ListHashSetIteratorIS8_EE = comdat any

$_ZN3WTF9HashTableIPNS_23MallocedListHashSetNodeIPN5blink9LayoutBoxENS_28MallocedListHashSetAllocatorIS4_Lj16EEEEES8_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_7PtrHashIS3_EEEENS_17ListHashSetTraitsIS4_Lj16ES6_EESF_NS_18PartitionAllocatorEE4findERKS8_ = comdat any

$_ZN3WTF6VectorIPN5blink9LayoutBoxELj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIPN5blink9LayoutBoxELj16ENS_18PartitionAllocatorEE14ExpandCapacityEj = comdat any

$_ZN3WTF6VectorIPN5blink9LayoutBoxELj16ENS_18PartitionAllocatorEE16ReallocateBufferEj = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink9LayoutBoxEEEmm = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12PhysicalRectEEEmm = comdat any

@_ZZN5blink27GetPositionedDescendantsMapEvE5s_map = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map = internal global i64 0, align 8
@_ZZN5blink25GetPositionedContainerMapEvE5s_map = internal global %"class.WTF::StaticSingleton.3203" zeroinitializer, align 8
@_ZGVZN5blink25GetPositionedContainerMapEvE5s_map = internal global i64 0, align 8
@_ZTVN5blink11LayoutBlockE = hidden unnamed_addr constant { [214 x i8*], [7 x i8*] } { [214 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlockD2Ev to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlockD0Ev to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32)* @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i8*, i32)* @_ZN5blink11LayoutBlock12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*)* @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject15WillRenderImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, i32*)* @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox23ComputeResourcePriorityEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i8* (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock7GetNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock15VirtualChildrenEv to i8*), i8* bitcast (%"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock15VirtualChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject15CanHaveChildrenEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink11LayoutBlock8AddChildEPNS_12LayoutObjectES2_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_ to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject11RemoveChildEPS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject7IsImageEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock13IsLayoutBlockEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14IsLayoutInlineEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableSectionInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableRowInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv to i8*), i8* bitcast (%"class.blink::LayoutNGGridInterface"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject17LocalSVGTransformEv to i8*), i8* bitcast (void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv to i8*), i8* bitcast (%"class.blink::LayoutBoxModelObject"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject19VirtualContinuationEv to i8*), i8* bitcast (%"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox18SpannerPlaceholderEv to i8*), i8* bitcast (%"class.blink::LayoutObject"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13HoverAncestorEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox18HasInlineFragmentsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox33ClearFirstInlineFragmentItemIndexEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox31SetFirstInlineFragmentItemIndexEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*)* @_ZNK5blink11LayoutBlock5PaintERKNS_9PaintInfoE to i8*), i8* bitcast (i16 (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock20RecalcLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock20RecalcVisualOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock12UpdateLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject16SubtreeDidChangeEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject17UpdateFromElementEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.WTF::Vector.1460"*)* @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject14NodeForHitTestEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink9LayoutBox11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutBlock"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock16PositionForPointERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)* @_ZN5blink12LayoutObject26DirtyLinesFromChangedChildEPS0_NS_15MarkingBehaviorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.WTF::Vector.3456"*, i32)* @_ZNK5blink9LayoutBox13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast ({ <2 x float>, <2 x float> } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36LocalBoundingBoxRectForAccessibilityEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock22PreferredLogicalWidthsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*, %"class.ui::Cursor"*)* @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE to i8*), i8* bitcast (i64 (%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"*)* @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject6lengthEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBlock"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*)* @_ZNK5blink11LayoutBlock14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsFlexibleBoxEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject13IsCombineTextEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"*, i32)* @_ZNK5blink9LayoutBox18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"class.WTF::Vector.3445"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink11LayoutBlock15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject8ViewRectEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInvalidatorContext"*)* @_ZNK5blink11LayoutBlock15InvalidatePaintERKNS_23PaintInvalidatorContextE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, i8)* @_ZNK5blink12LayoutObject28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE to i8*), i8* bitcast (%"class.blink::DisplayItemClient"* (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)* @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox9DebugRectEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*, i32)* @_ZNK5blink12LayoutObject8IsOfTypeENS0_16LayoutObjectTypeE to i8*), i8* bitcast (void (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject10DeleteThisEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink11LayoutBlock15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i32, %"class.blink::ComputedStyle"*)* @_ZN5blink11LayoutBlock14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i1)* @_ZN5blink9LayoutBox43InLayoutNGInlineFormattingContextWillChangeEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock15WillBeDestroyedEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox16InsertedIntoTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox21WillBeRemovedFromTreeEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox33EnsureIsReadyForPaintInvalidationEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15ClearPaintFlagsEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33LocalVisualRectIgnoringVisibilityEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutObject"*)* @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*, i1)* @_ZNK5blink9LayoutBox27OffsetFromContainerInternalEPKNS_12LayoutObjectEb to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_ to i8*), i8* bitcast (%"class.blink::LayoutBlock"* (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox10OffsetLeftEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox9OffsetTopEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11OffsetWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12OffsetHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox23PixelSnappedOffsetWidthEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::Element"*)* @_ZNK5blink9LayoutBox24PixelSnappedOffsetHeightEPKNS_7ElementE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17LayerTypeRequiredEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock15UpdateFromStyleEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17BorderBoundingBoxEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject10PaddingTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject12PaddingRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject9BorderTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject12BorderBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject10BorderLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject11BorderRightEv to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox9MarginTopEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12MarginBottomEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox10MarginLeftEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11MarginRightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*)* @_ZN5blink20LayoutBoxModelObject20ChildBecameNonInlineEPNS_12LayoutObjectE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)* @_ZNK5blink11LayoutBlock10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlock"*, i32, i1, i32, i32)* @_ZNK5blink11LayoutBlock16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*)* @_ZNK5blink9LayoutBox33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox33TextIsKnownToBeOnOpaqueBackgroundEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox35OverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36OverrideContainingBlockContentHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox38HasOverrideContainingBlockContentWidthEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox39HasOverrideContainingBlockContentHeightEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.3456"*, i32)* @_ZNK5blink20LayoutBoxModelObject20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.3456"*)* @_ZNK5blink20LayoutBoxModelObject17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBoxModelObject"*)* @_ZNK5blink20LayoutBoxModelObject33AccumulateRelativePositionOffsetsEv to i8*), i8* bitcast (void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)* @_ZN5blink20LayoutBoxModelObject14MoveChildrenToEPS0_PNS_12LayoutObjectES3_S3_b to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox32LogicalHeightWithVisibleOverflowEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox17LocationContainerEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox14HasTopOverflowEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox15HasLeftOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock17UpdateAfterLayoutEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11ScrollWidthEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox12ScrollHeightEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox21IsSelfCollapsingBlockEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox21CollapsedMarginBeforeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox20CollapsedMarginAfterEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*, i32)* @_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE to i8*), i8* bitcast (%"class.blink::InlineBox"* (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox15CreateInlineBoxEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox10BreakAfterEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11BreakBeforeEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox13StartPageNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox11EndPageNameEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*)* @_ZN5blink9LayoutBox18UpdateLogicalWidthEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox20ComputeLogicalHeightENS_10LayoutUnitES1_RNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox13IntrinsicSizeEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox28CanBeProgramaticallyScrolledEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*)* @_ZN5blink9LayoutBox10AutoscrollERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox16ScrollsOverflowXEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox16ScrollsOverflowYEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, i32)* @_ZNK5blink9LayoutBox25GetPaginationBreakabilityENS0_19FragmentationEngineE to i8*), i8* bitcast ({ i64, i64 } (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink9LayoutBox9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock20FirstLineBoxBaselineEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBlock"*, i32)* @_ZNK5blink11LayoutBlock19InlineBlockBaselineENS_17LineDirectionModeE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27CreatesNewFormattingContextEv to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock33NeedsPreferredWidthsRecalculationEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*)* @_ZNK5blink11LayoutBlock32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i64 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock29ComputeIntrinsicLogicalWidthsEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock23ComputeOverflowClipAxesEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"*, i32)* @_ZNK5blink9LayoutBox33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj to i8*), i8* bitcast (i1 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox36ComputeBackgroundIsKnownToBeObscuredEv to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox29ComputePositionedLogicalWidthERNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)* @_ZN5blink11LayoutBlock15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE to i8*), i8* bitcast (void (%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)* @_ZNK5blink9LayoutBox30ComputePositionedLogicalHeightERNS0_27LogicalExtentComputedValuesE to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZNK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv to i8*), i8* bitcast (%"class.blink::NGPhysicalBoxFragment"* (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock15CurrentFragmentEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i1)* @_ZN5blink11LayoutBlock17UpdateBlockLayoutEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i1, i1, i32)* @_ZN5blink11LayoutBlock17ScrollbarsChangedEbbNS0_22ScrollbarChangeContextE to i8*), i8* bitcast (i16 (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock25RecalcChildLayoutOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i1, i32)* @_ZN5blink11LayoutBlock23LayoutPositionedObjectsEbNS0_24PositionedLayoutBehaviorE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"*)* @_ZNK5blink11LayoutBlock13PaintChildrenERKNS_9PaintInfoERKNS_14PhysicalOffsetE to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock14HasLineIfEmptyEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"*, %"class.blink::LayoutUnit"*)* @_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZNK5blink11LayoutBlock24AllowsNonVisibleOverflowEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock26SimplifiedNormalFlowLayoutEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i1)* @_ZN5blink11LayoutBlock21ComputeVisualOverflowEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, i32, i1)* @_ZN5blink11LayoutBlock21ComputeLayoutOverflowENS_10LayoutUnitEb to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock29AddLayoutOverflowFromChildrenEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock34AddVisualOverflowFromBlockChildrenEv to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock28RemoveLeftoverAnonymousBlockEPS0_ to i8*), i8* bitcast (i1 (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlock32UpdateLogicalWidthAndColumnWidthEv to i8*)], [7 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZThn8_N5blink11LayoutBlockD1Ev to i8*), i8* bitcast (void (%"class.blink::LayoutBlock"*)* @_ZThn8_N5blink11LayoutBlockD0Ev to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject9DebugNameEv to i8*), i8* bitcast (i32 (%"class.blink::LayoutObject"*)* @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv to i8*), i8* bitcast (i8 (%"class.blink::LayoutBox"*)* @_ZThn8_NK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv to i8*)] }, align 8
@.str = private unnamed_addr constant [61 x i8] c"../../third_party/blink/renderer/core/layout/layout_block.cc\00", align 1
@.str.1 = private unnamed_addr constant [43 x i8] c"before_descendant_container->IsAnonymous()\00", align 1
@_ZN5blink26layout_invalidation_reason14kAncestorMovedE = external constant [0 x i8], align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.2 = private unnamed_addr constant [12 x i8] c"LayoutBlock\00", align 1
@_ZZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map = internal global i64 0, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN4base11trace_event16CategoryRegistry11categories_E = external global [300 x %"struct.base::trace_event::TraceCategory"], align 16
@.str.3 = private unnamed_addr constant [27 x i8] c"LayoutInvalidationTracking\00", align 1
@.str.4 = private unnamed_addr constant [5 x i8] c"data\00", align 1
@_ZN5blink26RuntimeEnabledFeaturesBase33is_composite_after_paint_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase40is_layout_ng_fragment_traversal_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase41is_layout_ng_block_fragmentation_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase30is_layout_ng_printing_enabled_E = external local_unnamed_addr global i8, align 1
@_ZTVN5blink20NGBoxFragmentPainterE = external unnamed_addr constant { [8 x i8*] }, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase45is_layout_ng_full_position_for_point_enabled_E = external local_unnamed_addr global i8, align 1
@.str.6 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/css/css_global_rule_set.h\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"features_.IsAlive()\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS2_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEEEEPKcv = private unnamed_addr constant [412 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const blink::LayoutBlock *, std::__1::unique_ptr<WTF::ListHashSet<blink::LayoutBox *, 16, WTF::PtrHash<blink::LayoutBox>, WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16> >, std::__1::default_delete<WTF::ListHashSet<blink::LayoutBox *, 16, WTF::PtrHash<blink::LayoutBox>, WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16> > > > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink9LayoutBoxEPNS2_11LayoutBlockEEEEEPKcv = private unnamed_addr constant [113 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<const blink::LayoutBox *, blink::LayoutBlock *>]\00", align 1
@.str.8 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@.str.9 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPNS_23MallocedListHashSetNodeIPN5blink9LayoutBoxENS_28MallocedListHashSetAllocatorIS4_Lj16EEEEEEEPKcv = private unnamed_addr constant [158 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::MallocedListHashSetNode<blink::LayoutBox *, WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16> > *]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_23MallocedListHashSetNodeIPN5blink9LayoutBoxENS_28MallocedListHashSetAllocatorIS4_Lj16EEEEEEEPKcv = private unnamed_addr constant [156 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::MallocedListHashSetNode<blink::LayoutBox *, WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_11ListHashSetIPN5blink9LayoutBoxELm16ENS_7PtrHashIS3_EENS_28MallocedListHashSetAllocatorIS4_Lj16EEEEEEEPKcv = private unnamed_addr constant [180 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::ListHashSet<blink::LayoutBox *, 16, WTF::PtrHash<blink::LayoutBox>, WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16> >]\00", align 1
@.str.10 = private unnamed_addr constant [33 x i8] c"expanded_capacity > old_capacity\00", align 1
@.str.11 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.13 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.14 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink9LayoutBoxEEEPKcv = private unnamed_addr constant [66 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::LayoutBox *]\00", align 1
@_ZN5blink10html_names11kMarqueeTagE = external local_unnamed_addr constant %"class.blink::HTMLQualifiedName"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12PhysicalRectEEEPKcv = private unnamed_addr constant [67 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::PhysicalRect]\00", align 1
@switch.table._ZN5blink11LayoutBlock35CreateAnonymousWithParentAndDisplayEPKNS_12LayoutObjectENS_8EDisplayE = private unnamed_addr constant [6 x i32] [i32 16, i32 16, i32 18, i32 18, i32 1, i32 21], align 4

@_ZN5blink11LayoutBlockC1EPNS_13ContainerNodeE = hidden unnamed_addr alias void (%"class.blink::LayoutBlock"*, %"class.blink::ContainerNode"*), void (%"class.blink::LayoutBlock"*, %"class.blink::ContainerNode"*)* @_ZN5blink11LayoutBlockC2EPNS_13ContainerNodeE
@_ZN5blink11LayoutBlockD1Ev = hidden unnamed_addr alias void (%"class.blink::LayoutBlock"*), void (%"class.blink::LayoutBlock"*)* @_ZN5blink11LayoutBlockD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.WTF::HashMap.3191"* @_ZN5blink27GetPositionedDescendantsMapEv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.WTF::HashMap.3191"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map to %"class.WTF::HashMap.3191"*)
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(24) %"class.WTF::HashMap.3198"* @_ZN5blink25GetPositionedContainerMapEv() local_unnamed_addr #0 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink25GetPositionedContainerMapEvE5s_map to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %7, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink25GetPositionedContainerMapEvE5s_map) #15
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink25GetPositionedContainerMapEvE5s_map) #15
  br label %7

7:                                                ; preds = %3, %6, %0
  ret %"class.WTF::HashMap.3198"* bitcast (%"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map to %"class.WTF::HashMap.3198"*)
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlockC2EPNS_13ContainerNodeE(%"class.blink::LayoutBlock"*, %"class.blink::ContainerNode"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  tail call void @_ZN5blink9LayoutBoxC2EPNS_13ContainerNodeE(%"class.blink::LayoutBox"* %3, %"class.blink::ContainerNode"* %1) #15
  %4 = bitcast %"class.blink::LayoutBlock"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [7 x i8*] }, { [214 x i8*], [7 x i8*] }* @_ZTVN5blink11LayoutBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [7 x i8*] }, { [214 x i8*], [7 x i8*] }* @_ZTVN5blink11LayoutBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1
  %6 = bitcast %"class.blink::LayoutObjectChildList"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 16, i1 false) #15
  %7 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 2
  %8 = load i16, i16* %7, align 8
  %9 = and i16 %8, -2048
  store i16 %9, i16* %7, align 8
  %10 = icmp eq %"class.blink::ContainerNode"* %1, null
  br i1 %10, label %33, label %11

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %15, label %24

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  br label %17

17:                                               ; preds = %15, %17
  %18 = phi %"class.blink::LayoutObject"* [ %20, %17 ], [ %16, %15 ]
  %19 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %18, i64 0, i32 7
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 6, i32 0, i32 0
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %23 = icmp eq %"class.blink::Node"* %22, null
  br i1 %23, label %17, label %24

24:                                               ; preds = %17, %11
  %25 = phi %"class.blink::Node"* [ %13, %11 ], [ %22, %17 ]
  %26 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %25, i64 0, i32 3, i32 0, i32 0
  %27 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %27, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::Document"*, %"class.blink::Document"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %29, i64 0, i32 158
  %31 = load i32, i32* %30, align 8
  %32 = add i32 %31, 1
  store i32 %32, i32* %30, align 8
  br label %33

33:                                               ; preds = %2, %24
  ret void
}

declare void @_ZN5blink9LayoutBoxC2EPNS_13ContainerNodeE(%"class.blink::LayoutBox"*, %"class.blink::ContainerNode"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock20RemoveFromGlobalMapsEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutBlock"*, align 8
  %3 = alloca %"class.blink::LayoutBox"*, align 8
  %4 = alloca %"class.blink::LayoutBlock"*, align 8
  %5 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 2
  %6 = load i16, i16* %5, align 8
  %7 = trunc i16 %6 to i8
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %110

9:                                                ; preds = %1
  %10 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map to i8*) acquire, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %16, !prof !2

12:                                               ; preds = %9
  %13 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  br label %16

16:                                               ; preds = %9, %12, %15
  %17 = bitcast %"class.blink::LayoutBlock"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  store %"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBlock"** %2, align 8
  %18 = call %"class.WTF::ListHashSet.3211"* @_ZN3WTF7HashMapIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS8_EENS_28MallocedListHashSetAllocatorIS9_Lj16EEEEENS5_14default_deleteISE_EEEENSA_IS3_EENS_10HashTraitsIS4_EENSJ_ISH_EENS_18PartitionAllocatorEE4TakeERKS4_(%"class.WTF::HashMap.3191"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map to %"class.WTF::HashMap.3191"*), %"class.blink::LayoutBlock"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  %19 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %18, i64 0, i32 1
  %20 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %19, align 8
  %21 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.blink::LayoutBox"** %3 to i8*
  %24 = bitcast %"class.blink::LayoutBox"** %3 to i64*
  br label %67

25:                                               ; preds = %106, %16
  %26 = icmp eq %"class.WTF::ListHashSet.3211"* %18, null
  br i1 %26, label %110, label %27

27:                                               ; preds = %25
  %28 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %18, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::MallocedListHashSetNode.3217"**, %"class.WTF::MallocedListHashSetNode.3217"*** %28, align 8
  %30 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"** %29, null
  br i1 %30, label %33, label %31, !prof !3

31:                                               ; preds = %27
  %32 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %29 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %32) #15
  store %"class.WTF::MallocedListHashSetNode.3217"** null, %"class.WTF::MallocedListHashSetNode.3217"*** %28, align 8
  br label %33

33:                                               ; preds = %31, %27
  %34 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %19, align 8
  %35 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %34, null
  br i1 %35, label %59, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %18, i64 0, i32 3, i32 0
  br label %38

38:                                               ; preds = %57, %36
  %39 = phi %"class.WTF::MallocedListHashSetNode.3217"* [ %34, %36 ], [ %41, %57 ]
  %40 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %39, i64 0, i32 2
  %41 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %40, align 8
  %42 = load %"struct.WTF::MallocedListHashSetAllocator.3218"*, %"struct.WTF::MallocedListHashSetAllocator.3218"** %37, align 8
  %43 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %42, i64 0, i32 3, i64 0
  %44 = bitcast i8* %43 to %"class.WTF::MallocedListHashSetNode.3217"*
  %45 = icmp uge %"class.WTF::MallocedListHashSetNode.3217"* %39, %44
  %46 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %42, i64 0, i32 3, i64 384
  %47 = bitcast i8* %46 to %"class.WTF::MallocedListHashSetNode.3217"*
  %48 = icmp ult %"class.WTF::MallocedListHashSetNode.3217"* %39, %47
  %49 = and i1 %48, %45
  br i1 %49, label %50, label %55

50:                                               ; preds = %38
  %51 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %42, i64 0, i32 0
  %52 = bitcast %"struct.WTF::MallocedListHashSetAllocator.3218"* %42 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %40 to i64*
  store i64 %53, i64* %54, align 8
  store %"class.WTF::MallocedListHashSetNode.3217"* %39, %"class.WTF::MallocedListHashSetNode.3217"** %51, align 8
  br label %57

55:                                               ; preds = %38
  %56 = bitcast %"class.WTF::MallocedListHashSetNode.3217"* %39 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %56) #15
  br label %57

57:                                               ; preds = %55, %50
  %58 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %41, null
  br i1 %58, label %59, label %38

59:                                               ; preds = %57, %33
  %60 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %18, i64 0, i32 3, i32 0
  %61 = load %"struct.WTF::MallocedListHashSetAllocator.3218"*, %"struct.WTF::MallocedListHashSetAllocator.3218"** %60, align 8
  %62 = icmp eq %"struct.WTF::MallocedListHashSetAllocator.3218"* %61, null
  br i1 %62, label %65, label %63

63:                                               ; preds = %59
  %64 = bitcast %"struct.WTF::MallocedListHashSetAllocator.3218"* %61 to i8*
  call void @_ZdlPv(i8* %64) #16
  br label %65

65:                                               ; preds = %59, %63
  store %"struct.WTF::MallocedListHashSetAllocator.3218"* null, %"struct.WTF::MallocedListHashSetAllocator.3218"** %60, align 8
  %66 = bitcast %"class.WTF::ListHashSet.3211"* %18 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %66) #15
  br label %110

67:                                               ; preds = %22, %106
  %68 = phi %"class.WTF::MallocedListHashSetNode.3217"* [ %20, %22 ], [ %108, %106 ]
  %69 = bitcast %"class.WTF::MallocedListHashSetNode.3217"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink25GetPositionedContainerMapEvE5s_map to i8*) acquire, align 8
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %77, !prof !2

73:                                               ; preds = %67
  %74 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink25GetPositionedContainerMapEvE5s_map) #15
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %77, label %76

76:                                               ; preds = %73
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink25GetPositionedContainerMapEvE5s_map) #15
  br label %77

77:                                               ; preds = %67, %73, %76
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #15
  store i64 %70, i64* %24, align 8
  %78 = call { %"struct.WTF::KeyValuePair.3202"*, %"struct.WTF::KeyValuePair.3202"* } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_PNS1_11LayoutBlockEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.3199"* bitcast (%"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map to %"class.WTF::HashTable.3199"*), %"class.blink::LayoutBox"** nonnull dereferenceable(8) %3) #15
  %79 = extractvalue { %"struct.WTF::KeyValuePair.3202"*, %"struct.WTF::KeyValuePair.3202"* } %78, 0
  %80 = load %"struct.WTF::KeyValuePair.3202"*, %"struct.WTF::KeyValuePair.3202"** bitcast (%"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map to %"struct.WTF::KeyValuePair.3202"**), align 8
  %81 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %80, i64 %82
  %84 = icmp eq %"struct.WTF::KeyValuePair.3202"* %83, %79
  br i1 %84, label %106, label %85

85:                                               ; preds = %77
  %86 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %79, i64 0, i32 0
  store %"class.blink::LayoutBox"* inttoptr (i64 -1 to %"class.blink::LayoutBox"*), %"class.blink::LayoutBox"** %86, align 8
  %87 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %88 = add i32 %87, 1
  %89 = and i32 %88, 2147483647
  %90 = and i32 %87, -2147483648
  %91 = or i32 %89, %90
  store i32 %91, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %92 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %93 = add i32 %92, -1
  store i32 %93, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %94 = mul i32 %93, 6
  %95 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %96 = icmp ult i32 %94, %95
  %97 = icmp ugt i32 %95, 8
  %98 = and i1 %96, %97
  br i1 %98, label %99, label %106

99:                                               ; preds = %85
  %100 = lshr i32 %95, 1
  %101 = zext i32 %100 to i64
  %102 = shl nuw nsw i64 %101, 4
  %103 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %102, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink9LayoutBoxEPNS2_11LayoutBlockEEEEEPKcv, i64 0, i64 0)) #15
  call void @llvm.memset.p0i8.i64(i8* align 1 %103, i8 0, i64 %102, i1 false) #15
  %104 = bitcast i8* %103 to %"struct.WTF::KeyValuePair.3202"*
  %105 = call %"struct.WTF::KeyValuePair.3202"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_PNS1_11LayoutBlockEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.3199"* bitcast (%"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map to %"class.WTF::HashTable.3199"*), %"struct.WTF::KeyValuePair.3202"* %104, i32 %100, %"struct.WTF::KeyValuePair.3202"* null) #15
  br label %106

106:                                              ; preds = %77, %85, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #15
  %107 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %68, i64 0, i32 2
  %108 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %107, align 8
  %109 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %108, null
  br i1 %109, label %25, label %67

110:                                              ; preds = %65, %25, %1
  %111 = load i16, i16* %5, align 8
  %112 = and i16 %111, 256
  %113 = icmp eq i16 %112, 0
  br i1 %113, label %176, label %114

114:                                              ; preds = %110
  %115 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map to i8*) acquire, align 8
  %116 = icmp eq i8 %115, 0
  br i1 %116, label %117, label %121, !prof !2

117:                                              ; preds = %114
  %118 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map) #15
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %121, label %120

120:                                              ; preds = %117
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map) #15
  br label %121

121:                                              ; preds = %114, %117, %120
  %122 = bitcast %"class.blink::LayoutBlock"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #15
  store %"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBlock"** %4, align 8
  %123 = call %"class.WTF::ListHashSet.3211"* @_ZN3WTF7HashMapIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS8_EENS_28MallocedListHashSetAllocatorIS9_Lj16EEEEENS5_14default_deleteISE_EEEENSA_IS3_EENS_10HashTraitsIS4_EENSJ_ISH_EENS_18PartitionAllocatorEE4TakeERKS4_(%"class.WTF::HashMap.3191"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map to %"class.WTF::HashMap.3191"*), %"class.blink::LayoutBlock"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #15
  %124 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %123, i64 0, i32 1
  %125 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %124, align 8
  %126 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %125, null
  br i1 %126, label %127, label %169

127:                                              ; preds = %169, %121
  %128 = icmp eq %"class.WTF::ListHashSet.3211"* %123, null
  br i1 %128, label %176, label %129

129:                                              ; preds = %127
  %130 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %123, i64 0, i32 0, i32 0
  %131 = load %"class.WTF::MallocedListHashSetNode.3217"**, %"class.WTF::MallocedListHashSetNode.3217"*** %130, align 8
  %132 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"** %131, null
  br i1 %132, label %135, label %133, !prof !3

133:                                              ; preds = %129
  %134 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %131 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %134) #15
  store %"class.WTF::MallocedListHashSetNode.3217"** null, %"class.WTF::MallocedListHashSetNode.3217"*** %130, align 8
  br label %135

135:                                              ; preds = %133, %129
  %136 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %124, align 8
  %137 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %136, null
  br i1 %137, label %161, label %138

138:                                              ; preds = %135
  %139 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %123, i64 0, i32 3, i32 0
  br label %140

140:                                              ; preds = %159, %138
  %141 = phi %"class.WTF::MallocedListHashSetNode.3217"* [ %136, %138 ], [ %143, %159 ]
  %142 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %141, i64 0, i32 2
  %143 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %142, align 8
  %144 = load %"struct.WTF::MallocedListHashSetAllocator.3218"*, %"struct.WTF::MallocedListHashSetAllocator.3218"** %139, align 8
  %145 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %144, i64 0, i32 3, i64 0
  %146 = bitcast i8* %145 to %"class.WTF::MallocedListHashSetNode.3217"*
  %147 = icmp uge %"class.WTF::MallocedListHashSetNode.3217"* %141, %146
  %148 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %144, i64 0, i32 3, i64 384
  %149 = bitcast i8* %148 to %"class.WTF::MallocedListHashSetNode.3217"*
  %150 = icmp ult %"class.WTF::MallocedListHashSetNode.3217"* %141, %149
  %151 = and i1 %150, %147
  br i1 %151, label %152, label %157

152:                                              ; preds = %140
  %153 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %144, i64 0, i32 0
  %154 = bitcast %"struct.WTF::MallocedListHashSetAllocator.3218"* %144 to i64*
  %155 = load i64, i64* %154, align 8
  %156 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %142 to i64*
  store i64 %155, i64* %156, align 8
  store %"class.WTF::MallocedListHashSetNode.3217"* %141, %"class.WTF::MallocedListHashSetNode.3217"** %153, align 8
  br label %159

157:                                              ; preds = %140
  %158 = bitcast %"class.WTF::MallocedListHashSetNode.3217"* %141 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %158) #15
  br label %159

159:                                              ; preds = %157, %152
  %160 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %143, null
  br i1 %160, label %161, label %140

161:                                              ; preds = %159, %135
  %162 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %123, i64 0, i32 3, i32 0
  %163 = load %"struct.WTF::MallocedListHashSetAllocator.3218"*, %"struct.WTF::MallocedListHashSetAllocator.3218"** %162, align 8
  %164 = icmp eq %"struct.WTF::MallocedListHashSetAllocator.3218"* %163, null
  br i1 %164, label %167, label %165

165:                                              ; preds = %161
  %166 = bitcast %"struct.WTF::MallocedListHashSetAllocator.3218"* %163 to i8*
  call void @_ZdlPv(i8* %166) #16
  br label %167

167:                                              ; preds = %161, %165
  store %"struct.WTF::MallocedListHashSetAllocator.3218"* null, %"struct.WTF::MallocedListHashSetAllocator.3218"** %162, align 8
  %168 = bitcast %"class.WTF::ListHashSet.3211"* %123 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %168) #15
  br label %176

169:                                              ; preds = %121, %169
  %170 = phi %"class.WTF::MallocedListHashSetNode.3217"* [ %174, %169 ], [ %125, %121 ]
  %171 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %170, i64 0, i32 0
  %172 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %171, align 8
  call void @_ZN5blink9LayoutBox25SetPercentHeightContainerEPNS_11LayoutBlockE(%"class.blink::LayoutBox"* %172, %"class.blink::LayoutBlock"* null) #15
  %173 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %170, i64 0, i32 2
  %174 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %173, align 8
  %175 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %174, null
  br i1 %175, label %127, label %169

176:                                              ; preds = %110, %167, %127
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::ListHashSet.3211"* @_ZN3WTF7HashMapIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS8_EENS_28MallocedListHashSetAllocatorIS9_Lj16EEEEENS5_14default_deleteISE_EEEENSA_IS3_EENS_10HashTraitsIS4_EENSJ_ISH_EENS_18PartitionAllocatorEE4TakeERKS4_(%"class.WTF::HashMap.3191"*, %"class.blink::LayoutBlock"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap.3191", %"class.WTF::HashMap.3191"* %0, i64 0, i32 0
  %4 = tail call { %"struct.WTF::KeyValuePair.3195"*, %"struct.WTF::KeyValuePair.3195"* } @_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.3192"* %3, %"class.blink::LayoutBlock"** dereferenceable(8) %1) #15
  %5 = extractvalue { %"struct.WTF::KeyValuePair.3195"*, %"struct.WTF::KeyValuePair.3195"* } %4, 0
  %6 = getelementptr inbounds %"class.WTF::HashMap.3191", %"class.WTF::HashMap.3191"* %0, i64 0, i32 0, i32 0
  %7 = load %"struct.WTF::KeyValuePair.3195"*, %"struct.WTF::KeyValuePair.3195"** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::HashMap.3191", %"class.WTF::HashMap.3191"* %0, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %7, i64 %10
  %12 = icmp eq %"struct.WTF::KeyValuePair.3195"* %5, %11
  br i1 %12, label %45, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %5, i64 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.3208", %"class.std::__1::unique_ptr.3208"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.3208"* %14 to i64*
  %17 = load i64, i64* %16, align 8
  store %"class.WTF::ListHashSet.3211"* null, %"class.WTF::ListHashSet.3211"** %15, align 8
  %18 = load %"struct.WTF::KeyValuePair.3195"*, %"struct.WTF::KeyValuePair.3195"** %6, align 8
  %19 = load i32, i32* %8, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %18, i64 %20
  %22 = icmp eq %"struct.WTF::KeyValuePair.3195"* %21, %5
  br i1 %22, label %45, label %23

23:                                               ; preds = %13
  tail call void @_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE12DeleteBucketERKSJ_(%"struct.WTF::KeyValuePair.3195"* dereferenceable(16) %5) #15
  %24 = getelementptr inbounds %"class.WTF::HashMap.3191", %"class.WTF::HashMap.3191"* %0, i64 0, i32 0, i32 3
  %25 = load i32, i32* %24, align 8
  %26 = add i32 %25, 1
  %27 = and i32 %26, 2147483647
  %28 = and i32 %25, -2147483648
  %29 = or i32 %27, %28
  store i32 %29, i32* %24, align 8
  %30 = getelementptr inbounds %"class.WTF::HashMap.3191", %"class.WTF::HashMap.3191"* %0, i64 0, i32 0, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = add i32 %31, -1
  store i32 %32, i32* %30, align 4
  %33 = mul i32 %32, 6
  %34 = load i32, i32* %8, align 8
  %35 = icmp ult i32 %33, %34
  %36 = icmp ugt i32 %34, 8
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %45

38:                                               ; preds = %23
  %39 = lshr i32 %34, 1
  %40 = zext i32 %39 to i64
  %41 = shl nuw nsw i64 %40, 4
  %42 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %41, i8* getelementptr inbounds ([412 x i8], [412 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS2_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEEEEPKcv, i64 0, i64 0)) #15
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %42, i8 0, i64 %41, i1 false) #15
  %43 = bitcast i8* %42 to %"struct.WTF::KeyValuePair.3195"*
  %44 = tail call %"struct.WTF::KeyValuePair.3195"* @_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE8RehashToEPSJ_jST_(%"class.WTF::HashTable.3192"* %3, %"struct.WTF::KeyValuePair.3195"* %43, i32 %39, %"struct.WTF::KeyValuePair.3195"* null) #15
  br label %45

45:                                               ; preds = %13, %23, %38, %2
  %46 = phi i64 [ 0, %2 ], [ %17, %38 ], [ %17, %23 ], [ %17, %13 ]
  %47 = inttoptr i64 %46 to %"class.WTF::ListHashSet.3211"*
  ret %"class.WTF::ListHashSet.3211"* %47
}

declare void @_ZN5blink9LayoutBox25SetPercentHeightContainerEPNS_11LayoutBlockE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBlock"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlockD2Ev(%"class.blink::LayoutBlock"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutBlock"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [7 x i8*] }, { [214 x i8*], [7 x i8*] }* @_ZTVN5blink11LayoutBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [7 x i8*] }, { [214 x i8*], [7 x i8*] }* @_ZTVN5blink11LayoutBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  tail call void @_ZN5blink11LayoutBlock20RemoveFromGlobalMapsEv(%"class.blink::LayoutBlock"* %0)
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  tail call void @_ZN5blink9LayoutBoxD2Ev(%"class.blink::LayoutBox"* %3) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink9LayoutBoxD2Ev(%"class.blink::LayoutBox"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink11LayoutBlockD1Ev(%"class.blink::LayoutBlock"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 -1, i32 2
  %3 = bitcast i16* %2 to %"class.blink::LayoutBlock"*
  %4 = bitcast i16* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [7 x i8*] }, { [214 x i8*], [7 x i8*] }* @_ZTVN5blink11LayoutBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [7 x i8*] }, { [214 x i8*], [7 x i8*] }* @_ZTVN5blink11LayoutBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  tail call void @_ZN5blink11LayoutBlock20RemoveFromGlobalMapsEv(%"class.blink::LayoutBlock"* %3) #15
  %5 = bitcast i16* %2 to %"class.blink::LayoutBox"*
  tail call void @_ZN5blink9LayoutBoxD2Ev(%"class.blink::LayoutBox"* %5) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlockD0Ev(%"class.blink::LayoutBlock"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutBlock"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [7 x i8*] }, { [214 x i8*], [7 x i8*] }* @_ZTVN5blink11LayoutBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [7 x i8*] }, { [214 x i8*], [7 x i8*] }* @_ZTVN5blink11LayoutBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  tail call void @_ZN5blink11LayoutBlock20RemoveFromGlobalMapsEv(%"class.blink::LayoutBlock"* %0) #15
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  tail call void @_ZN5blink9LayoutBoxD2Ev(%"class.blink::LayoutBox"* %3) #15
  %4 = bitcast %"class.blink::LayoutBlock"* %0 to i8*
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %4) #15
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink12LayoutObjectdlEPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink11LayoutBlockD0Ev(%"class.blink::LayoutBlock"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 -1, i32 2
  %3 = bitcast i16* %2 to %"class.blink::LayoutBlock"*
  %4 = bitcast i16* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [7 x i8*] }, { [214 x i8*], [7 x i8*] }* @_ZTVN5blink11LayoutBlockE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [214 x i8*], [7 x i8*] }, { [214 x i8*], [7 x i8*] }* @_ZTVN5blink11LayoutBlockE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  tail call void @_ZN5blink11LayoutBlock20RemoveFromGlobalMapsEv(%"class.blink::LayoutBlock"* %3) #15
  %5 = bitcast i16* %2 to %"class.blink::LayoutBox"*
  tail call void @_ZN5blink9LayoutBoxD2Ev(%"class.blink::LayoutBox"* %5) #15
  %6 = bitcast i16* %2 to i8*
  tail call void @_ZN5blink12LayoutObjectdlEPv(i8* %6) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock15WillBeDestroyedEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %4 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %5 = icmp eq %"class.blink::Node"* %4, null
  br i1 %5, label %6, label %13

6:                                                ; preds = %1, %6
  %7 = phi %"class.blink::LayoutObject"* [ %9, %6 ], [ %2, %1 ]
  %8 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %7, i64 0, i32 7
  %9 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %6, label %13

13:                                               ; preds = %6, %1
  %14 = phi %"class.blink::Node"* [ %4, %1 ], [ %11, %6 ]
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 3, i32 0, i32 0
  %16 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %16, i64 0, i32 2, i32 0, i32 0
  %18 = load %"class.blink::Document"*, %"class.blink::Document"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %18, i64 0, i32 5, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp sgt i32 %20, 19
  br i1 %21, label %32, label %22

22:                                               ; preds = %13
  %23 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 7
  %24 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %23, align 8
  %25 = icmp eq %"class.blink::LayoutObject"* %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %22
  %27 = bitcast %"class.blink::LayoutObject"* %24 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)***
  %28 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)** %28, i64 65
  %30 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32)** %29, align 8
  tail call void %30(%"class.blink::LayoutObject"* nonnull %24, %"class.blink::LayoutObject"* %2, i32 1) #15
  %31 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  br label %32

32:                                               ; preds = %22, %26, %13
  %33 = phi %"class.blink::Node"* [ %4, %22 ], [ %31, %26 ], [ %4, %13 ]
  %34 = icmp eq %"class.blink::Node"* %33, null
  br i1 %34, label %35, label %42

35:                                               ; preds = %32, %35
  %36 = phi %"class.blink::LayoutObject"* [ %38, %35 ], [ %2, %32 ]
  %37 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %36, i64 0, i32 7
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %38, i64 0, i32 6, i32 0, i32 0
  %40 = load %"class.blink::Node"*, %"class.blink::Node"** %39, align 8
  %41 = icmp eq %"class.blink::Node"* %40, null
  br i1 %41, label %35, label %42

42:                                               ; preds = %35, %32
  %43 = phi %"class.blink::Node"* [ %33, %32 ], [ %40, %35 ]
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %43, i64 0, i32 3, i32 0, i32 0
  %45 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %45, i64 0, i32 2, i32 0, i32 0
  %47 = load %"class.blink::Document"*, %"class.blink::Document"** %46, align 8
  %48 = tail call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %47) #15
  %49 = icmp eq %"class.blink::LocalFrame"* %48, null
  br i1 %49, label %57, label %50

50:                                               ; preds = %42
  %51 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %48, i64 0, i32 14, i32 0, i32 0
  %52 = load %"class.blink::FrameSelection"*, %"class.blink::FrameSelection"** %51, align 8
  tail call void @_ZN5blink14FrameSelection26LayoutBlockWillBeDestroyedERKNS_11LayoutBlockE(%"class.blink::FrameSelection"* %52, %"class.blink::LayoutBlock"* dereferenceable(240) %0) #15
  %53 = getelementptr inbounds %"class.blink::LocalFrame", %"class.blink::LocalFrame"* %48, i64 0, i32 0
  %54 = tail call %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"* %53) #15
  %55 = getelementptr inbounds %"class.blink::Page", %"class.blink::Page"* %54, i64 0, i32 8, i32 0, i32 0
  %56 = load %"class.blink::DragCaret"*, %"class.blink::DragCaret"** %55, align 8
  tail call void @_ZN5blink9DragCaret26LayoutBlockWillBeDestroyedERKNS_11LayoutBlockE(%"class.blink::DragCaret"* %56, %"class.blink::LayoutBlock"* dereferenceable(240) %0) #15
  br label %57

57:                                               ; preds = %42, %50
  %58 = load %"class.blink::Node"*, %"class.blink::Node"** %3, align 8
  %59 = icmp eq %"class.blink::Node"* %58, null
  br i1 %59, label %60, label %67

60:                                               ; preds = %57, %60
  %61 = phi %"class.blink::LayoutObject"* [ %63, %60 ], [ %2, %57 ]
  %62 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %61, i64 0, i32 7
  %63 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %63, i64 0, i32 6, i32 0, i32 0
  %65 = load %"class.blink::Node"*, %"class.blink::Node"** %64, align 8
  %66 = icmp eq %"class.blink::Node"* %65, null
  br i1 %66, label %60, label %67

67:                                               ; preds = %60, %57
  %68 = phi %"class.blink::Node"* [ %58, %57 ], [ %65, %60 ]
  %69 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %68, i64 0, i32 3, i32 0, i32 0
  %70 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %70, i64 0, i32 2, i32 0, i32 0
  %72 = load %"class.blink::Document"*, %"class.blink::Document"** %71, align 8
  %73 = tail call %"class.blink::TextAutosizer"* @_ZN5blink8Document16GetTextAutosizerEv(%"class.blink::Document"* %72) #15
  %74 = icmp eq %"class.blink::TextAutosizer"* %73, null
  br i1 %74, label %76, label %75

75:                                               ; preds = %67
  tail call void @_ZN5blink13TextAutosizer7DestroyEPNS_11LayoutBlockE(%"class.blink::TextAutosizer"* nonnull %73, %"class.blink::LayoutBlock"* %0) #15
  br label %76

76:                                               ; preds = %67, %75
  %77 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  tail call void @_ZN5blink9LayoutBox15WillBeDestroyedEv(%"class.blink::LayoutBox"* %77) #15
  ret void
}

declare void @_ZN5blink14FrameSelection26LayoutBlockWillBeDestroyedERKNS_11LayoutBlockE(%"class.blink::FrameSelection"*, %"class.blink::LayoutBlock"* dereferenceable(240)) local_unnamed_addr #3

declare %"class.blink::Page"* @_ZNK5blink5Frame7GetPageEv(%"class.blink::Frame"*) local_unnamed_addr #3

declare void @_ZN5blink9DragCaret26LayoutBlockWillBeDestroyedERKNS_11LayoutBlockE(%"class.blink::DragCaret"*, %"class.blink::LayoutBlock"* dereferenceable(240)) local_unnamed_addr #3

declare %"class.blink::TextAutosizer"* @_ZN5blink8Document16GetTextAutosizerEv(%"class.blink::Document"*) local_unnamed_addr #3

declare void @_ZN5blink13TextAutosizer7DestroyEPNS_11LayoutBlockE(%"class.blink::TextAutosizer"*, %"class.blink::LayoutBlock"*) local_unnamed_addr #3

declare void @_ZN5blink9LayoutBox15WillBeDestroyedEv(%"class.blink::LayoutBox"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutBlock"*, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = lshr i160 %6, 32
  %8 = trunc i160 %7 to i32
  %9 = and i32 %8, 31
  switch i32 %9, label %10 [
    i32 0, label %11
    i32 25, label %11
    i32 19, label %11
    i32 17, label %11
    i32 15, label %11
    i32 5, label %11
    i32 3, label %11
    i32 24, label %11
  ]

10:                                               ; preds = %3
  br label %11

11:                                               ; preds = %3, %3, %3, %3, %3, %3, %3, %3, %10
  %12 = phi i96 [ 1073741824, %3 ], [ 0, %10 ], [ 1073741824, %3 ], [ 1073741824, %3 ], [ 1073741824, %3 ], [ 1073741824, %3 ], [ 1073741824, %3 ], [ 1073741824, %3 ], [ 1073741824, %3 ]
  %13 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %14 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %13 to i96*
  %15 = load i96, i96* %14, align 4
  %16 = and i96 %15, -1073741825
  %17 = or i96 %16, %12
  store i96 %17, i96* %14, align 4
  %18 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  tail call void @_ZN5blink9LayoutBox15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutBox"* %18, i32 %1, %"class.blink::ComputedStyle"* dereferenceable(104) %2) #15
  ret void
}

declare void @_ZN5blink9LayoutBox15StyleWillChangeENS_15StyleDifferenceERKNS_13ComputedStyleE(%"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBlock"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #0 align 2 {
  %4 = trunc i32 %1 to i24
  %5 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  tail call void @_ZN5blink9LayoutBox14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBox"* %6, i32 %1, %"class.blink::ComputedStyle"* %2) #15
  %7 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = icmp ne %"class.blink::ComputedStyle"* %2, null
  br i1 %9, label %10, label %57

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 7
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, align 8
  %13 = icmp eq %"class.blink::LayoutObject"* %12, null
  br i1 %13, label %57, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %2, i64 0, i32 0, i32 9
  %16 = bitcast [20 x i8]* %15 to i160*
  %17 = load i160, i160* %16, align 8
  %18 = lshr i160 %17, 80
  %19 = trunc i160 %18 to i32
  %20 = and i32 %19, 7
  %21 = icmp eq i32 %20, 4
  %22 = and i160 %17, 128849018880
  %23 = icmp eq i160 %22, 42949672960
  %24 = and i1 %23, %21
  %25 = select i1 %24, i32 3, i32 %20
  %26 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %27 = bitcast [20 x i8]* %26 to i160*
  %28 = load i160, i160* %27, align 8
  %29 = lshr i160 %28, 80
  %30 = trunc i160 %29 to i32
  %31 = and i32 %30, 7
  %32 = icmp eq i32 %31, 4
  %33 = and i160 %28, 128849018880
  %34 = icmp eq i160 %33, 42949672960
  %35 = and i1 %34, %32
  %36 = select i1 %35, i32 3, i32 %31
  %37 = icmp eq i32 %25, %36
  %38 = icmp eq i32 %36, 3
  %39 = or i1 %37, %38
  br i1 %39, label %57, label %40

40:                                               ; preds = %14
  %41 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %5, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #15
  %42 = icmp eq %"class.blink::LayoutBlock"* %41, null
  br i1 %42, label %57, label %43

43:                                               ; preds = %40
  tail call void @_ZN5blink11LayoutBlock23RemovePositionedObjectsEPNS_12LayoutObjectENS_20ContainingBlockStateE(%"class.blink::LayoutBlock"* nonnull %41, %"class.blink::LayoutObject"* %5, i32 0)
  %44 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %45 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %44 to i96*
  %46 = load i96, i96* %45, align 4
  %47 = and i96 %46, 113336795588871485128704
  %48 = icmp eq i96 %47, 75557863725914323419136
  br i1 %48, label %49, label %57

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %41, i64 0, i32 0, i32 0, i32 0
  %51 = bitcast %"class.blink::LayoutBlock"* %41 to i1 (%"class.blink::LayoutObject"*)***
  %52 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %52, i64 28
  %54 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::LayoutObject"* %50) #15
  br i1 %55, label %57, label %56

56:                                               ; preds = %49
  tail call void @_ZN5blink11LayoutBlock22InsertPositionedObjectEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"* nonnull %41, %"class.blink::LayoutBox"* %6)
  br label %57

57:                                               ; preds = %56, %49, %43, %40, %14, %10, %3
  %58 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %59 = load %"class.blink::Node"*, %"class.blink::Node"** %58, align 8
  %60 = icmp eq %"class.blink::Node"* %59, null
  br i1 %60, label %61, label %68

61:                                               ; preds = %57, %61
  %62 = phi %"class.blink::LayoutObject"* [ %64, %61 ], [ %5, %57 ]
  %63 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %62, i64 0, i32 7
  %64 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %64, i64 0, i32 6, i32 0, i32 0
  %66 = load %"class.blink::Node"*, %"class.blink::Node"** %65, align 8
  %67 = icmp eq %"class.blink::Node"* %66, null
  br i1 %67, label %61, label %68

68:                                               ; preds = %61, %57
  %69 = phi %"class.blink::Node"* [ %59, %57 ], [ %66, %61 ]
  %70 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %69, i64 0, i32 3, i32 0, i32 0
  %71 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %71, i64 0, i32 2, i32 0, i32 0
  %73 = load %"class.blink::Document"*, %"class.blink::Document"** %72, align 8
  %74 = tail call %"class.blink::TextAutosizer"* @_ZN5blink8Document16GetTextAutosizerEv(%"class.blink::Document"* %73) #15
  %75 = icmp eq %"class.blink::TextAutosizer"* %74, null
  br i1 %75, label %77, label %76

76:                                               ; preds = %68
  tail call void @_ZN5blink13TextAutosizer6RecordEPNS_11LayoutBlockE(%"class.blink::TextAutosizer"* nonnull %74, %"class.blink::LayoutBlock"* %0) #15
  br label %77

77:                                               ; preds = %68, %76
  tail call void @_ZN5blink12LayoutObject33PropagateStyleToAnonymousChildrenEv(%"class.blink::LayoutObject"* %5) #15
  br i1 %9, label %78, label %91

78:                                               ; preds = %77
  %79 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %80 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %79 to i96*
  %81 = load i96, i96* %80, align 4
  %82 = and i96 %81, 63
  %83 = icmp eq i96 %82, 0
  br i1 %83, label %91, label %84

84:                                               ; preds = %78
  %85 = and i24 %4, 6
  %86 = icmp eq i24 %85, 4
  br i1 %86, label %91, label %87

87:                                               ; preds = %84
  %88 = tail call fastcc zeroext i1 @_ZN5blinkL38BorderOrPaddingLogicalDimensionChangedERKNS_13ComputedStyleES2_NS_13LogicalExtentE(%"class.blink::ComputedStyle"* nonnull dereferenceable(104) %2, %"class.blink::ComputedStyle"* dereferenceable(104) %8, i32 0)
  %89 = zext i1 %88 to i16
  %90 = shl nuw nsw i16 %89, 3
  br label %91

91:                                               ; preds = %78, %84, %87, %77
  %92 = phi i16 [ 0, %78 ], [ 0, %77 ], [ 8, %84 ], [ %90, %87 ]
  %93 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 2
  %94 = load i16, i16* %93, align 8
  %95 = and i16 %94, 8
  %96 = or i16 %95, %92
  %97 = and i16 %94, -9
  %98 = or i16 %96, %97
  store i16 %98, i16* %93, align 8
  %99 = and i24 %4, 6
  %100 = icmp eq i24 %99, 4
  %101 = and i1 %9, %100
  br i1 %101, label %102, label %113

102:                                              ; preds = %91
  %103 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %104 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %103 to i96*
  %105 = load i96, i96* %104, align 4
  %106 = and i96 %105, 63
  %107 = icmp eq i96 %106, 0
  br i1 %107, label %113, label %108

108:                                              ; preds = %102
  %109 = tail call fastcc zeroext i1 @_ZN5blinkL38BorderOrPaddingLogicalDimensionChangedERKNS_13ComputedStyleES2_NS_13LogicalExtentE(%"class.blink::ComputedStyle"* nonnull dereferenceable(104) %2, %"class.blink::ComputedStyle"* dereferenceable(104) %8, i32 1)
  %110 = zext i1 %109 to i16
  %111 = shl nuw nsw i16 %110, 4
  %112 = load i16, i16* %93, align 8
  br label %113

113:                                              ; preds = %102, %108, %91
  %114 = phi i16 [ %98, %102 ], [ %98, %91 ], [ %112, %108 ]
  %115 = phi i16 [ 0, %102 ], [ 0, %91 ], [ %111, %108 ]
  %116 = and i16 %114, 16
  %117 = or i16 %116, %115
  %118 = and i16 %114, -17
  %119 = or i16 %117, %118
  store i16 %119, i16* %93, align 8
  ret void
}

declare void @_ZN5blink9LayoutBox14StyleDidChangeENS_15StyleDifferenceEPKNS_13ComputedStyleE(%"class.blink::LayoutBox"*, i32, %"class.blink::ComputedStyle"*) unnamed_addr #3

declare %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock23RemovePositionedObjectsEPNS_12LayoutObjectENS_20ContainingBlockStateE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::LayoutBlock"*, align 8
  %5 = alloca %"class.WTF::Vector.3310", align 8
  %6 = alloca %"class.blink::LayoutBox"*, align 8
  %7 = alloca %"class.blink::DisableCompositingQueryAsserts", align 8
  %8 = alloca %"class.blink::ObjectPaintInvalidator", align 8
  %9 = alloca %"class.blink::LayoutBox"*, align 8
  %10 = alloca %"class.blink::LayoutBox"*, align 8
  %11 = alloca %"class.blink::LayoutBlock"*, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 2
  %14 = load i16, i16* %13, align 8
  %15 = trunc i16 %14 to i8
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %229, !prof !4

17:                                               ; preds = %3
  %18 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map to i8*) acquire, align 8
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %20, label %24, !prof !2

20:                                               ; preds = %17
  %21 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %24, label %23

23:                                               ; preds = %20
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  br label %24

24:                                               ; preds = %17, %20, %23
  %25 = bitcast %"class.blink::LayoutBlock"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #15
  store %"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBlock"** %4, align 8
  %26 = call %"class.WTF::ListHashSet.3211"* @_ZNK3WTF7HashMapIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS8_EENS_28MallocedListHashSetAllocatorIS9_Lj16EEEEENS5_14default_deleteISE_EEEENSA_IS3_EENS_10HashTraitsIS4_EENSJ_ISH_EENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.3191"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map to %"class.WTF::HashMap.3191"*), %"class.blink::LayoutBlock"** nonnull dereferenceable(8) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #15
  %27 = icmp eq %"class.WTF::ListHashSet.3211"* %26, null
  br i1 %27, label %229, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.WTF::Vector.3310"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %29) #15
  %30 = getelementptr inbounds %"class.WTF::Vector.3310", %"class.WTF::Vector.3310"* %5, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %30, i8 -86, i64 128, i1 false)
  %31 = getelementptr inbounds %"class.WTF::Vector.3310", %"class.WTF::Vector.3310"* %5, i64 0, i32 0, i32 1, i64 0
  %32 = bitcast %"class.WTF::Vector.3310"* %5 to i8**
  store i8* %31, i8** %32, align 8
  %33 = getelementptr inbounds %"class.WTF::Vector.3310", %"class.WTF::Vector.3310"* %5, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::Vector.3310", %"class.WTF::Vector.3310"* %5, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %34, align 4
  %35 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %26, i64 0, i32 1
  %36 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %35, align 8
  %37 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %36, null
  br i1 %37, label %117, label %38

38:                                               ; preds = %28
  %39 = bitcast %"class.blink::LayoutBox"** %6 to i8*
  %40 = icmp eq %"class.blink::LayoutObject"* %1, null
  %41 = bitcast %"class.blink::LayoutBox"** %6 to %"class.blink::LayoutObject"**
  %42 = icmp eq i32 %2, 0
  %43 = bitcast %"class.blink::DisableCompositingQueryAsserts"* %7 to i8*
  %44 = getelementptr inbounds %"class.blink::DisableCompositingQueryAsserts", %"class.blink::DisableCompositingQueryAsserts"* %7, i64 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.blink::DisableCompositingQueryAsserts", %"class.blink::DisableCompositingQueryAsserts"* %7, i64 0, i32 0, i32 1
  %46 = bitcast %"class.blink::ObjectPaintInvalidator"* %8 to i8*
  %47 = bitcast %"class.blink::LayoutBox"** %6 to i64*
  %48 = bitcast %"class.blink::ObjectPaintInvalidator"* %8 to i64*
  %49 = getelementptr inbounds %"class.WTF::Vector.3310", %"class.WTF::Vector.3310"* %5, i64 0, i32 0, i32 0, i32 0
  %50 = bitcast %"class.blink::DisableCompositingQueryAsserts"* %7 to i8*
  br label %54

51:                                               ; preds = %100
  %52 = load i32, i32* %34, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %117, label %104

54:                                               ; preds = %38, %100
  %55 = phi %"class.WTF::MallocedListHashSetNode.3217"* [ %36, %38 ], [ %102, %100 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #15
  store %"class.blink::LayoutBox"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutBox"*), %"class.blink::LayoutBox"** %6, align 8
  %56 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %55, i64 0, i32 0
  %57 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %56, align 8
  store %"class.blink::LayoutBox"* %57, %"class.blink::LayoutBox"** %6, align 8
  %58 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %57, i64 0, i32 0, i32 0
  br i1 %40, label %66, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %57, i64 0, i32 0, i32 0
  %61 = call zeroext i1 @_ZNK5blink12LayoutObject14IsDescendantOfEPKS0_(%"class.blink::LayoutObject"* %60, %"class.blink::LayoutObject"* nonnull %1) #15
  %62 = xor i1 %61, true
  %63 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  %64 = icmp eq %"class.blink::LayoutObject"* %63, %1
  %65 = or i1 %64, %62
  br i1 %65, label %100, label %66

66:                                               ; preds = %59, %54
  %67 = phi %"class.blink::LayoutObject"* [ %63, %59 ], [ %58, %54 ]
  br i1 %42, label %68, label %86

68:                                               ; preds = %66
  %69 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %67, i64 0, i32 4
  %70 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %69 to i96*
  call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %67, i32 1) #15
  %71 = load i96, i96* %70, align 4
  %72 = or i96 %71, 1180591620717411303432
  store i96 %72, i96* %70, align 4
  %73 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_composite_after_paint_enabled_E, align 1, !range !5
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %86

75:                                               ; preds = %68
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 16, i1 false)
  call void @_ZN5blink30DisableCompositingQueryAssertsC1Ev(%"class.blink::DisableCompositingQueryAsserts"* nonnull %7) #15
  %76 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  %77 = call zeroext i1 @_ZNK5blink12LayoutObject28IsPaintInvalidationContainerEv(%"class.blink::LayoutObject"* %76) #15
  br i1 %77, label %80, label %78

78:                                               ; preds = %75
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #15
  %79 = load i64, i64* %47, align 8
  store i64 %79, i64* %48, align 8
  call void @_ZN5blink22ObjectPaintInvalidator49InvalidatePaintIncludingNonCompositingDescendantsEv(%"class.blink::ObjectPaintInvalidator"* nonnull %8) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #15
  br label %80

80:                                               ; preds = %78, %75
  %81 = load i32*, i32** %44, align 8
  %82 = icmp eq i32* %81, null
  br i1 %82, label %85, label %83

83:                                               ; preds = %80
  %84 = load i32, i32* %45, align 8
  store i32 %84, i32* %81, align 4
  br label %85

85:                                               ; preds = %80, %83
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #15
  br label %86

86:                                               ; preds = %68, %85, %66
  %87 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %41, align 8
  call void @_ZN5blink12LayoutObject38MarkParentForOutOfFlowPositionedChangeEv(%"class.blink::LayoutObject"* %87) #15
  %88 = load i32, i32* %34, align 4
  %89 = load i32, i32* %33, align 8
  %90 = icmp eq i32 %88, %89
  br i1 %90, label %99, label %91, !prof !4

91:                                               ; preds = %86
  %92 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %49, align 8
  %93 = zext i32 %88 to i64
  %94 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %92, i64 %93
  %95 = load i64, i64* %47, align 8
  %96 = bitcast %"class.blink::LayoutBox"** %94 to i64*
  store i64 %95, i64* %96, align 8
  %97 = load i32, i32* %34, align 4
  %98 = add i32 %97, 1
  store i32 %98, i32* %34, align 4
  br label %100

99:                                               ; preds = %86
  call void @_ZN3WTF6VectorIPN5blink9LayoutBoxELj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.3310"* nonnull %5, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %6) #15
  br label %100

100:                                              ; preds = %59, %99, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #15
  %101 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %55, i64 0, i32 2
  %102 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %101, align 8
  %103 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %102, null
  br i1 %103, label %51, label %54

104:                                              ; preds = %51
  %105 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject34ContainingBlockForAbsolutePositionEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %12, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #15
  %106 = icmp eq %"class.blink::LayoutBlock"* %105, null
  br i1 %106, label %119, label %107

107:                                              ; preds = %104
  %108 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %105, i64 0, i32 0, i32 0, i32 0
  %109 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %105, i64 0, i32 0, i32 0, i32 0, i32 4
  %110 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %109 to i96*
  %111 = load i96, i96* %110, align 4
  %112 = and i96 %111, 8
  %113 = icmp eq i96 %112, 0
  call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %108, i32 1) #15
  %114 = load i96, i96* %110, align 4
  %115 = or i96 %114, 1180591620717411303432
  store i96 %115, i96* %110, align 4
  br i1 %113, label %116, label %119

116:                                              ; preds = %107
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %108, i1 zeroext true, %"class.blink::SubtreeLayoutScope"* null) #15
  br label %119

117:                                              ; preds = %51, %28
  %118 = getelementptr inbounds %"class.WTF::Vector.3310", %"class.WTF::Vector.3310"* %5, i64 0, i32 0, i32 0, i32 0
  br label %131

119:                                              ; preds = %116, %107, %104
  %120 = load i32, i32* %34, align 4
  %121 = getelementptr inbounds %"class.WTF::Vector.3310", %"class.WTF::Vector.3310"* %5, i64 0, i32 0, i32 0, i32 0
  %122 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %121, align 8
  %123 = zext i32 %120 to i64
  %124 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %122, i64 %123
  %125 = icmp eq i32 %120, 0
  br i1 %125, label %131, label %126

126:                                              ; preds = %119
  %127 = bitcast %"class.blink::LayoutBox"** %9 to i8*
  %128 = bitcast %"class.blink::LayoutBox"** %9 to i64*
  %129 = bitcast %"class.blink::LayoutBox"** %10 to i8*
  %130 = bitcast %"class.blink::LayoutBox"** %10 to i64*
  br label %136

131:                                              ; preds = %176, %117, %119
  %132 = phi %"class.blink::LayoutBox"*** [ %118, %117 ], [ %121, %119 ], [ %121, %176 ]
  %133 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %26, i64 0, i32 0, i32 2
  %134 = load i32, i32* %133, align 4
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %179, label %218

136:                                              ; preds = %126, %176
  %137 = phi %"class.blink::LayoutBox"** [ %122, %126 ], [ %177, %176 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %127) #15
  store %"class.blink::LayoutBox"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutBox"*), %"class.blink::LayoutBox"** %9, align 8
  %138 = bitcast %"class.blink::LayoutBox"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  store i64 %139, i64* %128, align 8
  call void @_ZN3WTF11ListHashSetIPN5blink9LayoutBoxELm16ENS_7PtrHashIS2_EENS_28MallocedListHashSetAllocatorIS3_Lj16EEEE5eraseERKS3_(%"class.WTF::ListHashSet.3211"* nonnull %26, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %9)
  %140 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink25GetPositionedContainerMapEvE5s_map to i8*) acquire, align 8
  %141 = icmp eq i8 %140, 0
  br i1 %141, label %142, label %146, !prof !2

142:                                              ; preds = %136
  %143 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink25GetPositionedContainerMapEvE5s_map) #15
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %146, label %145

145:                                              ; preds = %142
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink25GetPositionedContainerMapEvE5s_map) #15
  br label %146

146:                                              ; preds = %136, %142, %145
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #15
  %147 = load i64, i64* %128, align 8
  store i64 %147, i64* %130, align 8
  %148 = call { %"struct.WTF::KeyValuePair.3202"*, %"struct.WTF::KeyValuePair.3202"* } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_PNS1_11LayoutBlockEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.3199"* bitcast (%"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map to %"class.WTF::HashTable.3199"*), %"class.blink::LayoutBox"** nonnull dereferenceable(8) %10) #15
  %149 = extractvalue { %"struct.WTF::KeyValuePair.3202"*, %"struct.WTF::KeyValuePair.3202"* } %148, 0
  %150 = load %"struct.WTF::KeyValuePair.3202"*, %"struct.WTF::KeyValuePair.3202"** bitcast (%"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map to %"struct.WTF::KeyValuePair.3202"**), align 8
  %151 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %152 = zext i32 %151 to i64
  %153 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %150, i64 %152
  %154 = icmp eq %"struct.WTF::KeyValuePair.3202"* %153, %149
  br i1 %154, label %176, label %155

155:                                              ; preds = %146
  %156 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %149, i64 0, i32 0
  store %"class.blink::LayoutBox"* inttoptr (i64 -1 to %"class.blink::LayoutBox"*), %"class.blink::LayoutBox"** %156, align 8
  %157 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %158 = add i32 %157, 1
  %159 = and i32 %158, 2147483647
  %160 = and i32 %157, -2147483648
  %161 = or i32 %159, %160
  store i32 %161, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %162 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %163 = add i32 %162, -1
  store i32 %163, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %164 = mul i32 %163, 6
  %165 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %166 = icmp ult i32 %164, %165
  %167 = icmp ugt i32 %165, 8
  %168 = and i1 %166, %167
  br i1 %168, label %169, label %176

169:                                              ; preds = %155
  %170 = lshr i32 %165, 1
  %171 = zext i32 %170 to i64
  %172 = shl nuw nsw i64 %171, 4
  %173 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %172, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink9LayoutBoxEPNS2_11LayoutBlockEEEEEPKcv, i64 0, i64 0)) #15
  call void @llvm.memset.p0i8.i64(i8* align 1 %173, i8 0, i64 %172, i1 false) #15
  %174 = bitcast i8* %173 to %"struct.WTF::KeyValuePair.3202"*
  %175 = call %"struct.WTF::KeyValuePair.3202"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_PNS1_11LayoutBlockEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.3199"* bitcast (%"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map to %"class.WTF::HashTable.3199"*), %"struct.WTF::KeyValuePair.3202"* %174, i32 %170, %"struct.WTF::KeyValuePair.3202"* null) #15
  br label %176

176:                                              ; preds = %146, %155, %169
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %127) #15
  %177 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %137, i64 1
  %178 = icmp eq %"class.blink::LayoutBox"** %177, %124
  br i1 %178, label %131, label %136

179:                                              ; preds = %131
  %180 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map to i8*) acquire, align 8
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %182, label %186, !prof !2

182:                                              ; preds = %179
  %183 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %186, label %185

185:                                              ; preds = %182
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  br label %186

186:                                              ; preds = %179, %182, %185
  %187 = bitcast %"class.blink::LayoutBlock"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %187) #15
  store %"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBlock"** %11, align 8
  %188 = call { %"struct.WTF::KeyValuePair.3195"*, %"struct.WTF::KeyValuePair.3195"* } @_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.3192"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map to %"class.WTF::HashTable.3192"*), %"class.blink::LayoutBlock"** nonnull dereferenceable(8) %11) #15
  %189 = extractvalue { %"struct.WTF::KeyValuePair.3195"*, %"struct.WTF::KeyValuePair.3195"* } %188, 0
  %190 = load %"struct.WTF::KeyValuePair.3195"*, %"struct.WTF::KeyValuePair.3195"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map to %"struct.WTF::KeyValuePair.3195"**), align 8
  %191 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %192 = zext i32 %191 to i64
  %193 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %190, i64 %192
  %194 = icmp eq %"struct.WTF::KeyValuePair.3195"* %193, %189
  br i1 %194, label %215, label %195

195:                                              ; preds = %186
  call void @_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE12DeleteBucketERKSJ_(%"struct.WTF::KeyValuePair.3195"* dereferenceable(16) %189) #15
  %196 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %197 = add i32 %196, 1
  %198 = and i32 %197, 2147483647
  %199 = and i32 %196, -2147483648
  %200 = or i32 %198, %199
  store i32 %200, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %201 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %202 = add i32 %201, -1
  store i32 %202, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %203 = mul i32 %202, 6
  %204 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %205 = icmp ult i32 %203, %204
  %206 = icmp ugt i32 %204, 8
  %207 = and i1 %205, %206
  br i1 %207, label %208, label %215

208:                                              ; preds = %195
  %209 = lshr i32 %204, 1
  %210 = zext i32 %209 to i64
  %211 = shl nuw nsw i64 %210, 4
  %212 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %211, i8* getelementptr inbounds ([412 x i8], [412 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS2_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEEEEPKcv, i64 0, i64 0)) #15
  call void @llvm.memset.p0i8.i64(i8* align 1 %212, i8 0, i64 %211, i1 false) #15
  %213 = bitcast i8* %212 to %"struct.WTF::KeyValuePair.3195"*
  %214 = call %"struct.WTF::KeyValuePair.3195"* @_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE8RehashToEPSJ_jST_(%"class.WTF::HashTable.3192"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map to %"class.WTF::HashTable.3192"*), %"struct.WTF::KeyValuePair.3195"* %213, i32 %209, %"struct.WTF::KeyValuePair.3195"* null) #15
  br label %215

215:                                              ; preds = %186, %195, %208
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %187) #15
  %216 = load i16, i16* %13, align 8
  %217 = and i16 %216, -129
  store i16 %217, i16* %13, align 8
  br label %218

218:                                              ; preds = %215, %131
  %219 = load i32, i32* %34, align 4
  %220 = icmp eq i32 %219, 0
  br i1 %220, label %222, label %221, !prof !4

221:                                              ; preds = %218
  store i32 0, i32* %34, align 4
  br label %222

222:                                              ; preds = %221, %218
  %223 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %132, align 8
  %224 = bitcast i8* %31 to %"class.blink::LayoutBox"**
  %225 = icmp eq %"class.blink::LayoutBox"** %223, %224
  br i1 %225, label %228, label %226, !prof !3

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"class.WTF::Vector.3310", %"class.WTF::Vector.3310"* %5, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIPN5blink9LayoutBoxELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.3311"* nonnull %227, %"class.blink::LayoutBox"** %223) #15
  br label %228

228:                                              ; preds = %222, %226
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %29) #15
  br label %229

229:                                              ; preds = %3, %24, %228
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock22InsertPositionedObjectEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::LayoutBlock"*, align 8
  %4 = alloca %"class.blink::LayoutBox"*, align 8
  %5 = alloca %"class.blink::LayoutBox"*, align 8
  %6 = alloca %"class.blink::LayoutBlock"*, align 8
  %7 = alloca %"class.blink::LayoutBlock"*, align 8
  %8 = alloca %"class.blink::LayoutBlock"*, align 8
  %9 = alloca %"class.std::__1::unique_ptr.3208", align 8
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %4, align 8
  tail call void @_ZN5blink9LayoutBox39ClearOverrideContainingBlockContentSizeEv(%"class.blink::LayoutBox"* %1) #15
  %10 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink25GetPositionedContainerMapEvE5s_map to i8*) acquire, align 8
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %12, label %16, !prof !2

12:                                               ; preds = %2
  %13 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink25GetPositionedContainerMapEvE5s_map) #15
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %16, label %15

15:                                               ; preds = %12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink25GetPositionedContainerMapEvE5s_map) #15
  br label %16

16:                                               ; preds = %2, %12, %15
  %17 = bitcast %"class.blink::LayoutBox"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  %18 = bitcast %"class.blink::LayoutBox"** %4 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.blink::LayoutBox"** %5 to i64*
  store i64 %19, i64* %20, align 8
  %21 = call { %"struct.WTF::KeyValuePair.3202"*, %"struct.WTF::KeyValuePair.3202"* } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_PNS1_11LayoutBlockEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.3199"* bitcast (%"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map to %"class.WTF::HashTable.3199"*), %"class.blink::LayoutBox"** nonnull dereferenceable(8) %5) #15
  %22 = extractvalue { %"struct.WTF::KeyValuePair.3202"*, %"struct.WTF::KeyValuePair.3202"* } %21, 0
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  %23 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink25GetPositionedContainerMapEvE5s_map to i8*) acquire, align 8
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %29, !prof !2

25:                                               ; preds = %16
  %26 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink25GetPositionedContainerMapEvE5s_map) #15
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %29, label %28

28:                                               ; preds = %25
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink25GetPositionedContainerMapEvE5s_map) #15
  br label %29

29:                                               ; preds = %16, %25, %28
  %30 = load %"struct.WTF::KeyValuePair.3202"*, %"struct.WTF::KeyValuePair.3202"** bitcast (%"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map to %"struct.WTF::KeyValuePair.3202"**), align 8
  %31 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %30, i64 %32
  %34 = icmp eq %"struct.WTF::KeyValuePair.3202"* %22, %33
  br i1 %34, label %59, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %22, i64 0, i32 1
  %37 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %36, align 8
  %38 = icmp eq %"class.blink::LayoutBlock"* %37, %0
  br i1 %38, label %39, label %57

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 2
  %41 = load i16, i16* %40, align 8
  %42 = trunc i16 %41 to i8
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %54, !prof !4

44:                                               ; preds = %39
  %45 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map to i8*) acquire, align 8
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %51, !prof !2

47:                                               ; preds = %44
  %48 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %51, label %50

50:                                               ; preds = %47
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  br label %51

51:                                               ; preds = %50, %47, %44
  %52 = bitcast %"class.blink::LayoutBlock"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #15
  store %"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBlock"** %3, align 8
  %53 = call %"class.WTF::ListHashSet.3211"* @_ZNK3WTF7HashMapIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS8_EENS_28MallocedListHashSetAllocatorIS9_Lj16EEEEENS5_14default_deleteISE_EEEENSA_IS3_EENS_10HashTraitsIS4_EENSJ_ISH_EENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.3191"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map to %"class.WTF::HashMap.3191"*), %"class.blink::LayoutBlock"** nonnull dereferenceable(8) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #15
  br label %54

54:                                               ; preds = %39, %51
  %55 = phi %"class.WTF::ListHashSet.3211"* [ %53, %51 ], [ null, %39 ]
  %56 = call { %"class.blink::LayoutBox"**, i8 } @_ZN3WTF11ListHashSetIPN5blink9LayoutBoxELm16ENS_7PtrHashIS2_EENS_28MallocedListHashSetAllocatorIS3_Lj16EEEE18AppendOrMoveToLastIRS3_EENS8_9AddResultEOT_(%"class.WTF::ListHashSet.3211"* %55, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %4)
  br label %187

57:                                               ; preds = %35
  %58 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %4, align 8
  call void @_ZN5blink11LayoutBlock22RemovePositionedObjectEPNS_9LayoutBoxE(%"class.blink::LayoutBox"* %58)
  br label %59

59:                                               ; preds = %29, %57
  %60 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink25GetPositionedContainerMapEvE5s_map to i8*) acquire, align 8
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %66, !prof !2

62:                                               ; preds = %59
  %63 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink25GetPositionedContainerMapEvE5s_map) #15
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %66, label %65

65:                                               ; preds = %62
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink25GetPositionedContainerMapEvE5s_map) #15
  br label %66

66:                                               ; preds = %59, %62, %65
  %67 = bitcast %"class.blink::LayoutBlock"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #15
  store %"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBlock"** %6, align 8
  %68 = call { %"struct.WTF::KeyValuePair.3202"*, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_PNS1_11LayoutBlockEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERPS2_S7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.3199"* bitcast (%"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map to %"class.WTF::HashTable.3199"*), %"class.blink::LayoutBox"** nonnull dereferenceable(8) %4, %"class.blink::LayoutBlock"** nonnull dereferenceable(8) %6) #15
  %69 = extractvalue { %"struct.WTF::KeyValuePair.3202"*, i8 } %68, 1
  %70 = and i8 %69, 1
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %72, label %78

72:                                               ; preds = %66
  %73 = extractvalue { %"struct.WTF::KeyValuePair.3202"*, i8 } %68, 0
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %73, i64 0, i32 1
  %75 = bitcast %"class.blink::LayoutBlock"** %6 to i64*
  %76 = load i64, i64* %75, align 8
  %77 = bitcast %"class.blink::LayoutBlock"** %74 to i64*
  store i64 %76, i64* %77, align 8
  br label %78

78:                                               ; preds = %66, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #15
  %79 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map to i8*) acquire, align 8
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %85, !prof !2

81:                                               ; preds = %78
  %82 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %85, label %84

84:                                               ; preds = %81
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  br label %85

85:                                               ; preds = %78, %81, %84
  %86 = bitcast %"class.blink::LayoutBlock"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #15
  store %"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBlock"** %7, align 8
  %87 = call %"class.WTF::ListHashSet.3211"* @_ZNK3WTF7HashMapIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS8_EENS_28MallocedListHashSetAllocatorIS9_Lj16EEEEENS5_14default_deleteISE_EEEENSA_IS3_EENS_10HashTraitsIS4_EENSJ_ISH_EENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.3191"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map to %"class.WTF::HashMap.3191"*), %"class.blink::LayoutBlock"** nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #15
  %88 = icmp eq %"class.WTF::ListHashSet.3211"* %87, null
  br i1 %88, label %89, label %149

89:                                               ; preds = %85
  %90 = call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 48, i8* getelementptr inbounds ([180 x i8], [180 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_11ListHashSetIPN5blink9LayoutBoxELm16ENS_7PtrHashIS3_EENS_28MallocedListHashSetAllocatorIS4_Lj16EEEEEEEPKcv, i64 0, i64 0)) #15
  %91 = bitcast i8* %90 to %"class.WTF::ListHashSet.3211"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 20, i1 false) #15
  %92 = getelementptr inbounds i8, i8* %90, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 24, i1 false) #15
  %93 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map to i8*) acquire, align 8
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %99, !prof !2

95:                                               ; preds = %89
  %96 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %99, label %98

98:                                               ; preds = %95
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  br label %99

99:                                               ; preds = %89, %95, %98
  %100 = bitcast %"class.blink::LayoutBlock"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #15
  store %"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBlock"** %8, align 8
  %101 = bitcast %"class.std::__1::unique_ptr.3208"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #15
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.3208", %"class.std::__1::unique_ptr.3208"* %9, i64 0, i32 0, i32 0, i32 0
  %103 = bitcast %"class.std::__1::unique_ptr.3208"* %9 to i8**
  store i8* %90, i8** %103, align 8
  %104 = call { %"struct.WTF::KeyValuePair.3195"*, i8 } @_ZN3WTF7HashMapIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS8_EENS_28MallocedListHashSetAllocatorIS9_Lj16EEEEENS5_14default_deleteISE_EEEENSA_IS3_EENS_10HashTraitsIS4_EENSJ_ISH_EENS_18PartitionAllocatorEE3SetIPS2_SH_EENS_18HashTableAddResultINS_9HashTableIS4_NS_12KeyValuePairIS4_SH_EENS_24KeyValuePairKeyExtractorESI_NS_18HashMapValueTraitsISK_SL_EESK_SM_EEST_EEOT_OT0_(%"class.WTF::HashMap.3191"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map to %"class.WTF::HashMap.3191"*), %"class.blink::LayoutBlock"** nonnull dereferenceable(8) %8, %"class.std::__1::unique_ptr.3208"* nonnull dereferenceable(8) %9)
  %105 = load %"class.WTF::ListHashSet.3211"*, %"class.WTF::ListHashSet.3211"** %102, align 8
  store %"class.WTF::ListHashSet.3211"* null, %"class.WTF::ListHashSet.3211"** %102, align 8
  %106 = icmp eq %"class.WTF::ListHashSet.3211"* %105, null
  br i1 %106, label %148, label %107

107:                                              ; preds = %99
  %108 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %105, i64 0, i32 0, i32 0
  %109 = load %"class.WTF::MallocedListHashSetNode.3217"**, %"class.WTF::MallocedListHashSetNode.3217"*** %108, align 8
  %110 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"** %109, null
  br i1 %110, label %113, label %111, !prof !3

111:                                              ; preds = %107
  %112 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %109 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %112) #15
  store %"class.WTF::MallocedListHashSetNode.3217"** null, %"class.WTF::MallocedListHashSetNode.3217"*** %108, align 8
  br label %113

113:                                              ; preds = %111, %107
  %114 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %105, i64 0, i32 1
  %115 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %114, align 8
  %116 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %115, null
  br i1 %116, label %140, label %117

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %105, i64 0, i32 3, i32 0
  br label %119

119:                                              ; preds = %138, %117
  %120 = phi %"class.WTF::MallocedListHashSetNode.3217"* [ %115, %117 ], [ %122, %138 ]
  %121 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %120, i64 0, i32 2
  %122 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %121, align 8
  %123 = load %"struct.WTF::MallocedListHashSetAllocator.3218"*, %"struct.WTF::MallocedListHashSetAllocator.3218"** %118, align 8
  %124 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %123, i64 0, i32 3, i64 0
  %125 = bitcast i8* %124 to %"class.WTF::MallocedListHashSetNode.3217"*
  %126 = icmp uge %"class.WTF::MallocedListHashSetNode.3217"* %120, %125
  %127 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %123, i64 0, i32 3, i64 384
  %128 = bitcast i8* %127 to %"class.WTF::MallocedListHashSetNode.3217"*
  %129 = icmp ult %"class.WTF::MallocedListHashSetNode.3217"* %120, %128
  %130 = and i1 %129, %126
  br i1 %130, label %131, label %136

131:                                              ; preds = %119
  %132 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %123, i64 0, i32 0
  %133 = bitcast %"struct.WTF::MallocedListHashSetAllocator.3218"* %123 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %121 to i64*
  store i64 %134, i64* %135, align 8
  store %"class.WTF::MallocedListHashSetNode.3217"* %120, %"class.WTF::MallocedListHashSetNode.3217"** %132, align 8
  br label %138

136:                                              ; preds = %119
  %137 = bitcast %"class.WTF::MallocedListHashSetNode.3217"* %120 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %137) #15
  br label %138

138:                                              ; preds = %136, %131
  %139 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %122, null
  br i1 %139, label %140, label %119

140:                                              ; preds = %138, %113
  %141 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %105, i64 0, i32 3, i32 0
  %142 = load %"struct.WTF::MallocedListHashSetAllocator.3218"*, %"struct.WTF::MallocedListHashSetAllocator.3218"** %141, align 8
  %143 = icmp eq %"struct.WTF::MallocedListHashSetAllocator.3218"* %142, null
  br i1 %143, label %146, label %144

144:                                              ; preds = %140
  %145 = bitcast %"struct.WTF::MallocedListHashSetAllocator.3218"* %142 to i8*
  call void @_ZdlPv(i8* %145) #16
  br label %146

146:                                              ; preds = %140, %144
  store %"struct.WTF::MallocedListHashSetAllocator.3218"* null, %"struct.WTF::MallocedListHashSetAllocator.3218"** %141, align 8
  %147 = bitcast %"class.WTF::ListHashSet.3211"* %105 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %147) #15
  br label %148

148:                                              ; preds = %99, %146
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #15
  br label %149

149:                                              ; preds = %85, %148
  %150 = phi %"class.WTF::ListHashSet.3211"* [ %87, %85 ], [ %91, %148 ]
  %151 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %150, i64 0, i32 3
  %152 = getelementptr inbounds %"class.WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16>::AllocatorProvider", %"class.WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16>::AllocatorProvider"* %151, i64 0, i32 0
  %153 = load %"struct.WTF::MallocedListHashSetAllocator.3218"*, %"struct.WTF::MallocedListHashSetAllocator.3218"** %152, align 8
  %154 = icmp eq %"struct.WTF::MallocedListHashSetAllocator.3218"* %153, null
  br i1 %154, label %155, label %162

155:                                              ; preds = %149
  %156 = call i8* @_Znwm(i64 400) #16
  %157 = getelementptr inbounds i8, i8* %156, i64 16
  %158 = bitcast i8* %156 to i8**
  store i8* %157, i8** %158, align 8
  %159 = getelementptr inbounds i8, i8* %156, i64 8
  store i8 0, i8* %159, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %157, i8 0, i64 384, i1 false) #15
  %160 = bitcast %"class.WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16>::AllocatorProvider"* %151 to i8**
  store i8* %156, i8** %160, align 8
  %161 = bitcast i8* %156 to %"struct.WTF::MallocedListHashSetAllocator.3218"*
  br label %162

162:                                              ; preds = %155, %149
  %163 = phi %"struct.WTF::MallocedListHashSetAllocator.3218"* [ %153, %149 ], [ %161, %155 ]
  %164 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %150, i64 0, i32 0
  %165 = call { %"class.WTF::MallocedListHashSetNode.3217"**, i8 } @_ZN3WTF9HashTableIPNS_23MallocedListHashSetNodeIPN5blink9LayoutBoxENS_28MallocedListHashSetAllocatorIS4_Lj16EEEEES8_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_7PtrHashIS3_EEEENS_17ListHashSetTraitsIS4_Lj16ES6_EESF_NS_18PartitionAllocatorEE6insertINS_21ListHashSetTranslatorISC_S7_EERS4_RS6_EENS_18HashTableAddResultISH_S8_EEOT0_OT1_(%"class.WTF::HashTable.3214"* %164, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %4, %"struct.WTF::MallocedListHashSetAllocator.3218"* nonnull dereferenceable(400) %163) #15
  %166 = extractvalue { %"class.WTF::MallocedListHashSetNode.3217"**, i8 } %165, 1
  %167 = and i8 %166, 1
  %168 = icmp eq i8 %167, 0
  br i1 %168, label %183, label %169

169:                                              ; preds = %162
  %170 = extractvalue { %"class.WTF::MallocedListHashSetNode.3217"**, i8 } %165, 0
  %171 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %170, align 8
  %172 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %150, i64 0, i32 2
  %173 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %172 to i64*
  %174 = load i64, i64* %173, align 8
  %175 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %171, i64 0, i32 1
  %176 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %175 to i64*
  store i64 %174, i64* %176, align 8
  %177 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %171, i64 0, i32 2
  store %"class.WTF::MallocedListHashSetNode.3217"* null, %"class.WTF::MallocedListHashSetNode.3217"** %177, align 8
  %178 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %172, align 8
  %179 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %178, null
  %180 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %150, i64 0, i32 1
  %181 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %178, i64 0, i32 2
  %182 = select i1 %179, %"class.WTF::MallocedListHashSetNode.3217"** %180, %"class.WTF::MallocedListHashSetNode.3217"** %181
  store %"class.WTF::MallocedListHashSetNode.3217"* %171, %"class.WTF::MallocedListHashSetNode.3217"** %182, align 8
  store %"class.WTF::MallocedListHashSetNode.3217"* %171, %"class.WTF::MallocedListHashSetNode.3217"** %172, align 8
  br label %183

183:                                              ; preds = %162, %169
  %184 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 2
  %185 = load i16, i16* %184, align 8
  %186 = or i16 %185, 128
  store i16 %186, i16* %184, align 8
  br label %187

187:                                              ; preds = %183, %54
  ret void
}

declare void @_ZN5blink13TextAutosizer6RecordEPNS_11LayoutBlockE(%"class.blink::TextAutosizer"*, %"class.blink::LayoutBlock"*) local_unnamed_addr #3

declare void @_ZN5blink12LayoutObject33PropagateStyleToAnonymousChildrenEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @_ZN5blinkL38BorderOrPaddingLogicalDimensionChangedERKNS_13ComputedStyleES2_NS_13LogicalExtentE(%"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), %"class.blink::ComputedStyle"* nocapture readonly dereferenceable(104), i32) unnamed_addr #0 {
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  %9 = icmp ne i32 %2, 0
  %10 = xor i1 %9, %8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 0, i32 7, i32 0, i32 0
  %12 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %12, i64 0, i32 27
  %14 = load i16, i16* %13, align 8
  br i1 %10, label %15, label %145

15:                                               ; preds = %3
  %16 = and i16 %14, 224
  %17 = icmp eq i16 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %12, i64 0, i32 24, i32 0
  %20 = load i32, i32* %19, align 4
  br label %21

21:                                               ; preds = %15, %18
  %22 = phi i32 [ %20, %18 ], [ 0, %15 ]
  %23 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 7, i32 0, i32 0
  %24 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %24, i64 0, i32 27
  %26 = load i16, i16* %25, align 8
  %27 = and i16 %26, 224
  %28 = icmp eq i16 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %24, i64 0, i32 24, i32 0
  %31 = load i32, i32* %30, align 4
  br label %32

32:                                               ; preds = %21, %29
  %33 = phi i32 [ %31, %29 ], [ 0, %21 ]
  %34 = icmp eq i32 %22, %33
  br i1 %34, label %35, label %273

35:                                               ; preds = %32
  %36 = and i16 %14, 3584
  %37 = icmp eq i16 %36, 0
  br i1 %37, label %41, label %38

38:                                               ; preds = %35
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %12, i64 0, i32 25, i32 0
  %40 = load i32, i32* %39, align 4
  br label %41

41:                                               ; preds = %35, %38
  %42 = phi i32 [ %40, %38 ], [ 0, %35 ]
  %43 = and i16 %26, 3584
  %44 = icmp eq i16 %43, 0
  br i1 %44, label %48, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %24, i64 0, i32 25, i32 0
  %47 = load i32, i32* %46, align 4
  br label %48

48:                                               ; preds = %41, %45
  %49 = phi i32 [ %47, %45 ], [ 0, %41 ]
  %50 = icmp eq i32 %42, %49
  br i1 %50, label %51, label %273

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %12, i64 0, i32 14
  %53 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %24, i64 0, i32 14
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %12, i64 0, i32 14, i32 2
  %55 = load i8, i8* %54, align 1
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %24, i64 0, i32 14, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %55, %57
  br i1 %58, label %59, label %273

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %12, i64 0, i32 14, i32 1
  %61 = load i8, i8* %60, align 4, !range !5
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %24, i64 0, i32 14, i32 1
  %63 = load i8, i8* %62, align 4, !range !5
  %64 = icmp eq i8 %61, %63
  br i1 %64, label %65, label %273

65:                                               ; preds = %59
  %66 = icmp eq i8 %55, 12
  br i1 %66, label %98, label %67

67:                                               ; preds = %65
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %12, i64 0, i32 14, i32 3
  %69 = load i8, i8* %68, align 2, !range !5
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %67
  %72 = bitcast %"class.blink::Length"* %52 to float*
  %73 = load float, float* %72, align 4
  br label %78

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %52, i64 0, i32 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = sitofp i32 %76 to float
  br label %78

78:                                               ; preds = %74, %71
  %79 = phi float [ %73, %71 ], [ %77, %74 ]
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %24, i64 0, i32 14, i32 3
  %81 = load i8, i8* %80, align 2, !range !5
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %78
  %84 = bitcast %"class.blink::Length"* %53 to float*
  %85 = load float, float* %84, align 4
  br label %90

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %53, i64 0, i32 0, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = sitofp i32 %88 to float
  br label %90

90:                                               ; preds = %86, %83
  %91 = phi float [ %85, %83 ], [ %89, %86 ]
  %92 = fcmp oeq float %79, %91
  br i1 %92, label %98, label %93

93:                                               ; preds = %90
  %94 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %52, %"class.blink::Length"* dereferenceable(8) %53) #15
  br i1 %94, label %95, label %273

95:                                               ; preds = %93
  %96 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %11, align 8
  %97 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %23, align 8
  br label %98

98:                                               ; preds = %95, %65, %90
  %99 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %97, %95 ], [ %24, %65 ], [ %24, %90 ]
  %100 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %96, %95 ], [ %12, %65 ], [ %12, %90 ]
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %100, i64 0, i32 15
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %99, i64 0, i32 15
  %103 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %100, i64 0, i32 15, i32 2
  %104 = load i8, i8* %103, align 1
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %99, i64 0, i32 15, i32 2
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %104, %106
  br i1 %107, label %108, label %273

108:                                              ; preds = %98
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %100, i64 0, i32 15, i32 1
  %110 = load i8, i8* %109, align 4, !range !5
  %111 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %99, i64 0, i32 15, i32 1
  %112 = load i8, i8* %111, align 4, !range !5
  %113 = icmp eq i8 %110, %112
  br i1 %113, label %114, label %273

114:                                              ; preds = %108
  %115 = icmp eq i8 %104, 12
  br i1 %115, label %273, label %116

116:                                              ; preds = %114
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %100, i64 0, i32 15, i32 3
  %118 = load i8, i8* %117, align 2, !range !5
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %123, label %120

120:                                              ; preds = %116
  %121 = bitcast %"class.blink::Length"* %101 to float*
  %122 = load float, float* %121, align 4
  br label %127

123:                                              ; preds = %116
  %124 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %101, i64 0, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = sitofp i32 %125 to float
  br label %127

127:                                              ; preds = %123, %120
  %128 = phi float [ %122, %120 ], [ %126, %123 ]
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %99, i64 0, i32 15, i32 3
  %130 = load i8, i8* %129, align 2, !range !5
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %135, label %132

132:                                              ; preds = %127
  %133 = bitcast %"class.blink::Length"* %102 to float*
  %134 = load float, float* %133, align 4
  br label %139

135:                                              ; preds = %127
  %136 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %102, i64 0, i32 0, i32 0
  %137 = load i32, i32* %136, align 4
  %138 = sitofp i32 %137 to float
  br label %139

139:                                              ; preds = %135, %132
  %140 = phi float [ %134, %132 ], [ %138, %135 ]
  %141 = fcmp oeq float %128, %140
  br i1 %141, label %273, label %142

142:                                              ; preds = %139
  %143 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %101, %"class.blink::Length"* dereferenceable(8) %102) #15
  %144 = xor i1 %143, true
  br label %273

145:                                              ; preds = %3
  %146 = icmp ult i16 %14, 8192
  br i1 %146, label %150, label %147

147:                                              ; preds = %145
  %148 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %12, i64 0, i32 26, i32 0
  %149 = load i32, i32* %148, align 4
  br label %150

150:                                              ; preds = %145, %147
  %151 = phi i32 [ %149, %147 ], [ 0, %145 ]
  %152 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %1, i64 0, i32 0, i32 7, i32 0, i32 0
  %153 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %152, align 8
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %153, i64 0, i32 27
  %155 = load i16, i16* %154, align 8
  %156 = icmp ult i16 %155, 8192
  br i1 %156, label %160, label %157

157:                                              ; preds = %150
  %158 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %153, i64 0, i32 26, i32 0
  %159 = load i32, i32* %158, align 4
  br label %160

160:                                              ; preds = %150, %157
  %161 = phi i32 [ %159, %157 ], [ 0, %150 ]
  %162 = icmp eq i32 %151, %161
  br i1 %162, label %163, label %273

163:                                              ; preds = %160
  %164 = and i16 %14, 14
  %165 = icmp eq i16 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %163
  %167 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %12, i64 0, i32 23, i32 0
  %168 = load i32, i32* %167, align 4
  br label %169

169:                                              ; preds = %163, %166
  %170 = phi i32 [ %168, %166 ], [ 0, %163 ]
  %171 = and i16 %155, 14
  %172 = icmp eq i16 %171, 0
  br i1 %172, label %176, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %153, i64 0, i32 23, i32 0
  %175 = load i32, i32* %174, align 4
  br label %176

176:                                              ; preds = %169, %173
  %177 = phi i32 [ %175, %173 ], [ 0, %169 ]
  %178 = icmp eq i32 %170, %177
  br i1 %178, label %179, label %273

179:                                              ; preds = %176
  %180 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %12, i64 0, i32 16
  %181 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %153, i64 0, i32 16
  %182 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %12, i64 0, i32 16, i32 2
  %183 = load i8, i8* %182, align 1
  %184 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %153, i64 0, i32 16, i32 2
  %185 = load i8, i8* %184, align 1
  %186 = icmp eq i8 %183, %185
  br i1 %186, label %187, label %273

187:                                              ; preds = %179
  %188 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %12, i64 0, i32 16, i32 1
  %189 = load i8, i8* %188, align 4, !range !5
  %190 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %153, i64 0, i32 16, i32 1
  %191 = load i8, i8* %190, align 4, !range !5
  %192 = icmp eq i8 %189, %191
  br i1 %192, label %193, label %273

193:                                              ; preds = %187
  %194 = icmp eq i8 %183, 12
  br i1 %194, label %226, label %195

195:                                              ; preds = %193
  %196 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %12, i64 0, i32 16, i32 3
  %197 = load i8, i8* %196, align 2, !range !5
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %202, label %199

199:                                              ; preds = %195
  %200 = bitcast %"class.blink::Length"* %180 to float*
  %201 = load float, float* %200, align 4
  br label %206

202:                                              ; preds = %195
  %203 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %180, i64 0, i32 0, i32 0
  %204 = load i32, i32* %203, align 4
  %205 = sitofp i32 %204 to float
  br label %206

206:                                              ; preds = %202, %199
  %207 = phi float [ %201, %199 ], [ %205, %202 ]
  %208 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %153, i64 0, i32 16, i32 3
  %209 = load i8, i8* %208, align 2, !range !5
  %210 = icmp eq i8 %209, 0
  br i1 %210, label %214, label %211

211:                                              ; preds = %206
  %212 = bitcast %"class.blink::Length"* %181 to float*
  %213 = load float, float* %212, align 4
  br label %218

214:                                              ; preds = %206
  %215 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %181, i64 0, i32 0, i32 0
  %216 = load i32, i32* %215, align 4
  %217 = sitofp i32 %216 to float
  br label %218

218:                                              ; preds = %214, %211
  %219 = phi float [ %213, %211 ], [ %217, %214 ]
  %220 = fcmp oeq float %207, %219
  br i1 %220, label %226, label %221

221:                                              ; preds = %218
  %222 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %180, %"class.blink::Length"* dereferenceable(8) %181) #15
  br i1 %222, label %223, label %273

223:                                              ; preds = %221
  %224 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %11, align 8
  %225 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %152, align 8
  br label %226

226:                                              ; preds = %223, %193, %218
  %227 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %225, %223 ], [ %153, %193 ], [ %153, %218 ]
  %228 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %224, %223 ], [ %12, %193 ], [ %12, %218 ]
  %229 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %228, i64 0, i32 13
  %230 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %227, i64 0, i32 13
  %231 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %228, i64 0, i32 13, i32 2
  %232 = load i8, i8* %231, align 1
  %233 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %227, i64 0, i32 13, i32 2
  %234 = load i8, i8* %233, align 1
  %235 = icmp eq i8 %232, %234
  br i1 %235, label %236, label %273

236:                                              ; preds = %226
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %228, i64 0, i32 13, i32 1
  %238 = load i8, i8* %237, align 4, !range !5
  %239 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %227, i64 0, i32 13, i32 1
  %240 = load i8, i8* %239, align 4, !range !5
  %241 = icmp eq i8 %238, %240
  br i1 %241, label %242, label %273

242:                                              ; preds = %236
  %243 = icmp eq i8 %232, 12
  br i1 %243, label %273, label %244

244:                                              ; preds = %242
  %245 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %228, i64 0, i32 13, i32 3
  %246 = load i8, i8* %245, align 2, !range !5
  %247 = icmp eq i8 %246, 0
  br i1 %247, label %251, label %248

248:                                              ; preds = %244
  %249 = bitcast %"class.blink::Length"* %229 to float*
  %250 = load float, float* %249, align 4
  br label %255

251:                                              ; preds = %244
  %252 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %229, i64 0, i32 0, i32 0
  %253 = load i32, i32* %252, align 4
  %254 = sitofp i32 %253 to float
  br label %255

255:                                              ; preds = %251, %248
  %256 = phi float [ %250, %248 ], [ %254, %251 ]
  %257 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %227, i64 0, i32 13, i32 3
  %258 = load i8, i8* %257, align 2, !range !5
  %259 = icmp eq i8 %258, 0
  br i1 %259, label %263, label %260

260:                                              ; preds = %255
  %261 = bitcast %"class.blink::Length"* %230 to float*
  %262 = load float, float* %261, align 4
  br label %267

263:                                              ; preds = %255
  %264 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %230, i64 0, i32 0, i32 0
  %265 = load i32, i32* %264, align 4
  %266 = sitofp i32 %265 to float
  br label %267

267:                                              ; preds = %263, %260
  %268 = phi float [ %262, %260 ], [ %266, %263 ]
  %269 = fcmp oeq float %256, %268
  br i1 %269, label %273, label %270

270:                                              ; preds = %267
  %271 = tail call zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"* %229, %"class.blink::Length"* dereferenceable(8) %230) #15
  %272 = xor i1 %271, true
  br label %273

273:                                              ; preds = %93, %48, %32, %221, %176, %160, %179, %187, %51, %59, %226, %236, %242, %267, %270, %98, %108, %114, %139, %142
  %274 = phi i1 [ true, %93 ], [ true, %48 ], [ true, %32 ], [ true, %108 ], [ true, %98 ], [ false, %139 ], [ false, %114 ], [ %144, %142 ], [ true, %221 ], [ true, %176 ], [ true, %160 ], [ true, %236 ], [ true, %226 ], [ false, %267 ], [ false, %242 ], [ %272, %270 ], [ true, %59 ], [ true, %51 ], [ true, %187 ], [ true, %179 ]
  ret i1 %274
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock15UpdateFromStyleEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  tail call void @_ZN5blink9LayoutBox15UpdateFromStyleEv(%"class.blink::LayoutBox"* %3) #15
  %4 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %5 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = and i160 %8, 1190036353683150593851392
  %10 = icmp eq i160 %9, 340010386766614455386112
  br i1 %10, label %11, label %25

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %5, i64 0, i32 0, i32 3, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %13, i64 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %15, i64 0, i32 38, i32 0
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %25

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %21 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %20 to i96*
  %22 = load i96, i96* %21, align 4
  %23 = and i96 %22, 8589934592
  %24 = icmp eq i96 %23, 0
  br i1 %24, label %54, label %37

25:                                               ; preds = %11, %1
  %26 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutBlock"*)***
  %27 = load i1 (%"class.blink::LayoutBlock"*)**, i1 (%"class.blink::LayoutBlock"*)*** %26, align 8
  %28 = getelementptr inbounds i1 (%"class.blink::LayoutBlock"*)*, i1 (%"class.blink::LayoutBlock"*)** %27, i64 204
  %29 = load i1 (%"class.blink::LayoutBlock"*)*, i1 (%"class.blink::LayoutBlock"*)** %28, align 8
  %30 = tail call zeroext i1 %29(%"class.blink::LayoutBlock"* %0) #15
  %31 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %32 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %31 to i96*
  %33 = load i96, i96* %32, align 4
  %34 = and i96 %33, 8589934592
  %35 = icmp ne i96 %34, 0
  %36 = xor i1 %30, %35
  br i1 %36, label %37, label %54

37:                                               ; preds = %19, %25
  %38 = phi i96* [ %21, %19 ], [ %32, %25 ]
  %39 = phi i1 [ false, %19 ], [ %30, %25 ]
  %40 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %41 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %40) #15
  %42 = icmp eq %"class.blink::PaintLayerScrollableArea"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %37
  %44 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %40) #15
  tail call void @_ZN5blink24PaintLayerScrollableArea30InvalidateAllStickyConstraintsEv(%"class.blink::PaintLayerScrollableArea"* %44) #15
  br label %45

45:                                               ; preds = %37, %43
  tail call void @_ZN5blink12LayoutObject27SetNeedsPaintPropertyUpdateEv(%"class.blink::LayoutObject"* %2) #15
  %46 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %47 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %46, align 8
  %48 = icmp eq %"struct.blink::FragmentData::RareData"* %47, null
  br i1 %48, label %54, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %47, i64 0, i32 0, i32 0, i32 0, i32 0
  %51 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %50, align 8
  %52 = icmp eq %"class.blink::PaintLayer"* %51, null
  br i1 %52, label %54, label %53

53:                                               ; preds = %49
  tail call void @_ZN5blink10PaintLayer31SetNeedsCompositingInputsUpdateEb(%"class.blink::PaintLayer"* nonnull %51, i1 zeroext true) #15
  br label %54

54:                                               ; preds = %19, %45, %49, %53, %25
  %55 = phi i96* [ %21, %19 ], [ %38, %49 ], [ %38, %53 ], [ %32, %25 ], [ %38, %45 ]
  %56 = phi i1 [ false, %19 ], [ %39, %49 ], [ %39, %53 ], [ %30, %25 ], [ %39, %45 ]
  %57 = zext i1 %56 to i96
  %58 = load i96, i96* %55, align 4
  %59 = shl nuw nsw i96 %57, 33
  %60 = and i96 %58, -8589934593
  %61 = or i96 %60, %59
  store i96 %61, i96* %55, align 4
  ret void
}

declare void @_ZN5blink9LayoutBox15UpdateFromStyleEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #3

declare void @_ZN5blink24PaintLayerScrollableArea30InvalidateAllStickyConstraintsEv(%"class.blink::PaintLayerScrollableArea"*) local_unnamed_addr #3

declare void @_ZN5blink12LayoutObject27SetNeedsPaintPropertyUpdateEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3

declare void @_ZN5blink10PaintLayer31SetNeedsCompositingInputsUpdateEb(%"class.blink::PaintLayer"*, i1 zeroext) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11LayoutBlock24AllowsNonVisibleOverflowEv(%"class.blink::LayoutBlock"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 16777216
  %6 = icmp eq i96 %5, 0
  %7 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %8 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %9 = select i1 %6, %"class.blink::Node"* %8, %"class.blink::Node"* null
  %10 = icmp eq %"class.blink::Node"* %8, null
  br i1 %10, label %11, label %20

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  br label %13

13:                                               ; preds = %11, %13
  %14 = phi %"class.blink::LayoutObject"* [ %16, %13 ], [ %12, %11 ]
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 7
  %16 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %16, i64 0, i32 6, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %13, label %20

20:                                               ; preds = %13, %1
  %21 = phi %"class.blink::Node"* [ %8, %1 ], [ %18, %13 ]
  %22 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %21, i64 0, i32 3, i32 0, i32 0
  %23 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %23, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  %26 = tail call %"class.blink::Element"* @_ZNK5blink8Document23ViewportDefiningElementEv(%"class.blink::Document"* %25) #15
  %27 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %26, i64 0, i32 0, i32 0
  %28 = icmp ne %"class.blink::Node"* %9, %27
  ret i1 %28
}

declare %"class.blink::Element"* @_ZNK5blink8Document23ViewportDefiningElementEv(%"class.blink::Document"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock24AddChildBeforeDescendantEPNS_12LayoutObjectES2_(%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 0, i32 7
  %7 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  br label %8

8:                                                ; preds = %8, %3
  %9 = phi %"class.blink::LayoutObject"* [ %7, %3 ], [ %11, %8 ]
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 7
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = icmp eq %"class.blink::LayoutObject"* %11, %5
  br i1 %12, label %13, label %8

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 4
  %15 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %14 to i96*
  %16 = load i96, i96* %15, align 4
  %17 = and i96 %16, 16777216
  %18 = icmp eq i96 %17, 0
  br i1 %18, label %19, label %25

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str, i64 0, i64 0), i32 297, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.1, i64 0, i64 0)) #15
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  %22 = load i96, i96* %15, align 4
  %23 = and i96 %22, 16777216
  %24 = icmp eq i96 %23, 0
  br i1 %24, label %132, label %25

25:                                               ; preds = %13, %19
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 5, i32 0
  %27 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %27, i64 0, i32 0, i32 9
  %29 = bitcast [20 x i8]* %28 to i160*
  %30 = load i160, i160* %29, align 8
  %31 = lshr i160 %30, 32
  %32 = trunc i160 %31 to i32
  %33 = and i32 %32, 31
  switch i32 %33, label %132 [
    i32 1, label %34
    i32 14, label %34
  ]

34:                                               ; preds = %25, %25
  %35 = and i160 %30, 2113929216
  %36 = icmp eq i160 %35, 0
  br i1 %36, label %37, label %132

37:                                               ; preds = %34
  %38 = bitcast %"class.blink::LayoutObject"* %9 to i1 (%"class.blink::LayoutObject"*)***
  %39 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %38, align 8
  %40 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %39, i64 23
  %41 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %40, align 8
  %42 = call zeroext i1 %41(%"class.blink::LayoutObject"* %9) #15
  br i1 %42, label %43, label %132

43:                                               ; preds = %37
  %44 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %38, align 8
  %45 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %44, i64 25
  %46 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %45, align 8
  %47 = call zeroext i1 %46(%"class.blink::LayoutObject"* %9) #15
  br i1 %47, label %132, label %48

48:                                               ; preds = %43
  %49 = bitcast %"class.blink::LayoutObject"* %9 to i1 (%"class.blink::LayoutObject"*, i32)***
  %50 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %49, align 8
  %51 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %50, i64 92
  %52 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %51, align 8
  %53 = call zeroext i1 %52(%"class.blink::LayoutObject"* %9, i32 20) #15
  br i1 %53, label %132, label %54

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %56 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %55 to i96*
  %57 = load i96, i96* %56, align 4
  %58 = and i96 %57, 134217728
  %59 = icmp eq i96 %58, 0
  br i1 %59, label %60, label %121

60:                                               ; preds = %54
  %61 = and i96 %57, 8388608
  %62 = icmp ne i96 %61, 0
  %63 = and i96 %57, 113336795588871485128704
  %64 = icmp eq i96 %63, 75557863725914323419136
  %65 = or i1 %64, %62
  br i1 %65, label %66, label %107

66:                                               ; preds = %60
  %67 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %68 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %68, i64 0, i32 0, i32 9
  %70 = bitcast [20 x i8]* %69 to i160*
  %71 = load i160, i160* %70, align 8
  %72 = lshr i160 %71, 32
  %73 = trunc i160 %72 to i32
  %74 = and i32 %73, 30
  %75 = or i32 %74, 1
  %76 = icmp eq i32 %75, 15
  br i1 %76, label %77, label %90

77:                                               ; preds = %66
  %78 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %68, i64 0, i32 0, i32 3, i32 0, i32 0
  %79 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %79, i64 0, i32 2, i32 0, i32 0
  %81 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %80, align 8
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %81, i64 0, i32 13
  %83 = bitcast [3 x i8]* %82 to i24*
  %84 = load i24, i24* %83, align 8
  %85 = icmp slt i24 %84, 0
  br i1 %85, label %86, label %121

86:                                               ; preds = %77
  %87 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %81, i64 0, i32 10
  %88 = load i32, i32* %87, align 4
  %89 = icmp slt i32 %88, 1
  br i1 %89, label %121, label %90

90:                                               ; preds = %66, %86
  %91 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %92 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %91, align 8
  %93 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %92, i64 80
  %94 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %93, align 8
  %95 = call zeroext i1 %94(%"class.blink::LayoutObject"* %5) #15
  br i1 %95, label %107, label %96

96:                                               ; preds = %90
  %97 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %98 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %97, align 8
  %99 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %98, i64 92
  %100 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %99, align 8
  %101 = call zeroext i1 %100(%"class.blink::LayoutObject"* %5, i32 10) #15
  br i1 %101, label %107, label %102

102:                                              ; preds = %96
  %103 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %97, align 8
  %104 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %103, i64 92
  %105 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %104, align 8
  %106 = call zeroext i1 %105(%"class.blink::LayoutObject"* %5, i32 27) #15
  br i1 %106, label %107, label %121

107:                                              ; preds = %96, %102, %90, %60
  %108 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %109 = bitcast %"class.blink::LayoutObject"* %108 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %110 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %109, align 8
  %111 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %110, i64 13
  %112 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %111, align 8
  %113 = call %"class.blink::LayoutObjectChildList"* %112(%"class.blink::LayoutObject"* %108) #15
  %114 = icmp eq %"class.blink::LayoutObjectChildList"* %113, null
  br i1 %114, label %118, label %115

115:                                              ; preds = %107
  %116 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %113, i64 0, i32 0
  %117 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %116, align 8
  br label %118

118:                                              ; preds = %107, %115
  %119 = phi %"class.blink::LayoutObject"* [ %117, %115 ], [ null, %107 ]
  %120 = icmp eq %"class.blink::LayoutObject"* %119, %2
  br i1 %120, label %126, label %121

121:                                              ; preds = %54, %77, %118, %102, %86
  %122 = bitcast %"class.blink::LayoutObject"* %9 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %123 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %122, align 8
  %124 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %123, i64 16
  %125 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %124, align 8
  call void %125(%"class.blink::LayoutObject"* %9, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %2) #15
  br label %174

126:                                              ; preds = %118
  %127 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %6, align 8
  %128 = bitcast %"class.blink::LayoutBlock"* %0 to void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %129 = load void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %128, align 8
  %130 = getelementptr inbounds void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %129, i64 16
  %131 = load void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %130, align 8
  call void %131(%"class.blink::LayoutBlock"* %0, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %127) #15
  br label %174

132:                                              ; preds = %48, %25, %19, %34, %37, %43
  %133 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %134 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %133, align 8
  %135 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %134, i64 92
  %136 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %135, align 8
  %137 = call zeroext i1 %136(%"class.blink::LayoutObject"* %1, i32 46) #15
  br i1 %137, label %158, label %138

138:                                              ; preds = %132
  %139 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %133, align 8
  %140 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %139, i64 92
  %141 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %140, align 8
  %142 = call zeroext i1 %141(%"class.blink::LayoutObject"* %1, i32 48) #15
  br i1 %142, label %158, label %143

143:                                              ; preds = %138
  %144 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %133, align 8
  %145 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %144, i64 92
  %146 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %145, align 8
  %147 = call zeroext i1 %146(%"class.blink::LayoutObject"* %1, i32 45) #15
  br i1 %147, label %158, label %148

148:                                              ; preds = %143
  %149 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %133, align 8
  %150 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %149, i64 92
  %151 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %150, align 8
  %152 = call zeroext i1 %151(%"class.blink::LayoutObject"* %1, i32 49) #15
  br i1 %152, label %158, label %153

153:                                              ; preds = %148
  %154 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %133, align 8
  %155 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %154, i64 92
  %156 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %155, align 8
  %157 = call zeroext i1 %156(%"class.blink::LayoutObject"* %1, i32 50) #15
  br i1 %157, label %158, label %163

158:                                              ; preds = %132, %138, %143, %148, %153
  %159 = bitcast %"class.blink::LayoutObject"* %9 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %160 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %159, align 8
  %161 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %160, i64 16
  %162 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %161, align 8
  call void %162(%"class.blink::LayoutObject"* %9, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %2) #15
  br label %174

163:                                              ; preds = %153
  %164 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %165 = call %"class.blink::LayoutObject"* @_ZN5blink9LayoutBox30SplitAnonymousBoxesAroundChildEPNS_12LayoutObjectE(%"class.blink::LayoutBox"* %164, %"class.blink::LayoutObject"* %2) #15
  %166 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %165, i64 0, i32 7
  %167 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %166, align 8
  %168 = icmp eq %"class.blink::LayoutObject"* %167, %5
  %169 = select i1 %168, %"class.blink::LayoutObject"* %165, %"class.blink::LayoutObject"* %9
  %170 = bitcast %"class.blink::LayoutBlock"* %0 to void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %171 = load void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %170, align 8
  %172 = getelementptr inbounds void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %171, i64 16
  %173 = load void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %172, align 8
  call void %173(%"class.blink::LayoutBlock"* %0, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %169) #15
  br label %174

174:                                              ; preds = %121, %126, %163, %158
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #3

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare %"class.blink::LayoutObject"* @_ZN5blink9LayoutBox30SplitAnonymousBoxesAroundChildEPNS_12LayoutObjectE(%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock8AddChildEPNS_12LayoutObjectES2_(%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = icmp ne %"class.blink::LayoutObject"* %2, null
  br i1 %5, label %6, label %11

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 0, i32 7
  %8 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %7, align 8
  %9 = icmp eq %"class.blink::LayoutObject"* %8, %4
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZN5blink11LayoutBlock24AddChildBeforeDescendantEPNS_12LayoutObjectES2_(%"class.blink::LayoutBlock"* %0, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* nonnull %2)
  br label %122

11:                                               ; preds = %6, %3
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %13 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %12 to i96*
  %14 = load i96, i96* %13, align 4
  %15 = and i96 %14, 134217728
  %16 = icmp eq i96 %15, 0
  br i1 %16, label %17, label %64

17:                                               ; preds = %11
  %18 = and i96 %14, 8388608
  %19 = icmp ne i96 %18, 0
  %20 = and i96 %14, 113336795588871485128704
  %21 = icmp eq i96 %20, 75557863725914323419136
  %22 = or i1 %21, %19
  br i1 %22, label %23, label %121

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %25 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %25, i64 0, i32 0, i32 9
  %27 = bitcast [20 x i8]* %26 to i160*
  %28 = load i160, i160* %27, align 8
  %29 = lshr i160 %28, 32
  %30 = trunc i160 %29 to i32
  %31 = and i32 %30, 30
  %32 = or i32 %31, 1
  %33 = icmp eq i32 %32, 15
  br i1 %33, label %34, label %47

34:                                               ; preds = %23
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %25, i64 0, i32 0, i32 3, i32 0, i32 0
  %36 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %36, i64 0, i32 2, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %38, i64 0, i32 13
  %40 = bitcast [3 x i8]* %39 to i24*
  %41 = load i24, i24* %40, align 8
  %42 = icmp slt i24 %41, 0
  br i1 %42, label %43, label %64

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %38, i64 0, i32 10
  %45 = load i32, i32* %44, align 4
  %46 = icmp slt i32 %45, 1
  br i1 %46, label %64, label %47

47:                                               ; preds = %23, %43
  %48 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %49 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %48, align 8
  %50 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %49, i64 80
  %51 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %50, align 8
  %52 = tail call zeroext i1 %51(%"class.blink::LayoutObject"* %4) #15
  br i1 %52, label %121, label %53

53:                                               ; preds = %47
  %54 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %55 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %54, align 8
  %56 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %55, i64 92
  %57 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.blink::LayoutObject"* %4, i32 10) #15
  br i1 %58, label %121, label %59

59:                                               ; preds = %53
  %60 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %54, align 8
  %61 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %60, i64 92
  %62 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %61, align 8
  %63 = tail call zeroext i1 %62(%"class.blink::LayoutObject"* %4, i32 27) #15
  br i1 %63, label %121, label %64

64:                                               ; preds = %11, %34, %59, %43
  %65 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 0, i32 8
  %66 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1, i32 1
  %67 = select i1 %5, %"class.blink::LayoutObject"** %65, %"class.blink::LayoutObject"** %66
  %68 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %67, align 8
  %69 = icmp eq %"class.blink::LayoutObject"* %68, null
  br i1 %69, label %110, label %70

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %68, i64 0, i32 4
  %72 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %71 to i96*
  %73 = load i96, i96* %72, align 4
  %74 = and i96 %73, 16777216
  %75 = icmp eq i96 %74, 0
  br i1 %75, label %110, label %76

76:                                               ; preds = %70
  %77 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %68, i64 0, i32 5, i32 0
  %78 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %78, i64 0, i32 0, i32 9
  %80 = bitcast [20 x i8]* %79 to i160*
  %81 = load i160, i160* %80, align 8
  %82 = lshr i160 %81, 32
  %83 = trunc i160 %82 to i32
  %84 = and i32 %83, 31
  switch i32 %84, label %110 [
    i32 1, label %85
    i32 14, label %85
  ]

85:                                               ; preds = %76, %76
  %86 = and i160 %81, 2113929216
  %87 = icmp eq i160 %86, 0
  br i1 %87, label %88, label %110

88:                                               ; preds = %85
  %89 = bitcast %"class.blink::LayoutObject"* %68 to i1 (%"class.blink::LayoutObject"*)***
  %90 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %89, align 8
  %91 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %90, i64 23
  %92 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %91, align 8
  %93 = tail call zeroext i1 %92(%"class.blink::LayoutObject"* nonnull %68) #15
  br i1 %93, label %94, label %110

94:                                               ; preds = %88
  %95 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %89, align 8
  %96 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %95, i64 25
  %97 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %96, align 8
  %98 = tail call zeroext i1 %97(%"class.blink::LayoutObject"* nonnull %68) #15
  br i1 %98, label %110, label %99

99:                                               ; preds = %94
  %100 = bitcast %"class.blink::LayoutObject"* %68 to i1 (%"class.blink::LayoutObject"*, i32)***
  %101 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %100, align 8
  %102 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %101, i64 92
  %103 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %102, align 8
  %104 = tail call zeroext i1 %103(%"class.blink::LayoutObject"* nonnull %68, i32 20) #15
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = bitcast %"class.blink::LayoutObject"* %68 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %107 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %107, i64 16
  %109 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %108, align 8
  tail call void %109(%"class.blink::LayoutObject"* nonnull %68, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* null) #15
  br label %122

110:                                              ; preds = %99, %76, %70, %85, %88, %94, %64
  %111 = load i96, i96* %13, align 4
  %112 = and i96 %111, 134217728
  %113 = icmp eq i96 %112, 0
  br i1 %113, label %121, label %114

114:                                              ; preds = %110
  %115 = tail call %"class.blink::LayoutBlock"* @_ZN5blink11LayoutBlock35CreateAnonymousWithParentAndDisplayEPKNS_12LayoutObjectENS_8EDisplayE(%"class.blink::LayoutObject"* %4, i32 1) #15
  %116 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %115, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject8AddChildEPS0_S1_(%"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject"* %116, %"class.blink::LayoutObject"* %2) #15
  %117 = bitcast %"class.blink::LayoutBlock"* %115 to void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %118 = load void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %117, align 8
  %119 = getelementptr inbounds void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %118, i64 16
  %120 = load void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %119, align 8
  tail call void %120(%"class.blink::LayoutBlock"* %115, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* null) #15
  br label %122

121:                                              ; preds = %110, %53, %59, %47, %17
  tail call void @_ZN5blink12LayoutObject8AddChildEPS0_S1_(%"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %2) #15
  br label %122

122:                                              ; preds = %114, %105, %121, %10
  ret void
}

declare void @_ZN5blink12LayoutObject8AddChildEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock28RemoveLeftoverAnonymousBlockEPS0_(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0, i32 0
  %5 = tail call %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"* %4) #15
  %6 = icmp eq %"class.blink::LayoutBoxModelObject"* %5, null
  br i1 %6, label %7, label %40

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 9
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = bitcast %"class.blink::LayoutBlock"* %1 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %13 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %12, align 8
  %14 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %13, i64 13
  %15 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %14, align 8
  %16 = tail call %"class.blink::LayoutObjectChildList"* %15(%"class.blink::LayoutObject"* %9) #15
  %17 = icmp eq %"class.blink::LayoutObjectChildList"* %16, null
  br i1 %17, label %21, label %18

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %16, i64 0, i32 0
  %20 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %19, align 8
  br label %21

21:                                               ; preds = %7, %18
  %22 = phi %"class.blink::LayoutObject"* [ %20, %18 ], [ null, %7 ]
  %23 = bitcast %"class.blink::LayoutBlock"* %1 to void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)***
  %24 = load void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)**, void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)*, void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)** %24, i64 144
  %26 = load void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)*, void (%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1)** %25, align 8
  tail call void %26(%"class.blink::LayoutBoxModelObject"* %4, %"class.blink::LayoutBoxModelObject"* %8, %"class.blink::LayoutObject"* %22, %"class.blink::LayoutObject"* null, %"class.blink::LayoutObject"* %11, i1 zeroext false) #15
  tail call void @_ZN5blink12LayoutObject26RemoveFromLayoutFlowThreadEv(%"class.blink::LayoutObject"* %9) #15
  %27 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 7
  %28 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %27, align 8
  %29 = bitcast %"class.blink::LayoutObject"* %28 to i1 (%"class.blink::LayoutObject"*, i32)***
  %30 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %30, i64 92
  %32 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.blink::LayoutObject"* %28, i32 10) #15
  br i1 %33, label %34, label %37

34:                                               ; preds = %21
  %35 = bitcast %"class.blink::LayoutObject"** %27 to %"class.blink::LayoutGrid"**
  %36 = load %"class.blink::LayoutGrid"*, %"class.blink::LayoutGrid"** %35, align 8
  tail call void @_ZN5blink10LayoutGrid9DirtyGridEv(%"class.blink::LayoutGrid"* %36) #15
  br label %37

37:                                               ; preds = %34, %21
  %38 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1
  %39 = tail call %"class.blink::LayoutObject"* @_ZN5blink21LayoutObjectChildList15RemoveChildNodeEPNS_12LayoutObjectES2_b(%"class.blink::LayoutObjectChildList"* %38, %"class.blink::LayoutObject"* %3, %"class.blink::LayoutObject"* %9, i1 zeroext false) #15
  tail call void @_ZN5blink12LayoutObject7DestroyEv(%"class.blink::LayoutObject"* %9) #15
  br label %40

40:                                               ; preds = %2, %37
  ret void
}

declare %"class.blink::LayoutBoxModelObject"* @_ZNK5blink20LayoutBoxModelObject12ContinuationEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #3

declare void @_ZN5blink12LayoutObject26RemoveFromLayoutFlowThreadEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3

declare void @_ZN5blink10LayoutGrid9DirtyGridEv(%"class.blink::LayoutGrid"*) local_unnamed_addr #3

declare %"class.blink::LayoutObject"* @_ZN5blink21LayoutObjectChildList15RemoveChildNodeEPNS_12LayoutObjectES2_b(%"class.blink::LayoutObjectChildList"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) local_unnamed_addr #3

declare void @_ZN5blink12LayoutObject7DestroyEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock17UpdateAfterLayoutEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink20LayoutBoxModelObject27InvalidateStickyConstraintsEv(%"class.blink::LayoutBoxModelObject"* %2) #15
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  tail call void @_ZN5blink9LayoutBox17UpdateAfterLayoutEv(%"class.blink::LayoutBox"* %3) #15
  ret void
}

declare void @_ZN5blink20LayoutBoxModelObject27InvalidateStickyConstraintsEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #3

declare void @_ZN5blink9LayoutBox17UpdateAfterLayoutEv(%"class.blink::LayoutBox"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock12UpdateLayoutEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutAnalyzer::Scope", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = bitcast %"class.blink::LayoutAnalyzer::Scope"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #15
  %5 = bitcast %"class.blink::LayoutAnalyzer::Scope"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 -86, i64 16, i1 false)
  call void @_ZN5blink14LayoutAnalyzer5ScopeC1ERKNS_12LayoutObjectE(%"class.blink::LayoutAnalyzer::Scope"* nonnull %2, %"class.blink::LayoutObject"* dereferenceable(88) %3) #15
  %6 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 8589934592
  %10 = icmp eq i96 %9, 0
  br i1 %10, label %27, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 9
  %15 = bitcast [20 x i8]* %14 to i160*
  %16 = load i160, i160* %15, align 8
  %17 = lshr i160 %16, 74
  %18 = trunc i160 %17 to i32
  %19 = and i32 %18, 7
  switch i32 %19, label %20 [
    i32 5, label %27
    i32 2, label %27
  ]

20:                                               ; preds = %11
  %21 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %22 = call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %21) #15
  %23 = call zeroext i1 @_ZNK5blink24PaintLayerScrollableArea28ShouldPerformScrollAnchoringEv(%"class.blink::PaintLayerScrollableArea"* %22) #15
  br i1 %23, label %24, label %27

24:                                               ; preds = %20
  %25 = call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %21) #15
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %25, i64 0, i32 12
  call void @_ZN5blink12ScrollAnchor18NotifyBeforeLayoutEv(%"class.blink::ScrollAnchor"* %26) #15
  br label %27

27:                                               ; preds = %11, %11, %1, %24, %20
  %28 = bitcast %"class.blink::LayoutBlock"* %0 to void (%"class.blink::LayoutBlock"*, i1)***
  %29 = load void (%"class.blink::LayoutBlock"*, i1)**, void (%"class.blink::LayoutBlock"*, i1)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::LayoutBlock"*, i1)*, void (%"class.blink::LayoutBlock"*, i1)** %29, i64 196
  %31 = load void (%"class.blink::LayoutBlock"*, i1)*, void (%"class.blink::LayoutBlock"*, i1)** %30, align 8
  call void %31(%"class.blink::LayoutBlock"* %0, i1 zeroext false) #15
  %32 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %33 = call zeroext i1 @_ZNK5blink9LayoutBox14HasControlClipEv(%"class.blink::LayoutBox"* %32) #15
  br i1 %33, label %34, label %43

34:                                               ; preds = %27
  %35 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 9, i32 0, i32 0, i32 0
  %36 = load %"struct.blink::BoxOverflowModel"*, %"struct.blink::BoxOverflowModel"** %35, align 8
  %37 = icmp eq %"struct.blink::BoxOverflowModel"* %36, null
  br i1 %37, label %43, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"struct.blink::BoxOverflowModel", %"struct.blink::BoxOverflowModel"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8, i8* %39, align 4, !range !5
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %43, label %42

42:                                               ; preds = %38
  call void @_ZN5blink9LayoutBox19ClearLayoutOverflowEv(%"class.blink::LayoutBox"* %32) #15
  br label %43

43:                                               ; preds = %38, %34, %42, %27
  %44 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 2
  %45 = load i16, i16* %44, align 8
  %46 = and i16 %45, -17
  store i16 %46, i16* %44, align 8
  call void @_ZN5blink14LayoutAnalyzer5ScopeD1Ev(%"class.blink::LayoutAnalyzer::Scope"* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #15
  ret void
}

declare void @_ZN5blink14LayoutAnalyzer5ScopeC1ERKNS_12LayoutObjectE(%"class.blink::LayoutAnalyzer::Scope"*, %"class.blink::LayoutObject"* dereferenceable(88)) unnamed_addr #3

declare zeroext i1 @_ZNK5blink24PaintLayerScrollableArea28ShouldPerformScrollAnchoringEv(%"class.blink::PaintLayerScrollableArea"*) unnamed_addr #3

declare void @_ZN5blink12ScrollAnchor18NotifyBeforeLayoutEv(%"class.blink::ScrollAnchor"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink9LayoutBox14HasControlClipEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare void @_ZN5blink9LayoutBox19ClearLayoutOverflowEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink14LayoutAnalyzer5ScopeD1Ev(%"class.blink::LayoutAnalyzer::Scope"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11LayoutBlock34WidthAvailableToChildrenHasChangedEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 2
  %4 = load i16, i16* %3, align 8
  %5 = and i16 %4, -9
  store i16 %5, i16* %3, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %7 = bitcast %"class.blink::ComputedStyle"** %6 to %"class.blink::ComputedStyleBase"**
  %8 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %8, i64 0, i32 5, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %10, i64 0, i32 11
  %12 = load i8, i8* %11, align 4
  %13 = and i8 %12, 2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %47

15:                                               ; preds = %1
  %16 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutBlock"*)***
  %17 = load i1 (%"class.blink::LayoutBlock"*)**, i1 (%"class.blink::LayoutBlock"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::LayoutBlock"*)*, i1 (%"class.blink::LayoutBlock"*)** %17, i64 183
  %19 = load i1 (%"class.blink::LayoutBlock"*)*, i1 (%"class.blink::LayoutBlock"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::LayoutBlock"* %0) #15
  br i1 %20, label %21, label %47

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %23 = load %"class.blink::Node"*, %"class.blink::Node"** %22, align 8
  %24 = icmp eq %"class.blink::Node"* %23, null
  br i1 %24, label %25, label %32

25:                                               ; preds = %21, %25
  %26 = phi %"class.blink::LayoutObject"* [ %28, %25 ], [ %2, %21 ]
  %27 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 7
  %28 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %28, i64 0, i32 6, i32 0, i32 0
  %30 = load %"class.blink::Node"*, %"class.blink::Node"** %29, align 8
  %31 = icmp eq %"class.blink::Node"* %30, null
  br i1 %31, label %25, label %32

32:                                               ; preds = %25, %21
  %33 = phi %"class.blink::Node"* [ %23, %21 ], [ %30, %25 ]
  %34 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %33, i64 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %35, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Document"*, %"class.blink::Document"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %37, i64 0, i32 113
  %39 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %39, i64 0, i32 3
  %41 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %41, i64 0, i32 0
  %43 = load i8, i8* %42, align 8
  %44 = lshr i8 %43, 1
  %45 = and i8 %44, 1
  %46 = zext i8 %45 to i32
  br label %47

47:                                               ; preds = %32, %15, %1
  %48 = phi i32 [ 0, %15 ], [ 0, %1 ], [ %46, %32 ]
  %49 = lshr i16 %4, 3
  %50 = and i16 %49, 1
  %51 = zext i16 %50 to i32
  %52 = or i32 %48, %51
  %53 = icmp ne i32 %52, 0
  ret i1 %53
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11LayoutBlock32UpdateLogicalWidthAndColumnWidthEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8
  %8 = and i160 %7, 15211807202738752817960438464512
  %9 = icmp eq i160 %8, 0
  %10 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %12 = select i1 %9, i32* %10, i32* %11
  %13 = load i32, i32* %12, align 4
  %14 = bitcast %"class.blink::LayoutBlock"* %0 to void (%"class.blink::LayoutBox"*)***
  %15 = load void (%"class.blink::LayoutBox"*)**, void (%"class.blink::LayoutBox"*)*** %14, align 8
  %16 = getelementptr inbounds void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %15, i64 163
  %17 = load void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %16, align 8
  tail call void %17(%"class.blink::LayoutBox"* %2) #15
  %18 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %18, i64 0, i32 0, i32 9
  %20 = bitcast [20 x i8]* %19 to i160*
  %21 = load i160, i160* %20, align 8
  %22 = and i160 %21, 15211807202738752817960438464512
  %23 = icmp eq i160 %22, 0
  %24 = select i1 %23, i32* %10, i32* %11
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %13, %25
  br i1 %26, label %27, label %77

27:                                               ; preds = %1
  %28 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 2
  %30 = load i16, i16* %29, align 8
  %31 = and i16 %30, -9
  store i16 %31, i16* %29, align 8
  %32 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %18, i64 0, i32 0, i32 5, i32 0, i32 0
  %33 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %33, i64 0, i32 11
  %35 = load i8, i8* %34, align 4
  %36 = and i8 %35, 2
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %70

38:                                               ; preds = %27
  %39 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutBlock"*)***
  %40 = load i1 (%"class.blink::LayoutBlock"*)**, i1 (%"class.blink::LayoutBlock"*)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.blink::LayoutBlock"*)*, i1 (%"class.blink::LayoutBlock"*)** %40, i64 183
  %42 = load i1 (%"class.blink::LayoutBlock"*)*, i1 (%"class.blink::LayoutBlock"*)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.blink::LayoutBlock"* %0) #15
  br i1 %43, label %44, label %70

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %46 = load %"class.blink::Node"*, %"class.blink::Node"** %45, align 8
  %47 = icmp eq %"class.blink::Node"* %46, null
  br i1 %47, label %48, label %55

48:                                               ; preds = %44, %48
  %49 = phi %"class.blink::LayoutObject"* [ %51, %48 ], [ %28, %44 ]
  %50 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %49, i64 0, i32 7
  %51 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %51, i64 0, i32 6, i32 0, i32 0
  %53 = load %"class.blink::Node"*, %"class.blink::Node"** %52, align 8
  %54 = icmp eq %"class.blink::Node"* %53, null
  br i1 %54, label %48, label %55

55:                                               ; preds = %48, %44
  %56 = phi %"class.blink::Node"* [ %46, %44 ], [ %53, %48 ]
  %57 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %56, i64 0, i32 3, i32 0, i32 0
  %58 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %58, i64 0, i32 2, i32 0, i32 0
  %60 = load %"class.blink::Document"*, %"class.blink::Document"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %60, i64 0, i32 113
  %62 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %62, i64 0, i32 3
  %64 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %64, i64 0, i32 0
  %66 = load i8, i8* %65, align 8
  %67 = lshr i8 %66, 1
  %68 = and i8 %67, 1
  %69 = zext i8 %68 to i32
  br label %70

70:                                               ; preds = %27, %38, %55
  %71 = phi i32 [ 0, %38 ], [ 0, %27 ], [ %69, %55 ]
  %72 = lshr i16 %30, 3
  %73 = and i16 %72, 1
  %74 = zext i16 %73 to i32
  %75 = or i32 %71, %74
  %76 = icmp ne i32 %75, 0
  br label %77

77:                                               ; preds = %1, %70
  %78 = phi i1 [ true, %1 ], [ %76, %70 ]
  ret i1 %78
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock17UpdateBlockLayoutEb(%"class.blink::LayoutBlock"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %3)
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, -824633720840
  %6 = or i96 %5, 274877906944
  store i96 %6, i96* %3, align 4
  %7 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !5
  %8 = icmp ne i8 %7, 0
  %9 = and i96 %4, 16777216
  %10 = icmp eq i96 %9, 0
  %11 = and i1 %10, %8
  br i1 %11, label %12, label %27

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %27, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %14, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = and i32 %18, 67108876
  %20 = icmp eq i32 %19, 67108864
  br i1 %20, label %21, label %27, !prof !6

21:                                               ; preds = %16
  %22 = bitcast %"class.blink::Node"* %14 to %"class.blink::Element"*
  %23 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %22) #15
  %24 = icmp eq %"class.blink::DisplayLockContext"* %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %23) #15
  br i1 %26, label %27, label %30

27:                                               ; preds = %25, %21, %16, %12, %1
  %28 = load i96, i96* %3, align 4
  %29 = and i96 %28, -57
  store i96 %29, i96* %3, align 4
  br label %55

30:                                               ; preds = %25
  %31 = load i96, i96* %3, align 4
  %32 = and i96 %31, 56
  %33 = icmp eq i96 %32, 0
  br i1 %33, label %34, label %55

34:                                               ; preds = %30
  %35 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !5
  %36 = icmp ne i8 %35, 0
  %37 = and i96 %31, 16777216
  %38 = icmp eq i96 %37, 0
  %39 = and i1 %38, %36
  br i1 %39, label %40, label %51

40:                                               ; preds = %34
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  br i1 %42, label %51, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %41, i64 0, i32 1
  %45 = load i32, i32* %44, align 8
  %46 = and i32 %45, 67108876
  %47 = icmp eq i32 %46, 67108864
  br i1 %47, label %48, label %51, !prof !6

48:                                               ; preds = %43
  %49 = bitcast %"class.blink::Node"* %41 to %"class.blink::Element"*
  %50 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %49) #15
  br label %51

51:                                               ; preds = %48, %43, %40, %34
  %52 = phi %"class.blink::DisplayLockContext"* [ null, %34 ], [ %50, %48 ], [ null, %43 ], [ null, %40 ]
  %53 = getelementptr inbounds %"class.blink::DisplayLockContext", %"class.blink::DisplayLockContext"* %52, i64 0, i32 14
  store i8 1, i8* %53, align 2
  %54 = load i96, i96* %3, align 4
  br label %55

55:                                               ; preds = %27, %30, %51
  %56 = phi i96 [ %31, %30 ], [ %54, %51 ], [ %29, %27 ]
  %57 = and i96 %56, -1125899906842625
  store i96 %57, i96* %3, align 4
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %0) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock29AddVisualOverflowFromChildrenEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 align 2 {
  %2 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !5
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %25, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 16777216
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %10, label %25

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %25, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %12, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 67108876
  %18 = icmp eq i32 %17, 67108864
  br i1 %18, label %19, label %25, !prof !6

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::Node"* %12 to %"class.blink::Element"*
  %21 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %20) #15
  %22 = icmp eq %"class.blink::DisplayLockContext"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext22ShouldPrePaintChildrenEv(%"class.blink::DisplayLockContext"* nonnull %21) #15
  br i1 %24, label %25, label %38

25:                                               ; preds = %1, %23, %4, %10, %14, %19
  %26 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %27 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %26 to i96*
  %28 = load i96, i96* %27, align 4
  %29 = and i96 %28, 17592186044416
  %30 = icmp eq i96 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.blink::LayoutBlock"* %0 to %"class.blink::LayoutBlockFlow"*
  tail call void @_ZN5blink15LayoutBlockFlow35AddVisualOverflowFromInlineChildrenEv(%"class.blink::LayoutBlockFlow"* %32) #15
  br label %38

33:                                               ; preds = %25
  %34 = bitcast %"class.blink::LayoutBlock"* %0 to void (%"class.blink::LayoutBlock"*)***
  %35 = load void (%"class.blink::LayoutBlock"*)**, void (%"class.blink::LayoutBlock"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::LayoutBlock"*)*, void (%"class.blink::LayoutBlock"*)** %35, i64 209
  %37 = load void (%"class.blink::LayoutBlock"*)*, void (%"class.blink::LayoutBlock"*)** %36, align 8
  tail call void %37(%"class.blink::LayoutBlock"* %0) #15
  br label %38

38:                                               ; preds = %23, %33, %31
  ret void
}

declare void @_ZN5blink15LayoutBlockFlow35AddVisualOverflowFromInlineChildrenEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock29AddLayoutOverflowFromChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 align 2 {
  %2 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !5
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %25, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 16777216
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %10, label %25

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %25, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %12, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 67108876
  %18 = icmp eq i32 %17, 67108864
  br i1 %18, label %19, label %25, !prof !6

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::Node"* %12 to %"class.blink::Element"*
  %21 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %20) #15
  %22 = icmp eq %"class.blink::DisplayLockContext"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %21) #15
  br i1 %24, label %25, label %34

25:                                               ; preds = %1, %23, %4, %10, %14, %19
  %26 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %27 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %26 to i96*
  %28 = load i96, i96* %27, align 4
  %29 = and i96 %28, 17592186044416
  %30 = icmp eq i96 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.blink::LayoutBlock"* %0 to %"class.blink::LayoutBlockFlow"*
  tail call void @_ZN5blink15LayoutBlockFlow35AddLayoutOverflowFromInlineChildrenEv(%"class.blink::LayoutBlockFlow"* %32) #15
  br label %34

33:                                               ; preds = %25
  tail call void @_ZN5blink11LayoutBlock34AddLayoutOverflowFromBlockChildrenEv(%"class.blink::LayoutBlock"* %0)
  br label %34

34:                                               ; preds = %23, %33, %31
  ret void
}

declare void @_ZN5blink15LayoutBlockFlow35AddLayoutOverflowFromInlineChildrenEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock34AddLayoutOverflowFromBlockChildrenEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.blink::LayoutBlock"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %6 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %6, i64 13
  %8 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %7, align 8
  %9 = tail call %"class.blink::LayoutObjectChildList"* %8(%"class.blink::LayoutObject"* %4) #15
  %10 = icmp eq %"class.blink::LayoutObjectChildList"* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.blink::LayoutObjectChildList"* %9 to %"class.blink::LayoutBox"**
  %13 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %12, align 8
  %14 = icmp eq %"class.blink::LayoutBox"* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %17 = bitcast i64* %2 to %"class.blink::LayoutSize"*
  %18 = bitcast i64* %2 to i8*
  br label %20

19:                                               ; preds = %96, %1, %11
  ret void

20:                                               ; preds = %15, %96
  %21 = phi %"class.blink::LayoutBox"* [ %13, %15 ], [ %99, %96 ]
  %22 = bitcast %"class.blink::LayoutBox"* %21 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %23 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %16, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %23, i64 25
  %25 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %24, align 8
  %26 = call zeroext i1 %25(%"class.blink::LayoutObject"* %4) #15
  br i1 %26, label %27, label %29, !prof !4

27:                                               ; preds = %20
  %28 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #15
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi %"class.blink::LayoutBlock"* [ %28, %27 ], [ %0, %20 ]
  %31 = icmp eq %"class.blink::LayoutBlock"* %30, null
  br i1 %31, label %43, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %30, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.blink::LayoutBlock"* %30 to i1 (%"class.blink::LayoutObject"*, i32)***
  %35 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %34, align 8
  %36 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %35, i64 92
  %37 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %36, align 8
  %38 = call zeroext i1 %37(%"class.blink::LayoutObject"* %33, i32 30) #15
  br i1 %38, label %39, label %43

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %21, i64 0, i32 0, i32 0, i32 4
  %41 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %40 to i96*
  %42 = load i96, i96* %41, align 4
  br label %49

43:                                               ; preds = %29, %32
  %44 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %21, i64 0, i32 0, i32 0, i32 4
  %45 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %44 to i96*
  %46 = load i96, i96* %45, align 4
  %47 = and i96 %46, 8388608
  %48 = icmp eq i96 %47, 0
  br i1 %48, label %49, label %96

49:                                               ; preds = %39, %43
  %50 = phi i96* [ %41, %39 ], [ %45, %43 ]
  %51 = phi i96 [ %42, %39 ], [ %46, %43 ]
  %52 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %21, i64 0, i32 0, i32 0
  %53 = and i96 %51, 113336795588871485128704
  %54 = icmp eq i96 %53, 75557863725914323419136
  br i1 %54, label %96, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %21, i64 0, i32 0, i32 0, i32 5, i32 0
  %57 = bitcast %"class.blink::ComputedStyle"** %56 to %"class.blink::ComputedStyleBase"**
  %58 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %58, i64 0, i32 3, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %60, i64 0, i32 2, i32 0, i32 0
  %62 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %62, i64 0, i32 2, i32 0, i32 0
  %64 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %64, i64 0, i32 45
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, 536870912
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %55
  %70 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %22, align 8
  %71 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %70, i64 44
  %72 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %71, align 8
  %73 = call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %72(%"class.blink::LayoutObject"* %52) #15
  %74 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %73, null
  br i1 %74, label %75, label %96

75:                                               ; preds = %69, %55
  %76 = bitcast %"class.blink::LayoutBox"* %21 to i1 (%"class.blink::LayoutObject"*)***
  %77 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %76, align 8
  %78 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %77, i64 24
  %79 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %78, align 8
  %80 = call zeroext i1 %79(%"class.blink::LayoutObject"* %52) #15
  %81 = bitcast %"class.blink::LayoutBox"* %21 to %"class.blink::LayoutBlockFlow"*
  br i1 %80, label %82, label %87

82:                                               ; preds = %75
  %83 = load i96, i96* %50, align 4
  %84 = and i96 %83, 35184372088832
  %85 = icmp eq i96 %84, 0
  br i1 %85, label %87, label %86

86:                                               ; preds = %82
  call void @_ZN5blink15LayoutBlockFlow35AddLayoutOverflowFromInlineChildrenEv(%"class.blink::LayoutBlockFlow"* nonnull %81) #15
  br label %87

87:                                               ; preds = %82, %75, %86
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #15
  %88 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %21, i64 0, i32 2, i32 0, i32 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %21, i64 0, i32 2, i32 0, i32 1, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = zext i32 %91 to i64
  %93 = shl nuw i64 %92, 32
  %94 = zext i32 %89 to i64
  %95 = or i64 %93, %94
  store i64 %95, i64* %2, align 8
  call void @_ZN5blink9LayoutBox26AddLayoutOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"* %3, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %21, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %17) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #15
  br label %96

96:                                               ; preds = %69, %43, %49, %87
  %97 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %21, i64 0, i32 0, i32 0, i32 9
  %98 = bitcast %"class.blink::LayoutObject"** %97 to %"class.blink::LayoutBox"**
  %99 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %98, align 8
  %100 = icmp eq %"class.blink::LayoutBox"* %99, null
  br i1 %100, label %19, label %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i8 @_ZNK5blink11LayoutBlock23ComputeOverflowClipAxesEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %3 = tail call zeroext i8 @_ZNK5blink9LayoutBox23ComputeOverflowClipAxesEv(%"class.blink::LayoutBox"* %2) #15
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %28

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 8589934592
  %10 = icmp eq i96 %9, 0
  br i1 %10, label %28, label %11

11:                                               ; preds = %5
  %12 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 9
  %15 = bitcast [20 x i8]* %14 to i160*
  %16 = load i160, i160* %15, align 8
  %17 = lshr i160 %16, 74
  %18 = trunc i160 %17 to i32
  %19 = and i32 %18, 7
  switch i32 %19, label %28 [
    i32 5, label %20
    i32 2, label %20
  ]

20:                                               ; preds = %11, %11
  %21 = and i160 %16, 132226261520350065983488
  %22 = icmp ne i160 %21, 37778931862957161709568
  %23 = zext i1 %22 to i8
  %24 = and i160 %16, 1057810092162800527867904
  %25 = icmp eq i160 %24, 302231454903657293676544
  %26 = select i1 %25, i8 0, i8 2
  %27 = or i8 %26, %23
  br label %28

28:                                               ; preds = %5, %11, %1, %20
  %29 = phi i8 [ %27, %20 ], [ %3, %1 ], [ 0, %5 ], [ 3, %11 ]
  ret i8 %29
}

declare zeroext i8 @_ZNK5blink9LayoutBox23ComputeOverflowClipAxesEv(%"class.blink::LayoutBox"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock21ComputeVisualOverflowEb(%"class.blink::LayoutBlock"*, i1 zeroext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %5 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %4) #15
  %6 = extractvalue { i64, i64 } %5, 0
  %7 = extractvalue { i64, i64 } %5, 1
  tail call void @_ZN5blink9LayoutBox19ClearVisualOverflowEv(%"class.blink::LayoutBox"* %4) #15
  %8 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !5
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %31, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %12 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %11 to i96*
  %13 = load i96, i96* %12, align 4
  %14 = and i96 %13, 16777216
  %15 = icmp eq i96 %14, 0
  br i1 %15, label %16, label %31

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %31, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %18, i64 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 67108876
  %24 = icmp eq i32 %23, 67108864
  br i1 %24, label %25, label %31, !prof !6

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Node"* %18 to %"class.blink::Element"*
  %27 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %26) #15
  %28 = icmp eq %"class.blink::DisplayLockContext"* %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext22ShouldPrePaintChildrenEv(%"class.blink::DisplayLockContext"* nonnull %27) #15
  br i1 %30, label %31, label %44

31:                                               ; preds = %2, %29, %25, %20, %16, %10
  %32 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %33 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %32 to i96*
  %34 = load i96, i96* %33, align 4
  %35 = and i96 %34, 17592186044416
  %36 = icmp eq i96 %35, 0
  br i1 %36, label %39, label %37

37:                                               ; preds = %31
  %38 = bitcast %"class.blink::LayoutBlock"* %0 to %"class.blink::LayoutBlockFlow"*
  tail call void @_ZN5blink15LayoutBlockFlow35AddVisualOverflowFromInlineChildrenEv(%"class.blink::LayoutBlockFlow"* %38) #15
  br label %44

39:                                               ; preds = %31
  %40 = bitcast %"class.blink::LayoutBlock"* %0 to void (%"class.blink::LayoutBlock"*)***
  %41 = load void (%"class.blink::LayoutBlock"*)**, void (%"class.blink::LayoutBlock"*)*** %40, align 8
  %42 = getelementptr inbounds void (%"class.blink::LayoutBlock"*)*, void (%"class.blink::LayoutBlock"*)** %41, i64 209
  %43 = load void (%"class.blink::LayoutBlock"*)*, void (%"class.blink::LayoutBlock"*)** %42, align 8
  tail call void %43(%"class.blink::LayoutBlock"* %0) #15
  br label %44

44:                                               ; preds = %29, %37, %39
  %45 = bitcast %"class.blink::LayoutBlock"* %0 to void (%"class.blink::LayoutBox"*)***
  %46 = load void (%"class.blink::LayoutBox"*)**, void (%"class.blink::LayoutBox"*)*** %45, align 8
  %47 = getelementptr inbounds void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %46, i64 150
  %48 = load void (%"class.blink::LayoutBox"*)*, void (%"class.blink::LayoutBox"*)** %47, align 8
  tail call void %48(%"class.blink::LayoutBox"* %4) #15
  %49 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %4) #15
  %50 = extractvalue { i64, i64 } %49, 0
  %51 = extractvalue { i64, i64 } %49, 1
  %52 = trunc i64 %50 to i32
  %53 = lshr i64 %50, 32
  %54 = trunc i64 %53 to i32
  %55 = trunc i64 %6 to i32
  %56 = lshr i64 %6, 32
  %57 = trunc i64 %56 to i32
  %58 = icmp eq i32 %52, %55
  %59 = icmp eq i32 %54, %57
  %60 = and i1 %58, %59
  br i1 %60, label %61, label %71

61:                                               ; preds = %44
  %62 = trunc i64 %51 to i32
  %63 = trunc i64 %7 to i32
  %64 = icmp eq i32 %62, %63
  br i1 %64, label %65, label %71

65:                                               ; preds = %61
  %66 = lshr i64 %7, 32
  %67 = trunc i64 %66 to i32
  %68 = lshr i64 %51, 32
  %69 = trunc i64 %68 to i32
  %70 = icmp eq i32 %69, %67
  br i1 %70, label %89, label %71

71:                                               ; preds = %65, %44, %61
  tail call void @_ZN5blink12LayoutObject41InvalidateIntersectionObserverCachedRectsEv(%"class.blink::LayoutObject"* %3) #15
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %3) #15
  %72 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %73 = load %"class.blink::Node"*, %"class.blink::Node"** %72, align 8
  %74 = icmp eq %"class.blink::Node"* %73, null
  br i1 %74, label %75, label %82

75:                                               ; preds = %71, %75
  %76 = phi %"class.blink::LayoutObject"* [ %78, %75 ], [ %3, %71 ]
  %77 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %76, i64 0, i32 7
  %78 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %78, i64 0, i32 6, i32 0, i32 0
  %80 = load %"class.blink::Node"*, %"class.blink::Node"** %79, align 8
  %81 = icmp eq %"class.blink::Node"* %80, null
  br i1 %81, label %75, label %82

82:                                               ; preds = %75, %71
  %83 = phi %"class.blink::Node"* [ %73, %71 ], [ %80, %75 ]
  %84 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %83, i64 0, i32 3, i32 0, i32 0
  %85 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %85, i64 0, i32 2, i32 0, i32 0
  %87 = load %"class.blink::Document"*, %"class.blink::Document"** %86, align 8
  %88 = tail call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %87) #15
  tail call void @_ZN5blink14LocalFrameView31SetIntersectionObservationStateENS0_28IntersectionObservationStateE(%"class.blink::LocalFrameView"* %88, i32 1) #15
  br label %89

89:                                               ; preds = %65, %82
  ret void
}

declare { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare void @_ZN5blink9LayoutBox19ClearVisualOverflowEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare void @_ZN5blink12LayoutObject41InvalidateIntersectionObserverCachedRectsEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3

declare void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3

declare void @_ZN5blink14LocalFrameView31SetIntersectionObservationStateENS0_28IntersectionObservationStateE(%"class.blink::LocalFrameView"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock21ComputeLayoutOverflowENS_10LayoutUnitEb(%"class.blink::LayoutBlock"*, i32, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::LayoutRect", align 4
  %5 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, -65
  store i96 %9, i96* %7, align 4
  %10 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  tail call void @_ZN5blink9LayoutBox19ClearLayoutOverflowEv(%"class.blink::LayoutBox"* %10) #15
  %11 = bitcast %"class.blink::LayoutBlock"* %0 to void (%"class.blink::LayoutBlock"*)***
  %12 = load void (%"class.blink::LayoutBlock"*)**, void (%"class.blink::LayoutBlock"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.blink::LayoutBlock"*)*, void (%"class.blink::LayoutBlock"*)** %12, i64 208
  %14 = load void (%"class.blink::LayoutBlock"*)*, void (%"class.blink::LayoutBlock"*)** %13, align 8
  tail call void %14(%"class.blink::LayoutBlock"* %0) #15
  tail call void @_ZN5blink11LayoutBlock38AddLayoutOverflowFromPositionedObjectsEv(%"class.blink::LayoutBlock"* %0)
  %15 = load i96, i96* %7, align 4
  %16 = and i96 %15, 8589934592
  %17 = icmp eq i96 %16, 0
  br i1 %17, label %154, label %18

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %20 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %20, i64 0, i32 0, i32 9
  %22 = bitcast [20 x i8]* %21 to i160*
  %23 = load i160, i160* %22, align 8
  %24 = lshr i160 %23, 74
  %25 = trunc i160 %24 to i32
  %26 = and i32 %25, 7
  switch i32 %26, label %27 [
    i32 5, label %154
    i32 2, label %154
  ]

27:                                               ; preds = %18
  %28 = tail call { i64, i64 } @_ZNK5blink9LayoutBox14NoOverflowRectEv(%"class.blink::LayoutBox"* %10) #15
  %29 = extractvalue { i64, i64 } %28, 0
  %30 = trunc i64 %29 to i32
  %31 = lshr i64 %29, 32
  %32 = trunc i64 %31 to i32
  %33 = bitcast %"class.blink::LayoutRect"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #15
  %34 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %4, i64 0, i32 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %4, i64 0, i32 0, i32 1, i32 0
  %36 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %4, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"class.blink::LayoutRect", %"class.blink::LayoutRect"* %4, i64 0, i32 1, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %33, i8 0, i64 16, i1 false) #15
  %38 = load i96, i96* %7, align 4
  %39 = trunc i96 %38 to i32
  %40 = icmp slt i32 %39, 0
  br i1 %40, label %41, label %50

41:                                               ; preds = %27
  %42 = icmp sgt i32 %32, -1
  %43 = select i1 %42, i32 -2147483648, i32 2147483647
  %44 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1, i32 %32) #15
  %45 = extractvalue { i32, i1 } %44, 1
  %46 = extractvalue { i32, i1 } %44, 0
  %47 = select i1 %45, i32 %43, i32 %46, !prof !4
  %48 = icmp sgt i32 %47, 0
  %49 = select i1 %48, i32 %47, i32 0
  br label %59

50:                                               ; preds = %27
  %51 = icmp sgt i32 %30, -1
  %52 = select i1 %51, i32 -2147483648, i32 2147483647
  %53 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %1, i32 %30) #15
  %54 = extractvalue { i32, i1 } %53, 1
  %55 = extractvalue { i32, i1 } %53, 0
  %56 = select i1 %54, i32 %52, i32 %55, !prof !4
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  br label %59

59:                                               ; preds = %50, %41
  %60 = phi i32 [ 64, %41 ], [ %58, %50 ]
  %61 = phi i32 [ %49, %41 ], [ 64, %50 ]
  store i32 %30, i32* %34, align 4
  store i32 %32, i32* %35, align 4
  store i32 %60, i32* %36, align 4
  store i32 %61, i32* %37, align 4
  call void @_ZN5blink9LayoutBox17AddLayoutOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"* %10, %"class.blink::LayoutRect"* nonnull dereferenceable(16) %4) #15
  call void @_ZN5blink9LayoutBox24SetLayoutClientAfterEdgeENS_10LayoutUnitE(%"class.blink::LayoutBox"* %10, i32 %1) #15
  %62 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8, !noalias !7
  %63 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %62, i64 0, i32 0, i32 9
  %64 = bitcast [20 x i8]* %63 to i160*
  %65 = load i160, i160* %64, align 8, !noalias !7
  %66 = bitcast %"class.blink::LayoutBlock"* %0 to i8*
  %67 = and i160 %65, 15211807202738752817960438464512
  %68 = icmp eq i160 %67, 0
  %69 = and i160 %65, 41538374868278621028243970633760768
  %70 = icmp eq i160 %69, 0
  %71 = select i1 %70, { i64, i64 } { i64 953, i64 0 }, { i64, i64 } { i64 945, i64 0 }
  %72 = select i1 %70, { i64, i64 } { i64 969, i64 0 }, { i64, i64 } { i64 961, i64 0 }
  %73 = select i1 %68, { i64, i64 } %72, { i64, i64 } %71
  %74 = select i1 %68, { i64, i64 } %72, { i64, i64 } %71
  %75 = extractvalue { i64, i64 } %73, 0
  %76 = extractvalue { i64, i64 } %74, 1
  %77 = getelementptr inbounds i8, i8* %66, i64 %76
  %78 = bitcast i8* %77 to %"class.blink::LayoutBoxModelObject"*
  %79 = and i64 %75, 1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %88, label %81

81:                                               ; preds = %59
  %82 = bitcast i8* %77 to i8**
  %83 = load i8*, i8** %82, align 8
  %84 = add i64 %75, -1
  %85 = getelementptr i8, i8* %83, i64 %84
  %86 = bitcast i8* %85 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %87 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %86, align 8
  br label %90

88:                                               ; preds = %59
  %89 = inttoptr i64 %75 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %90

90:                                               ; preds = %81, %88
  %91 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %87, %81 ], [ %89, %88 ]
  %92 = call i32 %91(%"class.blink::LayoutBoxModelObject"* %78) #15
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %153, label %94

94:                                               ; preds = %90
  %95 = load i96, i96* %7, align 4
  %96 = and i96 %95, 17592186044416
  %97 = icmp eq i96 %96, 0
  br i1 %97, label %98, label %153

98:                                               ; preds = %94
  %99 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %19, align 8
  %100 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %99, i64 0, i32 0, i32 9
  %101 = bitcast [20 x i8]* %100 to i160*
  %102 = load i160, i160* %101, align 8
  %103 = and i160 %102, 15211807202738752817960438464512
  %104 = icmp eq i160 %103, 0
  %105 = select i1 %104, i160 74, i160 77
  %106 = lshr i160 %102, %105
  %107 = trunc i160 %106 to i32
  %108 = and i32 %107, 7
  switch i32 %108, label %153 [
    i32 1, label %109
    i32 4, label %131
  ]

109:                                              ; preds = %98
  %110 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %111 = load %"class.blink::Node"*, %"class.blink::Node"** %110, align 8
  %112 = icmp eq %"class.blink::Node"* %111, null
  br i1 %112, label %113, label %120

113:                                              ; preds = %109, %113
  %114 = phi %"class.blink::LayoutObject"* [ %116, %113 ], [ %5, %109 ]
  %115 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %114, i64 0, i32 7
  %116 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %116, i64 0, i32 6, i32 0, i32 0
  %118 = load %"class.blink::Node"*, %"class.blink::Node"** %117, align 8
  %119 = icmp eq %"class.blink::Node"* %118, null
  br i1 %119, label %113, label %120

120:                                              ; preds = %113, %109
  %121 = phi %"class.blink::Node"* [ %111, %109 ], [ %118, %113 ]
  %122 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %121, i64 0, i32 3, i32 0, i32 0
  %123 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %123, i64 0, i32 2, i32 0, i32 0
  %125 = load %"class.blink::Document"*, %"class.blink::Document"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %125, i64 0, i32 2
  %127 = bitcast %"class.blink::UseCounter"* %126 to void (%"class.blink::UseCounter"*, i32)***
  %128 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %127, align 8
  %129 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %128, i64 3
  %130 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %129, align 8
  call void %130(%"class.blink::UseCounter"* %126, i32 3335) #15
  br label %153

131:                                              ; preds = %98
  %132 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %133 = load %"class.blink::Node"*, %"class.blink::Node"** %132, align 8
  %134 = icmp eq %"class.blink::Node"* %133, null
  br i1 %134, label %135, label %142

135:                                              ; preds = %131, %135
  %136 = phi %"class.blink::LayoutObject"* [ %138, %135 ], [ %5, %131 ]
  %137 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %136, i64 0, i32 7
  %138 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %137, align 8
  %139 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %138, i64 0, i32 6, i32 0, i32 0
  %140 = load %"class.blink::Node"*, %"class.blink::Node"** %139, align 8
  %141 = icmp eq %"class.blink::Node"* %140, null
  br i1 %141, label %135, label %142

142:                                              ; preds = %135, %131
  %143 = phi %"class.blink::Node"* [ %133, %131 ], [ %140, %135 ]
  %144 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %143, i64 0, i32 3, i32 0, i32 0
  %145 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %145, i64 0, i32 2, i32 0, i32 0
  %147 = load %"class.blink::Document"*, %"class.blink::Document"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %147, i64 0, i32 2
  %149 = bitcast %"class.blink::UseCounter"* %148 to void (%"class.blink::UseCounter"*, i32)***
  %150 = load void (%"class.blink::UseCounter"*, i32)**, void (%"class.blink::UseCounter"*, i32)*** %149, align 8
  %151 = getelementptr inbounds void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %150, i64 3
  %152 = load void (%"class.blink::UseCounter"*, i32)*, void (%"class.blink::UseCounter"*, i32)** %151, align 8
  call void %152(%"class.blink::UseCounter"* %148, i32 3336) #15
  br label %153

153:                                              ; preds = %94, %90, %120, %142, %98
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #15
  br label %154

154:                                              ; preds = %18, %18, %3, %153
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock38AddLayoutOverflowFromPositionedObjectsEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutBlock"*, align 8
  %3 = alloca i64, align 8
  %4 = bitcast i64* %3 to %"class.blink::LayoutSize"*
  %5 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !5
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %29, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %10 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %9 to i96*
  %11 = load i96, i96* %10, align 4
  %12 = and i96 %11, 16777216
  %13 = icmp eq i96 %12, 0
  br i1 %13, label %14, label %29

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %29, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = and i32 %20, 67108876
  %22 = icmp eq i32 %21, 67108864
  br i1 %22, label %23, label %29, !prof !6

23:                                               ; preds = %18
  %24 = bitcast %"class.blink::Node"* %16 to %"class.blink::Element"*
  %25 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %24) #15
  %26 = icmp eq %"class.blink::DisplayLockContext"* %25, null
  br i1 %26, label %29, label %27

27:                                               ; preds = %23
  %28 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %25) #15
  br i1 %28, label %29, label %79

29:                                               ; preds = %27, %8, %14, %18, %1, %23
  %30 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 2
  %31 = load i16, i16* %30, align 8
  %32 = trunc i16 %31 to i8
  %33 = icmp slt i8 %32, 0
  br i1 %33, label %34, label %79, !prof !4

34:                                               ; preds = %29
  %35 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map to i8*) acquire, align 8
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %41, !prof !2

37:                                               ; preds = %34
  %38 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %41, label %40

40:                                               ; preds = %37
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  br label %41

41:                                               ; preds = %34, %37, %40
  %42 = bitcast %"class.blink::LayoutBlock"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #15
  store %"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBlock"** %2, align 8
  %43 = call %"class.WTF::ListHashSet.3211"* @_ZNK3WTF7HashMapIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS8_EENS_28MallocedListHashSetAllocatorIS9_Lj16EEEEENS5_14default_deleteISE_EEEENSA_IS3_EENS_10HashTraitsIS4_EENSJ_ISH_EENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.3191"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map to %"class.WTF::HashMap.3191"*), %"class.blink::LayoutBlock"** nonnull dereferenceable(8) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #15
  %44 = icmp eq %"class.WTF::ListHashSet.3211"* %43, null
  br i1 %44, label %79, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %43, i64 0, i32 1
  %47 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %46, align 8
  %48 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %47, null
  br i1 %48, label %79, label %49

49:                                               ; preds = %45
  %50 = icmp eq %"class.blink::LayoutBlock"* %0, null
  %51 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %52 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %53 = bitcast i64* %3 to i8*
  br label %54

54:                                               ; preds = %49, %75
  %55 = phi %"class.WTF::MallocedListHashSetNode.3217"* [ %47, %49 ], [ %77, %75 ]
  %56 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %55, i64 0, i32 0
  %57 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %56, align 8
  br i1 %50, label %71, label %58

58:                                               ; preds = %54
  %59 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %51, align 8
  %60 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %59, i64 92
  %61 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %60, align 8
  %62 = call zeroext i1 %61(%"class.blink::LayoutObject"* %5, i32 55) #15
  br i1 %62, label %63, label %71

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %57, i64 0, i32 0, i32 0, i32 5, i32 0
  %65 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %65, i64 0, i32 0, i32 9
  %67 = bitcast [20 x i8]* %66 to i160*
  %68 = load i160, i160* %67, align 8
  %69 = and i160 %68, 8462480737302404222943232
  %70 = icmp eq i160 %69, 1208925819614629174706176
  br i1 %70, label %75, label %71

71:                                               ; preds = %54, %63, %58
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #15
  %72 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %57, i64 0, i32 2
  %73 = bitcast %"class.blink::LayoutRect"* %72 to i64*
  %74 = load i64, i64* %73, align 4
  store i64 %74, i64* %3, align 8
  call void @_ZN5blink9LayoutBox26AddLayoutOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"* %52, %"class.blink::LayoutBox"* dereferenceable(216) %57, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #15
  br label %75

75:                                               ; preds = %63, %71
  %76 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %55, i64 0, i32 2
  %77 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %76, align 8
  %78 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %77, null
  br i1 %78, label %79, label %54

79:                                               ; preds = %75, %45, %27, %29, %41
  ret void
}

declare { i64, i64 } @_ZNK5blink9LayoutBox14NoOverflowRectEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare void @_ZN5blink9LayoutBox17AddLayoutOverflowERKNS_10LayoutRectE(%"class.blink::LayoutBox"*, %"class.blink::LayoutRect"* dereferenceable(16)) local_unnamed_addr #3

declare void @_ZN5blink9LayoutBox24SetLayoutClientAfterEdgeENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock34AddVisualOverflowFromBlockChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = bitcast %"class.blink::LayoutBlock"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %6 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %6, i64 13
  %8 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %7, align 8
  %9 = tail call %"class.blink::LayoutObjectChildList"* %8(%"class.blink::LayoutObject"* %4) #15
  %10 = icmp eq %"class.blink::LayoutObjectChildList"* %9, null
  br i1 %10, label %19, label %11

11:                                               ; preds = %1
  %12 = bitcast %"class.blink::LayoutObjectChildList"* %9 to %"class.blink::LayoutBox"**
  %13 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %12, align 8
  %14 = icmp eq %"class.blink::LayoutBox"* %13, null
  br i1 %14, label %19, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %17 = bitcast i64* %2 to %"class.blink::LayoutSize"*
  %18 = bitcast i64* %2 to i8*
  br label %20

19:                                               ; preds = %96, %1, %11
  ret void

20:                                               ; preds = %15, %96
  %21 = phi %"class.blink::LayoutBox"* [ %13, %15 ], [ %99, %96 ]
  %22 = bitcast %"class.blink::LayoutBox"* %21 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %23 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %16, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %23, i64 25
  %25 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %24, align 8
  %26 = call zeroext i1 %25(%"class.blink::LayoutObject"* %4) #15
  br i1 %26, label %27, label %29, !prof !4

27:                                               ; preds = %20
  %28 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %4, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #15
  br label %29

29:                                               ; preds = %27, %20
  %30 = phi %"class.blink::LayoutBlock"* [ %28, %27 ], [ %0, %20 ]
  %31 = icmp eq %"class.blink::LayoutBlock"* %30, null
  br i1 %31, label %43, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %30, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.blink::LayoutBlock"* %30 to i1 (%"class.blink::LayoutObject"*, i32)***
  %35 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %34, align 8
  %36 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %35, i64 92
  %37 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %36, align 8
  %38 = call zeroext i1 %37(%"class.blink::LayoutObject"* %33, i32 30) #15
  br i1 %38, label %39, label %43

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %21, i64 0, i32 0, i32 0, i32 4
  %41 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %40 to i96*
  %42 = load i96, i96* %41, align 4
  br label %49

43:                                               ; preds = %29, %32
  %44 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %21, i64 0, i32 0, i32 0, i32 4
  %45 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %44 to i96*
  %46 = load i96, i96* %45, align 4
  %47 = and i96 %46, 8388608
  %48 = icmp eq i96 %47, 0
  br i1 %48, label %49, label %96

49:                                               ; preds = %39, %43
  %50 = phi i96* [ %41, %39 ], [ %45, %43 ]
  %51 = phi i96 [ %42, %39 ], [ %46, %43 ]
  %52 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %21, i64 0, i32 0, i32 0
  %53 = and i96 %51, 113336795588871485128704
  %54 = icmp eq i96 %53, 75557863725914323419136
  br i1 %54, label %96, label %55

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %21, i64 0, i32 0, i32 0, i32 5, i32 0
  %57 = bitcast %"class.blink::ComputedStyle"** %56 to %"class.blink::ComputedStyleBase"**
  %58 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %58, i64 0, i32 3, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %60, i64 0, i32 2, i32 0, i32 0
  %62 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %62, i64 0, i32 2, i32 0, i32 0
  %64 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %64, i64 0, i32 45
  %66 = load i32, i32* %65, align 4
  %67 = and i32 %66, 536870912
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %75, label %69

69:                                               ; preds = %55
  %70 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %22, align 8
  %71 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %70, i64 44
  %72 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %71, align 8
  %73 = call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %72(%"class.blink::LayoutObject"* %52) #15
  %74 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %73, null
  br i1 %74, label %75, label %96

75:                                               ; preds = %69, %55
  %76 = bitcast %"class.blink::LayoutBox"* %21 to i1 (%"class.blink::LayoutObject"*)***
  %77 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %76, align 8
  %78 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %77, i64 24
  %79 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %78, align 8
  %80 = call zeroext i1 %79(%"class.blink::LayoutObject"* %52) #15
  %81 = bitcast %"class.blink::LayoutBox"* %21 to %"class.blink::LayoutBlockFlow"*
  br i1 %80, label %82, label %87

82:                                               ; preds = %75
  %83 = load i96, i96* %50, align 4
  %84 = and i96 %83, 35184372088832
  %85 = icmp eq i96 %84, 0
  br i1 %85, label %87, label %86

86:                                               ; preds = %82
  call void @_ZN5blink15LayoutBlockFlow35AddVisualOverflowFromInlineChildrenEv(%"class.blink::LayoutBlockFlow"* nonnull %81) #15
  br label %87

87:                                               ; preds = %82, %75, %86
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #15
  %88 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %21, i64 0, i32 2, i32 0, i32 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %21, i64 0, i32 2, i32 0, i32 1, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = zext i32 %91 to i64
  %93 = shl nuw i64 %92, 32
  %94 = zext i32 %89 to i64
  %95 = or i64 %93, %94
  store i64 %95, i64* %2, align 8
  call void @_ZN5blink9LayoutBox26AddVisualOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"* %3, %"class.blink::LayoutBox"* nonnull dereferenceable(216) %21, %"class.blink::LayoutSize"* nonnull dereferenceable(8) %17) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #15
  br label %96

96:                                               ; preds = %69, %43, %49, %87
  %97 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %21, i64 0, i32 0, i32 0, i32 9
  %98 = bitcast %"class.blink::LayoutObject"** %97 to %"class.blink::LayoutBox"**
  %99 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %98, align 8
  %100 = icmp eq %"class.blink::LayoutBox"* %99, null
  br i1 %100, label %19, label %20
}

declare void @_ZN5blink9LayoutBox26AddLayoutOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::LayoutSize"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock37UpdateBlockChildDirtyBitsBeforeLayoutEbRNS_9LayoutBoxE(%"class.blink::LayoutBlock"*, i1 zeroext, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 113336795588871485128704
  %10 = icmp eq i96 %9, 75557863725914323419136
  br i1 %10, label %124, label %11

11:                                               ; preds = %3
  %12 = tail call zeroext i1 @_ZNK5blink9LayoutBox24HasRelativeLogicalHeightEv(%"class.blink::LayoutBox"* %2) #15
  br i1 %12, label %42, label %13

13:                                               ; preds = %11
  %14 = load i96, i96* %7, align 4
  %15 = and i96 %14, 16777216
  %16 = icmp eq i96 %15, 0
  br i1 %16, label %20, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %19 = tail call zeroext i1 @_ZNK5blink9LayoutBox24HasRelativeLogicalHeightEv(%"class.blink::LayoutBox"* %18) #15
  br i1 %19, label %42, label %20

20:                                               ; preds = %13, %17
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %22 = load %"class.blink::Node"*, %"class.blink::Node"** %21, align 8
  %23 = icmp eq %"class.blink::Node"* %22, null
  br i1 %23, label %24, label %31

24:                                               ; preds = %20, %24
  %25 = phi %"class.blink::LayoutObject"* [ %27, %24 ], [ %5, %20 ]
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 7
  %27 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %27, i64 0, i32 6, i32 0, i32 0
  %29 = load %"class.blink::Node"*, %"class.blink::Node"** %28, align 8
  %30 = icmp eq %"class.blink::Node"* %29, null
  br i1 %30, label %24, label %31

31:                                               ; preds = %24, %20
  %32 = phi %"class.blink::Node"* [ %22, %20 ], [ %29, %24 ]
  %33 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %32, i64 0, i32 3, i32 0, i32 0
  %34 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %34, i64 0, i32 2, i32 0, i32 0
  %36 = load %"class.blink::Document"*, %"class.blink::Document"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %36, i64 0, i32 33
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %31
  %41 = tail call zeroext i1 @_ZNK5blink9LayoutBox31StretchesToViewportInQuirksModeEv(%"class.blink::LayoutBox"* %2) #15
  br label %42

42:                                               ; preds = %40, %31, %17, %11
  %43 = phi i1 [ true, %17 ], [ true, %11 ], [ false, %31 ], [ %41, %40 ]
  br i1 %1, label %112, label %44

44:                                               ; preds = %42
  br i1 %43, label %45, label %53

45:                                               ; preds = %44
  %46 = icmp eq %"class.blink::LayoutBlock"* %0, null
  br i1 %46, label %112, label %47

47:                                               ; preds = %45
  %48 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %49 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %48, align 8
  %50 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %49, i64 92
  %51 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %50, align 8
  %52 = tail call zeroext i1 %51(%"class.blink::LayoutObject"* %4, i32 55) #15
  br i1 %52, label %53, label %112

53:                                               ; preds = %47, %44
  %54 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 2
  %55 = load i16, i16* %54, align 8
  %56 = and i16 %55, 16
  %57 = icmp eq i16 %56, 0
  br i1 %57, label %81, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %60 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %60, i64 0, i32 0, i32 5, i32 0, i32 0
  %62 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %61, align 8
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %62, i64 0, i32 11
  %64 = load i8, i8* %63, align 4
  %65 = and i8 %64, 2
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %81

67:                                               ; preds = %58
  %68 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %60, i64 0, i32 0, i32 9
  %69 = bitcast [20 x i8]* %68 to i160*
  %70 = load i160, i160* %69, align 8
  %71 = and i160 %70, 15211807202738752817960438464512
  %72 = icmp eq i160 %71, 0
  br i1 %72, label %73, label %81

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %2, i64 0, i32 0, i32 0, i32 5, i32 0
  %75 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %75, i64 0, i32 0, i32 9
  %77 = bitcast [20 x i8]* %76 to i160*
  %78 = load i160, i160* %77, align 8
  %79 = and i160 %78, 15211807202738752817960438464512
  %80 = icmp eq i160 %79, 0
  br i1 %80, label %81, label %112

81:                                               ; preds = %73, %67, %58, %53
  %82 = bitcast %"class.blink::LayoutBox"* %2 to i1 (%"class.blink::LayoutObject"*, i32)***
  %83 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %82, align 8
  %84 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %83, i64 92
  %85 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %84, align 8
  %86 = tail call zeroext i1 %85(%"class.blink::LayoutObject"* %5, i32 15) #15
  br i1 %86, label %97, label %87

87:                                               ; preds = %81
  %88 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %82, align 8
  %89 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %88, i64 92
  %90 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %89, align 8
  %91 = tail call zeroext i1 %90(%"class.blink::LayoutObject"* %5, i32 13) #15
  br i1 %91, label %97, label %92

92:                                               ; preds = %87
  %93 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %82, align 8
  %94 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %93, i64 92
  %95 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %94, align 8
  %96 = tail call zeroext i1 %95(%"class.blink::LayoutObject"* %5, i32 36) #15
  br i1 %96, label %97, label %124

97:                                               ; preds = %81, %87, %92
  %98 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %99 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %98, align 8
  %100 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %99, i64 92
  %101 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %100, align 8
  %102 = tail call zeroext i1 %101(%"class.blink::LayoutObject"* %4, i32 14) #15
  br i1 %102, label %103, label %124

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 1, i32 0, i32 0, i32 0, i32 5
  %105 = bitcast %class.scoped_refptr* %104 to %"class.blink::FloatingObjects"**
  %106 = load %"class.blink::FloatingObjects"*, %"class.blink::FloatingObjects"** %105, align 8
  %107 = icmp eq %"class.blink::FloatingObjects"* %106, null
  br i1 %107, label %124, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.blink::FloatingObjects", %"class.blink::FloatingObjects"* %106, i64 0, i32 0, i32 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %124, label %112

112:                                              ; preds = %73, %108, %45, %47, %42
  %113 = bitcast %"class.blink::LayoutBox"* %2 to i1 (%"class.blink::LayoutObject"*, i32)***
  %114 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %113, align 8
  %115 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %114, i64 92
  %116 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %115, align 8
  %117 = tail call zeroext i1 %116(%"class.blink::LayoutObject"* %5, i32 30) #15
  br i1 %117, label %118, label %121

118:                                              ; preds = %112
  %119 = load i96, i96* %7, align 4
  %120 = or i96 %119, 2
  store i96 %120, i96* %7, align 4
  tail call void @_ZN5blink12LayoutObject44MarkSelfPaintingLayerForVisualOverflowRecalcEv(%"class.blink::LayoutObject"* %5) #15
  br label %124

121:                                              ; preds = %112
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %5, i32 1) #15
  %122 = load i96, i96* %7, align 4
  %123 = or i96 %122, 1180591620717411303432
  store i96 %123, i96* %7, align 4
  br label %124

124:                                              ; preds = %108, %103, %92, %97, %121, %118, %3
  ret void
}

declare zeroext i1 @_ZNK5blink9LayoutBox24HasRelativeLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock26SimplifiedNormalFlowLayoutEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 17592186044416
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::LayoutBlock"* %0 to %"class.blink::LayoutBlockFlow"*
  tail call void @_ZN5blink15LayoutBlockFlow32SimplifiedNormalFlowInlineLayoutEv(%"class.blink::LayoutBlockFlow"* %8) #15
  br label %61

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %11 = bitcast %"class.blink::LayoutBlock"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %12 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %12, i64 13
  %14 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %13, align 8
  %15 = tail call %"class.blink::LayoutObjectChildList"* %14(%"class.blink::LayoutObject"* %10) #15
  %16 = icmp eq %"class.blink::LayoutObjectChildList"* %15, null
  br i1 %16, label %61, label %17

17:                                               ; preds = %9
  %18 = bitcast %"class.blink::LayoutObjectChildList"* %15 to %"class.blink::LayoutBox"**
  %19 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %18, align 8
  %20 = icmp eq %"class.blink::LayoutBox"* %19, null
  br i1 %20, label %61, label %21

21:                                               ; preds = %17, %56
  %22 = phi %"class.blink::LayoutBox"* [ %59, %56 ], [ %19, %17 ]
  %23 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %22, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %22, i64 0, i32 0, i32 0, i32 4
  %25 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %24 to i96*
  %26 = load i96, i96* %25, align 4
  %27 = and i96 %26, 113336795588871485128704
  %28 = icmp eq i96 %27, 75557863725914323419136
  br i1 %28, label %56, label %29

29:                                               ; preds = %21
  %30 = bitcast %"class.blink::LayoutBox"* %22 to i1 (%"class.blink::LayoutObject"*, i32)***
  %31 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %31, i64 92
  %33 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::LayoutObject"* %23, i32 21) #15
  br i1 %34, label %35, label %47

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %22, i64 1
  %37 = bitcast %"class.blink::LayoutBox"* %36 to %"class.blink::LayoutObject"**
  %38 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %37, align 8
  %39 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %38, i64 0, i32 4
  %40 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %39 to i96*
  %41 = load i96, i96* %40, align 4
  %42 = and i96 %41, 63
  %43 = icmp eq i96 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %35
  tail call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %23, i32 1) #15
  %45 = load i96, i96* %25, align 4
  %46 = or i96 %45, 1180591620717411303432
  store i96 %46, i96* %25, align 4
  br label %47

47:                                               ; preds = %44, %35, %29
  %48 = load i96, i96* %25, align 4
  %49 = and i96 %48, 63
  %50 = icmp eq i96 %49, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.blink::LayoutBox"* %22 to void (%"class.blink::LayoutObject"*)***
  %53 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %53, i64 54
  %55 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %54, align 8
  tail call void %55(%"class.blink::LayoutObject"* %23) #15
  br label %56

56:                                               ; preds = %51, %47, %21
  %57 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %22, i64 0, i32 0, i32 0, i32 9
  %58 = bitcast %"class.blink::LayoutObject"** %57 to %"class.blink::LayoutBox"**
  %59 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %58, align 8
  %60 = icmp eq %"class.blink::LayoutBox"* %59, null
  br i1 %60, label %61, label %21

61:                                               ; preds = %56, %9, %17, %7
  ret void
}

declare void @_ZN5blink15LayoutBlockFlow32SimplifiedNormalFlowInlineLayoutEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11LayoutBlock16SimplifiedLayoutEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutState", align 8
  %3 = alloca %"class.blink::TextAutosizer::LayoutScope", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 11
  %9 = icmp ne i96 %8, 0
  %10 = and i96 %7, 52
  %11 = icmp eq i96 %10, 0
  %12 = or i1 %9, %11
  br i1 %12, label %139, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %2, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %14) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 56, i1 false)
  %15 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  call void @_ZN5blink11LayoutStateC1ERNS_9LayoutBoxEb(%"class.blink::LayoutState"* nonnull %2, %"class.blink::LayoutBox"* dereferenceable(216) %15, i1 zeroext false) #15
  %16 = load i96, i96* %6, align 4
  %17 = and i96 %16, 4
  %18 = icmp eq i96 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %13
  %20 = call zeroext i1 @_ZN5blink11LayoutBlock36TryLayoutDoingPositionedMovementOnlyEv(%"class.blink::LayoutBlock"* %0)
  br i1 %20, label %21, label %117

21:                                               ; preds = %19
  %22 = load i96, i96* %6, align 4
  br label %23

23:                                               ; preds = %21, %13
  %24 = phi i96 [ %22, %21 ], [ %16, %13 ]
  %25 = and i96 %24, 1099511627776
  %26 = icmp eq i96 %25, 0
  br i1 %26, label %36, label %27

27:                                               ; preds = %23
  %28 = call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %4) #15
  %29 = icmp eq %"class.blink::LayoutFlowThread"* %28, null
  br i1 %29, label %36, label %30

30:                                               ; preds = %27
  %31 = bitcast %"class.blink::LayoutFlowThread"* %28 to i1 (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*)***
  %32 = load i1 (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*)** %32, i64 229
  %34 = load i1 (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutFlowThread"*, %"class.blink::LayoutBox"*)** %33, align 8
  %35 = call zeroext i1 %34(%"class.blink::LayoutFlowThread"* nonnull %28, %"class.blink::LayoutBox"* dereferenceable(216) %15) #15
  br i1 %35, label %36, label %117

36:                                               ; preds = %23, %30, %27
  %37 = icmp eq %"class.blink::LayoutBlock"* %0, null
  br i1 %37, label %53, label %38

38:                                               ; preds = %36
  %39 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %40 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %40, i64 24
  %42 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %41, align 8
  %43 = call zeroext i1 %42(%"class.blink::LayoutObject"* %4) #15
  br i1 %43, label %44, label %53

44:                                               ; preds = %38
  %45 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 1, i32 0, i32 0, i32 0, i32 1, i32 1
  %46 = bitcast i8* %45 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"**
  %47 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %46, align 8
  %48 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %47, null
  br i1 %48, label %53, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %47, i64 0, i32 3
  %51 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %50, align 8
  %52 = icmp eq %"class.blink::LayoutMultiColumnFlowThread"* %51, null
  br i1 %52, label %53, label %117

53:                                               ; preds = %38, %44, %36, %49
  %54 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !5
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %75, label %56

56:                                               ; preds = %53
  %57 = load i96, i96* %6, align 4
  %58 = and i96 %57, 16777216
  %59 = icmp eq i96 %58, 0
  br i1 %59, label %60, label %75

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %62 = load %"class.blink::Node"*, %"class.blink::Node"** %61, align 8
  %63 = icmp eq %"class.blink::Node"* %62, null
  br i1 %63, label %75, label %64

64:                                               ; preds = %60
  %65 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %62, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, 67108876
  %68 = icmp eq i32 %67, 67108864
  br i1 %68, label %69, label %75, !prof !6

69:                                               ; preds = %64
  %70 = bitcast %"class.blink::Node"* %62 to %"class.blink::Element"*
  %71 = call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %70) #15
  %72 = icmp eq %"class.blink::DisplayLockContext"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %69
  %74 = call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %71) #15
  br i1 %74, label %75, label %117

75:                                               ; preds = %73, %56, %60, %64, %53, %69
  %76 = bitcast %"class.blink::TextAutosizer::LayoutScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %76) #15
  %77 = bitcast %"class.blink::TextAutosizer::LayoutScope"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %77, i8 -86, i64 16, i1 false)
  call void @_ZN5blink13TextAutosizer11LayoutScopeC1EPNS_11LayoutBlockEPNS_18SubtreeLayoutScopeE(%"class.blink::TextAutosizer::LayoutScope"* nonnull %3, %"class.blink::LayoutBlock"* %0, %"class.blink::SubtreeLayoutScope"* null) #15
  %78 = load i96, i96* %6, align 4
  %79 = and i96 %78, 32
  %80 = icmp eq i96 %79, 0
  br i1 %80, label %87, label %81

81:                                               ; preds = %75
  %82 = bitcast %"class.blink::LayoutBlock"* %0 to void (%"class.blink::LayoutBlock"*)***
  %83 = load void (%"class.blink::LayoutBlock"*)**, void (%"class.blink::LayoutBlock"*)*** %82, align 8
  %84 = getelementptr inbounds void (%"class.blink::LayoutBlock"*)*, void (%"class.blink::LayoutBlock"*)** %83, i64 205
  %85 = load void (%"class.blink::LayoutBlock"*)*, void (%"class.blink::LayoutBlock"*)** %84, align 8
  call void %85(%"class.blink::LayoutBlock"* %0) #15
  %86 = load i96, i96* %6, align 4
  br label %87

87:                                               ; preds = %75, %81
  %88 = phi i96 [ %78, %75 ], [ %86, %81 ]
  %89 = and i96 %88, 68719476756
  %90 = icmp eq i96 %89, 0
  br i1 %90, label %104, label %91

91:                                               ; preds = %87
  %92 = and i96 %88, 4
  %93 = icmp eq i96 %92, 0
  br i1 %93, label %94, label %98

94:                                               ; preds = %91
  %95 = and i96 %88, 68719476752
  %96 = icmp eq i96 %95, 68719476736
  %97 = zext i1 %96 to i32
  br label %98

98:                                               ; preds = %91, %94
  %99 = phi i32 [ %97, %94 ], [ 2, %91 ]
  %100 = bitcast %"class.blink::LayoutBlock"* %0 to void (%"class.blink::LayoutBlock"*, i1, i32)***
  %101 = load void (%"class.blink::LayoutBlock"*, i1, i32)**, void (%"class.blink::LayoutBlock"*, i1, i32)*** %100, align 8
  %102 = getelementptr inbounds void (%"class.blink::LayoutBlock"*, i1, i32)*, void (%"class.blink::LayoutBlock"*, i1, i32)** %101, i64 199
  %103 = load void (%"class.blink::LayoutBlock"*, i1, i32)*, void (%"class.blink::LayoutBlock"*, i1, i32)** %102, align 8
  call void %103(%"class.blink::LayoutBlock"* %0, i1 zeroext false, i32 %99) #15
  br label %104

104:                                              ; preds = %87, %98
  %105 = call i32 @_ZNK5blink9LayoutBox21LayoutClientAfterEdgeEv(%"class.blink::LayoutBox"* %15) #15
  %106 = bitcast %"class.blink::LayoutBlock"* %0 to void (%"class.blink::LayoutBlock"*, i32, i1)***
  %107 = load void (%"class.blink::LayoutBlock"*, i32, i1)**, void (%"class.blink::LayoutBlock"*, i32, i1)*** %106, align 8
  %108 = getelementptr inbounds void (%"class.blink::LayoutBlock"*, i32, i1)*, void (%"class.blink::LayoutBlock"*, i32, i1)** %107, i64 207
  %109 = load void (%"class.blink::LayoutBlock"*, i32, i1)*, void (%"class.blink::LayoutBlock"*, i32, i1)** %108, align 8
  call void %109(%"class.blink::LayoutBlock"* %0, i32 %105, i1 zeroext true) #15
  call void @_ZN5blink13TextAutosizer11LayoutScopeD1Ev(%"class.blink::TextAutosizer::LayoutScope"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %76) #15
  call void @_ZN5blink11LayoutStateD1Ev(%"class.blink::LayoutState"* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #15
  %110 = bitcast %"class.blink::LayoutBlock"* %0 to void (%"class.blink::LayoutBlock"*)***
  %111 = load void (%"class.blink::LayoutBlock"*)**, void (%"class.blink::LayoutBlock"*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.blink::LayoutBlock"*)*, void (%"class.blink::LayoutBlock"*)** %111, i64 151
  %113 = load void (%"class.blink::LayoutBlock"*)*, void (%"class.blink::LayoutBlock"*)** %112, align 8
  call void %113(%"class.blink::LayoutBlock"* %0) #15
  call void @_ZN5blink12LayoutObject16ClearNeedsLayoutEv(%"class.blink::LayoutObject"* %4)
  %114 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %115 = load %"class.blink::Node"*, %"class.blink::Node"** %114, align 8
  %116 = icmp eq %"class.blink::Node"* %115, null
  br i1 %116, label %118, label %125

117:                                              ; preds = %73, %49, %30, %19
  call void @_ZN5blink11LayoutStateD1Ev(%"class.blink::LayoutState"* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %14) #15
  br label %139

118:                                              ; preds = %104, %118
  %119 = phi %"class.blink::LayoutObject"* [ %121, %118 ], [ %4, %104 ]
  %120 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %119, i64 0, i32 7
  %121 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %121, i64 0, i32 6, i32 0, i32 0
  %123 = load %"class.blink::Node"*, %"class.blink::Node"** %122, align 8
  %124 = icmp eq %"class.blink::Node"* %123, null
  br i1 %124, label %118, label %125

125:                                              ; preds = %118, %104
  %126 = phi %"class.blink::Node"* [ %115, %104 ], [ %123, %118 ]
  %127 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %126, i64 0, i32 3, i32 0, i32 0
  %128 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %127, align 8
  %129 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %128, i64 0, i32 2, i32 0, i32 0
  %130 = load %"class.blink::Document"*, %"class.blink::Document"** %129, align 8
  %131 = call %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"* %130) #15
  %132 = getelementptr inbounds %"class.blink::LocalFrameView", %"class.blink::LocalFrameView"* %131, i64 0, i32 40, i32 0, i32 0, i32 0
  %133 = load %"class.blink::LayoutAnalyzer"*, %"class.blink::LayoutAnalyzer"** %132, align 8
  %134 = icmp eq %"class.blink::LayoutAnalyzer"* %133, null
  br i1 %134, label %139, label %135

135:                                              ; preds = %125
  %136 = getelementptr inbounds %"class.blink::LayoutAnalyzer", %"class.blink::LayoutAnalyzer"* %133, i64 0, i32 1, i64 14
  %137 = load i32, i32* %136, align 4
  %138 = add i32 %137, 1
  store i32 %138, i32* %136, align 4
  br label %139

139:                                              ; preds = %117, %1, %135, %125
  %140 = phi i1 [ false, %117 ], [ false, %1 ], [ true, %125 ], [ true, %135 ]
  ret i1 %140
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN5blink11LayoutStateC1ERNS_9LayoutBoxEb(%"class.blink::LayoutState"*, %"class.blink::LayoutBox"* dereferenceable(216), i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11LayoutBlock36TryLayoutDoingPositionedMovementOnlyEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.blink::LayoutBox::LogicalExtentComputedValues", align 4
  %3 = alloca %"class.blink::LayoutUnit", align 4
  %4 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 9
  %9 = bitcast [20 x i8]* %8 to i160*
  %10 = load i160, i160* %9, align 8
  %11 = and i160 %10, 15211807202738752817960438464512
  %12 = icmp eq i160 %11, 0
  %13 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %14 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %15 = select i1 %12, i32* %13, i32* %14
  %16 = load i32, i32* %15, align 4
  %17 = bitcast %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #15
  %18 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2, i64 0, i32 1, i32 0
  %20 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2, i64 0, i32 2, i32 0, i32 0
  %21 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2, i64 0, i32 2, i32 1, i32 0
  %22 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2, i64 0, i32 2, i32 2, i32 0
  %23 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %2, i64 0, i32 2, i32 3, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %17, i8 0, i64 24, i1 false) #15
  %24 = bitcast %"class.blink::LayoutUnit"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %24) #15
  %25 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 2, i32 0, i32 1, i32 0
  %26 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 2, i32 0, i32 0, i32 0
  %27 = select i1 %12, i32* %25, i32* %26
  %28 = load i32, i32* %27, align 4
  %29 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  store i32 %28, i32* %29, align 4
  call void @_ZN5blink9LayoutBox38LogicalExtentAfterUpdatingLogicalWidthERKNS_10LayoutUnitERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"* %5, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %3, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %24) #15
  %30 = load i32, i32* %18, align 4
  %31 = icmp eq i32 %16, %30
  br i1 %31, label %32, label %263

32:                                               ; preds = %1
  %33 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %33, i64 0, i32 0, i32 9
  %35 = bitcast [20 x i8]* %34 to i160*
  %36 = load i160, i160* %35, align 8
  %37 = and i160 %36, 15211807202738752817960438464512
  %38 = icmp eq i160 %37, 0
  br i1 %38, label %39, label %43

39:                                               ; preds = %32
  %40 = load i32, i32* %13, align 4
  %41 = icmp eq i32 %40, %16
  br i1 %41, label %47, label %42

42:                                               ; preds = %39
  store i32 %16, i32* %13, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %5) #15
  br label %47

43:                                               ; preds = %32
  %44 = load i32, i32* %14, align 4
  %45 = icmp eq i32 %44, %16
  br i1 %45, label %47, label %46

46:                                               ; preds = %43
  store i32 %16, i32* %14, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %5) #15
  br label %47

47:                                               ; preds = %39, %42, %43, %46
  %48 = load i32, i32* %19, align 4
  %49 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %50 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %49, i64 0, i32 0, i32 9
  %51 = bitcast [20 x i8]* %50 to i160*
  %52 = load i160, i160* %51, align 8
  %53 = and i160 %52, 15211807202738752817960438464512
  %54 = icmp eq i160 %53, 0
  br i1 %54, label %55, label %59

55:                                               ; preds = %47
  %56 = load i32, i32* %26, align 4
  %57 = icmp eq i32 %56, %48
  br i1 %57, label %63, label %58

58:                                               ; preds = %55
  store i32 %48, i32* %26, align 4
  call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %5) #15
  br label %63

59:                                               ; preds = %47
  %60 = load i32, i32* %25, align 4
  %61 = icmp eq i32 %60, %48
  br i1 %61, label %63, label %62

62:                                               ; preds = %59
  store i32 %48, i32* %25, align 4
  call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %5) #15
  br label %63

63:                                               ; preds = %55, %58, %59, %62
  %64 = load i32, i32* %22, align 4
  %65 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %66 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %65, i64 0, i32 0, i32 9
  %67 = bitcast [20 x i8]* %66 to i160*
  %68 = load i160, i160* %67, align 8, !noalias !10
  %69 = bitcast %"class.blink::LayoutBlock"* %0 to i8*
  %70 = and i160 %68, 15211807202738752817960438464512
  %71 = icmp eq i160 %70, 0
  %72 = and i160 %68, 41538374868278621028243970633760768
  %73 = icmp eq i160 %72, 0
  %74 = select i1 %73, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE to i64), i64 0 }
  %75 = select i1 %73, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE to i64), i64 0 }
  %76 = select i1 %71, { i64, i64 } %75, { i64, i64 } %74
  %77 = select i1 %71, { i64, i64 } %75, { i64, i64 } %74
  %78 = extractvalue { i64, i64 } %76, 0
  %79 = extractvalue { i64, i64 } %77, 1
  %80 = getelementptr inbounds i8, i8* %69, i64 %79
  %81 = bitcast i8* %80 to %"class.blink::LayoutBox"*
  %82 = and i64 %78, 1
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %91, label %84

84:                                               ; preds = %63
  %85 = bitcast i8* %80 to i8**
  %86 = load i8*, i8** %85, align 8
  %87 = add i64 %78, -1
  %88 = getelementptr i8, i8* %86, i64 %87
  %89 = bitcast i8* %88 to void (%"class.blink::LayoutBox"*, i32)**
  %90 = load void (%"class.blink::LayoutBox"*, i32)*, void (%"class.blink::LayoutBox"*, i32)** %89, align 8
  br label %93

91:                                               ; preds = %63
  %92 = inttoptr i64 %78 to void (%"class.blink::LayoutBox"*, i32)*
  br label %93

93:                                               ; preds = %84, %91
  %94 = phi void (%"class.blink::LayoutBox"*, i32)* [ %90, %84 ], [ %92, %91 ]
  call void %94(%"class.blink::LayoutBox"* %81, i32 %64) #15
  %95 = load i32, i32* %23, align 4
  %96 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %97 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %96, i64 0, i32 0, i32 9
  %98 = bitcast [20 x i8]* %97 to i160*
  %99 = load i160, i160* %98, align 8, !noalias !13
  %100 = and i160 %99, 15211807202738752817960438464512
  %101 = icmp eq i160 %100, 0
  %102 = and i160 %99, 41538374868278621028243970633760768
  %103 = icmp eq i160 %102, 0
  %104 = select i1 %103, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE to i64), i64 0 }
  %105 = select i1 %103, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE to i64), i64 0 }, { i64, i64 } { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE to i64), i64 0 }
  %106 = select i1 %101, { i64, i64 } %105, { i64, i64 } %104
  %107 = select i1 %101, { i64, i64 } %105, { i64, i64 } %104
  %108 = extractvalue { i64, i64 } %106, 0
  %109 = extractvalue { i64, i64 } %107, 1
  %110 = getelementptr inbounds i8, i8* %69, i64 %109
  %111 = bitcast i8* %110 to %"class.blink::LayoutBox"*
  %112 = and i64 %108, 1
  %113 = icmp eq i64 %112, 0
  br i1 %113, label %121, label %114

114:                                              ; preds = %93
  %115 = bitcast i8* %110 to i8**
  %116 = load i8*, i8** %115, align 8
  %117 = add i64 %108, -1
  %118 = getelementptr i8, i8* %116, i64 %117
  %119 = bitcast i8* %118 to void (%"class.blink::LayoutBox"*, i32)**
  %120 = load void (%"class.blink::LayoutBox"*, i32)*, void (%"class.blink::LayoutBox"*, i32)** %119, align 8
  br label %123

121:                                              ; preds = %93
  %122 = inttoptr i64 %108 to void (%"class.blink::LayoutBox"*, i32)*
  br label %123

123:                                              ; preds = %114, %121
  %124 = phi void (%"class.blink::LayoutBox"*, i32)* [ %120, %114 ], [ %122, %121 ]
  call void %124(%"class.blink::LayoutBox"* %111, i32 %95) #15
  %125 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %126 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %125, i64 0, i32 0, i32 9
  %127 = bitcast [20 x i8]* %126 to i160*
  %128 = load i160, i160* %127, align 8
  %129 = and i160 %128, 15211807202738752817960438464512
  %130 = icmp eq i160 %129, 0
  %131 = select i1 %130, i32* %14, i32* %13
  %132 = load i32, i32* %131, align 4
  %133 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %134 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %133, align 8
  %135 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %134, i64 166
  %136 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %135, align 8
  %137 = call i32 %136(%"class.blink::LayoutBox"* %5) #15
  %138 = call i32 @_ZNK5blink9LayoutBox20ContentLogicalHeightEv(%"class.blink::LayoutBox"* %5)
  %139 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 4, i32 0
  store i32 %138, i32* %139, align 8
  %140 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %141 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %140, i64 0, i32 0, i32 9
  %142 = bitcast [20 x i8]* %141 to i160*
  %143 = load i160, i160* %142, align 8
  %144 = and i160 %143, 15211807202738752817960438464512
  %145 = icmp eq i160 %144, 0
  %146 = select i1 %145, i32* %25, i32* %26
  %147 = load i32, i32* %146, align 4
  %148 = bitcast %"class.blink::LayoutBlock"* %0 to void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)***
  %149 = load void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)**, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*** %148, align 8
  %150 = getelementptr inbounds void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %149, i64 164
  %151 = load void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %150, align 8
  call void %151(%"class.blink::LayoutBox"* %5, i32 %132, i32 %147, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %2) #15
  %152 = load i32, i32* %18, align 4
  %153 = icmp eq i32 %132, %152
  br i1 %153, label %168, label %154

154:                                              ; preds = %123
  %155 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 2
  %156 = load i16, i16* %155, align 8
  %157 = and i16 %156, 256
  %158 = icmp eq i16 %157, 0
  br i1 %158, label %159, label %167

159:                                              ; preds = %154
  %160 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %161 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %160, align 8
  %162 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %161, i64 80
  %163 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %162, align 8
  %164 = call zeroext i1 %163(%"class.blink::LayoutObject"* %4) #15
  br i1 %164, label %167, label %165

165:                                              ; preds = %159
  %166 = load i32, i32* %18, align 4
  br label %168

167:                                              ; preds = %154, %159
  store i32 %137, i32* %139, align 8
  br label %263

168:                                              ; preds = %165, %123
  %169 = phi i32 [ %166, %165 ], [ %132, %123 ]
  %170 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %171 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %170, i64 0, i32 0, i32 9
  %172 = bitcast [20 x i8]* %171 to i160*
  %173 = load i160, i160* %172, align 8
  %174 = and i160 %173, 15211807202738752817960438464512
  %175 = icmp eq i160 %174, 0
  br i1 %175, label %176, label %180

176:                                              ; preds = %168
  %177 = load i32, i32* %14, align 4
  %178 = icmp eq i32 %177, %169
  br i1 %178, label %184, label %179

179:                                              ; preds = %176
  store i32 %169, i32* %14, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %5) #15
  br label %184

180:                                              ; preds = %168
  %181 = load i32, i32* %13, align 4
  %182 = icmp eq i32 %181, %169
  br i1 %182, label %184, label %183

183:                                              ; preds = %180
  store i32 %169, i32* %13, align 4
  call void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"* %5) #15
  br label %184

184:                                              ; preds = %176, %179, %180, %183
  %185 = load i32, i32* %19, align 4
  %186 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %187 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %186, i64 0, i32 0, i32 9
  %188 = bitcast [20 x i8]* %187 to i160*
  %189 = load i160, i160* %188, align 8
  %190 = and i160 %189, 15211807202738752817960438464512
  %191 = icmp eq i160 %190, 0
  br i1 %191, label %192, label %196

192:                                              ; preds = %184
  %193 = load i32, i32* %25, align 4
  %194 = icmp eq i32 %193, %185
  br i1 %194, label %200, label %195

195:                                              ; preds = %192
  store i32 %185, i32* %25, align 4
  call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %5) #15
  br label %200

196:                                              ; preds = %184
  %197 = load i32, i32* %26, align 4
  %198 = icmp eq i32 %197, %185
  br i1 %198, label %200, label %199

199:                                              ; preds = %196
  store i32 %185, i32* %26, align 4
  call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %5) #15
  br label %200

200:                                              ; preds = %192, %195, %196, %199
  %201 = load i32, i32* %20, align 4
  %202 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %203 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %202, i64 0, i32 0, i32 9
  %204 = bitcast [20 x i8]* %203 to i160*
  %205 = load i160, i160* %204, align 8, !noalias !16
  %206 = lshr i160 %205, 102
  %207 = trunc i160 %206 to i8
  %208 = and i8 %207, 3
  switch i8 %208, label %209 [
    i8 0, label %214
    i8 1, label %210
  ]

209:                                              ; preds = %200
  br label %210

210:                                              ; preds = %209, %200
  %211 = phi { i64, i64 } [ { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE to i64), i64 0 }, %209 ], [ { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE to i64), i64 0 }, %200 ]
  %212 = extractvalue { i64, i64 } %211, 0
  %213 = extractvalue { i64, i64 } %211, 1
  br label %214

214:                                              ; preds = %210, %200
  %215 = phi i64 [ %212, %210 ], [ ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE to i64), %200 ]
  %216 = phi i64 [ %213, %210 ], [ 0, %200 ]
  %217 = getelementptr inbounds i8, i8* %69, i64 %216
  %218 = bitcast i8* %217 to %"class.blink::LayoutBox"*
  %219 = and i64 %215, 1
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %228, label %221

221:                                              ; preds = %214
  %222 = bitcast i8* %217 to i8**
  %223 = load i8*, i8** %222, align 8
  %224 = add i64 %215, -1
  %225 = getelementptr i8, i8* %223, i64 %224
  %226 = bitcast i8* %225 to void (%"class.blink::LayoutBox"*, i32)**
  %227 = load void (%"class.blink::LayoutBox"*, i32)*, void (%"class.blink::LayoutBox"*, i32)** %226, align 8
  br label %230

228:                                              ; preds = %214
  %229 = inttoptr i64 %215 to void (%"class.blink::LayoutBox"*, i32)*
  br label %230

230:                                              ; preds = %221, %228
  %231 = phi void (%"class.blink::LayoutBox"*, i32)* [ %227, %221 ], [ %229, %228 ]
  call void %231(%"class.blink::LayoutBox"* %218, i32 %201) #15
  %232 = load i32, i32* %21, align 4
  %233 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %234 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %233, i64 0, i32 0, i32 9
  %235 = bitcast [20 x i8]* %234 to i160*
  %236 = load i160, i160* %235, align 8, !noalias !19
  %237 = lshr i160 %236, 102
  %238 = trunc i160 %237 to i8
  %239 = and i8 %238, 3
  switch i8 %239, label %240 [
    i8 0, label %245
    i8 1, label %241
  ]

240:                                              ; preds = %230
  br label %241

241:                                              ; preds = %240, %230
  %242 = phi { i64, i64 } [ { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE to i64), i64 0 }, %240 ], [ { i64 ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE to i64), i64 0 }, %230 ]
  %243 = extractvalue { i64, i64 } %242, 0
  %244 = extractvalue { i64, i64 } %242, 1
  br label %245

245:                                              ; preds = %241, %230
  %246 = phi i64 [ %243, %241 ], [ ptrtoint (void (%"class.blink::LayoutBox"*, i32)* @_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE to i64), %230 ]
  %247 = phi i64 [ %244, %241 ], [ 0, %230 ]
  %248 = getelementptr inbounds i8, i8* %69, i64 %247
  %249 = bitcast i8* %248 to %"class.blink::LayoutBox"*
  %250 = and i64 %246, 1
  %251 = icmp eq i64 %250, 0
  br i1 %251, label %259, label %252

252:                                              ; preds = %245
  %253 = bitcast i8* %248 to i8**
  %254 = load i8*, i8** %253, align 8
  %255 = add i64 %246, -1
  %256 = getelementptr i8, i8* %254, i64 %255
  %257 = bitcast i8* %256 to void (%"class.blink::LayoutBox"*, i32)**
  %258 = load void (%"class.blink::LayoutBox"*, i32)*, void (%"class.blink::LayoutBox"*, i32)** %257, align 8
  br label %261

259:                                              ; preds = %245
  %260 = inttoptr i64 %246 to void (%"class.blink::LayoutBox"*, i32)*
  br label %261

261:                                              ; preds = %252, %259
  %262 = phi void (%"class.blink::LayoutBox"*, i32)* [ %258, %252 ], [ %260, %259 ]
  call void %262(%"class.blink::LayoutBox"* %249, i32 %232) #15
  br label %263

263:                                              ; preds = %1, %167, %261
  %264 = phi i1 [ false, %1 ], [ false, %167 ], [ true, %261 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #15
  ret i1 %264
}

declare void @_ZN5blink13TextAutosizer11LayoutScopeC1EPNS_11LayoutBlockEPNS_18SubtreeLayoutScopeE(%"class.blink::TextAutosizer::LayoutScope"*, %"class.blink::LayoutBlock"*, %"class.blink::SubtreeLayoutScope"*) unnamed_addr #3

declare i32 @_ZNK5blink9LayoutBox21LayoutClientAfterEdgeEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink13TextAutosizer11LayoutScopeD1Ev(%"class.blink::TextAutosizer::LayoutScope"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink11LayoutStateD1Ev(%"class.blink::LayoutState"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock40MarkFixedPositionObjectForLayoutIfNeededEPNS_12LayoutObjectERNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBlock"* nocapture readonly, %"class.blink::LayoutObject"*, %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.blink::LayoutBox::LogicalExtentComputedValues", align 4
  %5 = alloca %"struct.blink::LayoutBox::LogicalExtentComputedValues", align 4
  %6 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 5, i32 0
  %7 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 9
  %9 = bitcast [20 x i8]* %8 to i160*
  %10 = load i160, i160* %9, align 8
  %11 = and i160 %10, 8462480737302404222943232
  %12 = icmp eq i160 %11, 1208925819614629174706176
  br i1 %12, label %13, label %129

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %15 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %14 to i96*
  %16 = load i96, i96* %15, align 4
  %17 = trunc i96 %16 to i32
  %18 = icmp slt i32 %17, 0
  %19 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %7, i64 0, i32 0, i32 7, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %19, align 8
  br i1 %18, label %21, label %29

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %20, i64 0, i32 18, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %37

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %20, i64 0, i32 7, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 0
  br label %37

29:                                               ; preds = %13
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %20, i64 0, i32 8, i32 2
  %31 = load i8, i8* %30, align 1
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %33, label %46

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %20, i64 0, i32 17, i32 2
  %35 = load i8, i8* %34, align 1
  %36 = icmp eq i8 %35, 0
  br label %46

37:                                               ; preds = %21, %25
  %38 = phi i1 [ %28, %25 ], [ false, %21 ]
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %20, i64 0, i32 8, i32 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %55

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %20, i64 0, i32 17, i32 2
  %44 = load i8, i8* %43, align 1
  %45 = icmp eq i8 %44, 0
  br label %55

46:                                               ; preds = %33, %29
  %47 = phi i1 [ false, %29 ], [ %36, %33 ]
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %20, i64 0, i32 18, i32 2
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %51, label %55

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %20, i64 0, i32 7, i32 2
  %53 = load i8, i8* %52, align 1
  %54 = icmp eq i8 %53, 0
  br label %55

55:                                               ; preds = %37, %42, %46, %51
  %56 = phi i1 [ %38, %37 ], [ %38, %42 ], [ %47, %46 ], [ %47, %51 ]
  %57 = phi i1 [ false, %37 ], [ %45, %42 ], [ false, %46 ], [ %54, %51 ]
  %58 = or i1 %56, %57
  br i1 %58, label %59, label %129

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 7
  %61 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %60, align 8
  %62 = icmp eq %"class.blink::LayoutObject"* %61, null
  br i1 %62, label %69, label %63

63:                                               ; preds = %59
  %64 = bitcast %"class.blink::LayoutObject"* %61 to i1 (%"class.blink::LayoutObject"*, i32)***
  %65 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %64, align 8
  %66 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %65, i64 92
  %67 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %66, align 8
  %68 = tail call zeroext i1 %67(%"class.blink::LayoutObject"* nonnull %61, i32 55) #15
  br i1 %68, label %129, label %69

69:                                               ; preds = %59, %63
  %70 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %61, i64 0, i32 5, i32 0
  %71 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %71, i64 0, i32 0, i32 9
  %73 = bitcast [20 x i8]* %72 to i160*
  %74 = load i160, i160* %73, align 8
  %75 = and i160 %74, 8462480737302404222943232
  %76 = icmp eq i160 %75, 0
  br i1 %76, label %88, label %77

77:                                               ; preds = %69, %77
  %78 = phi %"class.blink::LayoutObject"* [ %80, %77 ], [ %61, %69 ]
  %79 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %78, i64 0, i32 7
  %80 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %79, align 8
  %81 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %80, i64 0, i32 5, i32 0
  %82 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %82, i64 0, i32 0, i32 9
  %84 = bitcast [20 x i8]* %83 to i160*
  %85 = load i160, i160* %84, align 8
  %86 = and i160 %85, 8462480737302404222943232
  %87 = icmp eq i160 %86, 0
  br i1 %87, label %88, label %77

88:                                               ; preds = %77, %69
  %89 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutBox"*
  br i1 %57, label %90, label %109

90:                                               ; preds = %88
  %91 = bitcast %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %91) #15
  %92 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %4, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %91, i8 0, i64 24, i1 false) #15
  call void @_ZNK5blink9LayoutBox19ComputeLogicalWidthERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"* %89, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %4) #15
  %93 = load i32, i32* %92, align 4
  %94 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %95 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %94, i64 0, i32 0, i32 9
  %96 = bitcast [20 x i8]* %95 to i160*
  %97 = load i160, i160* %96, align 8
  %98 = and i160 %97, 15211807202738752817960438464512
  %99 = icmp eq i160 %98, 0
  %100 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 1, i32 1, i32 1
  %101 = bitcast i8* %100 to i32*
  %102 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 1, i32 4
  %103 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %102 to i32*
  %104 = select i1 %99, i32* %101, i32* %103
  %105 = load i32, i32* %104, align 4
  %106 = icmp eq i32 %93, %105
  br i1 %106, label %108, label %107

107:                                              ; preds = %90
  call void @_ZN5blink18SubtreeLayoutScope19SetChildNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"* %2, %"class.blink::LayoutObject"* %1) #15
  br label %108

108:                                              ; preds = %90, %107
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %91) #15
  br label %109

109:                                              ; preds = %108, %88
  br i1 %56, label %110, label %129

110:                                              ; preds = %109
  %111 = bitcast %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %111) #15
  %112 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %5, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %111, i8 0, i64 24, i1 false) #15
  call void @_ZNK5blink9LayoutBox20ComputeLogicalHeightERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"* %89, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %5) #15
  %113 = load i32, i32* %112, align 4
  %114 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %6, align 8
  %115 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %114, i64 0, i32 0, i32 9
  %116 = bitcast [20 x i8]* %115 to i160*
  %117 = load i160, i160* %116, align 8
  %118 = and i160 %117, 15211807202738752817960438464512
  %119 = icmp eq i160 %118, 0
  %120 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 1, i32 4
  %121 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %120 to i32*
  %122 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 1, i32 1, i32 1
  %123 = bitcast i8* %122 to i32*
  %124 = select i1 %119, i32* %121, i32* %123
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %113, %125
  br i1 %126, label %128, label %127

127:                                              ; preds = %110
  call void @_ZN5blink18SubtreeLayoutScope19SetChildNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"* %2, %"class.blink::LayoutObject"* %1) #15
  br label %128

128:                                              ; preds = %110, %127
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %111) #15
  br label %129

129:                                              ; preds = %63, %55, %109, %128, %3
  ret void
}

declare void @_ZNK5blink9LayoutBox19ComputeLogicalWidthERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) local_unnamed_addr #3

declare void @_ZN5blink18SubtreeLayoutScope19SetChildNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"*, %"class.blink::LayoutObject"*) local_unnamed_addr #3

declare void @_ZNK5blink9LayoutBox20ComputeLogicalHeightERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink11LayoutBlock35MarginIntrinsicLogicalWidthForChildERKNS_9LayoutBoxE(%"class.blink::LayoutBlock"* nocapture readonly, %"class.blink::LayoutBox"* nocapture readonly dereferenceable(216)) local_unnamed_addr #6 align 2 {
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %12 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %13, align 8
  %15 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15)
  %16 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16)
  %17 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17)
  %18 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 9
  %20 = bitcast [20 x i8]* %19 to i160*
  %21 = load i160, i160* %20, align 8, !noalias !22
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %12, i64 0, i32 0, i32 7, i32 0, i32 0
  %23 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %22, align 8, !noalias !22
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 12
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 11
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 9
  %27 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %23, i64 0, i32 10
  store %"class.blink::Length"* %24, %"class.blink::Length"** %3, align 8, !alias.scope !22
  store %"class.blink::Length"* %25, %"class.blink::Length"** %4, align 8, !alias.scope !22
  store %"class.blink::Length"* %26, %"class.blink::Length"** %5, align 8, !alias.scope !22
  store %"class.blink::Length"* %27, %"class.blink::Length"** %6, align 8, !alias.scope !22
  %28 = and i160 %21, 15211807202738752817960438464512
  %29 = icmp eq i160 %28, 0
  %30 = and i160 %21, 41538374868278621028243970633760768
  %31 = icmp eq i160 %30, 0
  %32 = select i1 %31, %"class.blink::Length"** %6, %"class.blink::Length"** %4
  %33 = select i1 %31, %"class.blink::Length"** %3, %"class.blink::Length"** %5
  %34 = select i1 %29, %"class.blink::Length"** %32, %"class.blink::Length"** %33
  %35 = load %"class.blink::Length"*, %"class.blink::Length"** %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  %36 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  %37 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38)
  %39 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  store %"class.blink::Length"* %24, %"class.blink::Length"** %7, align 8, !alias.scope !25
  store %"class.blink::Length"* %25, %"class.blink::Length"** %8, align 8, !alias.scope !25
  store %"class.blink::Length"* %26, %"class.blink::Length"** %9, align 8, !alias.scope !25
  store %"class.blink::Length"* %27, %"class.blink::Length"** %10, align 8, !alias.scope !25
  %40 = select i1 %31, %"class.blink::Length"** %8, %"class.blink::Length"** %10
  %41 = select i1 %31, %"class.blink::Length"** %9, %"class.blink::Length"** %7
  %42 = select i1 %29, %"class.blink::Length"** %40, %"class.blink::Length"** %41
  %43 = load %"class.blink::Length"*, %"class.blink::Length"** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  %44 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %35, i64 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 2
  br i1 %46, label %47, label %69

47:                                               ; preds = %2
  %48 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %35, i64 0, i32 3
  %49 = load i8, i8* %48, align 2, !range !5
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %47
  %52 = bitcast %"class.blink::Length"* %35 to float*
  %53 = load float, float* %52, align 4
  br label %58

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %35, i64 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = sitofp i32 %56 to float
  br label %58

58:                                               ; preds = %51, %54
  %59 = phi float [ %53, %51 ], [ %57, %54 ]
  %60 = fadd float %59, 0.000000e+00
  %61 = fmul float %60, 6.400000e+01
  %62 = fcmp ult float %61, 0xC1E0000000000000
  %63 = fcmp ugt float %61, 0x41DFFFFFE0000000
  %64 = fcmp ogt float %61, 0xC1E0000000000000
  %65 = select i1 %64, float %61, float 0xC1E0000000000000
  %66 = fptosi float %65 to i32
  %67 = select i1 %62, i32 0, i32 2147483647
  %68 = select i1 %63, i32 %67, i32 %66
  br label %69

69:                                               ; preds = %58, %2
  %70 = phi i32 [ %68, %58 ], [ 0, %2 ]
  %71 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %43, i64 0, i32 2
  %72 = load i8, i8* %71, align 1
  %73 = icmp eq i8 %72, 2
  br i1 %73, label %74, label %98

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %43, i64 0, i32 3
  %76 = load i8, i8* %75, align 2, !range !5
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %74
  %79 = bitcast %"class.blink::Length"* %43 to float*
  %80 = load float, float* %79, align 4
  br label %85

81:                                               ; preds = %74
  %82 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %43, i64 0, i32 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = sitofp i32 %83 to float
  br label %85

85:                                               ; preds = %78, %81
  %86 = phi float [ %80, %78 ], [ %84, %81 ]
  %87 = sitofp i32 %70 to float
  %88 = fmul float %87, 1.562500e-02
  %89 = fadd float %88, %86
  %90 = fmul float %89, 6.400000e+01
  %91 = fcmp ult float %90, 0xC1E0000000000000
  %92 = fcmp ugt float %90, 0x41DFFFFFE0000000
  %93 = fcmp ogt float %90, 0xC1E0000000000000
  %94 = select i1 %93, float %90, float 0xC1E0000000000000
  %95 = fptosi float %94 to i32
  %96 = select i1 %91, i32 0, i32 2147483647
  %97 = select i1 %92, i32 %96, i32 %95
  br label %98

98:                                               ; preds = %85, %69
  %99 = phi i32 [ %97, %85 ], [ %70, %69 ]
  ret i32 %99
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock23LayoutPositionedObjectsEbNS0_24PositionedLayoutBehaviorE(%"class.blink::LayoutBlock"*, i1 zeroext, i32) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::LayoutBlock"*, align 8
  %5 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !5
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %28, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 16777216
  %12 = icmp eq i96 %11, 0
  br i1 %12, label %13, label %28

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %14, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %28, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 67108876
  %21 = icmp eq i32 %20, 67108864
  br i1 %21, label %22, label %28, !prof !6

22:                                               ; preds = %17
  %23 = bitcast %"class.blink::Node"* %15 to %"class.blink::Element"*
  %24 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %23) #15
  %25 = icmp eq %"class.blink::DisplayLockContext"* %24, null
  br i1 %25, label %28, label %26

26:                                               ; preds = %22
  %27 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"* nonnull %24) #15
  br i1 %27, label %28, label %55

28:                                               ; preds = %26, %7, %13, %17, %3, %22
  %29 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 2
  %30 = load i16, i16* %29, align 8
  %31 = trunc i16 %30 to i8
  %32 = icmp slt i8 %31, 0
  br i1 %32, label %33, label %55, !prof !4

33:                                               ; preds = %28
  %34 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map to i8*) acquire, align 8
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %36, label %40, !prof !2

36:                                               ; preds = %33
  %37 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %40, label %39

39:                                               ; preds = %36
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  br label %40

40:                                               ; preds = %33, %36, %39
  %41 = bitcast %"class.blink::LayoutBlock"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #15
  store %"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBlock"** %4, align 8
  %42 = call %"class.WTF::ListHashSet.3211"* @_ZNK3WTF7HashMapIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS8_EENS_28MallocedListHashSetAllocatorIS9_Lj16EEEEENS5_14default_deleteISE_EEEENSA_IS3_EENS_10HashTraitsIS4_EENSJ_ISH_EENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.3191"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map to %"class.WTF::HashMap.3191"*), %"class.blink::LayoutBlock"** nonnull dereferenceable(8) %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #15
  %43 = icmp eq %"class.WTF::ListHashSet.3211"* %42, null
  br i1 %43, label %55, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %42, i64 0, i32 1
  %46 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %45, align 8
  %47 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %46, null
  br i1 %47, label %55, label %48

48:                                               ; preds = %44, %48
  %49 = phi %"class.WTF::MallocedListHashSetNode.3217"* [ %53, %48 ], [ %46, %44 ]
  %50 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %49, i64 0, i32 0
  %51 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %50, align 8
  call void @_ZN5blink11LayoutBlock22LayoutPositionedObjectEPNS_9LayoutBoxEbNS0_24PositionedLayoutBehaviorE(%"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBox"* %51, i1 zeroext %1, i32 %2)
  %52 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %49, i64 0, i32 2
  %53 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %52, align 8
  %54 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %53, null
  br i1 %54, label %55, label %48

55:                                               ; preds = %48, %44, %26, %28, %40
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock22LayoutPositionedObjectEPNS_9LayoutBoxEbNS0_24PositionedLayoutBehaviorE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca %"class.base::TimeTicks", align 8
  %12 = alloca i8*, align 8
  %13 = alloca %class.anon.3595, align 8
  %14 = alloca %"struct.blink::LayoutBox::LogicalExtentComputedValues", align 4
  %15 = alloca %"struct.blink::LayoutBox::LogicalExtentComputedValues", align 4
  %16 = alloca %"class.blink::SubtreeLayoutScope", align 8
  %17 = alloca %"struct.blink::LayoutBox::LogicalExtentComputedValues", align 4
  %18 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject34SetShouldCheckForPaintInvalidationEv(%"class.blink::LayoutObject"* %19) #15
  %20 = bitcast %"class.blink::SubtreeLayoutScope"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #15
  %21 = getelementptr inbounds %"class.blink::SubtreeLayoutScope", %"class.blink::SubtreeLayoutScope"* %16, i64 0, i32 0
  store %"class.blink::LayoutObject"* inttoptr (i64 -6148914691236517206 to %"class.blink::LayoutObject"*), %"class.blink::LayoutObject"** %21, align 8
  call void @_ZN5blink18SubtreeLayoutScopeC1ERNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"* nonnull %16, %"class.blink::LayoutObject"* dereferenceable(88) %19) #15
  call void @_ZN5blink11LayoutBlock40MarkFixedPositionObjectForLayoutIfNeededEPNS_12LayoutObjectERNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBlock"* %0, %"class.blink::LayoutObject"* %19, %"class.blink::SubtreeLayoutScope"* nonnull dereferenceable(8) %16)
  %22 = icmp eq i32 %3, 1
  %23 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %24 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %23 to i96*
  %25 = load i96, i96* %24, align 4
  br i1 %22, label %26, label %34

26:                                               ; preds = %4
  %27 = and i96 %25, 63
  %28 = icmp eq i96 %27, 0
  br i1 %28, label %373, label %29

29:                                               ; preds = %26
  %30 = bitcast %"class.blink::LayoutBox"* %1 to void (%"class.blink::LayoutObject"*)***
  %31 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %31, i64 54
  %33 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %32, align 8
  call void %33(%"class.blink::LayoutObject"* %19) #15
  br label %373

34:                                               ; preds = %4
  %35 = and i96 %25, 8
  %36 = icmp eq i96 %35, 0
  br i1 %36, label %37, label %149

37:                                               ; preds = %34
  br i1 %2, label %148, label %38

38:                                               ; preds = %37
  %39 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 2
  %40 = load i16, i16* %39, align 8
  %41 = and i16 %40, 16
  %42 = icmp eq i16 %41, 0
  br i1 %42, label %43, label %148

43:                                               ; preds = %38
  %44 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %45 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %44, align 8
  %46 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %45, i64 28
  %47 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %46, align 8
  %48 = call zeroext i1 %47(%"class.blink::LayoutObject"* %19) #15
  br i1 %48, label %49, label %55

49:                                               ; preds = %43
  %50 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 1, i32 0, i32 0, i32 1, i32 1
  %51 = bitcast i8* %50 to i16*
  %52 = load i16, i16* %51, align 8
  %53 = and i16 %52, 1024
  %54 = icmp eq i16 %53, 0
  br i1 %54, label %149, label %55

55:                                               ; preds = %49, %43
  %56 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %57 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %57, i64 0, i32 0, i32 9
  %59 = bitcast [20 x i8]* %58 to i160*
  %60 = load i160, i160* %59, align 8
  %61 = and i160 %60, 15211807202738752817960438464512
  %62 = icmp eq i160 %61, 0
  %63 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %57, i64 0, i32 0, i32 7, i32 0, i32 0
  %64 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %63, align 8
  br i1 %62, label %65, label %73

65:                                               ; preds = %55
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %64, i64 0, i32 18, i32 2
  %67 = load i8, i8* %66, align 1
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %69, label %105

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %64, i64 0, i32 7, i32 2
  %71 = load i8, i8* %70, align 1
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %81, label %105

73:                                               ; preds = %55
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %64, i64 0, i32 8, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %77, label %114

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %64, i64 0, i32 17, i32 2
  %79 = load i8, i8* %78, align 1
  %80 = icmp eq i8 %79, 0
  br i1 %80, label %81, label %114

81:                                               ; preds = %77, %69
  %82 = bitcast %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %82) #15
  %83 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %14, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %82, i8 0, i64 24, i1 false) #15
  %84 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 1, i32 0
  %85 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %86 = select i1 %62, i32* %84, i32* %85
  %87 = load i32, i32* %86, align 4
  %88 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %89 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %90 = select i1 %62, i32* %88, i32* %89
  %91 = load i32, i32* %90, align 4
  %92 = bitcast %"class.blink::LayoutBox"* %1 to void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)***
  %93 = load void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)**, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %93, i64 164
  %95 = load void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %94, align 8
  call void %95(%"class.blink::LayoutBox"* %1, i32 %91, i32 %87, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %14) #15
  %96 = load i32, i32* %83, align 4
  %97 = icmp eq i32 %96, %87
  br i1 %97, label %98, label %102

98:                                               ; preds = %81
  %99 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %14, i64 0, i32 0, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, %91
  br i1 %101, label %103, label %102

102:                                              ; preds = %98, %81
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #15
  br label %148

103:                                              ; preds = %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %82) #15
  %104 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %63, align 8
  br i1 %62, label %105, label %114

105:                                              ; preds = %103, %69, %65
  %106 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %104, %103 ], [ %64, %65 ], [ %64, %69 ]
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %106, i64 0, i32 8, i32 2
  %108 = load i8, i8* %107, align 1
  %109 = icmp eq i8 %108, 0
  br i1 %109, label %110, label %149

110:                                              ; preds = %105
  %111 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %106, i64 0, i32 17, i32 2
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %123, label %149

114:                                              ; preds = %103, %77, %73
  %115 = phi %"class.blink::ComputedStyleBase::StyleSurroundData"* [ %104, %103 ], [ %64, %73 ], [ %64, %77 ]
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %115, i64 0, i32 18, i32 2
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, 0
  br i1 %118, label %119, label %149

119:                                              ; preds = %114
  %120 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %115, i64 0, i32 7, i32 2
  %121 = load i8, i8* %120, align 1
  %122 = icmp eq i8 %121, 0
  br i1 %122, label %123, label %149

123:                                              ; preds = %119, %110
  %124 = bitcast %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #15
  %125 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %15, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %124, i8 0, i64 24, i1 false) #15
  %126 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %56, align 8
  %127 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %126, i64 0, i32 0, i32 9
  %128 = bitcast [20 x i8]* %127 to i160*
  %129 = load i160, i160* %128, align 8
  %130 = and i160 %129, 15211807202738752817960438464512
  %131 = icmp eq i160 %130, 0
  %132 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %133 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 1, i32 0
  %134 = select i1 %131, i32* %132, i32* %133
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %137 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %138 = select i1 %131, i32* %136, i32* %137
  %139 = load i32, i32* %138, align 4
  call void @_ZNK5blink9LayoutBox19ComputeLogicalWidthERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"* %1, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %15) #15
  %140 = load i32, i32* %125, align 4
  %141 = icmp eq i32 %140, %135
  br i1 %141, label %142, label %146

142:                                              ; preds = %123
  %143 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %15, i64 0, i32 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, %139
  br i1 %145, label %147, label %146

146:                                              ; preds = %142, %123
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #15
  br label %148

147:                                              ; preds = %142
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #15
  br label %149

148:                                              ; preds = %38, %102, %146, %37
  call void @_ZN5blink18SubtreeLayoutScope19SetChildNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"* nonnull %16, %"class.blink::LayoutObject"* %19) #15
  br label %149

149:                                              ; preds = %105, %110, %114, %119, %147, %49, %34, %148
  %150 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %151 = load %"class.blink::Node"*, %"class.blink::Node"** %150, align 8
  %152 = icmp eq %"class.blink::Node"* %151, null
  br i1 %152, label %153, label %160

153:                                              ; preds = %149, %153
  %154 = phi %"class.blink::LayoutObject"* [ %156, %153 ], [ %18, %149 ]
  %155 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %154, i64 0, i32 7
  %156 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %155, align 8
  %157 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %156, i64 0, i32 6, i32 0, i32 0
  %158 = load %"class.blink::Node"*, %"class.blink::Node"** %157, align 8
  %159 = icmp eq %"class.blink::Node"* %158, null
  br i1 %159, label %153, label %160

160:                                              ; preds = %153, %149
  %161 = phi %"class.blink::Node"* [ %151, %149 ], [ %158, %153 ]
  %162 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %161, i64 0, i32 3, i32 0, i32 0
  %163 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %162, align 8
  %164 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %163, i64 0, i32 2, i32 0, i32 0
  %165 = load %"class.blink::Document"*, %"class.blink::Document"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %165, i64 0, i32 113
  %167 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %166, align 8
  %168 = getelementptr inbounds %"class.blink::LayoutView", %"class.blink::LayoutView"* %167, i64 0, i32 3
  %169 = load %"class.blink::LayoutState"*, %"class.blink::LayoutState"** %168, align 8
  %170 = getelementptr inbounds %"class.blink::LayoutState", %"class.blink::LayoutState"* %169, i64 0, i32 0
  %171 = load i8, i8* %170, align 8
  %172 = and i8 %171, 1
  %173 = icmp ne i8 %172, 0
  br i1 %173, label %174, label %278

174:                                              ; preds = %160
  %175 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*, i32)***
  %176 = load i32 (%"class.blink::LayoutBox"*, i32)**, i32 (%"class.blink::LayoutBox"*, i32)*** %175, align 8
  %177 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %176, i64 176
  %178 = load i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %177, align 8
  %179 = call i32 %178(%"class.blink::LayoutBox"* %1, i32 0) #15
  %180 = icmp eq i32 %179, 1
  br i1 %180, label %278, label %181

181:                                              ; preds = %174
  %182 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %183 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %182, align 8
  %184 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184)
  %185 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %185)
  %186 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %186)
  %187 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %183, i64 0, i32 0, i32 9
  %188 = bitcast [20 x i8]* %187 to i160*
  %189 = load i160, i160* %188, align 8, !noalias !28
  %190 = lshr i160 %189, 102
  %191 = trunc i160 %190 to i8
  %192 = and i8 %191, 3
  %193 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %183, i64 0, i32 0, i32 7, i32 0, i32 0
  %194 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %193, align 8, !noalias !28
  %195 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %194, i64 0, i32 17
  %196 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %194, i64 0, i32 7
  %197 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %194, i64 0, i32 8
  store %"class.blink::Length"* %195, %"class.blink::Length"** %8, align 8, !alias.scope !28
  store %"class.blink::Length"* %196, %"class.blink::Length"** %9, align 8, !alias.scope !28
  store %"class.blink::Length"* %197, %"class.blink::Length"** %10, align 8, !alias.scope !28
  %198 = icmp eq i8 %192, 0
  %199 = icmp eq i8 %192, 1
  %200 = select i1 %199, %"class.blink::Length"** %10, %"class.blink::Length"** %8
  %201 = select i1 %198, %"class.blink::Length"** %9, %"class.blink::Length"** %200
  %202 = load %"class.blink::Length"*, %"class.blink::Length"** %201, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %185)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %186)
  %203 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %202, i64 0, i32 2
  %204 = load i8, i8* %203, align 1
  %205 = icmp eq i8 %204, 0
  br i1 %205, label %241, label %206

206:                                              ; preds = %181
  %207 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %207)
  %208 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %208)
  %209 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %209)
  %210 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %194, i64 0, i32 18
  store %"class.blink::Length"* %210, %"class.blink::Length"** %5, align 8, !alias.scope !31
  store %"class.blink::Length"* %195, %"class.blink::Length"** %6, align 8, !alias.scope !31
  store %"class.blink::Length"* %197, %"class.blink::Length"** %7, align 8, !alias.scope !31
  %211 = select i1 %199, %"class.blink::Length"** %6, %"class.blink::Length"** %7
  %212 = select i1 %198, %"class.blink::Length"** %5, %"class.blink::Length"** %211
  %213 = load %"class.blink::Length"*, %"class.blink::Length"** %212, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %207)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %208)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %209)
  %214 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %213, i64 0, i32 2
  %215 = load i8, i8* %214, align 1
  %216 = icmp eq i8 %215, 0
  br i1 %216, label %217, label %241

217:                                              ; preds = %206
  %218 = and i160 %189, 15211807202738752817960438464512
  %219 = icmp eq i160 %218, 0
  %220 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %183, i64 0, i32 0, i32 5, i32 0, i32 0
  %221 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %220, align 8
  %222 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %221, i64 0, i32 3
  %223 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %221, i64 0, i32 8
  %224 = select i1 %219, %"class.blink::Length"* %222, %"class.blink::Length"* %223
  %225 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %224, i64 0, i32 2
  %226 = load i8, i8* %225, align 1
  %227 = icmp eq i8 %226, 0
  br i1 %227, label %228, label %241

228:                                              ; preds = %217
  %229 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %230 = call i32 @_ZNK5blink9LayoutBox31OffsetFromLogicalTopOfFirstPageEv(%"class.blink::LayoutBox"* %229) #15
  %231 = call i1 @llvm.is.constant.i32(i32 %230) #15
  br i1 %231, label %232, label %236

232:                                              ; preds = %228
  %233 = sub i32 0, %230
  %234 = icmp eq i32 %233, -2147483648
  %235 = select i1 %234, i32 2147483647, i32 %233
  br label %259

236:                                              ; preds = %228
  %237 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 0, i32 %230) #15
  %238 = extractvalue { i32, i1 } %237, 1
  %239 = extractvalue { i32, i1 } %237, 0
  %240 = select i1 %238, i32 2147483647, i32 %239
  br label %259

241:                                              ; preds = %217, %206, %181
  %242 = bitcast %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %242) #15
  %243 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %17, i64 0, i32 1, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %242, i8 0, i64 24, i1 false) #15
  %244 = and i160 %189, 15211807202738752817960438464512
  %245 = icmp eq i160 %244, 0
  %246 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 1, i32 0
  %247 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 1, i32 0, i32 0
  %248 = select i1 %245, i32* %246, i32* %247
  %249 = load i32, i32* %248, align 4
  %250 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 1, i32 0
  %251 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %252 = select i1 %245, i32* %250, i32* %251
  %253 = load i32, i32* %252, align 4
  %254 = bitcast %"class.blink::LayoutBox"* %1 to void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)***
  %255 = load void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)**, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*** %254, align 8
  %256 = getelementptr inbounds void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %255, i64 164
  %257 = load void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %256, align 8
  call void %257(%"class.blink::LayoutBox"* %1, i32 %249, i32 %253, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %17) #15
  %258 = load i32, i32* %243, align 4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %242) #15
  br label %259

259:                                              ; preds = %236, %232, %241
  %260 = phi i32 [ %258, %241 ], [ %235, %232 ], [ %240, %236 ]
  %261 = phi i1 [ false, %241 ], [ true, %232 ], [ true, %236 ]
  %262 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %182, align 8
  %263 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %262, i64 0, i32 0, i32 9
  %264 = bitcast [20 x i8]* %263 to i160*
  %265 = load i160, i160* %264, align 8
  %266 = and i160 %265, 15211807202738752817960438464512
  %267 = icmp eq i160 %266, 0
  br i1 %267, label %268, label %273

268:                                              ; preds = %259
  %269 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 1, i32 0
  %270 = load i32, i32* %269, align 4
  %271 = icmp eq i32 %270, %260
  br i1 %271, label %278, label %272

272:                                              ; preds = %268
  store i32 %260, i32* %269, align 4
  call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %1) #15
  br label %278

273:                                              ; preds = %259
  %274 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2, i32 0, i32 0, i32 0
  %275 = load i32, i32* %274, align 4
  %276 = icmp eq i32 %275, %260
  br i1 %276, label %278, label %277

277:                                              ; preds = %273
  store i32 %260, i32* %274, align 4
  call void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"* %1) #15
  br label %278

278:                                              ; preds = %174, %160, %277, %273, %272, %268
  %279 = phi i1 [ false, %174 ], [ true, %268 ], [ true, %272 ], [ true, %273 ], [ true, %277 ], [ false, %160 ]
  %280 = phi i32 [ 0, %174 ], [ %260, %268 ], [ %260, %272 ], [ %260, %273 ], [ %260, %277 ], [ 0, %160 ]
  %281 = phi i1 [ false, %174 ], [ %261, %268 ], [ %261, %272 ], [ %261, %273 ], [ %261, %277 ], [ false, %160 ]
  %282 = load i96, i96* %24, align 4
  %283 = and i96 %282, 63
  %284 = icmp eq i96 %283, 0
  br i1 %284, label %285, label %288

285:                                              ; preds = %278
  %286 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  call void @_ZN5blink9LayoutBox38MarkChildForPaginationRelayoutIfNeededERS0_RNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBox"* %286, %"class.blink::LayoutBox"* dereferenceable(216) %1, %"class.blink::SubtreeLayoutScope"* nonnull dereferenceable(8) %16) #15
  br i1 %281, label %287, label %288

287:                                              ; preds = %285
  call void @_ZN5blink18SubtreeLayoutScope19SetChildNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"* nonnull %16, %"class.blink::LayoutObject"* %19) #15
  br label %288

288:                                              ; preds = %278, %285, %287
  %289 = icmp eq i32 %3, 2
  br i1 %289, label %290, label %319

290:                                              ; preds = %288
  %291 = bitcast i8** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %291)
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink26layout_invalidation_reason14kAncestorMovedE, i64 0, i64 0), i8** %12, align 8
  %292 = load i96, i96* %24, align 4
  %293 = and i96 %292, 1
  %294 = icmp eq i96 %293, 0
  br i1 %294, label %295, label %314

295:                                              ; preds = %290
  %296 = and i96 %292, 2
  %297 = icmp eq i96 %296, 0
  %298 = or i96 %292, 1
  store i96 %298, i96* %24, align 4
  call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %19, i32 1) #15
  %299 = load i96, i96* %24, align 4
  %300 = or i96 %299, 1180591620717411303424
  store i96 %300, i96* %24, align 4
  br i1 %297, label %301, label %318

301:                                              ; preds = %295
  %302 = load i8, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), align 16
  %303 = and i8 %302, 25
  %304 = icmp eq i8 %303, 0
  br i1 %304, label %318, label %305, !prof !3

305:                                              ; preds = %301
  %306 = bitcast %class.anon.3595* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %306) #15
  %307 = getelementptr inbounds %class.anon.3595, %class.anon.3595* %13, i64 0, i32 0
  store %"class.blink::LayoutObject"* %19, %"class.blink::LayoutObject"** %307, align 8
  %308 = getelementptr inbounds %class.anon.3595, %class.anon.3595* %13, i64 0, i32 1
  store i8** %12, i8*** %308, align 8
  %309 = call i32 @_ZN4base14PlatformThread9CurrentIdEv() #15
  %310 = bitcast %"class.base::TimeTicks"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %310) #15
  %311 = getelementptr inbounds %"class.base::TimeTicks", %"class.base::TimeTicks"* %11, i64 0, i32 0, i32 0
  %312 = call i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() #15
  store i64 %312, i64* %311, align 8
  %313 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext 73, i8* getelementptr inbounds ([300 x %"struct.base::trace_event::TraceCategory"], [300 x %"struct.base::trace_event::TraceCategory"]* @_ZN4base11trace_event16CategoryRegistry11categories_E, i64 0, i64 171, i32 0), i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i64 0, i64 0), i8* null, i64 0, i32 %309, %"class.base::TimeTicks"* nonnull dereferenceable(8) %11, i32 8, i64 0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.4, i64 0, i64 0), %class.anon.3595* nonnull dereferenceable(16) %13) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %310) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %306) #15
  br label %318

314:                                              ; preds = %290
  %315 = or i96 %292, 1
  store i96 %315, i96* %24, align 4
  call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %19, i32 1) #15
  %316 = load i96, i96* %24, align 4
  %317 = or i96 %316, 1180591620717411303424
  store i96 %317, i96* %24, align 4
  br label %318

318:                                              ; preds = %301, %305, %295, %314
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %291)
  br label %319

319:                                              ; preds = %318, %288
  %320 = load i96, i96* %24, align 4
  %321 = and i96 %320, 63
  %322 = icmp eq i96 %321, 0
  br i1 %322, label %328, label %323

323:                                              ; preds = %319
  %324 = bitcast %"class.blink::LayoutBox"* %1 to void (%"class.blink::LayoutObject"*)***
  %325 = load void (%"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*)*** %324, align 8
  %326 = getelementptr inbounds void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %325, i64 54
  %327 = load void (%"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*)** %326, align 8
  call void %327(%"class.blink::LayoutObject"* %19) #15
  br label %328

328:                                              ; preds = %319, %323
  %329 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 7
  %330 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %329, align 8
  %331 = bitcast %"class.blink::LayoutObject"* %330 to i1 (%"class.blink::LayoutObject"*, i32)***
  %332 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %331, align 8
  %333 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %332, i64 92
  %334 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %333, align 8
  %335 = call zeroext i1 %334(%"class.blink::LayoutObject"* %330, i32 26) #15
  br i1 %335, label %336, label %345

336:                                              ; preds = %328
  %337 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %338 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %337, align 8
  %339 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %338, i64 92
  %340 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %339, align 8
  %341 = call zeroext i1 %340(%"class.blink::LayoutObject"* %19, i32 30) #15
  br i1 %341, label %345, label %342

342:                                              ; preds = %336
  %343 = bitcast %"class.blink::LayoutObject"* %330 to %"class.blink::LayoutBlock"*
  %344 = call zeroext i1 @_ZN5blink17LayoutFlexibleBox42SetStaticPositionForChildInFlexNGContainerERNS_9LayoutBoxEPNS_11LayoutBlockE(%"class.blink::LayoutBox"* dereferenceable(216) %1, %"class.blink::LayoutBlock"* %343) #15
  br i1 %344, label %369, label %345

345:                                              ; preds = %342, %336, %328
  %346 = bitcast %"class.blink::LayoutObject"* %330 to i1 (%"class.blink::LayoutObject"*)***
  %347 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %346, align 8
  %348 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %347, i64 78
  %349 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %348, align 8
  %350 = call zeroext i1 %349(%"class.blink::LayoutObject"* %330) #15
  br i1 %350, label %351, label %354

351:                                              ; preds = %345
  %352 = bitcast %"class.blink::LayoutObject"* %330 to %"class.blink::LayoutFlexibleBox"*
  %353 = call zeroext i1 @_ZN5blink17LayoutFlexibleBox36SetStaticPositionForPositionedLayoutERNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %352, %"class.blink::LayoutBox"* dereferenceable(216) %1) #15
  br i1 %353, label %369, label %354

354:                                              ; preds = %351, %345
  br i1 %279, label %355, label %370

355:                                              ; preds = %354
  %356 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %357 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %356 to i96*
  %358 = load i96, i96* %357, align 4
  %359 = trunc i96 %358 to i32
  %360 = icmp slt i32 %359, 0
  %361 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 2
  %362 = bitcast %"class.blink::LayoutRect"* %361 to i64*
  %363 = load i64, i64* %362, align 4
  %364 = lshr i64 %363, 32
  %365 = select i1 %360, i64 %364, i64 %363
  %366 = trunc i64 %365 to i32
  %367 = icmp eq i32 %280, %366
  br i1 %367, label %370, label %368

368:                                              ; preds = %355
  call void @_ZN5blink12LayoutObject11ForceLayoutEv(%"class.blink::LayoutObject"* %19) #15
  br label %370

369:                                              ; preds = %351, %342
  call void @_ZN5blink12LayoutObject11ForceLayoutEv(%"class.blink::LayoutObject"* %19) #15
  br label %370

370:                                              ; preds = %355, %354, %369, %368
  br i1 %173, label %371, label %373

371:                                              ; preds = %370
  %372 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  call void @_ZN5blink9LayoutBox31UpdateFragmentationInfoForChildERS0_(%"class.blink::LayoutBox"* %372, %"class.blink::LayoutBox"* dereferenceable(216) %1) #15
  br label %373

373:                                              ; preds = %370, %371, %29, %26
  call void @_ZN5blink18SubtreeLayoutScopeD1Ev(%"class.blink::SubtreeLayoutScope"* nonnull %16) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #15
  ret void
}

declare void @_ZN5blink18SubtreeLayoutScopeC1ERNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"*, %"class.blink::LayoutObject"* dereferenceable(88)) unnamed_addr #3

declare i32 @_ZNK5blink9LayoutBox31OffsetFromLogicalTopOfFirstPageEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare void @_ZN5blink9LayoutBox38MarkChildForPaginationRelayoutIfNeededERS0_RNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink17LayoutFlexibleBox42SetStaticPositionForChildInFlexNGContainerERNS_9LayoutBoxEPNS_11LayoutBlockE(%"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::LayoutBlock"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink17LayoutFlexibleBox36SetStaticPositionForPositionedLayoutERNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #3

declare void @_ZN5blink12LayoutObject11ForceLayoutEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3

declare void @_ZN5blink9LayoutBox31UpdateFragmentationInfoForChildERS0_(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink18SubtreeLayoutScopeD1Ev(%"class.blink::SubtreeLayoutScope"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock30MarkPositionedObjectsForLayoutEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutBlock"*, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 2
  %4 = load i16, i16* %3, align 8
  %5 = trunc i16 %4 to i8
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %38, !prof !4

7:                                                ; preds = %1
  %8 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map to i8*) acquire, align 8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %14, !prof !2

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  br label %14

14:                                               ; preds = %7, %10, %13
  %15 = bitcast %"class.blink::LayoutBlock"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #15
  store %"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBlock"** %2, align 8
  %16 = call %"class.WTF::ListHashSet.3211"* @_ZNK3WTF7HashMapIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS8_EENS_28MallocedListHashSetAllocatorIS9_Lj16EEEEENS5_14default_deleteISE_EEEENSA_IS3_EENS_10HashTraitsIS4_EENSJ_ISH_EENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.3191"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map to %"class.WTF::HashMap.3191"*), %"class.blink::LayoutBlock"** nonnull dereferenceable(8) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #15
  %17 = icmp eq %"class.WTF::ListHashSet.3211"* %16, null
  br i1 %17, label %38, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %16, i64 0, i32 1
  %20 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %19, align 8
  %21 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %20, null
  br i1 %21, label %38, label %22

22:                                               ; preds = %18, %34
  %23 = phi %"class.WTF::MallocedListHashSetNode.3217"* [ %36, %34 ], [ %20, %18 ]
  %24 = bitcast %"class.WTF::MallocedListHashSetNode.3217"* %23 to %"class.blink::LayoutObject"**
  %25 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %25, i64 0, i32 4
  %27 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %26 to i96*
  %28 = load i96, i96* %27, align 4
  %29 = and i96 %28, 8
  %30 = icmp eq i96 %29, 0
  call void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"* %25, i32 1) #15
  %31 = load i96, i96* %27, align 4
  %32 = or i96 %31, 1180591620717411303432
  store i96 %32, i96* %27, align 4
  br i1 %30, label %33, label %34

33:                                               ; preds = %22
  call void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"* %25, i1 zeroext true, %"class.blink::SubtreeLayoutScope"* null) #15
  br label %34

34:                                               ; preds = %22, %33
  %35 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %23, i64 0, i32 2
  %36 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %35, align 8
  %37 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %36, null
  br i1 %37, label %38, label %22

38:                                               ; preds = %34, %18, %1, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11LayoutBlock5PaintERKNS_9PaintInfoE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::BlockPainter", align 8
  %4 = bitcast %"class.blink::BlockPainter"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #15
  %5 = getelementptr inbounds %"class.blink::BlockPainter", %"class.blink::BlockPainter"* %3, i64 0, i32 0
  store %"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBlock"** %5, align 8
  call void @_ZN5blink12BlockPainter5PaintERKNS_9PaintInfoE(%"class.blink::BlockPainter"* nonnull %3, %"struct.blink::PaintInfo"* %1) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #15
  ret void
}

declare void @_ZN5blink12BlockPainter5PaintERKNS_9PaintInfoE(%"class.blink::BlockPainter"*, %"struct.blink::PaintInfo"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11LayoutBlock13PaintChildrenERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* nocapture readnone dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::BlockPainter", align 8
  %5 = bitcast %"class.blink::BlockPainter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.blink::BlockPainter", %"class.blink::BlockPainter"* %4, i64 0, i32 0
  store %"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBlock"** %6, align 8
  call void @_ZN5blink12BlockPainter13PaintChildrenERKNS_9PaintInfoE(%"class.blink::BlockPainter"* nonnull %4, %"struct.blink::PaintInfo"* %1) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret void
}

declare void @_ZN5blink12BlockPainter13PaintChildrenERKNS_9PaintInfoE(%"class.blink::BlockPainter"*, %"struct.blink::PaintInfo"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11LayoutBlock11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::BlockPainter", align 8
  %5 = bitcast %"class.blink::BlockPainter"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.blink::BlockPainter", %"class.blink::BlockPainter"* %4, i64 0, i32 0
  store %"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBlock"** %6, align 8
  call void @_ZN5blink12BlockPainter11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::BlockPainter"* nonnull %4, %"struct.blink::PaintInfo"* %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  ret void
}

declare void @_ZN5blink12BlockPainter11PaintObjectERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::BlockPainter"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::ListHashSet.3211"* @_ZNK5blink11LayoutBlock25PositionedObjectsInternalEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutBlock"*, align 8
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !2

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  br label %9

9:                                                ; preds = %1, %5, %8
  %10 = bitcast %"class.blink::LayoutBlock"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #15
  store %"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBlock"** %2, align 8
  %11 = call %"class.WTF::ListHashSet.3211"* @_ZNK3WTF7HashMapIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS8_EENS_28MallocedListHashSetAllocatorIS9_Lj16EEEEENS5_14default_deleteISE_EEEENSA_IS3_EENS_10HashTraitsIS4_EENSJ_ISH_EENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.3191"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map to %"class.WTF::HashMap.3191"*), %"class.blink::LayoutBlock"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #15
  ret %"class.WTF::ListHashSet.3211"* %11
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::ListHashSet.3211"* @_ZNK3WTF7HashMapIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS8_EENS_28MallocedListHashSetAllocatorIS9_Lj16EEEEENS5_14default_deleteISE_EEEENSA_IS3_EENS_10HashTraitsIS4_EENSJ_ISH_EENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.3191"*, %"class.blink::LayoutBlock"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap.3191", %"class.WTF::HashMap.3191"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3195"*, %"struct.WTF::KeyValuePair.3195"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.3195"* %4, null
  br i1 %5, label %73, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashMap.3191", %"class.WTF::HashMap.3191"* %0, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::LayoutBlock"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %34, i64 0, i32 0
  %36 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::LayoutBlock"*
  %38 = icmp eq %"class.blink::LayoutBlock"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %6
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::LayoutBlock"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::LayoutBlock"* %54, null
  br i1 %57, label %73, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %63, i64 0, i32 0
  %65 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %64, align 8
  %66 = icmp eq %"class.blink::LayoutBlock"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %6
  %68 = phi %"struct.WTF::KeyValuePair.3195"* [ %34, %6 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.3195"* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %68, i64 0, i32 1, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::ListHashSet.3211"*, %"class.WTF::ListHashSet.3211"** %71, align 8
  br label %73

73:                                               ; preds = %53, %2, %67, %70
  %74 = phi %"class.WTF::ListHashSet.3211"* [ %72, %70 ], [ null, %67 ], [ null, %2 ], [ null, %53 ]
  ret %"class.WTF::ListHashSet.3211"* %74
}

declare void @_ZN5blink9LayoutBox39ClearOverrideContainingBlockContentSizeEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::LayoutBox"**, i8 } @_ZN3WTF11ListHashSetIPN5blink9LayoutBoxELm16ENS_7PtrHashIS2_EENS_28MallocedListHashSetAllocatorIS3_Lj16EEEE18AppendOrMoveToLastIRS3_EENS8_9AddResultEOT_(%"class.WTF::ListHashSet.3211"*, %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16>::AllocatorProvider", %"class.WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16>::AllocatorProvider"* %3, i64 0, i32 0
  %5 = load %"struct.WTF::MallocedListHashSetAllocator.3218"*, %"struct.WTF::MallocedListHashSetAllocator.3218"** %4, align 8
  %6 = icmp eq %"struct.WTF::MallocedListHashSetAllocator.3218"* %5, null
  br i1 %6, label %7, label %14

7:                                                ; preds = %2
  %8 = tail call i8* @_Znwm(i64 400) #16
  %9 = getelementptr inbounds i8, i8* %8, i64 16
  %10 = bitcast i8* %8 to i8**
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds i8, i8* %8, i64 8
  store i8 0, i8* %11, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 384, i1 false) #15
  %12 = bitcast %"class.WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16>::AllocatorProvider"* %3 to i8**
  store i8* %8, i8** %12, align 8
  %13 = bitcast i8* %8 to %"struct.WTF::MallocedListHashSetAllocator.3218"*
  br label %14

14:                                               ; preds = %2, %7
  %15 = phi %"struct.WTF::MallocedListHashSetAllocator.3218"* [ %5, %2 ], [ %13, %7 ]
  %16 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %0, i64 0, i32 0
  %17 = tail call { %"class.WTF::MallocedListHashSetNode.3217"**, i8 } @_ZN3WTF9HashTableIPNS_23MallocedListHashSetNodeIPN5blink9LayoutBoxENS_28MallocedListHashSetAllocatorIS4_Lj16EEEEES8_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_7PtrHashIS3_EEEENS_17ListHashSetTraitsIS4_Lj16ES6_EESF_NS_18PartitionAllocatorEE6insertINS_21ListHashSetTranslatorISC_S7_EERS4_RS6_EENS_18HashTableAddResultISH_S8_EEOT0_OT1_(%"class.WTF::HashTable.3214"* %16, %"class.blink::LayoutBox"** dereferenceable(8) %1, %"struct.WTF::MallocedListHashSetAllocator.3218"* nonnull dereferenceable(400) %15)
  %18 = extractvalue { %"class.WTF::MallocedListHashSetNode.3217"**, i8 } %17, 0
  %19 = extractvalue { %"class.WTF::MallocedListHashSetNode.3217"**, i8 } %17, 1
  %20 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %18, align 8
  %21 = and i8 %19, 1
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %23, label %42

23:                                               ; preds = %14
  %24 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %20, i64 0, i32 1
  %25 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %24, align 8
  %26 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %25, null
  %27 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %20, i64 0, i32 2
  %28 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %25, i64 0, i32 2
  %31 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %0, i64 0, i32 1
  %32 = select i1 %26, %"class.WTF::MallocedListHashSetNode.3217"** %31, %"class.WTF::MallocedListHashSetNode.3217"** %30
  %33 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %32 to i64*
  store i64 %29, i64* %33, align 8
  %34 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %27, align 8
  %35 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %34, null
  %36 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %24 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %34, i64 0, i32 1
  %39 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %0, i64 0, i32 2
  %40 = select i1 %35, %"class.WTF::MallocedListHashSetNode.3217"** %39, %"class.WTF::MallocedListHashSetNode.3217"** %38
  %41 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %40 to i64*
  store i64 %37, i64* %41, align 8
  br label %42

42:                                               ; preds = %23, %14
  %43 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %0, i64 0, i32 2
  %44 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %20, i64 0, i32 1
  %47 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %20, i64 0, i32 2
  store %"class.WTF::MallocedListHashSetNode.3217"* null, %"class.WTF::MallocedListHashSetNode.3217"** %48, align 8
  %49 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %43, align 8
  %50 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %49, null
  %51 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %49, i64 0, i32 2
  %52 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %0, i64 0, i32 1
  %53 = select i1 %50, %"class.WTF::MallocedListHashSetNode.3217"** %52, %"class.WTF::MallocedListHashSetNode.3217"** %51
  store %"class.WTF::MallocedListHashSetNode.3217"* %20, %"class.WTF::MallocedListHashSetNode.3217"** %53, align 8
  store %"class.WTF::MallocedListHashSetNode.3217"* %20, %"class.WTF::MallocedListHashSetNode.3217"** %43, align 8
  %54 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %18, align 8
  %55 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %54, i64 0, i32 0
  %56 = insertvalue { %"class.blink::LayoutBox"**, i8 } undef, %"class.blink::LayoutBox"** %55, 0
  %57 = insertvalue { %"class.blink::LayoutBox"**, i8 } %56, i8 %21, 1
  ret { %"class.blink::LayoutBox"**, i8 } %57
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock22RemovePositionedObjectEPNS_9LayoutBoxE(%"class.blink::LayoutBox"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutBox"*, align 8
  %3 = alloca %"class.blink::LayoutBox"*, align 8
  %4 = alloca %"class.blink::LayoutBlock"*, align 8
  %5 = alloca %"class.blink::LayoutBlock"*, align 8
  store %"class.blink::LayoutBox"* %0, %"class.blink::LayoutBox"** %2, align 8
  %6 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink25GetPositionedContainerMapEvE5s_map to i8*) acquire, align 8
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %8, label %12, !prof !2

8:                                                ; preds = %1
  %9 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink25GetPositionedContainerMapEvE5s_map) #15
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %12, label %11

11:                                               ; preds = %8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink25GetPositionedContainerMapEvE5s_map) #15
  br label %12

12:                                               ; preds = %1, %8, %11
  %13 = bitcast %"class.blink::LayoutBox"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #15
  %14 = bitcast %"class.blink::LayoutBox"** %2 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.blink::LayoutBox"** %3 to i64*
  store i64 %15, i64* %16, align 8
  %17 = call { %"struct.WTF::KeyValuePair.3202"*, %"struct.WTF::KeyValuePair.3202"* } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_PNS1_11LayoutBlockEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.3199"* bitcast (%"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map to %"class.WTF::HashTable.3199"*), %"class.blink::LayoutBox"** nonnull dereferenceable(8) %3) #15
  %18 = extractvalue { %"struct.WTF::KeyValuePair.3202"*, %"struct.WTF::KeyValuePair.3202"* } %17, 0
  %19 = load %"struct.WTF::KeyValuePair.3202"*, %"struct.WTF::KeyValuePair.3202"** bitcast (%"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map to %"struct.WTF::KeyValuePair.3202"**), align 8
  %20 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %19, i64 %21
  %23 = icmp eq %"struct.WTF::KeyValuePair.3202"* %18, %22
  br i1 %23, label %24, label %25

24:                                               ; preds = %12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  br label %103

25:                                               ; preds = %12
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %18, i64 0, i32 1
  %27 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %26, align 8
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %18, i64 0, i32 0
  store %"class.blink::LayoutBox"* inttoptr (i64 -1 to %"class.blink::LayoutBox"*), %"class.blink::LayoutBox"** %28, align 8
  %29 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %30 = add i32 %29, 1
  %31 = and i32 %30, 2147483647
  %32 = and i32 %29, -2147483648
  %33 = or i32 %31, %32
  store i32 %33, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %34 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %35 = add i32 %34, -1
  store i32 %35, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %36 = mul i32 %35, 6
  %37 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton.3203", %"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %38 = icmp ult i32 %36, %37
  %39 = icmp ugt i32 %37, 8
  %40 = and i1 %38, %39
  br i1 %40, label %41, label %48

41:                                               ; preds = %25
  %42 = lshr i32 %37, 1
  %43 = zext i32 %42 to i64
  %44 = shl nuw nsw i64 %43, 4
  %45 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %44, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink9LayoutBoxEPNS2_11LayoutBlockEEEEEPKcv, i64 0, i64 0)) #15
  call void @llvm.memset.p0i8.i64(i8* align 1 %45, i8 0, i64 %44, i1 false) #15
  %46 = bitcast i8* %45 to %"struct.WTF::KeyValuePair.3202"*
  %47 = call %"struct.WTF::KeyValuePair.3202"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_PNS1_11LayoutBlockEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.3199"* bitcast (%"class.WTF::StaticSingleton.3203"* @_ZZN5blink25GetPositionedContainerMapEvE5s_map to %"class.WTF::HashTable.3199"*), %"struct.WTF::KeyValuePair.3202"* %46, i32 %42, %"struct.WTF::KeyValuePair.3202"* null) #15
  br label %48

48:                                               ; preds = %25, %41
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #15
  %49 = icmp eq %"class.blink::LayoutBlock"* %27, null
  br i1 %49, label %103, label %50

50:                                               ; preds = %48
  %51 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map to i8*) acquire, align 8
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %53, label %57, !prof !2

53:                                               ; preds = %50
  %54 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %57, label %56

56:                                               ; preds = %53
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  br label %57

57:                                               ; preds = %50, %53, %56
  %58 = bitcast %"class.blink::LayoutBlock"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %58) #15
  store %"class.blink::LayoutBlock"* %27, %"class.blink::LayoutBlock"** %4, align 8
  %59 = call %"class.WTF::ListHashSet.3211"* @_ZNK3WTF7HashMapIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS8_EENS_28MallocedListHashSetAllocatorIS9_Lj16EEEEENS5_14default_deleteISE_EEEENSA_IS3_EENS_10HashTraitsIS4_EENSJ_ISH_EENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.3191"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map to %"class.WTF::HashMap.3191"*), %"class.blink::LayoutBlock"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %58) #15
  call void @_ZN3WTF11ListHashSetIPN5blink9LayoutBoxELm16ENS_7PtrHashIS2_EENS_28MallocedListHashSetAllocatorIS3_Lj16EEEE5eraseERKS3_(%"class.WTF::ListHashSet.3211"* %59, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %2)
  %60 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %59, i64 0, i32 0, i32 2
  %61 = load i32, i32* %60, align 4
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %103

63:                                               ; preds = %57
  %64 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map to i8*) acquire, align 8
  %65 = icmp eq i8 %64, 0
  br i1 %65, label %66, label %70, !prof !2

66:                                               ; preds = %63
  %67 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %70, label %69

69:                                               ; preds = %66
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  br label %70

70:                                               ; preds = %63, %66, %69
  %71 = bitcast %"class.blink::LayoutBlock"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %71) #15
  store %"class.blink::LayoutBlock"* %27, %"class.blink::LayoutBlock"** %5, align 8
  %72 = call { %"struct.WTF::KeyValuePair.3195"*, %"struct.WTF::KeyValuePair.3195"* } @_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.3192"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map to %"class.WTF::HashTable.3192"*), %"class.blink::LayoutBlock"** nonnull dereferenceable(8) %5) #15
  %73 = extractvalue { %"struct.WTF::KeyValuePair.3195"*, %"struct.WTF::KeyValuePair.3195"* } %72, 0
  %74 = load %"struct.WTF::KeyValuePair.3195"*, %"struct.WTF::KeyValuePair.3195"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map to %"struct.WTF::KeyValuePair.3195"**), align 8
  %75 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %74, i64 %76
  %78 = icmp eq %"struct.WTF::KeyValuePair.3195"* %77, %73
  br i1 %78, label %99, label %79

79:                                               ; preds = %70
  call void @_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE12DeleteBucketERKSJ_(%"struct.WTF::KeyValuePair.3195"* dereferenceable(16) %73) #15
  %80 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %81 = add i32 %80, 1
  %82 = and i32 %81, 2147483647
  %83 = and i32 %80, -2147483648
  %84 = or i32 %82, %83
  store i32 %84, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %85 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %86 = add i32 %85, -1
  store i32 %86, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %87 = mul i32 %86, 6
  %88 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %89 = icmp ult i32 %87, %88
  %90 = icmp ugt i32 %88, 8
  %91 = and i1 %89, %90
  br i1 %91, label %92, label %99

92:                                               ; preds = %79
  %93 = lshr i32 %88, 1
  %94 = zext i32 %93 to i64
  %95 = shl nuw nsw i64 %94, 4
  %96 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %95, i8* getelementptr inbounds ([412 x i8], [412 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS2_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEEEEPKcv, i64 0, i64 0)) #15
  call void @llvm.memset.p0i8.i64(i8* align 1 %96, i8 0, i64 %95, i1 false) #15
  %97 = bitcast i8* %96 to %"struct.WTF::KeyValuePair.3195"*
  %98 = call %"struct.WTF::KeyValuePair.3195"* @_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE8RehashToEPSJ_jST_(%"class.WTF::HashTable.3192"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map to %"class.WTF::HashTable.3192"*), %"struct.WTF::KeyValuePair.3195"* %97, i32 %93, %"struct.WTF::KeyValuePair.3195"* null) #15
  br label %99

99:                                               ; preds = %70, %79, %92
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %71) #15
  %100 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %27, i64 0, i32 2
  %101 = load i16, i16* %100, align 8
  %102 = and i16 %101, -129
  store i16 %102, i16* %100, align 8
  br label %103

103:                                              ; preds = %24, %57, %99, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3195"*, i8 } @_ZN3WTF7HashMapIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS8_EENS_28MallocedListHashSetAllocatorIS9_Lj16EEEEENS5_14default_deleteISE_EEEENSA_IS3_EENS_10HashTraitsIS4_EENSJ_ISH_EENS_18PartitionAllocatorEE3SetIPS2_SH_EENS_18HashTableAddResultINS_9HashTableIS4_NS_12KeyValuePairIS4_SH_EENS_24KeyValuePairKeyExtractorESI_NS_18HashMapValueTraitsISK_SL_EESK_SM_EEST_EEOT_OT0_(%"class.WTF::HashMap.3191"*, %"class.blink::LayoutBlock"** dereferenceable(8), %"class.std::__1::unique_ptr.3208"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashMap.3191", %"class.WTF::HashMap.3191"* %0, i64 0, i32 0
  %5 = tail call { %"struct.WTF::KeyValuePair.3195"*, i8 } @_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISQ_SL_SR_EEPS2_SI_EENS_18HashTableAddResultISS_SJ_EEOT0_OT1_(%"class.WTF::HashTable.3192"* %4, %"class.blink::LayoutBlock"** dereferenceable(8) %1, %"class.std::__1::unique_ptr.3208"* dereferenceable(8) %2) #15
  %6 = extractvalue { %"struct.WTF::KeyValuePair.3195"*, i8 } %5, 1
  %7 = and i8 %6, 1
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %60

9:                                                ; preds = %3
  %10 = extractvalue { %"struct.WTF::KeyValuePair.3195"*, i8 } %5, 0
  %11 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %10, i64 0, i32 1
  %12 = getelementptr inbounds %"class.std::__1::unique_ptr.3208", %"class.std::__1::unique_ptr.3208"* %2, i64 0, i32 0, i32 0, i32 0
  %13 = bitcast %"class.std::__1::unique_ptr.3208"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  store %"class.WTF::ListHashSet.3211"* null, %"class.WTF::ListHashSet.3211"** %12, align 8
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.3208", %"class.std::__1::unique_ptr.3208"* %11, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::ListHashSet.3211"*, %"class.WTF::ListHashSet.3211"** %15, align 8
  %17 = bitcast %"class.std::__1::unique_ptr.3208"* %11 to i64*
  store i64 %14, i64* %17, align 8
  %18 = icmp eq %"class.WTF::ListHashSet.3211"* %16, null
  br i1 %18, label %60, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %16, i64 0, i32 0, i32 0
  %21 = load %"class.WTF::MallocedListHashSetNode.3217"**, %"class.WTF::MallocedListHashSetNode.3217"*** %20, align 8
  %22 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"** %21, null
  br i1 %22, label %25, label %23, !prof !3

23:                                               ; preds = %19
  %24 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %21 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %24) #15
  store %"class.WTF::MallocedListHashSetNode.3217"** null, %"class.WTF::MallocedListHashSetNode.3217"*** %20, align 8
  br label %25

25:                                               ; preds = %23, %19
  %26 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %16, i64 0, i32 1
  %27 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %26, align 8
  %28 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %27, null
  br i1 %28, label %52, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %16, i64 0, i32 3, i32 0
  br label %31

31:                                               ; preds = %50, %29
  %32 = phi %"class.WTF::MallocedListHashSetNode.3217"* [ %27, %29 ], [ %34, %50 ]
  %33 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %32, i64 0, i32 2
  %34 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %33, align 8
  %35 = load %"struct.WTF::MallocedListHashSetAllocator.3218"*, %"struct.WTF::MallocedListHashSetAllocator.3218"** %30, align 8
  %36 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %35, i64 0, i32 3, i64 0
  %37 = bitcast i8* %36 to %"class.WTF::MallocedListHashSetNode.3217"*
  %38 = icmp uge %"class.WTF::MallocedListHashSetNode.3217"* %32, %37
  %39 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %35, i64 0, i32 3, i64 384
  %40 = bitcast i8* %39 to %"class.WTF::MallocedListHashSetNode.3217"*
  %41 = icmp ult %"class.WTF::MallocedListHashSetNode.3217"* %32, %40
  %42 = and i1 %41, %38
  br i1 %42, label %43, label %48

43:                                               ; preds = %31
  %44 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %35, i64 0, i32 0
  %45 = bitcast %"struct.WTF::MallocedListHashSetAllocator.3218"* %35 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %33 to i64*
  store i64 %46, i64* %47, align 8
  store %"class.WTF::MallocedListHashSetNode.3217"* %32, %"class.WTF::MallocedListHashSetNode.3217"** %44, align 8
  br label %50

48:                                               ; preds = %31
  %49 = bitcast %"class.WTF::MallocedListHashSetNode.3217"* %32 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %49) #15
  br label %50

50:                                               ; preds = %48, %43
  %51 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %34, null
  br i1 %51, label %52, label %31

52:                                               ; preds = %50, %25
  %53 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %16, i64 0, i32 3, i32 0
  %54 = load %"struct.WTF::MallocedListHashSetAllocator.3218"*, %"struct.WTF::MallocedListHashSetAllocator.3218"** %53, align 8
  %55 = icmp eq %"struct.WTF::MallocedListHashSetAllocator.3218"* %54, null
  br i1 %55, label %58, label %56

56:                                               ; preds = %52
  %57 = bitcast %"struct.WTF::MallocedListHashSetAllocator.3218"* %54 to i8*
  tail call void @_ZdlPv(i8* %57) #16
  br label %58

58:                                               ; preds = %52, %56
  store %"struct.WTF::MallocedListHashSetAllocator.3218"* null, %"struct.WTF::MallocedListHashSetAllocator.3218"** %53, align 8
  %59 = bitcast %"class.WTF::ListHashSet.3211"* %16 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %59) #15
  br label %60

60:                                               ; preds = %58, %9, %3
  ret { %"struct.WTF::KeyValuePair.3195"*, i8 } %5
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF11ListHashSetIPN5blink9LayoutBoxELm16ENS_7PtrHashIS2_EENS_28MallocedListHashSetAllocatorIS3_Lj16EEEE5eraseERKS3_(%"class.WTF::ListHashSet.3211"*, %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %0, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::MallocedListHashSetNode.3217"**, %"class.WTF::MallocedListHashSetNode.3217"*** %3, align 8
  %5 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"** %4, null
  %6 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %68, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = inttoptr i64 %12 to %"class.blink::LayoutBox"*
  %35 = xor i32 %31, -1
  %36 = lshr i32 %31, 23
  %37 = add i32 %36, %35
  %38 = shl i32 %37, 12
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 7
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 2
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 20
  %45 = xor i32 %44, %43
  %46 = or i32 %45, 1
  %47 = zext i32 %46 to i64
  br label %48

48:                                               ; preds = %58, %8
  %49 = phi i64 [ 0, %8 ], [ %60, %58 ]
  %50 = phi i64 [ %33, %8 ], [ %62, %58 ]
  %51 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %4, i64 %50
  %52 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %51, align 8
  %53 = ptrtoint %"class.WTF::MallocedListHashSetNode.3217"* %52 to i64
  switch i64 %53, label %54 [
    i64 0, label %68
    i64 -1, label %58
  ]

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %52, i64 0, i32 0
  %56 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %55, align 8
  %57 = icmp eq %"class.blink::LayoutBox"* %56, %34
  br i1 %57, label %63, label %58

58:                                               ; preds = %54, %48
  %59 = icmp eq i64 %49, 0
  %60 = select i1 %59, i64 %47, i64 %49
  %61 = add i64 %60, %50
  %62 = and i64 %61, %10
  br label %48

63:                                               ; preds = %54
  %64 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %4, i64 %50
  %65 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"** %64, null
  br i1 %65, label %68, label %66

66:                                               ; preds = %63
  %67 = zext i32 %7 to i64
  br label %71

68:                                               ; preds = %48, %63, %2
  %69 = zext i32 %7 to i64
  %70 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %4, i64 %69
  br label %71

71:                                               ; preds = %68, %66
  %72 = phi i64 [ %67, %66 ], [ %69, %68 ]
  %73 = phi %"class.WTF::MallocedListHashSetNode.3217"** [ %64, %66 ], [ %70, %68 ]
  %74 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %4, i64 %72
  %75 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"** %73, %74
  br i1 %75, label %78, label %76

76:                                               ; preds = %71
  %77 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %73, align 8
  br label %78

78:                                               ; preds = %71, %76
  %79 = phi %"class.WTF::MallocedListHashSetNode.3217"* [ %77, %76 ], [ null, %71 ]
  tail call void @_ZN3WTF11ListHashSetIPN5blink9LayoutBoxELm16ENS_7PtrHashIS2_EENS_28MallocedListHashSetAllocatorIS3_Lj16EEEE5eraseENS_19ListHashSetIteratorIS8_EE(%"class.WTF::ListHashSet.3211"* %0, %"class.WTF::ListHashSet.3211"* %0, %"class.WTF::MallocedListHashSetNode.3217"* %79)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11LayoutBlock35IsAnonymousNGFieldsetContentWrapperEv(%"class.blink::LayoutBlock"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  %4 = icmp eq %"class.blink::LayoutObject"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::LayoutObject"* %3 to i1 (%"class.blink::LayoutObject"*, i32)***
  %7 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %7, i64 92
  %9 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::LayoutObject"* nonnull %3, i32 25) #15
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi i1 [ false, %1 ], [ %10, %5 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11LayoutBlock15InvalidatePaintERKNS_23PaintInvalidatorContextE(%"class.blink::LayoutBlock"*, %"struct.blink::PaintInvalidatorContext"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::BlockPaintInvalidator", align 8
  %4 = bitcast %"class.blink::BlockPaintInvalidator"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #15
  %5 = getelementptr inbounds %"class.blink::BlockPaintInvalidator", %"class.blink::BlockPaintInvalidator"* %3, i64 0, i32 0
  store %"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBlock"** %5, align 8
  call void @_ZN5blink21BlockPaintInvalidator15InvalidatePaintERKNS_23PaintInvalidatorContextE(%"class.blink::BlockPaintInvalidator"* nonnull %3, %"struct.blink::PaintInvalidatorContext"* %1) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #15
  ret void
}

declare void @_ZN5blink21BlockPaintInvalidator15InvalidatePaintERKNS_23PaintInvalidatorContextE(%"class.blink::BlockPaintInvalidator"*, %"struct.blink::PaintInvalidatorContext"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutBlock"*, i8*, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  tail call void @_ZN5blink9LayoutBox12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutBox"* %4, i8* %1, i32 %2) #15
  %5 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 1
  %11 = icmp eq i160 %10, 0
  br i1 %11, label %80, label %12

12:                                               ; preds = %3
  %13 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %14 = tail call %"class.blink::ComputedStyle"* @_ZNK5blink13ComputedStyle27GetCachedPseudoElementStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::ComputedStyle"* %6, i8 zeroext 1, %"class.WTF::AtomicString"* dereferenceable(8) %13) #15
  %15 = icmp eq %"class.blink::ComputedStyle"* %14, null
  br i1 %15, label %80, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %18 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %17 to i96*
  %19 = load i96, i96* %18, align 4
  %20 = and i96 %19, 17592186044416
  %21 = icmp eq i96 %20, 0
  br i1 %21, label %24, label %22

22:                                               ; preds = %16
  %23 = bitcast %"class.blink::LayoutBlock"* %0 to %"class.blink::LayoutBlockFlow"*
  br label %55

24:                                               ; preds = %16
  %25 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1, i32 0
  %26 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  %27 = icmp eq %"class.blink::LayoutObject"* %26, null
  br i1 %27, label %80, label %28

28:                                               ; preds = %24, %48
  %29 = phi %"class.blink::LayoutObject"* [ %51, %48 ], [ %26, %24 ]
  %30 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 0, i32 4
  %31 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %30 to i96*
  %32 = load i96, i96* %31, align 4
  %33 = and i96 %32, 8388608
  %34 = icmp ne i96 %33, 0
  %35 = and i96 %32, 113336795588871485128704
  %36 = icmp eq i96 %35, 75557863725914323419136
  %37 = or i1 %36, %34
  br i1 %37, label %80, label %38

38:                                               ; preds = %28
  %39 = bitcast %"class.blink::LayoutObject"* %29 to i1 (%"class.blink::LayoutObject"*)***
  %40 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %39, align 8
  %41 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %40, i64 24
  %42 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %41, align 8
  %43 = tail call zeroext i1 %42(%"class.blink::LayoutObject"* nonnull %29) #15
  br i1 %43, label %44, label %80

44:                                               ; preds = %38
  %45 = load i96, i96* %31, align 4
  %46 = and i96 %45, 17592186044416
  %47 = icmp eq i96 %46, 0
  br i1 %47, label %48, label %53

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %29, i64 2, i32 6
  %50 = bitcast %"class.blink::UntracedMember"* %49 to %"class.blink::LayoutObject"**
  %51 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %50, align 8
  %52 = icmp eq %"class.blink::LayoutObject"* %51, null
  br i1 %52, label %80, label %28

53:                                               ; preds = %44
  %54 = bitcast %"class.blink::LayoutObject"* %29 to %"class.blink::LayoutBlockFlow"*
  br label %55

55:                                               ; preds = %53, %22
  %56 = phi %"class.blink::LayoutBlockFlow"* [ %23, %22 ], [ %54, %53 ]
  %57 = icmp eq %"class.blink::LayoutBlockFlow"* %56, null
  br i1 %57, label %80, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 6, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleBackgroundData"*, %"class.blink::ComputedStyleBase::StyleBackgroundData"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %60, i64 0, i32 2
  %62 = icmp eq %"class.blink::FillLayer"* %61, null
  br i1 %62, label %80, label %63

63:                                               ; preds = %58, %76
  %64 = phi %"class.blink::FillLayer"* [ %78, %76 ], [ %61, %58 ]
  %65 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %64, i64 0, i32 1, i32 0, i32 0
  %66 = load %"class.blink::StyleImage"*, %"class.blink::StyleImage"** %65, align 8
  %67 = icmp eq %"class.blink::StyleImage"* %66, null
  br i1 %67, label %76, label %68

68:                                               ; preds = %63
  %69 = bitcast %"class.blink::StyleImage"* %66 to i8* (%"class.blink::StyleImage"*)***
  %70 = load i8* (%"class.blink::StyleImage"*)**, i8* (%"class.blink::StyleImage"*)*** %69, align 8
  %71 = getelementptr inbounds i8* (%"class.blink::StyleImage"*)*, i8* (%"class.blink::StyleImage"*)** %70, i64 12
  %72 = load i8* (%"class.blink::StyleImage"*)*, i8* (%"class.blink::StyleImage"*)** %71, align 8
  %73 = tail call i8* %72(%"class.blink::StyleImage"* nonnull %66) #15
  %74 = icmp eq i8* %73, %1
  br i1 %74, label %75, label %76

75:                                               ; preds = %68
  tail call void @_ZN5blink15LayoutBlockFlow44SetShouldDoFullPaintInvalidationForFirstLineEv(%"class.blink::LayoutBlockFlow"* nonnull %56) #15
  br label %80

76:                                               ; preds = %63, %68
  %77 = getelementptr inbounds %"class.blink::FillLayer", %"class.blink::FillLayer"* %64, i64 0, i32 0
  %78 = load %"class.blink::FillLayer"*, %"class.blink::FillLayer"** %77, align 8
  %79 = icmp eq %"class.blink::FillLayer"* %78, null
  br i1 %79, label %80, label %63

80:                                               ; preds = %48, %28, %38, %76, %58, %3, %24, %12, %75, %55
  ret void
}

declare void @_ZN5blink9LayoutBox12ImageChangedEPvNS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutBox"*, i8*, i32) unnamed_addr #3

declare %"class.blink::ComputedStyle"* @_ZNK5blink13ComputedStyle27GetCachedPseudoElementStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::ComputedStyle"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutBlockFlow"* @_ZN5blink11LayoutBlock30NearestInnerBlockWithFirstLineEv(%"class.blink::LayoutBlock"* readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 17592186044416
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %9, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::LayoutBlock"* %0 to %"class.blink::LayoutBlockFlow"*
  ret %"class.blink::LayoutBlockFlow"* %8

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1, i32 0
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = icmp eq %"class.blink::LayoutObject"* %11, null
  br i1 %12, label %40, label %13

13:                                               ; preds = %9, %33
  %14 = phi %"class.blink::LayoutObject"* [ %36, %33 ], [ %11, %9 ]
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 4
  %16 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %15 to i96*
  %17 = load i96, i96* %16, align 4
  %18 = and i96 %17, 8388608
  %19 = icmp ne i96 %18, 0
  %20 = and i96 %17, 113336795588871485128704
  %21 = icmp eq i96 %20, 75557863725914323419136
  %22 = or i1 %21, %19
  br i1 %22, label %40, label %23

23:                                               ; preds = %13
  %24 = bitcast %"class.blink::LayoutObject"* %14 to i1 (%"class.blink::LayoutObject"*)***
  %25 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %25, i64 24
  %27 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::LayoutObject"* nonnull %14) #15
  br i1 %28, label %29, label %40

29:                                               ; preds = %23
  %30 = load i96, i96* %16, align 4
  %31 = and i96 %30, 17592186044416
  %32 = icmp eq i96 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 2, i32 6
  %35 = bitcast %"class.blink::UntracedMember"* %34 to %"class.blink::LayoutObject"**
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = icmp eq %"class.blink::LayoutObject"* %36, null
  br i1 %37, label %40, label %13

38:                                               ; preds = %29
  %39 = bitcast %"class.blink::LayoutObject"* %14 to %"class.blink::LayoutBlockFlow"*
  br label %40

40:                                               ; preds = %33, %13, %23, %9, %38
  %41 = phi %"class.blink::LayoutBlockFlow"* [ %39, %38 ], [ null, %9 ], [ null, %23 ], [ null, %13 ], [ null, %33 ]
  ret %"class.blink::LayoutBlockFlow"* %41
}

declare void @_ZN5blink15LayoutBlockFlow44SetShouldDoFullPaintInvalidationForFirstLineEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink12LayoutObject14IsDescendantOfEPKS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) local_unnamed_addr #3

declare void @_ZN5blink30DisableCompositingQueryAssertsC1Ev(%"class.blink::DisableCompositingQueryAsserts"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink12LayoutObject28IsPaintInvalidationContainerEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3

declare void @_ZN5blink22ObjectPaintInvalidator49InvalidatePaintIncludingNonCompositingDescendantsEv(%"class.blink::ObjectPaintInvalidator"*) local_unnamed_addr #3

declare void @_ZN5blink12LayoutObject38MarkParentForOutOfFlowPositionedChangeEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3

declare %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject34ContainingBlockForAbsolutePositionEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock26AddPercentHeightDescendantEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::LayoutBox"*, align 8
  %4 = alloca %"class.blink::LayoutBlock"*, align 8
  %5 = alloca %"class.blink::LayoutBlock"*, align 8
  %6 = alloca %"class.std::__1::unique_ptr.3208", align 8
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %3, align 8
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %8 = tail call %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %7, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #15
  %9 = bitcast %"class.blink::LayoutObject"* %8 to i1 (%"class.blink::LayoutObject"*, i32)***
  %10 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %10, i64 92
  %12 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutObject"* %8, i32 39) #15
  br i1 %13, label %148, label %14, !prof !4

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 12, i32 0, i32 0
  %16 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %15, align 8
  %17 = icmp eq %"struct.blink::LayoutBoxRareData"* %16, null
  br i1 %17, label %25, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %16, i64 0, i32 9
  %20 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %19, align 8
  %21 = icmp eq %"class.blink::LayoutBlock"* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %18
  %23 = icmp eq %"class.blink::LayoutBlock"* %20, %0
  br i1 %23, label %148, label %24

24:                                               ; preds = %22
  tail call void @_ZN5blink9LayoutBox32RemoveFromPercentHeightContainerEv(%"class.blink::LayoutBox"* %1) #15
  br label %25

25:                                               ; preds = %14, %18, %24
  tail call void @_ZN5blink9LayoutBox25SetPercentHeightContainerEPNS_11LayoutBlockE(%"class.blink::LayoutBox"* %1, %"class.blink::LayoutBlock"* %0) #15
  %26 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %7, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #15
  %27 = icmp eq %"class.blink::LayoutBlock"* %26, null
  br i1 %27, label %39, label %28

28:                                               ; preds = %25, %35
  %29 = phi %"class.blink::LayoutBlock"* [ %37, %35 ], [ %26, %25 ]
  %30 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %29, i64 0, i32 0, i32 0, i32 0, i32 4
  %31 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %30 to i96*
  %32 = load i96, i96* %31, align 4
  %33 = or i96 %32, 4096
  store i96 %33, i96* %31, align 4
  %34 = icmp eq %"class.blink::LayoutBlock"* %29, %0
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %29, i64 0, i32 0, i32 0, i32 0
  %37 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %36, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #15
  %38 = icmp eq %"class.blink::LayoutBlock"* %37, null
  br i1 %38, label %39, label %28

39:                                               ; preds = %28, %35, %25
  %40 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map to i8*) acquire, align 8
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %46, !prof !2

42:                                               ; preds = %39
  %43 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map) #15
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %46, label %45

45:                                               ; preds = %42
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map) #15
  br label %46

46:                                               ; preds = %39, %42, %45
  %47 = bitcast %"class.blink::LayoutBlock"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #15
  store %"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBlock"** %4, align 8
  %48 = call %"class.WTF::ListHashSet.3211"* @_ZNK3WTF7HashMapIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS8_EENS_28MallocedListHashSetAllocatorIS9_Lj16EEEEENS5_14default_deleteISE_EEEENSA_IS3_EENS_10HashTraitsIS4_EENSJ_ISH_EENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.3191"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map to %"class.WTF::HashMap.3191"*), %"class.blink::LayoutBlock"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #15
  %49 = icmp eq %"class.WTF::ListHashSet.3211"* %48, null
  br i1 %49, label %50, label %110

50:                                               ; preds = %46
  %51 = call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 48, i8* getelementptr inbounds ([180 x i8], [180 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_11ListHashSetIPN5blink9LayoutBoxELm16ENS_7PtrHashIS3_EENS_28MallocedListHashSetAllocatorIS4_Lj16EEEEEEEPKcv, i64 0, i64 0)) #15
  %52 = bitcast i8* %51 to %"class.WTF::ListHashSet.3211"*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 20, i1 false) #15
  %53 = getelementptr inbounds i8, i8* %51, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #15
  %54 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map to i8*) acquire, align 8
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %56, label %60, !prof !2

56:                                               ; preds = %50
  %57 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map) #15
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59

59:                                               ; preds = %56
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map) #15
  br label %60

60:                                               ; preds = %50, %56, %59
  %61 = bitcast %"class.blink::LayoutBlock"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #15
  store %"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBlock"** %5, align 8
  %62 = bitcast %"class.std::__1::unique_ptr.3208"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #15
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.3208", %"class.std::__1::unique_ptr.3208"* %6, i64 0, i32 0, i32 0, i32 0
  %64 = bitcast %"class.std::__1::unique_ptr.3208"* %6 to i8**
  store i8* %51, i8** %64, align 8
  %65 = call { %"struct.WTF::KeyValuePair.3195"*, i8 } @_ZN3WTF7HashMapIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS8_EENS_28MallocedListHashSetAllocatorIS9_Lj16EEEEENS5_14default_deleteISE_EEEENSA_IS3_EENS_10HashTraitsIS4_EENSJ_ISH_EENS_18PartitionAllocatorEE3SetIPS2_SH_EENS_18HashTableAddResultINS_9HashTableIS4_NS_12KeyValuePairIS4_SH_EENS_24KeyValuePairKeyExtractorESI_NS_18HashMapValueTraitsISK_SL_EESK_SM_EEST_EEOT_OT0_(%"class.WTF::HashMap.3191"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map to %"class.WTF::HashMap.3191"*), %"class.blink::LayoutBlock"** nonnull dereferenceable(8) %5, %"class.std::__1::unique_ptr.3208"* nonnull dereferenceable(8) %6)
  %66 = load %"class.WTF::ListHashSet.3211"*, %"class.WTF::ListHashSet.3211"** %63, align 8
  store %"class.WTF::ListHashSet.3211"* null, %"class.WTF::ListHashSet.3211"** %63, align 8
  %67 = icmp eq %"class.WTF::ListHashSet.3211"* %66, null
  br i1 %67, label %109, label %68

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %66, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::MallocedListHashSetNode.3217"**, %"class.WTF::MallocedListHashSetNode.3217"*** %69, align 8
  %71 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"** %70, null
  br i1 %71, label %74, label %72, !prof !3

72:                                               ; preds = %68
  %73 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %70 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %73) #15
  store %"class.WTF::MallocedListHashSetNode.3217"** null, %"class.WTF::MallocedListHashSetNode.3217"*** %69, align 8
  br label %74

74:                                               ; preds = %72, %68
  %75 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %66, i64 0, i32 1
  %76 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %75, align 8
  %77 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %76, null
  br i1 %77, label %101, label %78

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %66, i64 0, i32 3, i32 0
  br label %80

80:                                               ; preds = %99, %78
  %81 = phi %"class.WTF::MallocedListHashSetNode.3217"* [ %76, %78 ], [ %83, %99 ]
  %82 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %81, i64 0, i32 2
  %83 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %82, align 8
  %84 = load %"struct.WTF::MallocedListHashSetAllocator.3218"*, %"struct.WTF::MallocedListHashSetAllocator.3218"** %79, align 8
  %85 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %84, i64 0, i32 3, i64 0
  %86 = bitcast i8* %85 to %"class.WTF::MallocedListHashSetNode.3217"*
  %87 = icmp uge %"class.WTF::MallocedListHashSetNode.3217"* %81, %86
  %88 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %84, i64 0, i32 3, i64 384
  %89 = bitcast i8* %88 to %"class.WTF::MallocedListHashSetNode.3217"*
  %90 = icmp ult %"class.WTF::MallocedListHashSetNode.3217"* %81, %89
  %91 = and i1 %90, %87
  br i1 %91, label %92, label %97

92:                                               ; preds = %80
  %93 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %84, i64 0, i32 0
  %94 = bitcast %"struct.WTF::MallocedListHashSetAllocator.3218"* %84 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %82 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.WTF::MallocedListHashSetNode.3217"* %81, %"class.WTF::MallocedListHashSetNode.3217"** %93, align 8
  br label %99

97:                                               ; preds = %80
  %98 = bitcast %"class.WTF::MallocedListHashSetNode.3217"* %81 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %98) #15
  br label %99

99:                                               ; preds = %97, %92
  %100 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %83, null
  br i1 %100, label %101, label %80

101:                                              ; preds = %99, %74
  %102 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %66, i64 0, i32 3, i32 0
  %103 = load %"struct.WTF::MallocedListHashSetAllocator.3218"*, %"struct.WTF::MallocedListHashSetAllocator.3218"** %102, align 8
  %104 = icmp eq %"struct.WTF::MallocedListHashSetAllocator.3218"* %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %101
  %106 = bitcast %"struct.WTF::MallocedListHashSetAllocator.3218"* %103 to i8*
  call void @_ZdlPv(i8* %106) #16
  br label %107

107:                                              ; preds = %101, %105
  store %"struct.WTF::MallocedListHashSetAllocator.3218"* null, %"struct.WTF::MallocedListHashSetAllocator.3218"** %102, align 8
  %108 = bitcast %"class.WTF::ListHashSet.3211"* %66 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %108) #15
  br label %109

109:                                              ; preds = %60, %107
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #15
  br label %110

110:                                              ; preds = %46, %109
  %111 = phi %"class.WTF::ListHashSet.3211"* [ %48, %46 ], [ %52, %109 ]
  %112 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %111, i64 0, i32 3
  %113 = getelementptr inbounds %"class.WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16>::AllocatorProvider", %"class.WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16>::AllocatorProvider"* %112, i64 0, i32 0
  %114 = load %"struct.WTF::MallocedListHashSetAllocator.3218"*, %"struct.WTF::MallocedListHashSetAllocator.3218"** %113, align 8
  %115 = icmp eq %"struct.WTF::MallocedListHashSetAllocator.3218"* %114, null
  br i1 %115, label %116, label %123

116:                                              ; preds = %110
  %117 = call i8* @_Znwm(i64 400) #16
  %118 = getelementptr inbounds i8, i8* %117, i64 16
  %119 = bitcast i8* %117 to i8**
  store i8* %118, i8** %119, align 8
  %120 = getelementptr inbounds i8, i8* %117, i64 8
  store i8 0, i8* %120, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %118, i8 0, i64 384, i1 false) #15
  %121 = bitcast %"class.WTF::MallocedListHashSetAllocator<blink::LayoutBox *, 16>::AllocatorProvider"* %112 to i8**
  store i8* %117, i8** %121, align 8
  %122 = bitcast i8* %117 to %"struct.WTF::MallocedListHashSetAllocator.3218"*
  br label %123

123:                                              ; preds = %116, %110
  %124 = phi %"struct.WTF::MallocedListHashSetAllocator.3218"* [ %114, %110 ], [ %122, %116 ]
  %125 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %111, i64 0, i32 0
  %126 = call { %"class.WTF::MallocedListHashSetNode.3217"**, i8 } @_ZN3WTF9HashTableIPNS_23MallocedListHashSetNodeIPN5blink9LayoutBoxENS_28MallocedListHashSetAllocatorIS4_Lj16EEEEES8_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_7PtrHashIS3_EEEENS_17ListHashSetTraitsIS4_Lj16ES6_EESF_NS_18PartitionAllocatorEE6insertINS_21ListHashSetTranslatorISC_S7_EERS4_RS6_EENS_18HashTableAddResultISH_S8_EEOT0_OT1_(%"class.WTF::HashTable.3214"* %125, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %3, %"struct.WTF::MallocedListHashSetAllocator.3218"* nonnull dereferenceable(400) %124) #15
  %127 = extractvalue { %"class.WTF::MallocedListHashSetNode.3217"**, i8 } %126, 1
  %128 = and i8 %127, 1
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %144, label %130

130:                                              ; preds = %123
  %131 = extractvalue { %"class.WTF::MallocedListHashSetNode.3217"**, i8 } %126, 0
  %132 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %131, align 8
  %133 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %111, i64 0, i32 2
  %134 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %133 to i64*
  %135 = load i64, i64* %134, align 8
  %136 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %132, i64 0, i32 1
  %137 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %136 to i64*
  store i64 %135, i64* %137, align 8
  %138 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %132, i64 0, i32 2
  store %"class.WTF::MallocedListHashSetNode.3217"* null, %"class.WTF::MallocedListHashSetNode.3217"** %138, align 8
  %139 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %133, align 8
  %140 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %139, null
  %141 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %111, i64 0, i32 1
  %142 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %139, i64 0, i32 2
  %143 = select i1 %140, %"class.WTF::MallocedListHashSetNode.3217"** %141, %"class.WTF::MallocedListHashSetNode.3217"** %142
  store %"class.WTF::MallocedListHashSetNode.3217"* %132, %"class.WTF::MallocedListHashSetNode.3217"** %143, align 8
  store %"class.WTF::MallocedListHashSetNode.3217"* %132, %"class.WTF::MallocedListHashSetNode.3217"** %133, align 8
  br label %144

144:                                              ; preds = %123, %130
  %145 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 2
  %146 = load i16, i16* %145, align 8
  %147 = or i16 %146, 256
  store i16 %147, i16* %145, align 8
  br label %148

148:                                              ; preds = %22, %2, %144
  ret void
}

declare %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject9ContainerEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject::AncestorSkipInfo"*) local_unnamed_addr #3

declare void @_ZN5blink9LayoutBox32RemoveFromPercentHeightContainerEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock29RemovePercentHeightDescendantEPNS_9LayoutBoxE(%"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::LayoutBlock"*, align 8
  %4 = alloca %"class.blink::LayoutBox"*, align 8
  %5 = alloca %"class.blink::LayoutBlock"*, align 8
  store %"class.blink::LayoutBox"* %1, %"class.blink::LayoutBox"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 2
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 256
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %65, label %10

10:                                               ; preds = %2
  %11 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map to i8*) acquire, align 8
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %17, !prof !2

13:                                               ; preds = %10
  %14 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map) #15
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %13
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map) #15
  br label %17

17:                                               ; preds = %10, %13, %16
  %18 = bitcast %"class.blink::LayoutBlock"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #15
  store %"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBlock"** %3, align 8
  %19 = call %"class.WTF::ListHashSet.3211"* @_ZNK3WTF7HashMapIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS8_EENS_28MallocedListHashSetAllocatorIS9_Lj16EEEEENS5_14default_deleteISE_EEEENSA_IS3_EENS_10HashTraitsIS4_EENSJ_ISH_EENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.3191"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map to %"class.WTF::HashMap.3191"*), %"class.blink::LayoutBlock"** nonnull dereferenceable(8) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #15
  %20 = icmp eq %"class.WTF::ListHashSet.3211"* %19, null
  br i1 %20, label %65, label %21

21:                                               ; preds = %17
  call void @_ZN3WTF11ListHashSetIPN5blink9LayoutBoxELm16ENS_7PtrHashIS2_EENS_28MallocedListHashSetAllocatorIS3_Lj16EEEE5eraseERKS3_(%"class.WTF::ListHashSet.3211"* nonnull %19, %"class.blink::LayoutBox"** nonnull dereferenceable(8) %4)
  %22 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %4, align 8
  call void @_ZN5blink9LayoutBox25SetPercentHeightContainerEPNS_11LayoutBlockE(%"class.blink::LayoutBox"* %22, %"class.blink::LayoutBlock"* null) #15
  %23 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %19, i64 0, i32 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %65

26:                                               ; preds = %21
  %27 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map to i8*) acquire, align 8
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %33, !prof !2

29:                                               ; preds = %26
  %30 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map) #15
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32

32:                                               ; preds = %29
  call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map) #15
  br label %33

33:                                               ; preds = %26, %29, %32
  %34 = bitcast %"class.blink::LayoutBlock"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #15
  store %"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBlock"** %5, align 8
  %35 = call { %"struct.WTF::KeyValuePair.3195"*, %"struct.WTF::KeyValuePair.3195"* } @_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.3192"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map to %"class.WTF::HashTable.3192"*), %"class.blink::LayoutBlock"** nonnull dereferenceable(8) %5) #15
  %36 = extractvalue { %"struct.WTF::KeyValuePair.3195"*, %"struct.WTF::KeyValuePair.3195"* } %35, 0
  %37 = load %"struct.WTF::KeyValuePair.3195"*, %"struct.WTF::KeyValuePair.3195"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map to %"struct.WTF::KeyValuePair.3195"**), align 8
  %38 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %37, i64 %39
  %41 = icmp eq %"struct.WTF::KeyValuePair.3195"* %40, %36
  br i1 %41, label %62, label %42

42:                                               ; preds = %33
  call void @_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE12DeleteBucketERKSJ_(%"struct.WTF::KeyValuePair.3195"* dereferenceable(16) %36) #15
  %43 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %44 = add i32 %43, 1
  %45 = and i32 %44, 2147483647
  %46 = and i32 %43, -2147483648
  %47 = or i32 %45, %46
  store i32 %47, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 16) to i32*), align 8
  %48 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %49 = add i32 %48, -1
  store i32 %49, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 12) to i32*), align 4
  %50 = mul i32 %49, 6
  %51 = load i32, i32* bitcast (i8* getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 8) to i32*), align 8
  %52 = icmp ult i32 %50, %51
  %53 = icmp ugt i32 %51, 8
  %54 = and i1 %52, %53
  br i1 %54, label %55, label %62

55:                                               ; preds = %42
  %56 = lshr i32 %51, 1
  %57 = zext i32 %56 to i64
  %58 = shl nuw nsw i64 %57, 4
  %59 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %58, i8* getelementptr inbounds ([412 x i8], [412 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS2_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEEEEPKcv, i64 0, i64 0)) #15
  call void @llvm.memset.p0i8.i64(i8* align 1 %59, i8 0, i64 %58, i1 false) #15
  %60 = bitcast i8* %59 to %"struct.WTF::KeyValuePair.3195"*
  %61 = call %"struct.WTF::KeyValuePair.3195"* @_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE8RehashToEPSJ_jST_(%"class.WTF::HashTable.3192"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map to %"class.WTF::HashTable.3192"*), %"struct.WTF::KeyValuePair.3195"* %60, i32 %56, %"struct.WTF::KeyValuePair.3195"* null) #15
  br label %62

62:                                               ; preds = %33, %42, %55
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #15
  %63 = load i16, i16* %6, align 8
  %64 = and i16 %63, -257
  store i16 %64, i16* %6, align 8
  br label %65

65:                                               ; preds = %2, %17, %21, %62
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::ListHashSet.3211"* @_ZNK5blink11LayoutBlock32PercentHeightDescendantsInternalEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutBlock"*, align 8
  %3 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map to i8*) acquire, align 8
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %9, !prof !2

5:                                                ; preds = %1
  %6 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map) #15
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %9, label %8

8:                                                ; preds = %5
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map) #15
  br label %9

9:                                                ; preds = %1, %5, %8
  %10 = bitcast %"class.blink::LayoutBlock"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #15
  store %"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBlock"** %2, align 8
  %11 = call %"class.WTF::ListHashSet.3211"* @_ZNK3WTF7HashMapIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS8_EENS_28MallocedListHashSetAllocatorIS9_Lj16EEEEENS5_14default_deleteISE_EEEENSA_IS3_EENS_10HashTraitsIS4_EENSJ_ISH_EENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.3191"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map to %"class.WTF::HashMap.3191"*), %"class.blink::LayoutBlock"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #15
  ret %"class.WTF::ListHashSet.3211"* %11
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock45DirtyForLayoutFromPercentageHeightDescendantsERNS_18SubtreeLayoutScopeE(%"class.blink::LayoutBlock"*, %"class.blink::SubtreeLayoutScope"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::LayoutBlock"*, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 2
  %5 = load i16, i16* %4, align 8
  %6 = and i16 %5, 256
  %7 = icmp eq i16 %6, 0
  br i1 %7, label %47, label %8

8:                                                ; preds = %2
  %9 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map to i8*) acquire, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %15, !prof !2

11:                                               ; preds = %8
  %12 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map) #15
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %15, label %14

14:                                               ; preds = %11
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map) #15
  br label %15

15:                                               ; preds = %8, %11, %14
  %16 = bitcast %"class.blink::LayoutBlock"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  store %"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBlock"** %3, align 8
  %17 = call %"class.WTF::ListHashSet.3211"* @_ZNK3WTF7HashMapIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS8_EENS_28MallocedListHashSetAllocatorIS9_Lj16EEEEENS5_14default_deleteISE_EEEENSA_IS3_EENS_10HashTraitsIS4_EENSJ_ISH_EENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.3191"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL30GetPercentHeightDescendantsMapEvE5s_map to %"class.WTF::HashMap.3191"*), %"class.blink::LayoutBlock"** nonnull dereferenceable(8) %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  %18 = icmp eq %"class.WTF::ListHashSet.3211"* %17, null
  br i1 %18, label %47, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %17, i64 0, i32 1
  %21 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %20, align 8
  %22 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %21, null
  br i1 %22, label %47, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  br label %25

25:                                               ; preds = %23, %43
  %26 = phi %"class.WTF::MallocedListHashSetNode.3217"* [ %21, %23 ], [ %45, %43 ]
  %27 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %26, i64 0, i32 0
  %28 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %27, align 8
  br label %29

29:                                               ; preds = %39, %25
  %30 = phi %"class.blink::LayoutBox"* [ %28, %25 ], [ %41, %39 ]
  %31 = icmp eq %"class.blink::LayoutBox"* %30, %24
  br i1 %31, label %43, label %32

32:                                               ; preds = %29
  %33 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %30, i64 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %30, i64 0, i32 0, i32 0, i32 4
  %35 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %34 to i96*
  %36 = load i96, i96* %35, align 4
  %37 = and i96 %36, 8
  %38 = icmp eq i96 %37, 0
  br i1 %38, label %39, label %43

39:                                               ; preds = %32
  call void @_ZN5blink18SubtreeLayoutScope19SetChildNeedsLayoutEPNS_12LayoutObjectE(%"class.blink::SubtreeLayoutScope"* %1, %"class.blink::LayoutObject"* %33) #15
  %40 = call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %33, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #15
  %41 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %40, i64 0, i32 0
  %42 = icmp eq %"class.blink::LayoutBlock"* %40, null
  br i1 %42, label %43, label %29

43:                                               ; preds = %32, %39, %29
  %44 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %26, i64 0, i32 2
  %45 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %44, align 8
  %46 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %45, null
  br i1 %46, label %47, label %25

47:                                               ; preds = %43, %19, %2, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11LayoutBlock16TextIndentOffsetEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %6, i64 0, i32 12, i32 2
  %8 = load i8, i8* %7, align 1
  switch i8 %8, label %17 [
    i8 8, label %9
    i8 1, label %9
  ]

9:                                                ; preds = %1, %1
  %10 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %11 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %10)
  %12 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %13 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %12, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %14, i64 0, i32 12, i32 2
  %16 = load i8, i8* %15, align 1
  br label %17

17:                                               ; preds = %1, %9
  %18 = phi i8 [ %16, %9 ], [ %8, %1 ]
  %19 = phi %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* [ %14, %9 ], [ %6, %1 ]
  %20 = phi i32 [ %11, %9 ], [ 0, %1 ]
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %19, i64 0, i32 12
  %22 = icmp eq i8 %18, 2
  br i1 %22, label %23, label %44, !prof !3

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %19, i64 0, i32 12, i32 3
  %25 = load i8, i8* %24, align 2, !range !5
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.blink::Length"* %21 to float*
  %29 = load float, float* %28, align 4
  br label %34

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %21, i64 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = sitofp i32 %32 to float
  br label %34

34:                                               ; preds = %30, %27
  %35 = phi float [ %29, %27 ], [ %33, %30 ]
  %36 = fmul float %35, 6.400000e+01
  %37 = fcmp ult float %36, 0xC1E0000000000000
  %38 = fcmp ugt float %36, 0x41DFFFFFE0000000
  %39 = fcmp ogt float %36, 0xC1E0000000000000
  %40 = select i1 %39, float %36, float 0xC1E0000000000000
  %41 = fptosi float %40 to i32
  %42 = select i1 %37, i32 0, i32 2147483647
  %43 = select i1 %38, i32 %42, i32 %41
  br label %46

44:                                               ; preds = %17
  %45 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %21, i32 %20) #15
  br label %46

46:                                               ; preds = %34, %44
  %47 = phi i32 [ %43, %34 ], [ %45, %44 ]
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %30

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #15
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %13, i64 120
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::LayoutBoxModelObject"* %11) #15
  %17 = icmp sgt i32 %16, -1
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %16) #15
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !4
  %23 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %23, i64 121
  %25 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBoxModelObject"* %11) #15
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %26) #15
  br label %51

30:                                               ; preds = %1
  %31 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #15
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 118
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %32) #15
  %38 = icmp sgt i32 %37, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %37) #15
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !4
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 119
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %32) #15
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %47) #15
  br label %51

51:                                               ; preds = %30, %9
  %52 = phi { i32, i1 } [ %50, %30 ], [ %29, %9 ]
  %53 = phi i32 [ %49, %30 ], [ %28, %9 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11LayoutBlock24IsPointInOverflowControlERNS_13HitTestResultERKNS_14PhysicalOffsetES5_(%"class.blink::LayoutBlock"* nocapture readonly, %"class.blink::HitTestResult"* dereferenceable(112), %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8), %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 8589934592
  %10 = icmp eq i96 %9, 0
  br i1 %10, label %82, label %11

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %13 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %13, i64 0, i32 0, i32 9
  %15 = bitcast [20 x i8]* %14 to i160*
  %16 = load i160, i160* %15, align 8
  %17 = and i160 %16, 132226261520350065983488
  %18 = icmp eq i160 %17, 75557863725914323419136
  br i1 %18, label %34, label %19

19:                                               ; preds = %11
  %20 = lshr i160 %16, 74
  %21 = trunc i160 %20 to i32
  %22 = and i32 %21, 5
  %23 = or i32 %22, 2
  %24 = icmp eq i32 %23, 3
  %25 = and i160 %16, 1057810092162800527867904
  %26 = icmp eq i160 %25, 604462909807314587353088
  %27 = or i1 %26, %24
  br i1 %27, label %34, label %28

28:                                               ; preds = %19
  %29 = lshr i160 %16, 77
  %30 = trunc i160 %29 to i32
  %31 = and i32 %30, 5
  %32 = or i32 %31, 2
  %33 = icmp eq i32 %32, 3
  br i1 %33, label %34, label %82

34:                                               ; preds = %11, %19, %28
  %35 = bitcast i64* %5 to %"class.blink::IntPoint"*
  %36 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %37 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %36, align 8
  %38 = icmp eq %"struct.blink::FragmentData::RareData"* %37, null
  br i1 %38, label %42, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %40, align 8
  br label %42

42:                                               ; preds = %34, %39
  %43 = phi %"class.blink::PaintLayer"* [ %41, %39 ], [ null, %34 ]
  %44 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %43, i64 0, i32 14, i32 0, i32 0
  %45 = load %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PaintLayerScrollableArea"** %44, align 8
  %46 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #15
  %47 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp sgt i32 %50, -1
  %52 = select i1 %51, i32 -2147483648, i32 2147483647
  %53 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %48, i32 %50) #15
  %54 = extractvalue { i32, i1 } %53, 1
  %55 = extractvalue { i32, i1 } %53, 0
  %56 = select i1 %54, i32 %52, i32 %55, !prof !4
  %57 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %2, i64 0, i32 1, i32 0
  %58 = load i32, i32* %57, align 4
  %59 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 1, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp sgt i32 %60, -1
  %62 = select i1 %61, i32 -2147483648, i32 2147483647
  %63 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %58, i32 %60) #15
  %64 = extractvalue { i32, i1 } %63, 1
  %65 = extractvalue { i32, i1 } %63, 0
  %66 = select i1 %64, i32 %62, i32 %65, !prof !4
  %67 = sdiv i32 %56, 64
  %68 = srem i32 %56, 64
  %69 = add nsw i32 %68, 32
  %70 = ashr i32 %69, 6
  %71 = add nsw i32 %70, %67
  %72 = sdiv i32 %66, 64
  %73 = srem i32 %66, 64
  %74 = add nsw i32 %73, 32
  %75 = ashr i32 %74, 6
  %76 = add nsw i32 %75, %72
  %77 = zext i32 %76 to i64
  %78 = shl nuw i64 %77, 32
  %79 = zext i32 %71 to i64
  %80 = or i64 %78, %79
  store i64 %80, i64* %5, align 8
  %81 = call zeroext i1 @_ZN5blink24PaintLayerScrollableArea23HitTestOverflowControlsERNS_13HitTestResultERKNS_8IntPointE(%"class.blink::PaintLayerScrollableArea"* %45, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"class.blink::IntPoint"* nonnull dereferenceable(8) %35) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #15
  br label %82

82:                                               ; preds = %4, %28, %42
  %83 = phi i1 [ %81, %42 ], [ false, %28 ], [ false, %4 ]
  ret i1 %83
}

declare zeroext i1 @_ZN5blink24PaintLayerScrollableArea23HitTestOverflowControlsERNS_13HitTestResultERKNS_8IntPointE(%"class.blink::PaintLayerScrollableArea"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::IntPoint"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11LayoutBlock22HitTestOverflowControlERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"struct.blink::PhysicalOffset"*
  %7 = alloca %"struct.blink::PhysicalRect", align 4
  %8 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = bitcast %"class.blink::ComputedStyle"** %9 to %"class.blink::ComputedStyleBase"**
  %11 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %11, i64 0, i32 9
  %13 = bitcast [20 x i8]* %12 to i160*
  %14 = load i160, i160* %13, align 8
  %15 = and i160 %14, 3802951800684688204490109616128
  %16 = icmp eq i160 %15, 1267650600228229401496703205376
  br i1 %16, label %17, label %67

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"class.blink::HitTestResult", %"class.blink::HitTestResult"* %1, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = and i32 %19, 1024
  %21 = icmp ne i32 %20, 0
  %22 = and i160 %14, 16888498602639360
  %23 = icmp ne i160 %22, 0
  %24 = or i1 %23, %21
  br i1 %24, label %25, label %67

25:                                               ; preds = %17
  %26 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 0
  %27 = tail call zeroext i1 @_ZNK5blink11LayoutBlock24IsPointInOverflowControlERNS_13HitTestResultERKNS_14PhysicalOffsetES5_(%"class.blink::LayoutBlock"* %0, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %26, %"struct.blink::PhysicalOffset"* dereferenceable(8) %3)
  br i1 %27, label %28, label %67

28:                                               ; preds = %25
  %29 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #15
  %30 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = icmp sgt i32 %33, -1
  %35 = select i1 %34, i32 -2147483648, i32 2147483647
  %36 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %33) #15
  %37 = extractvalue { i32, i1 } %36, 1
  %38 = extractvalue { i32, i1 } %36, 0
  %39 = select i1 %37, i32 %35, i32 %38, !prof !4
  %40 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 0, i32 1, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 1, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp sgt i32 %43, -1
  %45 = select i1 %44, i32 -2147483648, i32 2147483647
  %46 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %41, i32 %43) #15
  %47 = extractvalue { i32, i1 } %46, 1
  %48 = extractvalue { i32, i1 } %46, 0
  %49 = select i1 %47, i32 %45, i32 %48, !prof !4
  %50 = zext i32 %49 to i64
  %51 = shl nuw i64 %50, 32
  %52 = zext i32 %39 to i64
  %53 = or i64 %51, %52
  store i64 %53, i64* %5, align 8
  %54 = bitcast %"class.blink::LayoutBlock"* %0 to void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)***
  %55 = load void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*** %54, align 8
  %56 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)** %55, i64 62
  %57 = load void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)** %56, align 8
  call void %57(%"class.blink::LayoutObject"* %8, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #15
  %58 = bitcast %"class.blink::LayoutBlock"* %0 to %"class.blink::Node"* (%"class.blink::LayoutObject"*)***
  %59 = load %"class.blink::Node"* (%"class.blink::LayoutObject"*)**, %"class.blink::Node"* (%"class.blink::LayoutObject"*)*** %58, align 8
  %60 = getelementptr inbounds %"class.blink::Node"* (%"class.blink::LayoutObject"*)*, %"class.blink::Node"* (%"class.blink::LayoutObject"*)** %59, i64 61
  %61 = load %"class.blink::Node"* (%"class.blink::LayoutObject"*)*, %"class.blink::Node"* (%"class.blink::LayoutObject"*)** %60, align 8
  %62 = call %"class.blink::Node"* %61(%"class.blink::LayoutObject"* %8) #15
  %63 = bitcast %"struct.blink::PhysicalRect"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #15
  %64 = bitcast %"struct.blink::PhysicalRect"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %64, i8 0, i64 16, i1 false)
  %65 = call i32 @_ZN5blink13HitTestResult28AddNodeToListBasedTestResultEPNS_4NodeERKNS_15HitTestLocationERKNS_12PhysicalRectE(%"class.blink::HitTestResult"* %1, %"class.blink::Node"* %62, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalRect"* nonnull dereferenceable(16) %7) #15
  %66 = icmp eq i32 %65, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #15
  br i1 %66, label %68, label %67

67:                                               ; preds = %17, %4, %28, %25
  br label %68

68:                                               ; preds = %28, %67
  %69 = phi i1 [ false, %67 ], [ true, %28 ]
  ret i1 %69
}

declare i32 @_ZN5blink13HitTestResult28AddNodeToListBasedTestResultEPNS_4NodeERKNS_15HitTestLocationERKNS_12PhysicalRectE(%"class.blink::HitTestResult"*, %"class.blink::Node"*, %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalRect"* dereferenceable(16)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11LayoutBlock15HitTestChildrenERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutBlock"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::NGBoxFragmentPainter", align 8
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to %"struct.blink::PhysicalOffset"*
  %9 = alloca i64, align 8
  %10 = bitcast i64* %9 to %"struct.blink::PhysicalOffset"*
  %11 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %13 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 8, i32 0, i32 0, i32 2
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %170, label %16

16:                                               ; preds = %5
  %17 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_layout_ng_printing_enabled_E, align 1, !range !5
  %18 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase41is_layout_ng_block_fragmentation_enabled_E, align 1
  %19 = or i8 %18, %17
  %20 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase40is_layout_ng_fragment_traversal_enabled_E, align 1
  %21 = or i8 %19, %20
  %22 = icmp eq i8 %21, 0
  br i1 %22, label %170, label %23, !prof !3

23:                                               ; preds = %16
  %24 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %25 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %25, i64 28
  %27 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::LayoutObject"* %11) #15
  br i1 %28, label %35, label %29

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %31 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %30 to i96*
  %32 = load i96, i96* %31, align 4
  %33 = and i96 %32, 335544320
  %34 = icmp eq i96 %33, 268435456
  br i1 %34, label %35, label %170

35:                                               ; preds = %29, %23
  %36 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %37 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %36, align 8
  %38 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %37, i64 92
  %39 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.blink::LayoutObject"* %11, i32 39) #15
  br i1 %40, label %170, label %41

41:                                               ; preds = %35
  %42 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %36, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %42, i64 92
  %44 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::LayoutObject"* %11, i32 47) #15
  br i1 %45, label %170, label %46

46:                                               ; preds = %41
  %47 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %36, align 8
  %48 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %47, i64 92
  %49 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %48, align 8
  %50 = tail call zeroext i1 %49(%"class.blink::LayoutObject"* %11, i32 51) #15
  br i1 %50, label %170, label %51

51:                                               ; preds = %46
  %52 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %36, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %52, i64 92
  %54 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::LayoutObject"* %11, i32 34) #15
  br i1 %55, label %170, label %56

56:                                               ; preds = %51
  %57 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %36, align 8
  %58 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %57, i64 92
  %59 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %58, align 8
  %60 = tail call zeroext i1 %59(%"class.blink::LayoutObject"* %11, i32 35) #15
  br i1 %60, label %170, label %61

61:                                               ; preds = %56
  %62 = tail call %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink9LayoutBox19GetPhysicalFragmentEj(%"class.blink::LayoutBox"* %12, i32 0) #15
  %63 = bitcast %"class.blink::NGBoxFragmentPainter"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %63) #15
  %64 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %62, i64 0, i32 0, i32 3
  %65 = bitcast i24* %64 to i32*
  %66 = load i32, i32* %65, align 8
  %67 = and i32 %66, 64
  %68 = icmp eq i32 %67, 0
  %69 = and i32 %66, 960
  %70 = icmp ne i32 %69, 256
  %71 = and i1 %68, %70
  %72 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %62, i64 0, i32 0, i32 1
  %73 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %72, align 8
  %74 = select i1 %71, %"class.blink::LayoutObject"* %73, %"class.blink::LayoutObject"* null
  %75 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %74, i64 0, i32 1
  %76 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %73, i64 0, i32 6, i32 0, i32 0
  %77 = load %"class.blink::Node"*, %"class.blink::Node"** %76, align 8
  %78 = icmp eq %"class.blink::Node"* %77, null
  br i1 %78, label %79, label %86

79:                                               ; preds = %61, %79
  %80 = phi %"class.blink::LayoutObject"* [ %82, %79 ], [ %73, %61 ]
  %81 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %80, i64 0, i32 7
  %82 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %82, i64 0, i32 6, i32 0, i32 0
  %84 = load %"class.blink::Node"*, %"class.blink::Node"** %83, align 8
  %85 = icmp eq %"class.blink::Node"* %84, null
  br i1 %85, label %79, label %86

86:                                               ; preds = %79, %61
  %87 = phi %"class.blink::Node"* [ %77, %61 ], [ %84, %79 ]
  %88 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %87, i64 0, i32 3, i32 0, i32 0
  %89 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %89, i64 0, i32 2, i32 0, i32 0
  %91 = bitcast %"class.blink::Document"** %90 to i64*
  %92 = load i64, i64* %91, align 8
  %93 = lshr i32 %66, 10
  %94 = and i32 %93, 3
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %86
  %97 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %73, i64 0, i32 5, i32 0
  %98 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %97, align 8
  br label %103

99:                                               ; preds = %86
  %100 = tail call dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"* %73, i32 %94) #15
  %101 = load i32, i32* %65, align 8
  %102 = and i32 %101, 960
  br label %103

103:                                              ; preds = %99, %96
  %104 = phi i32 [ %102, %99 ], [ %69, %96 ]
  %105 = phi i32 [ %101, %99 ], [ %66, %96 ]
  %106 = phi %"class.blink::ComputedStyle"* [ %100, %99 ], [ %98, %96 ]
  %107 = and i32 %105, 64
  %108 = icmp eq i32 %107, 0
  %109 = icmp ne i32 %104, 256
  %110 = and i1 %108, %109
  br i1 %110, label %111, label %145

111:                                              ; preds = %103
  %112 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %72, align 8
  %113 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %112, i64 0, i32 4
  %114 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %113 to i96*
  %115 = load i96, i96* %114, align 4
  %116 = and i96 %115, 16777216
  %117 = icmp eq i96 %116, 0
  br i1 %117, label %118, label %130

118:                                              ; preds = %111
  %119 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %112, i64 0, i32 6, i32 0, i32 0
  %120 = load %"class.blink::Node"*, %"class.blink::Node"** %119, align 8
  %121 = icmp eq %"class.blink::Node"* %120, null
  br i1 %121, label %130, label %122

122:                                              ; preds = %118
  %123 = bitcast %"class.blink::Node"* %120 to i8 (%"class.blink::Node"*)***
  %124 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %123, align 8
  %125 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %124, i64 34
  %126 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %125, align 8
  %127 = tail call zeroext i8 %126(%"class.blink::Node"* nonnull %120) #15
  %128 = icmp ne i8 %127, 0
  %129 = load i96, i96* %114, align 4
  br label %130

130:                                              ; preds = %122, %118, %111
  %131 = phi i96 [ %115, %118 ], [ %129, %122 ], [ %115, %111 ]
  %132 = phi i1 [ false, %118 ], [ %128, %122 ], [ false, %111 ]
  %133 = and i96 %131, 16777216
  %134 = icmp eq i96 %133, 0
  br i1 %134, label %135, label %138

135:                                              ; preds = %130
  %136 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %112, i64 0, i32 6, i32 0, i32 0
  %137 = load %"class.blink::Node"*, %"class.blink::Node"** %136, align 8
  br label %138

138:                                              ; preds = %135, %130
  %139 = phi %"class.blink::Node"* [ %137, %135 ], [ null, %130 ]
  br i1 %132, label %140, label %145

140:                                              ; preds = %138
  %141 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %139, i64 0, i32 2, i32 0, i32 0
  %142 = bitcast %"class.blink::Node"** %141 to %"class.blink::ContainerNode"**
  %143 = load %"class.blink::ContainerNode"*, %"class.blink::ContainerNode"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %143, i64 0, i32 0
  br label %145

145:                                              ; preds = %103, %138, %140
  %146 = phi %"class.blink::Node"* [ null, %103 ], [ %144, %140 ], [ %139, %138 ]
  %147 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %6, i64 0, i32 0, i32 0
  %148 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %6, i64 0, i32 0, i32 1
  %149 = bitcast %"class.blink::Document"** %148 to i64*
  store i64 %92, i64* %149, align 8
  %150 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %6, i64 0, i32 0, i32 2
  store %"class.blink::ComputedStyle"* %106, %"class.blink::ComputedStyle"** %150, align 8
  %151 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %6, i64 0, i32 0, i32 3
  store %"class.blink::Node"* %146, %"class.blink::Node"** %151, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN5blink20NGBoxFragmentPainterE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %147, align 8
  %152 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %6, i64 0, i32 1
  store %"class.blink::NGPhysicalBoxFragment"* %62, %"class.blink::NGPhysicalBoxFragment"** %152, align 8
  %153 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %6, i64 0, i32 2
  %154 = bitcast %"class.blink::DisplayItemClient"** %153 to %"class.blink::DisplayItemClient.base"**
  store %"class.blink::DisplayItemClient.base"* %75, %"class.blink::DisplayItemClient.base"** %154, align 8
  %155 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %6, i64 0, i32 3
  %156 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %62, i64 0, i32 1
  %157 = bitcast i24* %156 to i32*
  %158 = load i32, i32* %157, align 8
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  %161 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %62, i64 0, i32 2
  %162 = load i32, i32* %161, align 4
  %163 = zext i32 %162 to i64
  %164 = getelementptr inbounds %"class.blink::NGPhysicalBoxFragment", %"class.blink::NGPhysicalBoxFragment"* %62, i64 0, i32 6, i64 %163
  %165 = bitcast %"struct.blink::NGLink"* %164 to %"class.blink::NGFragmentItems"*
  %166 = select i1 %160, %"class.blink::NGFragmentItems"* null, %"class.blink::NGFragmentItems"* %165
  store %"class.blink::NGFragmentItems"* %166, %"class.blink::NGFragmentItems"** %155, align 8
  %167 = getelementptr inbounds %"class.blink::NGBoxFragmentPainter", %"class.blink::NGBoxFragmentPainter"* %6, i64 0, i32 4
  %168 = bitcast %"class.blink::NGFragmentItem"** %167 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %168, i8 0, i64 16, i1 false)
  %169 = call zeroext i1 @_ZN5blink20NGBoxFragmentPainter11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::NGBoxFragmentPainter"* nonnull %6, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalOffset"* dereferenceable(8) %3, i32 %4) #15
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %63) #15
  br label %409

170:                                              ; preds = %46, %51, %56, %41, %35, %29, %16, %5
  %171 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 7
  %172 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %171, align 8
  %173 = icmp eq %"class.blink::LayoutObject"* %172, null
  br i1 %173, label %180, label %174

174:                                              ; preds = %170
  %175 = bitcast %"class.blink::LayoutObject"* %172 to i1 (%"class.blink::LayoutObject"*, i32)***
  %176 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %175, align 8
  %177 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %176, i64 92
  %178 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %177, align 8
  %179 = tail call zeroext i1 %178(%"class.blink::LayoutObject"* nonnull %172, i32 25) #15
  br label %180

180:                                              ; preds = %170, %174
  %181 = phi i1 [ false, %170 ], [ %179, %174 ]
  %182 = bitcast %"struct.blink::PhysicalOffset"* %3 to i64*
  %183 = load i64, i64* %182, align 4
  %184 = trunc i64 %183 to i32
  %185 = lshr i64 %183, 32
  %186 = trunc i64 %185 to i32
  %187 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %188 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %187 to i96*
  %189 = load i96, i96* %188, align 4
  %190 = and i96 %189, 8589934592
  %191 = icmp eq i96 %190, 0
  br i1 %191, label %218, label %192

192:                                              ; preds = %180
  %193 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %194 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %193, align 8
  %195 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %194, i64 0, i32 0, i32 9
  %196 = bitcast [20 x i8]* %195 to i160*
  %197 = load i160, i160* %196, align 8
  %198 = lshr i160 %197, 74
  %199 = trunc i160 %198 to i32
  %200 = and i32 %199, 7
  switch i32 %200, label %201 [
    i32 5, label %218
    i32 2, label %218
  ]

201:                                              ; preds = %192
  %202 = tail call i64 @_ZNK5blink9LayoutBox33PixelSnappedScrolledContentOffsetEv(%"class.blink::LayoutBox"* %12) #15
  %203 = trunc i64 %202 to i32
  %204 = lshr i64 %202, 32
  %205 = trunc i64 %204 to i32
  %206 = icmp sgt i32 %203, -1
  %207 = select i1 %206, i32 -2147483648, i32 2147483647
  %208 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %184, i32 %203) #15
  %209 = extractvalue { i32, i1 } %208, 1
  %210 = extractvalue { i32, i1 } %208, 0
  %211 = select i1 %209, i32 %207, i32 %210, !prof !4
  %212 = icmp sgt i32 %205, -1
  %213 = select i1 %212, i32 -2147483648, i32 2147483647
  %214 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %186, i32 %205) #15
  %215 = extractvalue { i32, i1 } %214, 1
  %216 = extractvalue { i32, i1 } %214, 0
  %217 = select i1 %215, i32 %213, i32 %216, !prof !4
  br label %218

218:                                              ; preds = %192, %192, %180, %201
  %219 = phi i32 [ %211, %201 ], [ %184, %192 ], [ %184, %180 ], [ %184, %192 ]
  %220 = phi i32 [ %217, %201 ], [ %186, %192 ], [ %186, %180 ], [ %186, %192 ]
  %221 = icmp eq i32 %4, 2
  %222 = select i1 %221, i32 1, i32 %4
  %223 = bitcast %"class.blink::LayoutBlock"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %224 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %223, align 8
  %225 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %224, i64 13
  %226 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %225, align 8
  %227 = tail call %"class.blink::LayoutObjectChildList"* %226(%"class.blink::LayoutObject"* %11) #15
  %228 = icmp eq %"class.blink::LayoutObjectChildList"* %227, null
  br i1 %228, label %409, label %229

229:                                              ; preds = %218
  %230 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %227, i64 0, i32 1
  %231 = bitcast %"class.blink::LayoutObject"** %230 to %"class.blink::LayoutBox"**
  %232 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %231, align 8
  %233 = icmp eq %"class.blink::LayoutBox"* %232, null
  br i1 %233, label %409, label %234

234:                                              ; preds = %229
  %235 = bitcast i64* %7 to i8*
  %236 = bitcast i64* %7 to i32*
  %237 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %8, i64 0, i32 1, i32 0
  %238 = icmp eq %"class.blink::LayoutBlock"* %0, null
  %239 = icmp eq i32 %4, 3
  %240 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*)***
  br label %241

241:                                              ; preds = %234, %374
  %242 = phi %"class.blink::LayoutBox"* [ %232, %234 ], [ %377, %374 ]
  %243 = bitcast %"class.blink::LayoutBox"* %242 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %244 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %242, i64 0, i32 0
  %245 = call zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"* %244) #15
  br i1 %245, label %374, label %246

246:                                              ; preds = %241
  %247 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %242, i64 0, i32 0, i32 0
  %248 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %242, i64 0, i32 0, i32 0, i32 5, i32 0
  %249 = bitcast %"class.blink::ComputedStyle"** %248 to %"class.blink::ComputedStyleBase"**
  %250 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %249, align 8
  %251 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %250, i64 0, i32 3, i32 0, i32 0
  %252 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %251, align 8
  %253 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %252, i64 0, i32 2, i32 0, i32 0
  %254 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %253, align 8
  %255 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %254, i64 0, i32 2, i32 0, i32 0
  %256 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %255, align 8
  %257 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %256, i64 0, i32 45
  %258 = load i32, i32* %257, align 4
  %259 = and i32 %258, 536870912
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %267, label %261

261:                                              ; preds = %246
  %262 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %243, align 8
  %263 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %262, i64 44
  %264 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %263, align 8
  %265 = call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %264(%"class.blink::LayoutObject"* %247) #15
  %266 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %265, null
  br i1 %266, label %267, label %374

267:                                              ; preds = %261, %246
  br i1 %181, label %268, label %286

268:                                              ; preds = %267
  %269 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %242, i64 0, i32 0, i32 0, i32 4
  %270 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %269 to i96*
  %271 = load i96, i96* %270, align 4
  %272 = and i96 %271, 73786976294838206464
  %273 = icmp eq i96 %272, 0
  %274 = and i96 %271, 113336795588871485128704
  %275 = icmp eq i96 %274, 75557863725914323419136
  %276 = or i1 %273, %275
  br i1 %276, label %286, label %277

277:                                              ; preds = %268
  %278 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %248, align 8
  %279 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %278, i64 0, i32 0, i32 9
  %280 = bitcast [20 x i8]* %279 to i160*
  %281 = load i160, i160* %280, align 8
  %282 = and i160 %281, 16528282690043758247936
  %283 = icmp eq i160 %282, 0
  br i1 %283, label %284, label %286, !prof !4

284:                                              ; preds = %277
  %285 = call zeroext i1 @_ZNK5blink12LayoutObject24IsRenderedLegendInternalEv(%"class.blink::LayoutObject"* %247) #15
  br i1 %285, label %374, label %286

286:                                              ; preds = %268, %277, %284, %267
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %235) #15
  store i32 -1431655766, i32* %236, align 8
  store i32 -1431655766, i32* %237, align 4
  br i1 %238, label %287, label %294

287:                                              ; preds = %286
  %288 = bitcast %"class.blink::LayoutBox"* %242 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %289 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %288, align 8
  %290 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %289, i64 147
  %291 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %290, align 8
  %292 = call %"class.blink::LayoutBox"* %291(%"class.blink::LayoutBox"* nonnull %242) #15
  %293 = icmp eq %"class.blink::LayoutBox"* %292, null
  br i1 %293, label %303, label %294

294:                                              ; preds = %287, %286
  %295 = phi %"class.blink::LayoutBox"* [ %292, %287 ], [ %12, %286 ]
  %296 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %295, i64 0, i32 0, i32 0, i32 5, i32 0
  %297 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %296, align 8
  %298 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %297, i64 0, i32 0, i32 9
  %299 = bitcast [20 x i8]* %298 to i160*
  %300 = load i160, i160* %299, align 8
  %301 = and i160 %300, 15211807202738752817960438464512
  %302 = icmp eq i160 %301, 5070602400912917605986812821504
  br i1 %302, label %308, label %303, !prof !4

303:                                              ; preds = %294, %287
  %304 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %242, i64 0, i32 2
  %305 = bitcast %"class.blink::LayoutRect"* %304 to i64*
  %306 = load i64, i64* %305, align 4
  %307 = trunc i64 %306 to i32
  br label %333

308:                                              ; preds = %294
  %309 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %295, i64 0, i32 2, i32 1
  %310 = bitcast %"class.blink::LayoutSize"* %309 to i64*
  %311 = load i64, i64* %310, align 4
  %312 = trunc i64 %311 to i32
  %313 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %242, i64 0, i32 2, i32 1
  %314 = bitcast %"class.blink::LayoutSize"* %313 to i64*
  %315 = load i64, i64* %314, align 4
  %316 = trunc i64 %315 to i32
  %317 = icmp sgt i32 %316, -1
  %318 = select i1 %317, i32 -2147483648, i32 2147483647
  %319 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %312, i32 %316) #15
  %320 = extractvalue { i32, i1 } %319, 1
  %321 = extractvalue { i32, i1 } %319, 0
  %322 = select i1 %320, i32 %318, i32 %321, !prof !4
  %323 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %242, i64 0, i32 2
  %324 = bitcast %"class.blink::LayoutRect"* %323 to i64*
  %325 = load i64, i64* %324, align 4
  %326 = trunc i64 %325 to i32
  %327 = icmp sgt i32 %326, -1
  %328 = select i1 %327, i32 -2147483648, i32 2147483647
  %329 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %322, i32 %326) #15
  %330 = extractvalue { i32, i1 } %329, 1
  %331 = extractvalue { i32, i1 } %329, 0
  %332 = select i1 %330, i32 %328, i32 %331, !prof !4
  br label %333

333:                                              ; preds = %303, %308
  %334 = phi i32 [ %307, %303 ], [ %332, %308 ]
  %335 = phi i64 [ %306, %303 ], [ %325, %308 ]
  %336 = lshr i64 %335, 32
  %337 = trunc i64 %336 to i32
  %338 = icmp slt i32 %334, 0
  %339 = select i1 %338, i32 -2147483648, i32 2147483647
  %340 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %219, i32 %334) #15
  %341 = extractvalue { i32, i1 } %340, 1
  %342 = extractvalue { i32, i1 } %340, 0
  %343 = select i1 %341, i32 %339, i32 %342, !prof !4
  %344 = icmp slt i32 %337, 0
  %345 = select i1 %344, i32 -2147483648, i32 2147483647
  %346 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %220, i32 %337) #15
  %347 = extractvalue { i32, i1 } %346, 1
  %348 = extractvalue { i32, i1 } %346, 0
  %349 = select i1 %347, i32 %345, i32 %348, !prof !4
  %350 = zext i32 %349 to i64
  %351 = shl nuw i64 %350, 32
  %352 = zext i32 %343 to i64
  %353 = or i64 %351, %352
  store i64 %353, i64* %7, align 8
  %354 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %242, i64 0, i32 0, i32 0, i32 4
  %355 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %354 to i96*
  %356 = load i96, i96* %355, align 4
  %357 = and i96 %356, 8388608
  %358 = icmp eq i96 %357, 0
  br i1 %358, label %367, label %359

359:                                              ; preds = %333
  br i1 %239, label %360, label %373

360:                                              ; preds = %359
  %361 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %240, align 8
  %362 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %361, i64 28
  %363 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %362, align 8
  %364 = call zeroext i1 %363(%"class.blink::LayoutObject"* %11) #15
  br i1 %364, label %365, label %373

365:                                              ; preds = %360
  %366 = call zeroext i1 @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE(%"class.blink::LayoutBox"* nonnull %242, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %8, i32 0) #15
  br i1 %366, label %379, label %373

367:                                              ; preds = %333
  %368 = bitcast %"class.blink::LayoutBox"* %242 to i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)***
  %369 = load i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)**, i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)*** %368, align 8
  %370 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)*, i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)** %369, i64 63
  %371 = load i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)*, i1 (%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"*, %"class.blink::HitTestLocation"*, %"struct.blink::PhysicalOffset"*, i32)** %370, align 8
  %372 = call zeroext i1 %371(%"class.blink::LayoutBox"* nonnull %242, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"class.blink::HitTestLocation"* dereferenceable(72) %2, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %8, i32 %222) #15
  br i1 %372, label %379, label %373

373:                                              ; preds = %359, %360, %367, %365
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %235) #15
  br label %374

374:                                              ; preds = %261, %373, %241, %284
  %375 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %242, i64 0, i32 0, i32 0, i32 8
  %376 = bitcast %"class.blink::LayoutObject"** %375 to %"class.blink::LayoutBox"**
  %377 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %376, align 8
  %378 = icmp eq %"class.blink::LayoutBox"* %377, null
  br i1 %378, label %409, label %241

379:                                              ; preds = %365, %367
  %380 = bitcast i64* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %380) #15
  %381 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 0, i32 0, i32 0
  %382 = load i32, i32* %381, align 4
  %383 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 0, i32 0
  %384 = load i32, i32* %383, align 4
  %385 = icmp sgt i32 %384, -1
  %386 = select i1 %385, i32 -2147483648, i32 2147483647
  %387 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %382, i32 %384) #15
  %388 = extractvalue { i32, i1 } %387, 1
  %389 = extractvalue { i32, i1 } %387, 0
  %390 = select i1 %388, i32 %386, i32 %389, !prof !4
  %391 = getelementptr inbounds %"class.blink::HitTestLocation", %"class.blink::HitTestLocation"* %2, i64 0, i32 0, i32 1, i32 0
  %392 = load i32, i32* %391, align 4
  %393 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 1, i32 0
  %394 = load i32, i32* %393, align 4
  %395 = icmp sgt i32 %394, -1
  %396 = select i1 %395, i32 -2147483648, i32 2147483647
  %397 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %392, i32 %394) #15
  %398 = extractvalue { i32, i1 } %397, 1
  %399 = extractvalue { i32, i1 } %397, 0
  %400 = select i1 %398, i32 %396, i32 %399, !prof !4
  %401 = zext i32 %400 to i64
  %402 = shl nuw i64 %401, 32
  %403 = zext i32 %390 to i64
  %404 = or i64 %402, %403
  store i64 %404, i64* %9, align 8
  %405 = bitcast %"class.blink::LayoutBlock"* %0 to void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)***
  %406 = load void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*** %405, align 8
  %407 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)** %406, i64 62
  %408 = load void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"*, %"struct.blink::PhysicalOffset"*)** %407, align 8
  call void %408(%"class.blink::LayoutObject"* %11, %"class.blink::HitTestResult"* dereferenceable(112) %1, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %10) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %380) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %235) #15
  br label %409

409:                                              ; preds = %374, %218, %229, %379, %145
  %410 = phi i1 [ %169, %145 ], [ true, %379 ], [ false, %229 ], [ false, %218 ], [ false, %374 ]
  ret i1 %410
}

declare %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink9LayoutBox19GetPhysicalFragmentEj(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink20NGBoxFragmentPainter11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::NGBoxFragmentPainter"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) local_unnamed_addr #3

declare i64 @_ZNK5blink9LayoutBox33PixelSnappedScrolledContentOffsetEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink20LayoutBoxModelObject20HasSelfPaintingLayerEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink9LayoutBox16HitTestAllPhasesERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestFilterE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11LayoutBlock14PositionForBoxEPNS_9InlineBoxEb(%"class.blink::PositionTemplate"* noalias sret, %"class.blink::LayoutBlock"* nocapture readonly, %"class.blink::InlineBox"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %5 = icmp eq %"class.blink::InlineBox"* %2, null
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 16, i1 false) #15
  br label %132

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %2, i64 0, i32 4, i32 0
  %10 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 4
  %12 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %11 to i96*
  %13 = load i96, i96* %12, align 4
  %14 = and i96 %13, 16777216
  %15 = icmp eq i96 %14, 0
  br i1 %15, label %16, label %29

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 6, i32 0, i32 0
  %18 = load %"class.blink::Node"*, %"class.blink::Node"** %17, align 8
  %19 = icmp eq %"class.blink::Node"* %18, null
  br i1 %19, label %29, label %20

20:                                               ; preds = %16
  %21 = bitcast %"class.blink::Node"* %18 to i8 (%"class.blink::Node"*)***
  %22 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %21, align 8
  %23 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %22, i64 34
  %24 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %23, align 8
  %25 = tail call zeroext i8 %24(%"class.blink::Node"* nonnull %18) #15
  %26 = icmp eq i8 %25, 0
  br i1 %26, label %27, label %37

27:                                               ; preds = %20
  %28 = load i96, i96* %12, align 4
  br label %29

29:                                               ; preds = %27, %16, %8
  %30 = phi i96 [ %28, %27 ], [ %13, %8 ], [ %13, %16 ]
  %31 = and i96 %30, 16777216
  %32 = icmp eq i96 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 6, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, null
  br i1 %36, label %37, label %83

37:                                               ; preds = %29, %20, %33
  %38 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 4
  %39 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %38 to i96*
  %40 = load i96, i96* %39, align 4
  %41 = and i96 %40, 16777216
  %42 = icmp eq i96 %41, 0
  br i1 %42, label %43, label %56

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %45 = load %"class.blink::Node"*, %"class.blink::Node"** %44, align 8
  %46 = icmp eq %"class.blink::Node"* %45, null
  br i1 %46, label %56, label %47

47:                                               ; preds = %43
  %48 = bitcast %"class.blink::Node"* %45 to i8 (%"class.blink::Node"*)***
  %49 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %48, align 8
  %50 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %49, i64 34
  %51 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %50, align 8
  %52 = tail call zeroext i8 %51(%"class.blink::Node"* nonnull %45) #15
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %54, label %64

54:                                               ; preds = %47
  %55 = load i96, i96* %39, align 4
  br label %56

56:                                               ; preds = %54, %43, %37
  %57 = phi i96 [ %55, %54 ], [ %40, %37 ], [ %40, %43 ]
  %58 = and i96 %57, 16777216
  %59 = icmp eq i96 %58, 0
  br i1 %59, label %60, label %64

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %62 = load %"class.blink::Node"*, %"class.blink::Node"** %61, align 8
  %63 = icmp eq %"class.blink::Node"* %62, null
  br i1 %63, label %64, label %66

64:                                               ; preds = %56, %47, %60
  %65 = bitcast %"class.blink::PositionTemplate"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %65, i8 0, i64 16, i1 false) #15
  br label %132

66:                                               ; preds = %60
  %67 = bitcast %"class.blink::Node"* %62 to i8 (%"class.blink::Node"*)***
  %68 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %67, align 8
  %69 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %68, i64 34
  %70 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %69, align 8
  %71 = tail call zeroext i8 %70(%"class.blink::Node"* nonnull %62) #15
  %72 = icmp eq i8 %71, 0
  br i1 %72, label %73, label %79

73:                                               ; preds = %66
  %74 = load i96, i96* %39, align 4
  %75 = and i96 %74, 16777216
  %76 = icmp eq i96 %75, 0
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = load %"class.blink::Node"*, %"class.blink::Node"** %61, align 8
  br label %79

79:                                               ; preds = %66, %73, %77
  %80 = phi %"class.blink::Node"* [ null, %66 ], [ %78, %77 ], [ null, %73 ]
  br i1 %3, label %81, label %82

81:                                               ; preds = %79
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* dereferenceable(64) %80) #15
  br label %132

82:                                               ; preds = %79
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25LastPositionInOrAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* dereferenceable(64) %80) #15
  br label %132

83:                                               ; preds = %33
  %84 = bitcast %"class.blink::InlineBox"* %2 to i1 (%"class.blink::InlineBox"*)***
  %85 = load i1 (%"class.blink::InlineBox"*)**, i1 (%"class.blink::InlineBox"*)*** %84, align 8
  %86 = getelementptr inbounds i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %85, i64 15
  %87 = load i1 (%"class.blink::InlineBox"*)*, i1 (%"class.blink::InlineBox"*)** %86, align 8
  %88 = tail call zeroext i1 %87(%"class.blink::InlineBox"* nonnull %2) #15
  br i1 %88, label %92, label %89

89:                                               ; preds = %83
  br i1 %3, label %90, label %91

90:                                               ; preds = %89
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* nonnull dereferenceable(64) %35) #15
  br label %132

91:                                               ; preds = %89
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25LastPositionInOrAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* nonnull dereferenceable(64) %35) #15
  br label %132

92:                                               ; preds = %83
  %93 = bitcast %"class.blink::InlineBox"* %2 to %"class.blink::InlineTextBox"*
  %94 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %9, align 8
  %95 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %94, i64 0, i32 4
  %96 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %95 to i96*
  %97 = load i96, i96* %96, align 4
  %98 = and i96 %97, 16777216
  %99 = icmp eq i96 %98, 0
  br i1 %99, label %100, label %113

100:                                              ; preds = %92
  %101 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %94, i64 0, i32 6, i32 0, i32 0
  %102 = load %"class.blink::Node"*, %"class.blink::Node"** %101, align 8
  %103 = icmp eq %"class.blink::Node"* %102, null
  br i1 %103, label %113, label %104

104:                                              ; preds = %100
  %105 = bitcast %"class.blink::Node"* %102 to i8 (%"class.blink::Node"*)***
  %106 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %105, align 8
  %107 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %106, i64 34
  %108 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %107, align 8
  %109 = tail call zeroext i8 %108(%"class.blink::Node"* nonnull %102) #15
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %120

111:                                              ; preds = %104
  %112 = load i96, i96* %96, align 4
  br label %113

113:                                              ; preds = %111, %100, %92
  %114 = phi i96 [ %112, %111 ], [ %97, %92 ], [ %97, %100 ]
  %115 = and i96 %114, 16777216
  %116 = icmp eq i96 %115, 0
  br i1 %116, label %117, label %120

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %94, i64 0, i32 6, i32 0, i32 0
  %119 = load %"class.blink::Node"*, %"class.blink::Node"** %118, align 8
  br label %120

120:                                              ; preds = %104, %113, %117
  %121 = phi %"class.blink::Node"* [ null, %104 ], [ %119, %117 ], [ null, %113 ]
  %122 = getelementptr inbounds %"class.blink::InlineBox", %"class.blink::InlineBox"* %2, i64 1, i32 1
  %123 = bitcast %"class.blink::InlineBox"** %122 to i32*
  %124 = load i32, i32* %123, align 8
  br i1 %3, label %130, label %125

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %93, i64 0, i32 4
  %127 = load i16, i16* %126, align 4
  %128 = zext i16 %127 to i32
  %129 = add i32 %124, %128
  br label %130

130:                                              ; preds = %120, %125
  %131 = phi i32 [ %129, %125 ], [ %124, %120 ]
  tail call void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE17EditingPositionOfEPKNS_4NodeEi(%"class.blink::PositionTemplate"* sret %0, %"class.blink::Node"* %121, i32 %131) #15
  br label %132

132:                                              ; preds = %64, %81, %82, %90, %91, %130, %6
  ret void
}

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE27FirstPositionInOrBeforeNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #3

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE25LastPositionInOrAfterNodeERKNS_4NodeE(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #3

declare void @_ZN5blink16PositionTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEE17EditingPositionOfEPKNS_4NodeEi(%"class.blink::PositionTemplate"* sret, %"class.blink::Node"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11LayoutBlock43PositionForPointRespectingEditingBoundariesENS_13LineLayoutBoxERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* noalias sret, %"class.blink::LayoutBlock"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca i64, align 8
  %6 = bitcast i64* %5 to %"struct.blink::PhysicalOffset"*
  %7 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0, i32 0, i32 0
  %8 = bitcast %"class.blink::LayoutObject"* %2 to %"class.blink::LayoutBox"*
  %9 = bitcast %"class.blink::LayoutObject"* %2 to %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)***
  %10 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)**, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %10, i64 147
  %12 = load %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)*, %"class.blink::LayoutBox"* (%"class.blink::LayoutBox"*)** %11, align 8
  %13 = tail call %"class.blink::LayoutBox"* %12(%"class.blink::LayoutBox"* %8) #15
  %14 = icmp eq %"class.blink::LayoutBox"* %13, null
  br i1 %14, label %23, label %15

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %13, i64 0, i32 0, i32 0, i32 5, i32 0
  %17 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %17, i64 0, i32 0, i32 9
  %19 = bitcast [20 x i8]* %18 to i160*
  %20 = load i160, i160* %19, align 8
  %21 = and i160 %20, 15211807202738752817960438464512
  %22 = icmp eq i160 %21, 5070602400912917605986812821504
  br i1 %22, label %28, label %23, !prof !4

23:                                               ; preds = %15, %4
  %24 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 1, i32 1, i32 1
  %25 = bitcast i8* %24 to i64*
  %26 = load i64, i64* %25, align 4
  %27 = trunc i64 %26 to i32
  br label %53

28:                                               ; preds = %15
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %13, i64 0, i32 2, i32 1
  %30 = bitcast %"class.blink::LayoutSize"* %29 to i64*
  %31 = load i64, i64* %30, align 4
  %32 = trunc i64 %31 to i32
  %33 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 1, i32 4, i32 0, i64 4
  %34 = bitcast i8* %33 to i64*
  %35 = load i64, i64* %34, align 4
  %36 = trunc i64 %35 to i32
  %37 = icmp sgt i32 %36, -1
  %38 = select i1 %37, i32 -2147483648, i32 2147483647
  %39 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %32, i32 %36) #15
  %40 = extractvalue { i32, i1 } %39, 1
  %41 = extractvalue { i32, i1 } %39, 0
  %42 = select i1 %40, i32 %38, i32 %41, !prof !4
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 1, i32 1, i32 1
  %44 = bitcast i8* %43 to i64*
  %45 = load i64, i64* %44, align 4
  %46 = trunc i64 %45 to i32
  %47 = icmp sgt i32 %46, -1
  %48 = select i1 %47, i32 -2147483648, i32 2147483647
  %49 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %42, i32 %46) #15
  %50 = extractvalue { i32, i1 } %49, 1
  %51 = extractvalue { i32, i1 } %49, 0
  %52 = select i1 %50, i32 %48, i32 %51, !prof !4
  br label %53

53:                                               ; preds = %23, %28
  %54 = phi i32 [ %27, %23 ], [ %52, %28 ]
  %55 = phi i64 [ %26, %23 ], [ %45, %28 ]
  %56 = lshr i64 %55, 32
  %57 = trunc i64 %56 to i32
  %58 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 0, i32 4
  %59 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %58 to i96*
  %60 = load i96, i96* %59, align 4
  %61 = lshr i96 %60, 75
  %62 = trunc i96 %61 to i32
  %63 = and i32 %62, 1
  %64 = or i32 %63, 2
  %65 = icmp eq i32 %64, 3
  br i1 %65, label %66, label %85

66:                                               ; preds = %53
  %67 = bitcast %"class.blink::LayoutObject"* %2 to %"class.blink::LayoutBoxModelObject"*
  %68 = tail call i64 @_ZNK5blink20LayoutBoxModelObject23OffsetForInFlowPositionEv(%"class.blink::LayoutBoxModelObject"* %67) #15
  %69 = trunc i64 %68 to i32
  %70 = lshr i64 %68, 32
  %71 = trunc i64 %70 to i32
  %72 = icmp slt i32 %69, 0
  %73 = select i1 %72, i32 -2147483648, i32 2147483647
  %74 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %54, i32 %69) #15
  %75 = extractvalue { i32, i1 } %74, 1
  %76 = extractvalue { i32, i1 } %74, 0
  %77 = select i1 %75, i32 %73, i32 %76, !prof !4
  %78 = icmp slt i32 %71, 0
  %79 = select i1 %78, i32 -2147483648, i32 2147483647
  %80 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %57, i32 %71) #15
  %81 = extractvalue { i32, i1 } %80, 1
  %82 = extractvalue { i32, i1 } %80, 0
  %83 = select i1 %81, i32 %79, i32 %82, !prof !4
  %84 = load i96, i96* %59, align 4
  br label %85

85:                                               ; preds = %66, %53
  %86 = phi i96 [ %84, %66 ], [ %60, %53 ]
  %87 = phi i32 [ %77, %66 ], [ %54, %53 ]
  %88 = phi i32 [ %83, %66 ], [ %57, %53 ]
  %89 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #15
  %90 = bitcast i64* %5 to %"class.blink::LayoutUnit"*
  %91 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %6, i64 0, i32 1
  %92 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = icmp sgt i32 %87, -1
  %95 = select i1 %94, i32 -2147483648, i32 2147483647
  %96 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %93, i32 %87) #15
  %97 = extractvalue { i32, i1 } %96, 1
  %98 = extractvalue { i32, i1 } %96, 0
  %99 = select i1 %97, i32 %95, i32 %98, !prof !4
  %100 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %3, i64 0, i32 1, i32 0
  %101 = load i32, i32* %100, align 4
  %102 = icmp sgt i32 %88, -1
  %103 = select i1 %102, i32 -2147483648, i32 2147483647
  %104 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %101, i32 %88) #15
  %105 = extractvalue { i32, i1 } %104, 1
  %106 = extractvalue { i32, i1 } %104, 0
  %107 = select i1 %105, i32 %103, i32 %106, !prof !4
  %108 = zext i32 %107 to i64
  %109 = shl nuw i64 %108, 32
  %110 = zext i32 %99 to i64
  %111 = or i64 %109, %110
  store i64 %111, i64* %5, align 8
  %112 = and i96 %86, 16777216
  %113 = icmp eq i96 %112, 0
  br i1 %113, label %114, label %127

114:                                              ; preds = %85
  %115 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 0, i32 6, i32 0, i32 0
  %116 = load %"class.blink::Node"*, %"class.blink::Node"** %115, align 8
  %117 = icmp eq %"class.blink::Node"* %116, null
  br i1 %117, label %127, label %118

118:                                              ; preds = %114
  %119 = bitcast %"class.blink::Node"* %116 to i8 (%"class.blink::Node"*)***
  %120 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %119, align 8
  %121 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %120, i64 34
  %122 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %121, align 8
  %123 = tail call zeroext i8 %122(%"class.blink::Node"* nonnull %116) #15
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %125, label %137

125:                                              ; preds = %118
  %126 = load i96, i96* %59, align 4
  br label %127

127:                                              ; preds = %125, %114, %85
  %128 = phi i96 [ %126, %125 ], [ %86, %85 ], [ %86, %114 ]
  %129 = and i96 %128, 16777216
  %130 = icmp eq i96 %129, 0
  br i1 %130, label %131, label %137

131:                                              ; preds = %127
  %132 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 0, i32 6, i32 0, i32 0
  %133 = load %"class.blink::Node"*, %"class.blink::Node"** %132, align 8
  %134 = icmp eq %"class.blink::Node"* %133, null
  br i1 %134, label %137, label %135

135:                                              ; preds = %131
  %136 = icmp eq %"class.blink::LayoutBlock"* %1, null
  br i1 %136, label %241, label %142

137:                                              ; preds = %127, %118, %131
  %138 = bitcast %"class.blink::LayoutObject"* %2 to void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)***
  %139 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)**, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)*** %138, align 8, !noalias !34
  %140 = getelementptr inbounds void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)** %139, i64 64
  %141 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)** %140, align 8, !noalias !34
  call void %141(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %2, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %6) #15
  br label %306

142:                                              ; preds = %135, %170
  %143 = phi %"class.blink::LayoutObject"* [ %172, %170 ], [ %7, %135 ]
  %144 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %143, i64 0, i32 4
  %145 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %144 to i96*
  %146 = load i96, i96* %145, align 4
  %147 = and i96 %146, 16777216
  %148 = icmp eq i96 %147, 0
  br i1 %148, label %149, label %162

149:                                              ; preds = %142
  %150 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %143, i64 0, i32 6, i32 0, i32 0
  %151 = load %"class.blink::Node"*, %"class.blink::Node"** %150, align 8
  %152 = icmp eq %"class.blink::Node"* %151, null
  br i1 %152, label %162, label %153

153:                                              ; preds = %149
  %154 = bitcast %"class.blink::Node"* %151 to i8 (%"class.blink::Node"*)***
  %155 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %154, align 8
  %156 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %155, i64 34
  %157 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %156, align 8
  %158 = tail call zeroext i8 %157(%"class.blink::Node"* nonnull %151) #15
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %160, label %170

160:                                              ; preds = %153
  %161 = load i96, i96* %145, align 4
  br label %162

162:                                              ; preds = %160, %149, %142
  %163 = phi i96 [ %161, %160 ], [ %146, %142 ], [ %146, %149 ]
  %164 = and i96 %163, 16777216
  %165 = icmp eq i96 %164, 0
  br i1 %165, label %166, label %170

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %143, i64 0, i32 6, i32 0, i32 0
  %168 = load %"class.blink::Node"*, %"class.blink::Node"** %167, align 8
  %169 = icmp eq %"class.blink::Node"* %168, null
  br i1 %169, label %170, label %174

170:                                              ; preds = %162, %153, %166
  %171 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %143, i64 0, i32 7
  %172 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %171, align 8
  %173 = icmp eq %"class.blink::LayoutObject"* %172, null
  br i1 %173, label %241, label %142

174:                                              ; preds = %166
  %175 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %144 to i96*
  %176 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %143, i64 0, i32 6, i32 0, i32 0
  %177 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %143, i64 0, i32 7
  %178 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %177, align 8
  %179 = icmp eq %"class.blink::LayoutObject"* %178, null
  br i1 %179, label %241, label %180

180:                                              ; preds = %174
  %181 = and i96 %163, 4294967296
  %182 = icmp eq i96 %181, 0
  br i1 %182, label %191, label %183

183:                                              ; preds = %180
  %184 = bitcast %"class.blink::LayoutObject"* %178 to i1 (%"class.blink::LayoutObject"*, i32)***
  %185 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %184, align 8
  %186 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %185, i64 92
  %187 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %186, align 8
  %188 = tail call zeroext i1 %187(%"class.blink::LayoutObject"* nonnull %178, i32 55) #15
  br i1 %188, label %241, label %189

189:                                              ; preds = %183
  %190 = load i96, i96* %175, align 4
  br label %191

191:                                              ; preds = %189, %180
  %192 = phi i96 [ %190, %189 ], [ %163, %180 ]
  %193 = and i96 %192, 16777216
  %194 = icmp eq i96 %193, 0
  br i1 %194, label %195, label %207

195:                                              ; preds = %191
  %196 = load %"class.blink::Node"*, %"class.blink::Node"** %176, align 8
  %197 = icmp eq %"class.blink::Node"* %196, null
  br i1 %197, label %207, label %198

198:                                              ; preds = %195
  %199 = bitcast %"class.blink::Node"* %196 to i8 (%"class.blink::Node"*)***
  %200 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %199, align 8
  %201 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %200, i64 34
  %202 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %201, align 8
  %203 = tail call zeroext i8 %202(%"class.blink::Node"* nonnull %196) #15
  %204 = icmp eq i8 %203, 0
  br i1 %204, label %205, label %213

205:                                              ; preds = %198
  %206 = load i96, i96* %175, align 4
  br label %207

207:                                              ; preds = %205, %195, %191
  %208 = phi i96 [ %206, %205 ], [ %192, %191 ], [ %192, %195 ]
  %209 = and i96 %208, 16777216
  %210 = icmp eq i96 %209, 0
  br i1 %210, label %211, label %213

211:                                              ; preds = %207
  %212 = load %"class.blink::Node"*, %"class.blink::Node"** %176, align 8
  br label %213

213:                                              ; preds = %211, %207, %198
  %214 = phi %"class.blink::Node"* [ null, %198 ], [ %212, %211 ], [ null, %207 ]
  %215 = tail call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %214) #15
  %216 = load i96, i96* %59, align 4
  %217 = and i96 %216, 16777216
  %218 = icmp eq i96 %217, 0
  br i1 %218, label %219, label %231

219:                                              ; preds = %213
  %220 = load %"class.blink::Node"*, %"class.blink::Node"** %132, align 8
  %221 = icmp eq %"class.blink::Node"* %220, null
  br i1 %221, label %231, label %222

222:                                              ; preds = %219
  %223 = bitcast %"class.blink::Node"* %220 to i8 (%"class.blink::Node"*)***
  %224 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %223, align 8
  %225 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %224, i64 34
  %226 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %225, align 8
  %227 = tail call zeroext i8 %226(%"class.blink::Node"* nonnull %220) #15
  %228 = icmp eq i8 %227, 0
  br i1 %228, label %229, label %237

229:                                              ; preds = %222
  %230 = load i96, i96* %59, align 4
  br label %231

231:                                              ; preds = %229, %219, %213
  %232 = phi i96 [ %230, %229 ], [ %216, %213 ], [ %216, %219 ]
  %233 = and i96 %232, 16777216
  %234 = icmp eq i96 %233, 0
  br i1 %234, label %235, label %237

235:                                              ; preds = %231
  %236 = load %"class.blink::Node"*, %"class.blink::Node"** %132, align 8
  br label %237

237:                                              ; preds = %222, %231, %235
  %238 = phi %"class.blink::Node"* [ null, %222 ], [ %236, %235 ], [ null, %231 ]
  %239 = tail call zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %238) #15
  %240 = xor i1 %215, %239
  br i1 %240, label %246, label %241

241:                                              ; preds = %170, %135, %237, %174, %183
  %242 = bitcast %"class.blink::LayoutObject"* %2 to void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)***
  %243 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)**, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)*** %242, align 8, !noalias !37
  %244 = getelementptr inbounds void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)** %243, i64 64
  %245 = load void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)*, void (%"class.blink::PositionWithAffinityTemplate"*, %"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"*)** %244, align 8, !noalias !37
  call void %245(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %2, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %6) #15
  br label %306

246:                                              ; preds = %237
  %247 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %2, i64 1, i32 4, i32 0, i64 4
  %248 = bitcast i8* %247 to i64*
  %249 = load i64, i64* %248, align 4
  %250 = lshr i64 %249, 32
  %251 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 4
  %252 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %251 to i96*
  %253 = load i96, i96* %252, align 4
  %254 = trunc i96 %253 to i32
  %255 = icmp slt i32 %254, 0
  %256 = select i1 %255, i64 %249, i64 %250
  %257 = shl i64 %256, 32
  %258 = ashr exact i64 %257, 26
  %259 = sdiv i64 %258, 128
  %260 = tail call i1 @llvm.is.constant.i64(i64 %259) #15
  br i1 %260, label %268, label %261

261:                                              ; preds = %246
  %262 = icmp slt i64 %257, -8522825728
  %263 = select i1 %262, i32 -2147483648, i32 2147483647
  %264 = add nsw i64 %259, 2147483648
  %265 = icmp ult i64 %264, 4294967296
  %266 = trunc i64 %259 to i32
  %267 = select i1 %265, i32 %266, i32 %263, !prof !3
  br label %270

268:                                              ; preds = %246
  %269 = trunc i64 %259 to i32
  br label %270

270:                                              ; preds = %261, %268
  %271 = phi i32 [ %267, %261 ], [ %269, %268 ]
  %272 = select i1 %255, %"class.blink::LayoutUnit"* %90, %"class.blink::LayoutUnit"* %91
  %273 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %272, i64 0, i32 0
  %274 = load i32, i32* %273, align 4
  %275 = icmp slt i32 %274, %271
  %276 = load i96, i96* %175, align 4
  %277 = and i96 %276, 16777216
  %278 = icmp eq i96 %277, 0
  br i1 %278, label %279, label %291

279:                                              ; preds = %270
  %280 = load %"class.blink::Node"*, %"class.blink::Node"** %176, align 8
  %281 = icmp eq %"class.blink::Node"* %280, null
  br i1 %281, label %291, label %282

282:                                              ; preds = %279
  %283 = bitcast %"class.blink::Node"* %280 to i8 (%"class.blink::Node"*)***
  %284 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %283, align 8
  %285 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %284, i64 34
  %286 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %285, align 8
  %287 = tail call zeroext i8 %286(%"class.blink::Node"* nonnull %280) #15
  %288 = icmp eq i8 %287, 0
  br i1 %288, label %289, label %297

289:                                              ; preds = %282
  %290 = load i96, i96* %175, align 4
  br label %291

291:                                              ; preds = %289, %279, %270
  %292 = phi i96 [ %290, %289 ], [ %276, %270 ], [ %276, %279 ]
  %293 = and i96 %292, 16777216
  %294 = icmp eq i96 %293, 0
  br i1 %294, label %295, label %297

295:                                              ; preds = %291
  %296 = load %"class.blink::Node"*, %"class.blink::Node"** %176, align 8
  br label %297

297:                                              ; preds = %282, %291, %295
  %298 = phi %"class.blink::Node"* [ null, %282 ], [ %296, %295 ], [ null, %291 ]
  %299 = tail call zeroext i1 @_ZN5blink19IsUserSelectContainERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %298) #15
  br i1 %275, label %300, label %303

300:                                              ; preds = %297
  br i1 %299, label %301, label %302

301:                                              ; preds = %300
  tail call void @_ZNK5blink12LayoutObject18PositionBeforeThisEv(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* nonnull %143) #15
  br label %306

302:                                              ; preds = %300
  tail call void @_ZNK5blink12LayoutObject18PositionBeforeThisEv(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %2) #15
  br label %306

303:                                              ; preds = %297
  br i1 %299, label %304, label %305

304:                                              ; preds = %303
  tail call void @_ZNK5blink12LayoutObject17PositionAfterThisEv(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* nonnull %143) #15
  br label %306

305:                                              ; preds = %303
  tail call void @_ZNK5blink12LayoutObject17PositionAfterThisEv(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %2) #15
  br label %306

306:                                              ; preds = %301, %302, %304, %305, %241, %137
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #15
  ret void
}

declare zeroext i1 @_ZN5blink19IsUserSelectContainERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #3

declare void @_ZNK5blink12LayoutObject18PositionBeforeThisEv(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutObject"*) local_unnamed_addr #3

declare void @_ZNK5blink12LayoutObject17PositionAfterThisEv(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutObject"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11LayoutBlock42PositionForPointIfOutsideAtomicInlineLevelERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* noalias sret, %"class.blink::LayoutBlock"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %6 = bitcast %"class.blink::ComputedStyle"** %5 to %"class.blink::ComputedStyleBase"**
  %7 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %7, i64 0, i32 9
  %9 = bitcast [20 x i8]* %8 to i160*
  %10 = load i160, i160* %9, align 8
  %11 = lshr i160 %10, 102
  %12 = trunc i160 %11 to i16
  %13 = and i16 %12, 3
  %14 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0
  %15 = tail call zeroext i8 @_ZNK5blink9LayoutBox17ResolvedDirectionEv(%"class.blink::LayoutBox"* %14) #15
  %16 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0, i32 2, i32 1
  %17 = bitcast %"class.blink::LayoutSize"* %16 to i64*
  %18 = load i64, i64* %17, align 4
  %19 = zext i8 %15 to i16
  %20 = shl nuw i16 %19, 8
  %21 = or i16 %20, %13
  %22 = tail call i64 @_ZNK5blink14PhysicalOffset16ConvertToLogicalENS_20WritingDirectionModeENS_12PhysicalSizeES2_(%"struct.blink::PhysicalOffset"* %2, i16 %21, i64 %18, i64 0) #15
  %23 = trunc i64 %22 to i32
  %24 = lshr i64 %22, 32
  %25 = trunc i64 %24 to i32
  %26 = icmp slt i32 %23, 0
  br i1 %26, label %27, label %28

27:                                               ; preds = %3
  tail call void @_ZNK5blink12LayoutObject27FirstPositionInOrBeforeThisEv(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %4) #15
  br label %50

28:                                               ; preds = %3
  %29 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %30 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %29, i64 0, i32 0, i32 9
  %31 = bitcast [20 x i8]* %30 to i160*
  %32 = load i160, i160* %31, align 8
  %33 = and i160 %32, 15211807202738752817960438464512
  %34 = icmp eq i160 %33, 0
  %35 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %36 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %37 = select i1 %34, i32* %35, i32* %36
  %38 = load i32, i32* %37, align 4
  %39 = icmp sgt i32 %38, %23
  br i1 %39, label %41, label %40

40:                                               ; preds = %28
  tail call void @_ZNK5blink12LayoutObject25LastPositionInOrAfterThisEv(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %4) #15
  br label %50

41:                                               ; preds = %28
  %42 = icmp slt i32 %25, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %41
  tail call void @_ZNK5blink12LayoutObject27FirstPositionInOrBeforeThisEv(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %4) #15
  br label %50

44:                                               ; preds = %41
  %45 = select i1 %34, i32* %36, i32* %35
  %46 = load i32, i32* %45, align 4
  %47 = icmp sgt i32 %46, %25
  br i1 %47, label %49, label %48

48:                                               ; preds = %44
  tail call void @_ZNK5blink12LayoutObject25LastPositionInOrAfterThisEv(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutObject"* %4) #15
  br label %50

49:                                               ; preds = %44
  tail call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::PositionWithAffinityTemplate"* %0) #15
  br label %50

50:                                               ; preds = %49, %48, %43, %40, %27
  ret void
}

declare i64 @_ZNK5blink14PhysicalOffset16ConvertToLogicalENS_20WritingDirectionModeENS_12PhysicalSizeES2_(%"struct.blink::PhysicalOffset"*, i16, i64, i64) local_unnamed_addr #3

declare zeroext i8 @_ZNK5blink9LayoutBox17ResolvedDirectionEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare void @_ZNK5blink12LayoutObject27FirstPositionInOrBeforeThisEv(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutObject"*) local_unnamed_addr #3

declare void @_ZNK5blink12LayoutObject25LastPositionInOrAfterThisEv(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutObject"*) local_unnamed_addr #3

declare void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEEC1Ev(%"class.blink::PositionWithAffinityTemplate"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11LayoutBlock16PositionForPointERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* noalias sret, %"class.blink::LayoutBlock"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"struct.blink::PhysicalOffset"*
  %6 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 4
  %8 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %7 to i96*
  %9 = load i96, i96* %8, align 4
  %10 = and i96 %9, 1073741824
  %11 = icmp eq i96 %10, 0
  br i1 %11, label %18, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::PositionWithAffinityTemplate", %"class.blink::PositionWithAffinityTemplate"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.blink::PositionWithAffinityTemplate"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 -86, i64 24, i1 false)
  tail call void @_ZNK5blink11LayoutBlock42PositionForPointIfOutsideAtomicInlineLevelERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutBlock"* %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2)
  %15 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %16 = icmp eq %"class.blink::Node"* %15, null
  br i1 %16, label %17, label %253

17:                                               ; preds = %12
  tail call void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"* %0) #15
  br label %18

18:                                               ; preds = %17, %3
  %19 = bitcast %"class.blink::LayoutBlock"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %20 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %19, align 8
  %21 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %20, i64 28
  %22 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %21, align 8
  %23 = tail call zeroext i1 %22(%"class.blink::LayoutObject"* %6) #15
  br i1 %23, label %24, label %39

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0
  %26 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0, i32 8, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %39, label %29

29:                                               ; preds = %24
  %30 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase30is_layout_ng_printing_enabled_E, align 1, !range !5
  %31 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase41is_layout_ng_block_fragmentation_enabled_E, align 1
  %32 = or i8 %31, %30
  %33 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase40is_layout_ng_fragment_traversal_enabled_E, align 1
  %34 = or i8 %32, %33
  %35 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase45is_layout_ng_full_position_for_point_enabled_E, align 1
  %36 = or i8 %34, %35
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %39, label %38

38:                                               ; preds = %29
  tail call void @_ZNK5blink9LayoutBox27PositionForPointInFragmentsERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutBox"* %25, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2) #15
  br label %253

39:                                               ; preds = %29, %24, %18
  %40 = bitcast %"class.blink::LayoutBlock"* %1 to i1 (%"class.blink::LayoutObject"*, i32)***
  %41 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %40, align 8
  %42 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %41, i64 92
  %43 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %42, align 8
  %44 = tail call zeroext i1 %43(%"class.blink::LayoutObject"* %6, i32 44) #15
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0
  tail call void @_ZNK5blink9LayoutBox16PositionForPointERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutBox"* %46, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2) #15
  br label %253

47:                                               ; preds = %39
  %48 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #15
  %49 = bitcast %"struct.blink::PhysicalOffset"* %2 to i64*
  %50 = load i64, i64* %49, align 4
  store i64 %50, i64* %4, align 8
  %51 = load i96, i96* %8, align 4
  %52 = and i96 %51, 8589934592
  %53 = icmp eq i96 %52, 0
  %54 = trunc i64 %50 to i32
  %55 = lshr i64 %50, 32
  %56 = trunc i64 %55 to i32
  br i1 %53, label %88, label %57

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %59 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %59, i64 0, i32 0, i32 9
  %61 = bitcast [20 x i8]* %60 to i160*
  %62 = load i160, i160* %61, align 8
  %63 = lshr i160 %62, 74
  %64 = trunc i160 %63 to i32
  %65 = and i32 %64, 7
  switch i32 %65, label %66 [
    i32 5, label %88
    i32 2, label %88
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0
  %68 = tail call i64 @_ZNK5blink9LayoutBox33PixelSnappedScrolledContentOffsetEv(%"class.blink::LayoutBox"* %67) #15
  %69 = trunc i64 %68 to i32
  %70 = lshr i64 %68, 32
  %71 = trunc i64 %70 to i32
  %72 = icmp slt i32 %69, 0
  %73 = select i1 %72, i32 -2147483648, i32 2147483647
  %74 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %54, i32 %69) #15
  %75 = extractvalue { i32, i1 } %74, 1
  %76 = extractvalue { i32, i1 } %74, 0
  %77 = select i1 %75, i32 %73, i32 %76, !prof !4
  %78 = icmp slt i32 %71, 0
  %79 = select i1 %78, i32 -2147483648, i32 2147483647
  %80 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %56, i32 %71) #15
  %81 = extractvalue { i32, i1 } %80, 1
  %82 = extractvalue { i32, i1 } %80, 0
  %83 = select i1 %81, i32 %79, i32 %82, !prof !4
  %84 = zext i32 %83 to i64
  %85 = shl nuw i64 %84, 32
  %86 = zext i32 %77 to i64
  %87 = or i64 %85, %86
  store i64 %87, i64* %4, align 8
  br label %88

88:                                               ; preds = %47, %57, %57, %66
  %89 = phi i32 [ %56, %47 ], [ %56, %57 ], [ %56, %57 ], [ %83, %66 ]
  %90 = phi i32 [ %54, %47 ], [ %54, %57 ], [ %54, %57 ], [ %77, %66 ]
  %91 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0
  %92 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %1, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %93 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %92, align 8
  %94 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %93, i64 0, i32 0, i32 9
  %95 = bitcast [20 x i8]* %94 to i160*
  %96 = load i160, i160* %95, align 8
  %97 = and i160 %96, 15211807202738752817960438464512
  %98 = icmp eq i160 %97, 5070602400912917605986812821504
  br i1 %98, label %99, label %105, !prof !4

99:                                               ; preds = %88
  %100 = bitcast %"class.blink::LayoutBlock"* %1 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %101 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %100, align 8
  %102 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %101, i64 106
  %103 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %102, align 8
  %104 = tail call i32 %103(%"class.blink::LayoutObject"* %6, i32 %90, i32 0, %"class.blink::LayoutBox"* null) #15
  br label %105

105:                                              ; preds = %88, %99
  %106 = phi i32 [ %104, %99 ], [ %90, %88 ]
  %107 = load i96, i96* %8, align 4
  %108 = trunc i96 %107 to i32
  %109 = icmp slt i32 %108, 0
  %110 = select i1 %109, i32 %89, i32 %106
  %111 = bitcast %"class.blink::LayoutBlock"* %1 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %112 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %111, align 8
  %113 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %112, i64 13
  %114 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %113, align 8
  %115 = tail call %"class.blink::LayoutObjectChildList"* %114(%"class.blink::LayoutObject"* %6) #15
  %116 = icmp eq %"class.blink::LayoutObjectChildList"* %115, null
  br i1 %116, label %251, label %117

117:                                              ; preds = %105
  %118 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %115, i64 0, i32 1
  %119 = bitcast %"class.blink::LayoutObject"** %118 to %"class.blink::LayoutBox"**
  %120 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %119, align 8
  %121 = icmp eq %"class.blink::LayoutBox"* %120, null
  br i1 %121, label %251, label %122

122:                                              ; preds = %117, %153
  %123 = phi %"class.blink::LayoutBox"* [ %156, %153 ], [ %120, %117 ]
  %124 = bitcast %"class.blink::LayoutBox"* %123 to i1 (%"class.blink::LayoutObject"*)***
  %125 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %123, i64 0, i32 2, i32 1
  %126 = bitcast %"class.blink::LayoutSize"* %125 to i64*
  %127 = load i64, i64* %126, align 4
  %128 = icmp ugt i64 %127, 4294967295
  br i1 %128, label %129, label %153

129:                                              ; preds = %122
  %130 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %123, i64 0, i32 0, i32 0
  %131 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %123, i64 0, i32 0, i32 0, i32 5, i32 0
  %132 = bitcast %"class.blink::ComputedStyle"** %131 to %"class.blink::ComputedStyleBase"**
  %133 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %132, align 8
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %133, i64 0, i32 9
  %135 = bitcast [20 x i8]* %134 to i160*
  %136 = load i160, i160* %135, align 8
  %137 = and i160 %136, 3802951800684688204490109616128
  %138 = icmp eq i160 %137, 1267650600228229401496703205376
  br i1 %138, label %139, label %153

139:                                              ; preds = %129
  %140 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %123, i64 0, i32 0, i32 0, i32 4
  %141 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %140 to i96*
  %142 = load i96, i96* %141, align 4
  %143 = and i96 %142, 8388608
  %144 = icmp ne i96 %143, 0
  %145 = and i96 %142, 113336795588871485128704
  %146 = icmp eq i96 %145, 75557863725914323419136
  %147 = or i1 %146, %144
  br i1 %147, label %153, label %148

148:                                              ; preds = %139
  %149 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %124, align 8
  %150 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %149, i64 25
  %151 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %150, align 8
  %152 = tail call zeroext i1 %151(%"class.blink::LayoutObject"* %130) #15
  br i1 %152, label %153, label %158

153:                                              ; preds = %148, %122, %129, %139
  %154 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %123, i64 0, i32 0, i32 0, i32 8
  %155 = bitcast %"class.blink::LayoutObject"** %154 to %"class.blink::LayoutBox"**
  %156 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %155, align 8
  %157 = icmp eq %"class.blink::LayoutBox"* %156, null
  br i1 %157, label %251, label %122

158:                                              ; preds = %148
  %159 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %92, align 8
  %160 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %159, i64 0, i32 0, i32 9
  %161 = bitcast [20 x i8]* %160 to i160*
  %162 = load i160, i160* %161, align 8
  %163 = and i160 %162, 15211807202738752817960438464512
  %164 = icmp eq i160 %163, 5070602400912917605986812821504
  %165 = load i96, i96* %8, align 4
  %166 = trunc i96 %165 to i32
  %167 = icmp slt i32 %166, 0
  %168 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %123, i64 0, i32 2
  %169 = bitcast %"class.blink::LayoutRect"* %168 to i64*
  %170 = load i64, i64* %169, align 4
  %171 = lshr i64 %170, 32
  %172 = select i1 %167, i64 %171, i64 %170
  %173 = trunc i64 %172 to i32
  %174 = icmp sgt i32 %110, %173
  br i1 %174, label %179, label %175

175:                                              ; preds = %158
  %176 = xor i1 %164, true
  %177 = icmp eq i32 %110, %173
  %178 = and i1 %177, %176
  br i1 %178, label %179, label %180

179:                                              ; preds = %175, %158
  call void @_ZNK5blink11LayoutBlock43PositionForPointRespectingEditingBoundariesENS_13LineLayoutBoxERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutBlock"* %1, %"class.blink::LayoutObject"* %130, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %5)
  br label %252

180:                                              ; preds = %175
  %181 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %111, align 8
  %182 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %181, i64 13
  %183 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %182, align 8
  %184 = tail call %"class.blink::LayoutObjectChildList"* %183(%"class.blink::LayoutObject"* %6) #15
  %185 = icmp eq %"class.blink::LayoutObjectChildList"* %184, null
  br i1 %185, label %251, label %186

186:                                              ; preds = %180
  %187 = bitcast %"class.blink::LayoutObjectChildList"* %184 to %"class.blink::LayoutBox"**
  %188 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %187, align 8
  %189 = icmp eq %"class.blink::LayoutBox"* %188, null
  br i1 %189, label %251, label %190

190:                                              ; preds = %186, %245
  %191 = phi %"class.blink::LayoutBox"* [ %248, %245 ], [ %188, %186 ]
  %192 = bitcast %"class.blink::LayoutBox"* %191 to i1 (%"class.blink::LayoutObject"*)***
  %193 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %191, i64 0, i32 2, i32 1
  %194 = bitcast %"class.blink::LayoutSize"* %193 to i64*
  %195 = load i64, i64* %194, align 4
  %196 = icmp ugt i64 %195, 4294967295
  br i1 %196, label %197, label %245

197:                                              ; preds = %190
  %198 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %191, i64 0, i32 0, i32 0
  %199 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %191, i64 0, i32 0, i32 0, i32 5, i32 0
  %200 = bitcast %"class.blink::ComputedStyle"** %199 to %"class.blink::ComputedStyleBase"**
  %201 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %200, align 8
  %202 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %201, i64 0, i32 9
  %203 = bitcast [20 x i8]* %202 to i160*
  %204 = load i160, i160* %203, align 8
  %205 = and i160 %204, 3802951800684688204490109616128
  %206 = icmp eq i160 %205, 1267650600228229401496703205376
  br i1 %206, label %207, label %245

207:                                              ; preds = %197
  %208 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %191, i64 0, i32 0, i32 0, i32 4
  %209 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %208 to i96*
  %210 = load i96, i96* %209, align 4
  %211 = and i96 %210, 8388608
  %212 = icmp ne i96 %211, 0
  %213 = and i96 %210, 113336795588871485128704
  %214 = icmp eq i96 %213, 75557863725914323419136
  %215 = or i1 %214, %212
  br i1 %215, label %245, label %216

216:                                              ; preds = %207
  %217 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %192, align 8
  %218 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %217, i64 25
  %219 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %218, align 8
  %220 = tail call zeroext i1 %219(%"class.blink::LayoutObject"* %198) #15
  br i1 %220, label %245, label %221

221:                                              ; preds = %216
  %222 = load i96, i96* %8, align 4
  %223 = trunc i96 %222 to i32
  %224 = icmp slt i32 %223, 0
  %225 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %191, i64 0, i32 2
  %226 = bitcast %"class.blink::LayoutRect"* %225 to i64*
  %227 = load i64, i64* %226, align 4
  %228 = lshr i64 %227, 32
  %229 = select i1 %224, i64 %228, i64 %227
  %230 = trunc i64 %229 to i32
  %231 = load i64, i64* %194, align 4
  %232 = lshr i64 %231, 32
  %233 = select i1 %224, i64 %232, i64 %231
  %234 = trunc i64 %233 to i32
  %235 = icmp slt i32 %234, 0
  %236 = select i1 %235, i32 -2147483648, i32 2147483647
  %237 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %230, i32 %234) #15
  %238 = extractvalue { i32, i1 } %237, 1
  %239 = extractvalue { i32, i1 } %237, 0
  %240 = select i1 %238, i32 %236, i32 %239, !prof !4
  %241 = icmp slt i32 %110, %240
  %242 = icmp eq i32 %110, %240
  %243 = and i1 %164, %242
  %244 = or i1 %241, %243
  br i1 %244, label %250, label %245

245:                                              ; preds = %216, %221, %190, %197, %207
  %246 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %191, i64 0, i32 0, i32 0, i32 9
  %247 = bitcast %"class.blink::LayoutObject"** %246 to %"class.blink::LayoutBox"**
  %248 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %247, align 8
  %249 = icmp eq %"class.blink::LayoutBox"* %248, null
  br i1 %249, label %251, label %190

250:                                              ; preds = %221
  call void @_ZNK5blink11LayoutBlock43PositionForPointRespectingEditingBoundariesENS_13LineLayoutBoxERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutBlock"* %1, %"class.blink::LayoutObject"* %198, %"struct.blink::PhysicalOffset"* nonnull dereferenceable(8) %5)
  br label %252

251:                                              ; preds = %153, %245, %180, %105, %117, %186
  tail call void @_ZNK5blink9LayoutBox16PositionForPointERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret %0, %"class.blink::LayoutBox"* %91, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2) #15
  br label %252

252:                                              ; preds = %250, %251, %179
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #15
  br label %253

253:                                              ; preds = %12, %252, %45, %38
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink28PositionWithAffinityTemplateINS_16EditingAlgorithmINS_13NodeTraversalEEEED1Ev(%"class.blink::PositionWithAffinityTemplate"*) unnamed_addr #4

declare void @_ZNK5blink9LayoutBox27PositionForPointInFragmentsERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) local_unnamed_addr #3

declare void @_ZNK5blink9LayoutBox16PositionForPointERKNS_14PhysicalOffsetE(%"class.blink::PositionWithAffinityTemplate"* sret, %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11LayoutBlock17OffsetForContentsERNS_14PhysicalOffsetE(%"class.blink::LayoutBlock"*, %"struct.blink::PhysicalOffset"* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 8589934592
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %44, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %10 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %10, i64 0, i32 0, i32 9
  %12 = bitcast [20 x i8]* %11 to i160*
  %13 = load i160, i160* %12, align 8
  %14 = lshr i160 %13, 74
  %15 = trunc i160 %14 to i32
  %16 = and i32 %15, 7
  switch i32 %16, label %17 [
    i32 5, label %44
    i32 2, label %44
  ]

17:                                               ; preds = %8
  %18 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %19 = tail call i64 @_ZNK5blink9LayoutBox33PixelSnappedScrolledContentOffsetEv(%"class.blink::LayoutBox"* %18) #15
  %20 = trunc i64 %19 to i32
  %21 = lshr i64 %19, 32
  %22 = trunc i64 %21 to i32
  %23 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 0, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = icmp slt i32 %20, 0
  %26 = select i1 %25, i32 -2147483648, i32 2147483647
  %27 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %24, i32 %20) #15
  %28 = extractvalue { i32, i1 } %27, 1
  %29 = extractvalue { i32, i1 } %27, 0
  %30 = select i1 %28, i32 %26, i32 %29, !prof !4
  %31 = getelementptr inbounds %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset"* %1, i64 0, i32 1, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %22, 0
  %34 = select i1 %33, i32 -2147483648, i32 2147483647
  %35 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %32, i32 %22) #15
  %36 = extractvalue { i32, i1 } %35, 1
  %37 = extractvalue { i32, i1 } %35, 0
  %38 = select i1 %36, i32 %34, i32 %37, !prof !4
  %39 = zext i32 %38 to i64
  %40 = shl nuw i64 %39, 32
  %41 = zext i32 %30 to i64
  %42 = or i64 %40, %41
  %43 = bitcast %"struct.blink::PhysicalOffset"* %1 to i64*
  store i64 %42, i64* %43, align 4
  br label %44

44:                                               ; preds = %8, %8, %2, %17
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock17ScrollbarsChangedEbbNS0_22ScrollbarChangeContextE(%"class.blink::LayoutBlock"* nocapture, i1 zeroext, i1 zeroext, i32) unnamed_addr #7 align 2 {
  %5 = zext i1 %2 to i16
  %6 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 2
  %7 = load i16, i16* %6, align 8
  %8 = shl nuw nsw i16 %5, 3
  %9 = and i16 %7, 8
  %10 = and i16 %7, -25
  %11 = zext i1 %1 to i16
  %12 = shl nuw nsw i16 %11, 4
  %13 = and i16 %7, 16
  %14 = or i16 %8, %12
  %15 = or i16 %14, %13
  %16 = or i16 %15, %9
  %17 = or i16 %16, %10
  store i16 %17, i16* %6, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink11LayoutBlock29ComputeIntrinsicLogicalWidthsEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %"struct.blink::MinMaxSizes"*
  %4 = alloca i64, align 8
  %5 = bitcast i64* %4 to %"class.blink::Length"*
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %9 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %8)
  %10 = extractvalue { i64, i64 } %9, 0
  %11 = trunc i64 %10 to i32
  %12 = lshr i64 %10, 32
  %13 = trunc i64 %12 to i32
  %14 = icmp slt i32 %13, 0
  %15 = select i1 %14, i32 -2147483648, i32 2147483647
  %16 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %11, i32 %13) #15
  %17 = extractvalue { i32, i1 } %16, 1
  %18 = extractvalue { i32, i1 } %16, 0
  %19 = select i1 %17, i32 %15, i32 %18, !prof !4
  %20 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %21 = tail call i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"* %20)
  %22 = icmp slt i32 %19, 0
  %23 = select i1 %22, i32 -2147483648, i32 2147483647
  %24 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %21, i32 %19) #15
  %25 = extractvalue { i32, i1 } %24, 1
  %26 = extractvalue { i32, i1 } %24, 0
  %27 = select i1 %25, i32 %23, i32 %26, !prof !4
  %28 = icmp eq %"class.blink::LayoutBlock"* %0, null
  br i1 %28, label %44, label %29

29:                                               ; preds = %1
  %30 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %31 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %30, align 8
  %32 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %31, i64 24
  %33 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %32, align 8
  %34 = tail call zeroext i1 %33(%"class.blink::LayoutObject"* %7) #15
  br i1 %34, label %35, label %44

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 1, i32 0, i32 0, i32 0, i32 1, i32 1
  %37 = bitcast i8* %36 to %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"**
  %38 = load %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"** %37, align 8
  %39 = icmp eq %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %38, null
  br i1 %39, label %44, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData", %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"* %38, i64 0, i32 3
  %42 = load %"class.blink::LayoutMultiColumnFlowThread"*, %"class.blink::LayoutMultiColumnFlowThread"** %41, align 8
  %43 = icmp eq %"class.blink::LayoutMultiColumnFlowThread"* %42, null
  br i1 %43, label %44, label %181

44:                                               ; preds = %29, %35, %1, %40
  %45 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %46 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %46, i64 0, i32 0, i32 9
  %48 = bitcast [20 x i8]* %47 to i160*
  %49 = load i160, i160* %48, align 8
  %50 = and i160 %49, 15211807202738752817960438464512
  %51 = icmp eq i160 %50, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %44
  %53 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %8) #15
  br i1 %53, label %56, label %75

54:                                               ; preds = %44
  %55 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %8) #15
  br i1 %55, label %56, label %75

56:                                               ; preds = %52, %54
  %57 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %45, align 8
  %58 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %57, i64 0, i32 0, i32 9
  %59 = bitcast [20 x i8]* %58 to i160*
  %60 = load i160, i160* %59, align 8
  %61 = and i160 %60, 15211807202738752817960438464512
  %62 = icmp eq i160 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %56
  %64 = tail call i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %8) #15
  br label %67

65:                                               ; preds = %56
  %66 = tail call i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %8) #15
  br label %67

67:                                               ; preds = %63, %65
  %68 = phi i32 [ %64, %63 ], [ %66, %65 ]
  %69 = icmp slt i32 %68, 0
  %70 = select i1 %69, i32 -2147483648, i32 2147483647
  %71 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %27, i32 %68) #15
  %72 = extractvalue { i32, i1 } %71, 1
  %73 = extractvalue { i32, i1 } %71, 0
  %74 = select i1 %72, i32 %70, i32 %73, !prof !4
  br label %325

75:                                               ; preds = %52, %54
  %76 = tail call i32 @_ZNK5blink9LayoutBox33DefaultIntrinsicContentInlineSizeEv(%"class.blink::LayoutBox"* %8) #15
  %77 = icmp eq i32 %76, -64
  br i1 %77, label %122, label %78

78:                                               ; preds = %75
  %79 = icmp slt i32 %76, 0
  %80 = select i1 %79, i32 -2147483648, i32 2147483647
  %81 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %27, i32 %76) #15
  %82 = extractvalue { i32, i1 } %81, 1
  %83 = extractvalue { i32, i1 } %81, 0
  %84 = select i1 %82, i32 %80, i32 %83, !prof !4
  %85 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %86 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %85, align 8
  %87 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %86, i64 92
  %88 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %87, align 8
  %89 = tail call zeroext i1 %88(%"class.blink::LayoutObject"* %7, i32 52) #15
  br i1 %89, label %95, label %90

90:                                               ; preds = %78
  %91 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %85, align 8
  %92 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %91, i64 92
  %93 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %92, align 8
  %94 = tail call zeroext i1 %93(%"class.blink::LayoutObject"* %7, i32 34) #15
  br i1 %94, label %95, label %106

95:                                               ; preds = %78, %90
  %96 = icmp sgt i32 %19, -1
  %97 = select i1 %96, i32 -2147483648, i32 2147483647
  %98 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %27, i32 %19) #15
  %99 = extractvalue { i32, i1 } %98, 1
  %100 = extractvalue { i32, i1 } %98, 0
  %101 = select i1 %99, i32 %97, i32 %100, !prof !4
  %102 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %84, i32 %19) #15
  %103 = extractvalue { i32, i1 } %102, 1
  %104 = extractvalue { i32, i1 } %102, 0
  %105 = select i1 %103, i32 %97, i32 %104, !prof !4
  br label %106

106:                                              ; preds = %95, %90
  %107 = phi i32 [ %101, %95 ], [ %27, %90 ]
  %108 = phi i32 [ %105, %95 ], [ %84, %90 ]
  %109 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %45, align 8
  %110 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %109, i64 0, i32 0, i32 9
  %111 = bitcast [20 x i8]* %110 to i160*
  %112 = load i160, i160* %111, align 8
  %113 = and i160 %112, 15211807202738752817960438464512
  %114 = icmp eq i160 %113, 0
  %115 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %109, i64 0, i32 0, i32 5, i32 0, i32 0
  %116 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %116, i64 0, i32 8
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %116, i64 0, i32 3
  %119 = select i1 %114, %"class.blink::Length"* %117, %"class.blink::Length"* %118
  %120 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %119, i64 0, i32 2
  %121 = load i8, i8* %120, align 1
  switch i8 %121, label %325 [
    i8 8, label %324
    i8 1, label %324
  ]

122:                                              ; preds = %75
  %123 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %45, align 8
  %124 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %123, i64 0, i32 0, i32 3, i32 0, i32 0
  %125 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %125, i64 0, i32 2, i32 0, i32 0
  %127 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %126, align 8
  %128 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %127, i64 0, i32 2, i32 0, i32 0
  %129 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %129, i64 0, i32 45
  %131 = load i32, i32* %130, align 4
  %132 = and i32 %131, 24
  %133 = icmp eq i32 %132, 24
  br i1 %133, label %134, label %181

134:                                              ; preds = %122
  %135 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %136 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %135 to i96*
  %137 = load i96, i96* %136, align 4
  %138 = and i96 %137, 1207959552
  %139 = icmp eq i96 %138, 134217728
  br i1 %139, label %181, label %140

140:                                              ; preds = %134
  %141 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %142 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %141, align 8
  %143 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %142, i64 92
  %144 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %143, align 8
  %145 = tail call zeroext i1 %144(%"class.blink::LayoutObject"* %7, i32 43) #15
  br i1 %145, label %181, label %146

146:                                              ; preds = %140
  %147 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %141, align 8
  %148 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %147, i64 92
  %149 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %148, align 8
  %150 = tail call zeroext i1 %149(%"class.blink::LayoutObject"* %7, i32 46) #15
  br i1 %150, label %171, label %151

151:                                              ; preds = %146
  %152 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %141, align 8
  %153 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %152, i64 92
  %154 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %153, align 8
  %155 = tail call zeroext i1 %154(%"class.blink::LayoutObject"* %7, i32 48) #15
  br i1 %155, label %171, label %156

156:                                              ; preds = %151
  %157 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %141, align 8
  %158 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %157, i64 92
  %159 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %158, align 8
  %160 = tail call zeroext i1 %159(%"class.blink::LayoutObject"* %7, i32 45) #15
  br i1 %160, label %171, label %161

161:                                              ; preds = %156
  %162 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %141, align 8
  %163 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %162, i64 92
  %164 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %163, align 8
  %165 = tail call zeroext i1 %164(%"class.blink::LayoutObject"* %7, i32 49) #15
  br i1 %165, label %171, label %166

166:                                              ; preds = %161
  %167 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %141, align 8
  %168 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %167, i64 92
  %169 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %168, align 8
  %170 = tail call zeroext i1 %169(%"class.blink::LayoutObject"* %7, i32 50) #15
  br i1 %170, label %171, label %176

171:                                              ; preds = %166, %161, %156, %151, %146
  %172 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %141, align 8
  %173 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %172, i64 92
  %174 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %173, align 8
  %175 = tail call zeroext i1 %174(%"class.blink::LayoutObject"* %7, i32 45) #15
  br i1 %175, label %176, label %181

176:                                              ; preds = %166, %171
  %177 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %141, align 8
  %178 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %177, i64 92
  %179 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %178, align 8
  %180 = tail call zeroext i1 %179(%"class.blink::LayoutObject"* %7, i32 44) #15
  br i1 %180, label %181, label %325

181:                                              ; preds = %176, %134, %140, %171, %122, %40
  %182 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %182) #15
  %183 = bitcast i64* %2 to %"class.blink::LayoutUnit"*
  %184 = bitcast i64* %2 to i32*
  %185 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %3, i64 0, i32 1
  %186 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %185, i64 0, i32 0
  store i32 0, i32* %184, align 8
  %187 = getelementptr inbounds %"struct.blink::MinMaxSizes", %"struct.blink::MinMaxSizes"* %3, i64 0, i32 1, i32 0
  store i32 0, i32* %187, align 4
  %188 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %189 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %188 to i96*
  %190 = load i96, i96* %189, align 4
  %191 = and i96 %190, 17592186044416
  %192 = icmp eq i96 %191, 0
  br i1 %192, label %195, label %193

193:                                              ; preds = %181
  %194 = bitcast %"class.blink::LayoutBlock"* %0 to %"class.blink::LayoutBlockFlow"*
  call void @_ZN5blink15LayoutBlockFlow35ComputeInlinePreferredLogicalWidthsERNS_10LayoutUnitES2_(%"class.blink::LayoutBlockFlow"* %194, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %183, %"class.blink::LayoutUnit"* dereferenceable(4) %185) #15
  br label %196

195:                                              ; preds = %181
  call void @_ZNK5blink11LayoutBlock34ComputeBlockPreferredLogicalWidthsERNS_10LayoutUnitES2_(%"class.blink::LayoutBlock"* %0, %"class.blink::LayoutUnit"* nonnull dereferenceable(4) %183, %"class.blink::LayoutUnit"* dereferenceable(4) %185)
  br label %196

196:                                              ; preds = %195, %193
  %197 = load i32, i32* %184, align 8
  %198 = load i32, i32* %186, align 4
  %199 = icmp slt i32 %197, %198
  %200 = select i1 %199, %"class.blink::LayoutUnit"* %185, %"class.blink::LayoutUnit"* %183
  %201 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %200, i64 0, i32 0
  %202 = load i32, i32* %201, align 4
  store i32 %202, i32* %186, align 4
  %203 = load i96, i96* %189, align 4
  %204 = and i96 %203, 16777216
  %205 = icmp eq i96 %204, 0
  br i1 %205, label %206, label %231

206:                                              ; preds = %196
  %207 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %208 = load %"class.blink::Node"*, %"class.blink::Node"** %207, align 8
  %209 = icmp eq %"class.blink::Node"* %208, null
  br i1 %209, label %231, label %210

210:                                              ; preds = %206
  %211 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %208, i64 0, i32 1
  %212 = load i32, i32* %211, align 8
  %213 = and i32 %212, 48
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %231

215:                                              ; preds = %210
  %216 = load %"class.blink::HTMLQualifiedName"*, %"class.blink::HTMLQualifiedName"** @_ZN5blink10html_names11kMarqueeTagE, align 8
  %217 = getelementptr inbounds %"class.blink::HTMLQualifiedName", %"class.blink::HTMLQualifiedName"* %216, i64 0, i32 0, i32 0, i32 0
  %218 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %217, align 8
  %219 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %208, i64 1, i32 2
  %220 = bitcast %"class.blink::Member.318"* %219 to %"class.blink::QualifiedName::QualifiedNameImpl"**
  %221 = load %"class.blink::QualifiedName::QualifiedNameImpl"*, %"class.blink::QualifiedName::QualifiedNameImpl"** %220, align 8
  %222 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %221, i64 0, i32 3, i32 0, i32 0, i32 0
  %223 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %222, align 8
  %224 = getelementptr inbounds %"class.blink::QualifiedName::QualifiedNameImpl", %"class.blink::QualifiedName::QualifiedNameImpl"* %218, i64 0, i32 3, i32 0, i32 0, i32 0
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  %226 = icmp eq %"class.WTF::StringImpl"* %223, %225
  br i1 %226, label %227, label %231

227:                                              ; preds = %215
  %228 = bitcast %"class.blink::Node"* %208 to %"class.blink::HTMLMarqueeElement"*
  %229 = call zeroext i1 @_ZNK5blink18HTMLMarqueeElement12IsHorizontalEv(%"class.blink::HTMLMarqueeElement"* nonnull %228) #15
  br i1 %229, label %230, label %231

230:                                              ; preds = %227
  store i32 0, i32* %184, align 8
  br label %231

231:                                              ; preds = %215, %196, %206, %210, %230, %227
  %232 = call zeroext i1 @_ZN5blink9IsListBoxEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"* %7) #15
  br i1 %232, label %233, label %249

233:                                              ; preds = %231
  %234 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %235 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %234, align 8
  %236 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %235, i64 0, i32 0, i32 9
  %237 = bitcast [20 x i8]* %236 to i160*
  %238 = load i160, i160* %237, align 8
  %239 = and i160 %238, 15211807202738752817960438464512
  %240 = icmp eq i160 %239, 0
  %241 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %235, i64 0, i32 0, i32 5, i32 0, i32 0
  %242 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %241, align 8
  %243 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %242, i64 0, i32 8
  %244 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %242, i64 0, i32 3
  %245 = select i1 %240, %"class.blink::Length"* %243, %"class.blink::Length"* %244
  %246 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %245, i64 0, i32 2
  %247 = load i8, i8* %246, align 1
  switch i8 %247, label %249 [
    i8 8, label %248
    i8 1, label %248
  ]

248:                                              ; preds = %233, %233
  store i32 0, i32* %184, align 8
  br label %249

249:                                              ; preds = %233, %231, %248
  %250 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %251 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %250, align 8
  %252 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %251, i64 92
  %253 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %252, align 8
  %254 = call zeroext i1 %253(%"class.blink::LayoutObject"* %7, i32 46) #15
  br i1 %254, label %255, label %307

255:                                              ; preds = %249
  %256 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %256) #15
  %257 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 2
  %258 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %5, i64 0, i32 3
  store i64 -6148914691236517206, i64* %4, align 8
  br i1 %28, label %265, label %259

259:                                              ; preds = %255
  %260 = bitcast %"class.blink::LayoutBlock"* %0 to %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)***
  %261 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)*** %260, align 8
  %262 = getelementptr inbounds %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)** %261, i64 32
  %263 = load %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutNGTableCellInterface"* (%"class.blink::LayoutObject"*)** %262, align 8
  %264 = call %"class.blink::LayoutNGTableCellInterface"* %263(%"class.blink::LayoutObject"* %7) #15
  br label %265

265:                                              ; preds = %255, %259
  %266 = phi %"class.blink::LayoutNGTableCellInterface"* [ %264, %259 ], [ null, %255 ]
  %267 = bitcast %"class.blink::LayoutNGTableCellInterface"* %266 to void (%"class.blink::Length"*, %"class.blink::LayoutNGTableCellInterface"*)***
  %268 = load void (%"class.blink::Length"*, %"class.blink::LayoutNGTableCellInterface"*)**, void (%"class.blink::Length"*, %"class.blink::LayoutNGTableCellInterface"*)*** %267, align 8
  %269 = getelementptr inbounds void (%"class.blink::Length"*, %"class.blink::LayoutNGTableCellInterface"*)*, void (%"class.blink::Length"*, %"class.blink::LayoutNGTableCellInterface"*)** %268, i64 5
  %270 = load void (%"class.blink::Length"*, %"class.blink::LayoutNGTableCellInterface"*)*, void (%"class.blink::Length"*, %"class.blink::LayoutNGTableCellInterface"*)** %269, align 8
  call void %270(%"class.blink::Length"* nonnull sret %5, %"class.blink::LayoutNGTableCellInterface"* %266) #15
  %271 = load i8, i8* %257, align 1
  %272 = icmp eq i8 %271, 2
  br i1 %272, label %273, label %302

273:                                              ; preds = %265
  %274 = load i8, i8* %258, align 2, !range !5
  %275 = icmp eq i8 %274, 0
  %276 = bitcast i64* %4 to float*
  %277 = load float, float* %276, align 8
  %278 = bitcast float %277 to i32
  %279 = sitofp i32 %278 to float
  %280 = select i1 %275, float %279, float %277
  %281 = fcmp ogt float %280, 0.000000e+00
  br i1 %281, label %282, label %306

282:                                              ; preds = %273
  %283 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %283)
  %284 = fmul float %280, 6.400000e+01
  %285 = fcmp ult float %284, 0xC1E0000000000000
  %286 = fcmp ugt float %284, 0x41DFFFFFE0000000
  %287 = fcmp ogt float %284, 0xC1E0000000000000
  %288 = select i1 %287, float %284, float 0xC1E0000000000000
  %289 = fptosi float %288 to i32
  %290 = select i1 %285, i32 0, i32 2147483647
  %291 = select i1 %286, i32 %290, i32 %289
  %292 = sitofp i32 %291 to float
  %293 = fmul float %292, 1.562500e-02
  %294 = call i32 @_ZNK5blink9LayoutBox40AdjustContentBoxLogicalWidthForBoxSizingEf(%"class.blink::LayoutBox"* %8, float %293) #15
  store i32 %294, i32* %6, align 4
  %295 = load i32, i32* %184, align 8
  %296 = icmp slt i32 %295, %294
  %297 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %298 = select i1 %296, %"class.blink::LayoutUnit"* %297, %"class.blink::LayoutUnit"* %183
  %299 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %298, i64 0, i32 0
  %300 = load i32, i32* %299, align 4
  store i32 %300, i32* %186, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %283)
  %301 = load i8, i8* %257, align 1
  br label %302

302:                                              ; preds = %282, %265
  %303 = phi i8 [ %271, %265 ], [ %301, %282 ]
  %304 = icmp eq i8 %303, 8
  br i1 %304, label %305, label %306

305:                                              ; preds = %302
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %5) #15
  br label %306

306:                                              ; preds = %273, %302, %305
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %256) #15
  br label %307

307:                                              ; preds = %306, %249
  %308 = load i64, i64* %2, align 8
  %309 = trunc i64 %308 to i32
  %310 = lshr i64 %308, 32
  %311 = trunc i64 %310 to i32
  %312 = icmp slt i32 %309, 0
  %313 = select i1 %312, i32 -2147483648, i32 2147483647
  %314 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %27, i32 %309) #15
  %315 = extractvalue { i32, i1 } %314, 1
  %316 = extractvalue { i32, i1 } %314, 0
  %317 = select i1 %315, i32 %313, i32 %316, !prof !4
  %318 = icmp slt i32 %311, 0
  %319 = select i1 %318, i32 -2147483648, i32 2147483647
  %320 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %27, i32 %311) #15
  %321 = extractvalue { i32, i1 } %320, 1
  %322 = extractvalue { i32, i1 } %320, 0
  %323 = select i1 %321, i32 %319, i32 %322, !prof !4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %182) #15
  br label %325

324:                                              ; preds = %106, %106
  br label %325

325:                                              ; preds = %176, %106, %324, %307, %67
  %326 = phi i32 [ %74, %67 ], [ %107, %324 ], [ %317, %307 ], [ %108, %106 ], [ %27, %176 ]
  %327 = phi i32 [ %74, %67 ], [ %108, %324 ], [ %323, %307 ], [ %108, %106 ], [ %27, %176 ]
  %328 = zext i32 %327 to i64
  %329 = shl nuw i64 %328, 32
  %330 = zext i32 %326 to i64
  %331 = or i64 %329, %330
  ret i64 %331
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"*) local_unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 1190036353683150593851392
  %8 = icmp eq i160 %7, 340010386766614455386112
  br i1 %8, label %39, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 8589934592
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %39, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %17 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #15
  %18 = icmp eq %"class.blink::PaintLayerScrollableArea"* %17, null
  br i1 %18, label %46, label %19

19:                                               ; preds = %15
  %20 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #15
  %21 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 3
  %22 = load i8, i8* %21, align 8
  %23 = and i8 %22, 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %20, i64 0, i32 6, i32 1, i32 0, i32 0
  %27 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %26, align 8
  %28 = icmp eq %"class.blink::Scrollbar"* %27, null
  br i1 %28, label %29, label %46

29:                                               ; preds = %25, %19
  %30 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %16) #15
  %31 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 3
  %32 = load i8, i8* %31, align 8
  %33 = and i8 %32, 2
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %30, i64 0, i32 6, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %36, align 8
  %38 = icmp eq %"class.blink::Scrollbar"* %37, null
  br i1 %38, label %39, label %46

39:                                               ; preds = %1, %9, %29, %35
  %40 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %41 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %40, i64 0, i32 0, i32 9
  %42 = bitcast [20 x i8]* %41 to i160*
  %43 = load i160, i160* %42, align 8
  %44 = and i160 %43, 270215977642229760
  %45 = icmp eq i160 %44, 0
  br i1 %45, label %86, label %46

46:                                               ; preds = %15, %25, %35, %39
  %47 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %0, i32 0, i32 0, i32 1) #15
  %48 = extractvalue { i64, i64 } %47, 0
  %49 = trunc i64 %48 to i32
  %50 = lshr i64 %48, 32
  %51 = extractvalue { i64, i64 } %47, 1
  %52 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %53 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %52, i64 0, i32 0, i32 9
  %54 = bitcast [20 x i8]* %53 to i160*
  %55 = load i160, i160* %54, align 8
  %56 = lshr i160 %55, 102
  %57 = trunc i160 %56 to i8
  %58 = and i8 %57, 3
  switch i8 %58, label %72 [
    i8 0, label %59
    i8 1, label %65
    i8 3, label %65
    i8 2, label %68
  ]

59:                                               ; preds = %46
  %60 = lshr i64 %51, 32
  %61 = trunc i64 %60 to i32
  %62 = and i64 %48, 4294967295
  %63 = shl i64 %51, 32
  %64 = or i64 %63, %62
  br label %73

65:                                               ; preds = %46, %46
  %66 = and i64 %51, -4294967296
  %67 = or i64 %66, %50
  br label %73

68:                                               ; preds = %46
  %69 = lshr i64 %51, 32
  %70 = and i64 %48, -4294967296
  %71 = or i64 %70, %69
  br label %73

72:                                               ; preds = %46
  unreachable

73:                                               ; preds = %59, %65, %68
  %74 = phi i64 [ %71, %68 ], [ %67, %65 ], [ %64, %59 ]
  %75 = phi i64 [ %51, %68 ], [ %51, %65 ], [ %50, %59 ]
  %76 = phi i32 [ %49, %68 ], [ %49, %65 ], [ %61, %59 ]
  %77 = trunc i64 %75 to i32
  %78 = and i160 %55, 41538374868278621028243970633760768
  %79 = icmp ne i160 %78, 0
  %80 = select i1 %79, i32 %76, i32 %77
  %81 = select i1 %79, i32 %77, i32 %76
  %82 = zext i32 %80 to i64
  %83 = shl nuw i64 %82, 32
  %84 = zext i32 %81 to i64
  %85 = or i64 %83, %84
  br label %86

86:                                               ; preds = %39, %73
  %87 = phi i64 [ %74, %73 ], [ 0, %39 ]
  %88 = phi i64 [ %85, %73 ], [ 0, %39 ]
  %89 = insertvalue { i64, i64 } undef, i64 %88, 0
  %90 = insertvalue { i64, i64 } %89, i64 %87, 1
  ret { i64, i64 } %90
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject28BorderAndPaddingLogicalWidthEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !40
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8, !noalias !40
  %7 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i8*
  %8 = and i160 %6, 15211807202738752817960438464512
  %9 = icmp eq i160 %8, 0
  %10 = and i160 %6, 41538374868278621028243970633760768
  %11 = icmp eq i160 %10, 0
  %12 = select i1 %11, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %13 = select i1 %11, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %14 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %15 = select i1 %9, { i64, i64 } %13, { i64, i64 } %12
  %16 = extractvalue { i64, i64 } %14, 0
  %17 = extractvalue { i64, i64 } %15, 1
  %18 = getelementptr inbounds i8, i8* %7, i64 %17
  %19 = bitcast i8* %18 to %"class.blink::LayoutBoxModelObject"*
  %20 = and i64 %16, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %1
  %23 = bitcast i8* %18 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = add i64 %16, -1
  %26 = getelementptr i8, i8* %24, i64 %25
  %27 = bitcast i8* %26 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %28 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %27, align 8
  br label %31

29:                                               ; preds = %1
  %30 = inttoptr i64 %16 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %31

31:                                               ; preds = %22, %29
  %32 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %28, %22 ], [ %30, %29 ]
  %33 = tail call i32 %32(%"class.blink::LayoutBoxModelObject"* %19) #15
  %34 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !43
  %35 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %34, i64 0, i32 0, i32 9
  %36 = bitcast [20 x i8]* %35 to i160*
  %37 = load i160, i160* %36, align 8, !noalias !43
  %38 = and i160 %37, 15211807202738752817960438464512
  %39 = icmp eq i160 %38, 0
  %40 = and i160 %37, 41538374868278621028243970633760768
  %41 = icmp eq i160 %40, 0
  %42 = select i1 %41, { i64, i64 } { i64 985, i64 0 }, { i64, i64 } { i64 977, i64 0 }
  %43 = select i1 %41, { i64, i64 } { i64 1001, i64 0 }, { i64, i64 } { i64 993, i64 0 }
  %44 = select i1 %39, { i64, i64 } %43, { i64, i64 } %42
  %45 = select i1 %39, { i64, i64 } %43, { i64, i64 } %42
  %46 = extractvalue { i64, i64 } %44, 0
  %47 = extractvalue { i64, i64 } %45, 1
  %48 = getelementptr inbounds i8, i8* %7, i64 %47
  %49 = bitcast i8* %48 to %"class.blink::LayoutBoxModelObject"*
  %50 = and i64 %46, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %59, label %52

52:                                               ; preds = %31
  %53 = bitcast i8* %48 to i8**
  %54 = load i8*, i8** %53, align 8
  %55 = add i64 %46, -1
  %56 = getelementptr i8, i8* %54, i64 %55
  %57 = bitcast i8* %56 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %58 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %57, align 8
  br label %61

59:                                               ; preds = %31
  %60 = inttoptr i64 %46 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %61

61:                                               ; preds = %52, %59
  %62 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %58, %52 ], [ %60, %59 ]
  %63 = tail call i32 %62(%"class.blink::LayoutBoxModelObject"* %49) #15
  %64 = icmp slt i32 %63, 0
  %65 = select i1 %64, i32 -2147483648, i32 2147483647
  %66 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %33, i32 %63) #15
  %67 = extractvalue { i32, i1 } %66, 1
  %68 = extractvalue { i32, i1 } %66, 0
  %69 = select i1 %67, i32 %65, i32 %68, !prof !4
  %70 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !46
  %71 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %70, i64 0, i32 0, i32 9
  %72 = bitcast [20 x i8]* %71 to i160*
  %73 = load i160, i160* %72, align 8, !noalias !46
  %74 = and i160 %73, 15211807202738752817960438464512
  %75 = icmp eq i160 %74, 0
  %76 = and i160 %73, 41538374868278621028243970633760768
  %77 = icmp eq i160 %76, 0
  %78 = select i1 %77, { i64, i64 } { i64 945, i64 0 }, { i64, i64 } { i64 953, i64 0 }
  %79 = select i1 %77, { i64, i64 } { i64 961, i64 0 }, { i64, i64 } { i64 969, i64 0 }
  %80 = select i1 %75, { i64, i64 } %79, { i64, i64 } %78
  %81 = select i1 %75, { i64, i64 } %79, { i64, i64 } %78
  %82 = extractvalue { i64, i64 } %80, 0
  %83 = extractvalue { i64, i64 } %81, 1
  %84 = getelementptr inbounds i8, i8* %7, i64 %83
  %85 = bitcast i8* %84 to %"class.blink::LayoutBoxModelObject"*
  %86 = and i64 %82, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %95, label %88

88:                                               ; preds = %61
  %89 = bitcast i8* %84 to i8**
  %90 = load i8*, i8** %89, align 8
  %91 = add i64 %82, -1
  %92 = getelementptr i8, i8* %90, i64 %91
  %93 = bitcast i8* %92 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %94 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %93, align 8
  br label %97

95:                                               ; preds = %61
  %96 = inttoptr i64 %82 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %97

97:                                               ; preds = %88, %95
  %98 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %94, %88 ], [ %96, %95 ]
  %99 = tail call i32 %98(%"class.blink::LayoutBoxModelObject"* %85) #15
  %100 = icmp slt i32 %99, 0
  %101 = select i1 %100, i32 -2147483648, i32 2147483647
  %102 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %69, i32 %99) #15
  %103 = extractvalue { i32, i1 } %102, 1
  %104 = extractvalue { i32, i1 } %102, 0
  %105 = select i1 %103, i32 %101, i32 %104, !prof !4
  %106 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !49
  %107 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %106, i64 0, i32 0, i32 9
  %108 = bitcast [20 x i8]* %107 to i160*
  %109 = load i160, i160* %108, align 8, !noalias !49
  %110 = and i160 %109, 15211807202738752817960438464512
  %111 = icmp eq i160 %110, 0
  %112 = and i160 %109, 41538374868278621028243970633760768
  %113 = icmp eq i160 %112, 0
  %114 = select i1 %113, { i64, i64 } { i64 953, i64 0 }, { i64, i64 } { i64 945, i64 0 }
  %115 = select i1 %113, { i64, i64 } { i64 969, i64 0 }, { i64, i64 } { i64 961, i64 0 }
  %116 = select i1 %111, { i64, i64 } %115, { i64, i64 } %114
  %117 = select i1 %111, { i64, i64 } %115, { i64, i64 } %114
  %118 = extractvalue { i64, i64 } %116, 0
  %119 = extractvalue { i64, i64 } %117, 1
  %120 = getelementptr inbounds i8, i8* %7, i64 %119
  %121 = bitcast i8* %120 to %"class.blink::LayoutBoxModelObject"*
  %122 = and i64 %118, 1
  %123 = icmp eq i64 %122, 0
  br i1 %123, label %131, label %124

124:                                              ; preds = %97
  %125 = bitcast i8* %120 to i8**
  %126 = load i8*, i8** %125, align 8
  %127 = add i64 %118, -1
  %128 = getelementptr i8, i8* %126, i64 %127
  %129 = bitcast i8* %128 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %130 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %129, align 8
  br label %133

131:                                              ; preds = %97
  %132 = inttoptr i64 %118 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %133

133:                                              ; preds = %124, %131
  %134 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %130, %124 ], [ %132, %131 ]
  %135 = tail call i32 %134(%"class.blink::LayoutBoxModelObject"* %121) #15
  %136 = icmp slt i32 %135, 0
  %137 = select i1 %136, i32 -2147483648, i32 2147483647
  %138 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %105, i32 %135) #15
  %139 = extractvalue { i32, i1 } %138, 1
  %140 = extractvalue { i32, i1 } %138, 0
  %141 = select i1 %139, i32 %137, i32 %140, !prof !4
  ret i32 %141
}

declare i32 @_ZNK5blink9LayoutBox33DefaultIntrinsicContentInlineSizeEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare void @_ZN5blink15LayoutBlockFlow35ComputeInlinePreferredLogicalWidthsERNS_10LayoutUnitES2_(%"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutUnit"* dereferenceable(4), %"class.blink::LayoutUnit"* dereferenceable(4)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11LayoutBlock34ComputeBlockPreferredLogicalWidthsERNS_10LayoutUnitES2_(%"class.blink::LayoutBlock"*, %"class.blink::LayoutUnit"* nocapture dereferenceable(4), %"class.blink::LayoutUnit"* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca %"class.blink::Length"*, align 8
  %12 = alloca i32, align 4
  %13 = alloca i32, align 4
  %14 = alloca i32, align 4
  %15 = alloca i32, align 4
  %16 = alloca i32, align 4
  %17 = alloca i32, align 4
  %18 = alloca i32, align 4
  %19 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %21 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %21, i64 0, i32 0, i32 9
  %23 = bitcast [20 x i8]* %22 to i160*
  %24 = load i160, i160* %23, align 8
  %25 = and i160 %24, 520192
  %26 = icmp eq i160 %25, 65536
  %27 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1, i32 0
  %28 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %27, align 8
  %29 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %19, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #15
  %30 = icmp eq %"class.blink::LayoutObject"* %28, null
  br i1 %30, label %484, label %31

31:                                               ; preds = %3
  %32 = bitcast i32* %12 to i8*
  %33 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  %34 = bitcast i32* %12 to %"class.blink::LayoutUnit"*
  %35 = bitcast %"class.blink::Length"** %4 to i8*
  %36 = bitcast %"class.blink::Length"** %5 to i8*
  %37 = bitcast %"class.blink::Length"** %6 to i8*
  %38 = bitcast %"class.blink::Length"** %7 to i8*
  %39 = bitcast %"class.blink::Length"** %8 to i8*
  %40 = bitcast %"class.blink::Length"** %9 to i8*
  %41 = bitcast %"class.blink::Length"** %10 to i8*
  %42 = bitcast %"class.blink::Length"** %11 to i8*
  %43 = bitcast i32* %13 to i8*
  %44 = bitcast i32* %14 to i8*
  %45 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %46 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %45 to i96*
  %47 = bitcast i32* %15 to i8*
  %48 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1, i64 0, i32 0
  %49 = bitcast i32* %15 to %"class.blink::LayoutUnit"*
  %50 = icmp eq %"class.blink::LayoutBlock"* %29, null
  %51 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %29, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %52 = bitcast i32* %14 to %"class.blink::LayoutUnit"*
  %53 = bitcast i32* %13 to %"class.blink::LayoutUnit"*
  %54 = bitcast i32* %16 to i8*
  %55 = bitcast i32* %16 to %"class.blink::LayoutUnit"*
  %56 = bitcast i32* %17 to i8*
  %57 = bitcast i32* %17 to %"class.blink::LayoutUnit"*
  br label %58

58:                                               ; preds = %31, %93
  %59 = phi i32 [ 0, %31 ], [ %94, %93 ]
  %60 = phi i32 [ 0, %31 ], [ %95, %93 ]
  %61 = phi %"class.blink::LayoutObject"* [ %28, %31 ], [ %96, %93 ]
  %62 = bitcast %"class.blink::LayoutObject"* %61 to %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)***
  %63 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %61, i64 0, i32 4
  %64 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %63 to i96*
  %65 = load i96, i96* %64, align 4
  %66 = and i96 %65, 113336795588871485128704
  %67 = icmp eq i96 %66, 75557863725914323419136
  br i1 %67, label %90, label %68

68:                                               ; preds = %58
  %69 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %61, i64 0, i32 5, i32 0
  %70 = bitcast %"class.blink::ComputedStyle"** %69 to %"class.blink::ComputedStyleBase"**
  %71 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %71, i64 0, i32 3, i32 0, i32 0
  %73 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %73, i64 0, i32 2, i32 0, i32 0
  %75 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %74, align 8
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %75, i64 0, i32 2, i32 0, i32 0
  %77 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %76, align 8
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %77, i64 0, i32 45
  %79 = load i32, i32* %78, align 4
  %80 = and i32 %79, 536870912
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %98, label %82

82:                                               ; preds = %68
  %83 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*** %62, align 8
  %84 = getelementptr inbounds %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %83, i64 44
  %85 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"* (%"class.blink::LayoutObject"*)** %84, align 8
  %86 = tail call %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %85(%"class.blink::LayoutObject"* nonnull %61) #15
  %87 = icmp eq %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %86, null
  br i1 %87, label %88, label %90

88:                                               ; preds = %82
  %89 = load i96, i96* %64, align 4
  br label %98

90:                                               ; preds = %82, %58
  %91 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %61, i64 0, i32 9
  %92 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %91, align 8
  br label %93

93:                                               ; preds = %482, %477, %90
  %94 = phi i32 [ %59, %90 ], [ %478, %477 ], [ %478, %482 ]
  %95 = phi i32 [ %60, %90 ], [ %479, %477 ], [ %479, %482 ]
  %96 = phi %"class.blink::LayoutObject"* [ %92, %90 ], [ %481, %477 ], [ %481, %482 ]
  %97 = icmp eq %"class.blink::LayoutObject"* %96, null
  br i1 %97, label %484, label %58

98:                                               ; preds = %88, %68
  %99 = phi i96 [ %89, %88 ], [ %65, %68 ]
  %100 = and i96 %99, 67108864
  %101 = icmp eq i96 %100, 0
  br i1 %101, label %110, label %102

102:                                              ; preds = %98
  %103 = bitcast %"class.blink::LayoutObject"* %61 to %"class.blink::LayoutBox"*
  %104 = bitcast %"class.blink::LayoutObject"* %61 to i1 (%"class.blink::LayoutBox"*)***
  %105 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %104, align 8
  %106 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %105, i64 183
  %107 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %106, align 8
  %108 = tail call zeroext i1 %107(%"class.blink::LayoutBox"* %103) #15
  br i1 %108, label %109, label %110

109:                                              ; preds = %102
  tail call void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"* nonnull %61, i32 1) #15
  br label %110

110:                                              ; preds = %98, %109, %102
  %111 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %69, align 8
  %112 = icmp eq %"class.blink::ComputedStyle"* %111, null
  br i1 %112, label %115, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %111, i64 0, i32 1, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"* %114) #15
  br label %115

115:                                              ; preds = %110, %113
  %116 = load i96, i96* %64, align 4
  %117 = and i96 %116, 8388608
  %118 = icmp eq i96 %117, 0
  br i1 %118, label %119, label %129

119:                                              ; preds = %115
  %120 = and i96 %116, 67108864
  %121 = icmp eq i96 %120, 0
  br i1 %121, label %171, label %122

122:                                              ; preds = %119
  %123 = bitcast %"class.blink::LayoutObject"* %61 to %"class.blink::LayoutBox"*
  %124 = bitcast %"class.blink::LayoutObject"* %61 to i1 (%"class.blink::LayoutBox"*)***
  %125 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %124, align 8
  %126 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %125, i64 182
  %127 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %126, align 8
  %128 = tail call zeroext i1 %127(%"class.blink::LayoutBox"* %123) #15
  br i1 %128, label %129, label %171

129:                                              ; preds = %115, %122
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %32)
  %130 = icmp slt i32 %59, 0
  %131 = select i1 %130, i32 -2147483648, i32 2147483647
  %132 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %60, i32 %59) #15
  %133 = extractvalue { i32, i1 } %132, 1
  %134 = extractvalue { i32, i1 } %132, 0
  %135 = select i1 %133, i32 %131, i32 %134, !prof !4
  store i32 %135, i32* %12, align 4
  %136 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %111, i64 0, i32 0, i32 9
  %137 = bitcast [20 x i8]* %136 to i160*
  %138 = load i160, i160* %137, align 8
  %139 = lshr i160 %138, 68
  %140 = trunc i160 %139 to i32
  %141 = and i32 %140, 7
  %142 = add nsw i32 %141, -3
  %143 = icmp ult i32 %142, 2
  br i1 %143, label %144, label %151

144:                                              ; preds = %129
  %145 = load i160, i160* %23, align 8
  %146 = and i160 %145, 41538374868278621028243970633760768
  %147 = icmp eq i160 %146, 0
  %148 = icmp ne i32 %141, 3
  %149 = xor i1 %148, %147
  %150 = select i1 %149, i32 1, i32 2
  br label %151

151:                                              ; preds = %129, %144
  %152 = phi i32 [ %150, %144 ], [ %141, %129 ]
  %153 = or i32 %152, 4
  %154 = icmp eq i32 %153, 5
  br i1 %154, label %155, label %161

155:                                              ; preds = %151
  %156 = load i32, i32* %33, align 4
  %157 = icmp slt i32 %135, %156
  %158 = select i1 %157, %"class.blink::LayoutUnit"* %2, %"class.blink::LayoutUnit"* %34
  %159 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %158, i64 0, i32 0
  %160 = load i32, i32* %159, align 4
  store i32 %160, i32* %33, align 4
  br label %161

161:                                              ; preds = %151, %155
  %162 = phi i32 [ %60, %151 ], [ 0, %155 ]
  switch i32 %152, label %169 [
    i32 5, label %163
    i32 2, label %163
  ]

163:                                              ; preds = %161, %161
  %164 = load i32, i32* %33, align 4
  %165 = icmp slt i32 %135, %164
  %166 = select i1 %165, %"class.blink::LayoutUnit"* %2, %"class.blink::LayoutUnit"* %34
  %167 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %166, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  store i32 %168, i32* %33, align 4
  br label %169

169:                                              ; preds = %161, %163
  %170 = phi i32 [ %59, %161 ], [ 0, %163 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %32)
  br label %171

171:                                              ; preds = %119, %169, %122
  %172 = phi i32 [ %59, %119 ], [ %170, %169 ], [ %59, %122 ]
  %173 = phi i32 [ %60, %119 ], [ %162, %169 ], [ %60, %122 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38)
  %174 = load i160, i160* %23, align 8, !noalias !52
  %175 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %111, i64 0, i32 0, i32 7, i32 0, i32 0
  %176 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %175, align 8, !noalias !52
  %177 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %176, i64 0, i32 12
  %178 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %176, i64 0, i32 11
  %179 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %176, i64 0, i32 9
  %180 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %176, i64 0, i32 10
  store %"class.blink::Length"* %177, %"class.blink::Length"** %4, align 8, !alias.scope !52
  store %"class.blink::Length"* %178, %"class.blink::Length"** %5, align 8, !alias.scope !52
  store %"class.blink::Length"* %179, %"class.blink::Length"** %6, align 8, !alias.scope !52
  store %"class.blink::Length"* %180, %"class.blink::Length"** %7, align 8, !alias.scope !52
  %181 = and i160 %174, 15211807202738752817960438464512
  %182 = icmp eq i160 %181, 0
  %183 = and i160 %174, 41538374868278621028243970633760768
  %184 = icmp eq i160 %183, 0
  %185 = select i1 %184, %"class.blink::Length"** %7, %"class.blink::Length"** %5
  %186 = select i1 %184, %"class.blink::Length"** %4, %"class.blink::Length"** %6
  %187 = select i1 %182, %"class.blink::Length"** %185, %"class.blink::Length"** %186
  %188 = load %"class.blink::Length"*, %"class.blink::Length"** %187, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  store %"class.blink::Length"* %177, %"class.blink::Length"** %8, align 8, !alias.scope !55
  store %"class.blink::Length"* %178, %"class.blink::Length"** %9, align 8, !alias.scope !55
  store %"class.blink::Length"* %179, %"class.blink::Length"** %10, align 8, !alias.scope !55
  store %"class.blink::Length"* %180, %"class.blink::Length"** %11, align 8, !alias.scope !55
  %189 = select i1 %184, %"class.blink::Length"** %9, %"class.blink::Length"** %11
  %190 = select i1 %184, %"class.blink::Length"** %10, %"class.blink::Length"** %8
  %191 = select i1 %182, %"class.blink::Length"** %189, %"class.blink::Length"** %190
  %192 = load %"class.blink::Length"*, %"class.blink::Length"** %191, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %43)
  store i32 0, i32* %13, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %44)
  store i32 0, i32* %14, align 4
  %193 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %188, i64 0, i32 2
  %194 = load i8, i8* %193, align 1
  %195 = icmp eq i8 %194, 2
  br i1 %195, label %196, label %218

196:                                              ; preds = %171
  %197 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %188, i64 0, i32 3
  %198 = load i8, i8* %197, align 2, !range !5
  %199 = icmp eq i8 %198, 0
  br i1 %199, label %203, label %200

200:                                              ; preds = %196
  %201 = bitcast %"class.blink::Length"* %188 to float*
  %202 = load float, float* %201, align 4
  br label %207

203:                                              ; preds = %196
  %204 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %188, i64 0, i32 0, i32 0
  %205 = load i32, i32* %204, align 4
  %206 = sitofp i32 %205 to float
  br label %207

207:                                              ; preds = %200, %203
  %208 = phi float [ %202, %200 ], [ %206, %203 ]
  %209 = fadd float %208, 0.000000e+00
  %210 = fmul float %209, 6.400000e+01
  %211 = fcmp ult float %210, 0xC1E0000000000000
  %212 = fcmp ugt float %210, 0x41DFFFFFE0000000
  %213 = fcmp ogt float %210, 0xC1E0000000000000
  %214 = select i1 %213, float %210, float 0xC1E0000000000000
  %215 = fptosi float %214 to i32
  %216 = select i1 %211, i32 0, i32 2147483647
  %217 = select i1 %212, i32 %216, i32 %215
  store i32 %217, i32* %13, align 4
  br label %218

218:                                              ; preds = %207, %171
  %219 = phi i32 [ %217, %207 ], [ 0, %171 ]
  %220 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %192, i64 0, i32 2
  %221 = load i8, i8* %220, align 1
  %222 = icmp eq i8 %221, 2
  br i1 %222, label %223, label %247

223:                                              ; preds = %218
  %224 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %192, i64 0, i32 3
  %225 = load i8, i8* %224, align 2, !range !5
  %226 = icmp eq i8 %225, 0
  br i1 %226, label %230, label %227

227:                                              ; preds = %223
  %228 = bitcast %"class.blink::Length"* %192 to float*
  %229 = load float, float* %228, align 4
  br label %234

230:                                              ; preds = %223
  %231 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %192, i64 0, i32 0, i32 0
  %232 = load i32, i32* %231, align 4
  %233 = sitofp i32 %232 to float
  br label %234

234:                                              ; preds = %230, %227
  %235 = phi float [ %229, %227 ], [ %233, %230 ]
  %236 = fadd float %235, 0.000000e+00
  %237 = fmul float %236, 6.400000e+01
  %238 = fcmp ult float %237, 0xC1E0000000000000
  %239 = fcmp ugt float %237, 0x41DFFFFFE0000000
  %240 = fcmp ogt float %237, 0xC1E0000000000000
  %241 = select i1 %240, float %237, float 0xC1E0000000000000
  %242 = fptosi float %241 to i32
  %243 = select i1 %238, i32 0, i32 2147483647
  %244 = select i1 %239, i32 %243, i32 %242
  store i32 %244, i32* %14, align 4
  %245 = icmp slt i32 %244, 0
  %246 = select i1 %245, i32 -2147483648, i32 2147483647
  br label %247

247:                                              ; preds = %234, %218
  %248 = phi i32 [ 0, %218 ], [ %244, %234 ]
  %249 = phi i32 [ 2147483647, %218 ], [ %246, %234 ]
  %250 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %219, i32 %248) #15
  %251 = extractvalue { i32, i1 } %250, 1
  %252 = extractvalue { i32, i1 } %250, 0
  %253 = select i1 %251, i32 %249, i32 %252, !prof !4
  %254 = load i96, i96* %64, align 4
  %255 = and i96 %254, 67108864
  %256 = icmp eq i96 %255, 0
  br i1 %256, label %280, label %257

257:                                              ; preds = %247
  %258 = load i96, i96* %46, align 4
  %259 = xor i96 %258, %254
  %260 = trunc i96 %259 to i32
  %261 = icmp slt i32 %260, 0
  br i1 %261, label %262, label %280

262:                                              ; preds = %257
  %263 = and i96 %254, 63
  %264 = icmp eq i96 %263, 0
  br i1 %264, label %265, label %277

265:                                              ; preds = %262
  %266 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %69, align 8
  %267 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %266, i64 0, i32 0, i32 9
  %268 = bitcast [20 x i8]* %267 to i160*
  %269 = load i160, i160* %268, align 8
  %270 = and i160 %269, 15211807202738752817960438464512
  %271 = icmp eq i160 %270, 0
  %272 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %61, i64 1, i32 4, i32 0, i64 8
  %273 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %61, i64 1, i32 4, i32 0, i64 4
  %274 = select i1 %271, i8* %272, i8* %273
  %275 = bitcast i8* %274 to i32*
  %276 = load i32, i32* %275, align 4
  br label %310

277:                                              ; preds = %262
  %278 = bitcast %"class.blink::LayoutObject"* %61 to %"class.blink::LayoutBox"*
  %279 = tail call i32 @_ZNK5blink9LayoutBox33ComputeLogicalHeightWithoutLayoutEv(%"class.blink::LayoutBox"* nonnull %278) #15
  br label %310

280:                                              ; preds = %257, %247
  %281 = bitcast %"class.blink::LayoutObject"* %61 to i64 (%"class.blink::LayoutObject"*)***
  %282 = load i64 (%"class.blink::LayoutObject"*)**, i64 (%"class.blink::LayoutObject"*)*** %281, align 8
  %283 = getelementptr inbounds i64 (%"class.blink::LayoutObject"*)*, i64 (%"class.blink::LayoutObject"*)** %282, i64 69
  %284 = load i64 (%"class.blink::LayoutObject"*)*, i64 (%"class.blink::LayoutObject"*)** %283, align 8
  %285 = tail call i64 %284(%"class.blink::LayoutObject"* nonnull %61) #15
  %286 = trunc i64 %285 to i32
  %287 = lshr i64 %285, 32
  %288 = trunc i64 %287 to i32
  %289 = bitcast %"class.blink::LayoutObject"* %61 to i1 (%"class.blink::LayoutObject"*)***
  %290 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %289, align 8
  %291 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %290, i64 23
  %292 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %291, align 8
  %293 = tail call zeroext i1 %292(%"class.blink::LayoutObject"* nonnull %61) #15
  br i1 %293, label %294, label %310

294:                                              ; preds = %280
  %295 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %69, align 8
  %296 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %295, i64 0, i32 0, i32 9
  %297 = bitcast [20 x i8]* %296 to i160*
  %298 = load i160, i160* %297, align 8
  %299 = and i160 %298, 15211807202738752817960438464512
  %300 = icmp eq i160 %299, 0
  %301 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %295, i64 0, i32 0, i32 5, i32 0, i32 0
  %302 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %301, align 8
  %303 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %302, i64 0, i32 8
  %304 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %302, i64 0, i32 3
  %305 = select i1 %300, %"class.blink::Length"* %303, %"class.blink::Length"* %304
  %306 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %305, i64 0, i32 2
  %307 = load i8, i8* %306, align 1
  switch i8 %307, label %310 [
    i8 4, label %308
    i8 3, label %309
    i8 5, label %309
  ]

308:                                              ; preds = %294
  br label %310

309:                                              ; preds = %294, %294
  br label %310

310:                                              ; preds = %265, %277, %280, %294, %308, %309
  %311 = phi i32 [ %286, %294 ], [ %286, %309 ], [ %288, %308 ], [ %286, %280 ], [ %276, %265 ], [ %279, %277 ]
  %312 = phi i32 [ %288, %294 ], [ %286, %309 ], [ %288, %308 ], [ %288, %280 ], [ %276, %265 ], [ %279, %277 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %47)
  %313 = icmp slt i32 %253, 0
  %314 = select i1 %313, i32 -2147483648, i32 2147483647
  %315 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %311, i32 %253) #15
  %316 = extractvalue { i32, i1 } %315, 1
  %317 = extractvalue { i32, i1 } %315, 0
  %318 = select i1 %316, i32 %314, i32 %317, !prof !4
  store i32 %318, i32* %15, align 4
  %319 = load i32, i32* %48, align 4
  %320 = icmp slt i32 %318, %319
  %321 = select i1 %320, %"class.blink::LayoutUnit"* %1, %"class.blink::LayoutUnit"* %49
  %322 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %321, i64 0, i32 0
  %323 = load i32, i32* %322, align 4
  store i32 %323, i32* %48, align 4
  br i1 %26, label %324, label %336

324:                                              ; preds = %310
  %325 = bitcast %"class.blink::LayoutObject"* %61 to i1 (%"class.blink::LayoutObject"*, i32)***
  %326 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %325, align 8
  %327 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %326, i64 92
  %328 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %327, align 8
  %329 = tail call zeroext i1 %328(%"class.blink::LayoutObject"* nonnull %61, i32 44) #15
  br i1 %329, label %336, label %330

330:                                              ; preds = %324
  %331 = load i32, i32* %33, align 4
  %332 = icmp slt i32 %318, %331
  %333 = select i1 %332, %"class.blink::LayoutUnit"* %2, %"class.blink::LayoutUnit"* %49
  %334 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %333, i64 0, i32 0
  %335 = load i32, i32* %334, align 4
  store i32 %335, i32* %33, align 4
  br label %336

336:                                              ; preds = %330, %324, %310
  %337 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %312, i32 %253) #15
  %338 = extractvalue { i32, i1 } %337, 1
  %339 = extractvalue { i32, i1 } %337, 0
  %340 = select i1 %338, i32 %314, i32 %339, !prof !4
  store i32 %340, i32* %15, align 4
  %341 = load i96, i96* %64, align 4
  %342 = and i96 %341, 8388608
  %343 = icmp eq i96 %342, 0
  br i1 %343, label %344, label %433

344:                                              ; preds = %336
  %345 = and i96 %341, 67108864
  %346 = icmp eq i96 %345, 0
  br i1 %346, label %418, label %347

347:                                              ; preds = %344
  %348 = bitcast %"class.blink::LayoutObject"* %61 to %"class.blink::LayoutBox"*
  %349 = bitcast %"class.blink::LayoutObject"* %61 to i1 (%"class.blink::LayoutBox"*)***
  %350 = load i1 (%"class.blink::LayoutBox"*)**, i1 (%"class.blink::LayoutBox"*)*** %349, align 8
  %351 = getelementptr inbounds i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %350, i64 182
  %352 = load i1 (%"class.blink::LayoutBox"*)*, i1 (%"class.blink::LayoutBox"*)** %351, align 8
  %353 = tail call zeroext i1 %352(%"class.blink::LayoutBox"* nonnull %348) #15
  br i1 %353, label %354, label %418

354:                                              ; preds = %347
  br i1 %50, label %359, label %355

355:                                              ; preds = %354
  %356 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %51, align 8
  %357 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %356, i64 0, i32 0, i32 9
  %358 = bitcast [20 x i8]* %357 to i160*
  br label %359

359:                                              ; preds = %354, %355
  %360 = phi i160* [ %358, %355 ], [ %23, %354 ]
  %361 = load i160, i160* %360, align 8
  %362 = and i160 %361, 41538374868278621028243970633760768
  %363 = icmp eq i160 %362, 0
  %364 = select i1 %363, %"class.blink::LayoutUnit"* %53, %"class.blink::LayoutUnit"* %52
  %365 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %364, i64 0, i32 0
  %366 = load i32, i32* %365, align 4
  %367 = select i1 %363, %"class.blink::LayoutUnit"* %52, %"class.blink::LayoutUnit"* %53
  %368 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %367, i64 0, i32 0
  %369 = load i32, i32* %368, align 4
  %370 = icmp sgt i32 %366, 0
  br i1 %370, label %371, label %374

371:                                              ; preds = %359
  %372 = icmp slt i32 %173, %366
  %373 = select i1 %372, i32 %366, i32 %173
  br label %381

374:                                              ; preds = %359
  %375 = icmp eq i32 %366, 0
  %376 = select i1 %375, i32 2147483647, i32 -2147483648
  %377 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %173, i32 %366) #15
  %378 = extractvalue { i32, i1 } %377, 1
  %379 = extractvalue { i32, i1 } %377, 0
  %380 = select i1 %378, i32 %376, i32 %379, !prof !4
  br label %381

381:                                              ; preds = %374, %371
  %382 = phi i32 [ %373, %371 ], [ %380, %374 ]
  %383 = icmp sgt i32 %369, 0
  br i1 %383, label %384, label %387

384:                                              ; preds = %381
  %385 = icmp slt i32 %172, %369
  %386 = select i1 %385, i32 %369, i32 %172
  br label %394

387:                                              ; preds = %381
  %388 = icmp eq i32 %369, 0
  %389 = select i1 %388, i32 2147483647, i32 -2147483648
  %390 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %172, i32 %369) #15
  %391 = extractvalue { i32, i1 } %390, 1
  %392 = extractvalue { i32, i1 } %390, 0
  %393 = select i1 %391, i32 %389, i32 %392, !prof !4
  br label %394

394:                                              ; preds = %387, %384
  %395 = phi i32 [ %386, %384 ], [ %393, %387 ]
  %396 = icmp slt i32 %382, 0
  %397 = select i1 %396, i32 -2147483648, i32 2147483647
  %398 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %312, i32 %382) #15
  %399 = extractvalue { i32, i1 } %398, 1
  %400 = extractvalue { i32, i1 } %398, 0
  %401 = select i1 %399, i32 %397, i32 %400, !prof !4
  %402 = icmp slt i32 %395, 0
  %403 = select i1 %402, i32 -2147483648, i32 2147483647
  %404 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %401, i32 %395) #15
  %405 = extractvalue { i32, i1 } %404, 1
  %406 = extractvalue { i32, i1 } %404, 0
  %407 = select i1 %405, i32 %403, i32 %406, !prof !4
  store i32 %407, i32* %15, align 4
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54)
  %408 = icmp slt i32 %172, 0
  %409 = select i1 %408, i32 -2147483648, i32 2147483647
  %410 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %173, i32 %172) #15
  %411 = extractvalue { i32, i1 } %410, 1
  %412 = extractvalue { i32, i1 } %410, 0
  %413 = select i1 %411, i32 %409, i32 %412, !prof !4
  store i32 %413, i32* %16, align 4
  %414 = icmp slt i32 %407, %413
  %415 = select i1 %414, %"class.blink::LayoutUnit"* %55, %"class.blink::LayoutUnit"* %49
  %416 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %415, i64 0, i32 0
  %417 = load i32, i32* %416, align 4
  store i32 %417, i32* %15, align 4
  br label %430

418:                                              ; preds = %344, %347
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %56)
  %419 = icmp slt i32 %172, 0
  %420 = select i1 %419, i32 -2147483648, i32 2147483647
  %421 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %173, i32 %172) #15
  %422 = extractvalue { i32, i1 } %421, 1
  %423 = extractvalue { i32, i1 } %421, 0
  %424 = select i1 %422, i32 %420, i32 %423, !prof !4
  store i32 %424, i32* %17, align 4
  %425 = load i32, i32* %33, align 4
  %426 = icmp slt i32 %424, %425
  %427 = select i1 %426, %"class.blink::LayoutUnit"* %2, %"class.blink::LayoutUnit"* %57
  %428 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %427, i64 0, i32 0
  %429 = load i32, i32* %428, align 4
  store i32 %429, i32* %33, align 4
  br label %430

430:                                              ; preds = %418, %394
  %431 = phi i8* [ %54, %394 ], [ %56, %418 ]
  %432 = phi i32 [ %417, %394 ], [ %340, %418 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %431)
  br label %433

433:                                              ; preds = %430, %336
  %434 = phi i32 [ %340, %336 ], [ %432, %430 ]
  %435 = phi i32 [ %172, %336 ], [ 0, %430 ]
  %436 = phi i32 [ %173, %336 ], [ 0, %430 ]
  %437 = load i96, i96* %64, align 4
  %438 = and i96 %437, 8388608
  %439 = icmp eq i96 %438, 0
  br i1 %439, label %471, label %440

440:                                              ; preds = %433
  %441 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %111, i64 0, i32 0, i32 9
  %442 = bitcast [20 x i8]* %441 to i160*
  %443 = load i160, i160* %442, align 8
  %444 = lshr i160 %443, 71
  %445 = trunc i160 %444 to i32
  %446 = and i32 %445, 7
  %447 = add nsw i32 %446, -3
  %448 = icmp ult i32 %447, 2
  br i1 %448, label %449, label %455

449:                                              ; preds = %440
  %450 = load i160, i160* %23, align 8
  %451 = and i160 %450, 41538374868278621028243970633760768
  %452 = icmp eq i160 %451, 0
  %453 = icmp ne i32 %446, 3
  %454 = xor i1 %453, %452
  br i1 %454, label %457, label %464

455:                                              ; preds = %440
  %456 = icmp eq i32 %446, 1
  br i1 %456, label %457, label %464

457:                                              ; preds = %449, %455
  %458 = icmp slt i32 %434, 0
  %459 = select i1 %458, i32 -2147483648, i32 2147483647
  %460 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %436, i32 %434) #15
  %461 = extractvalue { i32, i1 } %460, 1
  %462 = extractvalue { i32, i1 } %460, 0
  %463 = select i1 %461, i32 %459, i32 %462, !prof !4
  br label %477

464:                                              ; preds = %449, %455
  %465 = icmp slt i32 %434, 0
  %466 = select i1 %465, i32 -2147483648, i32 2147483647
  %467 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %435, i32 %434) #15
  %468 = extractvalue { i32, i1 } %467, 1
  %469 = extractvalue { i32, i1 } %467, 0
  %470 = select i1 %468, i32 %466, i32 %469, !prof !4
  br label %477

471:                                              ; preds = %433
  %472 = load i32, i32* %33, align 4
  %473 = icmp slt i32 %434, %472
  %474 = select i1 %473, %"class.blink::LayoutUnit"* %2, %"class.blink::LayoutUnit"* %49
  %475 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %474, i64 0, i32 0
  %476 = load i32, i32* %475, align 4
  store i32 %476, i32* %33, align 4
  br label %477

477:                                              ; preds = %457, %464, %471
  %478 = phi i32 [ %435, %457 ], [ %470, %464 ], [ %435, %471 ]
  %479 = phi i32 [ %463, %457 ], [ %436, %464 ], [ %436, %471 ]
  %480 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %61, i64 0, i32 9
  %481 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %480, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %47)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %44)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %43)
  br i1 %112, label %93, label %482

482:                                              ; preds = %477
  %483 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %111, i64 0, i32 1, i32 0
  tail call void @_ZNK4base10RefCountedIN5blink13ComputedStyleEN3WTF23DefaultRefCountedTraitsIS2_EEE7ReleaseEv(%"class.base::RefCounted.732"* %483) #15
  br label %93

484:                                              ; preds = %93, %3
  %485 = phi i32 [ 0, %3 ], [ %94, %93 ]
  %486 = phi i32 [ 0, %3 ], [ %95, %93 ]
  %487 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %1, i64 0, i32 0
  %488 = load i32, i32* %487, align 4
  %489 = icmp sgt i32 %488, 0
  %490 = select i1 %489, i32 %488, i32 0
  store i32 %490, i32* %487, align 4
  %491 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  %492 = load i32, i32* %491, align 4
  %493 = icmp sgt i32 %492, 0
  %494 = select i1 %493, i32 %492, i32 0
  store i32 %494, i32* %491, align 4
  %495 = bitcast i32* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %495)
  %496 = icmp slt i32 %485, 0
  %497 = select i1 %496, i32 -2147483648, i32 2147483647
  %498 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %486, i32 %485) #15
  %499 = extractvalue { i32, i1 } %498, 1
  %500 = extractvalue { i32, i1 } %498, 0
  %501 = select i1 %499, i32 %497, i32 %500, !prof !4
  store i32 %501, i32* %18, align 4
  %502 = icmp slt i32 %501, %494
  %503 = bitcast i32* %18 to %"class.blink::LayoutUnit"*
  %504 = select i1 %502, %"class.blink::LayoutUnit"* %2, %"class.blink::LayoutUnit"* %503
  %505 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %504, i64 0, i32 0
  %506 = load i32, i32* %505, align 4
  store i32 %506, i32* %491, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %495)
  ret void
}

declare zeroext i1 @_ZNK5blink18HTMLMarqueeElement12IsHorizontalEv(%"class.blink::HTMLMarqueeElement"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink9IsListBoxEPKNS_12LayoutObjectE(%"class.blink::LayoutObject"*) local_unnamed_addr #3

declare i32 @_ZNK5blink9LayoutBox40AdjustContentBoxLogicalWidthForBoxSizingEf(%"class.blink::LayoutBox"*, float) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink11LayoutBlock22PreferredLogicalWidthsEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = alloca i32, align 4
  %6 = alloca i32, align 4
  %7 = alloca i32, align 8
  %8 = alloca i32, align 4
  %9 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 0, i32* %7, align 8
  store i32 0, i32* %8, align 4
  %10 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %11 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %10, align 8
  %12 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %13 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %13, i64 92
  %15 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::LayoutObject"* %9, i32 46) #15
  br i1 %16, label %92, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %19 = bitcast [20 x i8]* %18 to i160*
  %20 = load i160, i160* %19, align 8
  %21 = and i160 %20, 15211807202738752817960438464512
  %22 = icmp eq i160 %21, 0
  %23 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 5, i32 0, i32 0
  %24 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %24, i64 0, i32 8
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %24, i64 0, i32 3
  %27 = select i1 %22, %"class.blink::Length"* %25, %"class.blink::Length"* %26
  %28 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %27, i64 0, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 2
  br i1 %30, label %31, label %92

31:                                               ; preds = %17
  %32 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %27, i64 0, i32 3
  %33 = load i8, i8* %32, align 2, !range !5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %31
  %36 = bitcast %"class.blink::Length"* %27 to float*
  %37 = load float, float* %36, align 4
  %38 = bitcast float %37 to i32
  br label %44

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %27, i64 0, i32 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = sitofp i32 %41 to float
  %43 = bitcast i32 %41 to float
  br label %44

44:                                               ; preds = %35, %39
  %45 = phi i32 [ %38, %35 ], [ %41, %39 ]
  %46 = phi float [ %37, %35 ], [ %43, %39 ]
  %47 = phi float [ %37, %35 ], [ %42, %39 ]
  %48 = fcmp ult float %47, 0.000000e+00
  br i1 %48, label %92, label %49

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %51 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %52 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %51 to i96*
  %53 = load i96, i96* %52, align 4
  %54 = and i96 %53, 134217728
  %55 = icmp ne i96 %54, 0
  %56 = and i96 %53, 113336795588871485128704
  %57 = icmp eq i96 %56, 75557863725914323419136
  %58 = or i1 %55, %57
  br i1 %58, label %78, label %59

59:                                               ; preds = %49
  %60 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 7
  %61 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %60, align 8
  %62 = icmp eq %"class.blink::LayoutObject"* %61, null
  br i1 %62, label %78, label %63

63:                                               ; preds = %59
  %64 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %61, i64 0, i32 5, i32 0
  %65 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %65, i64 0, i32 0, i32 9
  %67 = bitcast [20 x i8]* %66 to i160*
  %68 = load i160, i160* %67, align 8
  %69 = lshr i160 %68, 32
  %70 = trunc i160 %69 to i32
  %71 = and i32 %70, 30
  %72 = or i32 %71, 1
  %73 = icmp eq i32 %72, 15
  br i1 %73, label %74, label %78

74:                                               ; preds = %63
  %75 = fptosi float %46 to i32
  %76 = select i1 %34, i32 %45, i32 %75
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %92, label %78

78:                                               ; preds = %59, %49, %74, %63
  %79 = sitofp i32 %45 to float
  %80 = select i1 %34, float %79, float %46
  %81 = fmul float %80, 6.400000e+01
  %82 = fcmp ult float %81, 0xC1E0000000000000
  %83 = fcmp ugt float %81, 0x41DFFFFFE0000000
  %84 = fcmp ogt float %81, 0xC1E0000000000000
  %85 = select i1 %84, float %81, float 0xC1E0000000000000
  %86 = fptosi float %85 to i32
  %87 = select i1 %82, i32 0, i32 2147483647
  %88 = select i1 %83, i32 %87, i32 %86
  %89 = sitofp i32 %88 to float
  %90 = fmul float %89, 1.562500e-02
  %91 = tail call i32 @_ZNK5blink9LayoutBox39AdjustBorderBoxLogicalWidthForBoxSizingEf(%"class.blink::LayoutBox"* %50, float %90) #15
  store i32 %91, i32* %8, align 4
  store i32 %91, i32* %7, align 8
  br label %98

92:                                               ; preds = %74, %44, %17, %1
  %93 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %94 = tail call i64 @_ZNK5blink9LayoutBox22IntrinsicLogicalWidthsENS_15MinMaxSizesTypeE(%"class.blink::LayoutBox"* %93, i32 0) #15
  %95 = trunc i64 %94 to i32
  store i32 %95, i32* %7, align 8
  %96 = lshr i64 %94, 32
  %97 = trunc i64 %96 to i32
  store i32 %97, i32* %8, align 4
  br label %98

98:                                               ; preds = %92, %78
  %99 = phi i32 [ %97, %92 ], [ %91, %78 ]
  %100 = phi i32 [ %95, %92 ], [ %91, %78 ]
  %101 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %102 = tail call zeroext i1 @_ZNK5blink9LayoutBox41ShouldComputeLogicalHeightFromAspectRatioEv(%"class.blink::LayoutBox"* %101)
  br i1 %102, label %103, label %130

103:                                              ; preds = %98
  %104 = tail call i64 @_ZNK5blink9LayoutBox40ComputeMinMaxLogicalWidthFromAspectRatioEv(%"class.blink::LayoutBox"* %101) #15
  %105 = trunc i64 %104 to i32
  %106 = lshr i64 %104, 32
  %107 = trunc i64 %106 to i32
  %108 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %108)
  store i32 %105, i32* %2, align 4
  %109 = icmp slt i32 %100, %105
  %110 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %111 = bitcast i32* %2 to %"class.blink::LayoutUnit"*
  %112 = select i1 %109, %"class.blink::LayoutUnit"* %111, %"class.blink::LayoutUnit"* %110
  %113 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %112, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  store i32 %114, i32* %7, align 8
  %115 = icmp slt i32 %99, %105
  %116 = bitcast i32* %8 to %"class.blink::LayoutUnit"*
  %117 = select i1 %115, %"class.blink::LayoutUnit"* %111, %"class.blink::LayoutUnit"* %116
  %118 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %117, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  store i32 %119, i32* %8, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %108)
  %120 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %120)
  store i32 %107, i32* %3, align 4
  %121 = icmp sgt i32 %114, %107
  %122 = bitcast i32* %3 to %"class.blink::LayoutUnit"*
  %123 = select i1 %121, %"class.blink::LayoutUnit"* %122, %"class.blink::LayoutUnit"* %110
  %124 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %123, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  store i32 %125, i32* %7, align 8
  %126 = icmp sgt i32 %119, %107
  %127 = select i1 %126, %"class.blink::LayoutUnit"* %122, %"class.blink::LayoutUnit"* %116
  %128 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %127, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  store i32 %129, i32* %8, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %120)
  br label %130

130:                                              ; preds = %103, %98
  %131 = phi i32 [ %129, %103 ], [ %99, %98 ]
  %132 = phi i32 [ %125, %103 ], [ %100, %98 ]
  %133 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 9
  %134 = bitcast [20 x i8]* %133 to i160*
  %135 = load i160, i160* %134, align 8
  %136 = and i160 %135, 15211807202738752817960438464512
  %137 = icmp eq i160 %136, 0
  %138 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %11, i64 0, i32 0, i32 5, i32 0, i32 0
  %139 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %139, i64 0, i32 5
  %141 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %139, i64 0, i32 4
  %142 = select i1 %137, %"class.blink::Length"* %140, %"class.blink::Length"* %141
  %143 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %142, i64 0, i32 2
  %144 = load i8, i8* %143, align 1
  %145 = icmp eq i8 %144, 2
  br i1 %145, label %146, label %185

146:                                              ; preds = %130
  %147 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %142, i64 0, i32 3
  %148 = load i8, i8* %147, align 2, !range !5
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %153, label %150

150:                                              ; preds = %146
  %151 = bitcast %"class.blink::Length"* %142 to float*
  %152 = load float, float* %151, align 4
  br label %157

153:                                              ; preds = %146
  %154 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %142, i64 0, i32 0, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = sitofp i32 %155 to float
  br label %157

157:                                              ; preds = %150, %153
  %158 = phi float [ %152, %150 ], [ %156, %153 ]
  %159 = fmul float %158, 6.400000e+01
  %160 = fcmp ult float %159, 0xC1E0000000000000
  %161 = fcmp ugt float %159, 0x41DFFFFFE0000000
  %162 = fcmp ogt float %159, 0xC1E0000000000000
  %163 = select i1 %162, float %159, float 0xC1E0000000000000
  %164 = fptosi float %163 to i32
  %165 = select i1 %160, i32 0, i32 2147483647
  %166 = select i1 %161, i32 %165, i32 %164
  %167 = sitofp i32 %166 to float
  %168 = fmul float %167, 1.562500e-02
  %169 = tail call i32 @_ZNK5blink9LayoutBox39AdjustBorderBoxLogicalWidthForBoxSizingEf(%"class.blink::LayoutBox"* %101, float %168) #15
  %170 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %170)
  store i32 %169, i32* %4, align 4
  %171 = icmp sgt i32 %132, %169
  %172 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %173 = bitcast i32* %4 to %"class.blink::LayoutUnit"*
  %174 = select i1 %171, %"class.blink::LayoutUnit"* %173, %"class.blink::LayoutUnit"* %172
  %175 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %174, i64 0, i32 0
  %176 = load i32, i32* %175, align 4
  store i32 %176, i32* %7, align 8
  %177 = icmp sgt i32 %131, %169
  %178 = bitcast i32* %8 to %"class.blink::LayoutUnit"*
  %179 = select i1 %177, %"class.blink::LayoutUnit"* %173, %"class.blink::LayoutUnit"* %178
  %180 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %179, i64 0, i32 0
  %181 = load i32, i32* %180, align 4
  store i32 %181, i32* %8, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %170)
  %182 = load i160, i160* %134, align 8
  %183 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %138, align 8
  %184 = and i160 %182, 15211807202738752817960438464512
  br label %185

185:                                              ; preds = %157, %130
  %186 = phi i160 [ %184, %157 ], [ %136, %130 ]
  %187 = phi i32 [ %181, %157 ], [ %131, %130 ]
  %188 = phi i32 [ %176, %157 ], [ %132, %130 ]
  %189 = phi %"class.blink::ComputedStyleBase::StyleBoxData"* [ %183, %157 ], [ %139, %130 ]
  %190 = icmp eq i160 %186, 0
  %191 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %189, i64 0, i32 7
  %192 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %189, i64 0, i32 6
  %193 = select i1 %190, %"class.blink::Length"* %191, %"class.blink::Length"* %192
  %194 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %193, i64 0, i32 2
  %195 = load i8, i8* %194, align 1
  %196 = icmp eq i8 %195, 2
  br i1 %196, label %197, label %241

197:                                              ; preds = %185
  %198 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %193, i64 0, i32 3
  %199 = load i8, i8* %198, align 2, !range !5
  %200 = icmp eq i8 %199, 0
  br i1 %200, label %205, label %201

201:                                              ; preds = %197
  %202 = bitcast %"class.blink::Length"* %193 to float*
  %203 = load float, float* %202, align 4
  %204 = bitcast float %203 to i32
  br label %210

205:                                              ; preds = %197
  %206 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %193, i64 0, i32 0, i32 0
  %207 = load i32, i32* %206, align 4
  %208 = sitofp i32 %207 to float
  %209 = bitcast i32 %207 to float
  br label %210

210:                                              ; preds = %201, %205
  %211 = phi i32 [ %204, %201 ], [ %207, %205 ]
  %212 = phi float [ %203, %201 ], [ %209, %205 ]
  %213 = phi float [ %203, %201 ], [ %208, %205 ]
  %214 = fcmp ogt float %213, 0.000000e+00
  br i1 %214, label %215, label %241

215:                                              ; preds = %210
  %216 = sitofp i32 %211 to float
  %217 = select i1 %200, float %216, float %212
  %218 = fmul float %217, 6.400000e+01
  %219 = fcmp ult float %218, 0xC1E0000000000000
  %220 = fcmp ugt float %218, 0x41DFFFFFE0000000
  %221 = fcmp ogt float %218, 0xC1E0000000000000
  %222 = select i1 %221, float %218, float 0xC1E0000000000000
  %223 = fptosi float %222 to i32
  %224 = select i1 %219, i32 0, i32 2147483647
  %225 = select i1 %220, i32 %224, i32 %223
  %226 = sitofp i32 %225 to float
  %227 = fmul float %226, 1.562500e-02
  %228 = tail call i32 @_ZNK5blink9LayoutBox39AdjustBorderBoxLogicalWidthForBoxSizingEf(%"class.blink::LayoutBox"* %101, float %227) #15
  %229 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %229)
  store i32 %228, i32* %5, align 4
  %230 = icmp slt i32 %188, %228
  %231 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %232 = bitcast i32* %5 to %"class.blink::LayoutUnit"*
  %233 = select i1 %230, %"class.blink::LayoutUnit"* %232, %"class.blink::LayoutUnit"* %231
  %234 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %233, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  store i32 %235, i32* %7, align 8
  %236 = icmp slt i32 %187, %228
  %237 = bitcast i32* %8 to %"class.blink::LayoutUnit"*
  %238 = select i1 %236, %"class.blink::LayoutUnit"* %232, %"class.blink::LayoutUnit"* %237
  %239 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %238, i64 0, i32 0
  %240 = load i32, i32* %239, align 4
  store i32 %240, i32* %8, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %229)
  br label %241

241:                                              ; preds = %215, %210, %185
  %242 = phi i32 [ %240, %215 ], [ %187, %210 ], [ %187, %185 ]
  %243 = phi i32 [ %235, %215 ], [ %188, %210 ], [ %188, %185 ]
  %244 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %12, align 8
  %245 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %244, i64 92
  %246 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %245, align 8
  %247 = tail call zeroext i1 %246(%"class.blink::LayoutObject"* %9, i32 46) #15
  br i1 %247, label %248, label %271

248:                                              ; preds = %241
  %249 = icmp sgt i32 %243, 2147483583
  br i1 %249, label %257, label %250, !prof !4

250:                                              ; preds = %248
  %251 = icmp sgt i32 %243, -1
  br i1 %251, label %252, label %255

252:                                              ; preds = %250
  %253 = add nuw nsw i32 %243, 63
  %254 = sdiv i32 %253, 64
  br label %257

255:                                              ; preds = %250
  %256 = sdiv i32 %243, 64
  br label %257

257:                                              ; preds = %255, %252, %248
  %258 = phi i32 [ %254, %252 ], [ %256, %255 ], [ 33554431, %248 ]
  %259 = shl nsw i32 %258, 6
  store i32 %259, i32* %7, align 8
  %260 = icmp sgt i32 %242, 2147483583
  br i1 %260, label %268, label %261, !prof !4

261:                                              ; preds = %257
  %262 = icmp sgt i32 %242, -1
  br i1 %262, label %263, label %266

263:                                              ; preds = %261
  %264 = add nuw nsw i32 %242, 63
  %265 = sdiv i32 %264, 64
  br label %268

266:                                              ; preds = %261
  %267 = sdiv i32 %242, 64
  br label %268

268:                                              ; preds = %266, %263, %257
  %269 = phi i32 [ %265, %263 ], [ %267, %266 ], [ 33554431, %257 ]
  %270 = shl nsw i32 %269, 6
  store i32 %270, i32* %8, align 4
  br label %271

271:                                              ; preds = %268, %241
  %272 = phi i32 [ %270, %268 ], [ %242, %241 ]
  %273 = phi i32 [ %259, %268 ], [ %243, %241 ]
  %274 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %12, align 8
  %275 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %274, i64 92
  %276 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %275, align 8
  %277 = tail call zeroext i1 %276(%"class.blink::LayoutObject"* %9, i32 30) #15
  br i1 %277, label %278, label %298

278:                                              ; preds = %271
  %279 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %12, align 8
  %280 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %279, i64 92
  %281 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %280, align 8
  %282 = tail call zeroext i1 %281(%"class.blink::LayoutObject"* %9, i32 44) #15
  br i1 %282, label %283, label %298

283:                                              ; preds = %278
  %284 = tail call i64 @_ZNK5blink9LayoutBox22IntrinsicLogicalWidthsENS_15MinMaxSizesTypeE(%"class.blink::LayoutBox"* %101, i32 0) #15
  %285 = trunc i64 %284 to i32
  %286 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %286)
  store i32 %285, i32* %6, align 4
  %287 = icmp slt i32 %273, %285
  %288 = bitcast i32* %7 to %"class.blink::LayoutUnit"*
  %289 = bitcast i32* %6 to %"class.blink::LayoutUnit"*
  %290 = select i1 %287, %"class.blink::LayoutUnit"* %289, %"class.blink::LayoutUnit"* %288
  %291 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %290, i64 0, i32 0
  %292 = load i32, i32* %291, align 4
  store i32 %292, i32* %7, align 8
  %293 = icmp slt i32 %272, %285
  %294 = bitcast i32* %8 to %"class.blink::LayoutUnit"*
  %295 = select i1 %293, %"class.blink::LayoutUnit"* %289, %"class.blink::LayoutUnit"* %294
  %296 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %295, i64 0, i32 0
  %297 = load i32, i32* %296, align 4
  store i32 %297, i32* %8, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %286)
  br label %298

298:                                              ; preds = %283, %278, %271
  %299 = phi i32 [ %297, %283 ], [ %272, %278 ], [ %272, %271 ]
  %300 = phi i32 [ %292, %283 ], [ %273, %278 ], [ %273, %271 ]
  %301 = zext i32 %299 to i64
  %302 = shl nuw i64 %301, 32
  %303 = zext i32 %300 to i64
  %304 = or i64 %302, %303
  ret i64 %304
}

declare i32 @_ZNK5blink9LayoutBox39AdjustBorderBoxLogicalWidthForBoxSizingEf(%"class.blink::LayoutBox"*, float) local_unnamed_addr #3

declare i64 @_ZNK5blink9LayoutBox22IntrinsicLogicalWidthsENS_15MinMaxSizesTypeE(%"class.blink::LayoutBox"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox41ShouldComputeLogicalHeightFromAspectRatioEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca i64, align 8
  %3 = bitcast i64* %2 to %"class.blink::Length"*
  %4 = tail call zeroext i1 @_ZNK5blink9LayoutBox49ShouldComputeLogicalWidthFromAspectRatioAndInsetsEv(%"class.blink::LayoutBox"* %0)
  br i1 %4, label %73, label %5

5:                                                ; preds = %1
  %6 = bitcast i64* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 15211807202738752817960438464512
  %14 = icmp eq i160 %13, 0
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 5, i32 0, i32 0
  %16 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %16, i64 0, i32 3
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %16, i64 0, i32 8
  %19 = select i1 %14, %"class.blink::Length"* %17, %"class.blink::Length"* %18
  %20 = bitcast %"class.blink::Length"* %19 to i64*
  %21 = load i64, i64* %20, align 4
  store i64 %21, i64* %2, align 8
  %22 = and i64 %21, 280375465082880
  %23 = icmp eq i64 %22, 8796093022208
  br i1 %23, label %26, label %24

24:                                               ; preds = %5
  %25 = bitcast %"class.blink::ComputedStyle"* %9 to %"class.blink::ComputedStyleBase"*
  br label %29

26:                                               ; preds = %5
  call void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"* nonnull %3) #15
  %27 = bitcast %"class.blink::ComputedStyle"** %8 to %"class.blink::ComputedStyleBase"**
  %28 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %27, align 8
  br label %29

29:                                               ; preds = %24, %26
  %30 = phi %"class.blink::ComputedStyleBase"* [ %25, %24 ], [ %28, %26 ]
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %30, i64 0, i32 5, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %32, i64 0, i32 1, i32 1, i32 0
  %34 = load float, float* %33, align 4
  %35 = fcmp oeq float %34, 0.000000e+00
  br i1 %35, label %62, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %32, i64 0, i32 1, i32 1, i32 1
  %38 = load float, float* %37, align 4
  %39 = fcmp oeq float %38, 0.000000e+00
  %40 = fcmp olt float %34, 1.562500e-02
  %41 = or i1 %40, %39
  %42 = fcmp olt float %38, 1.562500e-02
  %43 = or i1 %42, %41
  br i1 %43, label %62, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %32, i64 0, i32 1, i32 0
  %46 = load i8, i8* %45, align 4
  %47 = and i8 %46, 3
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %62, label %49

49:                                               ; preds = %44
  %50 = load i8, i8* %7, align 1
  %51 = icmp ult i8 %50, 8
  br i1 %51, label %67, label %52

52:                                               ; preds = %67, %49
  %53 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %54 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %53 to i96*
  %55 = load i96, i96* %54, align 4
  %56 = and i96 %55, 113336795588871485128704
  %57 = icmp eq i96 %56, 75557863725914323419136
  br i1 %57, label %62, label %58

58:                                               ; preds = %52
  switch i8 %50, label %62 [
    i8 8, label %59
    i8 1, label %59
  ]

59:                                               ; preds = %58, %58
  %60 = call i32 @_ZNK5blink9LayoutBox30ComputePercentageLogicalHeightERKNS_6LengthE(%"class.blink::LayoutBox"* %0, %"class.blink::Length"* nonnull dereferenceable(8) %3) #15
  %61 = icmp eq i32 %60, -64
  br label %62

62:                                               ; preds = %58, %29, %36, %59, %52, %44
  %63 = phi i1 [ false, %29 ], [ false, %36 ], [ false, %44 ], [ false, %58 ], [ false, %52 ], [ %61, %59 ]
  %64 = load i8, i8* %7, align 1
  %65 = icmp eq i8 %64, 8
  br i1 %65, label %66, label %71

66:                                               ; preds = %62
  call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* nonnull %3) #15
  br label %71

67:                                               ; preds = %49
  %68 = lshr i8 -103, %50
  %69 = and i8 %68, 1
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %52, label %71

71:                                               ; preds = %67, %62, %66
  %72 = phi i1 [ %63, %62 ], [ %63, %66 ], [ true, %67 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #15
  br label %73

73:                                               ; preds = %1, %71
  %74 = phi i1 [ %72, %71 ], [ false, %1 ]
  ret i1 %74
}

declare i64 @_ZNK5blink9LayoutBox40ComputeMinMaxLogicalWidthFromAspectRatioEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare void @_ZN5blink12LayoutObject30SetIntrinsicLogicalWidthsDirtyENS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11LayoutBlock34ComputeChildPreferredLogicalWidthsERNS_12LayoutObjectERNS_10LayoutUnitES4_(%"class.blink::LayoutBlock"* nocapture readonly, %"class.blink::LayoutObject"* dereferenceable(88), %"class.blink::LayoutUnit"* nocapture dereferenceable(4), %"class.blink::LayoutUnit"* nocapture dereferenceable(4)) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 67108864
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %40, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %12 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %11 to i96*
  %13 = load i96, i96* %12, align 4
  %14 = xor i96 %13, %7
  %15 = trunc i96 %14 to i32
  %16 = icmp slt i32 %15, 0
  br i1 %16, label %17, label %40

17:                                               ; preds = %10
  %18 = and i96 %7, 63
  %19 = icmp eq i96 %18, 0
  br i1 %19, label %20, label %35

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 5, i32 0
  %22 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %22, i64 0, i32 0, i32 9
  %24 = bitcast [20 x i8]* %23 to i160*
  %25 = load i160, i160* %24, align 8
  %26 = and i160 %25, 15211807202738752817960438464512
  %27 = icmp eq i160 %26, 0
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 1, i32 4, i32 0, i64 8
  %29 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 1, i32 4, i32 0, i64 4
  %30 = select i1 %27, i8* %28, i8* %29
  %31 = bitcast i8* %30 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  store i32 %32, i32* %33, align 4
  %34 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  store i32 %32, i32* %34, align 4
  br label %75

35:                                               ; preds = %17
  %36 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutBox"*
  %37 = tail call i32 @_ZNK5blink9LayoutBox33ComputeLogicalHeightWithoutLayoutEv(%"class.blink::LayoutBox"* %36) #15
  %38 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  store i32 %37, i32* %38, align 4
  %39 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  store i32 %37, i32* %39, align 4
  br label %75

40:                                               ; preds = %4, %10
  %41 = bitcast %"class.blink::LayoutObject"* %1 to i64 (%"class.blink::LayoutObject"*)***
  %42 = load i64 (%"class.blink::LayoutObject"*)**, i64 (%"class.blink::LayoutObject"*)*** %41, align 8
  %43 = getelementptr inbounds i64 (%"class.blink::LayoutObject"*)*, i64 (%"class.blink::LayoutObject"*)** %42, i64 69
  %44 = load i64 (%"class.blink::LayoutObject"*)*, i64 (%"class.blink::LayoutObject"*)** %43, align 8
  %45 = tail call i64 %44(%"class.blink::LayoutObject"* %1) #15
  %46 = trunc i64 %45 to i32
  %47 = lshr i64 %45, 32
  %48 = trunc i64 %47 to i32
  %49 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %2, i64 0, i32 0
  store i32 %46, i32* %49, align 4
  %50 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  store i32 %48, i32* %50, align 4
  %51 = bitcast %"class.blink::LayoutObject"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %52 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %51, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %52, i64 23
  %54 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::LayoutObject"* %1) #15
  br i1 %55, label %56, label %75

56:                                               ; preds = %40
  %57 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 5, i32 0
  %58 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %58, i64 0, i32 0, i32 9
  %60 = bitcast [20 x i8]* %59 to i160*
  %61 = load i160, i160* %60, align 8
  %62 = and i160 %61, 15211807202738752817960438464512
  %63 = icmp eq i160 %62, 0
  %64 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %58, i64 0, i32 0, i32 5, i32 0, i32 0
  %65 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %65, i64 0, i32 8
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %65, i64 0, i32 3
  %68 = select i1 %63, %"class.blink::Length"* %66, %"class.blink::Length"* %67
  %69 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %68, i64 0, i32 2
  %70 = load i8, i8* %69, align 1
  switch i8 %70, label %75 [
    i8 4, label %71
    i8 3, label %73
    i8 5, label %73
  ]

71:                                               ; preds = %56
  %72 = load i32, i32* %50, align 4
  store i32 %72, i32* %49, align 4
  br label %75

73:                                               ; preds = %56, %56
  %74 = load i32, i32* %49, align 4
  store i32 %74, i32* %50, align 4
  br label %75

75:                                               ; preds = %56, %40, %73, %71, %35, %20
  ret void
}

declare i32 @_ZNK5blink9LayoutBox33ComputeLogicalHeightWithoutLayoutEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11LayoutBlock14HasLineIfEmptyEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %5 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %4 to i96*
  %6 = load i96, i96* %5, align 4
  %7 = and i96 %6, 16777216
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %11 = load %"class.blink::Node"*, %"class.blink::Node"** %10, align 8
  %12 = icmp eq %"class.blink::Node"* %11, null
  br i1 %12, label %15, label %13

13:                                               ; preds = %9
  %14 = tail call zeroext i1 @_ZN5blink21IsRootEditableElementERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %11) #15
  br i1 %14, label %63, label %15

15:                                               ; preds = %1, %9, %13
  %16 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %17 = load %"class.blink::Node"*, %"class.blink::Node"** %16, align 8
  %18 = icmp eq %"class.blink::Node"* %17, null
  br i1 %18, label %19, label %26

19:                                               ; preds = %15, %19
  %20 = phi %"class.blink::LayoutObject"* [ %22, %19 ], [ %3, %15 ]
  %21 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %20, i64 0, i32 7
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %22, i64 0, i32 6, i32 0, i32 0
  %24 = load %"class.blink::Node"*, %"class.blink::Node"** %23, align 8
  %25 = icmp eq %"class.blink::Node"* %24, null
  br i1 %25, label %19, label %26

26:                                               ; preds = %19, %15
  %27 = phi %"class.blink::Node"* [ %17, %15 ], [ %24, %19 ]
  %28 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %27, i64 0, i32 3, i32 0, i32 0
  %29 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %29, i64 0, i32 2, i32 0, i32 0
  %31 = load %"class.blink::Document"*, %"class.blink::Document"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %31, i64 0, i32 59, i32 0, i32 0
  %33 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %33, i64 0, i32 31, i32 0, i32 0
  %35 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %35, i64 0, i32 0, i32 11
  %37 = load i8, i8* %36, align 8
  %38 = and i8 %37, 1
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %26
  %41 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.6, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0)) #15
  %42 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #15
  br label %43

43:                                               ; preds = %40, %26
  %44 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %35, i64 0, i32 0, i32 0, i32 0
  %45 = load i8, i8* %44, align 8, !range !5
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %43
  %48 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %3) #15
  %49 = icmp eq %"class.blink::ComputedStyle"* %48, null
  br i1 %49, label %50, label %53

50:                                               ; preds = %47, %43
  %51 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %52 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %51, align 8
  br label %53

53:                                               ; preds = %47, %50
  %54 = phi %"class.blink::ComputedStyle"* [ %52, %50 ], [ %48, %47 ]
  %55 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %54, i64 0, i32 0, i32 1, i32 0, i32 0
  %56 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %56, i64 0, i32 2, i32 0, i32 0
  %58 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %58, i64 0, i32 19
  %60 = load i16, i16* %59, align 4
  %61 = and i16 %60, 8
  %62 = icmp ne i16 %61, 0
  br label %63

63:                                               ; preds = %13, %53
  %64 = phi i1 [ %62, %53 ], [ true, %13 ]
  ret i1 %64
}

declare zeroext i1 @_ZN5blink21IsRootEditableElementERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11LayoutBlock17EmptyLineBaselineENS_17LineDirectionModeE(%"class.blink::LayoutBlock"*, i32) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutBlock"*)***
  %4 = load i1 (%"class.blink::LayoutBlock"*)**, i1 (%"class.blink::LayoutBlock"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.blink::LayoutBlock"*)*, i1 (%"class.blink::LayoutBlock"*)** %4, i64 202
  %6 = load i1 (%"class.blink::LayoutBlock"*)*, i1 (%"class.blink::LayoutBlock"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.blink::LayoutBlock"* %0) #15
  br i1 %7, label %8, label %15

8:                                                ; preds = %2
  %9 = tail call i64 @_ZNK5blink11LayoutBlock20BaselineForEmptyLineENS_17LineDirectionModeE(%"class.blink::LayoutBlock"* %0, i32 %1)
  %10 = trunc i64 %9 to i8
  %11 = lshr i64 %9, 32
  %12 = trunc i64 %11 to i32
  %13 = icmp eq i8 %10, 0
  %14 = select i1 %13, i32 -64, i32 %12
  ret i32 %14

15:                                               ; preds = %2
  ret i32 -64
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink11LayoutBlock20BaselineForEmptyLineENS_17LineDirectionModeE(%"class.blink::LayoutBlock"*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %8, label %15

8:                                                ; preds = %2, %8
  %9 = phi %"class.blink::LayoutObject"* [ %11, %8 ], [ %4, %2 ]
  %10 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %9, i64 0, i32 7
  %11 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %11, i64 0, i32 6, i32 0, i32 0
  %13 = load %"class.blink::Node"*, %"class.blink::Node"** %12, align 8
  %14 = icmp eq %"class.blink::Node"* %13, null
  br i1 %14, label %8, label %15

15:                                               ; preds = %8, %2
  %16 = phi %"class.blink::Node"* [ %6, %2 ], [ %13, %8 ]
  %17 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %16, i64 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %20, i64 0, i32 59, i32 0, i32 0
  %22 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %21, align 8
  %23 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %22, i64 0, i32 31, i32 0, i32 0
  %24 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %24, i64 0, i32 0, i32 11
  %26 = load i8, i8* %25, align 8
  %27 = and i8 %26, 1
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %15
  %30 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.6, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0)) #15
  %31 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #15
  br label %32

32:                                               ; preds = %29, %15
  %33 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %24, i64 0, i32 0, i32 0, i32 0
  %34 = load i8, i8* %33, align 8, !range !5
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %39, label %36

36:                                               ; preds = %32
  %37 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %4) #15
  %38 = icmp eq %"class.blink::ComputedStyle"* %37, null
  br i1 %38, label %39, label %42

39:                                               ; preds = %36, %32
  %40 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %41 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %40, align 8
  br label %42

42:                                               ; preds = %36, %39
  %43 = phi %"class.blink::ComputedStyle"* [ %41, %39 ], [ %37, %36 ]
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %43, i64 0, i32 0, i32 0, i32 0, i32 0
  %45 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %45, i64 0, i32 1, i32 0, i32 0
  %47 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %47, i64 0, i32 1
  %49 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %48) #15
  %50 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %49, i64 0, i32 2
  %51 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %50, align 8
  %52 = icmp eq %"class.blink::SimpleFontData"* %51, null
  br i1 %52, label %53, label %57

53:                                               ; preds = %42
  %54 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %48, i64 0, i32 0
  %55 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %49, %"class.blink::FontDescription"* dereferenceable(80) %54) #15
  store %"class.blink::SimpleFontData"* %55, %"class.blink::SimpleFontData"** %50, align 8
  %56 = icmp eq %"class.blink::SimpleFontData"* %55, null
  br i1 %56, label %150, label %57

57:                                               ; preds = %42, %53
  %58 = phi %"class.blink::SimpleFontData"* [ %55, %53 ], [ %51, %42 ]
  %59 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)***
  %60 = load i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)**, i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)*** %59, align 8
  %61 = getelementptr inbounds i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)*, i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)** %60, i64 133
  %62 = load i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)*, i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)** %61, align 8
  %63 = call i32 %62(%"class.blink::LayoutBlock"* %0, i1 zeroext true, i32 %1, i32 1) #15
  %64 = icmp eq i32 %1, 0
  %65 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %66 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %67 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %66, align 8
  br i1 %64, label %68, label %79

68:                                               ; preds = %57
  %69 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %67, i64 122
  %70 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %69, align 8
  %71 = call i32 %70(%"class.blink::LayoutBoxModelObject"* %65) #15
  %72 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %66, align 8
  %73 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %72, i64 118
  %74 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %73, align 8
  %75 = call i32 %74(%"class.blink::LayoutBoxModelObject"* %65) #15
  %76 = icmp slt i32 %75, 0
  %77 = select i1 %76, i32 -2147483648, i32 2147483647
  %78 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %71, i32 %75) #15
  br label %90

79:                                               ; preds = %57
  %80 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %67, i64 125
  %81 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %80, align 8
  %82 = call i32 %81(%"class.blink::LayoutBoxModelObject"* %65) #15
  %83 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %66, align 8
  %84 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %83, i64 121
  %85 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %84, align 8
  %86 = call i32 %85(%"class.blink::LayoutBoxModelObject"* %65) #15
  %87 = icmp slt i32 %86, 0
  %88 = select i1 %87, i32 -2147483648, i32 2147483647
  %89 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %82, i32 %86) #15
  br label %90

90:                                               ; preds = %79, %68
  %91 = phi { i32, i1 } [ %89, %79 ], [ %78, %68 ]
  %92 = phi i32 [ %88, %79 ], [ %77, %68 ]
  %93 = extractvalue { i32, i1 } %91, 1
  %94 = extractvalue { i32, i1 } %91, 0
  %95 = select i1 %93, i32 %92, i32 %94
  %96 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %58, i64 0, i32 1, i32 9
  %97 = load i32, i32* %96, align 4
  %98 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %58, i64 0, i32 1, i32 10
  %99 = load i32, i32* %98, align 4
  %100 = add nsw i32 %99, %97
  %101 = icmp sgt i32 %100, 33554431
  br i1 %101, label %107, label %102

102:                                              ; preds = %90
  %103 = icmp slt i32 %100, -33554432
  br i1 %103, label %109, label %104

104:                                              ; preds = %102
  %105 = shl i32 %100, 6
  %106 = icmp sgt i32 %105, -1
  br i1 %106, label %107, label %109

107:                                              ; preds = %90, %104
  %108 = phi i32 [ %105, %104 ], [ 2147483647, %90 ]
  br label %109

109:                                              ; preds = %102, %104, %107
  %110 = phi i32 [ %108, %107 ], [ %105, %104 ], [ -2147483648, %102 ]
  %111 = phi i32 [ -2147483648, %107 ], [ 2147483647, %104 ], [ 2147483647, %102 ]
  %112 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %63, i32 %110) #15
  %113 = extractvalue { i32, i1 } %112, 1
  %114 = extractvalue { i32, i1 } %112, 0
  %115 = select i1 %113, i32 %111, i32 %114, !prof !4
  %116 = sdiv i32 %115, 2
  %117 = sext i32 %116 to i64
  %118 = call i1 @llvm.is.constant.i64(i64 %117) #15
  br i1 %118, label %125, label %119

119:                                              ; preds = %109
  %120 = icmp slt i32 %115, -1
  %121 = select i1 %120, i32 -2147483648, i32 2147483647
  %122 = add nsw i64 %117, 2147483648
  %123 = icmp ult i64 %122, 4294967296
  %124 = select i1 %123, i32 %116, i32 %121, !prof !3
  br label %125

125:                                              ; preds = %109, %119
  %126 = phi i32 [ %124, %119 ], [ %116, %109 ]
  %127 = icmp sgt i32 %97, 33554431
  br i1 %127, label %132, label %128

128:                                              ; preds = %125
  %129 = icmp slt i32 %97, -33554432
  %130 = shl i32 %97, 6
  %131 = select i1 %129, i32 -2147483648, i32 %130
  br label %132

132:                                              ; preds = %128, %125
  %133 = phi i32 [ 2147483647, %125 ], [ %131, %128 ]
  %134 = icmp slt i32 %126, 0
  %135 = select i1 %134, i32 -2147483648, i32 2147483647
  %136 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %133, i32 %126) #15
  %137 = extractvalue { i32, i1 } %136, 1
  %138 = extractvalue { i32, i1 } %136, 0
  %139 = select i1 %137, i32 %135, i32 %138, !prof !4
  %140 = icmp slt i32 %95, 0
  %141 = select i1 %140, i32 -2147483648, i32 2147483647
  %142 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %139, i32 %95) #15
  %143 = extractvalue { i32, i1 } %142, 1
  %144 = extractvalue { i32, i1 } %142, 0
  %145 = select i1 %143, i32 %141, i32 %144, !prof !4
  %146 = sdiv i32 %145, 64
  %147 = shl nsw i32 %146, 6
  %148 = zext i32 %147 to i64
  %149 = shl nuw i64 %148, 32
  br label %150

150:                                              ; preds = %53, %132
  %151 = phi i64 [ 1, %132 ], [ 0, %53 ]
  %152 = phi i64 [ %149, %132 ], [ 0, %53 ]
  %153 = or i64 %152, %151
  ret i64 %153
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11LayoutBlock10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBlock"*, i1 zeroext, i32, i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 1073741824
  %12 = icmp ne i96 %11, 0
  %13 = icmp eq i32 %3, 0
  %14 = and i1 %13, %12
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %17 = tail call i32 @_ZNK5blink9LayoutBox10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBox"* %16, i1 zeroext %1, i32 %2, i32 0) #15
  br label %96

18:                                               ; preds = %4
  br i1 %1, label %19, label %85

19:                                               ; preds = %18
  %20 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %21 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %22 = icmp eq %"class.blink::Node"* %21, null
  br i1 %22, label %23, label %30

23:                                               ; preds = %19, %23
  %24 = phi %"class.blink::LayoutObject"* [ %26, %23 ], [ %7, %19 ]
  %25 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %24, i64 0, i32 7
  %26 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %26, i64 0, i32 6, i32 0, i32 0
  %28 = load %"class.blink::Node"*, %"class.blink::Node"** %27, align 8
  %29 = icmp eq %"class.blink::Node"* %28, null
  br i1 %29, label %23, label %30

30:                                               ; preds = %23, %19
  %31 = phi %"class.blink::Node"* [ %21, %19 ], [ %28, %23 ]
  %32 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %31, i64 0, i32 3, i32 0, i32 0
  %33 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %33, i64 0, i32 2, i32 0, i32 0
  %35 = load %"class.blink::Document"*, %"class.blink::Document"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %35, i64 0, i32 59, i32 0, i32 0
  %37 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %37, i64 0, i32 31, i32 0, i32 0
  %39 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %39, i64 0, i32 0, i32 11
  %41 = load i8, i8* %40, align 8
  %42 = and i8 %41, 1
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %30
  %45 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.6, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0)) #15
  %46 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #15
  br label %47

47:                                               ; preds = %44, %30
  %48 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %39, i64 0, i32 0, i32 0, i32 0
  %49 = load i8, i8* %48, align 8, !range !5
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %85, label %51

51:                                               ; preds = %47
  %52 = load %"class.blink::Node"*, %"class.blink::Node"** %20, align 8
  %53 = icmp eq %"class.blink::Node"* %52, null
  br i1 %53, label %54, label %61

54:                                               ; preds = %51, %54
  %55 = phi %"class.blink::LayoutObject"* [ %57, %54 ], [ %7, %51 ]
  %56 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %55, i64 0, i32 7
  %57 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %57, i64 0, i32 6, i32 0, i32 0
  %59 = load %"class.blink::Node"*, %"class.blink::Node"** %58, align 8
  %60 = icmp eq %"class.blink::Node"* %59, null
  br i1 %60, label %54, label %61

61:                                               ; preds = %54, %51
  %62 = phi %"class.blink::Node"* [ %52, %51 ], [ %59, %54 ]
  %63 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %62, i64 0, i32 3, i32 0, i32 0
  %64 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %64, i64 0, i32 2, i32 0, i32 0
  %66 = load %"class.blink::Document"*, %"class.blink::Document"** %65, align 8
  %67 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %66, i64 0, i32 59, i32 0, i32 0
  %68 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %68, i64 0, i32 31, i32 0, i32 0
  %70 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %70, i64 0, i32 0, i32 11
  %72 = load i8, i8* %71, align 8
  %73 = and i8 %72, 1
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %61
  %76 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %76) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.6, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0)) #15
  %77 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %76) #15
  br label %78

78:                                               ; preds = %75, %61
  %79 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %70, i64 0, i32 0, i32 0, i32 0
  %80 = load i8, i8* %79, align 8, !range !5
  %81 = icmp eq i8 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %78
  %83 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %7) #15
  %84 = icmp eq %"class.blink::ComputedStyle"* %83, null
  br i1 %84, label %85, label %88

85:                                               ; preds = %18, %47, %78, %82
  %86 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %87 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %86, align 8
  br label %88

88:                                               ; preds = %85, %82
  %89 = phi %"class.blink::ComputedStyle"* [ %83, %82 ], [ %87, %85 ]
  %90 = call i32 @_ZNK5blink13ComputedStyle18ComputedLineHeightEv(%"class.blink::ComputedStyle"* %89) #15
  %91 = icmp sgt i32 %90, 33554431
  br i1 %91, label %96, label %92

92:                                               ; preds = %88
  %93 = icmp slt i32 %90, -33554432
  %94 = shl i32 %90, 6
  %95 = select i1 %93, i32 -2147483648, i32 %94
  ret i32 %95

96:                                               ; preds = %88, %15
  %97 = phi i32 [ %17, %15 ], [ 2147483647, %88 ]
  ret i32 %97
}

declare i32 @_ZNK5blink9LayoutBox10LineHeightEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBox"*, i1 zeroext, i32, i32) unnamed_addr #3

declare i32 @_ZNK5blink13ComputedStyle18ComputedLineHeightEv(%"class.blink::ComputedStyle"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11LayoutBlock27BeforeMarginInLineDirectionENS_17LineDirectionModeE(%"class.blink::LayoutBlock"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq i32 %1, 0
  %4 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %5 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %6 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %5, align 8
  br i1 %3, label %7, label %11

7:                                                ; preds = %2
  %8 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %6, i64 127
  %9 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::LayoutBox"* %4) #15
  br label %15

11:                                               ; preds = %2
  %12 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %6, i64 130
  %13 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::LayoutBox"* %4) #15
  br label %15

15:                                               ; preds = %11, %7
  %16 = phi i32 [ %10, %7 ], [ %14, %11 ]
  ret i32 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11LayoutBlock16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBlock"*, i32, i1 zeroext, i32, i32) unnamed_addr #0 align 2 {
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %9 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %8 to i96*
  %10 = load i96, i96* %9, align 4
  %11 = and i96 %10, 134217728
  %12 = icmp ne i96 %11, 0
  %13 = icmp eq i32 %4, 0
  %14 = and i1 %13, %12
  br i1 %14, label %15, label %275

15:                                               ; preds = %5
  %16 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %17 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %17, i64 0, i32 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %19, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %21, i64 0, i32 39
  %23 = load i32, i32* %22, align 4
  %24 = and i32 %23, 31
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %48, label %26

26:                                               ; preds = %15
  %27 = and i32 %23, 30
  %28 = or i32 %27, 1
  %29 = icmp eq i32 %28, 3
  br i1 %29, label %30, label %48

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %32 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %33 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %32, align 8
  %34 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %33, i64 127
  %35 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %34, align 8
  %36 = tail call i32 %35(%"class.blink::LayoutBox"* %31) #15
  %37 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 2, i32 1
  %38 = bitcast %"class.blink::LayoutSize"* %37 to i64*
  %39 = load i64, i64* %38, align 4
  %40 = lshr i64 %39, 32
  %41 = trunc i64 %40 to i32
  %42 = icmp slt i32 %41, 0
  %43 = select i1 %42, i32 -2147483648, i32 2147483647
  %44 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %36, i32 %41) #15
  %45 = extractvalue { i32, i1 } %44, 1
  %46 = extractvalue { i32, i1 } %44, 0
  %47 = select i1 %45, i32 %43, i32 %46, !prof !4
  br label %392

48:                                               ; preds = %15, %26
  %49 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %50 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 7
  %51 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %50, align 8
  %52 = icmp eq %"class.blink::LayoutObject"* %51, null
  br i1 %52, label %66, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %51, i64 0, i32 5, i32 0
  %55 = bitcast %"class.blink::ComputedStyle"** %54 to %"class.blink::ComputedStyleBase"**
  %56 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %56, i64 0, i32 9
  %58 = bitcast [20 x i8]* %57 to i160*
  %59 = load i160, i160* %58, align 8
  %60 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %17, i64 0, i32 0, i32 9
  %61 = bitcast [20 x i8]* %60 to i160*
  %62 = load i160, i160* %61, align 8
  %63 = xor i160 %62, %59
  %64 = and i160 %63, 15211807202738752817960438464512
  %65 = icmp eq i160 %64, 0
  br i1 %65, label %72, label %66

66:                                               ; preds = %53, %48
  %67 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %68 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %67, align 8
  %69 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %68, i64 92
  %70 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %69, align 8
  %71 = tail call zeroext i1 %70(%"class.blink::LayoutObject"* %7, i32 42) #15
  br i1 %71, label %72, label %78

72:                                               ; preds = %53, %66
  %73 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBlock"*, i32)***
  %74 = load i32 (%"class.blink::LayoutBlock"*, i32)**, i32 (%"class.blink::LayoutBlock"*, i32)*** %73, align 8
  %75 = getelementptr inbounds i32 (%"class.blink::LayoutBlock"*, i32)*, i32 (%"class.blink::LayoutBlock"*, i32)** %74, i64 181
  %76 = load i32 (%"class.blink::LayoutBlock"*, i32)*, i32 (%"class.blink::LayoutBlock"*, i32)** %75, align 8
  %77 = tail call i32 %76(%"class.blink::LayoutBlock"* %0, i32 %3) #15
  br label %78

78:                                               ; preds = %66, %72
  %79 = phi i32 [ %77, %72 ], [ -64, %66 ]
  %80 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %81 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %80, align 8
  %82 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %81, i64 77
  %83 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %82, align 8
  %84 = tail call zeroext i1 %83(%"class.blink::LayoutObject"* %7) #15
  br i1 %84, label %85, label %251

85:                                               ; preds = %78
  %86 = icmp eq i32 %3, 0
  %87 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 2, i32 1
  %88 = bitcast %"class.blink::LayoutSize"* %87 to i64*
  %89 = load i64, i64* %88, align 4
  br i1 %86, label %90, label %166

90:                                               ; preds = %85
  %91 = lshr i64 %89, 32
  %92 = trunc i64 %91 to i32
  %93 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %94 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %95 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %94, align 8
  %96 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %95, i64 123
  %97 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %96, align 8
  %98 = tail call i32 %97(%"class.blink::LayoutBoxModelObject"* %93) #15
  %99 = icmp sgt i32 %98, -1
  %100 = select i1 %99, i32 -2147483648, i32 2147483647
  %101 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %92, i32 %98) #15
  %102 = extractvalue { i32, i1 } %101, 1
  %103 = extractvalue { i32, i1 } %101, 0
  %104 = select i1 %102, i32 %100, i32 %103, !prof !4
  %105 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %94, align 8
  %106 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %105, i64 119
  %107 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %106, align 8
  %108 = tail call i32 %107(%"class.blink::LayoutBoxModelObject"* %93) #15
  %109 = icmp sgt i32 %108, -1
  %110 = select i1 %109, i32 -2147483648, i32 2147483647
  %111 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %104, i32 %108) #15
  %112 = extractvalue { i32, i1 } %111, 1
  %113 = extractvalue { i32, i1 } %111, 0
  %114 = select i1 %112, i32 %110, i32 %113, !prof !4
  %115 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %116 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %115, i64 0, i32 0, i32 9
  %117 = bitcast [20 x i8]* %116 to i160*
  %118 = load i160, i160* %117, align 8
  %119 = and i160 %118, 1190036353683150593851392
  %120 = icmp eq i160 %119, 340010386766614455386112
  br i1 %120, label %148, label %121

121:                                              ; preds = %90
  %122 = load i96, i96* %9, align 4
  %123 = and i96 %122, 8589934592
  %124 = icmp eq i96 %123, 0
  br i1 %124, label %148, label %125

125:                                              ; preds = %121
  %126 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %93) #15
  %127 = icmp eq %"class.blink::PaintLayerScrollableArea"* %126, null
  br i1 %127, label %155, label %128

128:                                              ; preds = %125
  %129 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %93) #15
  %130 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %129, i64 0, i32 6, i32 3
  %131 = load i8, i8* %130, align 8
  %132 = and i8 %131, 1
  %133 = icmp eq i8 %132, 0
  br i1 %133, label %138, label %134

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %129, i64 0, i32 6, i32 1, i32 0, i32 0
  %136 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %135, align 8
  %137 = icmp eq %"class.blink::Scrollbar"* %136, null
  br i1 %137, label %138, label %155

138:                                              ; preds = %134, %128
  %139 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %93) #15
  %140 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %139, i64 0, i32 6, i32 3
  %141 = load i8, i8* %140, align 8
  %142 = and i8 %141, 2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %148, label %144

144:                                              ; preds = %138
  %145 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %139, i64 0, i32 6, i32 2, i32 0, i32 0
  %146 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %145, align 8
  %147 = icmp eq %"class.blink::Scrollbar"* %146, null
  br i1 %147, label %148, label %155

148:                                              ; preds = %144, %138, %121, %90
  %149 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %150 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %149, i64 0, i32 0, i32 9
  %151 = bitcast [20 x i8]* %150 to i160*
  %152 = load i160, i160* %151, align 8
  %153 = and i160 %152, 270215977642229760
  %154 = icmp eq i160 %153, 0
  br i1 %154, label %160, label %155

155:                                              ; preds = %125, %134, %144, %148
  %156 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %49, i32 0, i32 0, i32 1) #15
  %157 = extractvalue { i64, i64 } %156, 1
  %158 = trunc i64 %157 to i32
  %159 = icmp sgt i32 %158, -1
  br i1 %159, label %160, label %162

160:                                              ; preds = %148, %155
  %161 = phi i32 [ %158, %155 ], [ 0, %148 ]
  br label %162

162:                                              ; preds = %155, %160
  %163 = phi i32 [ %161, %160 ], [ %158, %155 ]
  %164 = phi i32 [ -2147483648, %160 ], [ 2147483647, %155 ]
  %165 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %114, i32 %163) #15
  br label %242

166:                                              ; preds = %85
  %167 = trunc i64 %89 to i32
  %168 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %169 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %170 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %169, align 8
  %171 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %170, i64 124
  %172 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %171, align 8
  %173 = tail call i32 %172(%"class.blink::LayoutBoxModelObject"* %168) #15
  %174 = icmp sgt i32 %173, -1
  %175 = select i1 %174, i32 -2147483648, i32 2147483647
  %176 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %167, i32 %173) #15
  %177 = extractvalue { i32, i1 } %176, 1
  %178 = extractvalue { i32, i1 } %176, 0
  %179 = select i1 %177, i32 %175, i32 %178, !prof !4
  %180 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %169, align 8
  %181 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %180, i64 120
  %182 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %181, align 8
  %183 = tail call i32 %182(%"class.blink::LayoutBoxModelObject"* %168) #15
  %184 = icmp sgt i32 %183, -1
  %185 = select i1 %184, i32 -2147483648, i32 2147483647
  %186 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %179, i32 %183) #15
  %187 = extractvalue { i32, i1 } %186, 1
  %188 = extractvalue { i32, i1 } %186, 0
  %189 = select i1 %187, i32 %185, i32 %188, !prof !4
  %190 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %191 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %190, i64 0, i32 0, i32 9
  %192 = bitcast [20 x i8]* %191 to i160*
  %193 = load i160, i160* %192, align 8
  %194 = and i160 %193, 1190036353683150593851392
  %195 = icmp eq i160 %194, 340010386766614455386112
  br i1 %195, label %223, label %196

196:                                              ; preds = %166
  %197 = load i96, i96* %9, align 4
  %198 = and i96 %197, 8589934592
  %199 = icmp eq i96 %198, 0
  br i1 %199, label %223, label %200

200:                                              ; preds = %196
  %201 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %168) #15
  %202 = icmp eq %"class.blink::PaintLayerScrollableArea"* %201, null
  br i1 %202, label %230, label %203

203:                                              ; preds = %200
  %204 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %168) #15
  %205 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %204, i64 0, i32 6, i32 3
  %206 = load i8, i8* %205, align 8
  %207 = and i8 %206, 1
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %213, label %209

209:                                              ; preds = %203
  %210 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %204, i64 0, i32 6, i32 1, i32 0, i32 0
  %211 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %210, align 8
  %212 = icmp eq %"class.blink::Scrollbar"* %211, null
  br i1 %212, label %213, label %230

213:                                              ; preds = %209, %203
  %214 = tail call %"class.blink::PaintLayerScrollableArea"* @_ZNK5blink20LayoutBoxModelObject17GetScrollableAreaEv(%"class.blink::LayoutBoxModelObject"* %168) #15
  %215 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %214, i64 0, i32 6, i32 3
  %216 = load i8, i8* %215, align 8
  %217 = and i8 %216, 2
  %218 = icmp eq i8 %217, 0
  br i1 %218, label %223, label %219

219:                                              ; preds = %213
  %220 = getelementptr inbounds %"class.blink::PaintLayerScrollableArea", %"class.blink::PaintLayerScrollableArea"* %214, i64 0, i32 6, i32 2, i32 0, i32 0
  %221 = load %"class.blink::Scrollbar"*, %"class.blink::Scrollbar"** %220, align 8
  %222 = icmp eq %"class.blink::Scrollbar"* %221, null
  br i1 %222, label %223, label %230

223:                                              ; preds = %219, %213, %196, %166
  %224 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %16, align 8
  %225 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %224, i64 0, i32 0, i32 9
  %226 = bitcast [20 x i8]* %225 to i160*
  %227 = load i160, i160* %226, align 8
  %228 = and i160 %227, 270215977642229760
  %229 = icmp eq i160 %228, 0
  br i1 %229, label %236, label %230

230:                                              ; preds = %200, %209, %219, %223
  %231 = tail call { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"* %49, i32 0, i32 0, i32 1) #15
  %232 = extractvalue { i64, i64 } %231, 1
  %233 = lshr i64 %232, 32
  %234 = trunc i64 %233 to i32
  %235 = icmp sgt i32 %234, -1
  br i1 %235, label %236, label %238

236:                                              ; preds = %223, %230
  %237 = phi i32 [ %234, %230 ], [ 0, %223 ]
  br label %238

238:                                              ; preds = %230, %236
  %239 = phi i32 [ %237, %236 ], [ %234, %230 ]
  %240 = phi i32 [ -2147483648, %236 ], [ 2147483647, %230 ]
  %241 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %189, i32 %239) #15
  br label %242

242:                                              ; preds = %238, %162
  %243 = phi { i32, i1 } [ %241, %238 ], [ %165, %162 ]
  %244 = phi i32 [ %240, %238 ], [ %164, %162 ]
  %245 = extractvalue { i32, i1 } %243, 1
  %246 = extractvalue { i32, i1 } %243, 0
  %247 = select i1 %245, i32 %244, i32 %246
  %248 = icmp sle i32 %79, %247
  %249 = icmp ne i32 %79, -64
  %250 = and i1 %249, %248
  br i1 %250, label %253, label %273

251:                                              ; preds = %78
  %252 = icmp eq i32 %79, -64
  br i1 %252, label %273, label %253

253:                                              ; preds = %251, %242
  %254 = icmp eq i32 %3, 0
  %255 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %256 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %255, align 8
  br i1 %254, label %257, label %261

257:                                              ; preds = %253
  %258 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %256, i64 127
  %259 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %258, align 8
  %260 = tail call i32 %259(%"class.blink::LayoutBox"* %49) #15
  br label %265

261:                                              ; preds = %253
  %262 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %256, i64 130
  %263 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %262, align 8
  %264 = tail call i32 %263(%"class.blink::LayoutBox"* %49) #15
  br label %265

265:                                              ; preds = %257, %261
  %266 = phi i32 [ %260, %257 ], [ %264, %261 ]
  %267 = icmp slt i32 %79, 0
  %268 = select i1 %267, i32 -2147483648, i32 2147483647
  %269 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %266, i32 %79) #15
  %270 = extractvalue { i32, i1 } %269, 1
  %271 = extractvalue { i32, i1 } %269, 0
  %272 = select i1 %270, i32 %268, i32 %271, !prof !4
  br label %392

273:                                              ; preds = %251, %242
  %274 = tail call i32 @_ZNK5blink9LayoutBox16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBox"* %49, i32 %1, i1 zeroext %2, i32 %3, i32 0) #15
  br label %392

275:                                              ; preds = %5
  br i1 %2, label %276, label %311

276:                                              ; preds = %275
  %277 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %278 = load %"class.blink::Node"*, %"class.blink::Node"** %277, align 8
  %279 = icmp eq %"class.blink::Node"* %278, null
  br i1 %279, label %280, label %287

280:                                              ; preds = %276, %280
  %281 = phi %"class.blink::LayoutObject"* [ %283, %280 ], [ %7, %276 ]
  %282 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %281, i64 0, i32 7
  %283 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %282, align 8
  %284 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %283, i64 0, i32 6, i32 0, i32 0
  %285 = load %"class.blink::Node"*, %"class.blink::Node"** %284, align 8
  %286 = icmp eq %"class.blink::Node"* %285, null
  br i1 %286, label %280, label %287

287:                                              ; preds = %280, %276
  %288 = phi %"class.blink::Node"* [ %278, %276 ], [ %285, %280 ]
  %289 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %288, i64 0, i32 3, i32 0, i32 0
  %290 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %289, align 8
  %291 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %290, i64 0, i32 2, i32 0, i32 0
  %292 = load %"class.blink::Document"*, %"class.blink::Document"** %291, align 8
  %293 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %292, i64 0, i32 59, i32 0, i32 0
  %294 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %293, align 8
  %295 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %294, i64 0, i32 31, i32 0, i32 0
  %296 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %295, align 8
  %297 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %296, i64 0, i32 0, i32 11
  %298 = load i8, i8* %297, align 8
  %299 = and i8 %298, 1
  %300 = icmp eq i8 %299, 0
  br i1 %300, label %301, label %304

301:                                              ; preds = %287
  %302 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %302) #15
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.6, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0)) #15
  %303 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %302) #15
  br label %304

304:                                              ; preds = %301, %287
  %305 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %296, i64 0, i32 0, i32 0, i32 0
  %306 = load i8, i8* %305, align 8, !range !5
  %307 = icmp eq i8 %306, 0
  br i1 %307, label %311, label %308

308:                                              ; preds = %304
  %309 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %7) #15
  %310 = icmp eq %"class.blink::ComputedStyle"* %309, null
  br i1 %310, label %311, label %314

311:                                              ; preds = %275, %304, %308
  %312 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %313 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %312, align 8
  br label %314

314:                                              ; preds = %311, %308
  %315 = phi %"class.blink::ComputedStyle"* [ %309, %308 ], [ %313, %311 ]
  %316 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %315, i64 0, i32 0, i32 0, i32 0, i32 0
  %317 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %316, align 8
  %318 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %317, i64 0, i32 1, i32 0, i32 0
  %319 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %318, align 8
  %320 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %319, i64 0, i32 1
  %321 = call %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"* %320) #15
  %322 = getelementptr inbounds %"class.blink::FontFallbackList", %"class.blink::FontFallbackList"* %321, i64 0, i32 2
  %323 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %322, align 8
  %324 = icmp eq %"class.blink::SimpleFontData"* %323, null
  br i1 %324, label %325, label %329

325:                                              ; preds = %314
  %326 = getelementptr inbounds %"class.blink::Font", %"class.blink::Font"* %320, i64 0, i32 0
  %327 = call %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"* %321, %"class.blink::FontDescription"* dereferenceable(80) %326) #15
  store %"class.blink::SimpleFontData"* %327, %"class.blink::SimpleFontData"** %322, align 8
  %328 = icmp eq %"class.blink::SimpleFontData"* %327, null
  br i1 %328, label %392, label %329

329:                                              ; preds = %314, %325
  %330 = phi %"class.blink::SimpleFontData"* [ %327, %325 ], [ %323, %314 ]
  %331 = icmp eq i32 %1, 0
  %332 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %330, i64 0, i32 1, i32 9
  %333 = load i32, i32* %332, align 4
  br i1 %331, label %340, label %334

334:                                              ; preds = %329
  %335 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %330, i64 0, i32 1, i32 10
  %336 = load i32, i32* %335, align 4
  %337 = add nsw i32 %336, %333
  %338 = sdiv i32 %337, 2
  %339 = sub nsw i32 %337, %338
  br label %340

340:                                              ; preds = %329, %334
  %341 = phi i32 [ %339, %334 ], [ %333, %329 ]
  %342 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)***
  %343 = load i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)**, i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)*** %342, align 8
  %344 = getelementptr inbounds i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)*, i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)** %343, i64 133
  %345 = load i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)*, i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)** %344, align 8
  %346 = call i32 %345(%"class.blink::LayoutBlock"* %0, i1 zeroext %2, i32 %3, i32 %4) #15
  %347 = load i32, i32* %332, align 4
  %348 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %330, i64 0, i32 1, i32 10
  %349 = load i32, i32* %348, align 4
  %350 = add nsw i32 %349, %347
  %351 = icmp sgt i32 %350, 33554431
  br i1 %351, label %357, label %352

352:                                              ; preds = %340
  %353 = icmp slt i32 %350, -33554432
  br i1 %353, label %359, label %354

354:                                              ; preds = %352
  %355 = shl i32 %350, 6
  %356 = icmp sgt i32 %355, -1
  br i1 %356, label %357, label %359

357:                                              ; preds = %340, %354
  %358 = phi i32 [ %355, %354 ], [ 2147483647, %340 ]
  br label %359

359:                                              ; preds = %352, %354, %357
  %360 = phi i32 [ %358, %357 ], [ %355, %354 ], [ -2147483648, %352 ]
  %361 = phi i32 [ -2147483648, %357 ], [ 2147483647, %354 ], [ 2147483647, %352 ]
  %362 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %346, i32 %360) #15
  %363 = extractvalue { i32, i1 } %362, 1
  %364 = extractvalue { i32, i1 } %362, 0
  %365 = select i1 %363, i32 %361, i32 %364, !prof !4
  %366 = sdiv i32 %365, 2
  %367 = sext i32 %366 to i64
  %368 = call i1 @llvm.is.constant.i64(i64 %367) #15
  br i1 %368, label %375, label %369

369:                                              ; preds = %359
  %370 = icmp slt i32 %365, -1
  %371 = select i1 %370, i32 -2147483648, i32 2147483647
  %372 = add nsw i64 %367, 2147483648
  %373 = icmp ult i64 %372, 4294967296
  %374 = select i1 %373, i32 %366, i32 %371, !prof !3
  br label %375

375:                                              ; preds = %359, %369
  %376 = phi i32 [ %374, %369 ], [ %366, %359 ]
  %377 = icmp sgt i32 %341, 33554431
  br i1 %377, label %382, label %378

378:                                              ; preds = %375
  %379 = icmp slt i32 %341, -33554432
  %380 = shl i32 %341, 6
  %381 = select i1 %379, i32 -2147483648, i32 %380
  br label %382

382:                                              ; preds = %378, %375
  %383 = phi i32 [ 2147483647, %375 ], [ %381, %378 ]
  %384 = icmp slt i32 %376, 0
  %385 = select i1 %384, i32 -2147483648, i32 2147483647
  %386 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %383, i32 %376) #15
  %387 = extractvalue { i32, i1 } %386, 1
  %388 = extractvalue { i32, i1 } %386, 0
  %389 = select i1 %387, i32 %385, i32 %388, !prof !4
  %390 = sdiv i32 %389, 64
  %391 = shl nsw i32 %390, 6
  br label %392

392:                                              ; preds = %325, %265, %273, %382, %30
  %393 = phi i32 [ %47, %30 ], [ %391, %382 ], [ %272, %265 ], [ %274, %273 ], [ -64, %325 ]
  ret i32 %393
}

declare i32 @_ZNK5blink9LayoutBox16BaselinePositionENS_12FontBaselineEbNS_17LineDirectionModeENS_16LinePositionModeE(%"class.blink::LayoutBox"*, i32, i1 zeroext, i32, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11LayoutBlock30MinLineHeightForReplacedObjectEbNS_10LayoutUnitE(%"class.blink::LayoutBlock"*, i1 zeroext, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %5 = load %"class.blink::Node"*, %"class.blink::Node"** %4, align 8
  %6 = icmp eq %"class.blink::Node"* %5, null
  br i1 %6, label %7, label %16

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %7, %9
  %10 = phi %"class.blink::LayoutObject"* [ %12, %9 ], [ %8, %7 ]
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %10, i64 0, i32 7
  %12 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %12, i64 0, i32 6, i32 0, i32 0
  %14 = load %"class.blink::Node"*, %"class.blink::Node"** %13, align 8
  %15 = icmp eq %"class.blink::Node"* %14, null
  br i1 %15, label %9, label %16

16:                                               ; preds = %9, %3
  %17 = phi %"class.blink::Node"* [ %5, %3 ], [ %14, %9 ]
  %18 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %17, i64 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %19, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.blink::Document"*, %"class.blink::Document"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %21, i64 0, i32 33
  %23 = load i32, i32* %22, align 8
  %24 = icmp ne i32 %23, 2
  %25 = icmp ne i32 %2, 0
  %26 = and i1 %25, %24
  br i1 %26, label %41, label %27

27:                                               ; preds = %16
  %28 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %29 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %28 to i96*
  %30 = load i96, i96* %29, align 4
  %31 = trunc i96 %30 to i32
  %32 = lshr i32 %31, 31
  %33 = xor i32 %32, 1
  %34 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)***
  %35 = load i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)**, i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)*** %34, align 8
  %36 = getelementptr inbounds i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)*, i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)** %35, i64 133
  %37 = load i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)*, i32 (%"class.blink::LayoutBlock"*, i1, i32, i32)** %36, align 8
  %38 = tail call i32 %37(%"class.blink::LayoutBlock"* %0, i1 zeroext %1, i32 %33, i32 1) #15
  %39 = icmp sgt i32 %38, %2
  %40 = select i1 %39, i32 %38, i32 %2
  br label %41

41:                                               ; preds = %16, %27
  %42 = phi i32 [ %40, %27 ], [ %2, %16 ]
  ret i32 %42
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink11LayoutBlock28FirstLineBoxBaselineOverrideEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 3, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %6, i64 0, i32 2, i32 0, i32 0
  %8 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %10, i64 0, i32 45
  %12 = load i32, i32* %11, align 4
  %13 = and i32 %12, 1
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %58, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %17 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %16 to i96*
  %18 = load i96, i96* %17, align 4
  %19 = and i96 %18, 1207959552
  %20 = icmp eq i96 %19, 134217728
  br i1 %20, label %58, label %21

21:                                               ; preds = %15
  %22 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %23 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %24 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %23, i64 92
  %25 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %24, align 8
  %26 = tail call zeroext i1 %25(%"class.blink::LayoutObject"* %2, i32 43) #15
  br i1 %26, label %58, label %27

27:                                               ; preds = %21
  %28 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %29 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %28, i64 92
  %30 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %29, align 8
  %31 = tail call zeroext i1 %30(%"class.blink::LayoutObject"* %2, i32 46) #15
  br i1 %31, label %52, label %32

32:                                               ; preds = %27
  %33 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %34 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, i64 92
  %35 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %34, align 8
  %36 = tail call zeroext i1 %35(%"class.blink::LayoutObject"* %2, i32 48) #15
  br i1 %36, label %52, label %37

37:                                               ; preds = %32
  %38 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %39 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, i64 92
  %40 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %39, align 8
  %41 = tail call zeroext i1 %40(%"class.blink::LayoutObject"* %2, i32 45) #15
  br i1 %41, label %52, label %42

42:                                               ; preds = %37
  %43 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %44 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %43, i64 92
  %45 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %44, align 8
  %46 = tail call zeroext i1 %45(%"class.blink::LayoutObject"* %2, i32 49) #15
  br i1 %46, label %52, label %47

47:                                               ; preds = %42
  %48 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %22, align 8
  %49 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %48, i64 92
  %50 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %49, align 8
  %51 = tail call zeroext i1 %50(%"class.blink::LayoutObject"* %2, i32 50) #15
  br i1 %51, label %52, label %93

52:                                               ; preds = %27, %32, %37, %42, %47
  %53 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %54 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %53, align 8
  %55 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %54, i64 24
  %56 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %55, align 8
  %57 = tail call zeroext i1 %56(%"class.blink::LayoutObject"* %2) #15
  br i1 %57, label %93, label %58

58:                                               ; preds = %15, %21, %1, %52
  %59 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 7
  %60 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %59, align 8
  %61 = icmp eq %"class.blink::LayoutObject"* %60, null
  br i1 %61, label %77, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %60, i64 0, i32 5, i32 0
  %64 = bitcast %"class.blink::ComputedStyle"** %63 to %"class.blink::ComputedStyleBase"**
  %65 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %65, i64 0, i32 9
  %67 = bitcast [20 x i8]* %66 to i160*
  %68 = load i160, i160* %67, align 8
  %69 = bitcast %"class.blink::ComputedStyle"** %3 to %"class.blink::ComputedStyleBase"**
  %70 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %70, i64 0, i32 9
  %72 = bitcast [20 x i8]* %71 to i160*
  %73 = load i160, i160* %72, align 8
  %74 = xor i160 %73, %68
  %75 = and i160 %74, 15211807202738752817960438464512
  %76 = icmp eq i160 %75, 0
  br i1 %76, label %92, label %77

77:                                               ; preds = %62, %58
  %78 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %79 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %78, align 8
  %80 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %79, i64 92
  %81 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %80, align 8
  %82 = tail call zeroext i1 %81(%"class.blink::LayoutObject"* %2, i32 42) #15
  br i1 %82, label %92, label %83

83:                                               ; preds = %77
  %84 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %59, align 8
  %85 = icmp eq %"class.blink::LayoutObject"* %84, null
  br i1 %85, label %93, label %86

86:                                               ; preds = %83
  %87 = bitcast %"class.blink::LayoutObject"* %84 to i1 (%"class.blink::LayoutObject"*, i32)***
  %88 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %87, align 8
  %89 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %88, i64 92
  %90 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %89, align 8
  %91 = tail call zeroext i1 %90(%"class.blink::LayoutObject"* nonnull %84, i32 10) #15
  br i1 %91, label %92, label %93

92:                                               ; preds = %62, %86, %77
  br label %93

93:                                               ; preds = %83, %47, %86, %52, %92
  %94 = phi i64 [ -274877906944, %92 ], [ -274877906943, %52 ], [ -274877906943, %86 ], [ -274877906943, %47 ], [ -274877906943, %83 ]
  ret i64 %94
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11LayoutBlock20FirstLineBoxBaselineEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 align 2 {
  %2 = tail call i64 @_ZNK5blink11LayoutBlock28FirstLineBoxBaselineOverrideEv(%"class.blink::LayoutBlock"* %0)
  %3 = trunc i64 %2 to i8
  %4 = lshr i64 %2, 32
  %5 = trunc i64 %4 to i32
  %6 = icmp eq i8 %3, 0
  br i1 %6, label %7, label %59

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.blink::LayoutBlock"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %10 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %10, i64 13
  %12 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %11, align 8
  %13 = tail call %"class.blink::LayoutObjectChildList"* %12(%"class.blink::LayoutObject"* %8) #15
  %14 = icmp eq %"class.blink::LayoutObjectChildList"* %13, null
  br i1 %14, label %59, label %15

15:                                               ; preds = %7
  %16 = bitcast %"class.blink::LayoutObjectChildList"* %13 to %"class.blink::LayoutBox"**
  %17 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %16, align 8
  %18 = icmp eq %"class.blink::LayoutBox"* %17, null
  br i1 %18, label %59, label %19

19:                                               ; preds = %15, %36
  %20 = phi %"class.blink::LayoutBox"* [ %39, %36 ], [ %17, %15 ]
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %20, i64 0, i32 0, i32 0, i32 4
  %22 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %21 to i96*
  %23 = load i96, i96* %22, align 4
  %24 = and i96 %23, 8388608
  %25 = icmp ne i96 %24, 0
  %26 = and i96 %23, 113336795588871485128704
  %27 = icmp eq i96 %26, 75557863725914323419136
  %28 = or i1 %27, %25
  br i1 %28, label %36, label %29

29:                                               ; preds = %19
  %30 = bitcast %"class.blink::LayoutBox"* %20 to i32 (%"class.blink::LayoutBox"*)***
  %31 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %30, align 8
  %32 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %31, i64 180
  %33 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %32, align 8
  %34 = tail call i32 %33(%"class.blink::LayoutBox"* nonnull %20) #15
  %35 = icmp eq i32 %34, -64
  br i1 %35, label %36, label %41

36:                                               ; preds = %29, %19
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %20, i64 0, i32 0, i32 0, i32 9
  %38 = bitcast %"class.blink::LayoutObject"** %37 to %"class.blink::LayoutBox"**
  %39 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %38, align 8
  %40 = icmp eq %"class.blink::LayoutBox"* %39, null
  br i1 %40, label %59, label %19

41:                                               ; preds = %29
  %42 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %20, i64 0, i32 0, i32 0, i32 5, i32 0
  %43 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %43, i64 0, i32 0, i32 9
  %45 = bitcast [20 x i8]* %44 to i160*
  %46 = load i160, i160* %45, align 8
  %47 = and i160 %46, 15211807202738752817960438464512
  %48 = icmp eq i160 %47, 0
  %49 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %20, i64 0, i32 2, i32 0, i32 1, i32 0
  %50 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %20, i64 0, i32 2, i32 0, i32 0, i32 0
  %51 = select i1 %48, i32* %49, i32* %50
  %52 = load i32, i32* %51, align 4
  %53 = icmp slt i32 %34, 0
  %54 = select i1 %53, i32 -2147483648, i32 2147483647
  %55 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %52, i32 %34) #15
  %56 = extractvalue { i32, i1 } %55, 1
  %57 = extractvalue { i32, i1 } %55, 0
  %58 = select i1 %56, i32 %54, i32 %57, !prof !4
  br label %59

59:                                               ; preds = %36, %7, %15, %1, %41
  %60 = phi i32 [ %58, %41 ], [ %5, %1 ], [ -64, %15 ], [ -64, %7 ], [ -64, %36 ]
  ret i32 %60
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11LayoutBlock48UseLogicalBottomMarginEdgeForInlineBlockBaselineEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8
  %8 = and i160 %7, 1190036353683150593851392
  %9 = icmp ne i160 %8, 340010386766614455386112
  %10 = and i160 %7, 22835963083295358096932575511191922182123945984
  %11 = icmp eq i160 %10, 0
  %12 = and i1 %9, %11
  br i1 %12, label %67, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 3, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %15, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %17, i64 0, i32 2, i32 0, i32 0
  %19 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %19, i64 0, i32 45
  %21 = load i32, i32* %20, align 4
  %22 = and i32 %21, 1
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %67, label %24

24:                                               ; preds = %13
  %25 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %26 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %25 to i96*
  %27 = load i96, i96* %26, align 4
  %28 = and i96 %27, 1207959552
  %29 = icmp eq i96 %28, 134217728
  br i1 %29, label %67, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %32 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %31, align 8
  %33 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %32, i64 92
  %34 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %33, align 8
  %35 = tail call zeroext i1 %34(%"class.blink::LayoutObject"* %2, i32 43) #15
  br i1 %35, label %67, label %36

36:                                               ; preds = %30
  %37 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %31, align 8
  %38 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %37, i64 92
  %39 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %38, align 8
  %40 = tail call zeroext i1 %39(%"class.blink::LayoutObject"* %2, i32 46) #15
  br i1 %40, label %61, label %41

41:                                               ; preds = %36
  %42 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %31, align 8
  %43 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %42, i64 92
  %44 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %43, align 8
  %45 = tail call zeroext i1 %44(%"class.blink::LayoutObject"* %2, i32 48) #15
  br i1 %45, label %61, label %46

46:                                               ; preds = %41
  %47 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %31, align 8
  %48 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %47, i64 92
  %49 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %48, align 8
  %50 = tail call zeroext i1 %49(%"class.blink::LayoutObject"* %2, i32 45) #15
  br i1 %50, label %61, label %51

51:                                               ; preds = %46
  %52 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %31, align 8
  %53 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %52, i64 92
  %54 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %53, align 8
  %55 = tail call zeroext i1 %54(%"class.blink::LayoutObject"* %2, i32 49) #15
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %31, align 8
  %58 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %57, i64 92
  %59 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %58, align 8
  %60 = tail call zeroext i1 %59(%"class.blink::LayoutObject"* %2, i32 50) #15
  br i1 %60, label %61, label %67

61:                                               ; preds = %56, %51, %46, %41, %36
  %62 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %63 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %62, align 8
  %64 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %63, i64 24
  %65 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %64, align 8
  %66 = tail call zeroext i1 %65(%"class.blink::LayoutObject"* %2) #15
  br label %67

67:                                               ; preds = %1, %61, %56, %30, %24, %13
  %68 = phi i1 [ false, %13 ], [ false, %30 ], [ true, %56 ], [ %66, %61 ], [ false, %24 ], [ true, %1 ]
  ret i1 %68
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK5blink11LayoutBlock27InlineBlockBaselineOverrideENS_17LineDirectionModeE(%"class.blink::LayoutBlock"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink11LayoutBlock48UseLogicalBottomMarginEdgeForInlineBlockBaselineEv(%"class.blink::LayoutBlock"* %0)
  br i1 %4, label %5, label %38

5:                                                ; preds = %2
  %6 = icmp eq i32 %1, 0
  %7 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 2, i32 1
  %9 = bitcast %"class.blink::LayoutSize"* %8 to i64*
  %10 = load i64, i64* %9, align 4
  br i1 %6, label %11, label %25

11:                                               ; preds = %5
  %12 = lshr i64 %10, 32
  %13 = trunc i64 %12 to i32
  %14 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %15 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %14, align 8
  %16 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %15, i64 128
  %17 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::LayoutBox"* %7) #15
  %19 = icmp slt i32 %18, 0
  %20 = select i1 %19, i32 -2147483648, i32 2147483647
  %21 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %13, i32 %18) #15
  %22 = extractvalue { i32, i1 } %21, 1
  %23 = extractvalue { i32, i1 } %21, 0
  %24 = select i1 %22, i32 %20, i32 %23, !prof !4
  br label %65

25:                                               ; preds = %5
  %26 = trunc i64 %10 to i32
  %27 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %28 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %27, align 8
  %29 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %28, i64 129
  %30 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %29, align 8
  %31 = tail call i32 %30(%"class.blink::LayoutBox"* %7) #15
  %32 = icmp slt i32 %31, 0
  %33 = select i1 %32, i32 -2147483648, i32 2147483647
  %34 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %26, i32 %31) #15
  %35 = extractvalue { i32, i1 } %34, 1
  %36 = extractvalue { i32, i1 } %34, 0
  %37 = select i1 %35, i32 %33, i32 %36, !prof !4
  br label %65

38:                                               ; preds = %2
  %39 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 7
  %40 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %39, align 8
  %41 = icmp eq %"class.blink::LayoutObject"* %40, null
  br i1 %41, label %58, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %40, i64 0, i32 5, i32 0
  %44 = bitcast %"class.blink::ComputedStyle"** %43 to %"class.blink::ComputedStyleBase"**
  %45 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %45, i64 0, i32 9
  %47 = bitcast [20 x i8]* %46 to i160*
  %48 = load i160, i160* %47, align 8
  %49 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %50 = bitcast %"class.blink::ComputedStyle"** %49 to %"class.blink::ComputedStyleBase"**
  %51 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %51, i64 0, i32 9
  %53 = bitcast [20 x i8]* %52 to i160*
  %54 = load i160, i160* %53, align 8
  %55 = xor i160 %54, %48
  %56 = and i160 %55, 15211807202738752817960438464512
  %57 = icmp eq i160 %56, 0
  br i1 %57, label %64, label %58

58:                                               ; preds = %42, %38
  %59 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %60 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %59, align 8
  %61 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %60, i64 92
  %62 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %61, align 8
  %63 = tail call zeroext i1 %62(%"class.blink::LayoutObject"* %3, i32 42) #15
  br i1 %63, label %64, label %65

64:                                               ; preds = %42, %58
  br label %65

65:                                               ; preds = %58, %11, %25, %64
  %66 = phi i64 [ 0, %64 ], [ 1, %25 ], [ 1, %11 ], [ 1, %58 ]
  %67 = phi i32 [ undef, %64 ], [ %37, %25 ], [ %24, %11 ], [ -64, %58 ]
  %68 = zext i32 %67 to i64
  %69 = shl nuw i64 %68, 32
  %70 = or i64 %69, %66
  ret i64 %70
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11LayoutBlock19InlineBlockBaselineENS_17LineDirectionModeE(%"class.blink::LayoutBlock"*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink11LayoutBlock48UseLogicalBottomMarginEdgeForInlineBlockBaselineEv(%"class.blink::LayoutBlock"* %0) #15
  br i1 %4, label %5, label %38

5:                                                ; preds = %2
  %6 = icmp eq i32 %1, 0
  %7 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 2, i32 1
  %9 = bitcast %"class.blink::LayoutSize"* %8 to i64*
  %10 = load i64, i64* %9, align 4
  br i1 %6, label %11, label %25

11:                                               ; preds = %5
  %12 = lshr i64 %10, 32
  %13 = trunc i64 %12 to i32
  %14 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %15 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %14, align 8
  %16 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %15, i64 128
  %17 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::LayoutBox"* %7) #15
  %19 = icmp slt i32 %18, 0
  %20 = select i1 %19, i32 -2147483648, i32 2147483647
  %21 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %13, i32 %18) #15
  %22 = extractvalue { i32, i1 } %21, 1
  %23 = extractvalue { i32, i1 } %21, 0
  %24 = select i1 %22, i32 %20, i32 %23, !prof !4
  br label %134

25:                                               ; preds = %5
  %26 = trunc i64 %10 to i32
  %27 = bitcast %"class.blink::LayoutBlock"* %0 to i32 (%"class.blink::LayoutBox"*)***
  %28 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %27, align 8
  %29 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %28, i64 129
  %30 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %29, align 8
  %31 = tail call i32 %30(%"class.blink::LayoutBox"* %7) #15
  %32 = icmp slt i32 %31, 0
  %33 = select i1 %32, i32 -2147483648, i32 2147483647
  %34 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %26, i32 %31) #15
  %35 = extractvalue { i32, i1 } %34, 1
  %36 = extractvalue { i32, i1 } %34, 0
  %37 = select i1 %35, i32 %33, i32 %36, !prof !4
  br label %134

38:                                               ; preds = %2
  %39 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 7
  %40 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %39, align 8
  %41 = icmp eq %"class.blink::LayoutObject"* %40, null
  br i1 %41, label %58, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %40, i64 0, i32 5, i32 0
  %44 = bitcast %"class.blink::ComputedStyle"** %43 to %"class.blink::ComputedStyleBase"**
  %45 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %45, i64 0, i32 9
  %47 = bitcast [20 x i8]* %46 to i160*
  %48 = load i160, i160* %47, align 8
  %49 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %50 = bitcast %"class.blink::ComputedStyle"** %49 to %"class.blink::ComputedStyleBase"**
  %51 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %51, i64 0, i32 9
  %53 = bitcast [20 x i8]* %52 to i160*
  %54 = load i160, i160* %53, align 8
  %55 = xor i160 %54, %48
  %56 = and i160 %55, 15211807202738752817960438464512
  %57 = icmp eq i160 %56, 0
  br i1 %57, label %64, label %58

58:                                               ; preds = %42, %38
  %59 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %60 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %59, align 8
  %61 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %60, i64 92
  %62 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %61, align 8
  %63 = tail call zeroext i1 %62(%"class.blink::LayoutObject"* %3, i32 42) #15
  br i1 %63, label %64, label %134

64:                                               ; preds = %58, %42
  %65 = bitcast %"class.blink::LayoutBlock"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %66 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %65, align 8
  %67 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %66, i64 13
  %68 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %67, align 8
  %69 = tail call %"class.blink::LayoutObjectChildList"* %68(%"class.blink::LayoutObject"* %3) #15
  %70 = icmp eq %"class.blink::LayoutObjectChildList"* %69, null
  br i1 %70, label %121, label %71

71:                                               ; preds = %64
  %72 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %69, i64 0, i32 1
  %73 = bitcast %"class.blink::LayoutObject"** %72 to %"class.blink::LayoutBox"**
  %74 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %73, align 8
  %75 = icmp eq %"class.blink::LayoutBox"* %74, null
  br i1 %75, label %121, label %76

76:                                               ; preds = %71, %94
  %77 = phi %"class.blink::LayoutBox"* [ %98, %94 ], [ %74, %71 ]
  %78 = phi i8 [ %95, %94 ], [ 0, %71 ]
  %79 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %77, i64 0, i32 0, i32 0, i32 4
  %80 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %79 to i96*
  %81 = load i96, i96* %80, align 4
  %82 = and i96 %81, 8388608
  %83 = icmp ne i96 %82, 0
  %84 = and i96 %81, 113336795588871485128704
  %85 = icmp eq i96 %84, 75557863725914323419136
  %86 = or i1 %85, %83
  br i1 %86, label %94, label %87

87:                                               ; preds = %76
  %88 = bitcast %"class.blink::LayoutBox"* %77 to i32 (%"class.blink::LayoutBox"*, i32)***
  %89 = load i32 (%"class.blink::LayoutBox"*, i32)**, i32 (%"class.blink::LayoutBox"*, i32)*** %88, align 8
  %90 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %89, i64 181
  %91 = load i32 (%"class.blink::LayoutBox"*, i32)*, i32 (%"class.blink::LayoutBox"*, i32)** %90, align 8
  %92 = tail call i32 %91(%"class.blink::LayoutBox"* nonnull %77, i32 %1) #15
  %93 = icmp eq i32 %92, -64
  br i1 %93, label %94, label %100

94:                                               ; preds = %87, %76
  %95 = phi i8 [ %78, %76 ], [ 1, %87 ]
  %96 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %77, i64 0, i32 0, i32 0, i32 8
  %97 = bitcast %"class.blink::LayoutObject"** %96 to %"class.blink::LayoutBox"**
  %98 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %97, align 8
  %99 = icmp eq %"class.blink::LayoutBox"* %98, null
  br i1 %99, label %118, label %76

100:                                              ; preds = %87
  %101 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %77, i64 0, i32 0, i32 0, i32 5, i32 0
  %102 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %101, align 8
  %103 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %102, i64 0, i32 0, i32 9
  %104 = bitcast [20 x i8]* %103 to i160*
  %105 = load i160, i160* %104, align 8
  %106 = and i160 %105, 15211807202738752817960438464512
  %107 = icmp eq i160 %106, 0
  %108 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %77, i64 0, i32 2, i32 0, i32 1, i32 0
  %109 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %77, i64 0, i32 2, i32 0, i32 0, i32 0
  %110 = select i1 %107, i32* %108, i32* %109
  %111 = load i32, i32* %110, align 4
  %112 = icmp slt i32 %92, 0
  %113 = select i1 %112, i32 -2147483648, i32 2147483647
  %114 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %111, i32 %92) #15
  %115 = extractvalue { i32, i1 } %114, 1
  %116 = extractvalue { i32, i1 } %114, 0
  %117 = select i1 %115, i32 %113, i32 %116, !prof !4
  br label %134

118:                                              ; preds = %94
  %119 = and i8 %95, 1
  %120 = icmp eq i8 %119, 0
  br i1 %120, label %121, label %134

121:                                              ; preds = %64, %71, %118
  %122 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutBlock"*)***
  %123 = load i1 (%"class.blink::LayoutBlock"*)**, i1 (%"class.blink::LayoutBlock"*)*** %122, align 8
  %124 = getelementptr inbounds i1 (%"class.blink::LayoutBlock"*)*, i1 (%"class.blink::LayoutBlock"*)** %123, i64 202
  %125 = load i1 (%"class.blink::LayoutBlock"*)*, i1 (%"class.blink::LayoutBlock"*)** %124, align 8
  %126 = tail call zeroext i1 %125(%"class.blink::LayoutBlock"* %0) #15
  br i1 %126, label %127, label %134

127:                                              ; preds = %121
  %128 = tail call i64 @_ZNK5blink11LayoutBlock20BaselineForEmptyLineENS_17LineDirectionModeE(%"class.blink::LayoutBlock"* %0, i32 %1) #15
  %129 = trunc i64 %128 to i8
  %130 = lshr i64 %128, 32
  %131 = trunc i64 %130 to i32
  %132 = icmp eq i8 %129, 0
  %133 = select i1 %132, i32 -64, i32 %131
  br label %134

134:                                              ; preds = %58, %11, %25, %118, %127, %121, %100
  %135 = phi i32 [ %117, %100 ], [ %133, %127 ], [ -64, %121 ], [ -64, %118 ], [ -64, %58 ], [ %24, %11 ], [ %37, %25 ]
  ret i32 %135
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutBlock"* @_ZNK5blink11LayoutBlock28EnclosingFirstLineStyleBlockEv(%"class.blink::LayoutBlock"* readonly) local_unnamed_addr #0 align 2 {
  br label %2

2:                                                ; preds = %74, %1
  %3 = phi %"class.blink::LayoutBlock"* [ %0, %1 ], [ %60, %74 ]
  %4 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %3, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 1
  %11 = icmp eq i160 %10, 0
  br i1 %11, label %12, label %76

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %3, i64 0, i32 0, i32 0, i32 0, i32 7
  %14 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %3, i64 0, i32 0, i32 0, i32 0, i32 4
  %16 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %15 to i96*
  %17 = load i96, i96* %16, align 4
  %18 = and i96 %17, 1073741824
  %19 = icmp eq i96 %18, 0
  br i1 %19, label %20, label %76

20:                                               ; preds = %12
  %21 = and i96 %17, 8388608
  %22 = icmp eq i96 %21, 0
  %23 = and i96 %17, 113336795588871485128704
  %24 = icmp ne i96 %23, 75557863725914323419136
  %25 = and i1 %22, %24
  %26 = icmp ne %"class.blink::LayoutObject"* %14, null
  %27 = and i1 %26, %25
  br i1 %27, label %28, label %76

28:                                               ; preds = %20
  %29 = bitcast %"class.blink::LayoutObject"* %14 to i1 (%"class.blink::LayoutObject"*)***
  %30 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %30, i64 24
  %32 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.blink::LayoutObject"* nonnull %14) #15
  br i1 %33, label %34, label %43

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %14, i64 0, i32 5, i32 0
  %36 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %35, align 8
  %37 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %36, i64 0, i32 0, i32 9
  %38 = bitcast [20 x i8]* %37 to i160*
  %39 = load i160, i160* %38, align 8
  %40 = lshr i160 %39, 32
  %41 = trunc i160 %40 to i32
  %42 = and i32 %41, 31
  switch i32 %42, label %43 [
    i32 21, label %54
    i32 12, label %54
    i32 3, label %54
    i32 2, label %54
    i32 1, label %54
    i32 13, label %54
  ]

43:                                               ; preds = %34, %28
  %44 = bitcast %"class.blink::LayoutObject"* %14 to i1 (%"class.blink::LayoutObject"*, i32)***
  %45 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %44, align 8
  %46 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %45, i64 92
  %47 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %46, align 8
  %48 = tail call zeroext i1 %47(%"class.blink::LayoutObject"* nonnull %14, i32 1) #15
  br i1 %48, label %54, label %49

49:                                               ; preds = %43
  %50 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %44, align 8
  %51 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %50, i64 92
  %52 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %51, align 8
  %53 = tail call zeroext i1 %52(%"class.blink::LayoutObject"* nonnull %14, i32 23) #15
  br i1 %53, label %54, label %76

54:                                               ; preds = %34, %34, %34, %34, %34, %34, %43, %49
  %55 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %29, align 8
  %56 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %55, i64 23
  %57 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %56, align 8
  %58 = tail call zeroext i1 %57(%"class.blink::LayoutObject"* nonnull %14) #15
  %59 = bitcast %"class.blink::LayoutObject"* %14 to %"class.blink::LayoutBlock"*
  %60 = select i1 %58, %"class.blink::LayoutBlock"* %59, %"class.blink::LayoutBlock"* null
  %61 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %60, i64 0, i32 1, i32 0
  br label %62

62:                                               ; preds = %62, %54
  %63 = phi %"class.blink::LayoutObject"** [ %61, %54 ], [ %73, %62 ]
  %64 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %63, align 8
  %65 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %64, i64 0, i32 4
  %66 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %65 to i96*
  %67 = load i96, i96* %66, align 4
  %68 = and i96 %67, 8388608
  %69 = icmp ne i96 %68, 0
  %70 = and i96 %67, 113336795588871485128704
  %71 = icmp eq i96 %70, 75557863725914323419136
  %72 = or i1 %71, %69
  %73 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %64, i64 0, i32 9
  br i1 %72, label %62, label %74

74:                                               ; preds = %62
  %75 = icmp eq %"class.blink::LayoutObject"* %64, %4
  br i1 %75, label %2, label %76

76:                                               ; preds = %2, %12, %49, %20, %74
  %77 = phi %"class.blink::LayoutBlock"* [ null, %12 ], [ null, %49 ], [ null, %20 ], [ null, %74 ], [ %3, %2 ]
  ret %"class.blink::LayoutBlock"* %77
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZNK5blink11LayoutBlock14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE(%"class.blink::LayoutBlock"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1, i32 0
  %6 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %5, align 8
  %7 = icmp eq %"class.blink::LayoutObject"* %6, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 4
  %10 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %9 to i96*
  %11 = load i96, i96* %10, align 4
  %12 = and i96 %11, 16777216
  %13 = icmp eq i96 %12, 0
  br i1 %13, label %14, label %50

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %6, i64 0, i32 6, i32 0, i32 0
  %16 = load %"class.blink::Node"*, %"class.blink::Node"** %15, align 8
  %17 = icmp eq %"class.blink::Node"* %16, null
  br i1 %17, label %50, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Node"* %16 to i8 (%"class.blink::Node"*)***
  %20 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %19, align 8
  %21 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %20, i64 34
  %22 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %21, align 8
  %23 = tail call zeroext i8 %22(%"class.blink::Node"* nonnull %16) #15
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %50, label %25

25:                                               ; preds = %18, %4
  %26 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %27 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %26 to i96*
  %28 = load i96, i96* %27, align 4
  %29 = and i96 %28, 1207959552
  %30 = icmp eq i96 %29, 1207959552
  br i1 %30, label %31, label %55

31:                                               ; preds = %25
  %32 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 2, i32 1
  %33 = bitcast %"class.blink::LayoutSize"* %32 to i64*
  %34 = load i64, i64* %33, align 4
  %35 = trunc i64 %34 to i32
  %36 = lshr i64 %34, 32
  %37 = trunc i64 %36 to i32
  %38 = icmp sgt i32 %35, 0
  %39 = icmp sgt i32 %37, 0
  %40 = and i1 %38, %39
  %41 = and i96 %28, 16777216
  %42 = icmp eq i96 %41, 0
  %43 = and i1 %42, %40
  br i1 %43, label %44, label %55

44:                                               ; preds = %31
  %45 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %46 = load %"class.blink::Node"*, %"class.blink::Node"** %45, align 8
  %47 = icmp eq %"class.blink::Node"* %46, null
  br i1 %47, label %55, label %48

48:                                               ; preds = %44
  %49 = tail call zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* nonnull dereferenceable(64) %46) #15
  br i1 %49, label %50, label %55

50:                                               ; preds = %18, %8, %14, %48
  %51 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %52 = tail call { i64, i64 } @_ZNK5blink9LayoutBox14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE(%"class.blink::LayoutBox"* %51, %"class.blink::InlineBox"* %1, i32 %2, %"class.blink::LayoutUnit"* %3) #15
  %53 = extractvalue { i64, i64 } %52, 0
  %54 = extractvalue { i64, i64 } %52, 1
  br label %129

55:                                               ; preds = %25, %31, %44, %48
  %56 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 2, i32 1
  %58 = bitcast %"class.blink::LayoutSize"* %57 to i64*
  %59 = load i64, i64* %58, align 4
  %60 = trunc i64 %59 to i32
  %61 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %62 = bitcast %"class.blink::ComputedStyle"** %61 to %"class.blink::ComputedStyleBase"**
  %63 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %62, align 8
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %63, i64 0, i32 1, i32 0, i32 0
  %65 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %65, i64 0, i32 12, i32 2
  %67 = load i8, i8* %66, align 1
  switch i8 %67, label %76 [
    i8 8, label %68
    i8 1, label %68
  ]

68:                                               ; preds = %55, %55
  %69 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %70 = tail call i32 @_ZNK5blink9LayoutBox19ContentLogicalWidthEv(%"class.blink::LayoutBox"* %69) #15
  %71 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %62, align 8
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %71, i64 0, i32 1, i32 0, i32 0
  %73 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %73, i64 0, i32 12, i32 2
  %75 = load i8, i8* %74, align 1
  br label %76

76:                                               ; preds = %68, %55
  %77 = phi i8 [ %75, %68 ], [ %67, %55 ]
  %78 = phi %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* [ %73, %68 ], [ %65, %55 ]
  %79 = phi i32 [ %70, %68 ], [ 0, %55 ]
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %78, i64 0, i32 12
  %81 = icmp eq i8 %77, 2
  br i1 %81, label %82, label %103, !prof !3

82:                                               ; preds = %76
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %78, i64 0, i32 12, i32 3
  %84 = load i8, i8* %83, align 2, !range !5
  %85 = icmp eq i8 %84, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %82
  %87 = bitcast %"class.blink::Length"* %80 to float*
  %88 = load float, float* %87, align 4
  br label %93

89:                                               ; preds = %82
  %90 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %80, i64 0, i32 0, i32 0
  %91 = load i32, i32* %90, align 4
  %92 = sitofp i32 %91 to float
  br label %93

93:                                               ; preds = %89, %86
  %94 = phi float [ %88, %86 ], [ %92, %89 ]
  %95 = fmul float %94, 6.400000e+01
  %96 = fcmp ult float %95, 0xC1E0000000000000
  %97 = fcmp ugt float %95, 0x41DFFFFFE0000000
  %98 = fcmp ogt float %95, 0xC1E0000000000000
  %99 = select i1 %98, float %95, float 0xC1E0000000000000
  %100 = fptosi float %99 to i32
  %101 = select i1 %96, i32 0, i32 2147483647
  %102 = select i1 %97, i32 %101, i32 %100
  br label %105

103:                                              ; preds = %76
  %104 = tail call i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8) %80, i32 %79) #15
  br label %105

105:                                              ; preds = %93, %103
  %106 = phi i32 [ %102, %93 ], [ %104, %103 ]
  %107 = tail call { i64, i64 } @_ZNK5blink20LayoutBoxModelObject29LocalCaretRectForEmptyElementENS_10LayoutUnitES1_(%"class.blink::LayoutBoxModelObject"* %56, i32 %60, i32 %106) #15
  %108 = extractvalue { i64, i64 } %107, 0
  %109 = extractvalue { i64, i64 } %107, 1
  %110 = icmp eq %"class.blink::LayoutUnit"* %3, null
  br i1 %110, label %129, label %111

111:                                              ; preds = %105
  %112 = trunc i64 %108 to i32
  %113 = load i64, i64* %58, align 4
  %114 = trunc i64 %113 to i32
  %115 = trunc i64 %109 to i32
  %116 = icmp slt i32 %115, 0
  %117 = select i1 %116, i32 -2147483648, i32 2147483647
  %118 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %112, i32 %115) #15
  %119 = extractvalue { i32, i1 } %118, 1
  %120 = extractvalue { i32, i1 } %118, 0
  %121 = select i1 %119, i32 %117, i32 %120, !prof !4
  %122 = icmp sgt i32 %121, -1
  %123 = select i1 %122, i32 -2147483648, i32 2147483647
  %124 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %114, i32 %121) #15
  %125 = extractvalue { i32, i1 } %124, 1
  %126 = extractvalue { i32, i1 } %124, 0
  %127 = select i1 %125, i32 %123, i32 %126, !prof !4
  %128 = getelementptr inbounds %"class.blink::LayoutUnit", %"class.blink::LayoutUnit"* %3, i64 0, i32 0
  store i32 %127, i32* %128, align 4
  br label %129

129:                                              ; preds = %111, %105, %50
  %130 = phi i64 [ %53, %50 ], [ %108, %105 ], [ %108, %111 ]
  %131 = phi i64 [ %54, %50 ], [ %109, %105 ], [ %109, %111 ]
  %132 = insertvalue { i64, i64 } undef, i64 %130, 0
  %133 = insertvalue { i64, i64 } %132, i64 %131, 1
  ret { i64, i64 } %133
}

declare { i64, i64 } @_ZNK5blink9LayoutBox14LocalCaretRectEPKNS_9InlineBoxEiPNS_10LayoutUnitE(%"class.blink::LayoutBox"*, %"class.blink::InlineBox"*, i32, %"class.blink::LayoutUnit"*) unnamed_addr #3

declare { i64, i64 } @_ZNK5blink20LayoutBoxModelObject29LocalCaretRectForEmptyElementENS_10LayoutUnitES1_(%"class.blink::LayoutBoxModelObject"*, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink11LayoutBlock15AddOutlineRectsERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutBlock"*, %"class.WTF::Vector.3445"* dereferenceable(16), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::LayoutBlock"*, align 8
  %6 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %7 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %6 to i96*
  %8 = load i96, i96* %7, align 4
  %9 = and i96 %8, 16777216
  %10 = icmp eq i96 %9, 0
  br i1 %10, label %11, label %75

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 2, i32 1
  %13 = bitcast %"class.blink::LayoutSize"* %12 to i64*
  %14 = load i64, i64* %13, align 4
  %15 = trunc i64 %14 to i32
  %16 = lshr i64 %14, 32
  %17 = trunc i64 %16 to i32
  %18 = getelementptr inbounds %"class.WTF::Vector.3445", %"class.WTF::Vector.3445"* %1, i64 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::Vector.3445", %"class.WTF::Vector.3445"* %1, i64 0, i32 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %19, %21
  br i1 %22, label %23, label %62, !prof !4

23:                                               ; preds = %11
  %24 = add i32 %19, 1
  %25 = lshr i32 %19, 2
  %26 = add i32 %24, %25
  %27 = icmp ugt i32 %26, 4
  %28 = select i1 %27, i32 %26, i32 4
  %29 = icmp ugt i32 %28, %24
  %30 = select i1 %29, i32 %28, i32 %24
  %31 = icmp ult i32 %19, %30
  br i1 %31, label %32, label %62, !prof !3

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.WTF::Vector.3445", %"class.WTF::Vector.3445"* %1, i64 0, i32 0, i32 0, i32 0
  %34 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %33, align 8
  %35 = icmp eq %"struct.blink::PhysicalRect"* %34, null
  %36 = zext i32 %30 to i64
  %37 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12PhysicalRectEEEmm(i64 %36) #15
  %38 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %37, i8* getelementptr inbounds ([67 x i8], [67 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink12PhysicalRectEEEPKcv, i64 0, i64 0)) #15
  br i1 %35, label %39, label %44

39:                                               ; preds = %32
  %40 = ptrtoint i8* %38 to i64
  %41 = bitcast %"class.WTF::Vector.3445"* %1 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %37, 4
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %20, align 8
  br label %62

44:                                               ; preds = %32
  %45 = lshr i64 %37, 4
  %46 = ptrtoint i8* %38 to i64
  %47 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %33, align 8
  %48 = icmp ne i8* %38, null
  %49 = icmp ne %"struct.blink::PhysicalRect"* %47, null
  %50 = and i1 %48, %49
  %51 = bitcast %"struct.blink::PhysicalRect"* %47 to i8*
  br i1 %50, label %52, label %58, !prof !3

52:                                               ; preds = %44
  %53 = load i32, i32* %18, align 4
  %54 = zext i32 %53 to i64
  %55 = shl nuw nsw i64 %54, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %38, i8* nonnull align 4 %51, i64 %55, i1 false) #15
  %56 = bitcast %"class.WTF::Vector.3445"* %1 to i8**
  %57 = load i8*, i8** %56, align 8
  br label %58

58:                                               ; preds = %52, %44
  %59 = phi i8* [ %57, %52 ], [ %51, %44 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %59) #15
  %60 = bitcast %"class.WTF::Vector.3445"* %1 to i64*
  store atomic i64 %46, i64* %60 monotonic, align 8
  %61 = trunc i64 %45 to i32
  store i32 %61, i32* %20, align 8
  br label %62

62:                                               ; preds = %11, %23, %39, %58
  %63 = getelementptr inbounds %"class.WTF::Vector.3445", %"class.WTF::Vector.3445"* %1, i64 0, i32 0, i32 0, i32 0
  %64 = load %"struct.blink::PhysicalRect"*, %"struct.blink::PhysicalRect"** %63, align 8
  %65 = load i32, i32* %18, align 4
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %64, i64 %66
  %68 = bitcast %"struct.blink::PhysicalOffset"* %2 to i64*
  %69 = bitcast %"struct.blink::PhysicalRect"* %67 to i64*
  %70 = load i64, i64* %68, align 4
  store i64 %70, i64* %69, align 4
  %71 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %64, i64 %66, i32 1, i32 0, i32 0
  store i32 %15, i32* %71, align 4
  %72 = getelementptr inbounds %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect"* %64, i64 %66, i32 1, i32 1, i32 0
  store i32 %17, i32* %72, align 4
  %73 = load i32, i32* %18, align 4
  %74 = add i32 %73, 1
  store i32 %74, i32* %18, align 4
  br label %75

75:                                               ; preds = %4, %62
  %76 = icmp eq i32 %3, 1
  br i1 %76, label %77, label %112

77:                                               ; preds = %75
  %78 = load i96, i96* %7, align 4
  %79 = and i96 %78, 8589934592
  %80 = icmp eq i96 %79, 0
  br i1 %80, label %81, label %112

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %83 = tail call zeroext i1 @_ZNK5blink9LayoutBox14HasControlClipEv(%"class.blink::LayoutBox"* %82) #15
  br i1 %83, label %112, label %84

84:                                               ; preds = %81
  %85 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink20LayoutBoxModelObject32AddOutlineRectsForNormalChildrenERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutBoxModelObject"* %85, %"class.WTF::Vector.3445"* dereferenceable(16) %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2, i32 1) #15
  %86 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 2
  %87 = load i16, i16* %86, align 8
  %88 = trunc i16 %87 to i8
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %90, label %112, !prof !4

90:                                               ; preds = %84
  %91 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map to i8*) acquire, align 8
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %93, label %97, !prof !2

93:                                               ; preds = %90
  %94 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %97, label %96

96:                                               ; preds = %93
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  br label %97

97:                                               ; preds = %90, %93, %96
  %98 = bitcast %"class.blink::LayoutBlock"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #15
  store %"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBlock"** %5, align 8
  %99 = call %"class.WTF::ListHashSet.3211"* @_ZNK3WTF7HashMapIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS8_EENS_28MallocedListHashSetAllocatorIS9_Lj16EEEEENS5_14default_deleteISE_EEEENSA_IS3_EENS_10HashTraitsIS4_EENSJ_ISH_EENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.3191"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map to %"class.WTF::HashMap.3191"*), %"class.blink::LayoutBlock"** nonnull dereferenceable(8) %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #15
  %100 = icmp eq %"class.WTF::ListHashSet.3211"* %99, null
  br i1 %100, label %112, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %99, i64 0, i32 1
  %103 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %102, align 8
  %104 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %103, null
  br i1 %104, label %112, label %105

105:                                              ; preds = %101, %105
  %106 = phi %"class.WTF::MallocedListHashSetNode.3217"* [ %110, %105 ], [ %103, %101 ]
  %107 = bitcast %"class.WTF::MallocedListHashSetNode.3217"* %106 to %"class.blink::LayoutObject"**
  %108 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %107, align 8
  call void @_ZNK5blink20LayoutBoxModelObject28AddOutlineRectsForDescendantERKNS_12LayoutObjectERN3WTF6VectorINS_12PhysicalRectELj0ENS4_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutBoxModelObject"* %85, %"class.blink::LayoutObject"* dereferenceable(88) %108, %"class.WTF::Vector.3445"* dereferenceable(16) %1, %"struct.blink::PhysicalOffset"* dereferenceable(8) %2, i32 1) #15
  %109 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %106, i64 0, i32 2
  %110 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %109, align 8
  %111 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %110, null
  br i1 %111, label %112, label %105

112:                                              ; preds = %105, %101, %77, %84, %97, %81, %75
  ret void
}

declare void @_ZNK5blink20LayoutBoxModelObject32AddOutlineRectsForNormalChildrenERN3WTF6VectorINS_12PhysicalRectELj0ENS1_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.3445"* dereferenceable(16), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) local_unnamed_addr #3

declare void @_ZNK5blink20LayoutBoxModelObject28AddOutlineRectsForDescendantERKNS_12LayoutObjectERN3WTF6VectorINS_12PhysicalRectELj0ENS4_18PartitionAllocatorEEERKNS_14PhysicalOffsetENS_13NGOutlineTypeE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"* dereferenceable(88), %"class.WTF::Vector.3445"* dereferenceable(16), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutBox"* @_ZNK5blink11LayoutBlock32CreateAnonymousBoxWithSameTypeAsEPKNS_12LayoutObjectE(%"class.blink::LayoutBlock"* nocapture readonly, %"class.blink::LayoutObject"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %4 = bitcast %"class.blink::ComputedStyle"** %3 to %"class.blink::ComputedStyleBase"**
  %5 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %5, i64 0, i32 9
  %7 = bitcast [20 x i8]* %6 to i160*
  %8 = load i160, i160* %7, align 8
  %9 = lshr i160 %8, 32
  %10 = trunc i160 %9 to i32
  %11 = and i32 %10, 31
  %12 = tail call %"class.blink::LayoutBlock"* @_ZN5blink11LayoutBlock35CreateAnonymousWithParentAndDisplayEPKNS_12LayoutObjectENS_8EDisplayE(%"class.blink::LayoutObject"* %1, i32 %11)
  %13 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %12, i64 0, i32 0
  ret %"class.blink::LayoutBox"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::LayoutBlock"* @_ZN5blink11LayoutBlock35CreateAnonymousWithParentAndDisplayEPKNS_12LayoutObjectENS_8EDisplayE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #0 align 2 {
  %3 = add i32 %1, -16
  %4 = icmp ult i32 %3, 6
  br i1 %4, label %5, label %9

5:                                                ; preds = %2
  %6 = sext i32 %3 to i64
  %7 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZN5blink11LayoutBlock35CreateAnonymousWithParentAndDisplayEPKNS_12LayoutObjectENS_8EDisplayE, i64 0, i64 %6
  %8 = load i32, i32* %7, align 4
  br label %9

9:                                                ; preds = %2, %5
  %10 = phi i32 [ %8, %5 ], [ 1, %2 ]
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %14, label %21

14:                                               ; preds = %9, %14
  %15 = phi %"class.blink::LayoutObject"* [ %17, %14 ], [ %0, %9 ]
  %16 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %15, i64 0, i32 7
  %17 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %17, i64 0, i32 6, i32 0, i32 0
  %19 = load %"class.blink::Node"*, %"class.blink::Node"** %18, align 8
  %20 = icmp eq %"class.blink::Node"* %19, null
  br i1 %20, label %14, label %21

21:                                               ; preds = %14, %9
  %22 = phi %"class.blink::Node"* [ %12, %9 ], [ %19, %14 ]
  %23 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %22, i64 0, i32 3, i32 0, i32 0
  %24 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %23, align 8
  %25 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %24, i64 0, i32 2, i32 0, i32 0
  %26 = load %"class.blink::Document"*, %"class.blink::Document"** %25, align 8
  %27 = tail call dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"* %26) #15
  %28 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 5, i32 0
  %29 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %30 = tail call %"class.blink::ComputedStyle"* @_ZN5blink13StyleResolver31CreateAnonymousStyleWithDisplayERKNS_13ComputedStyleENS_8EDisplayE(%"class.blink::StyleResolver"* %27, %"class.blink::ComputedStyle"* dereferenceable(104) %29, i32 %10) #15
  %31 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 4
  %32 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %31 to i96*
  %33 = load i96, i96* %32, align 4
  %34 = lshr i96 %33, 29
  %35 = trunc i96 %34 to i32
  %36 = and i32 %35, 1
  %37 = bitcast %"class.blink::LayoutObject"* %0 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)***
  %38 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)** %38, i64 89
  %40 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*)** %39, align 8
  tail call void %40(%"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"* null, %"class.blink::ComputedStyle"* dereferenceable(104) %30) #15
  %41 = icmp eq i32 %10, 16
  br i1 %41, label %42, label %60

42:                                               ; preds = %21
  %43 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %44 = icmp eq %"class.blink::Node"* %43, null
  br i1 %44, label %45, label %52

45:                                               ; preds = %42, %45
  %46 = phi %"class.blink::LayoutObject"* [ %48, %45 ], [ %0, %42 ]
  %47 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %46, i64 0, i32 7
  %48 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %48, i64 0, i32 6, i32 0, i32 0
  %50 = load %"class.blink::Node"*, %"class.blink::Node"** %49, align 8
  %51 = icmp eq %"class.blink::Node"* %50, null
  br i1 %51, label %45, label %52

52:                                               ; preds = %45, %42
  %53 = phi %"class.blink::Node"* [ %43, %42 ], [ %50, %45 ]
  %54 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %53, i64 0, i32 3, i32 0, i32 0
  %55 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %55, i64 0, i32 2, i32 0, i32 0
  %57 = load %"class.blink::Document"*, %"class.blink::Document"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %57, i64 0, i32 0, i32 0
  %59 = tail call %"class.blink::LayoutBlock"* @_ZN5blink19LayoutObjectFactory17CreateFlexibleBoxERNS_4NodeERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Node"* dereferenceable(64) %58, %"class.blink::ComputedStyle"* dereferenceable(104) %30, i32 %36) #15
  br label %83

60:                                               ; preds = %21
  %61 = icmp eq i32 %10, 18
  %62 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %63 = icmp eq %"class.blink::Node"* %62, null
  br i1 %63, label %64, label %71

64:                                               ; preds = %60, %64
  %65 = phi %"class.blink::LayoutObject"* [ %67, %64 ], [ %0, %60 ]
  %66 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %65, i64 0, i32 7
  %67 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %67, i64 0, i32 6, i32 0, i32 0
  %69 = load %"class.blink::Node"*, %"class.blink::Node"** %68, align 8
  %70 = icmp eq %"class.blink::Node"* %69, null
  br i1 %70, label %64, label %71

71:                                               ; preds = %64, %60
  %72 = phi %"class.blink::Node"* [ %62, %60 ], [ %69, %64 ]
  %73 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %72, i64 0, i32 3, i32 0, i32 0
  %74 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %73, align 8
  %75 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %74, i64 0, i32 2, i32 0, i32 0
  %76 = load %"class.blink::Document"*, %"class.blink::Document"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %76, i64 0, i32 0, i32 0
  br i1 %61, label %78, label %80

78:                                               ; preds = %71
  %79 = tail call %"class.blink::LayoutBlock"* @_ZN5blink19LayoutObjectFactory10CreateGridERNS_4NodeERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Node"* dereferenceable(64) %77, %"class.blink::ComputedStyle"* dereferenceable(104) %30, i32 %36) #15
  br label %83

80:                                               ; preds = %71
  %81 = tail call %"class.blink::LayoutBlockFlow"* @_ZN5blink19LayoutObjectFactory15CreateBlockFlowERNS_4NodeERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Node"* dereferenceable(64) %77, %"class.blink::ComputedStyle"* dereferenceable(104) %30, i32 %36) #15
  %82 = bitcast %"class.blink::LayoutBlockFlow"* %81 to %"class.blink::LayoutBlock"*
  br label %83

83:                                               ; preds = %78, %80, %52
  %84 = phi %"class.blink::LayoutBlock"* [ %59, %52 ], [ %79, %78 ], [ %82, %80 ]
  %85 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %84, i64 0, i32 0, i32 0, i32 0
  %86 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %87 = icmp eq %"class.blink::Node"* %86, null
  br i1 %87, label %88, label %95

88:                                               ; preds = %83, %88
  %89 = phi %"class.blink::LayoutObject"* [ %91, %88 ], [ %0, %83 ]
  %90 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %89, i64 0, i32 7
  %91 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %90, align 8
  %92 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %91, i64 0, i32 6, i32 0, i32 0
  %93 = load %"class.blink::Node"*, %"class.blink::Node"** %92, align 8
  %94 = icmp eq %"class.blink::Node"* %93, null
  br i1 %94, label %88, label %95

95:                                               ; preds = %88, %83
  %96 = phi %"class.blink::Node"* [ %86, %83 ], [ %93, %88 ]
  %97 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %96, i64 0, i32 3, i32 0, i32 0
  %98 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %97, align 8
  %99 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %98, i64 0, i32 2, i32 0, i32 0
  %100 = load %"class.blink::Document"*, %"class.blink::Document"** %99, align 8
  %101 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %100, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %84, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  store %"class.blink::Node"* %101, %"class.blink::Node"** %102, align 8
  tail call void @_ZN5blink12LayoutObject8SetStyleE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"* %85, %"class.blink::ComputedStyle"* %30, i32 1) #15
  ret %"class.blink::LayoutBlock"* %84
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock26PaginatedContentWasLaidOutENS_10LayoutUnitE(%"class.blink::LayoutBlock"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %4 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %3 to i96*
  %5 = load i96, i96* %4, align 4
  %6 = and i96 %5, 1099511627776
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = tail call %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"* %9) #15
  %11 = icmp eq %"class.blink::LayoutFlowThread"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %14 = tail call i32 @_ZNK5blink9LayoutBox31OffsetFromLogicalTopOfFirstPageEv(%"class.blink::LayoutBox"* %13) #15
  %15 = icmp slt i32 %1, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %1) #15
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !4
  %21 = bitcast %"class.blink::LayoutFlowThread"* %10 to void (%"class.blink::LayoutFlowThread"*, i32)***
  %22 = load void (%"class.blink::LayoutFlowThread"*, i32)**, void (%"class.blink::LayoutFlowThread"*, i32)*** %21, align 8
  %23 = getelementptr inbounds void (%"class.blink::LayoutFlowThread"*, i32)*, void (%"class.blink::LayoutFlowThread"*, i32)** %22, i64 228
  %24 = load void (%"class.blink::LayoutFlowThread"*, i32)*, void (%"class.blink::LayoutFlowThread"*, i32)** %23, align 8
  tail call void %24(%"class.blink::LayoutFlowThread"* nonnull %10, i32 %20) #15
  br label %25

25:                                               ; preds = %2, %8, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11LayoutBlock29CollapsedMarginBeforeForChildERKNS_9LayoutBoxE(%"class.blink::LayoutBlock"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 7
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutObject"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 0, i32 5, i32 0
  %8 = bitcast %"class.blink::ComputedStyle"** %7 to %"class.blink::ComputedStyleBase"**
  %9 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %9, i64 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %14 = bitcast %"class.blink::ComputedStyle"** %13 to %"class.blink::ComputedStyleBase"**
  %15 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %15, i64 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8
  %19 = xor i160 %18, %12
  %20 = and i160 %19, 15211807202738752817960438464512
  %21 = icmp eq i160 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %6
  %23 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*)***
  %24 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %23, align 8
  %25 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %24, i64 155
  %26 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %25, align 8
  %27 = tail call i32 %26(%"class.blink::LayoutBox"* %1) #15
  br label %84

28:                                               ; preds = %6, %2
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %30 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %29 to i96*
  %31 = load i96, i96* %30, align 4
  %32 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %33 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %32 to i96*
  %34 = load i96, i96* %33, align 4
  %35 = xor i96 %34, %31
  %36 = trunc i96 %35 to i32
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %28
  %39 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*)***
  %40 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %39, align 8
  %41 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %40, i64 156
  %42 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %41, align 8
  %43 = tail call i32 %42(%"class.blink::LayoutBox"* %1) #15
  br label %84

44:                                               ; preds = %28
  %45 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %46 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %47 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %46, align 8
  %48 = icmp eq %"class.blink::ComputedStyle"* %47, null
  %49 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %50 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %49, align 8
  %51 = select i1 %48, %"class.blink::ComputedStyle"* %50, %"class.blink::ComputedStyle"* %47
  %52 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %51, i64 0, i32 0, i32 9
  %53 = bitcast [20 x i8]* %52 to i160*
  %54 = load i160, i160* %53, align 8, !noalias !58
  %55 = lshr i160 %54, 102
  %56 = trunc i160 %55 to i8
  %57 = and i8 %56, 3
  %58 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  switch i8 %57, label %59 [
    i8 0, label %68
    i8 1, label %60
  ]

59:                                               ; preds = %44
  br label %60

60:                                               ; preds = %59, %44
  %61 = phi { i64, i64 } [ { i64 1033, i64 0 }, %59 ], [ { i64 1041, i64 0 }, %44 ]
  %62 = extractvalue { i64, i64 } %61, 0
  %63 = extractvalue { i64, i64 } %61, 1
  %64 = getelementptr inbounds i8, i8* %58, i64 %63
  %65 = bitcast i8* %64 to %"class.blink::LayoutBoxModelObject"*
  %66 = and i64 %62, 1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %78, label %68

68:                                               ; preds = %60, %44
  %69 = phi %"class.blink::LayoutBoxModelObject"* [ %65, %60 ], [ %45, %44 ]
  %70 = phi i8* [ %64, %60 ], [ %58, %44 ]
  %71 = phi i64 [ %62, %60 ], [ 1017, %44 ]
  %72 = bitcast i8* %70 to i8**
  %73 = load i8*, i8** %72, align 8
  %74 = add i64 %71, -1
  %75 = getelementptr i8, i8* %73, i64 %74
  %76 = bitcast i8* %75 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %77 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %76, align 8
  br label %80

78:                                               ; preds = %60
  %79 = inttoptr i64 %62 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %80

80:                                               ; preds = %68, %78
  %81 = phi %"class.blink::LayoutBoxModelObject"* [ %69, %68 ], [ %65, %78 ]
  %82 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %77, %68 ], [ %79, %78 ]
  %83 = tail call i32 %82(%"class.blink::LayoutBoxModelObject"* %81) #15
  br label %84

84:                                               ; preds = %80, %38, %22
  %85 = phi i32 [ %43, %38 ], [ %83, %80 ], [ %27, %22 ]
  ret i32 %85
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11LayoutBlock28CollapsedMarginAfterForChildERKNS_9LayoutBoxE(%"class.blink::LayoutBlock"* nocapture readonly, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 7
  %4 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %3, align 8
  %5 = icmp eq %"class.blink::LayoutObject"* %4, null
  br i1 %5, label %28, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %4, i64 0, i32 5, i32 0
  %8 = bitcast %"class.blink::ComputedStyle"** %7 to %"class.blink::ComputedStyleBase"**
  %9 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %9, i64 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %14 = bitcast %"class.blink::ComputedStyle"** %13 to %"class.blink::ComputedStyleBase"**
  %15 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %15, i64 0, i32 9
  %17 = bitcast [20 x i8]* %16 to i160*
  %18 = load i160, i160* %17, align 8
  %19 = xor i160 %18, %12
  %20 = and i160 %19, 15211807202738752817960438464512
  %21 = icmp eq i160 %20, 0
  br i1 %21, label %22, label %28

22:                                               ; preds = %6
  %23 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*)***
  %24 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %23, align 8
  %25 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %24, i64 156
  %26 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %25, align 8
  %27 = tail call i32 %26(%"class.blink::LayoutBox"* %1) #15
  br label %84

28:                                               ; preds = %6, %2
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %30 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %29 to i96*
  %31 = load i96, i96* %30, align 4
  %32 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %33 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %32 to i96*
  %34 = load i96, i96* %33, align 4
  %35 = xor i96 %34, %31
  %36 = trunc i96 %35 to i32
  %37 = icmp slt i32 %36, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %28
  %39 = bitcast %"class.blink::LayoutBox"* %1 to i32 (%"class.blink::LayoutBox"*)***
  %40 = load i32 (%"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutBox"*)*** %39, align 8
  %41 = getelementptr inbounds i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %40, i64 155
  %42 = load i32 (%"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutBox"*)** %41, align 8
  %43 = tail call i32 %42(%"class.blink::LayoutBox"* %1) #15
  br label %84

44:                                               ; preds = %28
  %45 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0
  %46 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %47 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %46, align 8
  %48 = icmp eq %"class.blink::ComputedStyle"* %47, null
  %49 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %50 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %49, align 8
  %51 = select i1 %48, %"class.blink::ComputedStyle"* %50, %"class.blink::ComputedStyle"* %47
  %52 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %51, i64 0, i32 0, i32 9
  %53 = bitcast [20 x i8]* %52 to i160*
  %54 = load i160, i160* %53, align 8, !noalias !61
  %55 = lshr i160 %54, 102
  %56 = trunc i160 %55 to i8
  %57 = and i8 %56, 3
  %58 = bitcast %"class.blink::LayoutBox"* %1 to i8*
  switch i8 %57, label %59 [
    i8 0, label %68
    i8 1, label %60
  ]

59:                                               ; preds = %44
  br label %60

60:                                               ; preds = %59, %44
  %61 = phi { i64, i64 } [ { i64 1041, i64 0 }, %59 ], [ { i64 1033, i64 0 }, %44 ]
  %62 = extractvalue { i64, i64 } %61, 0
  %63 = extractvalue { i64, i64 } %61, 1
  %64 = getelementptr inbounds i8, i8* %58, i64 %63
  %65 = bitcast i8* %64 to %"class.blink::LayoutBoxModelObject"*
  %66 = and i64 %62, 1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %78, label %68

68:                                               ; preds = %60, %44
  %69 = phi %"class.blink::LayoutBoxModelObject"* [ %65, %60 ], [ %45, %44 ]
  %70 = phi i8* [ %64, %60 ], [ %58, %44 ]
  %71 = phi i64 [ %62, %60 ], [ 1025, %44 ]
  %72 = bitcast i8* %70 to i8**
  %73 = load i8*, i8** %72, align 8
  %74 = add i64 %71, -1
  %75 = getelementptr i8, i8* %73, i64 %74
  %76 = bitcast i8* %75 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %77 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %76, align 8
  br label %80

78:                                               ; preds = %60
  %79 = inttoptr i64 %62 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %80

80:                                               ; preds = %68, %78
  %81 = phi %"class.blink::LayoutBoxModelObject"* [ %69, %68 ], [ %65, %78 ]
  %82 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %77, %68 ], [ %79, %78 ]
  %83 = tail call i32 %82(%"class.blink::LayoutBoxModelObject"* %81) #15
  br label %84

84:                                               ; preds = %80, %38, %22
  %85 = phi i32 [ %43, %38 ], [ %83, %80 ], [ %27, %22 ]
  ret i32 %85
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11LayoutBlock20HasMarginBeforeQuirkEPKNS_9LayoutBoxE(%"class.blink::LayoutBlock"* nocapture readonly, %"class.blink::LayoutBox"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = icmp eq %"class.blink::LayoutBox"* %1, null
  br i1 %9, label %19, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %13 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %13, i64 23
  %15 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::LayoutObject"* %11) #15
  %17 = bitcast %"class.blink::LayoutBox"* %1 to %"class.blink::LayoutBlock"*
  %18 = select i1 %16, %"class.blink::LayoutBlock"* %17, %"class.blink::LayoutBlock"* null
  br label %19

19:                                               ; preds = %2, %10
  %20 = phi %"class.blink::LayoutBlock"* [ %18, %10 ], [ null, %2 ]
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 7
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = icmp eq %"class.blink::LayoutObject"* %22, null
  br i1 %23, label %70, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %22, i64 0, i32 5, i32 0
  %26 = bitcast %"class.blink::ComputedStyle"** %25 to %"class.blink::ComputedStyleBase"**
  %27 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %27, i64 0, i32 9
  %29 = bitcast [20 x i8]* %28 to i160*
  %30 = load i160, i160* %29, align 8
  %31 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %32 = bitcast %"class.blink::ComputedStyle"** %31 to %"class.blink::ComputedStyleBase"**
  %33 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %33, i64 0, i32 9
  %35 = bitcast [20 x i8]* %34 to i160*
  %36 = load i160, i160* %35, align 8
  %37 = xor i160 %36, %30
  %38 = and i160 %37, 15211807202738752817960438464512
  %39 = icmp eq i160 %38, 0
  br i1 %39, label %40, label %70

40:                                               ; preds = %24
  %41 = icmp eq %"class.blink::LayoutBlock"* %20, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %20, i64 0, i32 2
  %44 = load i16, i16* %43, align 8
  %45 = and i16 %44, 1
  %46 = icmp ne i16 %45, 0
  br label %115

47:                                               ; preds = %40
  %48 = and i160 %36, 44601490397061246283071436545296723011960832
  %49 = icmp eq i160 %48, 0
  br i1 %49, label %115, label %50

50:                                               ; preds = %47
  %51 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51)
  %52 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52)
  %53 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53)
  %54 = lshr i160 %36, 102
  %55 = trunc i160 %54 to i8
  %56 = and i8 %55, 3
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %33, i64 0, i32 7, i32 0, i32 0
  %58 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %57, align 8, !noalias !64
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %58, i64 0, i32 12
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %58, i64 0, i32 11
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %58, i64 0, i32 10
  store %"class.blink::Length"* %59, %"class.blink::Length"** %3, align 8, !alias.scope !64
  store %"class.blink::Length"* %60, %"class.blink::Length"** %4, align 8, !alias.scope !64
  store %"class.blink::Length"* %61, %"class.blink::Length"** %5, align 8, !alias.scope !64
  %62 = icmp eq i8 %56, 0
  %63 = icmp eq i8 %56, 1
  %64 = select i1 %63, %"class.blink::Length"** %4, %"class.blink::Length"** %5
  %65 = select i1 %62, %"class.blink::Length"** %3, %"class.blink::Length"** %64
  %66 = load %"class.blink::Length"*, %"class.blink::Length"** %65, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53)
  %67 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %66, i64 0, i32 1
  %68 = load i8, i8* %67, align 4, !range !5
  %69 = icmp ne i8 %68, 0
  br label %115

70:                                               ; preds = %24, %19
  %71 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %72 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %71 to i96*
  %73 = load i96, i96* %72, align 4
  %74 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %75 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %74 to i96*
  %76 = load i96, i96* %75, align 4
  %77 = xor i96 %76, %73
  %78 = trunc i96 %77 to i32
  %79 = icmp slt i32 %78, 0
  br i1 %79, label %115, label %80

80:                                               ; preds = %70
  %81 = icmp eq %"class.blink::LayoutBlock"* %20, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %20, i64 0, i32 2
  %84 = load i16, i16* %83, align 8
  %85 = and i16 %84, 2
  %86 = icmp ne i16 %85, 0
  br label %115

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %89 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %89, i64 0, i32 0, i32 9
  %91 = bitcast [20 x i8]* %90 to i160*
  %92 = load i160, i160* %91, align 8
  %93 = and i160 %92, 44601490397061246283071436545296723011960832
  %94 = icmp eq i160 %93, 0
  br i1 %94, label %115, label %95

95:                                               ; preds = %87
  %96 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96)
  %97 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97)
  %98 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98)
  %99 = lshr i160 %92, 102
  %100 = trunc i160 %99 to i8
  %101 = and i8 %100, 3
  %102 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %89, i64 0, i32 0, i32 7, i32 0, i32 0
  %103 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %102, align 8, !noalias !67
  %104 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %103, i64 0, i32 11
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %103, i64 0, i32 9
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %103, i64 0, i32 10
  store %"class.blink::Length"* %104, %"class.blink::Length"** %6, align 8, !alias.scope !67
  store %"class.blink::Length"* %105, %"class.blink::Length"** %7, align 8, !alias.scope !67
  store %"class.blink::Length"* %106, %"class.blink::Length"** %8, align 8, !alias.scope !67
  %107 = icmp eq i8 %101, 0
  %108 = icmp eq i8 %101, 1
  %109 = select i1 %108, %"class.blink::Length"** %8, %"class.blink::Length"** %6
  %110 = select i1 %107, %"class.blink::Length"** %7, %"class.blink::Length"** %109
  %111 = load %"class.blink::Length"*, %"class.blink::Length"** %110, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98)
  %112 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %111, i64 0, i32 1
  %113 = load i8, i8* %112, align 4, !range !5
  %114 = icmp ne i8 %113, 0
  br label %115

115:                                              ; preds = %95, %87, %50, %47, %70, %82, %42
  %116 = phi i1 [ %46, %42 ], [ %86, %82 ], [ false, %70 ], [ false, %47 ], [ %69, %50 ], [ false, %87 ], [ %114, %95 ]
  ret i1 %116
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11LayoutBlock19HasMarginAfterQuirkEPKNS_9LayoutBoxE(%"class.blink::LayoutBlock"* nocapture readonly, %"class.blink::LayoutBox"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = icmp eq %"class.blink::LayoutBox"* %1, null
  br i1 %9, label %19, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %1 to i1 (%"class.blink::LayoutObject"*)***
  %13 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %12, align 8
  %14 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %13, i64 23
  %15 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %14, align 8
  %16 = tail call zeroext i1 %15(%"class.blink::LayoutObject"* %11) #15
  %17 = bitcast %"class.blink::LayoutBox"* %1 to %"class.blink::LayoutBlock"*
  %18 = select i1 %16, %"class.blink::LayoutBlock"* %17, %"class.blink::LayoutBlock"* null
  br label %19

19:                                               ; preds = %2, %10
  %20 = phi %"class.blink::LayoutBlock"* [ %18, %10 ], [ null, %2 ]
  %21 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 7
  %22 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %21, align 8
  %23 = icmp eq %"class.blink::LayoutObject"* %22, null
  br i1 %23, label %70, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %22, i64 0, i32 5, i32 0
  %26 = bitcast %"class.blink::ComputedStyle"** %25 to %"class.blink::ComputedStyleBase"**
  %27 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %27, i64 0, i32 9
  %29 = bitcast [20 x i8]* %28 to i160*
  %30 = load i160, i160* %29, align 8
  %31 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %32 = bitcast %"class.blink::ComputedStyle"** %31 to %"class.blink::ComputedStyleBase"**
  %33 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %33, i64 0, i32 9
  %35 = bitcast [20 x i8]* %34 to i160*
  %36 = load i160, i160* %35, align 8
  %37 = xor i160 %36, %30
  %38 = and i160 %37, 15211807202738752817960438464512
  %39 = icmp eq i160 %38, 0
  br i1 %39, label %40, label %70

40:                                               ; preds = %24
  %41 = icmp eq %"class.blink::LayoutBlock"* %20, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %40
  %43 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %20, i64 0, i32 2
  %44 = load i16, i16* %43, align 8
  %45 = and i16 %44, 2
  %46 = icmp ne i16 %45, 0
  br label %115

47:                                               ; preds = %40
  %48 = and i160 %36, 44601490397061246283071436545296723011960832
  %49 = icmp eq i160 %48, 0
  br i1 %49, label %115, label %50

50:                                               ; preds = %47
  %51 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51)
  %52 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52)
  %53 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53)
  %54 = lshr i160 %36, 102
  %55 = trunc i160 %54 to i8
  %56 = and i8 %55, 3
  %57 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %33, i64 0, i32 7, i32 0, i32 0
  %58 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %57, align 8, !noalias !70
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %58, i64 0, i32 11
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %58, i64 0, i32 9
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %58, i64 0, i32 10
  store %"class.blink::Length"* %59, %"class.blink::Length"** %3, align 8, !alias.scope !70
  store %"class.blink::Length"* %60, %"class.blink::Length"** %4, align 8, !alias.scope !70
  store %"class.blink::Length"* %61, %"class.blink::Length"** %5, align 8, !alias.scope !70
  %62 = icmp eq i8 %56, 0
  %63 = icmp eq i8 %56, 1
  %64 = select i1 %63, %"class.blink::Length"** %5, %"class.blink::Length"** %3
  %65 = select i1 %62, %"class.blink::Length"** %4, %"class.blink::Length"** %64
  %66 = load %"class.blink::Length"*, %"class.blink::Length"** %65, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53)
  %67 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %66, i64 0, i32 1
  %68 = load i8, i8* %67, align 4, !range !5
  %69 = icmp ne i8 %68, 0
  br label %115

70:                                               ; preds = %24, %19
  %71 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 4
  %72 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %71 to i96*
  %73 = load i96, i96* %72, align 4
  %74 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %75 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %74 to i96*
  %76 = load i96, i96* %75, align 4
  %77 = xor i96 %76, %73
  %78 = trunc i96 %77 to i32
  %79 = icmp slt i32 %78, 0
  br i1 %79, label %115, label %80

80:                                               ; preds = %70
  %81 = icmp eq %"class.blink::LayoutBlock"* %20, null
  br i1 %81, label %87, label %82

82:                                               ; preds = %80
  %83 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %20, i64 0, i32 2
  %84 = load i16, i16* %83, align 8
  %85 = and i16 %84, 1
  %86 = icmp ne i16 %85, 0
  br label %115

87:                                               ; preds = %80
  %88 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %1, i64 0, i32 0, i32 0, i32 5, i32 0
  %89 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %88, align 8
  %90 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %89, i64 0, i32 0, i32 9
  %91 = bitcast [20 x i8]* %90 to i160*
  %92 = load i160, i160* %91, align 8
  %93 = and i160 %92, 44601490397061246283071436545296723011960832
  %94 = icmp eq i160 %93, 0
  br i1 %94, label %115, label %95

95:                                               ; preds = %87
  %96 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %96)
  %97 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %97)
  %98 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98)
  %99 = lshr i160 %92, 102
  %100 = trunc i160 %99 to i8
  %101 = and i8 %100, 3
  %102 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %89, i64 0, i32 0, i32 7, i32 0, i32 0
  %103 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %102, align 8, !noalias !73
  %104 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %103, i64 0, i32 12
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %103, i64 0, i32 11
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %103, i64 0, i32 10
  store %"class.blink::Length"* %104, %"class.blink::Length"** %6, align 8, !alias.scope !73
  store %"class.blink::Length"* %105, %"class.blink::Length"** %7, align 8, !alias.scope !73
  store %"class.blink::Length"* %106, %"class.blink::Length"** %8, align 8, !alias.scope !73
  %107 = icmp eq i8 %101, 0
  %108 = icmp eq i8 %101, 1
  %109 = select i1 %108, %"class.blink::Length"** %7, %"class.blink::Length"** %8
  %110 = select i1 %107, %"class.blink::Length"** %6, %"class.blink::Length"** %109
  %111 = load %"class.blink::Length"*, %"class.blink::Length"** %110, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %96)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %97)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98)
  %112 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %111, i64 0, i32 1
  %113 = load i8, i8* %112, align 4, !range !5
  %114 = icmp ne i8 %113, 0
  br label %115

115:                                              ; preds = %95, %87, %50, %47, %70, %82, %42
  %116 = phi i1 [ %46, %42 ], [ %86, %82 ], [ false, %70 ], [ false, %47 ], [ %69, %50 ], [ false, %87 ], [ %114, %95 ]
  ret i1 %116
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i8* @_ZNK5blink11LayoutBlock7GetNameEv(%"class.blink::LayoutBlock"* nocapture readnone) unnamed_addr #8 align 2 {
  ret i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0)
}

declare dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"*) local_unnamed_addr #3

declare %"class.blink::ComputedStyle"* @_ZN5blink13StyleResolver31CreateAnonymousStyleWithDisplayERKNS_13ComputedStyleENS_8EDisplayE(%"class.blink::StyleResolver"*, %"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #3

declare %"class.blink::LayoutBlock"* @_ZN5blink19LayoutObjectFactory17CreateFlexibleBoxERNS_4NodeERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Node"* dereferenceable(64), %"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #3

declare %"class.blink::LayoutBlock"* @_ZN5blink19LayoutObjectFactory10CreateGridERNS_4NodeERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Node"* dereferenceable(64), %"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #3

declare %"class.blink::LayoutBlockFlow"* @_ZN5blink19LayoutObjectFactory15CreateBlockFlowERNS_4NodeERKNS_13ComputedStyleENS_12LegacyLayoutE(%"class.blink::Node"* dereferenceable(64), %"class.blink::ComputedStyle"* dereferenceable(104), i32) local_unnamed_addr #3

declare void @_ZN5blink12LayoutObject8SetStyleE13scoped_refptrIKNS_13ComputedStyleEENS0_17ApplyStyleChangesE(%"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"*, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN5blink11LayoutBlock25RecalcChildLayoutOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, -129
  store i96 %5, i96* %3, align 4
  %6 = and i96 %4, 17592186044416
  %7 = icmp eq i96 %6, 0
  br i1 %7, label %14, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::LayoutBlock"* %0 to %"class.blink::LayoutBlockFlow"*
  %10 = tail call i16 @_ZN5blink15LayoutBlockFlow34RecalcInlineChildrenLayoutOverflowEv(%"class.blink::LayoutBlockFlow"* %9) #15
  %11 = trunc i16 %10 to i8
  %12 = lshr i16 %10, 8
  %13 = trunc i16 %12 to i8
  br label %54

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.blink::LayoutBlock"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %17 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %16, align 8
  %18 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %17, i64 13
  %19 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %18, align 8
  %20 = tail call %"class.blink::LayoutObjectChildList"* %19(%"class.blink::LayoutObject"* %15) #15
  %21 = icmp eq %"class.blink::LayoutObjectChildList"* %20, null
  br i1 %21, label %54, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.blink::LayoutObjectChildList"* %20 to %"class.blink::LayoutBox"**
  %24 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %23, align 8
  %25 = icmp eq %"class.blink::LayoutBox"* %24, null
  br i1 %25, label %54, label %26

26:                                               ; preds = %22, %47
  %27 = phi %"class.blink::LayoutBox"* [ %52, %47 ], [ %24, %22 ]
  %28 = phi i8 [ %49, %47 ], [ 0, %22 ]
  %29 = phi i8 [ %48, %47 ], [ 0, %22 ]
  %30 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %27, i64 0, i32 0, i32 0, i32 4
  %31 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %30 to i96*
  %32 = load i96, i96* %31, align 4
  %33 = and i96 %32, 113336795588871485128704
  %34 = icmp eq i96 %33, 75557863725914323419136
  br i1 %34, label %47, label %35

35:                                               ; preds = %26
  %36 = bitcast %"class.blink::LayoutBox"* %27 to i16 (%"class.blink::LayoutObject"*)***
  %37 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %27, i64 0, i32 0, i32 0
  %38 = load i16 (%"class.blink::LayoutObject"*)**, i16 (%"class.blink::LayoutObject"*)*** %36, align 8
  %39 = getelementptr inbounds i16 (%"class.blink::LayoutObject"*)*, i16 (%"class.blink::LayoutObject"*)** %38, i64 52
  %40 = load i16 (%"class.blink::LayoutObject"*)*, i16 (%"class.blink::LayoutObject"*)** %39, align 8
  %41 = tail call i16 %40(%"class.blink::LayoutObject"* %37) #15
  %42 = trunc i16 %41 to i8
  %43 = lshr i16 %41, 8
  %44 = trunc i16 %43 to i8
  %45 = or i8 %29, %42
  %46 = or i8 %28, %44
  br label %47

47:                                               ; preds = %26, %35
  %48 = phi i8 [ %29, %26 ], [ %45, %35 ]
  %49 = phi i8 [ %28, %26 ], [ %46, %35 ]
  %50 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %27, i64 0, i32 0, i32 0, i32 9
  %51 = bitcast %"class.blink::LayoutObject"** %50 to %"class.blink::LayoutBox"**
  %52 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %51, align 8
  %53 = icmp eq %"class.blink::LayoutBox"* %52, null
  br i1 %53, label %54, label %26

54:                                               ; preds = %47, %14, %22, %8
  %55 = phi i8 [ %11, %8 ], [ 0, %22 ], [ 0, %14 ], [ %48, %47 ]
  %56 = phi i8 [ %13, %8 ], [ 0, %22 ], [ 0, %14 ], [ %49, %47 ]
  %57 = tail call i16 @_ZN5blink11LayoutBlock41RecalcPositionedDescendantsLayoutOverflowEv(%"class.blink::LayoutBlock"* %0)
  %58 = trunc i16 %57 to i8
  %59 = lshr i16 %57, 8
  %60 = trunc i16 %59 to i8
  %61 = or i8 %55, %58
  %62 = or i8 %56, %60
  %63 = zext i8 %62 to i16
  %64 = shl nuw i16 %63, 8
  %65 = zext i8 %61 to i16
  %66 = or i16 %64, %65
  ret i16 %66
}

declare i16 @_ZN5blink15LayoutBlockFlow34RecalcInlineChildrenLayoutOverflowEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN5blink11LayoutBlock41RecalcPositionedDescendantsLayoutOverflowEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::LayoutBlock"*, align 8
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 2
  %4 = load i16, i16* %3, align 8
  %5 = trunc i16 %4 to i8
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %45, !prof !4

7:                                                ; preds = %1
  %8 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map to i8*) acquire, align 8
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %14, !prof !2

10:                                               ; preds = %7
  %11 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %10
  tail call void @llvm.memset.p0i8.i64(i8* align 8 getelementptr inbounds (%"class.WTF::StaticSingleton", %"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map, i64 0, i32 0, i32 0, i64 0), i8 0, i64 20, i1 false) #15
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blink27GetPositionedDescendantsMapEvE5s_map) #15
  br label %14

14:                                               ; preds = %7, %10, %13
  %15 = bitcast %"class.blink::LayoutBlock"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #15
  store %"class.blink::LayoutBlock"* %0, %"class.blink::LayoutBlock"** %2, align 8
  %16 = call %"class.WTF::ListHashSet.3211"* @_ZNK3WTF7HashMapIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS8_EENS_28MallocedListHashSetAllocatorIS9_Lj16EEEEENS5_14default_deleteISE_EEEENSA_IS3_EENS_10HashTraitsIS4_EENSJ_ISH_EENS_18PartitionAllocatorEE2atERKS4_(%"class.WTF::HashMap.3191"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blink27GetPositionedDescendantsMapEvE5s_map to %"class.WTF::HashMap.3191"*), %"class.blink::LayoutBlock"** nonnull dereferenceable(8) %2) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #15
  %17 = icmp eq %"class.WTF::ListHashSet.3211"* %16, null
  br i1 %17, label %45, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %16, i64 0, i32 1
  %20 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %19, align 8
  %21 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %20, null
  br i1 %21, label %45, label %22

22:                                               ; preds = %18, %22
  %23 = phi %"class.WTF::MallocedListHashSetNode.3217"* [ %39, %22 ], [ %20, %18 ]
  %24 = phi i8 [ %37, %22 ], [ 0, %18 ]
  %25 = phi i8 [ %36, %22 ], [ 0, %18 ]
  %26 = bitcast %"class.WTF::MallocedListHashSetNode.3217"* %23 to %"class.blink::LayoutObject"**
  %27 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %26, align 8
  %28 = bitcast %"class.blink::LayoutObject"* %27 to i16 (%"class.blink::LayoutObject"*)***
  %29 = load i16 (%"class.blink::LayoutObject"*)**, i16 (%"class.blink::LayoutObject"*)*** %28, align 8
  %30 = getelementptr inbounds i16 (%"class.blink::LayoutObject"*)*, i16 (%"class.blink::LayoutObject"*)** %29, i64 52
  %31 = load i16 (%"class.blink::LayoutObject"*)*, i16 (%"class.blink::LayoutObject"*)** %30, align 8
  %32 = call i16 %31(%"class.blink::LayoutObject"* %27) #15
  %33 = trunc i16 %32 to i8
  %34 = lshr i16 %32, 8
  %35 = trunc i16 %34 to i8
  %36 = or i8 %25, %33
  %37 = or i8 %24, %35
  %38 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %23, i64 0, i32 2
  %39 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %38, align 8
  %40 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %39, null
  br i1 %40, label %41, label %22

41:                                               ; preds = %22
  %42 = zext i8 %37 to i16
  %43 = shl nuw i16 %42, 8
  %44 = zext i8 %36 to i16
  br label %45

45:                                               ; preds = %41, %18, %1, %14
  %46 = phi i16 [ 0, %14 ], [ 0, %1 ], [ 0, %18 ], [ %44, %41 ]
  %47 = phi i16 [ 0, %14 ], [ 0, %1 ], [ 0, %18 ], [ %43, %41 ]
  %48 = or i16 %47, %46
  ret i16 %48
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock24RebuildFragmentTreeSpineEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.absl::optional.3451", align 8
  %3 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %4 = tail call zeroext i1 @_ZN5blink11NGBlockNode15CanUseNewLayoutERKNS_9LayoutBoxE(%"class.blink::LayoutBox"* dereferenceable(216) %3) #15
  br i1 %4, label %5, label %46

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.absl::optional.3451", %"class.absl::optional.3451"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %7

7:                                                ; preds = %5, %23
  %8 = phi %"class.blink::LayoutBlock"* [ %0, %5 ], [ %24, %23 ]
  %9 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %8, i64 0, i32 0, i32 0, i32 0, i32 4
  %11 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %10 to i96*
  %12 = load i96, i96* %11, align 4
  %13 = and i96 %12, 63
  %14 = icmp eq i96 %13, 0
  br i1 %14, label %15, label %46

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %8, i64 0, i32 0, i32 8, i32 0, i32 0, i32 0
  %17 = load %class.scoped_refptr.1852*, %class.scoped_refptr.1852** %16, align 8
  %18 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %8, i64 0, i32 0, i32 8, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %class.scoped_refptr.1852, %class.scoped_refptr.1852* %17, i64 %20
  %22 = icmp eq i32 %19, 0
  br i1 %22, label %23, label %27

23:                                               ; preds = %43, %15
  %24 = tail call %"class.blink::LayoutBlock"* @_ZNK5blink12LayoutObject15ContainingBlockEPNS0_16AncestorSkipInfoE(%"class.blink::LayoutObject"* %9, %"class.blink::LayoutObject::AncestorSkipInfo"* null) #15
  %25 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %24, i64 0, i32 0
  %26 = tail call zeroext i1 @_ZN5blink11NGBlockNode15CanUseNewLayoutERKNS_9LayoutBoxE(%"class.blink::LayoutBox"* dereferenceable(216) %25) #15
  br i1 %26, label %7, label %46

27:                                               ; preds = %15, %43
  %28 = phi %class.scoped_refptr.1852* [ %44, %43 ], [ %17, %15 ]
  %29 = getelementptr inbounds %class.scoped_refptr.1852, %class.scoped_refptr.1852* %28, i64 0, i32 0
  %30 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %29, align 8
  store i8 0, i8* %6, align 8
  %31 = tail call %"class.blink::NGLayoutResult"* @_ZN5blink14NGLayoutResult28CloneWithPostLayoutFragmentsERKS0_N4absl8optionalINS_12PhysicalRectEEE(%"class.blink::NGLayoutResult"* dereferenceable(64) %30, %"class.absl::optional.3451"* nonnull byval(%"class.absl::optional.3451") align 8 %2) #15
  %32 = ptrtoint %"class.blink::NGLayoutResult"* %31 to i64
  %33 = bitcast %class.scoped_refptr.1852* %28 to i64*
  %34 = load %"class.blink::NGLayoutResult"*, %"class.blink::NGLayoutResult"** %29, align 8
  store i64 %32, i64* %33, align 8
  %35 = icmp eq %"class.blink::NGLayoutResult"* %34, null
  br i1 %35, label %43, label %36

36:                                               ; preds = %27
  %37 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %34, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %37) #15
  %38 = getelementptr inbounds %"class.blink::NGLayoutResult", %"class.blink::NGLayoutResult"* %34, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %36
  tail call void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"* nonnull %34) #15
  %42 = bitcast %"class.blink::NGLayoutResult"* %34 to i8*
  tail call void @free(i8* %42) #15
  br label %43

43:                                               ; preds = %27, %36, %41
  %44 = getelementptr inbounds %class.scoped_refptr.1852, %class.scoped_refptr.1852* %28, i64 1
  %45 = icmp eq %class.scoped_refptr.1852* %44, %21
  br i1 %45, label %23, label %27

46:                                               ; preds = %23, %7, %1
  ret void
}

declare zeroext i1 @_ZN5blink11NGBlockNode15CanUseNewLayoutERKNS_9LayoutBoxE(%"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #3

declare %"class.blink::NGLayoutResult"* @_ZN5blink14NGLayoutResult28CloneWithPostLayoutFragmentsERKS0_N4absl8optionalINS_12PhysicalRectEEE(%"class.blink::NGLayoutResult"* dereferenceable(64), %"class.absl::optional.3451"* byval(%"class.absl::optional.3451") align 8) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock25RecalcChildVisualOverflowEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 align 2 {
  %2 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase34is_css_content_visibility_enabled_E, align 1, !range !5
  %3 = icmp eq i8 %2, 0
  br i1 %3, label %25, label %4

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %6 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %5 to i96*
  %7 = load i96, i96* %6, align 4
  %8 = and i96 %7, 16777216
  %9 = icmp eq i96 %8, 0
  br i1 %9, label %10, label %25

10:                                               ; preds = %4
  %11 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %12 = load %"class.blink::Node"*, %"class.blink::Node"** %11, align 8
  %13 = icmp eq %"class.blink::Node"* %12, null
  br i1 %13, label %25, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %12, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = and i32 %16, 67108876
  %18 = icmp eq i32 %17, 67108864
  br i1 %18, label %19, label %25, !prof !6

19:                                               ; preds = %14
  %20 = bitcast %"class.blink::Node"* %12 to %"class.blink::Element"*
  %21 = tail call %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"* nonnull %20) #15
  %22 = icmp eq %"class.blink::DisplayLockContext"* %21, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %19
  %24 = tail call zeroext i1 @_ZNK5blink18DisplayLockContext22ShouldPrePaintChildrenEv(%"class.blink::DisplayLockContext"* nonnull %21) #15
  br i1 %24, label %25, label %52

25:                                               ; preds = %1, %23, %4, %10, %14, %19
  %26 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %27 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %26 to i96*
  %28 = load i96, i96* %27, align 4
  %29 = and i96 %28, 17592186044416
  %30 = icmp eq i96 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.blink::LayoutBlock"* %0 to %"class.blink::LayoutBlockFlow"*
  tail call void @_ZN5blink15LayoutBlockFlow34RecalcInlineChildrenVisualOverflowEv(%"class.blink::LayoutBlockFlow"* %32) #15
  br label %52

33:                                               ; preds = %25
  %34 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %35 = bitcast %"class.blink::LayoutBlock"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %36 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %35, align 8
  %37 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %36, i64 13
  %38 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %37, align 8
  %39 = tail call %"class.blink::LayoutObjectChildList"* %38(%"class.blink::LayoutObject"* %34) #15
  %40 = icmp eq %"class.blink::LayoutObjectChildList"* %39, null
  br i1 %40, label %52, label %41

41:                                               ; preds = %33
  %42 = bitcast %"class.blink::LayoutObjectChildList"* %39 to %"class.blink::LayoutBox"**
  %43 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %42, align 8
  %44 = icmp eq %"class.blink::LayoutBox"* %43, null
  br i1 %44, label %52, label %45

45:                                               ; preds = %41, %45
  %46 = phi %"class.blink::LayoutBox"* [ %50, %45 ], [ %43, %41 ]
  %47 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %46, i64 0, i32 0, i32 0
  tail call void @_ZN5blink12LayoutObject43RecalcNormalFlowChildVisualOverflowIfNeededEv(%"class.blink::LayoutObject"* %47) #15
  %48 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %46, i64 0, i32 0, i32 0, i32 9
  %49 = bitcast %"class.blink::LayoutObject"** %48 to %"class.blink::LayoutBox"**
  %50 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %49, align 8
  %51 = icmp eq %"class.blink::LayoutBox"* %50, null
  br i1 %51, label %52, label %45

52:                                               ; preds = %45, %33, %41, %23, %31
  ret void
}

declare void @_ZN5blink15LayoutBlockFlow34RecalcInlineChildrenVisualOverflowEv(%"class.blink::LayoutBlockFlow"*) local_unnamed_addr #3

declare void @_ZN5blink12LayoutObject43RecalcNormalFlowChildVisualOverflowIfNeededEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZN5blink11LayoutBlock20RecalcLayoutOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = trunc i96 %4 to i8
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %16

7:                                                ; preds = %1
  %8 = bitcast %"class.blink::LayoutBlock"* %0 to i16 (%"class.blink::LayoutBlock"*)***
  %9 = load i16 (%"class.blink::LayoutBlock"*)**, i16 (%"class.blink::LayoutBlock"*)*** %8, align 8
  %10 = getelementptr inbounds i16 (%"class.blink::LayoutBlock"*)*, i16 (%"class.blink::LayoutBlock"*)** %9, i64 198
  %11 = load i16 (%"class.blink::LayoutBlock"*)*, i16 (%"class.blink::LayoutBlock"*)** %10, align 8
  %12 = tail call i16 %11(%"class.blink::LayoutBlock"* %0) #15
  %13 = and i16 %12, 1
  %14 = icmp ne i16 %13, 0
  %15 = load i96, i96* %3, align 4
  br label %16

16:                                               ; preds = %7, %1
  %17 = phi i96 [ %15, %7 ], [ %4, %1 ]
  %18 = phi i1 [ %14, %7 ], [ false, %1 ]
  %19 = and i96 %17, 64
  %20 = icmp ne i96 %19, 0
  %21 = or i1 %18, %20
  %22 = and i96 %17, 63
  %23 = icmp eq i96 %22, 0
  %24 = and i1 %21, %23
  br i1 %24, label %25, label %68

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %27 = tail call i32 @_ZNK5blink9LayoutBox21LayoutClientAfterEdgeEv(%"class.blink::LayoutBox"* %26) #15
  %28 = bitcast %"class.blink::LayoutBlock"* %0 to void (%"class.blink::LayoutBlock"*, i32, i1)***
  %29 = load void (%"class.blink::LayoutBlock"*, i32, i1)**, void (%"class.blink::LayoutBlock"*, i32, i1)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::LayoutBlock"*, i32, i1)*, void (%"class.blink::LayoutBlock"*, i32, i1)** %29, i64 207
  %31 = load void (%"class.blink::LayoutBlock"*, i32, i1)*, void (%"class.blink::LayoutBlock"*, i32, i1)** %30, align 8
  tail call void %31(%"class.blink::LayoutBlock"* %0, i32 %27, i1 zeroext true) #15
  %32 = load i96, i96* %3, align 4
  %33 = and i96 %32, 8589934592
  %34 = icmp eq i96 %33, 0
  br i1 %34, label %61, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %37 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %37, i64 0, i32 0, i32 9
  %39 = bitcast [20 x i8]* %38 to i160*
  %40 = load i160, i160* %39, align 8
  %41 = lshr i160 %40, 74
  %42 = trunc i160 %41 to i32
  %43 = and i32 %42, 7
  %44 = lshr exact i96 %33, 33
  %45 = trunc i96 %44 to i16
  switch i32 %43, label %46 [
    i32 5, label %61
    i32 2, label %61
  ]

46:                                               ; preds = %35
  %47 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %48 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %47, align 8
  %49 = icmp eq %"struct.blink::FragmentData::RareData"* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %51, align 8
  br label %53

53:                                               ; preds = %50, %46
  %54 = phi %"class.blink::PaintLayer"* [ %52, %50 ], [ null, %46 ]
  %55 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %54, i64 0, i32 14, i32 0, i32 0
  %56 = load %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PaintLayerScrollableArea"** %55, align 8
  tail call void @_ZN5blink24PaintLayerScrollableArea25UpdateAfterOverflowRecalcEv(%"class.blink::PaintLayerScrollableArea"* %56) #15
  %57 = load i96, i96* %3, align 4
  %58 = lshr i96 %57, 33
  %59 = trunc i96 %58 to i16
  %60 = and i16 %59, 1
  br label %61

61:                                               ; preds = %53, %35, %35, %25
  %62 = phi i16 [ %45, %35 ], [ %45, %35 ], [ 0, %25 ], [ %60, %53 ]
  %63 = lshr i96 %17, 6
  %64 = trunc i96 %63 to i16
  %65 = and i16 %64, 1
  %66 = xor i16 %62, 1
  %67 = or i16 %66, %65
  br label %68

68:                                               ; preds = %61, %16
  %69 = phi i16 [ 0, %16 ], [ %67, %61 ]
  ret i16 %69
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink11LayoutBlock24RecalcSelfLayoutOverflowEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 64
  %6 = icmp ne i96 %5, 0
  %7 = and i96 %4, 63
  %8 = icmp eq i96 %7, 0
  br i1 %8, label %9, label %45

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %11 = tail call i32 @_ZNK5blink9LayoutBox21LayoutClientAfterEdgeEv(%"class.blink::LayoutBox"* %10) #15
  %12 = bitcast %"class.blink::LayoutBlock"* %0 to void (%"class.blink::LayoutBlock"*, i32, i1)***
  %13 = load void (%"class.blink::LayoutBlock"*, i32, i1)**, void (%"class.blink::LayoutBlock"*, i32, i1)*** %12, align 8
  %14 = getelementptr inbounds void (%"class.blink::LayoutBlock"*, i32, i1)*, void (%"class.blink::LayoutBlock"*, i32, i1)** %13, i64 207
  %15 = load void (%"class.blink::LayoutBlock"*, i32, i1)*, void (%"class.blink::LayoutBlock"*, i32, i1)** %14, align 8
  tail call void %15(%"class.blink::LayoutBlock"* %0, i32 %11, i1 zeroext true) #15
  %16 = load i96, i96* %3, align 4
  %17 = and i96 %16, 8589934592
  %18 = icmp eq i96 %17, 0
  br i1 %18, label %41, label %19

19:                                               ; preds = %9
  %20 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %21 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %21, i64 0, i32 0, i32 9
  %23 = bitcast [20 x i8]* %22 to i160*
  %24 = load i160, i160* %23, align 8
  %25 = lshr i160 %24, 74
  %26 = trunc i160 %25 to i32
  %27 = and i32 %26, 7
  switch i32 %27, label %28 [
    i32 5, label %41
    i32 2, label %41
  ]

28:                                               ; preds = %19
  %29 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 10, i32 1, i32 0, i32 0, i32 0
  %30 = load %"struct.blink::FragmentData::RareData"*, %"struct.blink::FragmentData::RareData"** %29, align 8
  %31 = icmp eq %"struct.blink::FragmentData::RareData"* %30, null
  br i1 %31, label %35, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"struct.blink::FragmentData::RareData", %"struct.blink::FragmentData::RareData"* %30, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"** %33, align 8
  br label %35

35:                                               ; preds = %28, %32
  %36 = phi %"class.blink::PaintLayer"* [ %34, %32 ], [ null, %28 ]
  %37 = getelementptr inbounds %"class.blink::PaintLayer", %"class.blink::PaintLayer"* %36, i64 0, i32 14, i32 0, i32 0
  %38 = load %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PaintLayerScrollableArea"** %37, align 8
  tail call void @_ZN5blink24PaintLayerScrollableArea25UpdateAfterOverflowRecalcEv(%"class.blink::PaintLayerScrollableArea"* %38) #15
  %39 = load i96, i96* %3, align 4
  %40 = and i96 %39, 8589934592
  br label %41

41:                                               ; preds = %19, %19, %9, %35
  %42 = phi i96 [ %17, %19 ], [ %17, %19 ], [ 0, %9 ], [ %40, %35 ]
  %43 = icmp eq i96 %42, 0
  %44 = or i1 %6, %43
  br label %45

45:                                               ; preds = %1, %41
  %46 = phi i1 [ %44, %41 ], [ false, %1 ]
  ret i1 %46
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock20RecalcVisualOverflowEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink11LayoutBlock25RecalcChildVisualOverflowEv(%"class.blink::LayoutBlock"* %0)
  %2 = bitcast %"class.blink::LayoutBlock"* %0 to void (%"class.blink::LayoutBlock"*, i1)***
  %3 = load void (%"class.blink::LayoutBlock"*, i1)**, void (%"class.blink::LayoutBlock"*, i1)*** %2, align 8
  %4 = getelementptr inbounds void (%"class.blink::LayoutBlock"*, i1)*, void (%"class.blink::LayoutBlock"*, i1)** %3, i64 206
  %5 = load void (%"class.blink::LayoutBlock"*, i1)*, void (%"class.blink::LayoutBlock"*, i1)** %4, align 8
  tail call void %5(%"class.blink::LayoutBlock"* %0, i1 zeroext true) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink11LayoutBlock24RecalcSelfVisualOverflowEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::LayoutBlock"* %0 to void (%"class.blink::LayoutBlock"*, i1)***
  %3 = load void (%"class.blink::LayoutBlock"*, i1)**, void (%"class.blink::LayoutBlock"*, i1)*** %2, align 8
  %4 = getelementptr inbounds void (%"class.blink::LayoutBlock"*, i1)*, void (%"class.blink::LayoutBlock"*, i1)** %3, i64 206
  %5 = load void (%"class.blink::LayoutBlock"*, i1)*, void (%"class.blink::LayoutBlock"*, i1)** %4, align 8
  tail call void %5(%"class.blink::LayoutBlock"* %0, i1 zeroext true) #15
  ret void
}

declare void @_ZN5blink24PaintLayerScrollableArea25UpdateAfterOverflowRecalcEv(%"class.blink::PaintLayerScrollableArea"*) local_unnamed_addr #3

declare void @_ZN5blink9LayoutBox38LogicalExtentAfterUpdatingLogicalWidthERKNS_10LayoutUnitERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"class.blink::LayoutUnit"* dereferenceable(4), %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox20ContentLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %30

9:                                                ; preds = %1
  %10 = tail call i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"* %0) #15
  %11 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %12 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %13, i64 118
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::LayoutBoxModelObject"* %11) #15
  %17 = icmp sgt i32 %16, -1
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %10, i32 %16) #15
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !4
  %23 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %12, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %23, i64 119
  %25 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::LayoutBoxModelObject"* %11) #15
  %27 = icmp sgt i32 %26, -1
  %28 = select i1 %27, i32 -2147483648, i32 2147483647
  %29 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %22, i32 %26) #15
  br label %51

30:                                               ; preds = %1
  %31 = tail call i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"* %0) #15
  %32 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %33 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %34 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %35 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %34, i64 120
  %36 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %35, align 8
  %37 = tail call i32 %36(%"class.blink::LayoutBoxModelObject"* %32) #15
  %38 = icmp sgt i32 %37, -1
  %39 = select i1 %38, i32 -2147483648, i32 2147483647
  %40 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %31, i32 %37) #15
  %41 = extractvalue { i32, i1 } %40, 1
  %42 = extractvalue { i32, i1 } %40, 0
  %43 = select i1 %41, i32 %39, i32 %42, !prof !4
  %44 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %33, align 8
  %45 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %44, i64 121
  %46 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %45, align 8
  %47 = tail call i32 %46(%"class.blink::LayoutBoxModelObject"* %32) #15
  %48 = icmp sgt i32 %47, -1
  %49 = select i1 %48, i32 -2147483648, i32 2147483647
  %50 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %43, i32 %47) #15
  br label %51

51:                                               ; preds = %30, %9
  %52 = phi { i32, i1 } [ %50, %30 ], [ %29, %9 ]
  %53 = phi i32 [ %49, %30 ], [ %28, %9 ]
  %54 = extractvalue { i32, i1 } %52, 1
  %55 = extractvalue { i32, i1 } %52, 0
  %56 = select i1 %54, i32 %53, i32 %55
  %57 = icmp sgt i32 %56, 0
  %58 = select i1 %57, i32 %56, i32 0
  ret i32 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK5blink11LayoutBlock46AvailableLogicalHeightForPercentageComputationEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #9 align 2 {
  %2 = alloca %"class.blink::Length"*, align 8
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = alloca %"class.blink::Length"*, align 8
  %9 = alloca %"class.blink::Length"*, align 8
  %10 = alloca %"class.blink::Length"*, align 8
  %11 = alloca %"class.blink::Length"*, align 8
  %12 = alloca %"class.blink::Length"*, align 8
  %13 = alloca %"class.blink::Length"*, align 8
  %14 = alloca %"class.blink::Length"*, align 8
  %15 = alloca %"class.blink::Length"*, align 8
  %16 = alloca %"class.blink::Length"*, align 8
  %17 = alloca %"class.blink::Length"*, align 8
  %18 = alloca %"class.blink::Length"*, align 8
  %19 = alloca %"class.blink::Length"*, align 8
  %20 = alloca %"class.blink::Length"*, align 8
  %21 = alloca %"class.blink::Length"*, align 8
  %22 = alloca <2 x float>, align 8
  %23 = alloca %"struct.blink::NGBoxStrut", align 4
  %24 = alloca i64, align 8
  %25 = bitcast i64* %24 to %"struct.blink::LogicalSize"*
  %26 = alloca %"struct.blink::LayoutBox::LogicalExtentComputedValues", align 4
  %27 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %29 = tail call zeroext i1 @_ZN5blink9LayoutBox46SkipContainingBlockForPercentHeightCalculationEPKS0_(%"class.blink::LayoutBox"* %28) #15
  br i1 %29, label %591, label %30

30:                                               ; preds = %1
  %31 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %32 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8
  %33 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %34 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %33 to i96*
  %35 = load i96, i96* %34, align 4
  %36 = and i96 %35, 113336795588871485128704
  %37 = icmp eq i96 %36, 75557863725914323419136
  br i1 %37, label %38, label %83

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %32, i64 0, i32 0, i32 9
  %40 = bitcast [20 x i8]* %39 to i160*
  %41 = load i160, i160* %40, align 8
  %42 = and i160 %41, 15211807202738752817960438464512
  %43 = icmp eq i160 %42, 0
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %32, i64 0, i32 0, i32 5, i32 0, i32 0
  %45 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %44, align 8
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %45, i64 0, i32 3
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %45, i64 0, i32 8
  %48 = select i1 %43, %"class.blink::Length"* %46, %"class.blink::Length"* %47
  %49 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %48, i64 0, i32 2
  %50 = load i8, i8* %49, align 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %101

52:                                               ; preds = %38
  %53 = bitcast %"class.blink::Length"** %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53)
  %54 = bitcast %"class.blink::Length"** %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54)
  %55 = bitcast %"class.blink::Length"** %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55)
  %56 = lshr i160 %41, 102
  %57 = trunc i160 %56 to i8
  %58 = and i8 %57, 3
  %59 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %32, i64 0, i32 0, i32 7, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %59, align 8, !noalias !76
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %60, i64 0, i32 18
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %60, i64 0, i32 17
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %60, i64 0, i32 8
  store %"class.blink::Length"* %61, %"class.blink::Length"** %19, align 8, !alias.scope !76
  store %"class.blink::Length"* %62, %"class.blink::Length"** %20, align 8, !alias.scope !76
  store %"class.blink::Length"* %63, %"class.blink::Length"** %21, align 8, !alias.scope !76
  %64 = icmp eq i8 %58, 0
  %65 = icmp eq i8 %58, 1
  %66 = select i1 %65, %"class.blink::Length"** %20, %"class.blink::Length"** %21
  %67 = select i1 %64, %"class.blink::Length"** %19, %"class.blink::Length"** %66
  %68 = load %"class.blink::Length"*, %"class.blink::Length"** %67, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55)
  %69 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %68, i64 0, i32 2
  %70 = load i8, i8* %69, align 1
  %71 = icmp eq i8 %70, 0
  br i1 %71, label %101, label %72

72:                                               ; preds = %52
  %73 = bitcast %"class.blink::Length"** %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73)
  %74 = bitcast %"class.blink::Length"** %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74)
  %75 = bitcast %"class.blink::Length"** %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %75)
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %60, i64 0, i32 7
  store %"class.blink::Length"* %62, %"class.blink::Length"** %13, align 8, !alias.scope !79
  store %"class.blink::Length"* %76, %"class.blink::Length"** %14, align 8, !alias.scope !79
  store %"class.blink::Length"* %63, %"class.blink::Length"** %15, align 8, !alias.scope !79
  %77 = select i1 %65, %"class.blink::Length"** %15, %"class.blink::Length"** %13
  %78 = select i1 %64, %"class.blink::Length"** %14, %"class.blink::Length"** %77
  %79 = load %"class.blink::Length"*, %"class.blink::Length"** %78, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %73)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %75)
  %80 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %79, i64 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp ne i8 %81, 0
  br label %101

83:                                               ; preds = %30
  %84 = and i96 %35, 134217728
  %85 = icmp ne i96 %84, 0
  %86 = or i1 %85, %37
  br i1 %86, label %101, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 7
  %89 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %88, align 8
  %90 = icmp eq %"class.blink::LayoutObject"* %89, null
  br i1 %90, label %101, label %91

91:                                               ; preds = %87
  %92 = bitcast %"class.blink::LayoutObject"* %89 to i1 (%"class.blink::LayoutObject"*)***
  %93 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %92, align 8
  %94 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %93, i64 78
  %95 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %94, align 8
  %96 = tail call zeroext i1 %95(%"class.blink::LayoutObject"* nonnull %89) #15
  br i1 %96, label %97, label %101

97:                                               ; preds = %91
  %98 = bitcast %"class.blink::LayoutObject"** %88 to %"class.blink::LayoutFlexibleBox"**
  %99 = load %"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutFlexibleBox"** %98, align 8
  %100 = tail call zeroext i1 @_ZNK5blink17LayoutFlexibleBox46UseOverrideLogicalHeightForPerentageResolutionERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"* %99, %"class.blink::LayoutBox"* dereferenceable(216) %28) #15
  br i1 %100, label %106, label %110

101:                                              ; preds = %52, %72, %38, %83, %87, %91
  %102 = phi i1 [ false, %83 ], [ false, %87 ], [ false, %91 ], [ %82, %72 ], [ false, %52 ], [ true, %38 ]
  %103 = tail call zeroext i1 @_ZNK5blink9LayoutBox24HasOverrideLogicalHeightEv(%"class.blink::LayoutBox"* %28) #15
  br i1 %103, label %104, label %110

104:                                              ; preds = %101
  %105 = tail call zeroext i1 @_ZNK5blink9LayoutBox31IsOverrideLogicalHeightDefiniteEv(%"class.blink::LayoutBox"* %28) #15
  br i1 %105, label %106, label %110

106:                                              ; preds = %104, %97
  %107 = phi i1 [ false, %97 ], [ %102, %104 ]
  %108 = tail call i32 @_ZNK5blink9LayoutBox28OverrideContentLogicalHeightEv(%"class.blink::LayoutBox"* %28) #15
  %109 = icmp eq i32 %108, -64
  br i1 %109, label %110, label %591

110:                                              ; preds = %106, %101, %104, %97
  %111 = phi i1 [ %107, %106 ], [ %102, %101 ], [ %102, %104 ], [ false, %97 ]
  %112 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 7
  %113 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %112, align 8
  %114 = icmp eq %"class.blink::LayoutObject"* %113, null
  br i1 %114, label %125, label %115

115:                                              ; preds = %110
  %116 = bitcast %"class.blink::LayoutObject"* %113 to i1 (%"class.blink::LayoutObject"*, i32)***
  %117 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %116, align 8
  %118 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %117, i64 92
  %119 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %118, align 8
  %120 = tail call zeroext i1 %119(%"class.blink::LayoutObject"* nonnull %113, i32 10) #15
  br i1 %120, label %121, label %125

121:                                              ; preds = %115
  %122 = tail call zeroext i1 @_ZNK5blink9LayoutBox24HasOverrideLogicalHeightEv(%"class.blink::LayoutBox"* %28) #15
  br i1 %122, label %123, label %125

123:                                              ; preds = %121
  %124 = tail call i32 @_ZNK5blink9LayoutBox28OverrideContentLogicalHeightEv(%"class.blink::LayoutBox"* %28) #15
  br label %591

125:                                              ; preds = %110, %121, %115
  %126 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %32, i64 0, i32 0, i32 9
  %127 = bitcast [20 x i8]* %126 to i160*
  %128 = load i160, i160* %127, align 8
  %129 = and i160 %128, 15211807202738752817960438464512
  %130 = icmp eq i160 %129, 0
  %131 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %32, i64 0, i32 0, i32 5, i32 0, i32 0
  %132 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %131, align 8
  %133 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %132, i64 0, i32 3
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %132, i64 0, i32 8
  %135 = select i1 %130, %"class.blink::Length"* %133, %"class.blink::Length"* %134
  %136 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %135, i64 0, i32 2
  %137 = load i8, i8* %136, align 1
  %138 = icmp eq i8 %137, 2
  br i1 %138, label %139, label %173

139:                                              ; preds = %125
  %140 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %135, i64 0, i32 3
  %141 = load i8, i8* %140, align 2, !range !5
  %142 = icmp eq i8 %141, 0
  br i1 %142, label %146, label %143

143:                                              ; preds = %139
  %144 = bitcast %"class.blink::Length"* %135 to float*
  %145 = load float, float* %144, align 4
  br label %150

146:                                              ; preds = %139
  %147 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %135, i64 0, i32 0, i32 0
  %148 = load i32, i32* %147, align 4
  %149 = sitofp i32 %148 to float
  br label %150

150:                                              ; preds = %143, %146
  %151 = phi float [ %145, %143 ], [ %149, %146 ]
  %152 = tail call i32 @_ZNK5blink9LayoutBox41AdjustContentBoxLogicalHeightForBoxSizingEf(%"class.blink::LayoutBox"* %28, float %151) #15
  %153 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %28)
  %154 = extractvalue { i64, i64 } %153, 1
  %155 = trunc i64 %154 to i32
  %156 = lshr i64 %154, 32
  %157 = trunc i64 %156 to i32
  %158 = icmp slt i32 %157, 0
  %159 = select i1 %158, i32 -2147483648, i32 2147483647
  %160 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %155, i32 %157) #15
  %161 = extractvalue { i32, i1 } %160, 1
  %162 = extractvalue { i32, i1 } %160, 0
  %163 = select i1 %161, i32 %159, i32 %162, !prof !4
  %164 = icmp sgt i32 %163, -1
  %165 = select i1 %164, i32 -2147483648, i32 2147483647
  %166 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %152, i32 %163) #15
  %167 = extractvalue { i32, i1 } %166, 1
  %168 = extractvalue { i32, i1 } %166, 0
  %169 = select i1 %167, i32 %165, i32 %168, !prof !4
  %170 = tail call i32 @_ZNK5blink9LayoutBox40ConstrainContentBoxLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %28, i32 %169, i32 -64) #15
  %171 = icmp sgt i32 %170, 0
  %172 = select i1 %171, i32 %170, i32 0
  br label %591

173:                                              ; preds = %125
  %174 = tail call zeroext i1 @_ZNK5blink9LayoutBox41ShouldComputeLogicalHeightFromAspectRatioEv(%"class.blink::LayoutBox"* %28)
  br i1 %174, label %175, label %482

175:                                              ; preds = %173
  %176 = bitcast %"struct.blink::NGBoxStrut"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %176) #15
  %177 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %23, i64 0, i32 0, i32 0
  %178 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %23, i64 0, i32 1, i32 0
  %179 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %23, i64 0, i32 2, i32 0
  %180 = getelementptr inbounds %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut"* %23, i64 0, i32 3, i32 0
  %181 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %182 = bitcast %"struct.blink::NGBoxStrut"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %182, i8 -86, i64 16, i1 false)
  %183 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8, !noalias !82
  %184 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %183, i64 0, i32 0, i32 9
  %185 = bitcast [20 x i8]* %184 to i160*
  %186 = load i160, i160* %185, align 8, !noalias !82
  %187 = bitcast %"class.blink::LayoutBlock"* %0 to i8*
  %188 = and i160 %186, 15211807202738752817960438464512
  %189 = icmp eq i160 %188, 0
  %190 = and i160 %186, 41538374868278621028243970633760768
  %191 = icmp eq i160 %190, 0
  %192 = select i1 %191, { i64, i64 } { i64 977, i64 0 }, { i64, i64 } { i64 985, i64 0 }
  %193 = select i1 %191, { i64, i64 } { i64 993, i64 0 }, { i64, i64 } { i64 1001, i64 0 }
  %194 = select i1 %189, { i64, i64 } %193, { i64, i64 } %192
  %195 = select i1 %189, { i64, i64 } %193, { i64, i64 } %192
  %196 = extractvalue { i64, i64 } %194, 0
  %197 = extractvalue { i64, i64 } %195, 1
  %198 = getelementptr inbounds i8, i8* %187, i64 %197
  %199 = bitcast i8* %198 to %"class.blink::LayoutBoxModelObject"*
  %200 = and i64 %196, 1
  %201 = icmp eq i64 %200, 0
  br i1 %201, label %209, label %202

202:                                              ; preds = %175
  %203 = bitcast i8* %198 to i8**
  %204 = load i8*, i8** %203, align 8
  %205 = add i64 %196, -1
  %206 = getelementptr i8, i8* %204, i64 %205
  %207 = bitcast i8* %206 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %208 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %207, align 8
  br label %211

209:                                              ; preds = %175
  %210 = inttoptr i64 %196 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %211

211:                                              ; preds = %202, %209
  %212 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %208, %202 ], [ %210, %209 ]
  %213 = tail call i32 %212(%"class.blink::LayoutBoxModelObject"* %199) #15
  %214 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8
  %215 = bitcast %"class.blink::Length"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %215)
  %216 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %216)
  %217 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %217)
  %218 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %218)
  %219 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %214, i64 0, i32 0, i32 9
  %220 = bitcast [20 x i8]* %219 to i160*
  %221 = load i160, i160* %220, align 8, !noalias !85
  %222 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %214, i64 0, i32 0, i32 7, i32 0, i32 0
  %223 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %222, align 8, !noalias !85
  %224 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %223, i64 0, i32 16
  %225 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %223, i64 0, i32 15
  %226 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %223, i64 0, i32 13
  %227 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %223, i64 0, i32 14
  store %"class.blink::Length"* %224, %"class.blink::Length"** %2, align 8, !alias.scope !85
  store %"class.blink::Length"* %225, %"class.blink::Length"** %3, align 8, !alias.scope !85
  store %"class.blink::Length"* %226, %"class.blink::Length"** %4, align 8, !alias.scope !85
  store %"class.blink::Length"* %227, %"class.blink::Length"** %5, align 8, !alias.scope !85
  %228 = and i160 %221, 15211807202738752817960438464512
  %229 = icmp eq i160 %228, 0
  %230 = and i160 %221, 41538374868278621028243970633760768
  %231 = icmp eq i160 %230, 0
  %232 = select i1 %231, %"class.blink::Length"** %5, %"class.blink::Length"** %3
  %233 = select i1 %231, %"class.blink::Length"** %2, %"class.blink::Length"** %4
  %234 = select i1 %229, %"class.blink::Length"** %232, %"class.blink::Length"** %233
  %235 = load %"class.blink::Length"*, %"class.blink::Length"** %234, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %215)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %216)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %217)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %218)
  %236 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %181, %"class.blink::Length"* dereferenceable(8) %235) #15
  %237 = icmp slt i32 %236, 0
  %238 = select i1 %237, i32 -2147483648, i32 2147483647
  %239 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %213, i32 %236) #15
  %240 = extractvalue { i32, i1 } %239, 1
  %241 = extractvalue { i32, i1 } %239, 0
  %242 = select i1 %240, i32 %238, i32 %241, !prof !4
  %243 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8, !noalias !88
  %244 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %243, i64 0, i32 0, i32 9
  %245 = bitcast [20 x i8]* %244 to i160*
  %246 = load i160, i160* %245, align 8, !noalias !88
  %247 = and i160 %246, 15211807202738752817960438464512
  %248 = icmp eq i160 %247, 0
  %249 = and i160 %246, 41538374868278621028243970633760768
  %250 = icmp eq i160 %249, 0
  %251 = select i1 %250, { i64, i64 } { i64 985, i64 0 }, { i64, i64 } { i64 977, i64 0 }
  %252 = select i1 %250, { i64, i64 } { i64 1001, i64 0 }, { i64, i64 } { i64 993, i64 0 }
  %253 = select i1 %248, { i64, i64 } %252, { i64, i64 } %251
  %254 = select i1 %248, { i64, i64 } %252, { i64, i64 } %251
  %255 = extractvalue { i64, i64 } %253, 0
  %256 = extractvalue { i64, i64 } %254, 1
  %257 = getelementptr inbounds i8, i8* %187, i64 %256
  %258 = bitcast i8* %257 to %"class.blink::LayoutBoxModelObject"*
  %259 = and i64 %255, 1
  %260 = icmp eq i64 %259, 0
  br i1 %260, label %268, label %261

261:                                              ; preds = %211
  %262 = bitcast i8* %257 to i8**
  %263 = load i8*, i8** %262, align 8
  %264 = add i64 %255, -1
  %265 = getelementptr i8, i8* %263, i64 %264
  %266 = bitcast i8* %265 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %267 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %266, align 8
  br label %270

268:                                              ; preds = %211
  %269 = inttoptr i64 %255 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %270

270:                                              ; preds = %261, %268
  %271 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %267, %261 ], [ %269, %268 ]
  %272 = tail call i32 %271(%"class.blink::LayoutBoxModelObject"* %258) #15
  %273 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8
  %274 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %274)
  %275 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %275)
  %276 = bitcast %"class.blink::Length"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %276)
  %277 = bitcast %"class.blink::Length"** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %277)
  %278 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %273, i64 0, i32 0, i32 9
  %279 = bitcast [20 x i8]* %278 to i160*
  %280 = load i160, i160* %279, align 8, !noalias !91
  %281 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %273, i64 0, i32 0, i32 7, i32 0, i32 0
  %282 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %281, align 8, !noalias !91
  %283 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %282, i64 0, i32 16
  %284 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %282, i64 0, i32 15
  %285 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %282, i64 0, i32 13
  %286 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %282, i64 0, i32 14
  store %"class.blink::Length"* %283, %"class.blink::Length"** %6, align 8, !alias.scope !91
  store %"class.blink::Length"* %284, %"class.blink::Length"** %7, align 8, !alias.scope !91
  store %"class.blink::Length"* %285, %"class.blink::Length"** %8, align 8, !alias.scope !91
  store %"class.blink::Length"* %286, %"class.blink::Length"** %9, align 8, !alias.scope !91
  %287 = and i160 %280, 15211807202738752817960438464512
  %288 = icmp eq i160 %287, 0
  %289 = and i160 %280, 41538374868278621028243970633760768
  %290 = icmp eq i160 %289, 0
  %291 = select i1 %290, %"class.blink::Length"** %7, %"class.blink::Length"** %9
  %292 = select i1 %290, %"class.blink::Length"** %8, %"class.blink::Length"** %6
  %293 = select i1 %288, %"class.blink::Length"** %291, %"class.blink::Length"** %292
  %294 = load %"class.blink::Length"*, %"class.blink::Length"** %293, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %274)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %275)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %276)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %277)
  %295 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %181, %"class.blink::Length"* dereferenceable(8) %294) #15
  %296 = icmp slt i32 %295, 0
  %297 = select i1 %296, i32 -2147483648, i32 2147483647
  %298 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %272, i32 %295) #15
  %299 = extractvalue { i32, i1 } %298, 1
  %300 = extractvalue { i32, i1 } %298, 0
  %301 = select i1 %299, i32 %297, i32 %300, !prof !4
  %302 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8, !noalias !94
  %303 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %302, i64 0, i32 0, i32 9
  %304 = bitcast [20 x i8]* %303 to i160*
  %305 = load i160, i160* %304, align 8, !noalias !94
  %306 = lshr i160 %305, 102
  %307 = trunc i160 %306 to i8
  %308 = and i8 %307, 3
  switch i8 %308, label %309 [
    i8 0, label %318
    i8 1, label %310
  ]

309:                                              ; preds = %270
  br label %310

310:                                              ; preds = %309, %270
  %311 = phi { i64, i64 } [ { i64 993, i64 0 }, %309 ], [ { i64 1001, i64 0 }, %270 ]
  %312 = extractvalue { i64, i64 } %311, 0
  %313 = extractvalue { i64, i64 } %311, 1
  %314 = getelementptr inbounds i8, i8* %187, i64 %313
  %315 = bitcast i8* %314 to %"class.blink::LayoutBoxModelObject"*
  %316 = and i64 %312, 1
  %317 = icmp eq i64 %316, 0
  br i1 %317, label %328, label %318

318:                                              ; preds = %310, %270
  %319 = phi %"class.blink::LayoutBoxModelObject"* [ %315, %310 ], [ %181, %270 ]
  %320 = phi i8* [ %314, %310 ], [ %187, %270 ]
  %321 = phi i64 [ %312, %310 ], [ 977, %270 ]
  %322 = bitcast i8* %320 to i8**
  %323 = load i8*, i8** %322, align 8
  %324 = add i64 %321, -1
  %325 = getelementptr i8, i8* %323, i64 %324
  %326 = bitcast i8* %325 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %327 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %326, align 8
  br label %330

328:                                              ; preds = %310
  %329 = inttoptr i64 %312 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %330

330:                                              ; preds = %318, %328
  %331 = phi %"class.blink::LayoutBoxModelObject"* [ %319, %318 ], [ %315, %328 ]
  %332 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %327, %318 ], [ %329, %328 ]
  %333 = tail call i32 %332(%"class.blink::LayoutBoxModelObject"* %331) #15
  %334 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8
  %335 = bitcast %"class.blink::Length"** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %335)
  %336 = bitcast %"class.blink::Length"** %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %336)
  %337 = bitcast %"class.blink::Length"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %337)
  %338 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %334, i64 0, i32 0, i32 9
  %339 = bitcast [20 x i8]* %338 to i160*
  %340 = load i160, i160* %339, align 8, !noalias !97
  %341 = lshr i160 %340, 102
  %342 = trunc i160 %341 to i8
  %343 = and i8 %342, 3
  %344 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %334, i64 0, i32 0, i32 7, i32 0, i32 0
  %345 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %344, align 8, !noalias !97
  %346 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %345, i64 0, i32 16
  %347 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %345, i64 0, i32 15
  %348 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %345, i64 0, i32 14
  store %"class.blink::Length"* %346, %"class.blink::Length"** %10, align 8, !alias.scope !97
  store %"class.blink::Length"* %347, %"class.blink::Length"** %11, align 8, !alias.scope !97
  store %"class.blink::Length"* %348, %"class.blink::Length"** %12, align 8, !alias.scope !97
  %349 = icmp eq i8 %343, 0
  %350 = icmp eq i8 %343, 1
  %351 = select i1 %350, %"class.blink::Length"** %11, %"class.blink::Length"** %12
  %352 = select i1 %349, %"class.blink::Length"** %10, %"class.blink::Length"** %351
  %353 = load %"class.blink::Length"*, %"class.blink::Length"** %352, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %335)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %336)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %337)
  %354 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %181, %"class.blink::Length"* dereferenceable(8) %353) #15
  %355 = icmp slt i32 %354, 0
  %356 = select i1 %355, i32 -2147483648, i32 2147483647
  %357 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %333, i32 %354) #15
  %358 = extractvalue { i32, i1 } %357, 1
  %359 = extractvalue { i32, i1 } %357, 0
  %360 = select i1 %358, i32 %356, i32 %359, !prof !4
  %361 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8, !noalias !100
  %362 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %361, i64 0, i32 0, i32 9
  %363 = bitcast [20 x i8]* %362 to i160*
  %364 = load i160, i160* %363, align 8, !noalias !100
  %365 = lshr i160 %364, 102
  %366 = trunc i160 %365 to i8
  %367 = and i8 %366, 3
  switch i8 %367, label %368 [
    i8 0, label %377
    i8 1, label %369
  ]

368:                                              ; preds = %330
  br label %369

369:                                              ; preds = %368, %330
  %370 = phi { i64, i64 } [ { i64 1001, i64 0 }, %368 ], [ { i64 993, i64 0 }, %330 ]
  %371 = extractvalue { i64, i64 } %370, 0
  %372 = extractvalue { i64, i64 } %370, 1
  %373 = getelementptr inbounds i8, i8* %187, i64 %372
  %374 = bitcast i8* %373 to %"class.blink::LayoutBoxModelObject"*
  %375 = and i64 %371, 1
  %376 = icmp eq i64 %375, 0
  br i1 %376, label %387, label %377

377:                                              ; preds = %369, %330
  %378 = phi %"class.blink::LayoutBoxModelObject"* [ %374, %369 ], [ %181, %330 ]
  %379 = phi i8* [ %373, %369 ], [ %187, %330 ]
  %380 = phi i64 [ %371, %369 ], [ 985, %330 ]
  %381 = bitcast i8* %379 to i8**
  %382 = load i8*, i8** %381, align 8
  %383 = add i64 %380, -1
  %384 = getelementptr i8, i8* %382, i64 %383
  %385 = bitcast i8* %384 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %386 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %385, align 8
  br label %389

387:                                              ; preds = %369
  %388 = inttoptr i64 %371 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %389

389:                                              ; preds = %377, %387
  %390 = phi %"class.blink::LayoutBoxModelObject"* [ %378, %377 ], [ %374, %387 ]
  %391 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %386, %377 ], [ %388, %387 ]
  %392 = tail call i32 %391(%"class.blink::LayoutBoxModelObject"* %390) #15
  %393 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8
  %394 = bitcast %"class.blink::Length"** %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %394)
  %395 = bitcast %"class.blink::Length"** %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %395)
  %396 = bitcast %"class.blink::Length"** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %396)
  %397 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %393, i64 0, i32 0, i32 9
  %398 = bitcast [20 x i8]* %397 to i160*
  %399 = load i160, i160* %398, align 8, !noalias !103
  %400 = lshr i160 %399, 102
  %401 = trunc i160 %400 to i8
  %402 = and i8 %401, 3
  %403 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %393, i64 0, i32 0, i32 7, i32 0, i32 0
  %404 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %403, align 8, !noalias !103
  %405 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %404, i64 0, i32 15
  %406 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %404, i64 0, i32 13
  %407 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %404, i64 0, i32 14
  store %"class.blink::Length"* %405, %"class.blink::Length"** %16, align 8, !alias.scope !103
  store %"class.blink::Length"* %406, %"class.blink::Length"** %17, align 8, !alias.scope !103
  store %"class.blink::Length"* %407, %"class.blink::Length"** %18, align 8, !alias.scope !103
  %408 = icmp eq i8 %402, 0
  %409 = icmp eq i8 %402, 1
  %410 = select i1 %409, %"class.blink::Length"** %18, %"class.blink::Length"** %16
  %411 = select i1 %408, %"class.blink::Length"** %17, %"class.blink::Length"** %410
  %412 = load %"class.blink::Length"*, %"class.blink::Length"** %411, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %394)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %395)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %396)
  %413 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %181, %"class.blink::Length"* dereferenceable(8) %412) #15
  %414 = icmp slt i32 %413, 0
  %415 = select i1 %414, i32 -2147483648, i32 2147483647
  %416 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %392, i32 %413) #15
  %417 = extractvalue { i32, i1 } %416, 1
  %418 = extractvalue { i32, i1 } %416, 0
  %419 = select i1 %417, i32 %415, i32 %418, !prof !4
  store i32 %242, i32* %177, align 4
  store i32 %301, i32* %178, align 4
  store i32 %360, i32* %179, align 4
  store i32 %419, i32* %180, align 4
  %420 = bitcast i64* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %420) #15
  %421 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8
  %422 = bitcast <2 x float>* %22 to %"class.blink::FloatSize"*
  %423 = bitcast <2 x float>* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %423) #15
  %424 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %421, i64 0, i32 0, i32 5, i32 0, i32 0
  %425 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %424, align 8
  %426 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %425, i64 0, i32 1, i32 1
  %427 = bitcast %"class.blink::FloatSize"* %426 to i64*
  %428 = load i64, i64* %427, align 4
  %429 = bitcast <2 x float>* %22 to i64*
  store i64 %428, i64* %429, align 8
  %430 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %421, i64 0, i32 0, i32 9
  %431 = bitcast [20 x i8]* %430 to i160*
  %432 = load i160, i160* %431, align 8
  %433 = and i160 %432, 15211807202738752817960438464512
  %434 = icmp eq i160 %433, 0
  br i1 %434, label %443, label %435

435:                                              ; preds = %389
  %436 = trunc i64 %428 to i32
  %437 = bitcast i32 %436 to float
  %438 = lshr i64 %428, 32
  %439 = trunc i64 %438 to i32
  %440 = bitcast i32 %439 to float
  %441 = insertelement <2 x float> undef, float %440, i32 0
  %442 = insertelement <2 x float> %441, float %437, i32 1
  store <2 x float> %442, <2 x float>* %22, align 8
  br label %443

443:                                              ; preds = %389, %435
  %444 = call i64 @_ZN5blink11LogicalSize24AspectRatioFromFloatSizeERKNS_9FloatSizeE(%"class.blink::FloatSize"* nonnull dereferenceable(8) %422) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %423) #15
  store i64 %444, i64* %24, align 8
  %445 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8
  %446 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %445, i64 0, i32 0, i32 5, i32 0, i32 0
  %447 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %446, align 8
  %448 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %447, i64 0, i32 1, i32 1, i32 0
  %449 = load float, float* %448, align 4
  %450 = fcmp oeq float %449, 0.000000e+00
  br i1 %450, label %470, label %451

451:                                              ; preds = %443
  %452 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %447, i64 0, i32 1, i32 1, i32 1
  %453 = load float, float* %452, align 4
  %454 = fcmp oeq float %453, 0.000000e+00
  %455 = fcmp olt float %449, 1.562500e-02
  %456 = or i1 %455, %454
  %457 = fcmp olt float %453, 1.562500e-02
  %458 = or i1 %457, %456
  br i1 %458, label %470, label %459

459:                                              ; preds = %451
  %460 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %447, i64 0, i32 1, i32 0
  %461 = load i8, i8* %460, align 4
  %462 = and i8 %461, 3
  %463 = icmp eq i8 %462, 2
  br i1 %463, label %464, label %470

464:                                              ; preds = %459
  %465 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %447, i64 0, i32 11
  %466 = load i8, i8* %465, align 4
  %467 = lshr i8 %466, 1
  %468 = and i8 %467, 1
  %469 = zext i8 %468 to i32
  br label %470

470:                                              ; preds = %443, %451, %459, %464
  %471 = phi i32 [ %469, %464 ], [ 1, %459 ], [ 1, %451 ], [ 1, %443 ]
  %472 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %445, i64 0, i32 0, i32 9
  %473 = bitcast [20 x i8]* %472 to i160*
  %474 = load i160, i160* %473, align 8
  %475 = and i160 %474, 15211807202738752817960438464512
  %476 = icmp eq i160 %475, 0
  %477 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %478 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %479 = select i1 %476, i32* %477, i32* %478
  %480 = load i32, i32* %479, align 4
  %481 = call i32 @_ZN5blink24BlockSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* nonnull dereferenceable(16) %23, %"struct.blink::LogicalSize"* nonnull dereferenceable(8) %25, i32 %471, i32 %480) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %420) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %176) #15
  br label %591

482:                                              ; preds = %173
  br i1 %111, label %483, label %526

483:                                              ; preds = %482
  %484 = bitcast %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %484) #15
  %485 = getelementptr inbounds %"struct.blink::LayoutBox::LogicalExtentComputedValues", %"struct.blink::LayoutBox::LogicalExtentComputedValues"* %26, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %484, i8 0, i64 24, i1 false) #15
  %486 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %31, align 8
  %487 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %486, i64 0, i32 0, i32 9
  %488 = bitcast [20 x i8]* %487 to i160*
  %489 = load i160, i160* %488, align 8
  %490 = and i160 %489, 15211807202738752817960438464512
  %491 = icmp eq i160 %490, 0
  %492 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 2, i32 1, i32 1, i32 0
  %493 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 2, i32 1, i32 0, i32 0
  %494 = select i1 %491, i32* %492, i32* %493
  %495 = load i32, i32* %494, align 4
  %496 = bitcast %"class.blink::LayoutBlock"* %0 to void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)***
  %497 = load void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)**, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*** %496, align 8
  %498 = getelementptr inbounds void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %497, i64 164
  %499 = load void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)*, void (%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"*)** %498, align 8
  call void %499(%"class.blink::LayoutBox"* %28, i32 %495, i32 0, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* nonnull dereferenceable(24) %26) #15
  %500 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0
  %501 = call i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"* %500)
  %502 = load i32, i32* %485, align 4
  %503 = icmp sgt i32 %501, -1
  %504 = select i1 %503, i32 -2147483648, i32 2147483647
  %505 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %502, i32 %501) #15
  %506 = extractvalue { i32, i1 } %505, 1
  %507 = extractvalue { i32, i1 } %505, 0
  %508 = select i1 %506, i32 %504, i32 %507, !prof !4
  %509 = call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %28)
  %510 = extractvalue { i64, i64 } %509, 1
  %511 = trunc i64 %510 to i32
  %512 = lshr i64 %510, 32
  %513 = trunc i64 %512 to i32
  %514 = icmp slt i32 %513, 0
  %515 = select i1 %514, i32 -2147483648, i32 2147483647
  %516 = call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %511, i32 %513) #15
  %517 = extractvalue { i32, i1 } %516, 1
  %518 = extractvalue { i32, i1 } %516, 0
  %519 = select i1 %517, i32 %515, i32 %518, !prof !4
  %520 = icmp sgt i32 %519, -1
  %521 = select i1 %520, i32 -2147483648, i32 2147483647
  %522 = call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %508, i32 %519) #15
  %523 = extractvalue { i32, i1 } %522, 1
  %524 = extractvalue { i32, i1 } %522, 0
  %525 = select i1 %523, i32 %521, i32 %524, !prof !4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %484) #15
  br label %591

526:                                              ; preds = %482
  %527 = load i160, i160* %127, align 8
  %528 = and i160 %527, 15211807202738752817960438464512
  %529 = icmp eq i160 %528, 0
  %530 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %131, align 8
  %531 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %530, i64 0, i32 3
  %532 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %530, i64 0, i32 8
  %533 = select i1 %529, %"class.blink::Length"* %531, %"class.blink::Length"* %532
  %534 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %533, i64 0, i32 2
  %535 = load i8, i8* %534, align 1
  switch i8 %535, label %563 [
    i8 8, label %536
    i8 1, label %536
  ]

536:                                              ; preds = %526, %526
  %537 = tail call i32 @_ZNK5blink9LayoutBox30ComputePercentageLogicalHeightERKNS_6LengthE(%"class.blink::LayoutBox"* %28, %"class.blink::Length"* dereferenceable(8) %533) #15
  %538 = icmp eq i32 %537, -64
  br i1 %538, label %591, label %539

539:                                              ; preds = %536
  %540 = sitofp i32 %537 to float
  %541 = fmul float %540, 1.562500e-02
  %542 = tail call i32 @_ZNK5blink9LayoutBox41AdjustContentBoxLogicalHeightForBoxSizingEf(%"class.blink::LayoutBox"* %28, float %541) #15
  %543 = tail call { i64, i64 } @_ZNK5blink9LayoutBox24ComputeLogicalScrollbarsEv(%"class.blink::LayoutBox"* %28)
  %544 = extractvalue { i64, i64 } %543, 1
  %545 = trunc i64 %544 to i32
  %546 = lshr i64 %544, 32
  %547 = trunc i64 %546 to i32
  %548 = icmp slt i32 %547, 0
  %549 = select i1 %548, i32 -2147483648, i32 2147483647
  %550 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %545, i32 %547) #15
  %551 = extractvalue { i32, i1 } %550, 1
  %552 = extractvalue { i32, i1 } %550, 0
  %553 = select i1 %551, i32 %549, i32 %552, !prof !4
  %554 = icmp sgt i32 %553, -1
  %555 = select i1 %554, i32 -2147483648, i32 2147483647
  %556 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %542, i32 %553) #15
  %557 = extractvalue { i32, i1 } %556, 1
  %558 = extractvalue { i32, i1 } %556, 0
  %559 = select i1 %557, i32 %555, i32 %558, !prof !4
  %560 = tail call i32 @_ZNK5blink9LayoutBox40ConstrainContentBoxLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"* %28, i32 %559, i32 -64) #15
  %561 = icmp sgt i32 %560, 0
  %562 = select i1 %561, i32 %560, i32 0
  br label %591

563:                                              ; preds = %526
  %564 = icmp eq %"class.blink::LayoutBlock"* %0, null
  br i1 %564, label %591, label %565

565:                                              ; preds = %563
  %566 = bitcast %"class.blink::LayoutBlock"* %0 to i1 (%"class.blink::LayoutObject"*, i32)***
  %567 = load i1 (%"class.blink::LayoutObject"*, i32)**, i1 (%"class.blink::LayoutObject"*, i32)*** %566, align 8
  %568 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %567, i64 92
  %569 = load i1 (%"class.blink::LayoutObject"*, i32)*, i1 (%"class.blink::LayoutObject"*, i32)** %568, align 8
  %570 = tail call zeroext i1 %569(%"class.blink::LayoutObject"* %27, i32 55) #15
  br i1 %570, label %571, label %591

571:                                              ; preds = %565
  %572 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 6, i32 0, i32 0
  %573 = load %"class.blink::Node"*, %"class.blink::Node"** %572, align 8
  %574 = icmp eq %"class.blink::Node"* %573, null
  br i1 %574, label %575, label %582

575:                                              ; preds = %571, %575
  %576 = phi %"class.blink::LayoutObject"* [ %578, %575 ], [ %27, %571 ]
  %577 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %576, i64 0, i32 7
  %578 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %577, align 8
  %579 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %578, i64 0, i32 6, i32 0, i32 0
  %580 = load %"class.blink::Node"*, %"class.blink::Node"** %579, align 8
  %581 = icmp eq %"class.blink::Node"* %580, null
  br i1 %581, label %575, label %582

582:                                              ; preds = %575, %571
  %583 = phi %"class.blink::Node"* [ %573, %571 ], [ %580, %575 ]
  %584 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %583, i64 0, i32 3, i32 0, i32 0
  %585 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %584, align 8
  %586 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %585, i64 0, i32 2, i32 0, i32 0
  %587 = load %"class.blink::Document"*, %"class.blink::Document"** %586, align 8
  %588 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %587, i64 0, i32 113
  %589 = load %"class.blink::LayoutView"*, %"class.blink::LayoutView"** %588, align 8
  %590 = tail call i32 @_ZNK5blink10LayoutView31ViewLogicalHeightForPercentagesEv(%"class.blink::LayoutView"* %589) #15
  br label %591

591:                                              ; preds = %106, %536, %563, %150, %483, %565, %582, %470, %123, %539, %1
  %592 = phi i32 [ -64, %1 ], [ %124, %123 ], [ %172, %150 ], [ %481, %470 ], [ %525, %483 ], [ %590, %582 ], [ -64, %565 ], [ %108, %106 ], [ %562, %539 ], [ -64, %536 ], [ -64, %563 ]
  ret i32 %592
}

declare zeroext i1 @_ZN5blink9LayoutBox46SkipContainingBlockForPercentHeightCalculationEPKS0_(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink17LayoutFlexibleBox46UseOverrideLogicalHeightForPerentageResolutionERKNS_9LayoutBoxE(%"class.blink::LayoutFlexibleBox"*, %"class.blink::LayoutBox"* dereferenceable(216)) local_unnamed_addr #3

declare i32 @_ZNK5blink9LayoutBox28OverrideContentLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink9LayoutBox24HasOverrideLogicalHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink9LayoutBox31IsOverrideLogicalHeightDefiniteEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare i32 @_ZNK5blink9LayoutBox41AdjustContentBoxLogicalHeightForBoxSizingEf(%"class.blink::LayoutBox"*, float) local_unnamed_addr #3

declare i32 @_ZNK5blink9LayoutBox40ConstrainContentBoxLogicalHeightByMinMaxENS_10LayoutUnitES1_(%"class.blink::LayoutBox"*, i32, i32) local_unnamed_addr #3

declare i32 @_ZN5blink24BlockSizeFromAspectRatioERKNS_10NGBoxStrutERKNS_11LogicalSizeENS_10EBoxSizingENS_10LayoutUnitE(%"struct.blink::NGBoxStrut"* dereferenceable(16), %"struct.blink::LogicalSize"* dereferenceable(8), i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject29BorderAndPaddingLogicalHeightEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 224
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 24, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = icmp ne i32 %12, 0
  %14 = and i16 %7, 240
  %15 = icmp ne i16 %14, 0
  %16 = and i1 %15, %13
  br i1 %16, label %49, label %17

17:                                               ; preds = %10, %1
  %18 = and i16 %7, 3584
  %19 = icmp eq i16 %18, 0
  br i1 %19, label %27, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 25, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp ne i32 %22, 0
  %24 = and i16 %7, 3840
  %25 = icmp ne i16 %24, 0
  %26 = and i1 %25, %23
  br i1 %26, label %49, label %27

27:                                               ; preds = %20, %17
  %28 = icmp ult i16 %7, 8192
  br i1 %28, label %33, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 26, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %49

33:                                               ; preds = %29, %27
  %34 = and i16 %7, 14
  %35 = icmp eq i16 %34, 0
  br i1 %35, label %43, label %36

36:                                               ; preds = %33
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 23, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp ne i32 %38, 0
  %40 = and i16 %7, 15
  %41 = icmp ne i16 %40, 0
  %42 = and i1 %41, %39
  br i1 %42, label %49, label %43

43:                                               ; preds = %36, %33
  %44 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %45 = bitcast [20 x i8]* %44 to i160*
  %46 = load i160, i160* %45, align 8
  %47 = and i160 %46, 89202980794122492566142873090593446023921664
  %48 = icmp eq i160 %47, 0
  br i1 %48, label %196, label %49

49:                                               ; preds = %43, %36, %20, %10, %29
  %50 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %51 = bitcast [20 x i8]* %50 to i160*
  %52 = load i160, i160* %51, align 8, !noalias !106
  %53 = lshr i160 %52, 102
  %54 = trunc i160 %53 to i8
  %55 = and i8 %54, 3
  %56 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i8*
  switch i8 %55, label %57 [
    i8 0, label %66
    i8 1, label %58
  ]

57:                                               ; preds = %49
  br label %58

58:                                               ; preds = %57, %49
  %59 = phi { i64, i64 } [ { i64 993, i64 0 }, %57 ], [ { i64 1001, i64 0 }, %49 ]
  %60 = extractvalue { i64, i64 } %59, 0
  %61 = extractvalue { i64, i64 } %59, 1
  %62 = getelementptr inbounds i8, i8* %56, i64 %61
  %63 = bitcast i8* %62 to %"class.blink::LayoutBoxModelObject"*
  %64 = and i64 %60, 1
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %76, label %66

66:                                               ; preds = %58, %49
  %67 = phi %"class.blink::LayoutBoxModelObject"* [ %63, %58 ], [ %0, %49 ]
  %68 = phi i8* [ %62, %58 ], [ %56, %49 ]
  %69 = phi i64 [ %60, %58 ], [ 977, %49 ]
  %70 = bitcast i8* %68 to i8**
  %71 = load i8*, i8** %70, align 8
  %72 = add i64 %69, -1
  %73 = getelementptr i8, i8* %71, i64 %72
  %74 = bitcast i8* %73 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %75 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %74, align 8
  br label %78

76:                                               ; preds = %58
  %77 = inttoptr i64 %60 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %78

78:                                               ; preds = %76, %66
  %79 = phi %"class.blink::LayoutBoxModelObject"* [ %67, %66 ], [ %63, %76 ]
  %80 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %75, %66 ], [ %77, %76 ]
  %81 = tail call i32 %80(%"class.blink::LayoutBoxModelObject"* %79) #15
  %82 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !109
  %83 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %82, i64 0, i32 0, i32 9
  %84 = bitcast [20 x i8]* %83 to i160*
  %85 = load i160, i160* %84, align 8, !noalias !109
  %86 = lshr i160 %85, 102
  %87 = trunc i160 %86 to i8
  %88 = and i8 %87, 3
  switch i8 %88, label %89 [
    i8 0, label %98
    i8 1, label %90
  ]

89:                                               ; preds = %78
  br label %90

90:                                               ; preds = %89, %78
  %91 = phi { i64, i64 } [ { i64 961, i64 0 }, %89 ], [ { i64 969, i64 0 }, %78 ]
  %92 = extractvalue { i64, i64 } %91, 0
  %93 = extractvalue { i64, i64 } %91, 1
  %94 = getelementptr inbounds i8, i8* %56, i64 %93
  %95 = bitcast i8* %94 to %"class.blink::LayoutBoxModelObject"*
  %96 = and i64 %92, 1
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %108, label %98

98:                                               ; preds = %90, %78
  %99 = phi %"class.blink::LayoutBoxModelObject"* [ %95, %90 ], [ %0, %78 ]
  %100 = phi i8* [ %94, %90 ], [ %56, %78 ]
  %101 = phi i64 [ %92, %90 ], [ 945, %78 ]
  %102 = bitcast i8* %100 to i8**
  %103 = load i8*, i8** %102, align 8
  %104 = add i64 %101, -1
  %105 = getelementptr i8, i8* %103, i64 %104
  %106 = bitcast i8* %105 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %107 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %106, align 8
  br label %110

108:                                              ; preds = %90
  %109 = inttoptr i64 %92 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %110

110:                                              ; preds = %98, %108
  %111 = phi %"class.blink::LayoutBoxModelObject"* [ %99, %98 ], [ %95, %108 ]
  %112 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %107, %98 ], [ %109, %108 ]
  %113 = tail call i32 %112(%"class.blink::LayoutBoxModelObject"* %111) #15
  %114 = icmp slt i32 %113, 0
  %115 = select i1 %114, i32 -2147483648, i32 2147483647
  %116 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %81, i32 %113) #15
  %117 = extractvalue { i32, i1 } %116, 1
  %118 = extractvalue { i32, i1 } %116, 0
  %119 = select i1 %117, i32 %115, i32 %118, !prof !4
  %120 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !112
  %121 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %120, i64 0, i32 0, i32 9
  %122 = bitcast [20 x i8]* %121 to i160*
  %123 = load i160, i160* %122, align 8, !noalias !112
  %124 = lshr i160 %123, 102
  %125 = trunc i160 %124 to i8
  %126 = and i8 %125, 3
  switch i8 %126, label %127 [
    i8 0, label %136
    i8 1, label %128
  ]

127:                                              ; preds = %110
  br label %128

128:                                              ; preds = %127, %110
  %129 = phi { i64, i64 } [ { i64 1001, i64 0 }, %127 ], [ { i64 993, i64 0 }, %110 ]
  %130 = extractvalue { i64, i64 } %129, 0
  %131 = extractvalue { i64, i64 } %129, 1
  %132 = getelementptr inbounds i8, i8* %56, i64 %131
  %133 = bitcast i8* %132 to %"class.blink::LayoutBoxModelObject"*
  %134 = and i64 %130, 1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %146, label %136

136:                                              ; preds = %128, %110
  %137 = phi %"class.blink::LayoutBoxModelObject"* [ %133, %128 ], [ %0, %110 ]
  %138 = phi i8* [ %132, %128 ], [ %56, %110 ]
  %139 = phi i64 [ %130, %128 ], [ 985, %110 ]
  %140 = bitcast i8* %138 to i8**
  %141 = load i8*, i8** %140, align 8
  %142 = add i64 %139, -1
  %143 = getelementptr i8, i8* %141, i64 %142
  %144 = bitcast i8* %143 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %145 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %144, align 8
  br label %148

146:                                              ; preds = %128
  %147 = inttoptr i64 %130 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %148

148:                                              ; preds = %146, %136
  %149 = phi %"class.blink::LayoutBoxModelObject"* [ %137, %136 ], [ %133, %146 ]
  %150 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %145, %136 ], [ %147, %146 ]
  %151 = tail call i32 %150(%"class.blink::LayoutBoxModelObject"* %149) #15
  %152 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8, !noalias !115
  %153 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %152, i64 0, i32 0, i32 9
  %154 = bitcast [20 x i8]* %153 to i160*
  %155 = load i160, i160* %154, align 8, !noalias !115
  %156 = lshr i160 %155, 102
  %157 = trunc i160 %156 to i8
  %158 = and i8 %157, 3
  switch i8 %158, label %159 [
    i8 0, label %168
    i8 1, label %160
  ]

159:                                              ; preds = %148
  br label %160

160:                                              ; preds = %159, %148
  %161 = phi { i64, i64 } [ { i64 969, i64 0 }, %159 ], [ { i64 961, i64 0 }, %148 ]
  %162 = extractvalue { i64, i64 } %161, 0
  %163 = extractvalue { i64, i64 } %161, 1
  %164 = getelementptr inbounds i8, i8* %56, i64 %163
  %165 = bitcast i8* %164 to %"class.blink::LayoutBoxModelObject"*
  %166 = and i64 %162, 1
  %167 = icmp eq i64 %166, 0
  br i1 %167, label %178, label %168

168:                                              ; preds = %160, %148
  %169 = phi %"class.blink::LayoutBoxModelObject"* [ %165, %160 ], [ %0, %148 ]
  %170 = phi i8* [ %164, %160 ], [ %56, %148 ]
  %171 = phi i64 [ %162, %160 ], [ 953, %148 ]
  %172 = bitcast i8* %170 to i8**
  %173 = load i8*, i8** %172, align 8
  %174 = add i64 %171, -1
  %175 = getelementptr i8, i8* %173, i64 %174
  %176 = bitcast i8* %175 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %177 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %176, align 8
  br label %180

178:                                              ; preds = %160
  %179 = inttoptr i64 %162 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %180

180:                                              ; preds = %168, %178
  %181 = phi %"class.blink::LayoutBoxModelObject"* [ %169, %168 ], [ %165, %178 ]
  %182 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %177, %168 ], [ %179, %178 ]
  %183 = tail call i32 %182(%"class.blink::LayoutBoxModelObject"* %181) #15
  %184 = icmp slt i32 %183, 0
  %185 = select i1 %184, i32 -2147483648, i32 2147483647
  %186 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %151, i32 %183) #15
  %187 = extractvalue { i32, i1 } %186, 1
  %188 = extractvalue { i32, i1 } %186, 0
  %189 = select i1 %187, i32 %185, i32 %188, !prof !4
  %190 = icmp slt i32 %189, 0
  %191 = select i1 %190, i32 -2147483648, i32 2147483647
  %192 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %119, i32 %189) #15
  %193 = extractvalue { i32, i1 } %192, 1
  %194 = extractvalue { i32, i1 } %192, 0
  %195 = select i1 %193, i32 %191, i32 %194, !prof !4
  br label %196

196:                                              ; preds = %43, %180
  %197 = phi i32 [ %195, %180 ], [ 0, %43 ]
  ret i32 %197
}

declare i32 @_ZNK5blink9LayoutBox30ComputePercentageLogicalHeightERKNS_6LengthE(%"class.blink::LayoutBox"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #3

declare i32 @_ZNK5blink10LayoutView31ViewLogicalHeightForPercentagesEv(%"class.blink::LayoutView"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11LayoutBlock24HasDefiniteLogicalHeightEv(%"class.blink::LayoutBlock"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZNK5blink11LayoutBlock46AvailableLogicalHeightForPercentageComputationEv(%"class.blink::LayoutBlock"* %0)
  %3 = icmp ne i32 %2, -64
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink11LayoutBlock33NeedsPreferredWidthsRecalculationEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0
  %3 = tail call zeroext i1 @_ZNK5blink9LayoutBox24HasRelativeLogicalHeightEv(%"class.blink::LayoutBox"* %2) #15
  br i1 %3, label %4, label %20

4:                                                ; preds = %1
  %5 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 0
  %12 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 5, i32 0, i32 0
  %13 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %13, i64 0, i32 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %13, i64 0, i32 3
  %16 = select i1 %11, %"class.blink::Length"* %14, %"class.blink::Length"* %15
  %17 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %16, i64 0, i32 2
  %18 = load i8, i8* %17, align 1
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %4, %1
  %21 = tail call zeroext i1 @_ZNK5blink9LayoutBox33NeedsPreferredWidthsRecalculationEv(%"class.blink::LayoutBox"* %2) #15
  br label %22

22:                                               ; preds = %20, %4
  %23 = phi i1 [ true, %4 ], [ %21, %20 ]
  ret i1 %23
}

declare zeroext i1 @_ZNK5blink9LayoutBox33NeedsPreferredWidthsRecalculationEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare void @_ZN5blink12LayoutObject12ImageChangedEPNS_20ImageResourceContentENS_21ImageResourceObserver20CanDeferInvalidationE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*, i32) unnamed_addr #3

declare void @_ZN5blink12LayoutObject19ImageNotifyFinishedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #3

declare void @_ZN5blink12LayoutObject23NotifyImageFullyRemovedEPNS_20ImageResourceContentE(%"class.blink::LayoutObject"*, %"class.blink::ImageResourceContent"*) unnamed_addr #3

declare zeroext i1 @_ZN5blink12LayoutObject15WillRenderImageEv(%"class.blink::LayoutObject"*) unnamed_addr #3

declare zeroext i1 @_ZN5blink12LayoutObject23GetImageAnimationPolicyERNS_5mojom20ImageAnimationPolicyE(%"class.blink::LayoutObject"*, i32* dereferenceable(4)) unnamed_addr #3

declare i64 @_ZNK5blink9LayoutBox23ComputeResourcePriorityEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #3

declare i32 @_ZNK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZN5blink11LayoutBlock15VirtualChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1
  ret %"class.blink::LayoutObjectChildList"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObjectChildList"* @_ZNK5blink11LayoutBlock15VirtualChildrenEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 1
  ret %"class.blink::LayoutObjectChildList"* %2
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject15CanHaveChildrenEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutObject"* %0 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %3 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %3, i64 13
  %5 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %4, align 8
  %6 = tail call %"class.blink::LayoutObjectChildList"* %5(%"class.blink::LayoutObject"* %0) #15
  %7 = icmp ne %"class.blink::LayoutObjectChildList"* %6, null
  ret i1 %7
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsChildAllowedEPS0_RKNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject28AddChildIgnoringContinuationEPS0_S1_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.blink::LayoutObject"* %0 to void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)***
  %5 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %5, i64 16
  %7 = load void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*)** %6, align 8
  tail call void %7(%"class.blink::LayoutObject"* %0, %"class.blink::LayoutObject"* %1, %"class.blink::LayoutObject"* %2) #15
  ret void
}

declare void @_ZN5blink12LayoutObject11RemoveChildEPS0_(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23CreatesAnonymousWrapperEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink20LayoutBoxModelObject16IsBoxModelObjectEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject7IsImageEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock26IsInlineBlockOrInlineTableEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBlock", %"class.blink::LayoutBlock"* %0, i64 0, i32 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 1207959552
  %6 = icmp eq i96 %5, 1207959552
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock13IsLayoutBlockEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject17IsLayoutBlockFlowEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject18IsLayoutFlowThreadEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject14IsLayoutInlineEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsLayoutEmbeddedContentEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject16IsLayoutNGObjectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableInterface"* @_ZNK5blink12LayoutObject24ToLayoutNGTableInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableSectionInterface"* @_ZNK5blink12LayoutObject31ToLayoutNGTableSectionInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableSectionInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableRowInterface"* @_ZNK5blink12LayoutObject27ToLayoutNGTableRowInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableRowInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGTableCellInterface"* @_ZNK5blink12LayoutObject28ToLayoutNGTableCellInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGTableCellInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutNGGridInterface"* @_ZNK5blink12LayoutObject23ToLayoutNGGridInterfaceEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutNGGridInterface"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject23SetNeedsTransformUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject24SetNeedsBoundariesUpdateEv(%"class.blink::LayoutObject"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject33HasNonIsolatedBlendingDescendantsEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject38DescendantIsolationRequirementsChangedENS0_24DescendantIsolationStateE(%"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17ObjectBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #3

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject31VisualRectInLocalSVGCoordinatesEv(%"class.blink::LayoutObject"*) unnamed_addr #3

declare { <2 x float>, <2 x float> } @_ZNK5blink12LayoutObject17StrokeBoundingBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #3

declare void @_ZNK5blink12LayoutObject17LocalSVGTransformEv(%"class.blink::AffineTransform"* sret, %"class.blink::LayoutObject"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25LocalToSVGParentTransformEv(%"class.blink::AffineTransform"* noalias sret, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutObject"* %1 to void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)***
  %4 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)**, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %4, i64 41
  %6 = load void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)*, void (%"class.blink::AffineTransform"*, %"class.blink::LayoutObject"*)** %5, align 8
  tail call void %6(%"class.blink::AffineTransform"* sret %0, %"class.blink::LayoutObject"* %1) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutBoxModelObject"* @_ZNK5blink12LayoutObject19VirtualContinuationEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::LayoutBoxModelObject"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutMultiColumnSpannerPlaceholder"* @_ZNK5blink9LayoutBox18SpannerPlaceholderEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"struct.blink::LayoutBoxRareData"*, %"struct.blink::LayoutBoxRareData"** %2, align 8
  %4 = icmp eq %"struct.blink::LayoutBoxRareData"* %3, null
  br i1 %4, label %8, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.blink::LayoutBoxRareData", %"struct.blink::LayoutBoxRareData"* %3, i64 0, i32 0
  %7 = load %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutMultiColumnSpannerPlaceholder"** %6, align 8
  br label %8

8:                                                ; preds = %1, %5
  %9 = phi %"class.blink::LayoutMultiColumnSpannerPlaceholder"* [ %7, %5 ], [ null, %1 ]
  ret %"class.blink::LayoutMultiColumnSpannerPlaceholder"* %9
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::LayoutObject"* @_ZNK5blink12LayoutObject13HoverAncestorEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %0, i64 0, i32 7
  %3 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %2, align 8
  ret %"class.blink::LayoutObject"* %3
}

declare void @_ZN5blink12LayoutObject37InvalidateSubtreeLayoutForFontUpdatesEv(%"class.blink::LayoutObject"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink9LayoutBox18HasInlineFragmentsEv(%"class.blink::LayoutBox"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox28FirstInlineFragmentItemIndexEv(%"class.blink::LayoutBox"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 268435456
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 11
  %9 = bitcast %union.anon.1884* %8 to i32*
  %10 = load i32, i32* %9, align 8
  br label %11

11:                                               ; preds = %1, %7
  %12 = phi i32 [ %10, %7 ], [ 0, %1 ]
  ret i32 %12
}

declare void @_ZN5blink9LayoutBox33ClearFirstInlineFragmentItemIndexEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare void @_ZN5blink9LayoutBox31SetFirstInlineFragmentItemIndexEj(%"class.blink::LayoutBox"*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject16SubtreeDidChangeEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink12LayoutObject17UpdateFromElementEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink12LayoutObject19AddAnnotatedRegionsERN3WTF6VectorINS_20AnnotatedRegionValueELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutObject"*, %"class.WTF::Vector.1460"* dereferenceable(16)) unnamed_addr #3

declare zeroext i1 @_ZNK5blink12LayoutObject35CanHaveAdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #3

declare i64 @_ZNK5blink12LayoutObject28AdditionalCompositingReasonsEv(%"class.blink::LayoutObject"*) unnamed_addr #3

declare %"class.blink::Node"* @_ZNK5blink12LayoutObject14NodeForHitTestEv(%"class.blink::LayoutObject"*) unnamed_addr #3

declare void @_ZNK5blink12LayoutObject19UpdateHitTestResultERNS_13HitTestResultERKNS_14PhysicalOffsetE(%"class.blink::LayoutObject"*, %"class.blink::HitTestResult"* dereferenceable(112), %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #3

declare zeroext i1 @_ZN5blink9LayoutBox11NodeAtPointERNS_13HitTestResultERKNS_15HitTestLocationERKNS_14PhysicalOffsetENS_13HitTestActionE(%"class.blink::LayoutBox"*, %"class.blink::HitTestResult"* dereferenceable(112), %"class.blink::HitTestLocation"* dereferenceable(72), %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #3

declare void @_ZN5blink12LayoutObject26DirtyLinesFromChangedChildEPS0_NS_15MarkingBehaviorE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i32) unnamed_addr #3

declare { i64, i64 } @_ZNK5blink12LayoutObject42AbsoluteBoundingBoxRectHandlingEmptyInlineEj(%"class.blink::LayoutObject"*, i32) unnamed_addr #3

declare void @_ZNK5blink9LayoutBox13AbsoluteQuadsERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBox"*, %"class.WTF::Vector.3456"*, i32) unnamed_addr #3

declare { <2 x float>, <2 x float> } @_ZNK5blink9LayoutBox36LocalBoundingBoxRectForAccessibilityEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare i32 @_ZNK5blink12LayoutObject9GetCursorERKNS_14PhysicalOffsetERN2ui6CursorE(%"class.blink::LayoutObject"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), %"class.ui::Cursor"*) unnamed_addr #3

declare { i64, i64 } @_ZNK5blink12LayoutObject20VisualRectInDocumentENS_15VisualRectFlagsE(%"class.blink::LayoutObject"*, i32) unnamed_addr #3

declare zeroext i1 @_ZNK5blink9LayoutBox38MapToVisualRectInAncestorSpaceInternalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateENS_15VisualRectFlagsE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink12LayoutObject12ColumnOffsetERKNS_11LayoutPointE(%"class.blink::LayoutObject"*, %"class.blink::LayoutPoint"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink12LayoutObject6lengthEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink12LayoutObject24LocalSelectionVisualRectEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret { i64, i64 } zeroinitializer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject23IsDeprecatedFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsFlexibleBoxEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject37IsFlexibleBoxIncludingDeprecatedAndNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject24IsFlexibleBoxIncludingNGEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject13IsCombineTextEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZNK5blink9LayoutBox18MapLocalToAncestorEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #3

declare void @_ZNK5blink9LayoutBox18MapAncestorToLocalEPKNS_20LayoutBoxModelObjectERNS_14TransformStateEj(%"class.blink::LayoutBox"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::TransformState"* dereferenceable(64), i32) unnamed_addr #3

declare { i64, i64 } @_ZNK5blink12LayoutObject8ViewRectEv(%"class.blink::LayoutObject"*) unnamed_addr #3

declare void @_ZNK5blink12LayoutObject28InvalidateDisplayItemClientsENS_23PaintInvalidationReasonE(%"class.blink::LayoutObject"*, i8 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::DisplayItemClient"* @_ZNK5blink12LayoutObject29GetSelectionDisplayItemClientEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::DisplayItemClient"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink12LayoutObject25UpdateAnonymousChildStyleEPKS0_RNS_13ComputedStyleE(%"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::ComputedStyle"* dereferenceable(104)) unnamed_addr #0 comdat align 2 {
  ret void
}

declare { i64, i64 } @_ZNK5blink9LayoutBox9DebugRectEv(%"class.blink::LayoutBox"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject28VisualRectRespectsVisibilityEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject8IsOfTypeENS0_16LayoutObjectTypeE(%"class.blink::LayoutObject"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink12LayoutObject10DeleteThisEv(%"class.blink::LayoutObject"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink12LayoutObject36AnonymousHasStylePropagationOverrideEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare void @_ZN5blink9LayoutBox43InLayoutNGInlineFormattingContextWillChangeEb(%"class.blink::LayoutBox"*, i1 zeroext) unnamed_addr #3

declare void @_ZN5blink9LayoutBox16InsertedIntoTreeEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare void @_ZN5blink9LayoutBox21WillBeRemovedFromTreeEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare void @_ZN5blink9LayoutBox33EnsureIsReadyForPaintInvalidationEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare void @_ZN5blink9LayoutBox15ClearPaintFlagsEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare { i64, i64 } @_ZNK5blink9LayoutBox33LocalVisualRectIgnoringVisibilityEv(%"class.blink::LayoutBox"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink12LayoutObject26CanBeSelectionLeafInternalEv(%"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i64 @_ZNK5blink9LayoutBox27OffsetFromContainerInternalEPKNS_12LayoutObjectEb(%"class.blink::LayoutBox"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox26FlipForWritingModeInternalENS_10LayoutUnitES1_PKS0_(%"class.blink::LayoutBox"*, i32, i32, %"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %6 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %6, i64 0, i32 0, i32 9
  %8 = bitcast [20 x i8]* %7 to i160*
  %9 = load i160, i160* %8, align 8
  %10 = and i160 %9, 15211807202738752817960438464512
  %11 = icmp eq i160 %10, 5070602400912917605986812821504
  br i1 %11, label %12, label %27, !prof !4

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = icmp slt i32 %2, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %1, i32 %2) #15
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !4
  %21 = icmp sgt i32 %20, -1
  %22 = select i1 %21, i32 -2147483648, i32 2147483647
  %23 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %14, i32 %20) #15
  %24 = extractvalue { i32, i1 } %23, 1
  %25 = extractvalue { i32, i1 } %23, 0
  %26 = select i1 %24, i32 %22, i32 %25, !prof !4
  br label %27

27:                                               ; preds = %4, %12
  %28 = phi i32 [ %26, %12 ], [ %1, %4 ]
  ret i32 %28
}

declare %"class.blink::LayoutBlock"* @_ZNK5blink20LayoutBoxModelObject15StickyContainerEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #3

declare i32 @_ZNK5blink9LayoutBox10OffsetLeftEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #3

declare i32 @_ZNK5blink9LayoutBox9OffsetTopEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11OffsetWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox12OffsetHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @_ZNK5blink9LayoutBox23PixelSnappedOffsetWidthEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #3

declare i32 @_ZNK5blink9LayoutBox24PixelSnappedOffsetHeightEPKNS_7ElementE(%"class.blink::LayoutBox"*, %"class.blink::Element"*) unnamed_addr #3

declare i32 @_ZNK5blink9LayoutBox17LayerTypeRequiredEv(%"class.blink::LayoutBox"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox17BorderBoundingBoxEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2
  %3 = bitcast %"class.blink::LayoutRect"* %2 to i64*
  %4 = load i64, i64* %3, align 4
  %5 = trunc i64 %4 to i32
  %6 = lshr i64 %4, 32
  %7 = trunc i64 %6 to i32
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 2, i32 1
  %9 = bitcast %"class.blink::LayoutSize"* %8 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = trunc i64 %10 to i32
  %12 = lshr i64 %10, 32
  %13 = trunc i64 %12 to i32
  %14 = srem i32 %5, 64
  %15 = icmp slt i32 %11, 0
  %16 = select i1 %15, i32 -2147483648, i32 2147483647
  %17 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %11) #15
  %18 = extractvalue { i32, i1 } %17, 1
  %19 = extractvalue { i32, i1 } %17, 0
  %20 = select i1 %18, i32 %16, i32 %19, !prof !4
  %21 = sdiv i32 %20, 64
  %22 = srem i32 %20, 64
  %23 = add nsw i32 %22, 32
  %24 = ashr i32 %23, 6
  %25 = add nsw i32 %14, 32
  %26 = ashr i32 %25, 6
  %27 = sub nsw i32 %21, %26
  %28 = add nsw i32 %24, %27
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %36

30:                                               ; preds = %1
  %31 = add i32 %11, 4
  %32 = icmp ugt i32 %31, 8
  br i1 %32, label %33, label %36, !prof !118

33:                                               ; preds = %30
  %34 = icmp sgt i32 %11, 0
  %35 = select i1 %34, i32 1, i32 -1
  br label %36

36:                                               ; preds = %33, %30, %1
  %37 = phi i32 [ %35, %33 ], [ %28, %1 ], [ 0, %30 ]
  %38 = srem i32 %7, 64
  %39 = icmp slt i32 %13, 0
  %40 = select i1 %39, i32 -2147483648, i32 2147483647
  %41 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %38, i32 %13) #15
  %42 = extractvalue { i32, i1 } %41, 1
  %43 = extractvalue { i32, i1 } %41, 0
  %44 = select i1 %42, i32 %40, i32 %43, !prof !4
  %45 = sdiv i32 %44, 64
  %46 = srem i32 %44, 64
  %47 = add nsw i32 %46, 32
  %48 = ashr i32 %47, 6
  %49 = add nsw i32 %38, 32
  %50 = ashr i32 %49, 6
  %51 = sub nsw i32 %45, %50
  %52 = add nsw i32 %48, %51
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %60

54:                                               ; preds = %36
  %55 = add i32 %13, 4
  %56 = icmp ugt i32 %55, 8
  br i1 %56, label %57, label %60, !prof !118

57:                                               ; preds = %54
  %58 = icmp sgt i32 %13, 0
  %59 = select i1 %58, i32 1, i32 -1
  br label %60

60:                                               ; preds = %36, %54, %57
  %61 = phi i32 [ %59, %57 ], [ %52, %36 ], [ 0, %54 ]
  %62 = zext i32 %61 to i64
  %63 = shl nuw i64 %62, 32
  %64 = zext i32 %37 to i64
  %65 = or i64 %63, %64
  %66 = insertvalue { i64, i64 } { i64 0, i64 undef }, i64 %65, 1
  ret { i64, i64 } %66
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink9LayoutBox26PhysicalVisualOverflowRectEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = tail call { i64, i64 } @_ZNK5blink9LayoutBox18VisualOverflowRectEv(%"class.blink::LayoutBox"* %0) #15
  %3 = extractvalue { i64, i64 } %2, 0
  %4 = trunc i64 %3 to i32
  %5 = and i64 %3, -4294967296
  %6 = extractvalue { i64, i64 } %2, 1
  %7 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %8 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %8, i64 0, i32 0, i32 9
  %10 = bitcast [20 x i8]* %9 to i160*
  %11 = load i160, i160* %10, align 8
  %12 = and i160 %11, 15211807202738752817960438464512
  %13 = icmp eq i160 %12, 5070602400912917605986812821504
  br i1 %13, label %14, label %22, !prof !4

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %16 = trunc i64 %6 to i32
  %17 = bitcast %"class.blink::LayoutBox"* %0 to i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)***
  %18 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)**, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*** %17, align 8
  %19 = getelementptr inbounds i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %18, i64 106
  %20 = load i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)*, i32 (%"class.blink::LayoutObject"*, i32, i32, %"class.blink::LayoutBox"*)** %19, align 8
  %21 = tail call i32 %20(%"class.blink::LayoutObject"* %15, i32 %4, i32 %16, %"class.blink::LayoutBox"* null) #15
  br label %22

22:                                               ; preds = %1, %14
  %23 = phi i32 [ %21, %14 ], [ %4, %1 ]
  %24 = zext i32 %23 to i64
  %25 = or i64 %5, %24
  %26 = insertvalue { i64, i64 } undef, i64 %25, 0
  %27 = insertvalue { i64, i64 } %26, i64 %6, 1
  ret { i64, i64 } %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject10PaddingTopEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 16
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #15
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject13PaddingBottomEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 13
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #15
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject11PaddingLeftEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 14
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #15
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject12PaddingRightEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = bitcast %"class.blink::ComputedStyle"** %2 to %"class.blink::ComputedStyleBase"**
  %4 = load %"class.blink::ComputedStyleBase"*, %"class.blink::ComputedStyleBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %4, i64 0, i32 7, i32 0, i32 0
  %6 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %6, i64 0, i32 15
  %8 = tail call i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"* %0, %"class.blink::Length"* dereferenceable(8) %7) #15
  ret i32 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject9BorderTopEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = icmp ult i16 %7, 8192
  br i1 %8, label %12, label %9

9:                                                ; preds = %1
  %10 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 26, i32 0
  %11 = load i32, i32* %10, align 4
  br label %12

12:                                               ; preds = %1, %9
  %13 = phi i32 [ %11, %9 ], [ 0, %1 ]
  ret i32 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject12BorderBottomEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 14
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 23, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject10BorderLeftEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 224
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 24, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink20LayoutBoxModelObject11BorderRightEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutBoxModelObject"* %0, i64 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 7, i32 0, i32 0
  %5 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 27
  %7 = load i16, i16* %6, align 8
  %8 = and i16 %7, 3584
  %9 = icmp eq i16 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %5, i64 0, i32 25, i32 0
  %12 = load i32, i32* %11, align 4
  br label %13

13:                                               ; preds = %1, %10
  %14 = phi i32 [ %12, %10 ], [ 0, %1 ]
  ret i32 %14
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i64, i64 } @_ZNK5blink20LayoutBoxModelObject16BorderBoxOutsetsEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::LayoutBoxModelObject"* %0 to i32 (%"class.blink::LayoutBoxModelObject"*)***
  %3 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %4 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %3, i64 122
  %5 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %4, align 8
  %6 = tail call i32 %5(%"class.blink::LayoutBoxModelObject"* %0) #15
  %7 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %7, i64 125
  %9 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::LayoutBoxModelObject"* %0) #15
  %11 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %12 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %11, i64 123
  %13 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %12, align 8
  %14 = tail call i32 %13(%"class.blink::LayoutBoxModelObject"* %0) #15
  %15 = load i32 (%"class.blink::LayoutBoxModelObject"*)**, i32 (%"class.blink::LayoutBoxModelObject"*)*** %2, align 8
  %16 = getelementptr inbounds i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %15, i64 124
  %17 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::LayoutBoxModelObject"* %0) #15
  %19 = zext i32 %10 to i64
  %20 = shl nuw i64 %19, 32
  %21 = zext i32 %6 to i64
  %22 = or i64 %20, %21
  %23 = insertvalue { i64, i64 } undef, i64 %22, 0
  %24 = zext i32 %18 to i64
  %25 = shl nuw i64 %24, 32
  %26 = zext i32 %14 to i64
  %27 = or i64 %25, %26
  %28 = insertvalue { i64, i64 } %23, i64 %27, 1
  ret { i64, i64 } %28
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox9MarginTopEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox12MarginBottomEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 2, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox10MarginLeftEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 3, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox11MarginRightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 1, i32 0
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

declare i32 @_ZNK5blink9LayoutBox37ContainingBlockLogicalWidthForContentEv(%"class.blink::LayoutBox"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink20LayoutBoxModelObject20ChildBecameNonInlineEPNS_12LayoutObjectE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZNK5blink9LayoutBox33BackgroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* dereferenceable(16)) unnamed_addr #3

declare zeroext i1 @_ZNK5blink9LayoutBox33TextIsKnownToBeOnOpaqueBackgroundEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare i32 @_ZNK5blink9LayoutBox35OverrideContainingBlockContentWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare i32 @_ZNK5blink9LayoutBox36OverrideContainingBlockContentHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink9LayoutBox38HasOverrideContainingBlockContentWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink9LayoutBox39HasOverrideContainingBlockContentHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare void @_ZNK5blink20LayoutBoxModelObject20AbsoluteQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEEj(%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.3456"*, i32) unnamed_addr #3

declare void @_ZNK5blink20LayoutBoxModelObject17LocalQuadsForSelfERN3WTF6VectorINS_9FloatQuadELj0ENS1_18PartitionAllocatorEEE(%"class.blink::LayoutBoxModelObject"*, %"class.WTF::Vector.3456"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink20LayoutBoxModelObject33AccumulateRelativePositionOffsetsEv(%"class.blink::LayoutBoxModelObject"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

declare void @_ZN5blink20LayoutBoxModelObject14MoveChildrenToEPS0_PNS_12LayoutObjectES3_S3_b(%"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutBoxModelObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i1 zeroext) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox31BackgroundShouldAlwaysBeClippedEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink9LayoutBox32LogicalHeightWithVisibleOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare %"class.blink::LayoutBox"* @_ZNK5blink9LayoutBox17LocationContainerEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink9LayoutBox14HasTopOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare zeroext i1 @_ZNK5blink9LayoutBox15HasLeftOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare void @_ZN5blink9LayoutBox23AddVisualEffectOverflowEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare i32 @_ZNK5blink9LayoutBox11ScrollWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare i32 @_ZNK5blink9LayoutBox12ScrollHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox21IsSelfCollapsingBlockEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox21CollapsedMarginBeforeEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8, !noalias !119
  %8 = lshr i160 %7, 102
  %9 = trunc i160 %8 to i8
  %10 = and i8 %9, 3
  %11 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  switch i8 %10, label %12 [
    i8 0, label %21
    i8 1, label %13
  ]

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12, %1
  %14 = phi { i64, i64 } [ { i64 1033, i64 0 }, %12 ], [ { i64 1041, i64 0 }, %1 ]
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  %17 = getelementptr inbounds i8, i8* %11, i64 %16
  %18 = bitcast i8* %17 to %"class.blink::LayoutBoxModelObject"*
  %19 = and i64 %15, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %13, %1
  %22 = phi %"class.blink::LayoutBoxModelObject"* [ %18, %13 ], [ %2, %1 ]
  %23 = phi i8* [ %17, %13 ], [ %11, %1 ]
  %24 = phi i64 [ %15, %13 ], [ 1017, %1 ]
  %25 = bitcast i8* %23 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %24, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %29, align 8
  br label %33

31:                                               ; preds = %13
  %32 = inttoptr i64 %15 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %33

33:                                               ; preds = %21, %31
  %34 = phi %"class.blink::LayoutBoxModelObject"* [ %22, %21 ], [ %18, %31 ]
  %35 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %30, %21 ], [ %32, %31 ]
  %36 = tail call i32 %35(%"class.blink::LayoutBoxModelObject"* %34) #15
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox20CollapsedMarginAfterEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %4 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %4, i64 0, i32 0, i32 9
  %6 = bitcast [20 x i8]* %5 to i160*
  %7 = load i160, i160* %6, align 8, !noalias !122
  %8 = lshr i160 %7, 102
  %9 = trunc i160 %8 to i8
  %10 = and i8 %9, 3
  %11 = bitcast %"class.blink::LayoutBox"* %0 to i8*
  switch i8 %10, label %12 [
    i8 0, label %21
    i8 1, label %13
  ]

12:                                               ; preds = %1
  br label %13

13:                                               ; preds = %12, %1
  %14 = phi { i64, i64 } [ { i64 1041, i64 0 }, %12 ], [ { i64 1033, i64 0 }, %1 ]
  %15 = extractvalue { i64, i64 } %14, 0
  %16 = extractvalue { i64, i64 } %14, 1
  %17 = getelementptr inbounds i8, i8* %11, i64 %16
  %18 = bitcast i8* %17 to %"class.blink::LayoutBoxModelObject"*
  %19 = and i64 %15, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %31, label %21

21:                                               ; preds = %13, %1
  %22 = phi %"class.blink::LayoutBoxModelObject"* [ %18, %13 ], [ %2, %1 ]
  %23 = phi i8* [ %17, %13 ], [ %11, %1 ]
  %24 = phi i64 [ %15, %13 ], [ 1025, %1 ]
  %25 = bitcast i8* %23 to i8**
  %26 = load i8*, i8** %25, align 8
  %27 = add i64 %24, -1
  %28 = getelementptr i8, i8* %26, i64 %27
  %29 = bitcast i8* %28 to i32 (%"class.blink::LayoutBoxModelObject"*)**
  %30 = load i32 (%"class.blink::LayoutBoxModelObject"*)*, i32 (%"class.blink::LayoutBoxModelObject"*)** %29, align 8
  br label %33

31:                                               ; preds = %13
  %32 = inttoptr i64 %15 to i32 (%"class.blink::LayoutBoxModelObject"*)*
  br label %33

33:                                               ; preds = %21, %31
  %34 = phi %"class.blink::LayoutBoxModelObject"* [ %22, %21 ], [ %18, %31 ]
  %35 = phi i32 (%"class.blink::LayoutBoxModelObject"*)* [ %30, %21 ], [ %32, %31 ]
  %36 = tail call i32 %35(%"class.blink::LayoutBoxModelObject"* %34) #15
  ret i32 %36
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11LayoutBlock23IsInSelfHitTestingPhaseENS_13HitTestActionE(%"class.blink::LayoutBlock"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 2
  ret i1 %3
}

declare %"class.blink::InlineBox"* @_ZN5blink9LayoutBox15CreateInlineBoxEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare i32 @_ZNK5blink9LayoutBox10BreakAfterEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare i32 @_ZNK5blink9LayoutBox11BreakBeforeEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink9LayoutBox13StartPageNameEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZNK5blink9LayoutBox11EndPageNameEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare void @_ZN5blink9LayoutBox18UpdateLogicalWidthEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare void @_ZNK5blink9LayoutBox20ComputeLogicalHeightENS_10LayoutUnitES1_RNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, i32, i32, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZNK5blink9LayoutBox13IntrinsicSizeEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i64 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox29IntrinsicContentLogicalHeightEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 15211807202738752817960438464512
  %8 = icmp eq i160 %7, 0
  br i1 %8, label %9, label %11

9:                                                ; preds = %1
  %10 = tail call zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %0) #15
  br i1 %10, label %13, label %24

11:                                               ; preds = %1
  %12 = tail call zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %0) #15
  br i1 %12, label %13, label %24

13:                                               ; preds = %9, %11
  %14 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %15 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 9
  %16 = bitcast [20 x i8]* %15 to i160*
  %17 = load i160, i160* %16, align 8
  %18 = and i160 %17, 15211807202738752817960438464512
  %19 = icmp eq i160 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %13
  %21 = tail call i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"* %0) #15
  br label %27

22:                                               ; preds = %13
  %23 = tail call i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"* %0) #15
  br label %27

24:                                               ; preds = %9, %11
  %25 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 4, i32 0
  %26 = load i32, i32* %25, align 8
  br label %27

27:                                               ; preds = %22, %20, %24
  %28 = phi i32 [ %26, %24 ], [ %21, %20 ], [ %23, %22 ]
  ret i32 %28
}

declare i32 @_ZNK5blink9LayoutBox27ComputeReplacedLogicalWidthENS_22ShouldComputePreferredE(%"class.blink::LayoutBox"*, i32) unnamed_addr #3

declare i32 @_ZNK5blink9LayoutBox28ComputeReplacedLogicalHeightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox27ShouldComputeSizeAsReplacedEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 1073741824
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0
  %9 = bitcast %"class.blink::LayoutBox"* %0 to i1 (%"class.blink::LayoutObject"*)***
  %10 = load i1 (%"class.blink::LayoutObject"*)**, i1 (%"class.blink::LayoutObject"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %10, i64 22
  %12 = load i1 (%"class.blink::LayoutObject"*)*, i1 (%"class.blink::LayoutObject"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::LayoutObject"* %8) #15
  %14 = xor i1 %13, true
  br label %15

15:                                               ; preds = %1, %7
  %16 = phi i1 [ false, %1 ], [ %14, %7 ]
  ret i1 %16
}

declare zeroext i1 @_ZNK5blink9LayoutBox28CanBeProgramaticallyScrolledEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare void @_ZN5blink9LayoutBox10AutoscrollERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox47ShouldPlaceBlockDirectionScrollbarOnLogicalLeftEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %3 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %3, i64 0, i32 0, i32 9
  %5 = bitcast [20 x i8]* %4 to i160*
  %6 = load i160, i160* %5, align 8
  %7 = and i160 %6, 41553586675481359781061931072225280
  %8 = icmp eq i160 %7, 41538374868278621028243970633760768
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox16ScrollsOverflowXEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 132226261520350065983488
  %14 = icmp eq i160 %13, 75557863725914323419136
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = lshr i160 %12, 74
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 5
  %19 = or i32 %18, 2
  %20 = icmp eq i32 %19, 3
  br label %21

21:                                               ; preds = %1, %15, %7
  %22 = phi i1 [ false, %1 ], [ true, %7 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox16ScrollsOverflowYEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %3 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %2 to i96*
  %4 = load i96, i96* %3, align 4
  %5 = and i96 %4, 8589934592
  %6 = icmp eq i96 %5, 0
  br i1 %6, label %21, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %11 = bitcast [20 x i8]* %10 to i160*
  %12 = load i160, i160* %11, align 8
  %13 = and i160 %12, 1057810092162800527867904
  %14 = icmp eq i160 %13, 604462909807314587353088
  br i1 %14, label %21, label %15

15:                                               ; preds = %7
  %16 = lshr i160 %12, 77
  %17 = trunc i160 %16 to i32
  %18 = and i32 %17, 5
  %19 = or i32 %18, 2
  %20 = icmp eq i32 %19, 3
  br label %21

21:                                               ; preds = %1, %15, %7
  %22 = phi i1 [ false, %1 ], [ true, %7 ], [ %20, %15 ]
  ret i1 %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox25IsIntrinsicallyScrollableENS_20ScrollbarOrientationE(%"class.blink::LayoutBox"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK5blink9LayoutBox25GetPaginationBreakabilityENS0_19FragmentationEngineE(%"class.blink::LayoutBox"*, i32) unnamed_addr #3

declare { i64, i64 } @_ZNK5blink9LayoutBox16OverflowClipRectERKNS_14PhysicalOffsetENS_28OverlayScrollbarClipBehaviorE(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset"* dereferenceable(8), i32) unnamed_addr #3

declare void @_ZNK5blink9LayoutBox28PaintBoxDecorationBackgroundERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #3

declare void @_ZNK5blink9LayoutBox9PaintMaskERKNS_9PaintInfoERKNS_14PhysicalOffsetE(%"class.blink::LayoutBox"*, %"struct.blink::PaintInfo"*, %"struct.blink::PhysicalOffset"* dereferenceable(8)) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox27CreatesNewFormattingContextEv(%"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK5blink9LayoutBox27SelfAlignmentNormalBehaviorEPKS0_(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"*) unnamed_addr #0 comdat align 2 {
  ret i32 3
}

declare zeroext i1 @_ZNK5blink9LayoutBox33ForegroundIsKnownToBeOpaqueInRectERKNS_12PhysicalRectEj(%"class.blink::LayoutBox"*, %"struct.blink::PhysicalRect"* dereferenceable(16), i32) unnamed_addr #3

declare zeroext i1 @_ZNK5blink9LayoutBox36ComputeBackgroundIsKnownToBeObscuredEv(%"class.blink::LayoutBox"*) unnamed_addr #3

declare void @_ZNK5blink9LayoutBox29ComputePositionedLogicalWidthERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #3

declare void @_ZNK5blink9LayoutBox30ComputePositionedLogicalHeightERNS0_27LogicalExtentComputedValuesE(%"class.blink::LayoutBox"*, %"struct.blink::LayoutBox::LogicalExtentComputedValues"* dereferenceable(24)) unnamed_addr #3

declare zeroext i8 @_ZNK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutBox"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::NGPhysicalBoxFragment"* @_ZNK5blink11LayoutBlock15CurrentFragmentEv(%"class.blink::LayoutBlock"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::NGPhysicalBoxFragment"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink11LayoutBlock31AdjustInlineDirectionLineBoundsEjRNS_10LayoutUnitES2_(%"class.blink::LayoutBlock"*, i32, %"class.blink::LayoutUnit"* dereferenceable(4), %"class.blink::LayoutUnit"* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
declare %"class.WTF::StringImpl"* @_ZThn8_NK5blink12LayoutObject9DebugNameEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare i32 @_ZThn8_NK5blink12LayoutObject11OwnerNodeIdEv(%"class.blink::LayoutObject"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare zeroext i8 @_ZThn8_NK5blink9LayoutBox32VisualRectOutsetForRasterEffectsEv(%"class.blink::LayoutBox"*) unnamed_addr #0 align 2

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink6Length17IsCalculatedEqualERKS0_(%"class.blink::Length"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #3

declare %"class.blink::DisplayLockContext"* @_ZNK5blink7Element33GetDisplayLockContextFromRareDataEv(%"class.blink::Element"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink18DisplayLockContext22ShouldPrePaintChildrenEv(%"class.blink::DisplayLockContext"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink18DisplayLockContext20ShouldLayoutChildrenEv(%"class.blink::DisplayLockContext"*) local_unnamed_addr #3

declare %"class.blink::LocalFrameView"* @_ZNK5blink8Document4ViewEv(%"class.blink::Document"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #10

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i32(i32) #11

declare void @_ZN5blink9LayoutBox26AddVisualOverflowFromChildERKS0_RKNS_10LayoutSizeE(%"class.blink::LayoutBox"*, %"class.blink::LayoutBox"* dereferenceable(216), %"class.blink::LayoutSize"* dereferenceable(8)) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink9LayoutBox31StretchesToViewportInQuirksModeEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare void @_ZN5blink12LayoutObject44MarkSelfPaintingLayerForVisualOverflowRecalcEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3

declare void @_ZN5blink12LayoutObject22SetNeedsOverflowRecalcENS0_18OverflowRecalcTypeE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #3

declare void @_ZN5blink12LayoutObject27MarkContainerChainForLayoutEbPNS_18SubtreeLayoutScopeE(%"class.blink::LayoutObject"*, i1 zeroext, %"class.blink::SubtreeLayoutScope"*) local_unnamed_addr #3

declare %"class.blink::LayoutFlowThread"* @_ZNK5blink12LayoutObject31LocateFlowThreadContainingBlockEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3

declare void @_ZN5blink9LayoutBox15LocationChangedEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare i32 @_ZN4base14PlatformThread9CurrentIdEv() local_unnamed_addr #3

declare i64 @_ZN4base6subtle28TimeTicksNowIgnoringOverrideEv() local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampIZN5blink12LayoutObject14SetNeedsLayoutEPKcNS1_15MarkingBehaviorEPNS1_18SubtreeLayoutScopeEEUlN8perfetto11TracedValueEE_EEN4base11trace_event16TraceEventHandleEcPKhS4_S4_yiRKNSB_9TimeTicksEjyS4_OT_(i8 signext, i8*, i8*, i8*, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), i32, i64, i8*, %class.anon.3595* dereferenceable(16)) local_unnamed_addr #5 comdat {
  %12 = alloca %"class.perfetto::TracedValue", align 8
  %13 = alloca %"class.perfetto::TracedValue", align 8
  %14 = alloca %"class.base::trace_event::TraceArguments", align 8
  %15 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %15) #15
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 40, i1 false)
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 0
  store i8 9, i8* %16, align 1
  %17 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 2, i64 0
  store i8* %9, i8** %17, align 8
  %18 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 0
  %19 = bitcast %"class.perfetto::TracedValue"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %19) #15
  %20 = tail call i8* @_Znwm(i64 192) #16
  %21 = bitcast i8* %20 to %"class.protozero::ScatteredHeapBuffer"*
  tail call void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"* nonnull %21, i64 4096, i64 4096) #15
  %22 = getelementptr inbounds i8, i8* %20, i64 80
  %23 = bitcast i8* %22 to %"class.protozero::ScatteredStreamWriter"*
  %24 = bitcast i8* %20 to %"class.protozero::ScatteredStreamWriter::Delegate"*
  tail call void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::ScatteredStreamWriter::Delegate"* nonnull %24) #15
  %25 = getelementptr inbounds i8, i8* %20, i64 120
  %26 = getelementptr inbounds i8, i8* %20, i64 168
  %27 = bitcast i8* %26 to %"class.protozero::MessageArena"*
  tail call void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"* %27) #15
  %28 = bitcast i8* %25 to %"class.protozero::Message"*
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* null, %"class.protozero::MessageArena"* %27) #15
  %29 = getelementptr inbounds i8, i8* %20, i64 24
  %30 = bitcast i8* %29 to i8**
  store i8* %22, i8** %30, align 8
  %31 = bitcast i8* %26 to %"class.std::__1::list"*
  tail call void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"* %31, i64 1) #15
  %32 = bitcast i8* %26 to %"struct.std::__1::__list_node"**
  %33 = load %"struct.std::__1::__list_node"*, %"struct.std::__1::__list_node"** %32, align 8
  %34 = getelementptr inbounds %"struct.std::__1::__list_node", %"struct.std::__1::__list_node"* %33, i64 0, i32 1, i32 1
  store i32 0, i32* %34, align 8
  tail call void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"* %28, %"class.protozero::ScatteredStreamWriter"* %23, %"class.protozero::MessageArena"* %27) #15
  %35 = bitcast %"union.base::trace_event::TraceValue"* %18 to i8**
  store i8* %20, i8** %35, align 8
  %36 = bitcast i8* %25 to %"class.perfetto::protos::pbzero::DebugAnnotation"*
  call void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* nonnull sret %13, %"class.perfetto::protos::pbzero::DebugAnnotation"* %36) #15
  %37 = bitcast %"class.perfetto::TracedValue"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #15
  %38 = getelementptr inbounds %class.anon.3595, %class.anon.3595* %10, i64 0, i32 0
  %39 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %19, i64 16, i1 false) #15
  %40 = getelementptr inbounds %class.anon.3595, %class.anon.3595* %10, i64 0, i32 1
  %41 = load i8**, i8*** %40, align 8
  %42 = load i8*, i8** %41, align 8
  call void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"* nonnull %12, %"class.blink::LayoutObject"* %39, i8* %42) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #15
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %19) #15
  %43 = call i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext %0, i8* %1, i8* %2, i8* %3, i64 %4, i64 %8, i32 %5, %"class.base::TimeTicks"* dereferenceable(8) %6, %"class.base::trace_event::TraceArguments"* nonnull %14, i32 %7) #15
  %44 = load i8, i8* %15, align 8
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %80, label %46

46:                                               ; preds = %11, %75
  %47 = phi i64 [ %76, %75 ], [ 0, %11 ]
  %48 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 1, i64 %47
  %49 = load i8, i8* %48, align 1
  %50 = icmp eq i8 %49, 8
  br i1 %50, label %51, label %62

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %53 = bitcast %"union.base::trace_event::TraceValue"* %52 to %"class.base::trace_event::ConvertableToTraceFormat"**
  %54 = load %"class.base::trace_event::ConvertableToTraceFormat"*, %"class.base::trace_event::ConvertableToTraceFormat"** %53, align 8
  %55 = icmp eq %"class.base::trace_event::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %75, label %56

56:                                               ; preds = %51
  %57 = bitcast %"class.base::trace_event::ConvertableToTraceFormat"* %54 to void (%"class.base::trace_event::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)**, void (%"class.base::trace_event::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.base::trace_event::ConvertableToTraceFormat"*)*, void (%"class.base::trace_event::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.base::trace_event::ConvertableToTraceFormat"* nonnull %54) #15
  %61 = load i8, i8* %48, align 1
  br label %62

62:                                               ; preds = %56, %46
  %63 = phi i8 [ %49, %46 ], [ %61, %56 ]
  %64 = icmp eq i8 %63, 9
  br i1 %64, label %65, label %75

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.base::trace_event::TraceArguments", %"class.base::trace_event::TraceArguments"* %14, i64 0, i32 3, i64 %47
  %67 = bitcast %"union.base::trace_event::TraceValue"* %66 to %"class.protozero::HeapBuffered"**
  %68 = load %"class.protozero::HeapBuffered"*, %"class.protozero::HeapBuffered"** %67, align 8
  %69 = icmp eq %"class.protozero::HeapBuffered"* %68, null
  br i1 %69, label %75, label %70

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 2, i32 1
  call void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"* %71) #15
  %72 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 1
  call void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"* %72) #15
  %73 = getelementptr inbounds %"class.protozero::HeapBuffered", %"class.protozero::HeapBuffered"* %68, i64 0, i32 0
  call void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"* %73) #15
  %74 = bitcast %"class.protozero::HeapBuffered"* %68 to i8*
  call void @_ZdlPv(i8* %74) #16
  br label %75

75:                                               ; preds = %70, %65, %62, %51
  %76 = add nuw nsw i64 %47, 1
  %77 = load i8, i8* %15, align 8
  %78 = zext i8 %77 to i64
  %79 = icmp ult i64 %76, %78
  br i1 %79, label %46, label %80

80:                                               ; preds = %75, %11
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %15) #15
  ret i64 %43
}

declare i64 @_ZN20trace_event_internal37AddTraceEventWithThreadIdAndTimestampEcPKhPKcS3_yyiRKN4base9TimeTicksEPNS4_11trace_event14TraceArgumentsEj(i8 signext, i8*, i8*, i8*, i64, i64, i32, %"class.base::TimeTicks"* dereferenceable(8), %"class.base::trace_event::TraceArguments"*, i32) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZN8perfetto8internal26CreateTracedValueFromProtoEPNS_6protos6pbzero15DebugAnnotationE(%"class.perfetto::TracedValue"* sret, %"class.perfetto::protos::pbzero::DebugAnnotation"*) local_unnamed_addr #3

declare void @_ZN9protozero19ScatteredHeapBufferC1Emm(%"class.protozero::ScatteredHeapBuffer"*, i64, i64) unnamed_addr #3

declare void @_ZN9protozero21ScatteredStreamWriterC1EPNS0_8DelegateE(%"class.protozero::ScatteredStreamWriter"*, %"class.protozero::ScatteredStreamWriter::Delegate"*) unnamed_addr #3

declare void @_ZN9protozero12MessageArenaC1Ev(%"class.protozero::MessageArena"*) unnamed_addr #3

declare void @_ZN9protozero7Message5ResetEPNS_21ScatteredStreamWriterEPNS_12MessageArenaE(%"class.protozero::Message"*, %"class.protozero::ScatteredStreamWriter"*, %"class.protozero::MessageArena"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE6resizeEm(%"class.std::__1::list"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp ugt i64 %4, %1
  br i1 %5, label %6, label %179

6:                                                ; preds = %2
  %7 = lshr i64 %4, 1
  %8 = icmp ult i64 %7, %1
  br i1 %8, label %97, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %10, align 8
  %12 = icmp sgt i64 %1, -1
  br i1 %12, label %34, label %13

13:                                               ; preds = %9
  %14 = bitcast %"struct.std::__1::__list_node_base"* %11 to i64*
  %15 = sub i64 0, %1
  %16 = and i64 %15, 7
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %29, label %18

18:                                               ; preds = %13, %18
  %19 = phi i64* [ %24, %18 ], [ %14, %13 ]
  %20 = phi i64 [ %23, %18 ], [ %1, %13 ]
  %21 = phi i64 [ %25, %18 ], [ %16, %13 ]
  %22 = load i64, i64* %19, align 8
  %23 = add nsw i64 %20, 1
  %24 = inttoptr i64 %22 to i64*
  %25 = add i64 %21, -1
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %18, !llvm.loop !125

27:                                               ; preds = %18
  %28 = inttoptr i64 %22 to i64*
  br label %29

29:                                               ; preds = %13, %27
  %30 = phi i64 [ undef, %13 ], [ %22, %27 ]
  %31 = phi i64* [ %14, %13 ], [ %28, %27 ]
  %32 = phi i64 [ %1, %13 ], [ %23, %27 ]
  %33 = icmp ugt i64 %1, -8
  br i1 %33, label %152, label %82

34:                                               ; preds = %9
  %35 = ptrtoint %"struct.std::__1::__list_node_base"* %11 to i64
  %36 = icmp eq i64 %1, 0
  br i1 %36, label %152, label %37

37:                                               ; preds = %34
  %38 = add nsw i64 %1, -1
  %39 = and i64 %1, 7
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %54, label %41

41:                                               ; preds = %37, %41
  %42 = phi %"struct.std::__1::__list_node_base"* [ %49, %41 ], [ %11, %37 ]
  %43 = phi i64 [ %48, %41 ], [ %1, %37 ]
  %44 = phi i64 [ %50, %41 ], [ %39, %37 ]
  %45 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %42, i64 0, i32 1
  %46 = bitcast %"struct.std::__1::__list_node_base"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %43, -1
  %49 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  %50 = add i64 %44, -1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %41, !llvm.loop !127

52:                                               ; preds = %41
  %53 = inttoptr i64 %47 to %"struct.std::__1::__list_node_base"*
  br label %54

54:                                               ; preds = %37, %52
  %55 = phi %"struct.std::__1::__list_node_base"* [ %11, %37 ], [ %53, %52 ]
  %56 = phi i64 [ %1, %37 ], [ %48, %52 ]
  %57 = phi i64 [ undef, %37 ], [ %47, %52 ]
  %58 = icmp ult i64 %38, 7
  br i1 %58, label %152, label %59

59:                                               ; preds = %54, %59
  %60 = phi %"struct.std::__1::__list_node_base"* [ %81, %59 ], [ %55, %54 ]
  %61 = phi i64 [ %79, %59 ], [ %56, %54 ]
  %62 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %60, i64 0, i32 1
  %63 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %62, align 8
  %64 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %63, i64 0, i32 1
  %65 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %64, align 8
  %66 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %65, i64 0, i32 1
  %67 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %66, align 8
  %68 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %67, i64 0, i32 1
  %69 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %68, align 8
  %70 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %69, i64 0, i32 1
  %71 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %70, align 8
  %72 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %71, i64 0, i32 1
  %73 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %72, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %73, i64 0, i32 1
  %75 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %74, align 8
  %76 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %75, i64 0, i32 1
  %77 = bitcast %"struct.std::__1::__list_node_base"** %76 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = add nsw i64 %61, -8
  %80 = icmp sgt i64 %79, 0
  %81 = inttoptr i64 %78 to %"struct.std::__1::__list_node_base"*
  br i1 %80, label %59, label %152

82:                                               ; preds = %29, %82
  %83 = phi i64* [ %96, %82 ], [ %31, %29 ]
  %84 = phi i64 [ %94, %82 ], [ %32, %29 ]
  %85 = bitcast i64* %83 to i64********
  %86 = load i64*******, i64******** %85, align 8
  %87 = load i64******, i64******* %86, align 8
  %88 = load i64*****, i64****** %87, align 8
  %89 = load i64****, i64***** %88, align 8
  %90 = load i64***, i64**** %89, align 8
  %91 = load i64**, i64*** %90, align 8
  %92 = load i64*, i64** %91, align 8
  %93 = load i64, i64* %92, align 8
  %94 = add nsw i64 %84, 8
  %95 = icmp eq i64 %94, 0
  %96 = inttoptr i64 %93 to i64*
  br i1 %95, label %152, label %82

97:                                               ; preds = %6
  %98 = sub i64 %4, %1
  %99 = sub nsw i64 0, %98
  %100 = icmp slt i64 %98, 1
  br i1 %100, label %123, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::list"* %0 to i64*
  %103 = xor i64 %1, -1
  %104 = add i64 %4, %103
  %105 = and i64 %98, 7
  %106 = icmp eq i64 %105, 0
  br i1 %106, label %118, label %107

107:                                              ; preds = %101, %107
  %108 = phi i64* [ %113, %107 ], [ %102, %101 ]
  %109 = phi i64 [ %112, %107 ], [ %99, %101 ]
  %110 = phi i64 [ %114, %107 ], [ %105, %101 ]
  %111 = load i64, i64* %108, align 8
  %112 = add nsw i64 %109, 1
  %113 = inttoptr i64 %111 to i64*
  %114 = add i64 %110, -1
  %115 = icmp eq i64 %114, 0
  br i1 %115, label %116, label %107, !llvm.loop !128

116:                                              ; preds = %107
  %117 = inttoptr i64 %111 to i64*
  br label %118

118:                                              ; preds = %101, %116
  %119 = phi i64 [ undef, %101 ], [ %111, %116 ]
  %120 = phi i64* [ %102, %101 ], [ %117, %116 ]
  %121 = phi i64 [ %99, %101 ], [ %112, %116 ]
  %122 = icmp ult i64 %104, 7
  br i1 %122, label %152, label %137

123:                                              ; preds = %97
  %124 = ptrtoint %"class.std::__1::list"* %0 to i64
  %125 = icmp eq i64 %98, 0
  br i1 %125, label %152, label %126

126:                                              ; preds = %123
  %127 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  br label %128

128:                                              ; preds = %128, %126
  %129 = phi %"struct.std::__1::__list_node_base"* [ %136, %128 ], [ %127, %126 ]
  %130 = phi i64 [ %134, %128 ], [ %99, %126 ]
  %131 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %129, i64 0, i32 1
  %132 = bitcast %"struct.std::__1::__list_node_base"** %131 to i64*
  %133 = load i64, i64* %132, align 8
  %134 = add nsw i64 %130, -1
  %135 = icmp sgt i64 %134, 0
  %136 = inttoptr i64 %133 to %"struct.std::__1::__list_node_base"*
  br i1 %135, label %128, label %152

137:                                              ; preds = %118, %137
  %138 = phi i64* [ %151, %137 ], [ %120, %118 ]
  %139 = phi i64 [ %149, %137 ], [ %121, %118 ]
  %140 = bitcast i64* %138 to i64********
  %141 = load i64*******, i64******** %140, align 8
  %142 = load i64******, i64******* %141, align 8
  %143 = load i64*****, i64****** %142, align 8
  %144 = load i64****, i64***** %143, align 8
  %145 = load i64***, i64**** %144, align 8
  %146 = load i64**, i64*** %145, align 8
  %147 = load i64*, i64** %146, align 8
  %148 = load i64, i64* %147, align 8
  %149 = add nsw i64 %139, 8
  %150 = icmp eq i64 %149, 0
  %151 = inttoptr i64 %148 to i64*
  br i1 %150, label %152, label %137

152:                                              ; preds = %29, %82, %54, %59, %118, %137, %128, %34, %123
  %153 = phi i64 [ %35, %34 ], [ %124, %123 ], [ %133, %128 ], [ %119, %118 ], [ %148, %137 ], [ %57, %54 ], [ %78, %59 ], [ %30, %29 ], [ %93, %82 ]
  %154 = inttoptr i64 %153 to %"struct.std::__1::__list_node_base"*
  %155 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %156 = icmp eq %"struct.std::__1::__list_node_base"* %155, %154
  br i1 %156, label %218, label %157

157:                                              ; preds = %152
  %158 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %159 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %158, align 8
  %160 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %159, i64 0, i32 1
  %161 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64*
  %162 = load i64, i64* %161, align 8
  %163 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %154, i64 0, i32 0
  %164 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %163, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %164, i64 0, i32 1
  %166 = bitcast %"struct.std::__1::__list_node_base"** %165 to i64*
  store i64 %162, i64* %166, align 8
  %167 = inttoptr i64 %153 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast %"struct.std::__1::__list_node_base"** %160 to i64**
  %170 = load i64*, i64** %169, align 8
  store i64 %168, i64* %170, align 8
  br label %171

171:                                              ; preds = %171, %157
  %172 = phi %"struct.std::__1::__list_node_base"* [ %154, %157 ], [ %174, %171 ]
  %173 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %172, i64 0, i32 1
  %174 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %173, align 8
  %175 = load i64, i64* %3, align 8
  %176 = add i64 %175, -1
  store i64 %176, i64* %3, align 8
  %177 = bitcast %"struct.std::__1::__list_node_base"* %172 to i8*
  tail call void @_ZdlPv(i8* %177) #16
  %178 = icmp eq %"struct.std::__1::__list_node_base"* %174, %155
  br i1 %178, label %218, label %171

179:                                              ; preds = %2
  %180 = icmp ult i64 %4, %1
  br i1 %180, label %181, label %218

181:                                              ; preds = %179
  %182 = tail call i8* @_Znwm(i64 792) #16, !noalias !129
  %183 = bitcast i8* %182 to %"struct.std::__1::__list_node_base"**
  store %"struct.std::__1::__list_node_base"* null, %"struct.std::__1::__list_node_base"** %183, align 8, !noalias !129
  %184 = getelementptr inbounds i8, i8* %182, i64 784
  %185 = bitcast i8* %184 to i32*
  store i32 0, i32* %185, align 8
  %186 = ptrtoint i8* %182 to i64
  %187 = xor i64 %4, -1
  %188 = add i64 %187, %1
  %189 = icmp eq i64 %188, 0
  br i1 %189, label %206, label %190

190:                                              ; preds = %181, %190
  %191 = phi i64 [ %200, %190 ], [ %188, %181 ]
  %192 = phi i64 [ %202, %190 ], [ %186, %181 ]
  %193 = tail call i8* @_Znwm(i64 792) #16
  %194 = getelementptr inbounds i8, i8* %193, i64 784
  %195 = bitcast i8* %194 to i32*
  store i32 0, i32* %195, align 8
  %196 = inttoptr i64 %192 to %"struct.std::__1::__list_node_base"*
  %197 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %196, i64 0, i32 1
  %198 = bitcast %"struct.std::__1::__list_node_base"** %197 to i8**
  store i8* %193, i8** %198, align 8
  %199 = bitcast i8* %193 to i64*
  store i64 %192, i64* %199, align 8
  %200 = add i64 %191, -1
  %201 = bitcast %"struct.std::__1::__list_node_base"** %197 to i64*
  %202 = load i64, i64* %201, align 8
  %203 = icmp eq i64 %200, 0
  br i1 %203, label %204, label %190

204:                                              ; preds = %190
  %205 = sub i64 %1, %4
  br label %206

206:                                              ; preds = %204, %181
  %207 = phi i64 [ %186, %181 ], [ %202, %204 ]
  %208 = phi i64 [ 1, %181 ], [ %205, %204 ]
  %209 = inttoptr i64 %207 to %"struct.std::__1::__list_node_base"*
  %210 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0
  %211 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %209, i64 0, i32 1
  store %"struct.std::__1::__list_node_base"* %210, %"struct.std::__1::__list_node_base"** %211, align 8
  %212 = getelementptr inbounds %"class.std::__1::list", %"class.std::__1::list"* %0, i64 0, i32 0, i32 0, i32 0
  %213 = load %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"** %212, align 8
  store %"struct.std::__1::__list_node_base"* %213, %"struct.std::__1::__list_node_base"** %183, align 8
  %214 = getelementptr inbounds %"struct.std::__1::__list_node_base", %"struct.std::__1::__list_node_base"* %213, i64 0, i32 1
  %215 = bitcast %"struct.std::__1::__list_node_base"** %214 to i8**
  store i8* %182, i8** %215, align 8
  store %"struct.std::__1::__list_node_base"* %209, %"struct.std::__1::__list_node_base"** %212, align 8
  %216 = load i64, i64* %3, align 8
  %217 = add i64 %216, %208
  store i64 %217, i64* %3, align 8
  br label %218

218:                                              ; preds = %171, %152, %179, %206
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #13

declare void @_ZN5blink44inspector_layout_invalidation_tracking_event4DataEN8perfetto11TracedValueEPKNS_12LayoutObjectEPKc(%"class.perfetto::TracedValue"*, %"class.blink::LayoutObject"*, i8*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN9protozero21ScatteredStreamWriterD1Ev(%"class.protozero::ScatteredStreamWriter"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero19ScatteredHeapBufferD1Ev(%"class.protozero::ScatteredHeapBuffer"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN9protozero12MessageArenaD1Ev(%"class.protozero::MessageArena"*) unnamed_addr #4

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIPN5blink9LayoutBoxELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.3311"*, %"class.blink::LayoutBox"**) local_unnamed_addr #14 comdat align 2 {
  %3 = bitcast %"class.blink::LayoutBox"** %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #15
  ret void
}

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #3

declare i32 @_ZNK5blink9LayoutBox11ClientWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare i32 @_ZNK5blink9LayoutBox12ClientHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare i32 @_ZN5blink29MinimumValueForLengthInternalERKNS_6LengthENS_10LayoutUnitE(%"class.blink::Length"* dereferenceable(8), i32) local_unnamed_addr #3

declare dereferenceable(104) %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject18SlowEffectiveStyleENS_14NGStyleVariantE(%"class.blink::LayoutObject"*, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink12LayoutObject24IsRenderedLegendInternalEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3

declare i64 @_ZNK5blink20LayoutBoxModelObject23OffsetForInFlowPositionEv(%"class.blink::LayoutBoxModelObject"*) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink16HasEditableStyleERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #10

declare { i64, i64 } @_ZNK5blink9LayoutBox25ComputeScrollbarsInternalENS_23ShouldClampToContentBoxENS_28OverlayScrollbarClipBehaviorENS_28ShouldIncludeScrollbarGutterE(%"class.blink::LayoutBox"*, i32, i32, i32) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink9LayoutBox32HasOverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare zeroext i1 @_ZNK5blink9LayoutBox33HasOverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare i32 @_ZNK5blink9LayoutBox29OverrideIntrinsicContentWidthEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare i32 @_ZNK5blink9LayoutBox30OverrideIntrinsicContentHeightEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

declare void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink9LayoutBox49ShouldComputeLogicalWidthFromAspectRatioAndInsetsEv(%"class.blink::LayoutBox"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.blink::Length"*, align 8
  %3 = alloca %"class.blink::Length"*, align 8
  %4 = alloca %"class.blink::Length"*, align 8
  %5 = alloca %"class.blink::Length"*, align 8
  %6 = alloca %"class.blink::Length"*, align 8
  %7 = alloca %"class.blink::Length"*, align 8
  %8 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 5, i32 0
  %9 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 5, i32 0, i32 0
  %11 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %11, i64 0, i32 1, i32 1, i32 0
  %13 = load float, float* %12, align 4
  %14 = fcmp oeq float %13, 0.000000e+00
  br i1 %14, label %89, label %15

15:                                               ; preds = %1
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %11, i64 0, i32 1, i32 1, i32 1
  %17 = load float, float* %16, align 4
  %18 = fcmp oeq float %17, 0.000000e+00
  %19 = fcmp olt float %13, 1.562500e-02
  %20 = or i1 %19, %18
  %21 = fcmp olt float %17, 1.562500e-02
  %22 = or i1 %21, %20
  br i1 %22, label %89, label %23

23:                                               ; preds = %15
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %11, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 4
  %26 = and i8 %25, 3
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %89, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 0, i32 0, i32 4
  %30 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %29 to i96*
  %31 = load i96, i96* %30, align 4
  %32 = and i96 %31, 113336795588871485128704
  %33 = icmp eq i96 %32, 75557863725914323419136
  br i1 %33, label %34, label %89

34:                                               ; preds = %28
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %11, i64 0, i32 8, i32 2
  %36 = load i8, i8* %35, align 1
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %88

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %11, i64 0, i32 3, i32 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %88

42:                                               ; preds = %38
  %43 = bitcast %"class.blink::Length"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  %44 = bitcast %"class.blink::Length"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = bitcast %"class.blink::Length"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45)
  %46 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 9
  %47 = bitcast [20 x i8]* %46 to i160*
  %48 = load i160, i160* %47, align 8, !noalias !132
  %49 = lshr i160 %48, 102
  %50 = trunc i160 %49 to i8
  %51 = and i8 %50, 3
  %52 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %9, i64 0, i32 0, i32 7, i32 0, i32 0
  %53 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %52, align 8, !noalias !132
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %53, i64 0, i32 18
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %53, i64 0, i32 17
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %53, i64 0, i32 8
  store %"class.blink::Length"* %54, %"class.blink::Length"** %2, align 8, !alias.scope !132
  store %"class.blink::Length"* %55, %"class.blink::Length"** %3, align 8, !alias.scope !132
  store %"class.blink::Length"* %56, %"class.blink::Length"** %4, align 8, !alias.scope !132
  %57 = icmp eq i8 %51, 0
  %58 = icmp eq i8 %51, 1
  %59 = select i1 %58, %"class.blink::Length"** %3, %"class.blink::Length"** %4
  %60 = select i1 %57, %"class.blink::Length"** %2, %"class.blink::Length"** %59
  %61 = load %"class.blink::Length"*, %"class.blink::Length"** %60, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45)
  %62 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %61, i64 0, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %88, label %65

65:                                               ; preds = %42
  %66 = bitcast %"class.blink::Length"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %66)
  %67 = bitcast %"class.blink::Length"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67)
  %68 = bitcast %"class.blink::Length"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68)
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %53, i64 0, i32 7
  store %"class.blink::Length"* %55, %"class.blink::Length"** %5, align 8, !alias.scope !135
  store %"class.blink::Length"* %69, %"class.blink::Length"** %6, align 8, !alias.scope !135
  store %"class.blink::Length"* %56, %"class.blink::Length"** %7, align 8, !alias.scope !135
  %70 = select i1 %58, %"class.blink::Length"** %7, %"class.blink::Length"** %5
  %71 = select i1 %57, %"class.blink::Length"** %6, %"class.blink::Length"** %70
  %72 = load %"class.blink::Length"*, %"class.blink::Length"** %71, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %66)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68)
  %73 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %72, i64 0, i32 2
  %74 = load i8, i8* %73, align 1
  %75 = icmp eq i8 %74, 0
  br i1 %75, label %88, label %76

76:                                               ; preds = %65
  %77 = and i160 %48, 15211807202738752817960438464512
  %78 = icmp eq i160 %77, 0
  %79 = select i1 %78, %"class.blink::Length"* %56, %"class.blink::Length"* %54
  %80 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %79, i64 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %89, label %83

83:                                               ; preds = %76
  %84 = select i1 %78, %"class.blink::Length"* %55, %"class.blink::Length"* %69
  %85 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %84, i64 0, i32 2
  %86 = load i8, i8* %85, align 1
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %89, label %88

88:                                               ; preds = %83, %65, %42, %38, %34
  br label %89

89:                                               ; preds = %1, %15, %76, %83, %23, %28, %88
  %90 = phi i1 [ false, %88 ], [ false, %28 ], [ false, %23 ], [ true, %83 ], [ true, %76 ], [ false, %15 ], [ false, %1 ]
  ret i1 %90
}

declare void @_ZNK5blink6Length22IncrementCalculatedRefEv(%"class.blink::Length"*) local_unnamed_addr #3

declare %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"*) local_unnamed_addr #3

declare %"class.blink::FontFallbackList"* @_ZNK5blink4Font22EnsureFontFallbackListEv(%"class.blink::Font"*) local_unnamed_addr #3

declare %"class.blink::SimpleFontData"* @_ZN5blink16FontFallbackList30DeterminePrimarySimpleFontDataERKNS_15FontDescriptionE(%"class.blink::FontFallbackList"*, %"class.blink::FontDescription"* dereferenceable(80)) local_unnamed_addr #3

declare zeroext i1 @_ZN5blink21EditingIgnoresContentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #3

declare void @_ZN5blink9LayoutBox11SizeChangedEv(%"class.blink::LayoutBox"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9LayoutBox12SetMarginTopENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9LayoutBox14SetMarginRightENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 1, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9LayoutBox15SetMarginBottomENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 2, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink9LayoutBox13SetMarginLeftENS_10LayoutUnitE(%"class.blink::LayoutBox"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::LayoutBox", %"class.blink::LayoutBox"* %0, i64 0, i32 1, i32 3, i32 0
  store i32 %1, i32* %3, align 4
  ret void
}

declare i32 @_ZNK5blink20LayoutBoxModelObject18ComputedCSSPaddingERKNS_6LengthE(%"class.blink::LayoutBoxModelObject"*, %"class.blink::Length"* dereferenceable(8)) local_unnamed_addr #3

declare i64 @_ZN5blink11LogicalSize24AspectRatioFromFloatSizeERKNS_9FloatSizeE(%"class.blink::FloatSize"* dereferenceable(8)) local_unnamed_addr #3

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i64(i64) #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_(%"class.blink::ComputedStyle"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %0, i64 0, i32 1, i32 0
  %3 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %2, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %3) #15
  %4 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %2, i64 0, i32 0, i32 0
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %51

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %2, i64 -23
  %9 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %2, i64 1
  %10 = bitcast %"class.base::RefCounted.732"* %9 to %"class.blink::StyleCachedData"**
  %11 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %10, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %10, align 8
  %12 = icmp eq %"class.blink::StyleCachedData"* %11, null
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.WTF::Vector.739"*, %"class.WTF::Vector.739"** %14, align 8
  store %"class.WTF::Vector.739"* null, %"class.WTF::Vector.739"** %14, align 8
  %16 = icmp eq %"class.WTF::Vector.739"* %15, null
  br i1 %16, label %46, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %36, label %21, !prof !4

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0, i32 0, i32 0
  %23 = load %class.scoped_refptr*, %class.scoped_refptr** %22, align 8
  %24 = zext i32 %19 to i64
  %25 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %23, i64 %24
  br label %26

26:                                               ; preds = %21, %32
  %27 = phi %class.scoped_refptr* [ %33, %32 ], [ %23, %21 ]
  %28 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 0, i32 0
  %29 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %28, align 8
  %30 = icmp eq %"class.blink::ComputedStyle"* %29, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %26
  tail call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_(%"class.blink::ComputedStyle"* nonnull %29) #15
  br label %32

32:                                               ; preds = %31, %26
  %33 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %27, i64 1
  %34 = icmp eq %class.scoped_refptr* %33, %25
  br i1 %34, label %35, label %26

35:                                               ; preds = %32
  store i32 0, i32* %18, align 4
  br label %36

36:                                               ; preds = %35, %17
  %37 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0, i32 0, i32 0
  %38 = load %class.scoped_refptr*, %class.scoped_refptr** %37, align 8
  %39 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0, i32 1, i64 0
  %40 = bitcast i8* %39 to %class.scoped_refptr*
  %41 = icmp eq %class.scoped_refptr* %38, %40
  br i1 %41, label %44, label %42, !prof !3

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %15, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.3471"* %43, %class.scoped_refptr* %38) #15
  br label %44

44:                                               ; preds = %36, %42
  store %class.scoped_refptr* null, %class.scoped_refptr** %37, align 8
  %45 = bitcast %"class.WTF::Vector.739"* %15 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %45) #15
  br label %46

46:                                               ; preds = %13, %44
  %47 = bitcast %"class.blink::StyleCachedData"* %11 to i8*
  tail call void @_ZdlPv(i8* %47) #16
  br label %48

48:                                               ; preds = %46, %7
  %49 = bitcast %"class.base::RefCounted.732"* %8 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* %49) #15
  %50 = bitcast %"class.base::RefCounted.732"* %8 to i8*
  tail call void @free(i8* %50) #15
  br label %51

51:                                               ; preds = %1, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base10RefCountedIN5blink13ComputedStyleEN3WTF23DefaultRefCountedTraitsIS2_EEE7ReleaseEv(%"class.base::RefCounted.732"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %0, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %2) #15
  %3 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %0, i64 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %52

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %0, i64 -23
  %8 = icmp eq %"class.base::RefCounted.732"* %7, null
  br i1 %8, label %52, label %9

9:                                                ; preds = %6
  %10 = getelementptr inbounds %"class.base::RefCounted.732", %"class.base::RefCounted.732"* %0, i64 1
  %11 = bitcast %"class.base::RefCounted.732"* %10 to %"class.blink::StyleCachedData"**
  %12 = load %"class.blink::StyleCachedData"*, %"class.blink::StyleCachedData"** %11, align 8
  store %"class.blink::StyleCachedData"* null, %"class.blink::StyleCachedData"** %11, align 8
  %13 = icmp eq %"class.blink::StyleCachedData"* %12, null
  br i1 %13, label %49, label %14

14:                                               ; preds = %9
  %15 = getelementptr inbounds %"class.blink::StyleCachedData", %"class.blink::StyleCachedData"* %12, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::Vector.739"*, %"class.WTF::Vector.739"** %15, align 8
  store %"class.WTF::Vector.739"* null, %"class.WTF::Vector.739"** %15, align 8
  %17 = icmp eq %"class.WTF::Vector.739"* %16, null
  br i1 %17, label %47, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0, i32 0, i32 2
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %37, label %22, !prof !4

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0, i32 0, i32 0
  %24 = load %class.scoped_refptr*, %class.scoped_refptr** %23, align 8
  %25 = zext i32 %20 to i64
  %26 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %24, i64 %25
  br label %27

27:                                               ; preds = %22, %33
  %28 = phi %class.scoped_refptr* [ %34, %33 ], [ %24, %22 ]
  %29 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %28, i64 0, i32 0
  %30 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %29, align 8
  %31 = icmp eq %"class.blink::ComputedStyle"* %30, null
  br i1 %31, label %33, label %32

32:                                               ; preds = %27
  tail call void @_ZN13scoped_refptrIKN5blink13ComputedStyleEE7ReleaseEPS2_(%"class.blink::ComputedStyle"* nonnull %30) #15
  br label %33

33:                                               ; preds = %32, %27
  %34 = getelementptr inbounds %class.scoped_refptr, %class.scoped_refptr* %28, i64 1
  %35 = icmp eq %class.scoped_refptr* %34, %26
  br i1 %35, label %36, label %27

36:                                               ; preds = %33
  store i32 0, i32* %19, align 4
  br label %37

37:                                               ; preds = %36, %18
  %38 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0, i32 0, i32 0
  %39 = load %class.scoped_refptr*, %class.scoped_refptr** %38, align 8
  %40 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0, i32 1, i64 0
  %41 = bitcast i8* %40 to %class.scoped_refptr*
  %42 = icmp eq %class.scoped_refptr* %39, %41
  br i1 %42, label %45, label %43, !prof !3

43:                                               ; preds = %37
  %44 = getelementptr inbounds %"class.WTF::Vector.739", %"class.WTF::Vector.739"* %16, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.3471"* %44, %class.scoped_refptr* %39) #15
  br label %45

45:                                               ; preds = %37, %43
  store %class.scoped_refptr* null, %class.scoped_refptr** %38, align 8
  %46 = bitcast %"class.WTF::Vector.739"* %16 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %46) #15
  br label %47

47:                                               ; preds = %14, %45
  %48 = bitcast %"class.blink::StyleCachedData"* %12 to i8*
  tail call void @_ZdlPv(i8* %48) #16
  br label %49

49:                                               ; preds = %47, %9
  %50 = bitcast %"class.base::RefCounted.732"* %7 to %"class.blink::ComputedStyleBase"*
  tail call void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"* nonnull %50) #15
  %51 = bitcast %"class.base::RefCounted.732"* %7 to i8*
  tail call void @free(i8* %51) #15
  br label %52

52:                                               ; preds = %49, %6, %1
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBaseD2Ev(%"class.blink::ComputedStyleBase"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"*, %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"** %2, align 8
  %4 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, null
  br i1 %4, label %25, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #15
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %25

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedVariablesData", %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.base::RefCounted.729", %"class.base::RefCounted.729"* %11, i64 2
  %13 = bitcast %"class.base::RefCounted.729"* %12 to %"class.blink::StyleInheritedVariables"**
  %14 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %13, align 8
  %15 = icmp eq %"class.blink::StyleInheritedVariables"* %14, null
  br i1 %15, label %23, label %16

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %17) #15
  %18 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %16
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %14) #15
  %22 = bitcast %"class.blink::StyleInheritedVariables"* %14 to i8*
  tail call void @free(i8* %22) #15
  br label %23

23:                                               ; preds = %21, %16, %10
  %24 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* %3 to i8*
  tail call void @free(i8* %24) #15
  br label %25

25:                                               ; preds = %1, %5, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 7, i32 0, i32 0
  %27 = load %"class.blink::ComputedStyleBase::StyleSurroundData"*, %"class.blink::ComputedStyleBase::StyleSurroundData"** %26, align 8
  %28 = icmp eq %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %30) #15
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %27, i64 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %36

34:                                               ; preds = %29
  tail call void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"* nonnull %27) #15
  %35 = bitcast %"class.blink::ComputedStyleBase::StyleSurroundData"* %27 to i8*
  tail call void @free(i8* %35) #15
  br label %36

36:                                               ; preds = %25, %29, %34
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 6, i32 0, i32 0
  %38 = load %"class.blink::ComputedStyleBase::StyleBackgroundData"*, %"class.blink::ComputedStyleBase::StyleBackgroundData"** %37, align 8
  %39 = icmp eq %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, null
  br i1 %39, label %50, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %41) #15
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBackgroundData", %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38, i64 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.base::RefCounted.721", %"class.base::RefCounted.721"* %46, i64 2
  %48 = bitcast %"class.base::RefCounted.721"* %47 to %"class.blink::FillLayer"*
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %48) #15
  %49 = bitcast %"class.blink::ComputedStyleBase::StyleBackgroundData"* %38 to i8*
  tail call void @free(i8* %49) #15
  br label %50

50:                                               ; preds = %36, %40, %45
  %51 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 5, i32 0, i32 0
  %52 = load %"class.blink::ComputedStyleBase::StyleBoxData"*, %"class.blink::ComputedStyleBase::StyleBoxData"** %51, align 8
  %53 = icmp eq %"class.blink::ComputedStyleBase::StyleBoxData"* %52, null
  br i1 %53, label %61, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %55) #15
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %52, i64 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  tail call void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"* nonnull %52) #15
  %60 = bitcast %"class.blink::ComputedStyleBase::StyleBoxData"* %52 to i8*
  tail call void @free(i8* %60) #15
  br label %61

61:                                               ; preds = %50, %54, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 4, i32 0, i32 0
  %63 = load %"class.blink::ComputedStyleBase::StyleSVGData"*, %"class.blink::ComputedStyleBase::StyleSVGData"** %62, align 8
  %64 = icmp eq %"class.blink::ComputedStyleBase::StyleSVGData"* %63, null
  br i1 %64, label %72, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %66) #15
  %67 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %72

70:                                               ; preds = %65
  tail call void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"* nonnull %63) #15
  %71 = bitcast %"class.blink::ComputedStyleBase::StyleSVGData"* %63 to i8*
  tail call void @free(i8* %71) #15
  br label %72

72:                                               ; preds = %61, %65, %70
  %73 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 3, i32 0, i32 0
  %74 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %73, align 8
  %75 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, null
  br i1 %75, label %83, label %76

76:                                               ; preds = %72
  %77 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %77) #15
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74, i64 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %83

81:                                               ; preds = %76
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* nonnull %74) #15
  %82 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %74 to i8*
  tail call void @free(i8* %82) #15
  br label %83

83:                                               ; preds = %72, %76, %81
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 2, i32 0, i32 0
  %85 = load %"class.blink::ComputedStyleBase::StyleVisualData"*, %"class.blink::ComputedStyleBase::StyleVisualData"** %84, align 8
  %86 = icmp eq %"class.blink::ComputedStyleBase::StyleVisualData"* %85, null
  br i1 %86, label %118, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %88) #15
  %89 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %118

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3, i32 2
  %94 = load i8, i8* %93, align 1
  %95 = icmp eq i8 %94, 8
  br i1 %95, label %96, label %98

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %97) #15
  br label %98

98:                                               ; preds = %96, %92
  %99 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2, i32 2
  %100 = load i8, i8* %99, align 1
  %101 = icmp eq i8 %100, 8
  br i1 %101, label %102, label %104

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %103) #15
  br label %104

104:                                              ; preds = %102, %98
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1, i32 2
  %106 = load i8, i8* %105, align 1
  %107 = icmp eq i8 %106, 8
  br i1 %107, label %108, label %110

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %109) #15
  br label %110

110:                                              ; preds = %108, %104
  %111 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0, i32 2
  %112 = load i8, i8* %111, align 1
  %113 = icmp eq i8 %112, 8
  br i1 %113, label %114, label %116

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleVisualData", %"class.blink::ComputedStyleBase::StyleVisualData"* %85, i64 0, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %115) #15
  br label %116

116:                                              ; preds = %114, %110
  %117 = bitcast %"class.blink::ComputedStyleBase::StyleVisualData"* %85 to i8*
  tail call void @free(i8* %117) #15
  br label %118

118:                                              ; preds = %83, %87, %116
  %119 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 1, i32 0, i32 0
  %120 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"** %119, align 8
  %121 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, null
  br i1 %121, label %129, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %123) #15
  %124 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %129

127:                                              ; preds = %122
  tail call void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* nonnull %120) #15
  %128 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %120 to i8*
  tail call void @free(i8* %128) #15
  br label %129

129:                                              ; preds = %118, %122, %127
  %130 = getelementptr inbounds %"class.blink::ComputedStyleBase", %"class.blink::ComputedStyleBase"* %0, i64 0, i32 0, i32 0, i32 0
  %131 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %130, align 8
  %132 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, null
  br i1 %132, label %160, label %133

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %134) #15
  %135 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = icmp eq i32 %136, 0
  br i1 %137, label %138, label %160

138:                                              ; preds = %133
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2, i32 2
  %140 = load i8, i8* %139, align 1
  %141 = icmp eq i8 %140, 8
  br i1 %141, label %142, label %144

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %143) #15
  br label %144

144:                                              ; preds = %142, %138
  %145 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %131, i64 0, i32 1, i32 0, i32 0
  %146 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %145, align 8
  %147 = icmp eq %"class.blink::ComputedStyleBase::StyleFontData"* %146, null
  br i1 %147, label %158, label %148

148:                                              ; preds = %144
  %149 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %149) #15
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0, i32 0, i32 0
  %151 = load i32, i32* %150, align 4
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %158

153:                                              ; preds = %148
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %146, i64 0, i32 0, i32 0
  %155 = getelementptr inbounds %"class.base::RefCounted.4", %"class.base::RefCounted.4"* %154, i64 2
  %156 = bitcast %"class.base::RefCounted.4"* %155 to %"class.blink::Font"*
  tail call void @_ZN5blink4FontD1Ev(%"class.blink::Font"* %156) #15
  %157 = bitcast %"class.blink::ComputedStyleBase::StyleFontData"* %146 to i8*
  tail call void @free(i8* %157) #15
  br label %158

158:                                              ; preds = %153, %148, %144
  %159 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedData"* %131 to i8*
  tail call void @free(i8* %159) #15
  br label %160

160:                                              ; preds = %129, %133, %158
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferI13scoped_refptrIKN5blink13ComputedStyleEELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS5_(%"class.WTF::VectorBuffer.3471"*, %class.scoped_refptr*) local_unnamed_addr #14 comdat align 2 {
  %3 = bitcast %class.scoped_refptr* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #15
  ret void
}

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 2, i32 0
  %3 = load %"class.blink::StyleInheritedVariables"*, %"class.blink::StyleInheritedVariables"** %2, align 8
  %4 = icmp eq %"class.blink::StyleInheritedVariables"* %3, null
  br i1 %4, label %12, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #15
  %7 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %12

10:                                               ; preds = %5
  tail call void @_ZN5blink23StyleInheritedVariablesD2Ev(%"class.blink::StyleInheritedVariables"* nonnull %3) #15
  %11 = bitcast %"class.blink::StyleInheritedVariables"* %3 to i8*
  tail call void @free(i8* %11) #15
  br label %12

12:                                               ; preds = %5, %10, %1
  %13 = getelementptr inbounds %"class.blink::StyleInheritedVariables", %"class.blink::StyleInheritedVariables"* %0, i64 0, i32 1
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %13) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 1, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #15
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !4

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #15
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 0
  %26 = load %"struct.WTF::KeyValuePair"*, %"struct.WTF::KeyValuePair"** %25, align 8
  %27 = icmp eq %"struct.WTF::KeyValuePair"* %26, null
  br i1 %27, label %73, label %28, !prof !3

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleVariables", %"class.blink::StyleVariables"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %71, label %32

32:                                               ; preds = %28
  %33 = zext i32 %30 to i64
  br label %34

34:                                               ; preds = %68, %32
  %35 = phi i64 [ 0, %32 ], [ %69, %68 ]
  %36 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35
  %37 = bitcast %"struct.WTF::KeyValuePair"* %36 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = icmp eq i8* %38, inttoptr (i64 -1 to i8*)
  br i1 %39, label %68, label %40

40:                                               ; preds = %34
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %26, i64 %35, i32 1, i32 0
  %42 = load %"class.blink::CSSVariableData"*, %"class.blink::CSSVariableData"** %41, align 8
  %43 = icmp eq %"class.blink::CSSVariableData"* %42, null
  br i1 %43, label %51, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %45) #15
  %46 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %42, i64 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %44
  tail call void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"* nonnull %42) #15
  %50 = bitcast %"class.blink::CSSVariableData"* %42 to i8*
  tail call void @free(i8* %50) #15
  br label %51

51:                                               ; preds = %49, %44, %40
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair", %"struct.WTF::KeyValuePair"* %36, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %52, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #15
  br label %68

68:                                               ; preds = %67, %64, %51, %34
  %69 = add nuw nsw i64 %35, 1
  %70 = icmp eq i64 %69, %33
  br i1 %70, label %71, label %34

71:                                               ; preds = %68, %28
  %72 = bitcast %"struct.WTF::KeyValuePair"* %26 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %72) #15
  store %"struct.WTF::KeyValuePair"* null, %"struct.WTF::KeyValuePair"** %25, align 8
  br label %73

73:                                               ; preds = %24, %71
  ret void
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #3

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #3

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSVariableDataD2Ev(%"class.blink::CSSVariableData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 8, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %18, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  %10 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %11 = load i32, i32* %10, align 4
  br i1 %9, label %12, label %14

12:                                               ; preds = %5
  %13 = add i32 %11, -1
  store i32 %13, i32* %10, align 4
  br label %14

14:                                               ; preds = %12, %5
  %15 = phi i32 [ %13, %12 ], [ %11, %5 ]
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %18

17:                                               ; preds = %14
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #15
  br label %18

18:                                               ; preds = %1, %14, %17
  %19 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  br i1 %21, label %35, label %22

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = and i32 %24, 2
  %26 = icmp eq i32 %25, 0
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %20, i64 0, i32 0
  %28 = load i32, i32* %27, align 4
  br i1 %26, label %29, label %31

29:                                               ; preds = %22
  %30 = add i32 %28, -1
  store i32 %30, i32* %27, align 4
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi i32 [ %30, %29 ], [ %28, %22 ]
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %35

34:                                               ; preds = %31
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %20) #15
  br label %35

35:                                               ; preds = %18, %31, %34
  %36 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %37 = load %"class.blink::CSSParserToken"*, %"class.blink::CSSParserToken"** %36, align 8
  %38 = icmp eq %"class.blink::CSSParserToken"* %37, null
  %39 = bitcast %"class.blink::CSSParserToken"* %37 to i8*
  br i1 %38, label %46, label %40, !prof !3

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %45, label %44, !prof !4

44:                                               ; preds = %40
  store i32 0, i32* %41, align 4
  br label %45

45:                                               ; preds = %44, %40
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %39) #15
  store %"class.blink::CSSParserToken"* null, %"class.blink::CSSParserToken"** %36, align 8
  br label %46

46:                                               ; preds = %35, %45
  %47 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %47, i64 0, i32 0, i32 0, i32 0
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %48, align 8
  %50 = icmp eq %"class.WTF::String"* %49, null
  br i1 %50, label %85, label %51, !prof !3

51:                                               ; preds = %46
  %52 = bitcast %"class.WTF::String"* %49 to i8*
  %53 = getelementptr inbounds %"class.blink::CSSVariableData", %"class.blink::CSSVariableData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %83, label %56, !prof !4

56:                                               ; preds = %51
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %49, i64 %57
  br label %59

59:                                               ; preds = %77, %56
  %60 = phi %"class.WTF::String"* [ %78, %77 ], [ %49, %56 ]
  %61 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 0, i32 0, i32 0
  %62 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %61, align 8
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #15
  br label %77

77:                                               ; preds = %76, %73, %59
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 1
  %79 = icmp eq %"class.WTF::String"* %78, %58
  br i1 %79, label %80, label %59

80:                                               ; preds = %77
  store i32 0, i32* %53, align 4
  %81 = bitcast %"class.WTF::Vector.630"* %47 to i8**
  %82 = load i8*, i8** %81, align 8
  br label %83

83:                                               ; preds = %80, %51
  %84 = phi i8* [ %82, %80 ], [ %52, %51 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %84) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %48, align 8
  br label %85

85:                                               ; preds = %46, %83
  ret void
}

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleSurroundDataD2Ev(%"class.blink::ComputedStyleBase::StyleSurroundData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #15
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #15
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #15
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 15
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #15
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 14
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #15
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #15
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #15
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 11
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #15
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 10
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #15
  br label %55

55:                                               ; preds = %49, %53
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #15
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #15
  br label %67

67:                                               ; preds = %61, %65
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #15
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #15
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #15
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1, i32 2
  %87 = load i8, i8* %86, align 1
  %88 = icmp eq i8 %87, 8
  br i1 %88, label %89, label %91

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %90) #15
  br label %91

91:                                               ; preds = %89, %85
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0, i32 2
  %93 = load i8, i8* %92, align 1
  %94 = icmp eq i8 %93, 8
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 5, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %96) #15
  br label %97

97:                                               ; preds = %91, %95
  %98 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1, i32 2
  %99 = load i8, i8* %98, align 1
  %100 = icmp eq i8 %99, 8
  br i1 %100, label %101, label %103

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %102) #15
  br label %103

103:                                              ; preds = %101, %97
  %104 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0, i32 2
  %105 = load i8, i8* %104, align 1
  %106 = icmp eq i8 %105, 8
  br i1 %106, label %107, label %109

107:                                              ; preds = %103
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %108) #15
  br label %109

109:                                              ; preds = %103, %107
  %110 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1, i32 2
  %111 = load i8, i8* %110, align 1
  %112 = icmp eq i8 %111, 8
  br i1 %112, label %113, label %115

113:                                              ; preds = %109
  %114 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %114) #15
  br label %115

115:                                              ; preds = %113, %109
  %116 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0, i32 2
  %117 = load i8, i8* %116, align 1
  %118 = icmp eq i8 %117, 8
  br i1 %118, label %119, label %121

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %120) #15
  br label %121

121:                                              ; preds = %115, %119
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSurroundData", %"class.blink::ComputedStyleBase::StyleSurroundData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %123 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %122, align 8
  %124 = icmp eq %"class.blink::NinePieceImageData"* %123, null
  br i1 %124, label %132, label %125

125:                                              ; preds = %121
  %126 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %126) #15
  %127 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %123, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %125
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %123) #15
  %131 = bitcast %"class.blink::NinePieceImageData"* %123 to i8*
  tail call void @free(i8* %131) #15
  br label %132

132:                                              ; preds = %121, %125, %130
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #15
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #15
  br label %13

13:                                               ; preds = %11, %7
  %14 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #15
  br label %19

19:                                               ; preds = %17, %13
  %20 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 5, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #15
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #15
  br label %31

31:                                               ; preds = %29, %25
  %32 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #15
  br label %37

37:                                               ; preds = %35, %31
  %38 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 1, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #15
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 4, i32 0, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #15
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #15
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #15
  br label %61

61:                                               ; preds = %59, %55
  %62 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #15
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #15
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %0, i64 0, i32 2, i32 0, i32 1, i32 0
  %75 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %76 = icmp eq %"class.blink::PersistentNode"* %75, null
  br i1 %76, label %96, label %77

77:                                               ; preds = %73
  %78 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %79 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %78, i64 0, i32 1
  %80 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %79) #15
  %81 = icmp eq i8* %80, null
  br i1 %81, label %82, label %84, !prof !4

82:                                               ; preds = %77
  %83 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %79, i8* %83) #15
  br label %84

84:                                               ; preds = %82, %77
  %85 = phi i8* [ %83, %82 ], [ %80, %77 ]
  %86 = bitcast i8* %85 to %"class.blink::ThreadState"**
  %87 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %87, i64 0, i32 3, i32 0, i32 0, i32 0
  %89 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %88, align 8
  %90 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %74, align 8
  %91 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %89, i64 0, i32 0, i32 0
  %92 = bitcast %"class.blink::PersistentRegion"* %89 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.blink::PersistentNode"* %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %90, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %95, align 8
  store %"class.blink::PersistentNode"* %90, %"class.blink::PersistentNode"** %91, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %74, align 8
  br label %96

96:                                               ; preds = %73, %84
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleBoxDataD2Ev(%"class.blink::ComputedStyleBase::StyleBoxData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 9
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #15
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #15
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #15
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #15
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #15
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #15
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #15
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #15
  br label %49

49:                                               ; preds = %47, %43
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleBoxData", %"class.blink::ComputedStyleBase::StyleBoxData"* %0, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #15
  br label %55

55:                                               ; preds = %49, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase12StyleSVGDataD2Ev(%"class.blink::ComputedStyleBase::StyleSVGData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 8
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %2) #15
  %3 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::ComputedStyleBase::StyleStopData"*, %"class.blink::ComputedStyleBase::StyleStopData"** %3, align 8
  %5 = icmp eq %"class.blink::ComputedStyleBase::StyleStopData"* %4, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %7) #15
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStopData", %"class.blink::ComputedStyleBase::StyleStopData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %6
  %12 = bitcast %"class.blink::ComputedStyleBase::StyleStopData"* %4 to i8*
  tail call void @free(i8* %12) #15
  br label %13

13:                                               ; preds = %1, %6, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 6, i32 0, i32 0
  %15 = load %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"*, %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"** %14, align 8
  %16 = icmp eq %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, null
  br i1 %16, label %31, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %19) #15
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedResourcesData", %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 6
  %25 = bitcast %"class.base::RefCounted.709"* %24 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %25) #15
  %26 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 4
  %27 = bitcast %"class.base::RefCounted.709"* %26 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %27) #15
  %28 = getelementptr inbounds %"class.base::RefCounted.709", %"class.base::RefCounted.709"* %18, i64 2
  %29 = bitcast %"class.base::RefCounted.709"* %28 to %class.scoped_refptr.680*
  tail call void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680* %29) #15
  %30 = bitcast %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* %15 to i8*
  tail call void @free(i8* %30) #15
  br label %31

31:                                               ; preds = %13, %17, %23
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 5, i32 0, i32 0
  %33 = load %"class.blink::ComputedStyleBase::StyleStrokeData"*, %"class.blink::ComputedStyleBase::StyleStrokeData"** %32, align 8
  %34 = icmp eq %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, null
  br i1 %34, label %42, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %36) #15
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %33, i64 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %35
  tail call void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"* nonnull %33) #15
  %41 = bitcast %"class.blink::ComputedStyleBase::StyleStrokeData"* %33 to i8*
  tail call void @free(i8* %41) #15
  br label %42

42:                                               ; preds = %31, %35, %40
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 4, i32 0, i32 0
  %44 = load %"class.blink::ComputedStyleBase::StyleFillData"*, %"class.blink::ComputedStyleBase::StyleFillData"** %43, align 8
  %45 = icmp eq %"class.blink::ComputedStyleBase::StyleFillData"* %44, null
  br i1 %45, label %58, label %46

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %48) #15
  %49 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFillData", %"class.blink::ComputedStyleBase::StyleFillData"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %58

52:                                               ; preds = %46
  %53 = getelementptr inbounds %"class.base::RefCounted.679", %"class.base::RefCounted.679"* %47, i64 8
  %54 = bitcast %"class.base::RefCounted.679"* %53 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %54) #15
  %55 = getelementptr inbounds %"class.base::RefCounted.679", %"class.base::RefCounted.679"* %47, i64 2
  %56 = bitcast %"class.base::RefCounted.679"* %55 to %"struct.blink::SVGPaint"*
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %56) #15
  %57 = bitcast %"class.blink::ComputedStyleBase::StyleFillData"* %44 to i8*
  tail call void @free(i8* %57) #15
  br label %58

58:                                               ; preds = %42, %46, %52
  %59 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 3, i32 0, i32 0
  %60 = load %"class.blink::ComputedStyleBase::StyleGeometryData"*, %"class.blink::ComputedStyleBase::StyleGeometryData"** %59, align 8
  %61 = icmp eq %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, null
  br i1 %61, label %69, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %63) #15
  %64 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %60, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  tail call void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"* nonnull %60) #15
  %68 = bitcast %"class.blink::ComputedStyleBase::StyleGeometryData"* %60 to i8*
  tail call void @free(i8* %68) #15
  br label %69

69:                                               ; preds = %58, %62, %67
  %70 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleSVGData", %"class.blink::ComputedStyleBase::StyleSVGData"* %0, i64 0, i32 2, i32 0, i32 0
  %71 = load %"class.blink::ComputedStyleBase::StyleMiscData"*, %"class.blink::ComputedStyleBase::StyleMiscData"** %70, align 8
  %72 = icmp eq %"class.blink::ComputedStyleBase::StyleMiscData"* %71, null
  br i1 %72, label %88, label %73

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0
  %75 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %75) #15
  %76 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i32, i32* %76, align 4
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %88

79:                                               ; preds = %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMiscData", %"class.blink::ComputedStyleBase::StyleMiscData"* %71, i64 0, i32 1, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %86

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.base::RefCounted.654", %"class.base::RefCounted.654"* %74, i64 1
  %85 = bitcast %"class.base::RefCounted.654"* %84 to %"class.blink::Length"*
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %85) #15
  br label %86

86:                                               ; preds = %83, %79
  %87 = bitcast %"class.blink::ComputedStyleBase::StyleMiscData"* %71 to i8*
  tail call void @free(i8* %87) #15
  br label %88

88:                                               ; preds = %69, %73, %86
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN13scoped_refptrIN5blink16StyleSVGResourceEED2Ev(%class.scoped_refptr.680*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %class.scoped_refptr.680, %class.scoped_refptr.680* %0, i64 0, i32 0
  %3 = load %"class.blink::StyleSVGResource"*, %"class.blink::StyleSVGResource"** %2, align 8
  %4 = icmp eq %"class.blink::StyleSVGResource"* %3, null
  br i1 %4, label %52, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %6) #15
  %7 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %52

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 2, i32 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %27, label %14

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 2
  %18 = icmp eq i32 %17, 0
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  br i1 %18, label %21, label %23

21:                                               ; preds = %14
  %22 = add i32 %20, -1
  store i32 %22, i32* %19, align 4
  br label %23

23:                                               ; preds = %21, %14
  %24 = phi i32 [ %22, %21 ], [ %20, %14 ]
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %27

26:                                               ; preds = %23
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %12) #15
  br label %27

27:                                               ; preds = %26, %23, %10
  %28 = getelementptr inbounds %"class.blink::StyleSVGResource", %"class.blink::StyleSVGResource"* %3, i64 0, i32 1, i32 0, i32 1, i32 0
  %29 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %30 = icmp eq %"class.blink::PersistentNode"* %29, null
  br i1 %30, label %50, label %31

31:                                               ; preds = %27
  %32 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %33 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %32, i64 0, i32 1
  %34 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %33) #15
  %35 = icmp eq i8* %34, null
  br i1 %35, label %36, label %38, !prof !4

36:                                               ; preds = %31
  %37 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %33, i8* %37) #15
  br label %38

38:                                               ; preds = %36, %31
  %39 = phi i8* [ %37, %36 ], [ %34, %31 ]
  %40 = bitcast i8* %39 to %"class.blink::ThreadState"**
  %41 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %41, i64 0, i32 3, i32 0, i32 0, i32 0
  %43 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %42, align 8
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %28, align 8
  %45 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %43, i64 0, i32 0, i32 0
  %46 = bitcast %"class.blink::PersistentRegion"* %43 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = bitcast %"class.blink::PersistentNode"* %44 to i64*
  store i64 %47, i64* %48, align 8
  %49 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %44, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %49, align 8
  store %"class.blink::PersistentNode"* %44, %"class.blink::PersistentNode"** %45, align 8
  br label %50

50:                                               ; preds = %27, %38
  %51 = bitcast %"class.blink::StyleSVGResource"* %3 to i8*
  tail call void @free(i8* %51) #15
  br label %52

52:                                               ; preds = %5, %50, %1
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase15StyleStrokeDataD2Ev(%"class.blink::ComputedStyleBase::StyleStrokeData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 6, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #15
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #15
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 4
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %14) #15
  %15 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 3
  tail call void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"* %15) #15
  %16 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleStrokeData", %"class.blink::ComputedStyleBase::StyleStrokeData"* %0, i64 0, i32 2, i32 0
  %17 = load %"class.base::RefCountedData.699"*, %"class.base::RefCountedData.699"** %16, align 8
  %18 = icmp eq %"class.base::RefCountedData.699"* %17, null
  br i1 %18, label %53, label %19

19:                                               ; preds = %13
  %20 = getelementptr inbounds %"class.base::RefCountedData.699", %"class.base::RefCountedData.699"* %17, i64 0, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedData.699", %"class.base::RefCountedData.699"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %53

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.700", %"class.base::RefCountedThreadSafe.700"* %20, i64 2
  %26 = bitcast %"class.base::RefCountedThreadSafe.700"* %25 to %"class.blink::Length"**
  %27 = load %"class.blink::Length"*, %"class.blink::Length"** %26, align 8
  %28 = icmp eq %"class.blink::Length"* %27, null
  br i1 %28, label %51, label %29, !prof !3

29:                                               ; preds = %24
  %30 = bitcast %"class.blink::Length"* %27 to i8*
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe.700", %"class.base::RefCountedThreadSafe.700"* %20, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %49, label %34, !prof !4

34:                                               ; preds = %29
  %35 = zext i32 %32 to i64
  %36 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %27, i64 %35
  br label %37

37:                                               ; preds = %43, %34
  %38 = phi %"class.blink::Length"* [ %44, %43 ], [ %27, %34 ]
  %39 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 0, i32 2
  %40 = load i8, i8* %39, align 1
  %41 = icmp eq i8 %40, 8
  br i1 %41, label %42, label %43

42:                                               ; preds = %37
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %38) #15
  br label %43

43:                                               ; preds = %42, %37
  %44 = getelementptr inbounds %"class.blink::Length", %"class.blink::Length"* %38, i64 1
  %45 = icmp eq %"class.blink::Length"* %44, %36
  br i1 %45, label %46, label %37

46:                                               ; preds = %43
  store i32 0, i32* %31, align 4
  %47 = bitcast %"class.base::RefCountedThreadSafe.700"* %25 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %46, %29
  %50 = phi i8* [ %48, %46 ], [ %30, %29 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #15
  br label %51

51:                                               ; preds = %49, %24
  %52 = bitcast %"class.base::RefCountedData.699"* %17 to i8*
  tail call void @_ZdlPv(i8* %52) #16
  br label %53

53:                                               ; preds = %13, %19, %51
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink8SVGPaintD1Ev(%"struct.blink::SVGPaint"*) unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase17StyleGeometryDataD2Ev(%"class.blink::ComputedStyleBase::StyleGeometryData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 8
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #15
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 7
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #15
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 6
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #15
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 5
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #15
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #15
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #15
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #15
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGeometryData", %"class.blink::ComputedStyleBase::StyleGeometryData"* %0, i64 0, i32 1, i32 0
  %45 = load %"class.blink::StylePath"*, %"class.blink::StylePath"** %44, align 8
  %46 = icmp eq %"class.blink::StylePath"* %45, null
  br i1 %46, label %60, label %47

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::StylePath", %"class.blink::StylePath"* %45, i64 0, i32 0, i32 1, i32 0
  %49 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %49) #15
  %50 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 0, i32 0, i32 0
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %60

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %48, i64 -2
  %55 = bitcast %"class.base::RefCounted.480"* %54 to %"class.blink::BasicShape"*
  %56 = bitcast %"class.base::RefCounted.480"* %54 to void (%"class.blink::BasicShape"*)***
  %57 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %57, i64 1
  %59 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %58, align 8
  tail call void %59(%"class.blink::BasicShape"* nonnull %55) #15
  br label %60

60:                                               ; preds = %43, %47, %53
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan14PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #15
  br label %7

7:                                                ; preds = %5, %1
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 7, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #15
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 6, i32 0, i32 1, i32 0
  %15 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %16 = icmp eq %"class.blink::PersistentNode"* %15, null
  br i1 %16, label %36, label %17

17:                                               ; preds = %13
  %18 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %19 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %18, i64 0, i32 1
  %20 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %19) #15
  %21 = icmp eq i8* %20, null
  br i1 %21, label %22, label %24, !prof !4

22:                                               ; preds = %17
  %23 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %19, i8* %23) #15
  br label %24

24:                                               ; preds = %22, %17
  %25 = phi i8* [ %23, %22 ], [ %20, %17 ]
  %26 = bitcast i8* %25 to %"class.blink::ThreadState"**
  %27 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %27, i64 0, i32 3, i32 0, i32 0, i32 0
  %29 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %28, align 8
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %14, align 8
  %31 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %29, i64 0, i32 0, i32 0
  %32 = bitcast %"class.blink::PersistentRegion"* %29 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.blink::PersistentNode"* %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %30, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %35, align 8
  store %"class.blink::PersistentNode"* %30, %"class.blink::PersistentNode"** %31, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %14, align 8
  br label %36

36:                                               ; preds = %13, %24
  %37 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 5, i32 0
  %38 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %37, align 8
  %39 = icmp eq %"class.blink::ShadowList"* %38, null
  br i1 %39, label %62, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %42) #15
  %43 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %62

46:                                               ; preds = %40
  %47 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 2
  %48 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 5, i32 0, i32 0
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %52, label %51, !prof !4

51:                                               ; preds = %46
  store i32 0, i32* %48, align 4
  br label %52

52:                                               ; preds = %51, %46
  %53 = bitcast %"class.base::RefCounted.300"* %47 to %"class.blink::ShadowData"**
  %54 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %53, align 8
  %55 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %41, i64 6
  %56 = bitcast %"class.base::RefCounted.300"* %55 to %"class.blink::ShadowData"*
  %57 = icmp eq %"class.blink::ShadowData"* %54, %56
  br i1 %57, label %60, label %58, !prof !3

58:                                               ; preds = %52
  %59 = bitcast %"class.base::RefCounted.300"* %47 to %"class.WTF::VectorBuffer.302"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"* %59, %"class.blink::ShadowData"* %54) #15
  br label %60

60:                                               ; preds = %58, %52
  %61 = bitcast %"class.blink::ShadowList"* %38 to i8*
  tail call void @free(i8* %61) #15
  br label %62

62:                                               ; preds = %36, %40, %60
  %63 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4
  %64 = getelementptr inbounds %"class.blink::TransformOperations", %"class.blink::TransformOperations"* %63, i64 0, i32 0, i32 0, i32 0, i32 0
  %65 = load %class.scoped_refptr.638*, %class.scoped_refptr.638** %64, align 8
  %66 = icmp eq %class.scoped_refptr.638* %65, null
  br i1 %66, label %101, label %67, !prof !3

67:                                               ; preds = %62
  %68 = bitcast %class.scoped_refptr.638* %65 to i8*
  %69 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %99, label %72, !prof !4

72:                                               ; preds = %67
  %73 = zext i32 %70 to i64
  %74 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %65, i64 %73
  br label %75

75:                                               ; preds = %93, %72
  %76 = phi %class.scoped_refptr.638* [ %94, %93 ], [ %65, %72 ]
  %77 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %76, i64 0, i32 0
  %78 = load %"class.blink::TransformOperation"*, %"class.blink::TransformOperation"** %77, align 8
  %79 = icmp eq %"class.blink::TransformOperation"* %78, null
  br i1 %79, label %93, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.blink::TransformOperation", %"class.blink::TransformOperation"* %78, i64 0, i32 1, i32 0
  %82 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %82) #15
  %83 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 0, i32 0, i32 0
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %93

86:                                               ; preds = %80
  %87 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %81, i64 -2
  %88 = bitcast %"class.base::RefCounted.483"* %87 to %"class.blink::TransformOperation"*
  %89 = bitcast %"class.base::RefCounted.483"* %87 to void (%"class.blink::TransformOperation"*)***
  %90 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %90, i64 1
  %92 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %91, align 8
  tail call void %92(%"class.blink::TransformOperation"* nonnull %88) #15
  br label %93

93:                                               ; preds = %86, %80, %75
  %94 = getelementptr inbounds %class.scoped_refptr.638, %class.scoped_refptr.638* %76, i64 1
  %95 = icmp eq %class.scoped_refptr.638* %94, %74
  br i1 %95, label %96, label %75

96:                                               ; preds = %93
  store i32 0, i32* %69, align 4
  %97 = bitcast %"class.blink::TransformOperations"* %63 to i8**
  %98 = load i8*, i8** %97, align 8
  br label %99

99:                                               ; preds = %96, %67
  %100 = phi i8* [ %98, %96 ], [ %68, %67 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %100) #15
  store %class.scoped_refptr.638* null, %class.scoped_refptr.638** %64, align 8
  br label %101

101:                                              ; preds = %62, %99
  %102 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %103 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %102, align 8
  %104 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, null
  br i1 %104, label %112, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %106) #15
  %107 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103, i64 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %105
  tail call void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* nonnull %103) #15
  %111 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %103 to i8*
  tail call void @free(i8* %111) #15
  br label %112

112:                                              ; preds = %101, %105, %110
  %113 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %114 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"** %113, align 8
  %115 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, null
  br i1 %115, label %123, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %117) #15
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i32, i32* %118, align 4
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %116
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* nonnull %114) #15
  %122 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %114 to i8*
  tail call void @free(i8* %122) #15
  br label %123

123:                                              ; preds = %112, %116, %121
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"*, %"class.blink::ShadowData"*) local_unnamed_addr #14 comdat align 2 {
  %3 = bitcast %"class.blink::ShadowData"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase50StyleRareNonInheritedUsageLessThan14PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 23
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #15
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 22
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #15
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 21
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #15
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 20
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #15
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 19
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #15
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 18
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #15
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 17
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #15
  br label %43

43:                                               ; preds = %37, %41
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 16
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #15
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 14, i32 0, i32 0, i32 0
  %51 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %50, align 8
  %52 = icmp eq %"class.blink::NinePieceImageData"* %51, null
  br i1 %52, label %60, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %54) #15
  %55 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %60

58:                                               ; preds = %53
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %51) #15
  %59 = bitcast %"class.blink::NinePieceImageData"* %51 to i8*
  tail call void @free(i8* %59) #15
  br label %60

60:                                               ; preds = %49, %53, %58
  %61 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 13
  tail call void @_ZN5blink9FillLayerD1Ev(%"class.blink::FillLayer"* %61) #15
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12
  %63 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.WTF::String"*, %"class.WTF::String"** %63, align 8
  %65 = icmp eq %"class.WTF::String"* %64, null
  br i1 %65, label %100, label %66, !prof !3

66:                                               ; preds = %60
  %67 = bitcast %"class.WTF::String"* %64 to i8*
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %69 = load i32, i32* %68, align 4
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %98, label %71, !prof !4

71:                                               ; preds = %66
  %72 = zext i32 %69 to i64
  %73 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 %72
  br label %74

74:                                               ; preds = %92, %71
  %75 = phi %"class.WTF::String"* [ %93, %92 ], [ %64, %71 ]
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %76, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #15
  br label %92

92:                                               ; preds = %91, %88, %74
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %75, i64 1
  %94 = icmp eq %"class.WTF::String"* %93, %73
  br i1 %94, label %95, label %74

95:                                               ; preds = %92
  store i32 0, i32* %68, align 4
  %96 = bitcast %"class.WTF::Vector.630"* %62 to i8**
  %97 = load i8*, i8** %96, align 8
  br label %98

98:                                               ; preds = %95, %66
  %99 = phi i8* [ %97, %95 ], [ %67, %66 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %99) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %63, align 8
  br label %100

100:                                              ; preds = %60, %98
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 11, i32 0, i32 0, i32 0
  %102 = load %"class.blink::StyleNonInheritedVariables"*, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  store %"class.blink::StyleNonInheritedVariables"* null, %"class.blink::StyleNonInheritedVariables"** %101, align 8
  %103 = icmp eq %"class.blink::StyleNonInheritedVariables"* %102, null
  br i1 %103, label %107, label %104

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::StyleNonInheritedVariables", %"class.blink::StyleNonInheritedVariables"* %102, i64 0, i32 0
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %105) #15
  %106 = bitcast %"class.blink::StyleNonInheritedVariables"* %102 to i8*
  tail call void @free(i8* %106) #15
  br label %107

107:                                              ; preds = %100, %104
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 10
  tail call void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.613"* %108, %"class.blink::PaintImages"* null) #15
  %109 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %110 = load %"class.blink::CSSTransitionData"*, %"class.blink::CSSTransitionData"** %109, align 8
  store %"class.blink::CSSTransitionData"* null, %"class.blink::CSSTransitionData"** %109, align 8
  %111 = icmp eq %"class.blink::CSSTransitionData"* %110, null
  br i1 %111, label %154, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1
  %114 = getelementptr inbounds %"class.WTF::Vector.605", %"class.WTF::Vector.605"* %113, i64 0, i32 0, i32 0, i32 0
  %115 = load %"struct.blink::CSSTransitionData::TransitionProperty"*, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  %116 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %115, null
  br i1 %116, label %151, label %117, !prof !3

117:                                              ; preds = %112
  %118 = bitcast %"struct.blink::CSSTransitionData::TransitionProperty"* %115 to i8*
  %119 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 1, i32 0, i32 0, i32 2
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %149, label %122, !prof !4

122:                                              ; preds = %117
  %123 = zext i32 %120 to i64
  %124 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %115, i64 %123
  br label %125

125:                                              ; preds = %143, %122
  %126 = phi %"struct.blink::CSSTransitionData::TransitionProperty"* [ %144, %143 ], [ %115, %122 ]
  %127 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 0, i32 2, i32 0, i32 0, i32 0
  %128 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %127, align 8
  %129 = icmp eq %"class.WTF::StringImpl"* %128, null
  br i1 %129, label %143, label %130

130:                                              ; preds = %125
  %131 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load atomic i32, i32* %131 monotonic, align 4
  %133 = and i32 %132, 2
  %134 = icmp eq i32 %133, 0
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %128, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  br i1 %134, label %137, label %139

137:                                              ; preds = %130
  %138 = add i32 %136, -1
  store i32 %138, i32* %135, align 4
  br label %139

139:                                              ; preds = %137, %130
  %140 = phi i32 [ %138, %137 ], [ %136, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %128) #15
  br label %143

143:                                              ; preds = %142, %139, %125
  %144 = getelementptr inbounds %"struct.blink::CSSTransitionData::TransitionProperty", %"struct.blink::CSSTransitionData::TransitionProperty"* %126, i64 1
  %145 = icmp eq %"struct.blink::CSSTransitionData::TransitionProperty"* %144, %124
  br i1 %145, label %146, label %125

146:                                              ; preds = %143
  store i32 0, i32* %119, align 4
  %147 = bitcast %"class.WTF::Vector.605"* %113 to i8**
  %148 = load i8*, i8** %147, align 8
  br label %149

149:                                              ; preds = %146, %117
  %150 = phi i8* [ %148, %146 ], [ %118, %117 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %150) #15
  store %"struct.blink::CSSTransitionData::TransitionProperty"* null, %"struct.blink::CSSTransitionData::TransitionProperty"** %114, align 8
  br label %151

151:                                              ; preds = %112, %149
  %152 = getelementptr inbounds %"class.blink::CSSTransitionData", %"class.blink::CSSTransitionData"* %110, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %152) #15
  %153 = bitcast %"class.blink::CSSTransitionData"* %110 to i8*
  tail call void @free(i8* %153) #15
  br label %154

154:                                              ; preds = %107, %151
  %155 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %156 = load %"class.blink::CSSAnimationData"*, %"class.blink::CSSAnimationData"** %155, align 8
  store %"class.blink::CSSAnimationData"* null, %"class.blink::CSSAnimationData"** %155, align 8
  %157 = icmp eq %"class.blink::CSSAnimationData"* %156, null
  br i1 %157, label %160, label %158

158:                                              ; preds = %154
  tail call void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"* nonnull %156) #15
  %159 = bitcast %"class.blink::CSSAnimationData"* %156 to i8*
  tail call void @free(i8* %159) #15
  br label %160

160:                                              ; preds = %154, %158
  %161 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 7, i32 0, i32 0, i32 0
  %162 = load %"class.blink::CounterDirectiveMap"*, %"class.blink::CounterDirectiveMap"** %161, align 8
  store %"class.blink::CounterDirectiveMap"* null, %"class.blink::CounterDirectiveMap"** %161, align 8
  %163 = icmp eq %"class.blink::CounterDirectiveMap"* %162, null
  br i1 %163, label %202, label %164

164:                                              ; preds = %160
  %165 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 0
  %166 = load %"struct.WTF::KeyValuePair.560"*, %"struct.WTF::KeyValuePair.560"** %165, align 8
  %167 = icmp eq %"struct.WTF::KeyValuePair.560"* %166, null
  br i1 %167, label %200, label %168, !prof !3

168:                                              ; preds = %164
  %169 = getelementptr inbounds %"class.blink::CounterDirectiveMap", %"class.blink::CounterDirectiveMap"* %162, i64 0, i32 0, i32 0, i32 1
  %170 = load i32, i32* %169, align 8
  %171 = icmp eq i32 %170, 0
  br i1 %171, label %198, label %172

172:                                              ; preds = %168
  %173 = zext i32 %170 to i64
  br label %174

174:                                              ; preds = %195, %172
  %175 = phi i64 [ 0, %172 ], [ %196, %195 ]
  %176 = getelementptr inbounds %"struct.WTF::KeyValuePair.560", %"struct.WTF::KeyValuePair.560"* %166, i64 %175
  %177 = bitcast %"struct.WTF::KeyValuePair.560"* %176 to i8**
  %178 = load i8*, i8** %177, align 8
  %179 = bitcast i8* %178 to %"class.WTF::StringImpl"*
  %180 = ptrtoint i8* %178 to i64
  switch i64 %180, label %181 [
    i64 -1, label %195
    i64 0, label %195
  ]

181:                                              ; preds = %174
  %182 = getelementptr inbounds i8, i8* %178, i64 8
  %183 = bitcast i8* %182 to i32*
  %184 = load atomic i32, i32* %183 monotonic, align 4
  %185 = and i32 %184, 2
  %186 = icmp eq i32 %185, 0
  %187 = bitcast i8* %178 to i32*
  %188 = load i32, i32* %187, align 4
  br i1 %186, label %189, label %191

189:                                              ; preds = %181
  %190 = add i32 %188, -1
  store i32 %190, i32* %187, align 4
  br label %191

191:                                              ; preds = %189, %181
  %192 = phi i32 [ %190, %189 ], [ %188, %181 ]
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %195

194:                                              ; preds = %191
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %179) #15
  br label %195

195:                                              ; preds = %194, %191, %174, %174
  %196 = add nuw nsw i64 %175, 1
  %197 = icmp eq i64 %196, %173
  br i1 %197, label %198, label %174

198:                                              ; preds = %195, %168
  %199 = bitcast %"struct.WTF::KeyValuePair.560"* %166 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %199) #15
  store %"struct.WTF::KeyValuePair.560"* null, %"struct.WTF::KeyValuePair.560"** %165, align 8
  br label %200

200:                                              ; preds = %198, %164
  %201 = bitcast %"class.blink::CounterDirectiveMap"* %162 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %201) #15
  br label %202

202:                                              ; preds = %160, %200
  %203 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %204 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %203, align 8
  %205 = icmp eq %"class.WTF::StringImpl"* %204, null
  br i1 %205, label %219, label %206

206:                                              ; preds = %202
  %207 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %208 = load atomic i32, i32* %207 monotonic, align 4
  %209 = and i32 %208, 2
  %210 = icmp eq i32 %209, 0
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %204, i64 0, i32 0
  %212 = load i32, i32* %211, align 4
  br i1 %210, label %213, label %215

213:                                              ; preds = %206
  %214 = add i32 %212, -1
  store i32 %214, i32* %211, align 4
  br label %215

215:                                              ; preds = %213, %206
  %216 = phi i32 [ %214, %213 ], [ %212, %206 ]
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %219

218:                                              ; preds = %215
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %204) #15
  br label %219

219:                                              ; preds = %202, %215, %218
  %220 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %220, align 8
  %222 = icmp eq %"class.WTF::StringImpl"* %221, null
  br i1 %222, label %236, label %223

223:                                              ; preds = %219
  %224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load atomic i32, i32* %224 monotonic, align 4
  %226 = and i32 %225, 2
  %227 = icmp eq i32 %226, 0
  %228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %221, i64 0, i32 0
  %229 = load i32, i32* %228, align 4
  br i1 %227, label %230, label %232

230:                                              ; preds = %223
  %231 = add i32 %229, -1
  store i32 %231, i32* %228, align 4
  br label %232

232:                                              ; preds = %230, %223
  %233 = phi i32 [ %231, %230 ], [ %229, %223 ]
  %234 = icmp eq i32 %233, 0
  br i1 %234, label %235, label %236

235:                                              ; preds = %232
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %221) #15
  br label %236

236:                                              ; preds = %219, %232, %235
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %238 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %237, align 8
  %239 = icmp eq %"class.WTF::StringImpl"* %238, null
  br i1 %239, label %253, label %240

240:                                              ; preds = %236
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %242 = load atomic i32, i32* %241 monotonic, align 4
  %243 = and i32 %242, 2
  %244 = icmp eq i32 %243, 0
  %245 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %238, i64 0, i32 0
  %246 = load i32, i32* %245, align 4
  br i1 %244, label %247, label %249

247:                                              ; preds = %240
  %248 = add i32 %246, -1
  store i32 %248, i32* %245, align 4
  br label %249

249:                                              ; preds = %247, %240
  %250 = phi i32 [ %248, %247 ], [ %246, %240 ]
  %251 = icmp eq i32 %250, 0
  br i1 %251, label %252, label %253

252:                                              ; preds = %249
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %238) #15
  br label %253

253:                                              ; preds = %236, %249, %252
  %254 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 3, i32 0, i32 0
  %255 = load %"class.blink::ComputedStyleBase::StyleGridData"*, %"class.blink::ComputedStyleBase::StyleGridData"** %254, align 8
  %256 = icmp eq %"class.blink::ComputedStyleBase::StyleGridData"* %255, null
  br i1 %256, label %264, label %257

257:                                              ; preds = %253
  %258 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %258) #15
  %259 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %255, i64 0, i32 0, i32 0, i32 0, i32 0
  %260 = load i32, i32* %259, align 4
  %261 = icmp eq i32 %260, 0
  br i1 %261, label %262, label %264

262:                                              ; preds = %257
  tail call void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"* nonnull %255) #15
  %263 = bitcast %"class.blink::ComputedStyleBase::StyleGridData"* %255 to i8*
  tail call void @free(i8* %263) #15
  br label %264

264:                                              ; preds = %253, %257, %262
  %265 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0
  %266 = load %"class.blink::ComputedStyleBase::StyleWillChangeData"*, %"class.blink::ComputedStyleBase::StyleWillChangeData"** %265, align 8
  %267 = icmp eq %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, null
  br i1 %267, label %288, label %268

268:                                              ; preds = %264
  %269 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0
  %270 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %270) #15
  %271 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleWillChangeData", %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266, i64 0, i32 0, i32 0, i32 0, i32 0
  %272 = load i32, i32* %271, align 4
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %288

274:                                              ; preds = %268
  %275 = getelementptr inbounds %"class.base::RefCounted.528", %"class.base::RefCounted.528"* %269, i64 2
  %276 = bitcast %"class.base::RefCounted.528"* %275 to i32**
  %277 = load i32*, i32** %276, align 8
  %278 = icmp eq i32* %277, null
  %279 = bitcast i32* %277 to i8*
  br i1 %278, label %286, label %280, !prof !3

280:                                              ; preds = %274
  %281 = getelementptr inbounds %"class.base::RefCounted.528", %"class.base::RefCounted.528"* %269, i64 5, i32 0, i32 0
  %282 = load i32, i32* %281, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %285, label %284, !prof !4

284:                                              ; preds = %280
  store i32 0, i32* %281, align 4
  br label %285

285:                                              ; preds = %284, %280
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %279) #15
  br label %286

286:                                              ; preds = %285, %274
  %287 = bitcast %"class.blink::ComputedStyleBase::StyleWillChangeData"* %266 to i8*
  tail call void @free(i8* %287) #15
  br label %288

288:                                              ; preds = %264, %268, %286
  %289 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %0, i64 0, i32 1, i32 0, i32 0
  %290 = load %"class.blink::ComputedStyleBase::StyleMultiColData"*, %"class.blink::ComputedStyleBase::StyleMultiColData"** %289, align 8
  %291 = icmp eq %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, null
  br i1 %291, label %299, label %292

292:                                              ; preds = %288
  %293 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %293) #15
  %294 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleMultiColData", %"class.blink::ComputedStyleBase::StyleMultiColData"* %290, i64 0, i32 0, i32 0, i32 0, i32 0
  %295 = load i32, i32* %294, align 4
  %296 = icmp eq i32 %295, 0
  br i1 %296, label %297, label %299

297:                                              ; preds = %292
  %298 = bitcast %"class.blink::ComputedStyleBase::StyleMultiColData"* %290 to i8*
  tail call void @free(i8* %298) #15
  br label %299

299:                                              ; preds = %288, %292, %297
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110unique_ptrIN5blink11PaintImagesENS_14default_deleteIS2_EEE5resetEPS2_(%"class.std::__1::unique_ptr.613"*, %"class.blink::PaintImages"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::unique_ptr.613", %"class.std::__1::unique_ptr.613"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::PaintImages"*, %"class.blink::PaintImages"** %3, align 8
  store %"class.blink::PaintImages"* %1, %"class.blink::PaintImages"** %3, align 8
  %5 = icmp eq %"class.blink::PaintImages"* %4, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"class.blink::Persistent.306"*, %"class.blink::Persistent.306"** %7, align 8
  %9 = icmp eq %"class.blink::Persistent.306"* %8, null
  br i1 %9, label %50, label %10, !prof !3

10:                                               ; preds = %6
  %11 = bitcast %"class.blink::Persistent.306"* %8 to i8*
  %12 = getelementptr inbounds %"class.blink::PaintImages", %"class.blink::PaintImages"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %48, label %15, !prof !4

15:                                               ; preds = %10
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %8, i64 %16
  br label %18

18:                                               ; preds = %15, %42
  %19 = phi %"class.blink::Persistent.306"* [ %43, %42 ], [ %8, %15 ]
  %20 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %19, i64 0, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %18
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #15
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !4

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #15
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %30, %18
  %43 = getelementptr inbounds %"class.blink::Persistent.306", %"class.blink::Persistent.306"* %19, i64 1
  %44 = icmp eq %"class.blink::Persistent.306"* %43, %17
  br i1 %44, label %45, label %18

45:                                               ; preds = %42
  store i32 0, i32* %12, align 4
  %46 = bitcast %"class.blink::PaintImages"* %4 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %10
  %49 = phi i8* [ %47, %45 ], [ %11, %10 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #15
  store %"class.blink::Persistent.306"* null, %"class.blink::Persistent.306"** %7, align 8
  br label %50

50:                                               ; preds = %6, %48
  %51 = bitcast %"class.blink::PaintImages"* %4 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %51) #15
  br label %52

52:                                               ; preds = %2, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2
  %3 = getelementptr inbounds %"class.WTF::Vector.572", %"class.WTF::Vector.572"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %class.scoped_refptr.575*, %class.scoped_refptr.575** %3, align 8
  %5 = icmp eq %class.scoped_refptr.575* %4, null
  br i1 %5, label %39, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %class.scoped_refptr.575* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %37, label %11, !prof !4

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %4, i64 %12
  br label %14

14:                                               ; preds = %31, %11
  %15 = phi %class.scoped_refptr.575* [ %32, %31 ], [ %4, %11 ]
  %16 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %15, i64 0, i32 0
  %17 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %16, align 8
  %18 = icmp eq %"class.blink::TimingFunction"* %17, null
  br i1 %18, label %31, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %17, i64 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe.576", %"class.base::RefCountedThreadSafe.576"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = atomicrmw sub i32* %21, i32 1 acq_rel
  %23 = icmp eq i32 %22, 1
  br i1 %23, label %24, label %31

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.base::RefCountedThreadSafe.576", %"class.base::RefCountedThreadSafe.576"* %20, i64 -2
  %26 = bitcast %"class.base::RefCountedThreadSafe.576"* %25 to %"class.blink::TimingFunction"*
  %27 = bitcast %"class.base::RefCountedThreadSafe.576"* %25 to void (%"class.blink::TimingFunction"*)***
  %28 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %28, i64 1
  %30 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %29, align 8
  tail call void %30(%"class.blink::TimingFunction"* nonnull %26) #15
  br label %31

31:                                               ; preds = %24, %19, %14
  %32 = getelementptr inbounds %class.scoped_refptr.575, %class.scoped_refptr.575* %15, i64 1
  %33 = icmp eq %class.scoped_refptr.575* %32, %13
  br i1 %33, label %34, label %14

34:                                               ; preds = %31
  store i32 0, i32* %8, align 4
  %35 = bitcast %"class.WTF::Vector.572"* %2 to i8**
  %36 = load i8*, i8** %35, align 8
  br label %37

37:                                               ; preds = %34, %6
  %38 = phi i8* [ %36, %34 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %38) #15
  store %class.scoped_refptr.575* null, %class.scoped_refptr.575** %3, align 8
  br label %39

39:                                               ; preds = %1, %37
  %40 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %41 = load double*, double** %40, align 8
  %42 = icmp eq double* %41, null
  %43 = bitcast double* %41 to i8*
  br i1 %42, label %50, label %44, !prof !3

44:                                               ; preds = %39
  %45 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %49, label %48, !prof !4

48:                                               ; preds = %44
  store i32 0, i32* %45, align 4
  br label %49

49:                                               ; preds = %48, %44
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %43) #15
  store double* null, double** %40, align 8
  br label %50

50:                                               ; preds = %39, %49
  %51 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %52 = load double*, double** %51, align 8
  %53 = icmp eq double* %52, null
  %54 = bitcast double* %52 to i8*
  br i1 %53, label %61, label %55, !prof !3

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.blink::CSSTimingData", %"class.blink::CSSTimingData"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %60, label %59, !prof !4

59:                                               ; preds = %55
  store i32 0, i32* %56, align 4
  br label %60

60:                                               ; preds = %59, %55
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %54) #15
  store double* null, double** %51, align 8
  br label %61

61:                                               ; preds = %50, %60
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink16CSSAnimationDataD2Ev(%"class.blink::CSSAnimationData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = icmp eq i32* %3, null
  %5 = bitcast i32* %3 to i8*
  br i1 %4, label %12, label %6, !prof !3

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 6, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %11, label %10, !prof !4

10:                                               ; preds = %6
  store i32 0, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %5) #15
  store i32* null, i32** %2, align 8
  br label %12

12:                                               ; preds = %1, %11
  %13 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %14 = load i32*, i32** %13, align 8
  %15 = icmp eq i32* %14, null
  %16 = bitcast i32* %14 to i8*
  br i1 %15, label %23, label %17, !prof !3

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 5, i32 0, i32 0, i32 2
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %22, label %21, !prof !4

21:                                               ; preds = %17
  store i32 0, i32* %18, align 4
  br label %22

22:                                               ; preds = %21, %17
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %16) #15
  store i32* null, i32** %13, align 8
  br label %23

23:                                               ; preds = %12, %22
  %24 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %25 = load i32*, i32** %24, align 8
  %26 = icmp eq i32* %25, null
  %27 = bitcast i32* %25 to i8*
  br i1 %26, label %34, label %28, !prof !3

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %33, label %32, !prof !4

32:                                               ; preds = %28
  store i32 0, i32* %29, align 4
  br label %33

33:                                               ; preds = %32, %28
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %27) #15
  store i32* null, i32** %24, align 8
  br label %34

34:                                               ; preds = %23, %33
  %35 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %36 = load double*, double** %35, align 8
  %37 = icmp eq double* %36, null
  %38 = bitcast double* %36 to i8*
  br i1 %37, label %45, label %39, !prof !3

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 3, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43, !prof !4

43:                                               ; preds = %39
  store i32 0, i32* %40, align 4
  br label %44

44:                                               ; preds = %43, %39
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #15
  store double* null, double** %35, align 8
  br label %45

45:                                               ; preds = %34, %44
  %46 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2
  %47 = getelementptr inbounds %"class.WTF::Vector.579", %"class.WTF::Vector.579"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.blink::StyleNameOrKeyword"*, %"class.blink::StyleNameOrKeyword"** %47, align 8
  %49 = icmp eq %"class.blink::StyleNameOrKeyword"* %48, null
  br i1 %49, label %84, label %50, !prof !3

50:                                               ; preds = %45
  %51 = bitcast %"class.blink::StyleNameOrKeyword"* %48 to i8*
  %52 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 2, i32 0, i32 0, i32 2
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %82, label %55, !prof !4

55:                                               ; preds = %50
  %56 = zext i32 %53 to i64
  %57 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %48, i64 %56
  br label %58

58:                                               ; preds = %76, %55
  %59 = phi %"class.blink::StyleNameOrKeyword"* [ %77, %76 ], [ %48, %55 ]
  %60 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #15
  br label %76

76:                                               ; preds = %75, %72, %58
  %77 = getelementptr inbounds %"class.blink::StyleNameOrKeyword", %"class.blink::StyleNameOrKeyword"* %59, i64 1
  %78 = icmp eq %"class.blink::StyleNameOrKeyword"* %77, %57
  br i1 %78, label %79, label %58

79:                                               ; preds = %76
  store i32 0, i32* %52, align 4
  %80 = bitcast %"class.WTF::Vector.579"* %46 to i8**
  %81 = load i8*, i8** %80, align 8
  br label %82

82:                                               ; preds = %79, %50
  %83 = phi i8* [ %81, %79 ], [ %51, %50 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %83) #15
  store %"class.blink::StyleNameOrKeyword"* null, %"class.blink::StyleNameOrKeyword"** %47, align 8
  br label %84

84:                                               ; preds = %45, %82
  %85 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1
  %86 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %86, align 8
  %88 = icmp eq %"class.WTF::AtomicString"* %87, null
  br i1 %88, label %123, label %89, !prof !3

89:                                               ; preds = %84
  %90 = bitcast %"class.WTF::AtomicString"* %87 to i8*
  %91 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 1, i32 0, i32 0, i32 2
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %121, label %94, !prof !4

94:                                               ; preds = %89
  %95 = zext i32 %92 to i64
  %96 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %87, i64 %95
  br label %97

97:                                               ; preds = %115, %94
  %98 = phi %"class.WTF::AtomicString"* [ %116, %115 ], [ %87, %94 ]
  %99 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %99, align 8
  %101 = icmp eq %"class.WTF::StringImpl"* %100, null
  br i1 %101, label %115, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i32 %104, 2
  %106 = icmp eq i32 %105, 0
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %100, i64 0, i32 0
  %108 = load i32, i32* %107, align 4
  br i1 %106, label %109, label %111

109:                                              ; preds = %102
  %110 = add i32 %108, -1
  store i32 %110, i32* %107, align 4
  br label %111

111:                                              ; preds = %109, %102
  %112 = phi i32 [ %110, %109 ], [ %108, %102 ]
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %115

114:                                              ; preds = %111
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %100) #15
  br label %115

115:                                              ; preds = %114, %111, %97
  %116 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %98, i64 1
  %117 = icmp eq %"class.WTF::AtomicString"* %116, %96
  br i1 %117, label %118, label %97

118:                                              ; preds = %115
  store i32 0, i32* %91, align 4
  %119 = bitcast %"class.WTF::Vector.284"* %85 to i8**
  %120 = load i8*, i8** %119, align 8
  br label %121

121:                                              ; preds = %118, %89
  %122 = phi i8* [ %120, %118 ], [ %90, %89 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %122) #15
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %86, align 8
  br label %123

123:                                              ; preds = %84, %121
  %124 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %0, i64 0, i32 0
  tail call void @_ZN5blink13CSSTimingDataD2Ev(%"class.blink::CSSTimingData"* %124) #15
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase13StyleGridDataD2Ev(%"class.blink::ComputedStyleBase::StyleGridData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14
  %3 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %2, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %3, align 8
  %5 = icmp eq %"class.blink::GridTrackSize"* %4, null
  br i1 %5, label %41, label %6, !prof !3

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::GridTrackSize"* %4 to i8*
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 14, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %39, label %11, !prof !4

11:                                               ; preds = %6
  %12 = zext i32 %9 to i64
  %13 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %4, i64 %12
  br label %14

14:                                               ; preds = %33, %11
  %15 = phi %"class.blink::GridTrackSize"* [ %34, %33 ], [ %4, %11 ]
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0, i32 2
  %17 = load i8, i8* %16, align 1
  %18 = icmp eq i8 %17, 8
  br i1 %18, label %19, label %21

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %20) #15
  br label %21

21:                                               ; preds = %19, %14
  %22 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0, i32 2
  %23 = load i8, i8* %22, align 1
  %24 = icmp eq i8 %23, 8
  br i1 %24, label %25, label %27

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %26) #15
  br label %27

27:                                               ; preds = %25, %21
  %28 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0, i32 2
  %29 = load i8, i8* %28, align 1
  %30 = icmp eq i8 %29, 8
  br i1 %30, label %31, label %33

31:                                               ; preds = %27
  %32 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %32) #15
  br label %33

33:                                               ; preds = %31, %27
  %34 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %15, i64 1
  %35 = icmp eq %"class.blink::GridTrackSize"* %34, %13
  br i1 %35, label %36, label %14

36:                                               ; preds = %33
  store i32 0, i32* %8, align 4
  %37 = bitcast %"class.WTF::Vector.459"* %2 to i8**
  %38 = load i8*, i8** %37, align 8
  br label %39

39:                                               ; preds = %36, %6
  %40 = phi i8* [ %38, %36 ], [ %7, %6 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %40) #15
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %3, align 8
  br label %41

41:                                               ; preds = %1, %39
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13
  %43 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %42, i64 0, i32 0, i32 0, i32 0
  %44 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %43, align 8
  %45 = icmp eq %"class.blink::GridTrackSize"* %44, null
  br i1 %45, label %81, label %46, !prof !3

46:                                               ; preds = %41
  %47 = bitcast %"class.blink::GridTrackSize"* %44 to i8*
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 13, i32 0, i32 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %79, label %51, !prof !4

51:                                               ; preds = %46
  %52 = zext i32 %49 to i64
  %53 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %44, i64 %52
  br label %54

54:                                               ; preds = %73, %51
  %55 = phi %"class.blink::GridTrackSize"* [ %74, %73 ], [ %44, %51 ]
  %56 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %54
  %60 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #15
  br label %61

61:                                               ; preds = %59, %54
  %62 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #15
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #15
  br label %73

73:                                               ; preds = %71, %67
  %74 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %55, i64 1
  %75 = icmp eq %"class.blink::GridTrackSize"* %74, %53
  br i1 %75, label %76, label %54

76:                                               ; preds = %73
  store i32 0, i32* %48, align 4
  %77 = bitcast %"class.WTF::Vector.459"* %42 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %46
  %80 = phi i8* [ %78, %76 ], [ %47, %46 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %80) #15
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %43, align 8
  br label %81

81:                                               ; preds = %41, %79
  %82 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 0
  %83 = load %"struct.WTF::KeyValuePair.552"*, %"struct.WTF::KeyValuePair.552"** %82, align 8
  %84 = icmp eq %"struct.WTF::KeyValuePair.552"* %83, null
  br i1 %84, label %117, label %85, !prof !3

85:                                               ; preds = %81
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 12, i32 0, i32 1
  %87 = load i32, i32* %86, align 8
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %115, label %89

89:                                               ; preds = %85
  %90 = zext i32 %87 to i64
  br label %91

91:                                               ; preds = %112, %89
  %92 = phi i64 [ 0, %89 ], [ %113, %112 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.552", %"struct.WTF::KeyValuePair.552"* %83, i64 %92
  %94 = bitcast %"struct.WTF::KeyValuePair.552"* %93 to i8**
  %95 = load i8*, i8** %94, align 8
  %96 = bitcast i8* %95 to %"class.WTF::StringImpl"*
  %97 = ptrtoint i8* %95 to i64
  switch i64 %97, label %98 [
    i64 -1, label %112
    i64 0, label %112
  ]

98:                                               ; preds = %91
  %99 = getelementptr inbounds i8, i8* %95, i64 8
  %100 = bitcast i8* %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = bitcast i8* %95 to i32*
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %98
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %98
  %109 = phi i32 [ %107, %106 ], [ %105, %98 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %96) #15
  br label %112

112:                                              ; preds = %111, %108, %91, %91
  %113 = add nuw nsw i64 %92, 1
  %114 = icmp eq i64 %113, %90
  br i1 %114, label %115, label %91

115:                                              ; preds = %112, %85
  %116 = bitcast %"struct.WTF::KeyValuePair.552"* %83 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %116) #15
  store %"struct.WTF::KeyValuePair.552"* null, %"struct.WTF::KeyValuePair.552"** %82, align 8
  br label %117

117:                                              ; preds = %81, %115
  %118 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 0
  %119 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %118, align 8
  %120 = icmp eq %"struct.WTF::KeyValuePair.547"* %119, null
  br i1 %120, label %124, label %121, !prof !3

121:                                              ; preds = %117
  %122 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 11, i32 0, i32 1
  %123 = load i32, i32* %122, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %119, i32 %123) #15
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %118, align 8
  br label %124

124:                                              ; preds = %117, %121
  %125 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 0
  %126 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %125, align 8
  %127 = icmp eq %"struct.WTF::KeyValuePair.547"* %126, null
  br i1 %127, label %131, label %128, !prof !3

128:                                              ; preds = %124
  %129 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 10, i32 0, i32 1
  %130 = load i32, i32* %129, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %126, i32 %130) #15
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %125, align 8
  br label %131

131:                                              ; preds = %124, %128
  %132 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 0
  %133 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %132, align 8
  %134 = icmp eq %"struct.WTF::KeyValuePair.547"* %133, null
  br i1 %134, label %138, label %135, !prof !3

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 9, i32 0, i32 1
  %137 = load i32, i32* %136, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %133, i32 %137) #15
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %132, align 8
  br label %138

138:                                              ; preds = %131, %135
  %139 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 0
  %140 = load %"struct.WTF::KeyValuePair.547"*, %"struct.WTF::KeyValuePair.547"** %139, align 8
  %141 = icmp eq %"struct.WTF::KeyValuePair.547"* %140, null
  br i1 %141, label %145, label %142, !prof !3

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 8, i32 0, i32 1
  %144 = load i32, i32* %143, align 8
  tail call void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"* nonnull %140, i32 %144) #15
  store %"struct.WTF::KeyValuePair.547"* null, %"struct.WTF::KeyValuePair.547"** %139, align 8
  br label %145

145:                                              ; preds = %138, %142
  %146 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 0
  %147 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %146, align 8
  %148 = icmp eq %"struct.WTF::KeyValuePair.542"* %147, null
  br i1 %148, label %196, label %149, !prof !3

149:                                              ; preds = %145
  %150 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 7, i32 0, i32 1
  %151 = load i32, i32* %150, align 8
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %194, label %153

153:                                              ; preds = %149
  %154 = zext i32 %151 to i64
  br label %155

155:                                              ; preds = %191, %153
  %156 = phi i64 [ 0, %153 ], [ %192, %191 ]
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156
  %158 = bitcast %"struct.WTF::KeyValuePair.542"* %157 to i8**
  %159 = load i8*, i8** %158, align 8
  %160 = icmp eq i8* %159, inttoptr (i64 -1 to i8*)
  br i1 %160, label %191, label %161

161:                                              ; preds = %155
  %162 = bitcast i8* %159 to %"class.WTF::StringImpl"*
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156, i32 1, i32 0, i32 0, i32 0
  %164 = load i64*, i64** %163, align 8
  %165 = icmp eq i64* %164, null
  %166 = bitcast i64* %164 to i8*
  br i1 %165, label %175, label %167, !prof !3

167:                                              ; preds = %161
  %168 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %147, i64 %156, i32 1, i32 0, i32 0, i32 2
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %172, label %171, !prof !4

171:                                              ; preds = %167
  store i32 0, i32* %168, align 4
  br label %172

172:                                              ; preds = %171, %167
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %166) #15
  store i64* null, i64** %163, align 8
  %173 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %157, i64 0, i32 0, i32 0, i32 0
  %174 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %173, align 8
  br label %175

175:                                              ; preds = %172, %161
  %176 = phi %"class.WTF::StringImpl"* [ %174, %172 ], [ %162, %161 ]
  %177 = icmp eq %"class.WTF::StringImpl"* %176, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %175
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, 2
  %182 = icmp eq i32 %181, 0
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %176, i64 0, i32 0
  %184 = load i32, i32* %183, align 4
  br i1 %182, label %185, label %187

185:                                              ; preds = %178
  %186 = add i32 %184, -1
  store i32 %186, i32* %183, align 4
  br label %187

187:                                              ; preds = %185, %178
  %188 = phi i32 [ %186, %185 ], [ %184, %178 ]
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %187
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %176) #15
  br label %191

191:                                              ; preds = %190, %187, %175, %155
  %192 = add nuw nsw i64 %156, 1
  %193 = icmp eq i64 %192, %154
  br i1 %193, label %194, label %155

194:                                              ; preds = %191, %149
  %195 = bitcast %"struct.WTF::KeyValuePair.542"* %147 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %195) #15
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %146, align 8
  br label %196

196:                                              ; preds = %145, %194
  %197 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 0
  %198 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %197, align 8
  %199 = icmp eq %"struct.WTF::KeyValuePair.542"* %198, null
  br i1 %199, label %247, label %200, !prof !3

200:                                              ; preds = %196
  %201 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 6, i32 0, i32 1
  %202 = load i32, i32* %201, align 8
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %245, label %204

204:                                              ; preds = %200
  %205 = zext i32 %202 to i64
  br label %206

206:                                              ; preds = %242, %204
  %207 = phi i64 [ 0, %204 ], [ %243, %242 ]
  %208 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207
  %209 = bitcast %"struct.WTF::KeyValuePair.542"* %208 to i8**
  %210 = load i8*, i8** %209, align 8
  %211 = icmp eq i8* %210, inttoptr (i64 -1 to i8*)
  br i1 %211, label %242, label %212

212:                                              ; preds = %206
  %213 = bitcast i8* %210 to %"class.WTF::StringImpl"*
  %214 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207, i32 1, i32 0, i32 0, i32 0
  %215 = load i64*, i64** %214, align 8
  %216 = icmp eq i64* %215, null
  %217 = bitcast i64* %215 to i8*
  br i1 %216, label %226, label %218, !prof !3

218:                                              ; preds = %212
  %219 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %198, i64 %207, i32 1, i32 0, i32 0, i32 2
  %220 = load i32, i32* %219, align 4
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %223, label %222, !prof !4

222:                                              ; preds = %218
  store i32 0, i32* %219, align 4
  br label %223

223:                                              ; preds = %222, %218
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %217) #15
  store i64* null, i64** %214, align 8
  %224 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %208, i64 0, i32 0, i32 0, i32 0
  %225 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %224, align 8
  br label %226

226:                                              ; preds = %223, %212
  %227 = phi %"class.WTF::StringImpl"* [ %225, %223 ], [ %213, %212 ]
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %242, label %229

229:                                              ; preds = %226
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #15
  br label %242

242:                                              ; preds = %241, %238, %226, %206
  %243 = add nuw nsw i64 %207, 1
  %244 = icmp eq i64 %243, %205
  br i1 %244, label %245, label %206

245:                                              ; preds = %242, %200
  %246 = bitcast %"struct.WTF::KeyValuePair.542"* %198 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %246) #15
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %197, align 8
  br label %247

247:                                              ; preds = %196, %245
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 0
  %249 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %248, align 8
  %250 = icmp eq %"struct.WTF::KeyValuePair.542"* %249, null
  br i1 %250, label %298, label %251, !prof !3

251:                                              ; preds = %247
  %252 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 5, i32 0, i32 1
  %253 = load i32, i32* %252, align 8
  %254 = icmp eq i32 %253, 0
  br i1 %254, label %296, label %255

255:                                              ; preds = %251
  %256 = zext i32 %253 to i64
  br label %257

257:                                              ; preds = %293, %255
  %258 = phi i64 [ 0, %255 ], [ %294, %293 ]
  %259 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258
  %260 = bitcast %"struct.WTF::KeyValuePair.542"* %259 to i8**
  %261 = load i8*, i8** %260, align 8
  %262 = icmp eq i8* %261, inttoptr (i64 -1 to i8*)
  br i1 %262, label %293, label %263

263:                                              ; preds = %257
  %264 = bitcast i8* %261 to %"class.WTF::StringImpl"*
  %265 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258, i32 1, i32 0, i32 0, i32 0
  %266 = load i64*, i64** %265, align 8
  %267 = icmp eq i64* %266, null
  %268 = bitcast i64* %266 to i8*
  br i1 %267, label %277, label %269, !prof !3

269:                                              ; preds = %263
  %270 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %249, i64 %258, i32 1, i32 0, i32 0, i32 2
  %271 = load i32, i32* %270, align 4
  %272 = icmp eq i32 %271, 0
  br i1 %272, label %274, label %273, !prof !4

273:                                              ; preds = %269
  store i32 0, i32* %270, align 4
  br label %274

274:                                              ; preds = %273, %269
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %268) #15
  store i64* null, i64** %265, align 8
  %275 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %259, i64 0, i32 0, i32 0, i32 0
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  br label %277

277:                                              ; preds = %274, %263
  %278 = phi %"class.WTF::StringImpl"* [ %276, %274 ], [ %264, %263 ]
  %279 = icmp eq %"class.WTF::StringImpl"* %278, null
  br i1 %279, label %293, label %280

280:                                              ; preds = %277
  %281 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %282 = load atomic i32, i32* %281 monotonic, align 4
  %283 = and i32 %282, 2
  %284 = icmp eq i32 %283, 0
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %278, i64 0, i32 0
  %286 = load i32, i32* %285, align 4
  br i1 %284, label %287, label %289

287:                                              ; preds = %280
  %288 = add i32 %286, -1
  store i32 %288, i32* %285, align 4
  br label %289

289:                                              ; preds = %287, %280
  %290 = phi i32 [ %288, %287 ], [ %286, %280 ]
  %291 = icmp eq i32 %290, 0
  br i1 %291, label %292, label %293

292:                                              ; preds = %289
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %278) #15
  br label %293

293:                                              ; preds = %292, %289, %277, %257
  %294 = add nuw nsw i64 %258, 1
  %295 = icmp eq i64 %294, %256
  br i1 %295, label %296, label %257

296:                                              ; preds = %293, %251
  %297 = bitcast %"struct.WTF::KeyValuePair.542"* %249 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %297) #15
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %248, align 8
  br label %298

298:                                              ; preds = %247, %296
  %299 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 0
  %300 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %299, align 8
  %301 = icmp eq %"struct.WTF::KeyValuePair.542"* %300, null
  br i1 %301, label %349, label %302, !prof !3

302:                                              ; preds = %298
  %303 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 4, i32 0, i32 1
  %304 = load i32, i32* %303, align 8
  %305 = icmp eq i32 %304, 0
  br i1 %305, label %347, label %306

306:                                              ; preds = %302
  %307 = zext i32 %304 to i64
  br label %308

308:                                              ; preds = %344, %306
  %309 = phi i64 [ 0, %306 ], [ %345, %344 ]
  %310 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309
  %311 = bitcast %"struct.WTF::KeyValuePair.542"* %310 to i8**
  %312 = load i8*, i8** %311, align 8
  %313 = icmp eq i8* %312, inttoptr (i64 -1 to i8*)
  br i1 %313, label %344, label %314

314:                                              ; preds = %308
  %315 = bitcast i8* %312 to %"class.WTF::StringImpl"*
  %316 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309, i32 1, i32 0, i32 0, i32 0
  %317 = load i64*, i64** %316, align 8
  %318 = icmp eq i64* %317, null
  %319 = bitcast i64* %317 to i8*
  br i1 %318, label %328, label %320, !prof !3

320:                                              ; preds = %314
  %321 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %300, i64 %309, i32 1, i32 0, i32 0, i32 2
  %322 = load i32, i32* %321, align 4
  %323 = icmp eq i32 %322, 0
  br i1 %323, label %325, label %324, !prof !4

324:                                              ; preds = %320
  store i32 0, i32* %321, align 4
  br label %325

325:                                              ; preds = %324, %320
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %319) #15
  store i64* null, i64** %316, align 8
  %326 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %310, i64 0, i32 0, i32 0, i32 0
  %327 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %326, align 8
  br label %328

328:                                              ; preds = %325, %314
  %329 = phi %"class.WTF::StringImpl"* [ %327, %325 ], [ %315, %314 ]
  %330 = icmp eq %"class.WTF::StringImpl"* %329, null
  br i1 %330, label %344, label %331

331:                                              ; preds = %328
  %332 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = and i32 %333, 2
  %335 = icmp eq i32 %334, 0
  %336 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %329, i64 0, i32 0
  %337 = load i32, i32* %336, align 4
  br i1 %335, label %338, label %340

338:                                              ; preds = %331
  %339 = add i32 %337, -1
  store i32 %339, i32* %336, align 4
  br label %340

340:                                              ; preds = %338, %331
  %341 = phi i32 [ %339, %338 ], [ %337, %331 ]
  %342 = icmp eq i32 %341, 0
  br i1 %342, label %343, label %344

343:                                              ; preds = %340
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %329) #15
  br label %344

344:                                              ; preds = %343, %340, %328, %308
  %345 = add nuw nsw i64 %309, 1
  %346 = icmp eq i64 %345, %307
  br i1 %346, label %347, label %308

347:                                              ; preds = %344, %302
  %348 = bitcast %"struct.WTF::KeyValuePair.542"* %300 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %348) #15
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %299, align 8
  br label %349

349:                                              ; preds = %298, %347
  %350 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 0
  %351 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %350, align 8
  %352 = icmp eq %"struct.WTF::KeyValuePair.542"* %351, null
  br i1 %352, label %400, label %353, !prof !3

353:                                              ; preds = %349
  %354 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 3, i32 0, i32 1
  %355 = load i32, i32* %354, align 8
  %356 = icmp eq i32 %355, 0
  br i1 %356, label %398, label %357

357:                                              ; preds = %353
  %358 = zext i32 %355 to i64
  br label %359

359:                                              ; preds = %395, %357
  %360 = phi i64 [ 0, %357 ], [ %396, %395 ]
  %361 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360
  %362 = bitcast %"struct.WTF::KeyValuePair.542"* %361 to i8**
  %363 = load i8*, i8** %362, align 8
  %364 = icmp eq i8* %363, inttoptr (i64 -1 to i8*)
  br i1 %364, label %395, label %365

365:                                              ; preds = %359
  %366 = bitcast i8* %363 to %"class.WTF::StringImpl"*
  %367 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360, i32 1, i32 0, i32 0, i32 0
  %368 = load i64*, i64** %367, align 8
  %369 = icmp eq i64* %368, null
  %370 = bitcast i64* %368 to i8*
  br i1 %369, label %379, label %371, !prof !3

371:                                              ; preds = %365
  %372 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %351, i64 %360, i32 1, i32 0, i32 0, i32 2
  %373 = load i32, i32* %372, align 4
  %374 = icmp eq i32 %373, 0
  br i1 %374, label %376, label %375, !prof !4

375:                                              ; preds = %371
  store i32 0, i32* %372, align 4
  br label %376

376:                                              ; preds = %375, %371
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %370) #15
  store i64* null, i64** %367, align 8
  %377 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %361, i64 0, i32 0, i32 0, i32 0
  %378 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %377, align 8
  br label %379

379:                                              ; preds = %376, %365
  %380 = phi %"class.WTF::StringImpl"* [ %378, %376 ], [ %366, %365 ]
  %381 = icmp eq %"class.WTF::StringImpl"* %380, null
  br i1 %381, label %395, label %382

382:                                              ; preds = %379
  %383 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %384 = load atomic i32, i32* %383 monotonic, align 4
  %385 = and i32 %384, 2
  %386 = icmp eq i32 %385, 0
  %387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %380, i64 0, i32 0
  %388 = load i32, i32* %387, align 4
  br i1 %386, label %389, label %391

389:                                              ; preds = %382
  %390 = add i32 %388, -1
  store i32 %390, i32* %387, align 4
  br label %391

391:                                              ; preds = %389, %382
  %392 = phi i32 [ %390, %389 ], [ %388, %382 ]
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %395

394:                                              ; preds = %391
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %380) #15
  br label %395

395:                                              ; preds = %394, %391, %379, %359
  %396 = add nuw nsw i64 %360, 1
  %397 = icmp eq i64 %396, %358
  br i1 %397, label %398, label %359

398:                                              ; preds = %395, %353
  %399 = bitcast %"struct.WTF::KeyValuePair.542"* %351 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %399) #15
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %350, align 8
  br label %400

400:                                              ; preds = %349, %398
  %401 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 0
  %402 = load %"struct.WTF::KeyValuePair.542"*, %"struct.WTF::KeyValuePair.542"** %401, align 8
  %403 = icmp eq %"struct.WTF::KeyValuePair.542"* %402, null
  br i1 %403, label %451, label %404, !prof !3

404:                                              ; preds = %400
  %405 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleGridData", %"class.blink::ComputedStyleBase::StyleGridData"* %0, i64 0, i32 2, i32 0, i32 1
  %406 = load i32, i32* %405, align 8
  %407 = icmp eq i32 %406, 0
  br i1 %407, label %449, label %408

408:                                              ; preds = %404
  %409 = zext i32 %406 to i64
  br label %410

410:                                              ; preds = %446, %408
  %411 = phi i64 [ 0, %408 ], [ %447, %446 ]
  %412 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411
  %413 = bitcast %"struct.WTF::KeyValuePair.542"* %412 to i8**
  %414 = load i8*, i8** %413, align 8
  %415 = icmp eq i8* %414, inttoptr (i64 -1 to i8*)
  br i1 %415, label %446, label %416

416:                                              ; preds = %410
  %417 = bitcast i8* %414 to %"class.WTF::StringImpl"*
  %418 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411, i32 1, i32 0, i32 0, i32 0
  %419 = load i64*, i64** %418, align 8
  %420 = icmp eq i64* %419, null
  %421 = bitcast i64* %419 to i8*
  br i1 %420, label %430, label %422, !prof !3

422:                                              ; preds = %416
  %423 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %402, i64 %411, i32 1, i32 0, i32 0, i32 2
  %424 = load i32, i32* %423, align 4
  %425 = icmp eq i32 %424, 0
  br i1 %425, label %427, label %426, !prof !4

426:                                              ; preds = %422
  store i32 0, i32* %423, align 4
  br label %427

427:                                              ; preds = %426, %422
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %421) #15
  store i64* null, i64** %418, align 8
  %428 = getelementptr inbounds %"struct.WTF::KeyValuePair.542", %"struct.WTF::KeyValuePair.542"* %412, i64 0, i32 0, i32 0, i32 0
  %429 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %428, align 8
  br label %430

430:                                              ; preds = %427, %416
  %431 = phi %"class.WTF::StringImpl"* [ %429, %427 ], [ %417, %416 ]
  %432 = icmp eq %"class.WTF::StringImpl"* %431, null
  br i1 %432, label %446, label %433

433:                                              ; preds = %430
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load atomic i32, i32* %434 monotonic, align 4
  %436 = and i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 0
  %439 = load i32, i32* %438, align 4
  br i1 %437, label %440, label %442

440:                                              ; preds = %433
  %441 = add i32 %439, -1
  store i32 %441, i32* %438, align 4
  br label %442

442:                                              ; preds = %440, %433
  %443 = phi i32 [ %441, %440 ], [ %439, %433 ]
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %446

445:                                              ; preds = %442
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %431) #15
  br label %446

446:                                              ; preds = %445, %442, %430, %410
  %447 = add nuw nsw i64 %411, 1
  %448 = icmp eq i64 %447, %409
  br i1 %448, label %449, label %410

449:                                              ; preds = %446, %404
  %450 = bitcast %"struct.WTF::KeyValuePair.542"* %402 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %450) #15
  store %"struct.WTF::KeyValuePair.542"* null, %"struct.WTF::KeyValuePair.542"** %401, align 8
  br label %451

451:                                              ; preds = %400, %449
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableImNS_12KeyValuePairImNS_6VectorINS_6StringELj0ENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorENS_7IntHashImEENS_18HashMapValueTraitsINS_29UnsignedWithZeroKeyHashTraitsImEENS_10HashTraitsIS5_EEEESC_S4_E29DeleteAllBucketsAndDeallocateEPS6_j(%"struct.WTF::KeyValuePair.547"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %52, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.547"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #15
  ret void

8:                                                ; preds = %52, %4
  %9 = phi i64 [ 0, %4 ], [ %53, %52 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, -2
  br i1 %12, label %52, label %13

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 1
  %15 = getelementptr inbounds %"class.WTF::Vector.630", %"class.WTF::Vector.630"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %17 = icmp eq %"class.WTF::String"* %16, null
  br i1 %17, label %52, label %18, !prof !3

18:                                               ; preds = %13
  %19 = bitcast %"class.WTF::String"* %16 to i8*
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.547", %"struct.WTF::KeyValuePair.547"* %0, i64 %9, i32 1, i32 0, i32 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %50, label %23, !prof !4

23:                                               ; preds = %18
  %24 = zext i32 %21 to i64
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 %24
  br label %26

26:                                               ; preds = %44, %23
  %27 = phi %"class.WTF::String"* [ %45, %44 ], [ %16, %23 ]
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %30, label %44, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 2
  %35 = icmp eq i32 %34, 0
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  br i1 %35, label %38, label %40

38:                                               ; preds = %31
  %39 = add i32 %37, -1
  store i32 %39, i32* %36, align 4
  br label %40

40:                                               ; preds = %38, %31
  %41 = phi i32 [ %39, %38 ], [ %37, %31 ]
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %44

43:                                               ; preds = %40
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #15
  br label %44

44:                                               ; preds = %43, %40, %26
  %45 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 1
  %46 = icmp eq %"class.WTF::String"* %45, %25
  br i1 %46, label %47, label %26

47:                                               ; preds = %44
  store i32 0, i32* %20, align 4
  %48 = bitcast %"class.WTF::Vector.630"* %14 to i8**
  %49 = load i8*, i8** %48, align 8
  br label %50

50:                                               ; preds = %47, %18
  %51 = phi i8* [ %49, %47 ], [ %19, %18 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %51) #15
  store %"class.WTF::String"* null, %"class.WTF::String"** %15, align 8
  br label %52

52:                                               ; preds = %50, %13, %8
  %53 = add nuw nsw i64 %9, 1
  %54 = icmp eq i64 %53, %5
  br i1 %54, label %6, label %8
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareNonInheritedUsageLessThan22PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 4
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #15
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 3, i32 0, i32 1, i32 0
  %9 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %10 = icmp eq %"class.blink::PersistentNode"* %9, null
  br i1 %10, label %30, label %11

11:                                               ; preds = %7
  %12 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %13 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %12, i64 0, i32 1
  %14 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %13) #15
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %18, !prof !4

16:                                               ; preds = %11
  %17 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %13, i8* %17) #15
  br label %18

18:                                               ; preds = %16, %11
  %19 = phi i8* [ %17, %16 ], [ %14, %11 ]
  %20 = bitcast i8* %19 to %"class.blink::ThreadState"**
  %21 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %21, i64 0, i32 3, i32 0, i32 0, i32 0
  %23 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %22, align 8
  %24 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %8, align 8
  %25 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %23, i64 0, i32 0, i32 0
  %26 = bitcast %"class.blink::PersistentRegion"* %23 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.blink::PersistentNode"* %24 to i64*
  store i64 %27, i64* %28, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %24, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %29, align 8
  store %"class.blink::PersistentNode"* %24, %"class.blink::PersistentNode"** %25, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %8, align 8
  br label %30

30:                                               ; preds = %7, %18
  %31 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"** %31, align 8
  %33 = icmp eq %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, null
  br i1 %33, label %41, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %35) #15
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %41

39:                                               ; preds = %34
  tail call void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* nonnull %32) #15
  %40 = bitcast %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %32 to i8*
  tail call void @free(i8* %40) #15
  br label %41

41:                                               ; preds = %30, %34, %39
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase48StyleRareNonInheritedUsageLessThan100PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 30
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #15
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 29
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #15
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 28
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #15
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27, i32 2
  %21 = load i8, i8* %20, align 1
  %22 = icmp eq i8 %21, 8
  br i1 %22, label %23, label %25

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 27
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %24) #15
  br label %25

25:                                               ; preds = %19, %23
  %26 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26, i32 2
  %27 = load i8, i8* %26, align 1
  %28 = icmp eq i8 %27, 8
  br i1 %28, label %29, label %31

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 26
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %30) #15
  br label %31

31:                                               ; preds = %25, %29
  %32 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25, i32 2
  %33 = load i8, i8* %32, align 1
  %34 = icmp eq i8 %33, 8
  br i1 %34, label %35, label %37

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 25
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %36) #15
  br label %37

37:                                               ; preds = %31, %35
  %38 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1, i32 2
  %39 = load i8, i8* %38, align 1
  %40 = icmp eq i8 %39, 8
  br i1 %40, label %41, label %43

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %42) #15
  br label %43

43:                                               ; preds = %41, %37
  %44 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0, i32 2
  %45 = load i8, i8* %44, align 1
  %46 = icmp eq i8 %45, 8
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 24, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %48) #15
  br label %49

49:                                               ; preds = %43, %47
  %50 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1, i32 2
  %51 = load i8, i8* %50, align 1
  %52 = icmp eq i8 %51, 8
  br i1 %52, label %53, label %55

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %54) #15
  br label %55

55:                                               ; preds = %53, %49
  %56 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0, i32 2
  %57 = load i8, i8* %56, align 1
  %58 = icmp eq i8 %57, 8
  br i1 %58, label %59, label %61

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 23, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %60) #15
  br label %61

61:                                               ; preds = %55, %59
  %62 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1, i32 2
  %63 = load i8, i8* %62, align 1
  %64 = icmp eq i8 %63, 8
  br i1 %64, label %65, label %67

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %66) #15
  br label %67

67:                                               ; preds = %65, %61
  %68 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0, i32 2
  %69 = load i8, i8* %68, align 1
  %70 = icmp eq i8 %69, 8
  br i1 %70, label %71, label %73

71:                                               ; preds = %67
  %72 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 22, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %72) #15
  br label %73

73:                                               ; preds = %67, %71
  %74 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1, i32 2
  %75 = load i8, i8* %74, align 1
  %76 = icmp eq i8 %75, 8
  br i1 %76, label %77, label %79

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 1
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %78) #15
  br label %79

79:                                               ; preds = %77, %73
  %80 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0, i32 2
  %81 = load i8, i8* %80, align 1
  %82 = icmp eq i8 %81, 8
  br i1 %82, label %83, label %85

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 21, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %84) #15
  br label %85

85:                                               ; preds = %79, %83
  %86 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 0
  %87 = load i8, i8* %86, align 4, !range !5
  %88 = icmp eq i8 %87, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %85
  %90 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %91 = load i8, i8* %90, align 1
  %92 = icmp eq i8 %91, 8
  br i1 %92, label %93, label %95

93:                                               ; preds = %89
  %94 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 19, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %94) #15
  br label %95

95:                                               ; preds = %93, %89
  store i8 0, i8* %86, align 4
  br label %96

96:                                               ; preds = %85, %95
  %97 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0
  %98 = load i8, i8* %97, align 4, !range !5
  %99 = icmp eq i8 %98, 0
  br i1 %99, label %107, label %100

100:                                              ; preds = %96
  %101 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0, i32 2
  %102 = load i8, i8* %101, align 1
  %103 = icmp eq i8 %102, 8
  br i1 %103, label %104, label %106

104:                                              ; preds = %100
  %105 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 18, i32 0, i32 0, i32 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %105) #15
  br label %106

106:                                              ; preds = %104, %100
  store i8 0, i8* %97, align 4
  br label %107

107:                                              ; preds = %96, %106
  %108 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 17, i32 0, i32 1, i32 0
  %109 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %110 = icmp eq %"class.blink::PersistentNode"* %109, null
  br i1 %110, label %130, label %111

111:                                              ; preds = %107
  %112 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %113 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %112, i64 0, i32 1
  %114 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %113) #15
  %115 = icmp eq i8* %114, null
  br i1 %115, label %116, label %118, !prof !4

116:                                              ; preds = %111
  %117 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %113, i8* %117) #15
  br label %118

118:                                              ; preds = %116, %111
  %119 = phi i8* [ %117, %116 ], [ %114, %111 ]
  %120 = bitcast i8* %119 to %"class.blink::ThreadState"**
  %121 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %120, align 8
  %122 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %121, i64 0, i32 3, i32 0, i32 0, i32 0
  %123 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %122, align 8
  %124 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %108, align 8
  %125 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %123, i64 0, i32 0, i32 0
  %126 = bitcast %"class.blink::PersistentRegion"* %123 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.blink::PersistentNode"* %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %124, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %129, align 8
  store %"class.blink::PersistentNode"* %124, %"class.blink::PersistentNode"** %125, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %108, align 8
  br label %130

130:                                              ; preds = %107, %118
  %131 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 16, i32 0, i32 1, i32 0
  %132 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %133 = icmp eq %"class.blink::PersistentNode"* %132, null
  br i1 %133, label %153, label %134

134:                                              ; preds = %130
  %135 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %136 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %135, i64 0, i32 1
  %137 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %136) #15
  %138 = icmp eq i8* %137, null
  br i1 %138, label %139, label %141, !prof !4

139:                                              ; preds = %134
  %140 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %136, i8* %140) #15
  br label %141

141:                                              ; preds = %139, %134
  %142 = phi i8* [ %140, %139 ], [ %137, %134 ]
  %143 = bitcast i8* %142 to %"class.blink::ThreadState"**
  %144 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %144, i64 0, i32 3, i32 0, i32 0, i32 0
  %146 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %145, align 8
  %147 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %131, align 8
  %148 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %146, i64 0, i32 0, i32 0
  %149 = bitcast %"class.blink::PersistentRegion"* %146 to i64*
  %150 = load i64, i64* %149, align 8
  %151 = bitcast %"class.blink::PersistentNode"* %147 to i64*
  store i64 %150, i64* %151, align 8
  %152 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %147, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %152, align 8
  store %"class.blink::PersistentNode"* %147, %"class.blink::PersistentNode"** %148, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %131, align 8
  br label %153

153:                                              ; preds = %130, %141
  %154 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 15, i32 0
  %155 = load %"class.blink::StyleReflection"*, %"class.blink::StyleReflection"** %154, align 8
  %156 = icmp eq %"class.blink::StyleReflection"* %155, null
  br i1 %156, label %181, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %158) #15
  %159 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 0, i32 0, i32 0, i32 0
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %181

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 3, i32 0, i32 0, i32 0
  %164 = load %"class.blink::NinePieceImageData"*, %"class.blink::NinePieceImageData"** %163, align 8
  %165 = icmp eq %"class.blink::NinePieceImageData"* %164, null
  br i1 %165, label %173, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %167) #15
  %168 = getelementptr inbounds %"class.blink::NinePieceImageData", %"class.blink::NinePieceImageData"* %164, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load i32, i32* %168, align 4
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %171, label %173

171:                                              ; preds = %166
  tail call void @_ZN5blink18NinePieceImageDataD2Ev(%"class.blink::NinePieceImageData"* nonnull %164) #15
  %172 = bitcast %"class.blink::NinePieceImageData"* %164 to i8*
  tail call void @free(i8* %172) #15
  br label %173

173:                                              ; preds = %171, %166, %162
  %174 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2, i32 2
  %175 = load i8, i8* %174, align 1
  %176 = icmp eq i8 %175, 8
  br i1 %176, label %177, label %179

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.blink::StyleReflection", %"class.blink::StyleReflection"* %155, i64 0, i32 2
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %178) #15
  br label %179

179:                                              ; preds = %173, %177
  %180 = bitcast %"class.blink::StyleReflection"* %155 to i8*
  tail call void @free(i8* %180) #15
  br label %181

181:                                              ; preds = %153, %157, %179
  %182 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 14, i32 0
  %183 = load %"class.blink::TranslateTransformOperation"*, %"class.blink::TranslateTransformOperation"** %182, align 8
  %184 = icmp eq %"class.blink::TranslateTransformOperation"* %183, null
  br i1 %184, label %198, label %185

185:                                              ; preds = %181
  %186 = getelementptr inbounds %"class.blink::TranslateTransformOperation", %"class.blink::TranslateTransformOperation"* %183, i64 0, i32 0, i32 1, i32 0
  %187 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %187) #15
  %188 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 0, i32 0, i32 0
  %189 = load i32, i32* %188, align 4
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %198

191:                                              ; preds = %185
  %192 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %186, i64 -2
  %193 = bitcast %"class.base::RefCounted.483"* %192 to %"class.blink::TransformOperation"*
  %194 = bitcast %"class.base::RefCounted.483"* %192 to void (%"class.blink::TransformOperation"*)***
  %195 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %194, align 8
  %196 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %195, i64 1
  %197 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %196, align 8
  tail call void %197(%"class.blink::TransformOperation"* nonnull %193) #15
  br label %198

198:                                              ; preds = %181, %185, %191
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 13, i32 0
  %200 = load %"class.blink::ScaleTransformOperation"*, %"class.blink::ScaleTransformOperation"** %199, align 8
  %201 = icmp eq %"class.blink::ScaleTransformOperation"* %200, null
  br i1 %201, label %215, label %202

202:                                              ; preds = %198
  %203 = getelementptr inbounds %"class.blink::ScaleTransformOperation", %"class.blink::ScaleTransformOperation"* %200, i64 0, i32 0, i32 1, i32 0
  %204 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %204) #15
  %205 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 0, i32 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %215

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %203, i64 -2
  %210 = bitcast %"class.base::RefCounted.483"* %209 to %"class.blink::TransformOperation"*
  %211 = bitcast %"class.base::RefCounted.483"* %209 to void (%"class.blink::TransformOperation"*)***
  %212 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %211, align 8
  %213 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %212, i64 1
  %214 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %213, align 8
  tail call void %214(%"class.blink::TransformOperation"* nonnull %210) #15
  br label %215

215:                                              ; preds = %198, %202, %208
  %216 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 12, i32 0
  %217 = load %"class.blink::RotateTransformOperation"*, %"class.blink::RotateTransformOperation"** %216, align 8
  %218 = icmp eq %"class.blink::RotateTransformOperation"* %217, null
  br i1 %218, label %232, label %219

219:                                              ; preds = %215
  %220 = getelementptr inbounds %"class.blink::RotateTransformOperation", %"class.blink::RotateTransformOperation"* %217, i64 0, i32 0, i32 1, i32 0
  %221 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %221) #15
  %222 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 0, i32 0, i32 0
  %223 = load i32, i32* %222, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %232

225:                                              ; preds = %219
  %226 = getelementptr inbounds %"class.base::RefCounted.483", %"class.base::RefCounted.483"* %220, i64 -2
  %227 = bitcast %"class.base::RefCounted.483"* %226 to %"class.blink::TransformOperation"*
  %228 = bitcast %"class.base::RefCounted.483"* %226 to void (%"class.blink::TransformOperation"*)***
  %229 = load void (%"class.blink::TransformOperation"*)**, void (%"class.blink::TransformOperation"*)*** %228, align 8
  %230 = getelementptr inbounds void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %229, i64 1
  %231 = load void (%"class.blink::TransformOperation"*)*, void (%"class.blink::TransformOperation"*)** %230, align 8
  tail call void %231(%"class.blink::TransformOperation"* nonnull %227) #15
  br label %232

232:                                              ; preds = %215, %219, %225
  %233 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 11, i32 0
  %234 = load %"class.blink::BasicShape"*, %"class.blink::BasicShape"** %233, align 8
  %235 = icmp eq %"class.blink::BasicShape"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.blink::BasicShape", %"class.blink::BasicShape"* %234, i64 0, i32 1, i32 0
  %238 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %238) #15
  %239 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 0, i32 0, i32 0
  %240 = load i32, i32* %239, align 4
  %241 = icmp eq i32 %240, 0
  br i1 %241, label %242, label %249

242:                                              ; preds = %236
  %243 = getelementptr inbounds %"class.base::RefCounted.480", %"class.base::RefCounted.480"* %237, i64 -2
  %244 = bitcast %"class.base::RefCounted.480"* %243 to %"class.blink::BasicShape"*
  %245 = bitcast %"class.base::RefCounted.480"* %243 to void (%"class.blink::BasicShape"*)***
  %246 = load void (%"class.blink::BasicShape"*)**, void (%"class.blink::BasicShape"*)*** %245, align 8
  %247 = getelementptr inbounds void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %246, i64 1
  %248 = load void (%"class.blink::BasicShape"*)*, void (%"class.blink::BasicShape"*)** %247, align 8
  tail call void %248(%"class.blink::BasicShape"* nonnull %244) #15
  br label %249

249:                                              ; preds = %232, %236, %242
  %250 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 10, i32 0
  %251 = load %"class.blink::ClipPathOperation"*, %"class.blink::ClipPathOperation"** %250, align 8
  %252 = icmp eq %"class.blink::ClipPathOperation"* %251, null
  br i1 %252, label %266, label %253

253:                                              ; preds = %249
  %254 = getelementptr inbounds %"class.blink::ClipPathOperation", %"class.blink::ClipPathOperation"* %251, i64 0, i32 1, i32 0
  %255 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %255) #15
  %256 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 0, i32 0, i32 0
  %257 = load i32, i32* %256, align 4
  %258 = icmp eq i32 %257, 0
  br i1 %258, label %259, label %266

259:                                              ; preds = %253
  %260 = getelementptr inbounds %"class.base::RefCounted.477", %"class.base::RefCounted.477"* %254, i64 -2
  %261 = bitcast %"class.base::RefCounted.477"* %260 to %"class.blink::ClipPathOperation"*
  %262 = bitcast %"class.base::RefCounted.477"* %260 to void (%"class.blink::ClipPathOperation"*)***
  %263 = load void (%"class.blink::ClipPathOperation"*)**, void (%"class.blink::ClipPathOperation"*)*** %262, align 8
  %264 = getelementptr inbounds void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %263, i64 1
  %265 = load void (%"class.blink::ClipPathOperation"*)*, void (%"class.blink::ClipPathOperation"*)** %264, align 8
  tail call void %265(%"class.blink::ClipPathOperation"* nonnull %261) #15
  br label %266

266:                                              ; preds = %249, %253, %259
  %267 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 9, i32 0, i32 0, i32 0
  %268 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %267, align 8
  %269 = icmp eq %"class.WTF::StringImpl"* %268, null
  br i1 %269, label %283, label %270

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %268, i64 0, i32 0
  %276 = load i32, i32* %275, align 4
  br i1 %274, label %277, label %279

277:                                              ; preds = %270
  %278 = add i32 %276, -1
  store i32 %278, i32* %275, align 4
  br label %279

279:                                              ; preds = %277, %270
  %280 = phi i32 [ %278, %277 ], [ %276, %270 ]
  %281 = icmp eq i32 %280, 0
  br i1 %281, label %282, label %283

282:                                              ; preds = %279
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %268) #15
  br label %283

283:                                              ; preds = %266, %279, %282
  %284 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 8, i32 2, i32 0, i32 0, i32 0
  %285 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %284, align 8
  %286 = icmp eq %"class.WTF::StringImpl"* %285, null
  br i1 %286, label %300, label %287

287:                                              ; preds = %283
  %288 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %289 = load atomic i32, i32* %288 monotonic, align 4
  %290 = and i32 %289, 2
  %291 = icmp eq i32 %290, 0
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %285, i64 0, i32 0
  %293 = load i32, i32* %292, align 4
  br i1 %291, label %294, label %296

294:                                              ; preds = %287
  %295 = add i32 %293, -1
  store i32 %295, i32* %292, align 4
  br label %296

296:                                              ; preds = %294, %287
  %297 = phi i32 [ %295, %294 ], [ %293, %287 ]
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %299, label %300

299:                                              ; preds = %296
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %285) #15
  br label %300

300:                                              ; preds = %283, %296, %299
  %301 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 7, i32 2, i32 0, i32 0, i32 0
  %302 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %301, align 8
  %303 = icmp eq %"class.WTF::StringImpl"* %302, null
  br i1 %303, label %317, label %304

304:                                              ; preds = %300
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %302, i64 0, i32 0
  %310 = load i32, i32* %309, align 4
  br i1 %308, label %311, label %313

311:                                              ; preds = %304
  %312 = add i32 %310, -1
  store i32 %312, i32* %309, align 4
  br label %313

313:                                              ; preds = %311, %304
  %314 = phi i32 [ %312, %311 ], [ %310, %304 ]
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %313
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %302) #15
  br label %317

317:                                              ; preds = %300, %313, %316
  %318 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 6, i32 2, i32 0, i32 0, i32 0
  %319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %318, align 8
  %320 = icmp eq %"class.WTF::StringImpl"* %319, null
  br i1 %320, label %334, label %321

321:                                              ; preds = %317
  %322 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %323 = load atomic i32, i32* %322 monotonic, align 4
  %324 = and i32 %323, 2
  %325 = icmp eq i32 %324, 0
  %326 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %319, i64 0, i32 0
  %327 = load i32, i32* %326, align 4
  br i1 %325, label %328, label %330

328:                                              ; preds = %321
  %329 = add i32 %327, -1
  store i32 %329, i32* %326, align 4
  br label %330

330:                                              ; preds = %328, %321
  %331 = phi i32 [ %329, %328 ], [ %327, %321 ]
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %333, label %334

333:                                              ; preds = %330
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %319) #15
  br label %334

334:                                              ; preds = %317, %330, %333
  %335 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0
  %336 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %335, align 8
  %337 = icmp eq %"class.WTF::StringImpl"* %336, null
  br i1 %337, label %351, label %338

338:                                              ; preds = %334
  %339 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %340 = load atomic i32, i32* %339 monotonic, align 4
  %341 = and i32 %340, 2
  %342 = icmp eq i32 %341, 0
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %336, i64 0, i32 0
  %344 = load i32, i32* %343, align 4
  br i1 %342, label %345, label %347

345:                                              ; preds = %338
  %346 = add i32 %344, -1
  store i32 %346, i32* %343, align 4
  br label %347

347:                                              ; preds = %345, %338
  %348 = phi i32 [ %346, %345 ], [ %344, %338 ]
  %349 = icmp eq i32 %348, 0
  br i1 %349, label %350, label %351

350:                                              ; preds = %347
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %336) #15
  br label %351

351:                                              ; preds = %334, %347, %350
  %352 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4
  %353 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 1
  %354 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %353, i64 0, i32 0, i32 0, i32 0
  %355 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %354, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %354, align 8
  %356 = icmp eq %"class.blink::NGGridTrackList"* %355, null
  br i1 %356, label %359, label %357

357:                                              ; preds = %351
  %358 = bitcast %"class.std::__1::unique_ptr.464"* %353 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %358, %"class.blink::NGGridTrackList"* nonnull %355) #15
  br label %359

359:                                              ; preds = %357, %351
  %360 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %352, i64 0, i32 0, i32 0, i32 0, i32 0
  %361 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %360, align 8
  %362 = icmp eq %"class.blink::GridTrackSize"* %361, null
  br i1 %362, label %398, label %363, !prof !3

363:                                              ; preds = %359
  %364 = bitcast %"class.blink::GridTrackSize"* %361 to i8*
  %365 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 2
  %366 = load i32, i32* %365, align 4
  %367 = icmp eq i32 %366, 0
  br i1 %367, label %396, label %368, !prof !4

368:                                              ; preds = %363
  %369 = zext i32 %366 to i64
  %370 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %361, i64 %369
  br label %371

371:                                              ; preds = %390, %368
  %372 = phi %"class.blink::GridTrackSize"* [ %391, %390 ], [ %361, %368 ]
  %373 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0, i32 2
  %374 = load i8, i8* %373, align 1
  %375 = icmp eq i8 %374, 8
  br i1 %375, label %376, label %378

376:                                              ; preds = %371
  %377 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %377) #15
  br label %378

378:                                              ; preds = %376, %371
  %379 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0, i32 2
  %380 = load i8, i8* %379, align 1
  %381 = icmp eq i8 %380, 8
  br i1 %381, label %382, label %384

382:                                              ; preds = %378
  %383 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %383) #15
  br label %384

384:                                              ; preds = %382, %378
  %385 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0, i32 2
  %386 = load i8, i8* %385, align 1
  %387 = icmp eq i8 %386, 8
  br i1 %387, label %388, label %390

388:                                              ; preds = %384
  %389 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %389) #15
  br label %390

390:                                              ; preds = %388, %384
  %391 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %372, i64 1
  %392 = icmp eq %"class.blink::GridTrackSize"* %391, %370
  br i1 %392, label %393, label %371

393:                                              ; preds = %390
  store i32 0, i32* %365, align 4
  %394 = bitcast %"class.blink::GridTrackList"* %352 to i8**
  %395 = load i8*, i8** %394, align 8
  br label %396

396:                                              ; preds = %393, %363
  %397 = phi i8* [ %395, %393 ], [ %364, %363 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %397) #15
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %360, align 8
  br label %398

398:                                              ; preds = %359, %396
  %399 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3
  %400 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 1
  %401 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %400, i64 0, i32 0, i32 0, i32 0
  %402 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %401, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %401, align 8
  %403 = icmp eq %"class.blink::NGGridTrackList"* %402, null
  br i1 %403, label %406, label %404

404:                                              ; preds = %398
  %405 = bitcast %"class.std::__1::unique_ptr.464"* %400 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %405, %"class.blink::NGGridTrackList"* nonnull %402) #15
  br label %406

406:                                              ; preds = %404, %398
  %407 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %399, i64 0, i32 0, i32 0, i32 0, i32 0
  %408 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %407, align 8
  %409 = icmp eq %"class.blink::GridTrackSize"* %408, null
  br i1 %409, label %445, label %410, !prof !3

410:                                              ; preds = %406
  %411 = bitcast %"class.blink::GridTrackSize"* %408 to i8*
  %412 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 3, i32 0, i32 0, i32 0, i32 2
  %413 = load i32, i32* %412, align 4
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %443, label %415, !prof !4

415:                                              ; preds = %410
  %416 = zext i32 %413 to i64
  %417 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %408, i64 %416
  br label %418

418:                                              ; preds = %437, %415
  %419 = phi %"class.blink::GridTrackSize"* [ %438, %437 ], [ %408, %415 ]
  %420 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0, i32 2
  %421 = load i8, i8* %420, align 1
  %422 = icmp eq i8 %421, 8
  br i1 %422, label %423, label %425

423:                                              ; preds = %418
  %424 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %424) #15
  br label %425

425:                                              ; preds = %423, %418
  %426 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0, i32 2
  %427 = load i8, i8* %426, align 1
  %428 = icmp eq i8 %427, 8
  br i1 %428, label %429, label %431

429:                                              ; preds = %425
  %430 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %430) #15
  br label %431

431:                                              ; preds = %429, %425
  %432 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0, i32 2
  %433 = load i8, i8* %432, align 1
  %434 = icmp eq i8 %433, 8
  br i1 %434, label %435, label %437

435:                                              ; preds = %431
  %436 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %436) #15
  br label %437

437:                                              ; preds = %435, %431
  %438 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %419, i64 1
  %439 = icmp eq %"class.blink::GridTrackSize"* %438, %417
  br i1 %439, label %440, label %418

440:                                              ; preds = %437
  store i32 0, i32* %412, align 4
  %441 = bitcast %"class.blink::GridTrackList"* %399 to i8**
  %442 = load i8*, i8** %441, align 8
  br label %443

443:                                              ; preds = %440, %410
  %444 = phi i8* [ %442, %440 ], [ %411, %410 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %444) #15
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %407, align 8
  br label %445

445:                                              ; preds = %406, %443
  %446 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2
  %447 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 1
  %448 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %447, i64 0, i32 0, i32 0, i32 0
  %449 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %448, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %448, align 8
  %450 = icmp eq %"class.blink::NGGridTrackList"* %449, null
  br i1 %450, label %453, label %451

451:                                              ; preds = %445
  %452 = bitcast %"class.std::__1::unique_ptr.464"* %447 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %452, %"class.blink::NGGridTrackList"* nonnull %449) #15
  br label %453

453:                                              ; preds = %451, %445
  %454 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %446, i64 0, i32 0, i32 0, i32 0, i32 0
  %455 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %454, align 8
  %456 = icmp eq %"class.blink::GridTrackSize"* %455, null
  br i1 %456, label %492, label %457, !prof !3

457:                                              ; preds = %453
  %458 = bitcast %"class.blink::GridTrackSize"* %455 to i8*
  %459 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %460 = load i32, i32* %459, align 4
  %461 = icmp eq i32 %460, 0
  br i1 %461, label %490, label %462, !prof !4

462:                                              ; preds = %457
  %463 = zext i32 %460 to i64
  %464 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %455, i64 %463
  br label %465

465:                                              ; preds = %484, %462
  %466 = phi %"class.blink::GridTrackSize"* [ %485, %484 ], [ %455, %462 ]
  %467 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0, i32 2
  %468 = load i8, i8* %467, align 1
  %469 = icmp eq i8 %468, 8
  br i1 %469, label %470, label %472

470:                                              ; preds = %465
  %471 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %471) #15
  br label %472

472:                                              ; preds = %470, %465
  %473 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0, i32 2
  %474 = load i8, i8* %473, align 1
  %475 = icmp eq i8 %474, 8
  br i1 %475, label %476, label %478

476:                                              ; preds = %472
  %477 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %477) #15
  br label %478

478:                                              ; preds = %476, %472
  %479 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0, i32 2
  %480 = load i8, i8* %479, align 1
  %481 = icmp eq i8 %480, 8
  br i1 %481, label %482, label %484

482:                                              ; preds = %478
  %483 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %483) #15
  br label %484

484:                                              ; preds = %482, %478
  %485 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %466, i64 1
  %486 = icmp eq %"class.blink::GridTrackSize"* %485, %464
  br i1 %486, label %487, label %465

487:                                              ; preds = %484
  store i32 0, i32* %459, align 4
  %488 = bitcast %"class.blink::GridTrackList"* %446 to i8**
  %489 = load i8*, i8** %488, align 8
  br label %490

490:                                              ; preds = %487, %457
  %491 = phi i8* [ %489, %487 ], [ %458, %457 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %491) #15
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %454, align 8
  br label %492

492:                                              ; preds = %453, %490
  %493 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1
  %494 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 1
  %495 = getelementptr inbounds %"class.std::__1::unique_ptr.464", %"class.std::__1::unique_ptr.464"* %494, i64 0, i32 0, i32 0, i32 0
  %496 = load %"class.blink::NGGridTrackList"*, %"class.blink::NGGridTrackList"** %495, align 8
  store %"class.blink::NGGridTrackList"* null, %"class.blink::NGGridTrackList"** %495, align 8
  %497 = icmp eq %"class.blink::NGGridTrackList"* %496, null
  br i1 %497, label %500, label %498

498:                                              ; preds = %492
  %499 = bitcast %"class.std::__1::unique_ptr.464"* %494 to %"struct.std::__1::default_delete.473"*
  tail call void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"* %499, %"class.blink::NGGridTrackList"* nonnull %496) #15
  br label %500

500:                                              ; preds = %498, %492
  %501 = getelementptr inbounds %"class.blink::GridTrackList", %"class.blink::GridTrackList"* %493, i64 0, i32 0, i32 0, i32 0, i32 0
  %502 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %501, align 8
  %503 = icmp eq %"class.blink::GridTrackSize"* %502, null
  br i1 %503, label %539, label %504, !prof !3

504:                                              ; preds = %500
  %505 = bitcast %"class.blink::GridTrackSize"* %502 to i8*
  %506 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %507 = load i32, i32* %506, align 4
  %508 = icmp eq i32 %507, 0
  br i1 %508, label %537, label %509, !prof !4

509:                                              ; preds = %504
  %510 = zext i32 %507 to i64
  %511 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %502, i64 %510
  br label %512

512:                                              ; preds = %531, %509
  %513 = phi %"class.blink::GridTrackSize"* [ %532, %531 ], [ %502, %509 ]
  %514 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0, i32 2
  %515 = load i8, i8* %514, align 1
  %516 = icmp eq i8 %515, 8
  br i1 %516, label %517, label %519

517:                                              ; preds = %512
  %518 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %518) #15
  br label %519

519:                                              ; preds = %517, %512
  %520 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0, i32 2
  %521 = load i8, i8* %520, align 1
  %522 = icmp eq i8 %521, 8
  br i1 %522, label %523, label %525

523:                                              ; preds = %519
  %524 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %524) #15
  br label %525

525:                                              ; preds = %523, %519
  %526 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0, i32 2
  %527 = load i8, i8* %526, align 1
  %528 = icmp eq i8 %527, 8
  br i1 %528, label %529, label %531

529:                                              ; preds = %525
  %530 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %530) #15
  br label %531

531:                                              ; preds = %529, %525
  %532 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %513, i64 1
  %533 = icmp eq %"class.blink::GridTrackSize"* %532, %511
  br i1 %533, label %534, label %512

534:                                              ; preds = %531
  store i32 0, i32* %506, align 4
  %535 = bitcast %"class.blink::GridTrackList"* %493 to i8**
  %536 = load i8*, i8** %535, align 8
  br label %537

537:                                              ; preds = %534, %504
  %538 = phi i8* [ %536, %534 ], [ %505, %504 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %538) #15
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %501, align 8
  br label %539

539:                                              ; preds = %500, %537
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNKSt3__114default_deleteIN5blink15NGGridTrackListEEclEPS2_(%"struct.std::__1::default_delete.473"*, %"class.blink::NGGridTrackList"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::NGGridTrackList"* %1, null
  br i1 %3, label %57, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.WTF::Vector.459", %"class.WTF::Vector.459"* %5, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::GridTrackSize"*, %"class.blink::GridTrackSize"** %6, align 8
  %8 = icmp eq %"class.blink::GridTrackSize"* %7, null
  br i1 %8, label %44, label %9, !prof !3

9:                                                ; preds = %4
  %10 = bitcast %"class.blink::GridTrackSize"* %7 to i8*
  %11 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 1, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %42, label %14, !prof !4

14:                                               ; preds = %9
  %15 = zext i32 %12 to i64
  %16 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %7, i64 %15
  br label %17

17:                                               ; preds = %36, %14
  %18 = phi %"class.blink::GridTrackSize"* [ %37, %36 ], [ %7, %14 ]
  %19 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0, i32 2
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 8
  br i1 %21, label %22, label %24

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 4, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %23) #15
  br label %24

24:                                               ; preds = %22, %17
  %25 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0, i32 2
  %26 = load i8, i8* %25, align 1
  %27 = icmp eq i8 %26, 8
  br i1 %27, label %28, label %30

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 3, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %29) #15
  br label %30

30:                                               ; preds = %28, %24
  %31 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0, i32 2
  %32 = load i8, i8* %31, align 1
  %33 = icmp eq i8 %32, 8
  br i1 %33, label %34, label %36

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %35) #15
  br label %36

36:                                               ; preds = %34, %30
  %37 = getelementptr inbounds %"class.blink::GridTrackSize", %"class.blink::GridTrackSize"* %18, i64 1
  %38 = icmp eq %"class.blink::GridTrackSize"* %37, %16
  br i1 %38, label %39, label %17

39:                                               ; preds = %36
  store i32 0, i32* %11, align 4
  %40 = bitcast %"class.WTF::Vector.459"* %5 to i8**
  %41 = load i8*, i8** %40, align 8
  br label %42

42:                                               ; preds = %39, %9
  %43 = phi i8* [ %41, %39 ], [ %10, %9 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %43) #15
  store %"class.blink::GridTrackSize"* null, %"class.blink::GridTrackSize"** %6, align 8
  br label %44

44:                                               ; preds = %42, %4
  %45 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"struct.blink::NGGridTrackRepeater"*, %"struct.blink::NGGridTrackRepeater"** %45, align 8
  %47 = icmp eq %"struct.blink::NGGridTrackRepeater"* %46, null
  %48 = bitcast %"struct.blink::NGGridTrackRepeater"* %46 to i8*
  br i1 %47, label %55, label %49, !prof !3

49:                                               ; preds = %44
  %50 = getelementptr inbounds %"class.blink::NGGridTrackList", %"class.blink::NGGridTrackList"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %54, label %53, !prof !4

53:                                               ; preds = %49
  store i32 0, i32* %50, align 4
  br label %54

54:                                               ; preds = %53, %49
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %48) #15
  br label %55

55:                                               ; preds = %44, %54
  %56 = bitcast %"class.blink::NGGridTrackList"* %1 to i8*
  tail call void @_ZdlPv(i8* %56) #16
  br label %57

57:                                               ; preds = %55, %2
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase44StyleRareInheritedUsageLessThan64PercentDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13, i32 2
  %3 = load i8, i8* %2, align 1
  %4 = icmp eq i8 %3, 8
  br i1 %4, label %5, label %7

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 13
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %6) #15
  br label %7

7:                                                ; preds = %1, %5
  %8 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12, i32 2
  %9 = load i8, i8* %8, align 1
  %10 = icmp eq i8 %9, 8
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 12
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %12) #15
  br label %13

13:                                               ; preds = %7, %11
  %14 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0, i32 2
  %15 = load i8, i8* %14, align 1
  %16 = icmp eq i8 %15, 8
  br i1 %16, label %17, label %19

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 11, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %18) #15
  br label %19

19:                                               ; preds = %13, %17
  %20 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 10, i32 0, i32 1, i32 0
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %22 = icmp eq %"class.blink::PersistentNode"* %21, null
  br i1 %22, label %42, label %23

23:                                               ; preds = %19
  %24 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %25 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %24, i64 0, i32 1
  %26 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %25) #15
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %30, !prof !4

28:                                               ; preds = %23
  %29 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %25, i8* %29) #15
  br label %30

30:                                               ; preds = %28, %23
  %31 = phi i8* [ %29, %28 ], [ %26, %23 ]
  %32 = bitcast i8* %31 to %"class.blink::ThreadState"**
  %33 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %33, i64 0, i32 3, i32 0, i32 0, i32 0
  %35 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %34, align 8
  %36 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %20, align 8
  %37 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %35, i64 0, i32 0, i32 0
  %38 = bitcast %"class.blink::PersistentRegion"* %35 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  store i64 %39, i64* %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %37, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %20, align 8
  br label %42

42:                                               ; preds = %19, %30
  %43 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 9, i32 0, i32 1, i32 0
  %44 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %45 = icmp eq %"class.blink::PersistentNode"* %44, null
  br i1 %45, label %65, label %46

46:                                               ; preds = %42
  %47 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %48 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %47, i64 0, i32 1
  %49 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %48) #15
  %50 = icmp eq i8* %49, null
  br i1 %50, label %51, label %53, !prof !4

51:                                               ; preds = %46
  %52 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %48, i8* %52) #15
  br label %53

53:                                               ; preds = %51, %46
  %54 = phi i8* [ %52, %51 ], [ %49, %46 ]
  %55 = bitcast i8* %54 to %"class.blink::ThreadState"**
  %56 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %56, i64 0, i32 3, i32 0, i32 0, i32 0
  %58 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %57, align 8
  %59 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %43, align 8
  %60 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %58, i64 0, i32 0, i32 0
  %61 = bitcast %"class.blink::PersistentRegion"* %58 to i64*
  %62 = load i64, i64* %61, align 8
  %63 = bitcast %"class.blink::PersistentNode"* %59 to i64*
  store i64 %62, i64* %63, align 8
  %64 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %59, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %64, align 8
  store %"class.blink::PersistentNode"* %59, %"class.blink::PersistentNode"** %60, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %43, align 8
  br label %65

65:                                               ; preds = %42, %53
  %66 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 8, i32 0
  %67 = load %"class.blink::ShadowList"*, %"class.blink::ShadowList"** %66, align 8
  %68 = icmp eq %"class.blink::ShadowList"* %67, null
  br i1 %68, label %91, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %71) #15
  %72 = getelementptr inbounds %"class.blink::ShadowList", %"class.blink::ShadowList"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %91

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 2
  %77 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 5, i32 0, i32 0
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %81, label %80, !prof !4

80:                                               ; preds = %75
  store i32 0, i32* %77, align 4
  br label %81

81:                                               ; preds = %80, %75
  %82 = bitcast %"class.base::RefCounted.300"* %76 to %"class.blink::ShadowData"**
  %83 = load %"class.blink::ShadowData"*, %"class.blink::ShadowData"** %82, align 8
  %84 = getelementptr inbounds %"class.base::RefCounted.300", %"class.base::RefCounted.300"* %70, i64 6
  %85 = bitcast %"class.base::RefCounted.300"* %84 to %"class.blink::ShadowData"*
  %86 = icmp eq %"class.blink::ShadowData"* %83, %85
  br i1 %86, label %89, label %87, !prof !3

87:                                               ; preds = %81
  %88 = bitcast %"class.base::RefCounted.300"* %76 to %"class.WTF::VectorBuffer.302"*
  tail call void @_ZN3WTF12VectorBufferIN5blink10ShadowDataELj1ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.302"* %88, %"class.blink::ShadowData"* %83) #15
  br label %89

89:                                               ; preds = %87, %81
  %90 = bitcast %"class.blink::ShadowList"* %67 to i8*
  tail call void @free(i8* %90) #15
  br label %91

91:                                               ; preds = %65, %69, %89
  %92 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 7, i32 0
  %93 = load %"class.blink::QuotesData"*, %"class.blink::QuotesData"** %92, align 8
  %94 = icmp eq %"class.blink::QuotesData"* %93, null
  br i1 %94, label %158, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %96) #15
  %97 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i32, i32* %97, align 4
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %158

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1
  %102 = getelementptr inbounds %"class.WTF::Vector.292", %"class.WTF::Vector.292"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"struct.std::__1::pair.295"*, %"struct.std::__1::pair.295"** %102, align 8
  %104 = icmp eq %"struct.std::__1::pair.295"* %103, null
  br i1 %104, label %156, label %105, !prof !3

105:                                              ; preds = %100
  %106 = bitcast %"struct.std::__1::pair.295"* %103 to i8*
  %107 = getelementptr inbounds %"class.blink::QuotesData", %"class.blink::QuotesData"* %93, i64 0, i32 1, i32 0, i32 0, i32 2
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %154, label %110, !prof !4

110:                                              ; preds = %105
  %111 = zext i32 %108 to i64
  %112 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %103, i64 %111
  br label %113

113:                                              ; preds = %148, %110
  %114 = phi %"struct.std::__1::pair.295"* [ %149, %148 ], [ %103, %110 ]
  %115 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 0, i32 1, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #15
  br label %131

131:                                              ; preds = %130, %127, %113
  %132 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 0, i32 0, i32 0, i32 0
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %148, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %148

147:                                              ; preds = %144
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #15
  br label %148

148:                                              ; preds = %147, %144, %131
  %149 = getelementptr inbounds %"struct.std::__1::pair.295", %"struct.std::__1::pair.295"* %114, i64 1
  %150 = icmp eq %"struct.std::__1::pair.295"* %149, %112
  br i1 %150, label %151, label %113

151:                                              ; preds = %148
  store i32 0, i32* %107, align 4
  %152 = bitcast %"class.WTF::Vector.292"* %101 to i8**
  %153 = load i8*, i8** %152, align 8
  br label %154

154:                                              ; preds = %151, %105
  %155 = phi i8* [ %153, %151 ], [ %106, %105 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %155) #15
  br label %156

156:                                              ; preds = %100, %154
  %157 = bitcast %"class.blink::QuotesData"* %93 to i8*
  tail call void @free(i8* %157) #15
  br label %158

158:                                              ; preds = %91, %95, %156
  %159 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 6, i32 0, i32 0, i32 0
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %159, align 8
  %161 = icmp eq %"class.WTF::StringImpl"* %160, null
  br i1 %161, label %175, label %162

162:                                              ; preds = %158
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = and i32 %164, 2
  %166 = icmp eq i32 %165, 0
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %160, i64 0, i32 0
  %168 = load i32, i32* %167, align 4
  br i1 %166, label %169, label %171

169:                                              ; preds = %162
  %170 = add i32 %168, -1
  store i32 %170, i32* %167, align 4
  br label %171

171:                                              ; preds = %169, %162
  %172 = phi i32 [ %170, %169 ], [ %168, %162 ]
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %174, label %175

174:                                              ; preds = %171
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %160) #15
  br label %175

175:                                              ; preds = %158, %171, %174
  %176 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %192, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %177) #15
  br label %192

192:                                              ; preds = %175, %188, %191
  %193 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4
  %194 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %193, i64 0, i32 0, i32 0, i32 0
  %195 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %194, align 8
  %196 = icmp eq %"class.WTF::AtomicString"* %195, null
  br i1 %196, label %231, label %197, !prof !3

197:                                              ; preds = %192
  %198 = bitcast %"class.WTF::AtomicString"* %195 to i8*
  %199 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 4, i32 0, i32 0, i32 2
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %229, label %202, !prof !4

202:                                              ; preds = %197
  %203 = zext i32 %200 to i64
  %204 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %195, i64 %203
  br label %205

205:                                              ; preds = %223, %202
  %206 = phi %"class.WTF::AtomicString"* [ %224, %223 ], [ %195, %202 ]
  %207 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 0, i32 0, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  %215 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %216 = load i32, i32* %215, align 4
  br i1 %214, label %217, label %219

217:                                              ; preds = %210
  %218 = add i32 %216, -1
  store i32 %218, i32* %215, align 4
  br label %219

219:                                              ; preds = %217, %210
  %220 = phi i32 [ %218, %217 ], [ %216, %210 ]
  %221 = icmp eq i32 %220, 0
  br i1 %221, label %222, label %223

222:                                              ; preds = %219
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #15
  br label %223

223:                                              ; preds = %222, %219, %205
  %224 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 1
  %225 = icmp eq %"class.WTF::AtomicString"* %224, %204
  br i1 %225, label %226, label %205

226:                                              ; preds = %223
  store i32 0, i32* %199, align 4
  %227 = bitcast %"class.WTF::Vector.284"* %193 to i8**
  %228 = load i8*, i8** %227, align 8
  br label %229

229:                                              ; preds = %226, %197
  %230 = phi i8* [ %228, %226 ], [ %198, %197 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %230) #15
  store %"class.WTF::AtomicString"* null, %"class.WTF::AtomicString"** %194, align 8
  br label %231

231:                                              ; preds = %192, %229
  %232 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 3, i32 0, i32 0
  %233 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"** %232, align 8
  %234 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, null
  br i1 %234, label %242, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %236) #15
  %237 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233, i64 0, i32 0, i32 0, i32 0, i32 0
  %238 = load i32, i32* %237, align 4
  %239 = icmp eq i32 %238, 0
  br i1 %239, label %240, label %242

240:                                              ; preds = %235
  %241 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* %233 to i8*
  tail call void @free(i8* %241) #15
  br label %242

242:                                              ; preds = %231, %235, %240
  %243 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* %0, i64 0, i32 2, i32 0, i32 0
  %244 = load %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"** %243, align 8
  %245 = icmp eq %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, null
  br i1 %245, label %253, label %246

246:                                              ; preds = %242
  %247 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %247) #15
  %248 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244, i64 0, i32 0, i32 0, i32 0, i32 0
  %249 = load i32, i32* %248, align 4
  %250 = icmp eq i32 %249, 0
  br i1 %250, label %251, label %253

251:                                              ; preds = %246
  tail call void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* nonnull %244) #15
  %252 = bitcast %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %244 to i8*
  tail call void @free(i8* %252) #15
  br label %253

253:                                              ; preds = %242, %246, %251
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17ComputedStyleBase47StyleRareInheritedUsageLessThan64PercentSubDataD2Ev(%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 5, i32 0, i32 1, i32 0
  %3 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %4 = icmp eq %"class.blink::PersistentNode"* %3, null
  br i1 %4, label %24, label %5

5:                                                ; preds = %1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #15
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !4

10:                                               ; preds = %5
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #15
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #15
  br label %12

12:                                               ; preds = %10, %5
  %13 = phi i8* [ %11, %10 ], [ %8, %5 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 3, i32 0, i32 0, i32 0
  %17 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %16, align 8
  %18 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %2, align 8
  %19 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %17, i64 0, i32 0, i32 0
  %20 = bitcast %"class.blink::PersistentRegion"* %17 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::PersistentNode"* %18 to i64*
  store i64 %21, i64* %22, align 8
  %23 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %18, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %23, align 8
  store %"class.blink::PersistentNode"* %18, %"class.blink::PersistentNode"** %19, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %2, align 8
  br label %24

24:                                               ; preds = %1, %12
  %25 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 4, i32 0
  %26 = load %"class.blink::StyleInitialData"*, %"class.blink::StyleInitialData"** %25, align 8
  %27 = icmp eq %"class.blink::StyleInitialData"* %26, null
  br i1 %27, label %38, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %29) #15
  %30 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %38

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.blink::StyleInitialData", %"class.blink::StyleInitialData"* %26, i64 0, i32 0, i32 0
  %35 = getelementptr inbounds %"class.base::RefCounted.261", %"class.base::RefCounted.261"* %34, i64 2
  %36 = bitcast %"class.base::RefCounted.261"* %35 to %"class.blink::StyleVariables"*
  tail call void @_ZN5blink14StyleVariablesD2Ev(%"class.blink::StyleVariables"* %36) #15
  %37 = bitcast %"class.blink::StyleInitialData"* %26 to i8*
  tail call void @free(i8* %37) #15
  br label %38

38:                                               ; preds = %24, %28, %33
  %39 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 3, i32 0
  %40 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %39, align 8
  %41 = icmp eq %"class.base::RefCountedData"* %40, null
  br i1 %41, label %82, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0
  %44 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = atomicrmw sub i32* %44, i32 1 acq_rel
  %46 = icmp eq i32 %45, 1
  br i1 %46, label %47, label %82

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.base::RefCountedThreadSafe.253", %"class.base::RefCountedThreadSafe.253"* %43, i64 2
  %49 = bitcast %"class.base::RefCountedThreadSafe.253"* %48 to %"class.blink::AppliedTextDecoration"**
  %50 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  %51 = icmp eq %"class.blink::AppliedTextDecoration"* %50, null
  br i1 %51, label %80, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.base::RefCountedThreadSafe.253", %"class.base::RefCountedThreadSafe.253"* %43, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %77, label %56, !prof !4

56:                                               ; preds = %52
  %57 = zext i32 %54 to i64
  %58 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %50, i64 %57
  br label %59

59:                                               ; preds = %72, %56
  %60 = phi %"class.blink::AppliedTextDecoration"* [ %73, %72 ], [ %50, %56 ]
  %61 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3, i32 2
  %62 = load i8, i8* %61, align 1
  %63 = icmp eq i8 %62, 8
  br i1 %63, label %64, label %66

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 3
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %65) #15
  br label %66

66:                                               ; preds = %64, %59
  %67 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0, i32 2
  %68 = load i8, i8* %67, align 1
  %69 = icmp eq i8 %68, 8
  br i1 %69, label %70, label %72

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 0, i32 2, i32 0
  tail call void @_ZNK5blink6Length22DecrementCalculatedRefEv(%"class.blink::Length"* %71) #15
  br label %72

72:                                               ; preds = %70, %66
  %73 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %60, i64 1
  %74 = icmp eq %"class.blink::AppliedTextDecoration"* %73, %58
  br i1 %74, label %75, label %59

75:                                               ; preds = %72
  store i32 0, i32* %53, align 4
  %76 = load %"class.blink::AppliedTextDecoration"*, %"class.blink::AppliedTextDecoration"** %49, align 8
  br label %77

77:                                               ; preds = %75, %52
  %78 = phi %"class.blink::AppliedTextDecoration"* [ %50, %52 ], [ %76, %75 ]
  %79 = getelementptr inbounds %"class.blink::AppliedTextDecoration", %"class.blink::AppliedTextDecoration"* %78, i64 0, i32 0
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %79) #15
  br label %80

80:                                               ; preds = %77, %47
  %81 = bitcast %"class.base::RefCountedData"* %40 to i8*
  tail call void @_ZdlPv(i8* %81) #16
  br label %82

82:                                               ; preds = %38, %42, %80
  %83 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData", %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* %0, i64 0, i32 2, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #15
  br label %99

99:                                               ; preds = %82, %95, %98
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4FontD1Ev(%"class.blink::Font"*) unnamed_addr #4

declare void @_ZNK4base6subtle14RefCountedBase10AddRefImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3195"*, %"struct.WTF::KeyValuePair.3195"* } @_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.3192"*, %"class.blink::LayoutBlock"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3192", %"class.WTF::HashTable.3192"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3195"*, %"struct.WTF::KeyValuePair.3195"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.3195"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.3192", %"class.WTF::HashTable.3192"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::LayoutBlock"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %34, i64 0, i32 0
  %36 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::LayoutBlock"*
  %38 = icmp eq %"class.blink::LayoutBlock"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::LayoutBlock"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::LayoutBlock"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %63, i64 0, i32 0
  %65 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %64, align 8
  %66 = icmp eq %"class.blink::LayoutBlock"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.3195"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.3195"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair.3195"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair.3195"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair.3195"*, %"struct.WTF::KeyValuePair.3195"* } undef, %"struct.WTF::KeyValuePair.3195"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair.3195"*, %"struct.WTF::KeyValuePair.3195"* } %79, %"struct.WTF::KeyValuePair.3195"* %78, 1
  ret { %"struct.WTF::KeyValuePair.3195"*, %"struct.WTF::KeyValuePair.3195"* } %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE12DeleteBucketERKSJ_(%"struct.WTF::KeyValuePair.3195"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::ListHashSet.3211"*, %"class.WTF::ListHashSet.3211"** %2, align 8
  store %"class.WTF::ListHashSet.3211"* null, %"class.WTF::ListHashSet.3211"** %2, align 8
  %4 = icmp eq %"class.WTF::ListHashSet.3211"* %3, null
  br i1 %4, label %46, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.WTF::MallocedListHashSetNode.3217"**, %"class.WTF::MallocedListHashSetNode.3217"*** %6, align 8
  %8 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"** %7, null
  br i1 %8, label %11, label %9, !prof !3

9:                                                ; preds = %5
  %10 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %7 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %10) #15
  store %"class.WTF::MallocedListHashSetNode.3217"** null, %"class.WTF::MallocedListHashSetNode.3217"*** %6, align 8
  br label %11

11:                                               ; preds = %9, %5
  %12 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %3, i64 0, i32 1
  %13 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %12, align 8
  %14 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %13, null
  br i1 %14, label %38, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %3, i64 0, i32 3, i32 0
  br label %17

17:                                               ; preds = %36, %15
  %18 = phi %"class.WTF::MallocedListHashSetNode.3217"* [ %13, %15 ], [ %20, %36 ]
  %19 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %18, i64 0, i32 2
  %20 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %19, align 8
  %21 = load %"struct.WTF::MallocedListHashSetAllocator.3218"*, %"struct.WTF::MallocedListHashSetAllocator.3218"** %16, align 8
  %22 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %21, i64 0, i32 3, i64 0
  %23 = bitcast i8* %22 to %"class.WTF::MallocedListHashSetNode.3217"*
  %24 = icmp uge %"class.WTF::MallocedListHashSetNode.3217"* %18, %23
  %25 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %21, i64 0, i32 3, i64 384
  %26 = bitcast i8* %25 to %"class.WTF::MallocedListHashSetNode.3217"*
  %27 = icmp ult %"class.WTF::MallocedListHashSetNode.3217"* %18, %26
  %28 = and i1 %27, %24
  br i1 %28, label %29, label %34

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %21, i64 0, i32 0
  %31 = bitcast %"struct.WTF::MallocedListHashSetAllocator.3218"* %21 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %19 to i64*
  store i64 %32, i64* %33, align 8
  store %"class.WTF::MallocedListHashSetNode.3217"* %18, %"class.WTF::MallocedListHashSetNode.3217"** %30, align 8
  br label %36

34:                                               ; preds = %17
  %35 = bitcast %"class.WTF::MallocedListHashSetNode.3217"* %18 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %35) #15
  br label %36

36:                                               ; preds = %34, %29
  %37 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %20, null
  br i1 %37, label %38, label %17

38:                                               ; preds = %36, %11
  %39 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %3, i64 0, i32 3, i32 0
  %40 = load %"struct.WTF::MallocedListHashSetAllocator.3218"*, %"struct.WTF::MallocedListHashSetAllocator.3218"** %39, align 8
  %41 = icmp eq %"struct.WTF::MallocedListHashSetAllocator.3218"* %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = bitcast %"struct.WTF::MallocedListHashSetAllocator.3218"* %40 to i8*
  tail call void @_ZdlPv(i8* %43) #16
  br label %44

44:                                               ; preds = %42, %38
  store %"struct.WTF::MallocedListHashSetAllocator.3218"* null, %"struct.WTF::MallocedListHashSetAllocator.3218"** %39, align 8
  %45 = bitcast %"class.WTF::ListHashSet.3211"* %3 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %45) #15
  br label %46

46:                                               ; preds = %1, %44
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %0, i64 0, i32 0
  store %"class.blink::LayoutBlock"* inttoptr (i64 -1 to %"class.blink::LayoutBlock"*), %"class.blink::LayoutBlock"** %47, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3195"* @_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE8RehashToEPSJ_jST_(%"class.WTF::HashTable.3192"*, %"struct.WTF::KeyValuePair.3195"*, i32, %"struct.WTF::KeyValuePair.3195"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.3192", align 8
  %6 = bitcast %"class.WTF::HashTable.3192"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::HashTable.3192", %"class.WTF::HashTable.3192"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.3192", %"class.WTF::HashTable.3192"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.3192", %"class.WTF::HashTable.3192"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3192", %"class.WTF::HashTable.3192"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.3192"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.3195"* %1, %"struct.WTF::KeyValuePair.3195"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.3192", %"class.WTF::HashTable.3192"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.3192", %"class.WTF::HashTable.3192"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.3195"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.3192"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.3192"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.3195"*, %"struct.WTF::KeyValuePair.3195"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.3195"* %22 to i64
  br label %100

24:                                               ; preds = %120
  %25 = bitcast %"class.WTF::HashTable.3192"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.3192"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %121, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.3195"* [ null, %16 ], [ %124, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %122, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.3195"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %96, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %94, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %91, %39
  %42 = phi i64 [ 0, %39 ], [ %92, %91 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %35, i64 %42, i32 0
  %44 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %43, align 8
  %45 = icmp eq %"class.blink::LayoutBlock"* %44, inttoptr (i64 -1 to %"class.blink::LayoutBlock"*)
  br i1 %45, label %91, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %35, i64 %42, i32 1, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::ListHashSet.3211"*, %"class.WTF::ListHashSet.3211"** %47, align 8
  store %"class.WTF::ListHashSet.3211"* null, %"class.WTF::ListHashSet.3211"** %47, align 8
  %49 = icmp eq %"class.WTF::ListHashSet.3211"* %48, null
  br i1 %49, label %91, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %48, i64 0, i32 0, i32 0
  %52 = load %"class.WTF::MallocedListHashSetNode.3217"**, %"class.WTF::MallocedListHashSetNode.3217"*** %51, align 8
  %53 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"** %52, null
  br i1 %53, label %56, label %54, !prof !3

54:                                               ; preds = %50
  %55 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %52 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %55) #15
  store %"class.WTF::MallocedListHashSetNode.3217"** null, %"class.WTF::MallocedListHashSetNode.3217"*** %51, align 8
  br label %56

56:                                               ; preds = %54, %50
  %57 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %48, i64 0, i32 1
  %58 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %57, align 8
  %59 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %58, null
  br i1 %59, label %83, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %48, i64 0, i32 3, i32 0
  br label %62

62:                                               ; preds = %81, %60
  %63 = phi %"class.WTF::MallocedListHashSetNode.3217"* [ %58, %60 ], [ %65, %81 ]
  %64 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %63, i64 0, i32 2
  %65 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %64, align 8
  %66 = load %"struct.WTF::MallocedListHashSetAllocator.3218"*, %"struct.WTF::MallocedListHashSetAllocator.3218"** %61, align 8
  %67 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %66, i64 0, i32 3, i64 0
  %68 = bitcast i8* %67 to %"class.WTF::MallocedListHashSetNode.3217"*
  %69 = icmp uge %"class.WTF::MallocedListHashSetNode.3217"* %63, %68
  %70 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %66, i64 0, i32 3, i64 384
  %71 = bitcast i8* %70 to %"class.WTF::MallocedListHashSetNode.3217"*
  %72 = icmp ult %"class.WTF::MallocedListHashSetNode.3217"* %63, %71
  %73 = and i1 %72, %69
  br i1 %73, label %74, label %79

74:                                               ; preds = %62
  %75 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %66, i64 0, i32 0
  %76 = bitcast %"struct.WTF::MallocedListHashSetAllocator.3218"* %66 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %64 to i64*
  store i64 %77, i64* %78, align 8
  store %"class.WTF::MallocedListHashSetNode.3217"* %63, %"class.WTF::MallocedListHashSetNode.3217"** %75, align 8
  br label %81

79:                                               ; preds = %62
  %80 = bitcast %"class.WTF::MallocedListHashSetNode.3217"* %63 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %80) #15
  br label %81

81:                                               ; preds = %79, %74
  %82 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %65, null
  br i1 %82, label %83, label %62

83:                                               ; preds = %81, %56
  %84 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %48, i64 0, i32 3, i32 0
  %85 = load %"struct.WTF::MallocedListHashSetAllocator.3218"*, %"struct.WTF::MallocedListHashSetAllocator.3218"** %84, align 8
  %86 = icmp eq %"struct.WTF::MallocedListHashSetAllocator.3218"* %85, null
  br i1 %86, label %89, label %87

87:                                               ; preds = %83
  %88 = bitcast %"struct.WTF::MallocedListHashSetAllocator.3218"* %85 to i8*
  call void @_ZdlPv(i8* %88) #16
  br label %89

89:                                               ; preds = %87, %83
  store %"struct.WTF::MallocedListHashSetAllocator.3218"* null, %"struct.WTF::MallocedListHashSetAllocator.3218"** %84, align 8
  %90 = bitcast %"class.WTF::ListHashSet.3211"* %48 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %90) #15
  br label %91

91:                                               ; preds = %89, %46, %41
  %92 = add nuw nsw i64 %42, 1
  %93 = icmp eq i64 %92, %40
  br i1 %93, label %94, label %41

94:                                               ; preds = %91, %37
  %95 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %95) #15
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %96

96:                                               ; preds = %28, %94
  %97 = getelementptr inbounds %"class.WTF::HashTable.3192", %"class.WTF::HashTable.3192"* %0, i64 0, i32 3
  %98 = load i32, i32* %97, align 8
  %99 = and i32 %98, -2147483648
  store i32 %99, i32* %97, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret %"struct.WTF::KeyValuePair.3195"* %33

100:                                              ; preds = %21, %120
  %101 = phi i64 [ %121, %120 ], [ %23, %21 ]
  %102 = phi i32 [ %122, %120 ], [ %13, %21 ]
  %103 = phi %"struct.WTF::KeyValuePair.3195"* [ %123, %120 ], [ %22, %21 ]
  %104 = phi %"struct.WTF::KeyValuePair.3195"* [ %124, %120 ], [ null, %21 ]
  %105 = phi i32 [ %125, %120 ], [ 0, %21 ]
  %106 = zext i32 %105 to i64
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %103, i64 %106
  %108 = bitcast %"struct.WTF::KeyValuePair.3195"* %107 to i64*
  %109 = load i64, i64* %108, align 8
  switch i64 %109, label %110 [
    i64 -1, label %120
    i64 0, label %120
  ]

110:                                              ; preds = %100
  %111 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %107, i64 0, i32 0
  %112 = call { %"struct.WTF::KeyValuePair.3195"*, i8 } @_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.3192"* nonnull %5, %"class.blink::LayoutBlock"** dereferenceable(8) %111) #15
  %113 = extractvalue { %"struct.WTF::KeyValuePair.3195"*, i8 } %112, 0
  call void @_ZN3WTF5MoverINS_12KeyValuePairIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS2_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_18PartitionAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSM_ISI_EEEELb0EE4MoveEOSJ_RSJ_(%"struct.WTF::KeyValuePair.3195"* dereferenceable(16) %107, %"struct.WTF::KeyValuePair.3195"* dereferenceable(16) %113) #15
  %114 = load %"struct.WTF::KeyValuePair.3195"*, %"struct.WTF::KeyValuePair.3195"** %15, align 8
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %114, i64 %106
  %116 = icmp eq %"struct.WTF::KeyValuePair.3195"* %115, %3
  %117 = select i1 %116, %"struct.WTF::KeyValuePair.3195"* %113, %"struct.WTF::KeyValuePair.3195"* %104
  %118 = load i32, i32* %12, align 8
  %119 = ptrtoint %"struct.WTF::KeyValuePair.3195"* %114 to i64
  br label %120

120:                                              ; preds = %100, %100, %110
  %121 = phi i64 [ %101, %100 ], [ %119, %110 ], [ %101, %100 ]
  %122 = phi i32 [ %102, %100 ], [ %118, %110 ], [ %102, %100 ]
  %123 = phi %"struct.WTF::KeyValuePair.3195"* [ %103, %100 ], [ %114, %110 ], [ %103, %100 ]
  %124 = phi %"struct.WTF::KeyValuePair.3195"* [ %104, %100 ], [ %117, %110 ], [ %104, %100 ]
  %125 = add i32 %105, 1
  %126 = icmp eq i32 %125, %122
  br i1 %126, label %24, label %100
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3195"*, i8 } @_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.3192"*, %"class.blink::LayoutBlock"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3192", %"class.WTF::HashTable.3192"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3195"*, %"struct.WTF::KeyValuePair.3195"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.3192", %"class.WTF::HashTable.3192"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::LayoutBlock"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.3195"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %32, i64 0, i32 0
  %35 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutBlock"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::LayoutBlock"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.3195"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.3195"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.3195"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.3195"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.3195"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::LayoutBlock"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::LayoutBlock"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::LayoutBlock"* %63, inttoptr (i64 -1 to %"class.blink::LayoutBlock"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.3195"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %75, i64 0, i32 0
  %78 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %77, align 8
  %79 = icmp eq %"class.blink::LayoutBlock"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.3195"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.3195"*, i8 } undef, %"struct.WTF::KeyValuePair.3195"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.3195"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.3195"*, i8 } %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5MoverINS_12KeyValuePairIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS2_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_18PartitionAllocatorENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSM_ISI_EEEELb0EE4MoveEOSJ_RSJ_(%"struct.WTF::KeyValuePair.3195"* dereferenceable(16), %"struct.WTF::KeyValuePair.3195"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::ListHashSet.3211"*, %"class.WTF::ListHashSet.3211"** %3, align 8
  store %"class.WTF::ListHashSet.3211"* null, %"class.WTF::ListHashSet.3211"** %3, align 8
  %5 = icmp eq %"class.WTF::ListHashSet.3211"* %4, null
  br i1 %5, label %47, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %4, i64 0, i32 0, i32 0
  %8 = load %"class.WTF::MallocedListHashSetNode.3217"**, %"class.WTF::MallocedListHashSetNode.3217"*** %7, align 8
  %9 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"** %8, null
  br i1 %9, label %12, label %10, !prof !3

10:                                               ; preds = %6
  %11 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %8 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %11) #15
  store %"class.WTF::MallocedListHashSetNode.3217"** null, %"class.WTF::MallocedListHashSetNode.3217"*** %7, align 8
  br label %12

12:                                               ; preds = %10, %6
  %13 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %4, i64 0, i32 1
  %14 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %13, align 8
  %15 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %14, null
  br i1 %15, label %39, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %4, i64 0, i32 3, i32 0
  br label %18

18:                                               ; preds = %37, %16
  %19 = phi %"class.WTF::MallocedListHashSetNode.3217"* [ %14, %16 ], [ %21, %37 ]
  %20 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %19, i64 0, i32 2
  %21 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %20, align 8
  %22 = load %"struct.WTF::MallocedListHashSetAllocator.3218"*, %"struct.WTF::MallocedListHashSetAllocator.3218"** %17, align 8
  %23 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %22, i64 0, i32 3, i64 0
  %24 = bitcast i8* %23 to %"class.WTF::MallocedListHashSetNode.3217"*
  %25 = icmp uge %"class.WTF::MallocedListHashSetNode.3217"* %19, %24
  %26 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %22, i64 0, i32 3, i64 384
  %27 = bitcast i8* %26 to %"class.WTF::MallocedListHashSetNode.3217"*
  %28 = icmp ult %"class.WTF::MallocedListHashSetNode.3217"* %19, %27
  %29 = and i1 %28, %25
  br i1 %29, label %30, label %35

30:                                               ; preds = %18
  %31 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %22, i64 0, i32 0
  %32 = bitcast %"struct.WTF::MallocedListHashSetAllocator.3218"* %22 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %20 to i64*
  store i64 %33, i64* %34, align 8
  store %"class.WTF::MallocedListHashSetNode.3217"* %19, %"class.WTF::MallocedListHashSetNode.3217"** %31, align 8
  br label %37

35:                                               ; preds = %18
  %36 = bitcast %"class.WTF::MallocedListHashSetNode.3217"* %19 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %36) #15
  br label %37

37:                                               ; preds = %35, %30
  %38 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %21, null
  br i1 %38, label %39, label %18

39:                                               ; preds = %37, %12
  %40 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %4, i64 0, i32 3, i32 0
  %41 = load %"struct.WTF::MallocedListHashSetAllocator.3218"*, %"struct.WTF::MallocedListHashSetAllocator.3218"** %40, align 8
  %42 = icmp eq %"struct.WTF::MallocedListHashSetAllocator.3218"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %"struct.WTF::MallocedListHashSetAllocator.3218"* %41 to i8*
  tail call void @_ZdlPv(i8* %44) #16
  br label %45

45:                                               ; preds = %43, %39
  store %"struct.WTF::MallocedListHashSetAllocator.3218"* null, %"struct.WTF::MallocedListHashSetAllocator.3218"** %40, align 8
  %46 = bitcast %"class.WTF::ListHashSet.3211"* %4 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %46) #15
  br label %47

47:                                               ; preds = %2, %45
  %48 = bitcast %"struct.WTF::KeyValuePair.3195"* %0 to i64*
  %49 = load i64, i64* %48, align 8
  %50 = bitcast %"struct.WTF::KeyValuePair.3195"* %1 to i64*
  store i64 %49, i64* %50, align 8
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %1, i64 0, i32 1
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %0, i64 0, i32 1
  %53 = getelementptr inbounds %"class.std::__1::unique_ptr.3208", %"class.std::__1::unique_ptr.3208"* %52, i64 0, i32 0, i32 0, i32 0
  %54 = bitcast %"class.std::__1::unique_ptr.3208"* %52 to i64*
  %55 = load i64, i64* %54, align 8
  store %"class.WTF::ListHashSet.3211"* null, %"class.WTF::ListHashSet.3211"** %53, align 8
  %56 = bitcast %"class.std::__1::unique_ptr.3208"* %51 to i64*
  store i64 %55, i64* %56, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3202"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_PNS1_11LayoutBlockEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.3199"*, %"struct.WTF::KeyValuePair.3202"*, i32, %"struct.WTF::KeyValuePair.3202"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.3199", align 8
  %6 = bitcast %"class.WTF::HashTable.3199"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #15
  %7 = getelementptr inbounds %"class.WTF::HashTable.3199", %"class.WTF::HashTable.3199"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.3199", %"class.WTF::HashTable.3199"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.3199", %"class.WTF::HashTable.3199"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3199", %"class.WTF::HashTable.3199"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.3199"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.3202"* %1, %"struct.WTF::KeyValuePair.3202"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.3199", %"class.WTF::HashTable.3199"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.3199", %"class.WTF::HashTable.3199"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.3202"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.3199"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.3199"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.3202"*, %"struct.WTF::KeyValuePair.3202"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.3202"* %22 to i64
  br label %42

24:                                               ; preds = %64
  %25 = bitcast %"class.WTF::HashTable.3199"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.3199"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %65, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.3202"* [ null, %16 ], [ %68, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %66, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = icmp eq i64 %32, 0
  br i1 %35, label %38, label %36

36:                                               ; preds = %28
  %37 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %37) #15
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %38

38:                                               ; preds = %28, %36
  %39 = getelementptr inbounds %"class.WTF::HashTable.3199", %"class.WTF::HashTable.3199"* %0, i64 0, i32 3
  %40 = load i32, i32* %39, align 8
  %41 = and i32 %40, -2147483648
  store i32 %41, i32* %39, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #15
  ret %"struct.WTF::KeyValuePair.3202"* %33

42:                                               ; preds = %21, %64
  %43 = phi i64 [ %65, %64 ], [ %23, %21 ]
  %44 = phi i32 [ %66, %64 ], [ %13, %21 ]
  %45 = phi %"struct.WTF::KeyValuePair.3202"* [ %67, %64 ], [ %22, %21 ]
  %46 = phi %"struct.WTF::KeyValuePair.3202"* [ %68, %64 ], [ null, %21 ]
  %47 = phi i32 [ %69, %64 ], [ 0, %21 ]
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %45, i64 %48
  %50 = bitcast %"struct.WTF::KeyValuePair.3202"* %49 to i64*
  %51 = load i64, i64* %50, align 8
  switch i64 %51, label %52 [
    i64 -1, label %64
    i64 0, label %64
  ]

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %49, i64 0, i32 0
  %54 = call { %"struct.WTF::KeyValuePair.3202"*, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_PNS1_11LayoutBlockEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.3199"* nonnull %5, %"class.blink::LayoutBox"** dereferenceable(8) %53) #15
  %55 = extractvalue { %"struct.WTF::KeyValuePair.3202"*, i8 } %54, 0
  %56 = bitcast %"struct.WTF::KeyValuePair.3202"* %55 to i8*
  %57 = bitcast %"struct.WTF::KeyValuePair.3202"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 16, i1 false) #15
  %58 = load %"struct.WTF::KeyValuePair.3202"*, %"struct.WTF::KeyValuePair.3202"** %15, align 8
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %58, i64 %48
  %60 = icmp eq %"struct.WTF::KeyValuePair.3202"* %59, %3
  %61 = select i1 %60, %"struct.WTF::KeyValuePair.3202"* %55, %"struct.WTF::KeyValuePair.3202"* %46
  %62 = load i32, i32* %12, align 8
  %63 = ptrtoint %"struct.WTF::KeyValuePair.3202"* %58 to i64
  br label %64

64:                                               ; preds = %42, %42, %52
  %65 = phi i64 [ %43, %42 ], [ %63, %52 ], [ %43, %42 ]
  %66 = phi i32 [ %44, %42 ], [ %62, %52 ], [ %44, %42 ]
  %67 = phi %"struct.WTF::KeyValuePair.3202"* [ %45, %42 ], [ %58, %52 ], [ %45, %42 ]
  %68 = phi %"struct.WTF::KeyValuePair.3202"* [ %46, %42 ], [ %61, %52 ], [ %46, %42 ]
  %69 = add i32 %47, 1
  %70 = icmp eq i32 %69, %66
  br i1 %70, label %24, label %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3202"*, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_PNS1_11LayoutBlockEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.3199"*, %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3199", %"class.WTF::HashTable.3199"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3202"*, %"struct.WTF::KeyValuePair.3202"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.3199", %"class.WTF::HashTable.3199"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.3202"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %32, i64 0, i32 0
  %35 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %34, align 8
  %36 = icmp eq %"class.blink::LayoutBox"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::LayoutBox"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %68
  %53 = ptrtoint %"struct.WTF::KeyValuePair.3202"* %75 to i64
  %54 = inttoptr i64 %70 to %"struct.WTF::KeyValuePair.3202"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.3202"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.3202"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.3202"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %80

61:                                               ; preds = %68, %38
  %62 = phi i64 [ 0, %38 ], [ %70, %68 ]
  %63 = phi %"class.blink::LayoutBox"* [ %35, %38 ], [ %78, %68 ]
  %64 = phi i64 [ %33, %38 ], [ %76, %68 ]
  %65 = phi i64 [ %31, %38 ], [ %74, %68 ]
  %66 = phi i64 [ 0, %38 ], [ %72, %68 ]
  %67 = icmp eq %"class.blink::LayoutBox"* %63, %37
  br i1 %67, label %80, label %68

68:                                               ; preds = %61
  %69 = icmp eq %"class.blink::LayoutBox"* %63, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  %70 = select i1 %69, i64 %64, i64 %62
  %71 = icmp eq i64 %66, 0
  %72 = select i1 %71, i64 %51, i64 %66
  %73 = add i64 %72, %65
  %74 = and i64 %73, %8
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %4, i64 %74
  %76 = ptrtoint %"struct.WTF::KeyValuePair.3202"* %75 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %75, i64 0, i32 0
  %78 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %77, align 8
  %79 = icmp eq %"class.blink::LayoutBox"* %78, null
  br i1 %79, label %52, label %61

80:                                               ; preds = %61, %55
  %81 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %82 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %83 = inttoptr i64 %81 to %"struct.WTF::KeyValuePair.3202"*
  %84 = insertvalue { %"struct.WTF::KeyValuePair.3202"*, i8 } undef, %"struct.WTF::KeyValuePair.3202"* %83, 0
  %85 = insertvalue { %"struct.WTF::KeyValuePair.3202"*, i8 } %84, i8 %82, 1
  ret { %"struct.WTF::KeyValuePair.3202"*, i8 } %85
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3202"*, %"struct.WTF::KeyValuePair.3202"* } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_PNS1_11LayoutBlockEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE4findERKS4_(%"class.WTF::HashTable.3199"*, %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3199", %"class.WTF::HashTable.3199"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3202"*, %"struct.WTF::KeyValuePair.3202"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.3202"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.3199", %"class.WTF::HashTable.3199"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %70, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = shl i64 %12, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %12, %14
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %9, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %4, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %34, i64 0, i32 0
  %36 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %35, align 8
  %37 = inttoptr i64 %12 to %"class.blink::LayoutBox"*
  %38 = icmp eq %"class.blink::LayoutBox"* %36, %37
  br i1 %38, label %67, label %39

39:                                               ; preds = %8
  %40 = xor i32 %31, -1
  %41 = lshr i32 %31, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::LayoutBox"* [ %36, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %33, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::LayoutBox"* %54, null
  br i1 %57, label %70, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %10
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %4, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %63, i64 0, i32 0
  %65 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %64, align 8
  %66 = icmp eq %"class.blink::LayoutBox"* %65, %37
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.3202"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.3202"* %68, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %53, %67, %2
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %4, i64 %71
  br label %76

73:                                               ; preds = %67
  %74 = zext i32 %7 to i64
  %75 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %4, i64 %74
  br label %76

76:                                               ; preds = %70, %73
  %77 = phi %"struct.WTF::KeyValuePair.3202"* [ %68, %73 ], [ %72, %70 ]
  %78 = phi %"struct.WTF::KeyValuePair.3202"* [ %75, %73 ], [ %72, %70 ]
  %79 = insertvalue { %"struct.WTF::KeyValuePair.3202"*, %"struct.WTF::KeyValuePair.3202"* } undef, %"struct.WTF::KeyValuePair.3202"* %77, 0
  %80 = insertvalue { %"struct.WTF::KeyValuePair.3202"*, %"struct.WTF::KeyValuePair.3202"* } %79, %"struct.WTF::KeyValuePair.3202"* %78, 1
  ret { %"struct.WTF::KeyValuePair.3202"*, %"struct.WTF::KeyValuePair.3202"* } %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::MallocedListHashSetNode.3217"**, i8 } @_ZN3WTF9HashTableIPNS_23MallocedListHashSetNodeIPN5blink9LayoutBoxENS_28MallocedListHashSetAllocatorIS4_Lj16EEEEES8_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_7PtrHashIS3_EEEENS_17ListHashSetTraitsIS4_Lj16ES6_EESF_NS_18PartitionAllocatorEE6insertINS_21ListHashSetTranslatorISC_S7_EERS4_RS6_EENS_18HashTableAddResultISH_S8_EEOT0_OT1_(%"class.WTF::HashTable.3214"*, %"class.blink::LayoutBox"** dereferenceable(8), %"struct.WTF::MallocedListHashSetAllocator.3218"* dereferenceable(400)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3214", %"class.WTF::HashTable.3214"* %0, i64 0, i32 0
  %5 = load %"class.WTF::MallocedListHashSetNode.3217"**, %"class.WTF::MallocedListHashSetNode.3217"*** %4, align 8
  %6 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"** %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::MallocedListHashSetNode.3217"** @_ZN3WTF9HashTableIPNS_23MallocedListHashSetNodeIPN5blink9LayoutBoxENS_28MallocedListHashSetAllocatorIS4_Lj16EEEEES8_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_7PtrHashIS3_EEEENS_17ListHashSetTraitsIS4_Lj16ES6_EESF_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.3214"* %0, %"class.WTF::MallocedListHashSetNode.3217"** null)
  %9 = load %"class.WTF::MallocedListHashSetNode.3217"**, %"class.WTF::MallocedListHashSetNode.3217"*** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::MallocedListHashSetNode.3217"** [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3214", %"class.WTF::HashTable.3214"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = inttoptr i64 %17 to %"class.blink::LayoutBox"*
  %40 = xor i32 %36, -1
  %41 = lshr i32 %36, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %64, %10
  %54 = phi i64 [ 0, %10 ], [ %67, %64 ]
  %55 = phi i64 [ %38, %10 ], [ %69, %64 ]
  %56 = phi %"class.WTF::MallocedListHashSetNode.3217"** [ null, %10 ], [ %65, %64 ]
  %57 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %11, i64 %55
  %58 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %57, align 8
  %59 = ptrtoint %"class.WTF::MallocedListHashSetNode.3217"* %58 to i64
  switch i64 %59, label %60 [
    i64 0, label %70
    i64 -1, label %64
  ]

60:                                               ; preds = %53
  %61 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %58, i64 0, i32 0
  %62 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %61, align 8
  %63 = icmp eq %"class.blink::LayoutBox"* %62, %39
  br i1 %63, label %121, label %64

64:                                               ; preds = %53, %60
  %65 = phi %"class.WTF::MallocedListHashSetNode.3217"** [ %56, %60 ], [ %57, %53 ]
  %66 = icmp eq i64 %54, 0
  %67 = select i1 %66, i64 %52, i64 %54
  %68 = add i64 %67, %55
  %69 = and i64 %68, %15
  br label %53

70:                                               ; preds = %53
  %71 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"** %56, null
  br i1 %71, label %80, label %72

72:                                               ; preds = %70
  %73 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %56 to i64*
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"class.WTF::HashTable.3214", %"class.WTF::HashTable.3214"* %0, i64 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 2147483647
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  br label %80

80:                                               ; preds = %70, %72
  %81 = phi %"class.WTF::MallocedListHashSetNode.3217"** [ %56, %72 ], [ %57, %70 ]
  %82 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %2, i64 0, i32 0
  %83 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %82, align 8
  %84 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %83, null
  br i1 %84, label %85, label %88

85:                                               ; preds = %80
  %86 = tail call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 24, i8* getelementptr inbounds ([156 x i8], [156 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_23MallocedListHashSetNodeIPN5blink9LayoutBoxENS_28MallocedListHashSetAllocatorIS4_Lj16EEEEEEEPKcv, i64 0, i64 0)) #15
  %87 = bitcast i8* %86 to %"class.WTF::MallocedListHashSetNode.3217"*
  br label %104

88:                                               ; preds = %80
  %89 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %83, i64 0, i32 2
  %90 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %89, align 8
  %91 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %90, null
  br i1 %91, label %92, label %102

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %2, i64 0, i32 1
  %94 = load i8, i8* %93, align 8, !range !5
  %95 = icmp eq i8 %94, 0
  br i1 %95, label %96, label %102

96:                                               ; preds = %92
  %97 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %83, i64 1
  %98 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %2, i64 0, i32 3, i64 384
  %99 = bitcast i8* %98 to %"class.WTF::MallocedListHashSetNode.3217"*
  %100 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %97, %99
  br i1 %100, label %101, label %102

101:                                              ; preds = %96
  store i8 1, i8* %93, align 8
  br label %102

102:                                              ; preds = %101, %96, %92, %88
  %103 = phi %"class.WTF::MallocedListHashSetNode.3217"* [ %90, %88 ], [ null, %92 ], [ null, %101 ], [ %97, %96 ]
  store %"class.WTF::MallocedListHashSetNode.3217"* %103, %"class.WTF::MallocedListHashSetNode.3217"** %82, align 8
  br label %104

104:                                              ; preds = %85, %102
  %105 = phi %"class.WTF::MallocedListHashSetNode.3217"* [ %83, %102 ], [ %87, %85 ]
  %106 = load i64, i64* %16, align 8
  %107 = bitcast %"class.WTF::MallocedListHashSetNode.3217"* %105 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %105, i64 0, i32 1
  %109 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %108 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 16, i1 false) #15
  store %"class.WTF::MallocedListHashSetNode.3217"* %105, %"class.WTF::MallocedListHashSetNode.3217"** %81, align 8
  %110 = getelementptr inbounds %"class.WTF::HashTable.3214", %"class.WTF::HashTable.3214"* %0, i64 0, i32 2
  %111 = load i32, i32* %110, align 4
  %112 = add i32 %111, 1
  store i32 %112, i32* %110, align 4
  %113 = getelementptr inbounds %"class.WTF::HashTable.3214", %"class.WTF::HashTable.3214"* %0, i64 0, i32 3
  %114 = load i32, i32* %113, align 8
  %115 = add i32 %114, %112
  %116 = shl i32 %115, 1
  %117 = load i32, i32* %12, align 8
  %118 = icmp ult i32 %116, %117
  br i1 %118, label %121, label %119

119:                                              ; preds = %104
  %120 = tail call %"class.WTF::MallocedListHashSetNode.3217"** @_ZN3WTF9HashTableIPNS_23MallocedListHashSetNodeIPN5blink9LayoutBoxENS_28MallocedListHashSetAllocatorIS4_Lj16EEEEES8_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_7PtrHashIS3_EEEENS_17ListHashSetTraitsIS4_Lj16ES6_EESF_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.3214"* %0, %"class.WTF::MallocedListHashSetNode.3217"** %81)
  br label %121

121:                                              ; preds = %60, %104, %119
  %122 = phi i8 [ 1, %104 ], [ 1, %119 ], [ 0, %60 ]
  %123 = phi %"class.WTF::MallocedListHashSetNode.3217"** [ %81, %104 ], [ %120, %119 ], [ %57, %60 ]
  %124 = insertvalue { %"class.WTF::MallocedListHashSetNode.3217"**, i8 } undef, %"class.WTF::MallocedListHashSetNode.3217"** %123, 0
  %125 = insertvalue { %"class.WTF::MallocedListHashSetNode.3217"**, i8 } %124, i8 %122, 1
  ret { %"class.WTF::MallocedListHashSetNode.3217"**, i8 } %125
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::MallocedListHashSetNode.3217"** @_ZN3WTF9HashTableIPNS_23MallocedListHashSetNodeIPN5blink9LayoutBoxENS_28MallocedListHashSetAllocatorIS4_Lj16EEEEES8_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_7PtrHashIS3_EEEENS_17ListHashSetTraitsIS4_Lj16ES6_EESF_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.3214"*, %"class.WTF::MallocedListHashSetNode.3217"**) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.3214", %"class.WTF::HashTable.3214"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3214", %"class.WTF::HashTable.3214"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #15
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %22, i8* %23) #15
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([158 x i8], [158 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPNS_23MallocedListHashSetNodeIPN5blink9LayoutBoxENS_28MallocedListHashSetAllocatorIS4_Lj16EEEEEEEPKcv, i64 0, i64 0)) #15
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #15
  %36 = bitcast i8* %35 to %"class.WTF::MallocedListHashSetNode.3217"**
  %37 = call %"class.WTF::MallocedListHashSetNode.3217"** @_ZN3WTF9HashTableIPNS_23MallocedListHashSetNodeIPN5blink9LayoutBoxENS_28MallocedListHashSetAllocatorIS4_Lj16EEEEES8_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_7PtrHashIS3_EEEENS_17ListHashSetTraitsIS4_Lj16ES6_EESF_NS_18PartitionAllocatorEE8RehashToEPS8_jSI_(%"class.WTF::HashTable.3214"* %0, %"class.WTF::MallocedListHashSetNode.3217"** %36, i32 %32, %"class.WTF::MallocedListHashSetNode.3217"** %1) #15
  ret %"class.WTF::MallocedListHashSetNode.3217"** %37
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #3

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::MallocedListHashSetNode.3217"** @_ZN3WTF9HashTableIPNS_23MallocedListHashSetNodeIPN5blink9LayoutBoxENS_28MallocedListHashSetAllocatorIS4_Lj16EEEEES8_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_7PtrHashIS3_EEEENS_17ListHashSetTraitsIS4_Lj16ES6_EESF_NS_18PartitionAllocatorEE8RehashToEPS8_jSI_(%"class.WTF::HashTable.3214"*, %"class.WTF::MallocedListHashSetNode.3217"**, i32, %"class.WTF::MallocedListHashSetNode.3217"**) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.WTF::MallocedListHashSetNode.3217"** %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.3214", %"class.WTF::HashTable.3214"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.3214", %"class.WTF::HashTable.3214"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.3214"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"class.WTF::MallocedListHashSetNode.3217"**, %"class.WTF::MallocedListHashSetNode.3217"*** %9, align 8
  %17 = ptrtoint %"class.WTF::MallocedListHashSetNode.3217"** %16 to i64
  br label %31

18:                                               ; preds = %108
  %19 = bitcast %"class.WTF::HashTable.3214"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %109, %18 ]
  %23 = phi %"class.WTF::MallocedListHashSetNode.3217"** [ null, %10 ], [ %112, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #15
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.3214", %"class.WTF::HashTable.3214"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"class.WTF::MallocedListHashSetNode.3217"** %23

31:                                               ; preds = %13, %108
  %32 = phi i64 [ %17, %13 ], [ %109, %108 ]
  %33 = phi i32 [ %7, %13 ], [ %110, %108 ]
  %34 = phi %"class.WTF::MallocedListHashSetNode.3217"** [ %16, %13 ], [ %111, %108 ]
  %35 = phi %"class.WTF::MallocedListHashSetNode.3217"** [ null, %13 ], [ %112, %108 ]
  %36 = phi i32 [ 0, %13 ], [ %113, %108 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %34, i64 %37
  %39 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %38 to i64*
  %40 = load i64, i64* %39, align 8
  switch i64 %40, label %41 [
    i64 -1, label %108
    i64 0, label %108
  ]

41:                                               ; preds = %31
  %42 = inttoptr i64 %40 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = shl i64 %43, 32
  %45 = xor i64 %44, -1
  %46 = add i64 %43, %45
  %47 = lshr i64 %46, 22
  %48 = xor i64 %47, %46
  %49 = shl i64 %48, 13
  %50 = xor i64 %49, -1
  %51 = add i64 %48, %50
  %52 = lshr i64 %51, 8
  %53 = xor i64 %52, %51
  %54 = mul i64 %53, 9
  %55 = lshr i64 %54, 15
  %56 = xor i64 %55, %54
  %57 = shl i64 %56, 27
  %58 = xor i64 %57, -1
  %59 = add i64 %56, %58
  %60 = lshr i64 %59, 31
  %61 = xor i64 %60, %59
  %62 = trunc i64 %61 to i32
  %63 = and i32 %14, %62
  %64 = zext i32 %63 to i64
  %65 = xor i32 %62, -1
  %66 = lshr i32 %62, 23
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 12
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 7
  %71 = xor i32 %70, %69
  %72 = shl i32 %71, 2
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 20
  %75 = xor i32 %74, %73
  %76 = or i32 %75, 1
  %77 = zext i32 %76 to i64
  %78 = inttoptr i64 %43 to %"class.blink::LayoutBox"*
  br label %79

79:                                               ; preds = %93, %41
  %80 = phi %"class.WTF::MallocedListHashSetNode.3217"** [ null, %41 ], [ %94, %93 ]
  %81 = phi i64 [ 0, %41 ], [ %96, %93 ]
  %82 = phi i64 [ %64, %41 ], [ %98, %93 ]
  %83 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %1, i64 %82
  %84 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %83, align 8
  %85 = ptrtoint %"class.WTF::MallocedListHashSetNode.3217"* %84 to i64
  switch i64 %85, label %89 [
    i64 0, label %86
    i64 -1, label %93
  ]

86:                                               ; preds = %79
  %87 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"** %80, null
  %88 = select i1 %87, %"class.WTF::MallocedListHashSetNode.3217"** %83, %"class.WTF::MallocedListHashSetNode.3217"** %80
  br label %99

89:                                               ; preds = %79
  %90 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %84, i64 0, i32 0
  %91 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %90, align 8
  %92 = icmp eq %"class.blink::LayoutBox"* %91, %78
  br i1 %92, label %99, label %93

93:                                               ; preds = %89, %79
  %94 = phi %"class.WTF::MallocedListHashSetNode.3217"** [ %80, %89 ], [ %83, %79 ]
  %95 = icmp eq i64 %81, 0
  %96 = select i1 %95, i64 %77, i64 %81
  %97 = add i64 %96, %82
  %98 = and i64 %97, %15
  br label %79

99:                                               ; preds = %89, %86
  %100 = phi %"class.WTF::MallocedListHashSetNode.3217"** [ %88, %86 ], [ %83, %89 ]
  %101 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %100 to i64*
  store i64 %40, i64* %101, align 8
  %102 = load %"class.WTF::MallocedListHashSetNode.3217"**, %"class.WTF::MallocedListHashSetNode.3217"*** %9, align 8
  %103 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %102, i64 %37
  %104 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"** %103, %3
  %105 = select i1 %104, %"class.WTF::MallocedListHashSetNode.3217"** %100, %"class.WTF::MallocedListHashSetNode.3217"** %35
  %106 = load i32, i32* %6, align 8
  %107 = ptrtoint %"class.WTF::MallocedListHashSetNode.3217"** %102 to i64
  br label %108

108:                                              ; preds = %31, %31, %99
  %109 = phi i64 [ %32, %31 ], [ %107, %99 ], [ %32, %31 ]
  %110 = phi i32 [ %33, %31 ], [ %106, %99 ], [ %33, %31 ]
  %111 = phi %"class.WTF::MallocedListHashSetNode.3217"** [ %34, %31 ], [ %102, %99 ], [ %34, %31 ]
  %112 = phi %"class.WTF::MallocedListHashSetNode.3217"** [ %35, %31 ], [ %105, %99 ], [ %35, %31 ]
  %113 = add i32 %36, 1
  %114 = icmp eq i32 %113, %110
  br i1 %114, label %18, label %31
}

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3202"*, i8 } @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_PNS1_11LayoutBlockEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERPS2_S7_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.3199"*, %"class.blink::LayoutBox"** dereferenceable(8), %"class.blink::LayoutBlock"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3199", %"class.WTF::HashTable.3199"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3202"*, %"struct.WTF::KeyValuePair.3202"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.3202"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.3202"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_PNS1_11LayoutBlockEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.3199"* %0, %"struct.WTF::KeyValuePair.3202"* null)
  %9 = load %"struct.WTF::KeyValuePair.3202"*, %"struct.WTF::KeyValuePair.3202"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.3202"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3199", %"class.WTF::HashTable.3199"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::LayoutBox"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %39, i64 0, i32 0
  %41 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %40, align 8
  %42 = icmp eq %"class.blink::LayoutBox"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::LayoutBox"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::LayoutBox"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.3202"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.3202"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::LayoutBox"* %59, %43
  br i1 %64, label %106, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::LayoutBox"* %59, inttoptr (i64 -1 to %"class.blink::LayoutBox"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.3202"* %60, %"struct.WTF::KeyValuePair.3202"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %72, i64 0, i32 0
  %74 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %73, align 8
  %75 = icmp eq %"class.blink::LayoutBox"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.3202"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.3202"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #15
  %80 = getelementptr inbounds %"class.WTF::HashTable.3199", %"class.WTF::HashTable.3199"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.3202"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.3202"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.3202", %"struct.WTF::KeyValuePair.3202"* %89, i64 0, i32 1
  %92 = bitcast %"class.blink::LayoutBlock"** %2 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = bitcast %"class.blink::LayoutBlock"** %91 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.WTF::HashTable.3199", %"class.WTF::HashTable.3199"* %0, i64 0, i32 2
  %96 = load i32, i32* %95, align 4
  %97 = add i32 %96, 1
  store i32 %97, i32* %95, align 4
  %98 = getelementptr inbounds %"class.WTF::HashTable.3199", %"class.WTF::HashTable.3199"* %0, i64 0, i32 3
  %99 = load i32, i32* %98, align 8
  %100 = add i32 %99, %97
  %101 = shl i32 %100, 1
  %102 = load i32, i32* %12, align 8
  %103 = icmp ult i32 %101, %102
  br i1 %103, label %106, label %104

104:                                              ; preds = %87
  %105 = tail call %"struct.WTF::KeyValuePair.3202"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_PNS1_11LayoutBlockEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.3199"* %0, %"struct.WTF::KeyValuePair.3202"* %89)
  br label %106

106:                                              ; preds = %58, %87, %104
  %107 = phi i8 [ 1, %87 ], [ 1, %104 ], [ 0, %58 ]
  %108 = phi %"struct.WTF::KeyValuePair.3202"* [ %89, %87 ], [ %105, %104 ], [ %60, %58 ]
  %109 = insertvalue { %"struct.WTF::KeyValuePair.3202"*, i8 } undef, %"struct.WTF::KeyValuePair.3202"* %108, 0
  %110 = insertvalue { %"struct.WTF::KeyValuePair.3202"*, i8 } %109, i8 %107, 1
  ret { %"struct.WTF::KeyValuePair.3202"*, i8 } %110
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3202"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_PNS1_11LayoutBlockEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.3199"*, %"struct.WTF::KeyValuePair.3202"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.3199", %"class.WTF::HashTable.3199"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3199", %"class.WTF::HashTable.3199"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #15
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %22, i8* %23) #15
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink9LayoutBoxEPNS2_11LayoutBlockEEEEEPKcv, i64 0, i64 0)) #15
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #15
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.3202"*
  %37 = call %"struct.WTF::KeyValuePair.3202"* @_ZN3WTF9HashTableIPKN5blink9LayoutBoxENS_12KeyValuePairIS4_PNS1_11LayoutBlockEEENS_24KeyValuePairKeyExtractorENS_7PtrHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS_18PartitionAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.3199"* %0, %"struct.WTF::KeyValuePair.3202"* %36, i32 %32, %"struct.WTF::KeyValuePair.3202"* %1) #15
  ret %"struct.WTF::KeyValuePair.3202"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3195"*, i8 } @_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISQ_SL_SR_EEPS2_SI_EENS_18HashTableAddResultISS_SJ_EEOT0_OT1_(%"class.WTF::HashTable.3192"*, %"class.blink::LayoutBlock"** dereferenceable(8), %"class.std::__1::unique_ptr.3208"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3192", %"class.WTF::HashTable.3192"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3195"*, %"struct.WTF::KeyValuePair.3195"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.3195"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.3195"* @_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE6ExpandEPSJ_(%"class.WTF::HashTable.3192"* %0, %"struct.WTF::KeyValuePair.3195"* null)
  %9 = load %"struct.WTF::KeyValuePair.3195"*, %"struct.WTF::KeyValuePair.3195"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.3195"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3192", %"class.WTF::HashTable.3192"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::LayoutBlock"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %39, i64 0, i32 0
  %41 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %40, align 8
  %42 = icmp eq %"class.blink::LayoutBlock"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::LayoutBlock"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::LayoutBlock"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.3195"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.3195"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::LayoutBlock"* %59, %43
  br i1 %64, label %152, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::LayoutBlock"* %59, inttoptr (i64 -1 to %"class.blink::LayoutBlock"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.3195"* %60, %"struct.WTF::KeyValuePair.3195"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %72, i64 0, i32 0
  %74 = load %"class.blink::LayoutBlock"*, %"class.blink::LayoutBlock"** %73, align 8
  %75 = icmp eq %"class.blink::LayoutBlock"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.3195"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.3195"* %67 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %79, i8 0, i64 16, i1 false) #15
  %80 = getelementptr inbounds %"class.WTF::HashTable.3192", %"class.WTF::HashTable.3192"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load i64, i64* %16, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi i64 [ %86, %78 ], [ %17, %76 ], [ %17, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.3195"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = bitcast %"struct.WTF::KeyValuePair.3195"* %89 to i64*
  store i64 %88, i64* %90, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.3195", %"struct.WTF::KeyValuePair.3195"* %89, i64 0, i32 1
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.3208", %"class.std::__1::unique_ptr.3208"* %2, i64 0, i32 0, i32 0, i32 0
  %93 = bitcast %"class.std::__1::unique_ptr.3208"* %2 to i64*
  %94 = load i64, i64* %93, align 8
  store %"class.WTF::ListHashSet.3211"* null, %"class.WTF::ListHashSet.3211"** %92, align 8
  %95 = getelementptr inbounds %"class.std::__1::unique_ptr.3208", %"class.std::__1::unique_ptr.3208"* %91, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.WTF::ListHashSet.3211"*, %"class.WTF::ListHashSet.3211"** %95, align 8
  %97 = bitcast %"class.std::__1::unique_ptr.3208"* %91 to i64*
  store i64 %94, i64* %97, align 8
  %98 = icmp eq %"class.WTF::ListHashSet.3211"* %96, null
  br i1 %98, label %140, label %99

99:                                               ; preds = %87
  %100 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %96, i64 0, i32 0, i32 0
  %101 = load %"class.WTF::MallocedListHashSetNode.3217"**, %"class.WTF::MallocedListHashSetNode.3217"*** %100, align 8
  %102 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"** %101, null
  br i1 %102, label %105, label %103, !prof !3

103:                                              ; preds = %99
  %104 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %101 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %104) #15
  store %"class.WTF::MallocedListHashSetNode.3217"** null, %"class.WTF::MallocedListHashSetNode.3217"*** %100, align 8
  br label %105

105:                                              ; preds = %103, %99
  %106 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %96, i64 0, i32 1
  %107 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %106, align 8
  %108 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %107, null
  br i1 %108, label %132, label %109

109:                                              ; preds = %105
  %110 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %96, i64 0, i32 3, i32 0
  br label %111

111:                                              ; preds = %130, %109
  %112 = phi %"class.WTF::MallocedListHashSetNode.3217"* [ %107, %109 ], [ %114, %130 ]
  %113 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %112, i64 0, i32 2
  %114 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %113, align 8
  %115 = load %"struct.WTF::MallocedListHashSetAllocator.3218"*, %"struct.WTF::MallocedListHashSetAllocator.3218"** %110, align 8
  %116 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %115, i64 0, i32 3, i64 0
  %117 = bitcast i8* %116 to %"class.WTF::MallocedListHashSetNode.3217"*
  %118 = icmp uge %"class.WTF::MallocedListHashSetNode.3217"* %112, %117
  %119 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %115, i64 0, i32 3, i64 384
  %120 = bitcast i8* %119 to %"class.WTF::MallocedListHashSetNode.3217"*
  %121 = icmp ult %"class.WTF::MallocedListHashSetNode.3217"* %112, %120
  %122 = and i1 %121, %118
  br i1 %122, label %123, label %128

123:                                              ; preds = %111
  %124 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %115, i64 0, i32 0
  %125 = bitcast %"struct.WTF::MallocedListHashSetAllocator.3218"* %115 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %113 to i64*
  store i64 %126, i64* %127, align 8
  store %"class.WTF::MallocedListHashSetNode.3217"* %112, %"class.WTF::MallocedListHashSetNode.3217"** %124, align 8
  br label %130

128:                                              ; preds = %111
  %129 = bitcast %"class.WTF::MallocedListHashSetNode.3217"* %112 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %129) #15
  br label %130

130:                                              ; preds = %128, %123
  %131 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %114, null
  br i1 %131, label %132, label %111

132:                                              ; preds = %130, %105
  %133 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %96, i64 0, i32 3, i32 0
  %134 = load %"struct.WTF::MallocedListHashSetAllocator.3218"*, %"struct.WTF::MallocedListHashSetAllocator.3218"** %133, align 8
  %135 = icmp eq %"struct.WTF::MallocedListHashSetAllocator.3218"* %134, null
  br i1 %135, label %138, label %136

136:                                              ; preds = %132
  %137 = bitcast %"struct.WTF::MallocedListHashSetAllocator.3218"* %134 to i8*
  tail call void @_ZdlPv(i8* %137) #16
  br label %138

138:                                              ; preds = %132, %136
  store %"struct.WTF::MallocedListHashSetAllocator.3218"* null, %"struct.WTF::MallocedListHashSetAllocator.3218"** %133, align 8
  %139 = bitcast %"class.WTF::ListHashSet.3211"* %96 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %139) #15
  br label %140

140:                                              ; preds = %87, %138
  %141 = getelementptr inbounds %"class.WTF::HashTable.3192", %"class.WTF::HashTable.3192"* %0, i64 0, i32 2
  %142 = load i32, i32* %141, align 4
  %143 = add i32 %142, 1
  store i32 %143, i32* %141, align 4
  %144 = getelementptr inbounds %"class.WTF::HashTable.3192", %"class.WTF::HashTable.3192"* %0, i64 0, i32 3
  %145 = load i32, i32* %144, align 8
  %146 = add i32 %145, %143
  %147 = shl i32 %146, 1
  %148 = load i32, i32* %12, align 8
  %149 = icmp ult i32 %147, %148
  br i1 %149, label %152, label %150

150:                                              ; preds = %140
  %151 = tail call %"struct.WTF::KeyValuePair.3195"* @_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE6ExpandEPSJ_(%"class.WTF::HashTable.3192"* %0, %"struct.WTF::KeyValuePair.3195"* %89)
  br label %152

152:                                              ; preds = %58, %140, %150
  %153 = phi i8 [ 1, %140 ], [ 1, %150 ], [ 0, %58 ]
  %154 = phi %"struct.WTF::KeyValuePair.3195"* [ %89, %140 ], [ %151, %150 ], [ %60, %58 ]
  %155 = insertvalue { %"struct.WTF::KeyValuePair.3195"*, i8 } undef, %"struct.WTF::KeyValuePair.3195"* %154, 0
  %156 = insertvalue { %"struct.WTF::KeyValuePair.3195"*, i8 } %155, i8 %153, 1
  ret { %"struct.WTF::KeyValuePair.3195"*, i8 } %156
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3195"* @_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE6ExpandEPSJ_(%"class.WTF::HashTable.3192"*, %"struct.WTF::KeyValuePair.3195"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.3192", %"class.WTF::HashTable.3192"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3192", %"class.WTF::HashTable.3192"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #15
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.8, i64 0, i64 0), i8* %22, i8* %23) #15
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.9, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #15
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #15
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #15
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 4
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([412 x i8], [412 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIPKN5blink11LayoutBlockENSt3__110unique_ptrINS_11ListHashSetIPNS2_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEEEEPKcv, i64 0, i64 0)) #15
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #15
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.3195"*
  %37 = call %"struct.WTF::KeyValuePair.3195"* @_ZN3WTF9HashTableIPKN5blink11LayoutBlockENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_11ListHashSetIPNS1_9LayoutBoxELm16ENS_7PtrHashIS9_EENS_28MallocedListHashSetAllocatorISA_Lj16EEEEENS6_14default_deleteISF_EEEEEENS_24KeyValuePairKeyExtractorENSB_IS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSN_ISI_EEEESO_NS_18PartitionAllocatorEE8RehashToEPSJ_jST_(%"class.WTF::HashTable.3192"* %0, %"struct.WTF::KeyValuePair.3195"* %36, i32 %32, %"struct.WTF::KeyValuePair.3195"* %1) #15
  ret %"struct.WTF::KeyValuePair.3195"* %37
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF11ListHashSetIPN5blink9LayoutBoxELm16ENS_7PtrHashIS2_EENS_28MallocedListHashSetAllocatorIS3_Lj16EEEE5eraseENS_19ListHashSetIteratorIS8_EE(%"class.WTF::ListHashSet.3211"*, %"class.WTF::ListHashSet.3211"*, %"class.WTF::MallocedListHashSetNode.3217"*) local_unnamed_addr #5 comdat align 2 {
  %4 = alloca %"class.WTF::MallocedListHashSetNode.3217"*, align 8
  %5 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %2, null
  br i1 %5, label %74, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %0, i64 0, i32 0
  %8 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #15
  store %"class.WTF::MallocedListHashSetNode.3217"* %2, %"class.WTF::MallocedListHashSetNode.3217"** %4, align 8
  %9 = call { %"class.WTF::MallocedListHashSetNode.3217"**, %"class.WTF::MallocedListHashSetNode.3217"** } @_ZN3WTF9HashTableIPNS_23MallocedListHashSetNodeIPN5blink9LayoutBoxENS_28MallocedListHashSetAllocatorIS4_Lj16EEEEES8_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_7PtrHashIS3_EEEENS_17ListHashSetTraitsIS4_Lj16ES6_EESF_NS_18PartitionAllocatorEE4findERKS8_(%"class.WTF::HashTable.3214"* %7, %"class.WTF::MallocedListHashSetNode.3217"** nonnull dereferenceable(8) %4) #15
  %10 = extractvalue { %"class.WTF::MallocedListHashSetNode.3217"**, %"class.WTF::MallocedListHashSetNode.3217"** } %9, 0
  %11 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %0, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::MallocedListHashSetNode.3217"**, %"class.WTF::MallocedListHashSetNode.3217"*** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %0, i64 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %12, i64 %15
  %17 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"** %16, %10
  br i1 %17, label %40, label %18

18:                                               ; preds = %6
  store %"class.WTF::MallocedListHashSetNode.3217"* inttoptr (i64 -1 to %"class.WTF::MallocedListHashSetNode.3217"*), %"class.WTF::MallocedListHashSetNode.3217"** %10, align 8
  %19 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %0, i64 0, i32 0, i32 3
  %20 = load i32, i32* %19, align 8
  %21 = add i32 %20, 1
  %22 = and i32 %21, 2147483647
  %23 = and i32 %20, -2147483648
  %24 = or i32 %22, %23
  store i32 %24, i32* %19, align 8
  %25 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %0, i64 0, i32 0, i32 2
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, -1
  store i32 %27, i32* %25, align 4
  %28 = mul i32 %27, 6
  %29 = load i32, i32* %13, align 8
  %30 = icmp ult i32 %28, %29
  %31 = icmp ugt i32 %29, 8
  %32 = and i1 %30, %31
  br i1 %32, label %33, label %40

33:                                               ; preds = %18
  %34 = lshr i32 %29, 1
  %35 = zext i32 %34 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %36, i8* getelementptr inbounds ([158 x i8], [158 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPNS_23MallocedListHashSetNodeIPN5blink9LayoutBoxENS_28MallocedListHashSetAllocatorIS4_Lj16EEEEEEEPKcv, i64 0, i64 0)) #15
  call void @llvm.memset.p0i8.i64(i8* align 1 %37, i8 0, i64 %36, i1 false) #15
  %38 = bitcast i8* %37 to %"class.WTF::MallocedListHashSetNode.3217"**
  %39 = call %"class.WTF::MallocedListHashSetNode.3217"** @_ZN3WTF9HashTableIPNS_23MallocedListHashSetNodeIPN5blink9LayoutBoxENS_28MallocedListHashSetAllocatorIS4_Lj16EEEEES8_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_7PtrHashIS3_EEEENS_17ListHashSetTraitsIS4_Lj16ES6_EESF_NS_18PartitionAllocatorEE8RehashToEPS8_jSI_(%"class.WTF::HashTable.3214"* %7, %"class.WTF::MallocedListHashSetNode.3217"** %38, i32 %34, %"class.WTF::MallocedListHashSetNode.3217"** null) #15
  br label %40

40:                                               ; preds = %6, %18, %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #15
  %41 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %2, i64 0, i32 1
  %42 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %41, align 8
  %43 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %42, null
  %44 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %2, i64 0, i32 2
  %45 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  %47 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %42, i64 0, i32 2
  %48 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %0, i64 0, i32 1
  %49 = select i1 %43, %"class.WTF::MallocedListHashSetNode.3217"** %48, %"class.WTF::MallocedListHashSetNode.3217"** %47
  %50 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %49 to i64*
  store i64 %46, i64* %50, align 8
  %51 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %44, align 8
  %52 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"* %51, null
  %53 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %41 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %51, i64 0, i32 1
  %56 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %0, i64 0, i32 2
  %57 = select i1 %52, %"class.WTF::MallocedListHashSetNode.3217"** %56, %"class.WTF::MallocedListHashSetNode.3217"** %55
  %58 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %57 to i64*
  store i64 %54, i64* %58, align 8
  %59 = getelementptr inbounds %"class.WTF::ListHashSet.3211", %"class.WTF::ListHashSet.3211"* %0, i64 0, i32 3, i32 0
  %60 = load %"struct.WTF::MallocedListHashSetAllocator.3218"*, %"struct.WTF::MallocedListHashSetAllocator.3218"** %59, align 8
  %61 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %60, i64 0, i32 3, i64 0
  %62 = bitcast i8* %61 to %"class.WTF::MallocedListHashSetNode.3217"*
  %63 = icmp ule %"class.WTF::MallocedListHashSetNode.3217"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %60, i64 0, i32 3, i64 384
  %65 = bitcast i8* %64 to %"class.WTF::MallocedListHashSetNode.3217"*
  %66 = icmp ugt %"class.WTF::MallocedListHashSetNode.3217"* %65, %2
  %67 = and i1 %66, %63
  br i1 %67, label %68, label %72

68:                                               ; preds = %40
  %69 = getelementptr inbounds %"struct.WTF::MallocedListHashSetAllocator.3218", %"struct.WTF::MallocedListHashSetAllocator.3218"* %60, i64 0, i32 0
  %70 = bitcast %"struct.WTF::MallocedListHashSetAllocator.3218"* %60 to i64*
  %71 = load i64, i64* %70, align 8
  store i64 %71, i64* %45, align 8
  store %"class.WTF::MallocedListHashSetNode.3217"* %2, %"class.WTF::MallocedListHashSetNode.3217"** %69, align 8
  br label %74

72:                                               ; preds = %40
  %73 = bitcast %"class.WTF::MallocedListHashSetNode.3217"* %2 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %73) #15
  br label %74

74:                                               ; preds = %72, %68, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::MallocedListHashSetNode.3217"**, %"class.WTF::MallocedListHashSetNode.3217"** } @_ZN3WTF9HashTableIPNS_23MallocedListHashSetNodeIPN5blink9LayoutBoxENS_28MallocedListHashSetAllocatorIS4_Lj16EEEEES8_NS_17IdentityExtractorENS_28ListHashSetNodeHashFunctionsINS_7PtrHashIS3_EEEENS_17ListHashSetTraitsIS4_Lj16ES6_EESF_NS_18PartitionAllocatorEE4findERKS8_(%"class.WTF::HashTable.3214"*, %"class.WTF::MallocedListHashSetNode.3217"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3214", %"class.WTF::HashTable.3214"* %0, i64 0, i32 0
  %4 = load %"class.WTF::MallocedListHashSetNode.3217"**, %"class.WTF::MallocedListHashSetNode.3217"*** %3, align 8
  %5 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"** %4, null
  %6 = getelementptr inbounds %"class.WTF::HashTable.3214", %"class.WTF::HashTable.3214"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %67, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = bitcast %"class.WTF::MallocedListHashSetNode.3217"** %1 to i64**
  %12 = load i64*, i64** %11, align 8
  %13 = load i64, i64* %12, align 8
  %14 = shl i64 %13, 32
  %15 = xor i64 %14, -1
  %16 = add i64 %13, %15
  %17 = lshr i64 %16, 22
  %18 = xor i64 %17, %16
  %19 = shl i64 %18, 13
  %20 = xor i64 %19, -1
  %21 = add i64 %18, %20
  %22 = lshr i64 %21, 8
  %23 = xor i64 %22, %21
  %24 = mul i64 %23, 9
  %25 = lshr i64 %24, 15
  %26 = xor i64 %25, %24
  %27 = shl i64 %26, 27
  %28 = xor i64 %27, -1
  %29 = add i64 %26, %28
  %30 = lshr i64 %29, 31
  %31 = xor i64 %30, %29
  %32 = trunc i64 %31 to i32
  %33 = and i32 %9, %32
  %34 = zext i32 %33 to i64
  %35 = xor i32 %32, -1
  %36 = lshr i32 %32, 23
  %37 = add i32 %36, %35
  %38 = shl i32 %37, 12
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 7
  %41 = xor i32 %40, %39
  %42 = shl i32 %41, 2
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 20
  %45 = xor i32 %44, %43
  %46 = or i32 %45, 1
  %47 = zext i32 %46 to i64
  %48 = inttoptr i64 %13 to %"class.blink::LayoutBox"*
  br label %49

49:                                               ; preds = %59, %8
  %50 = phi i64 [ 0, %8 ], [ %61, %59 ]
  %51 = phi i64 [ %34, %8 ], [ %63, %59 ]
  %52 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %4, i64 %51
  %53 = load %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %52, align 8
  %54 = ptrtoint %"class.WTF::MallocedListHashSetNode.3217"* %53 to i64
  switch i64 %54, label %55 [
    i64 0, label %67
    i64 -1, label %59
  ]

55:                                               ; preds = %49
  %56 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217", %"class.WTF::MallocedListHashSetNode.3217"* %53, i64 0, i32 0
  %57 = load %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %56, align 8
  %58 = icmp eq %"class.blink::LayoutBox"* %57, %48
  br i1 %58, label %64, label %59

59:                                               ; preds = %55, %49
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %47, i64 %50
  %62 = add i64 %61, %51
  %63 = and i64 %62, %10
  br label %49

64:                                               ; preds = %55
  %65 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %4, i64 %51
  %66 = icmp eq %"class.WTF::MallocedListHashSetNode.3217"** %65, null
  br i1 %66, label %67, label %70

67:                                               ; preds = %49, %64, %2
  %68 = zext i32 %7 to i64
  %69 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %4, i64 %68
  br label %73

70:                                               ; preds = %64
  %71 = zext i32 %7 to i64
  %72 = getelementptr inbounds %"class.WTF::MallocedListHashSetNode.3217"*, %"class.WTF::MallocedListHashSetNode.3217"** %4, i64 %71
  br label %73

73:                                               ; preds = %67, %70
  %74 = phi %"class.WTF::MallocedListHashSetNode.3217"** [ %65, %70 ], [ %69, %67 ]
  %75 = phi %"class.WTF::MallocedListHashSetNode.3217"** [ %72, %70 ], [ %69, %67 ]
  %76 = insertvalue { %"class.WTF::MallocedListHashSetNode.3217"**, %"class.WTF::MallocedListHashSetNode.3217"** } undef, %"class.WTF::MallocedListHashSetNode.3217"** %74, 0
  %77 = insertvalue { %"class.WTF::MallocedListHashSetNode.3217"**, %"class.WTF::MallocedListHashSetNode.3217"** } %76, %"class.WTF::MallocedListHashSetNode.3217"** %75, 1
  ret { %"class.WTF::MallocedListHashSetNode.3217"**, %"class.WTF::MallocedListHashSetNode.3217"** } %77
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink9LayoutBoxELj16ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.3310"*, %"class.blink::LayoutBox"** dereferenceable(8)) local_unnamed_addr #14 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3310", %"class.WTF::Vector.3310"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3310", %"class.WTF::Vector.3310"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %6, align 8
  %8 = icmp ugt %"class.blink::LayoutBox"** %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %7, i64 %10
  %12 = icmp ugt %"class.blink::LayoutBox"** %11, %1
  br i1 %12, label %15, label %13

13:                                               ; preds = %9, %2
  tail call void @_ZN3WTF6VectorIPN5blink9LayoutBoxELj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3310"* %0, i32 %5) #15
  %14 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %6, align 8
  br label %22

15:                                               ; preds = %9
  %16 = ptrtoint %"class.blink::LayoutBox"** %1 to i64
  %17 = ptrtoint %"class.blink::LayoutBox"** %7 to i64
  %18 = sub i64 %16, %17
  %19 = ashr exact i64 %18, 3
  tail call void @_ZN3WTF6VectorIPN5blink9LayoutBoxELj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3310"* %0, i32 %5) #15
  %20 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %6, align 8
  %21 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %20, i64 %19
  br label %22

22:                                               ; preds = %13, %15
  %23 = phi %"class.blink::LayoutBox"** [ %14, %13 ], [ %20, %15 ]
  %24 = phi %"class.blink::LayoutBox"** [ %1, %13 ], [ %21, %15 ]
  %25 = load i32, i32* %3, align 4
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"class.blink::LayoutBox"*, %"class.blink::LayoutBox"** %23, i64 %26
  %28 = bitcast %"class.blink::LayoutBox"** %24 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast %"class.blink::LayoutBox"** %27 to i64*
  store i64 %29, i64* %30, align 8
  %31 = load i32, i32* %3, align 4
  %32 = add i32 %31, 1
  store i32 %32, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink9LayoutBoxELj16ENS_18PartitionAllocatorEE14ExpandCapacityEj(%"class.WTF::Vector.3310"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.3310", %"class.WTF::Vector.3310"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = shl i32 %7, 1
  %9 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #15
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = icmp ugt i32 %8, %7
  br i1 %12, label %13, label %14

13:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* null, i8** %10, align 8
  br label %23

14:                                               ; preds = %2
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #15
  %16 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.10, i64 0, i64 0), i8* %15, i8* %16) #15
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %18 = load i8*, i8** %17, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  store i8* %18, i8** %10, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %14
  %21 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.11, i64 0, i64 0), i32 1715, %"class.logging::CheckOpResult"* nonnull %4) #15
  %22 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #15
  br label %23

23:                                               ; preds = %13, %14, %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #15
  %24 = icmp ugt i32 %8, 4
  %25 = select i1 %24, i32 %8, i32 4
  %26 = icmp ugt i32 %25, %1
  %27 = select i1 %26, i32 %25, i32 %1
  %28 = load i32, i32* %6, align 8
  %29 = icmp ult i32 %28, %27
  br i1 %29, label %30, label %51, !prof !3

30:                                               ; preds = %23
  %31 = getelementptr inbounds %"class.WTF::Vector.3310", %"class.WTF::Vector.3310"* %0, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %31, align 8
  %33 = icmp eq %"class.blink::LayoutBox"** %32, null
  br i1 %33, label %34, label %50

34:                                               ; preds = %30
  %35 = icmp ugt i32 %27, 16
  br i1 %35, label %36, label %44

36:                                               ; preds = %34
  %37 = zext i32 %27 to i64
  %38 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink9LayoutBoxEEEmm(i64 %37) #15
  %39 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %38, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink9LayoutBoxEEEPKcv, i64 0, i64 0)) #15
  %40 = ptrtoint i8* %39 to i64
  %41 = bitcast %"class.WTF::Vector.3310"* %0 to i64*
  store atomic i64 %40, i64* %41 monotonic, align 8
  %42 = lshr i64 %38, 3
  %43 = trunc i64 %42 to i32
  br label %48

44:                                               ; preds = %34
  %45 = getelementptr inbounds %"class.WTF::Vector.3310", %"class.WTF::Vector.3310"* %0, i64 0, i32 0, i32 1, i64 0
  %46 = ptrtoint i8* %45 to i64
  %47 = bitcast %"class.WTF::Vector.3310"* %0 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  br label %48

48:                                               ; preds = %44, %36
  %49 = phi i32 [ 16, %44 ], [ %43, %36 ]
  store i32 %49, i32* %6, align 8
  br label %51

50:                                               ; preds = %30
  call void @_ZN3WTF6VectorIPN5blink9LayoutBoxELj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3310"* %0, i32 %27) #15
  br label %51

51:                                               ; preds = %23, %48, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIPN5blink9LayoutBoxELj16ENS_18PartitionAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.3310"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp ult i32 %1, 17
  br i1 %3, label %4, label %29

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.WTF::Vector.3310", %"class.WTF::Vector.3310"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %5, align 8
  %7 = icmp eq %"class.blink::LayoutBox"** %6, null
  %8 = getelementptr inbounds %"class.WTF::Vector.3310", %"class.WTF::Vector.3310"* %0, i64 0, i32 0, i32 1, i64 0
  %9 = bitcast i8* %8 to %"class.blink::LayoutBox"**
  %10 = icmp eq %"class.blink::LayoutBox"** %6, %9
  %11 = or i1 %10, %7
  br i1 %11, label %12, label %16

12:                                               ; preds = %4
  %13 = ptrtoint i8* %8 to i64
  %14 = bitcast %"class.WTF::Vector.3310"* %0 to i64*
  store atomic i64 %13, i64* %14 monotonic, align 8
  %15 = getelementptr inbounds %"class.WTF::Vector.3310", %"class.WTF::Vector.3310"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %15, align 8
  br label %58

16:                                               ; preds = %4
  %17 = getelementptr inbounds %"class.WTF::Vector.3310", %"class.WTF::Vector.3310"* %0, i64 0, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"class.WTF::Vector.3310", %"class.WTF::Vector.3310"* %0, i64 0, i32 0
  %20 = ptrtoint i8* %8 to i64
  %21 = bitcast %"class.WTF::Vector.3310"* %0 to i64*
  store atomic i64 %20, i64* %21 monotonic, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.3310", %"class.WTF::Vector.3310"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 16, i32* %22, align 8
  %23 = icmp eq i8* %8, null
  br i1 %23, label %28, label %24, !prof !4

24:                                               ; preds = %16
  %25 = zext i32 %18 to i64
  %26 = bitcast %"class.blink::LayoutBox"** %6 to i8*
  %27 = shl nuw nsw i64 %25, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %8, i8* nonnull align 8 %26, i64 %27, i1 false) #15
  br label %28

28:                                               ; preds = %24, %16
  tail call void @_ZN3WTF12VectorBufferIPN5blink9LayoutBoxELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.3311"* %19, %"class.blink::LayoutBox"** nonnull %6) #15
  br label %58

29:                                               ; preds = %2
  %30 = zext i32 %1 to i64
  %31 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink9LayoutBoxEEEmm(i64 %30) #15
  %32 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %31, i8* getelementptr inbounds ([66 x i8], [66 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink9LayoutBoxEEEPKcv, i64 0, i64 0)) #15
  %33 = lshr i64 %31, 3
  %34 = ptrtoint i8* %32 to i64
  %35 = getelementptr inbounds %"class.WTF::Vector.3310", %"class.WTF::Vector.3310"* %0, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %35, align 8
  %37 = icmp ne i8* %32, null
  %38 = icmp ne %"class.blink::LayoutBox"** %36, null
  %39 = and i1 %37, %38
  br i1 %39, label %40, label %47, !prof !3

40:                                               ; preds = %29
  %41 = getelementptr inbounds %"class.WTF::Vector.3310", %"class.WTF::Vector.3310"* %0, i64 0, i32 0, i32 0, i32 2
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i64
  %44 = bitcast %"class.blink::LayoutBox"** %36 to i8*
  %45 = shl nuw nsw i64 %43, 3
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %32, i8* nonnull align 8 %44, i64 %45, i1 false) #15
  %46 = load %"class.blink::LayoutBox"**, %"class.blink::LayoutBox"*** %35, align 8
  br label %47

47:                                               ; preds = %29, %40
  %48 = phi %"class.blink::LayoutBox"** [ %36, %29 ], [ %46, %40 ]
  %49 = getelementptr inbounds %"class.WTF::Vector.3310", %"class.WTF::Vector.3310"* %0, i64 0, i32 0, i32 1, i64 0
  %50 = bitcast i8* %49 to %"class.blink::LayoutBox"**
  %51 = icmp eq %"class.blink::LayoutBox"** %48, %50
  br i1 %51, label %54, label %52, !prof !3

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::Vector.3310", %"class.WTF::Vector.3310"* %0, i64 0, i32 0
  tail call void @_ZN3WTF12VectorBufferIPN5blink9LayoutBoxELj16ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS3_(%"class.WTF::VectorBuffer.3311"* %53, %"class.blink::LayoutBox"** %48) #15
  br label %54

54:                                               ; preds = %47, %52
  %55 = bitcast %"class.WTF::Vector.3310"* %0 to i64*
  store atomic i64 %34, i64* %55 monotonic, align 8
  %56 = trunc i64 %33 to i32
  %57 = getelementptr inbounds %"class.WTF::Vector.3310", %"class.WTF::Vector.3310"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %56, i32* %57, align 8
  br label %58

58:                                               ; preds = %28, %54, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIPN5blink9LayoutBoxEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 268173312
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 268173312) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.14, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 3
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #3

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink12PhysicalRectEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #15
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #15
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #15
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.13, i64 0, i64 0), i8* %11, i8* %12) #15
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #15
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.14, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #15
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #15
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #15
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #15
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #15
  ret i64 %21
}

; Function Attrs: nounwind
declare void @_ZN5blink14NGLayoutResultD1Ev(%"class.blink::NGLayoutResult"*) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nounwind readnone }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nounwind }
attributes #16 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = !{i8 0, i8 2}
!6 = !{!"branch_weights", i32 1, i32 4001}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!9 = distinct !{!9, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE: argument 0"}
!12 = distinct !{!12, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE: argument 0"}
!15 = distinct !{!15, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE: argument 0"}
!18 = distinct !{!18, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE: argument 0"}
!21 = distinct !{!21, !"_ZN5blink9LayoutBox29LogicalMarginToPhysicalSetterEPKNS_13ComputedStyleE"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!24 = distinct !{!24, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!27 = distinct !{!27, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!30 = distinct !{!30, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!31 = !{!32}
!32 = distinct !{!32, !33, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!33 = distinct !{!33, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN5blink14LineLayoutItem16PositionForPointERKNS_14PhysicalOffsetE: argument 0"}
!36 = distinct !{!36, !"_ZN5blink14LineLayoutItem16PositionForPointERKNS_14PhysicalOffsetE"}
!37 = !{!38}
!38 = distinct !{!38, !39, !"_ZN5blink14LineLayoutItem16PositionForPointERKNS_14PhysicalOffsetE: argument 0"}
!39 = distinct !{!39, !"_ZN5blink14LineLayoutItem16PositionForPointERKNS_14PhysicalOffsetE"}
!40 = !{!41}
!41 = distinct !{!41, !42, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!42 = distinct !{!42, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!43 = !{!44}
!44 = distinct !{!44, !45, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!45 = distinct !{!45, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!48 = distinct !{!48, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!51 = distinct !{!51, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!54 = distinct !{!54, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!57 = distinct !{!57, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!60 = distinct !{!60, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!63 = distinct !{!63, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!66 = distinct !{!66, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!69 = distinct !{!69, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!72 = distinct !{!72, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_: argument 0"}
!75 = distinct !{!75, !"_ZNK5blink13ComputedStyle23PhysicalMarginToLogicalERKS0_"}
!76 = !{!77}
!77 = distinct !{!77, !78, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!78 = distinct !{!78, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!79 = !{!80}
!80 = distinct !{!80, !81, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!81 = distinct !{!81, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!82 = !{!83}
!83 = distinct !{!83, !84, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!84 = distinct !{!84, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!85 = !{!86}
!86 = distinct !{!86, !87, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!87 = distinct !{!87, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!88 = !{!89}
!89 = distinct !{!89, !90, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!90 = distinct !{!90, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!93 = distinct !{!93, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!94 = !{!95}
!95 = distinct !{!95, !96, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!96 = distinct !{!96, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!97 = !{!98}
!98 = distinct !{!98, !99, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!99 = distinct !{!99, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!100 = !{!101}
!101 = distinct !{!101, !102, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!102 = distinct !{!102, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!103 = !{!104}
!104 = distinct !{!104, !105, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv: argument 0"}
!105 = distinct !{!105, !"_ZNK5blink13ComputedStyle24PhysicalPaddingToLogicalEv"}
!106 = !{!107}
!107 = distinct !{!107, !108, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!108 = distinct !{!108, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!109 = !{!110}
!110 = distinct !{!110, !111, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!111 = distinct !{!111, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!112 = !{!113}
!113 = distinct !{!113, !114, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv: argument 0"}
!114 = distinct !{!114, !"_ZNK5blink20LayoutBoxModelObject23PhysicalBorderToLogicalEv"}
!115 = !{!116}
!116 = distinct !{!116, !117, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv: argument 0"}
!117 = distinct !{!117, !"_ZNK5blink20LayoutBoxModelObject24PhysicalPaddingToLogicalEv"}
!118 = !{!"branch_weights", i32 4001, i32 4000000}
!119 = !{!120}
!120 = distinct !{!120, !121, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!121 = distinct !{!121, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!122 = !{!123}
!123 = distinct !{!123, !124, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE: argument 0"}
!124 = distinct !{!124, !"_ZNK5blink20LayoutBoxModelObject23PhysicalMarginToLogicalEPKNS_13ComputedStyleE"}
!125 = distinct !{!125, !126}
!126 = !{!"llvm.loop.unroll.disable"}
!127 = distinct !{!127, !126}
!128 = distinct !{!128, !126}
!129 = !{!130}
!130 = distinct !{!130, !131, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE: argument 0"}
!131 = distinct !{!131, !"_ZNSt3__14listIN9protozero12MessageArena5BlockENS_9allocatorIS3_EEE15__allocate_nodeERNS4_INS_11__list_nodeIS3_PvEEEE"}
!132 = !{!133}
!133 = distinct !{!133, !134, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!134 = distinct !{!134, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
!135 = !{!136}
!136 = distinct !{!136, !137, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv: argument 0"}
!137 = distinct !{!137, !"_ZNK5blink13ComputedStyle23PhysicalBoundsToLogicalEv"}
