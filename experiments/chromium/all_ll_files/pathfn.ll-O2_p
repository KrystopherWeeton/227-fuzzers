; ModuleID = '../../third_party/unrar/src/pathfn.cpp'
source_filename = "../../third_party/unrar/src/pathfn.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"
module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%class.FindFile = type { [2048 x i32], i8, %struct.__dirstream* }
%struct.__dirstream = type opaque
%struct.FindData = type <{ [2048 x i32], i64, i32, i8, i8, [2 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i32, i8, [3 x i8] }>
%class.RarTime = type { i64 }
%class.Archive = type <{ %class.File, %class.CryptData, %class.ComprDataIO, i8, [7 x i8], %class.RAROptions*, %class.RarTime, i32, i32, i8, [7 x i8], %class.QuickOpen, i8, [7 x i8], i64, %struct.BaseBlock, %struct.MarkHeader, %struct.MainHeader, %struct.CryptHeader, [4 x i8], %struct.FileHeader, %struct.EndArcHeader, %struct.SubBlockHeader, [4 x i8], %struct.FileHeader, %struct.CommentHeader, %struct.ProtectHeader, %struct.UnixOwnersHeader, %struct.EAHeader, %struct.StreamHeader, [4 x i8], i64, i64, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, [3 x i8], i64, i8, i8, [16 x i8], i8, i8, i32, i64, i64, i64, i8, [3 x i8], [2048 x i32], [4 x i8] }>
%class.File = type { i32 (...)**, i64, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, [2048 x i32], i32, i64 }
%class.CryptData = type { [4 x %"struct.CryptData::KDF3CacheItem"], i32, [4 x %"struct.CryptData::KDF5CacheItem"], i32, i32, %class.Rijndael, [256 x i32], [256 x i8], [4 x i32], [3 x i8], [4 x i16] }
%"struct.CryptData::KDF3CacheItem" = type { %class.SecPassword, [8 x i8], [16 x i8], [16 x i8], i8, [3 x i8] }
%class.SecPassword = type <{ [128 x i32], i8, i8, [2 x i8] }>
%"struct.CryptData::KDF5CacheItem" = type { %class.SecPassword, [16 x i8], [32 x i8], i32, [32 x i8], [32 x i8] }
%class.Rijndael = type { i8, i32, [16 x i8], [15 x [4 x [4 x i8]]] }
%class.ComprDataIO = type <{ i8, [7 x i8], i64, i8*, i8, [7 x i8], i64, i8*, i64, i8*, i64, i8, i8, i8, i8, [4 x i8], %class.File*, %class.File*, %class.CmdAdd*, %struct.FileHeader*, i64*, %class.CryptData*, %class.CryptData*, i32, i32, i8, i8, i8, [5 x i8], i64, i64, i64, i64, i64, i64, i64, %class.DataHash, %class.DataHash, %class.DataHash, i8, i8, [6 x i8] }>
%class.CmdAdd = type opaque
%class.DataHash = type <{ i32, i32, %struct.blake2sp_state*, %class.ThreadPool*, i32, [4 x i8] }>
%struct.blake2sp_state = type <{ [8 x %struct.blake2s_state], %struct.blake2s_state, [512 x i8], i64, %class.ThreadPool*, i32, [4 x i8] }>
%struct.blake2s_state = type <{ [240 x i8], i8*, i32*, i32*, i32*, i64, i8, [7 x i8] }>
%class.ThreadPool = type { i32, [64 x i64], i32, i32, [64 x %"struct.ThreadPool::QueueEntry"], i32, i32, i8, i32, %union.pthread_cond_t, %union.pthread_mutex_t, i8, %union.pthread_cond_t, %union.pthread_mutex_t, %union.pthread_mutex_t }
%"struct.ThreadPool::QueueEntry" = type { void (i8*)*, i8* }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1, %union.anon.2, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1 = type { i64 }
%union.anon.2 = type { i64 }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%class.RAROptions = type <{ i32, i32, i8, i8, i8, [5 x i8], i64, [2048 x i32], [2048 x i32], i32, i8, [3 x i8], [2048 x i32], [2048 x i32], i32, i32, i32, i32, [2048 x i32], %class.SecPassword, i8, i8, [2 x i8], [2048 x i32], i32, i32, i32, i32, i32, i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, i8, i8, i8, i8, i8, [3 x i8], i32, i32, [4 x i8], i64, %class.Array.4, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, i32, i32, i8, i8, i8, i8, [128 x i32], [128 x i32], i8, i8, i8, i8, i8, [3 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], %class.RarTime, %class.RarTime, %class.RarTime, i8, i8, i8, [5 x i8], i64, i64, i8, i8, i8, i8, [16 x %struct.FilterMode], [2048 x i32], i32, i32, i32, i32, i32, i32, i8, [3 x i8], [2048 x i32], i32, [4 x i8] }>
%class.Array.4 = type <{ i64*, i64, i64, i64, i8, [7 x i8] }>
%struct.FilterMode = type { i32, i32, i32 }
%class.QuickOpen = type <{ %class.Archive*, i8, [7 x i8], %struct.QuickOpenItem*, %struct.QuickOpenItem*, i8*, i64, %class.CryptData, i8, [7 x i8], i64, i64, i64, i64, i64, i64, %class.Array, i64, i64, i8, [7 x i8] }>
%struct.QuickOpenItem = type { i8*, i64, i64, %struct.QuickOpenItem* }
%class.Array = type <{ i8*, i64, i64, i64, i8, [7 x i8] }>
%struct.BaseBlock = type { i32, i32, i32, i32, i8 }
%struct.MarkHeader = type { [8 x i8], i32 }
%struct.MainHeader = type { %struct.BaseBlock, i16, i32, i8, i8, i8, i64, i64, i64, i64 }
%struct.CryptHeader = type { %struct.BaseBlock, i8, i32, [16 x i8], [8 x i8] }
%struct.EndArcHeader = type { %struct.BaseBlock, i32, i32, i8, i8, i8, i8 }
%struct.SubBlockHeader = type <{ %struct.BlockHeader, i16, i8, i8 }>
%struct.BlockHeader = type { %struct.BaseBlock, i32 }
%struct.FileHeader = type { %struct.BlockHeader, i8, i32, i8, %union.anon, [2048 x i32], %class.Array, %class.RarTime, %class.RarTime, %class.RarTime, i64, i64, i64, %struct.HashValue, i32, i8, i8, i8, i8, i32, i8, [16 x i8], [16 x i8], i8, [8 x i8], i8, [32 x i8], i32, i8, i8, i8, i8, i64, i8, i8, i8, i32, i32, [2048 x i32], i8, i8, i8, i8, [256 x i8], [256 x i8], i32, i32 }
%union.anon = type { i32 }
%struct.HashValue = type { i32, %union.anon.0 }
%union.anon.0 = type { i32, [28 x i8] }
%struct.CommentHeader = type <{ %struct.BaseBlock, i16, i8, i8, i16, [2 x i8] }>
%struct.ProtectHeader = type { %struct.BlockHeader, i8, i16, i32, [8 x i8] }
%struct.UnixOwnersHeader = type { %struct.SubBlockHeader.base, i16, i16, [256 x i8], [256 x i8] }
%struct.SubBlockHeader.base = type <{ %struct.BlockHeader, i16, i8 }>
%struct.EAHeader = type { %struct.SubBlockHeader.base, i32, i8, i8, i32 }
%struct.StreamHeader = type <{ %struct.SubBlockHeader.base, i8, i32, i8, i8, [2 x i8], i32, i16, [260 x i8], [2 x i8] }>
%struct.RarLocalTime = type { i32, i32, i32, i32, i32, i32, i32, i32, i32 }

@.str = private unnamed_addr constant [2 x i32] [i32 46, i32 0], align 4
@.str.1 = private unnamed_addr constant [4 x i32] [i32 115, i32 102, i32 120, i32 0], align 4
@.str.2 = private unnamed_addr constant [3 x i32] [i32 42, i32 63, i32 0], align 4
@_ZZ15EnumConfigPathsjPwmbE8ConfPath = internal unnamed_addr constant [5 x i32*] [i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.3, i32 0, i32 0), i32* getelementptr inbounds ([9 x i32], [9 x i32]* @.str.4, i32 0, i32 0), i32* getelementptr inbounds ([9 x i32], [9 x i32]* @.str.5, i32 0, i32 0), i32* getelementptr inbounds ([15 x i32], [15 x i32]* @.str.6, i32 0, i32 0), i32* getelementptr inbounds ([15 x i32], [15 x i32]* @.str.7, i32 0, i32 0)], align 16
@.str.3 = private unnamed_addr constant [5 x i32] [i32 47, i32 101, i32 116, i32 99, i32 0], align 4
@.str.4 = private unnamed_addr constant [9 x i32] [i32 47, i32 101, i32 116, i32 99, i32 47, i32 114, i32 97, i32 114, i32 0], align 4
@.str.5 = private unnamed_addr constant [9 x i32] [i32 47, i32 117, i32 115, i32 114, i32 47, i32 108, i32 105, i32 98, i32 0], align 4
@.str.6 = private unnamed_addr constant [15 x i32] [i32 47, i32 117, i32 115, i32 114, i32 47, i32 108, i32 111, i32 99, i32 97, i32 108, i32 47, i32 108, i32 105, i32 98, i32 0], align 4
@.str.7 = private unnamed_addr constant [15 x i32] [i32 47, i32 117, i32 115, i32 114, i32 47, i32 108, i32 111, i32 99, i32 97, i32 108, i32 47, i32 101, i32 116, i32 99, i32 0], align 4
@.str.8 = private unnamed_addr constant [5 x i8] c"HOME\00", align 1
@.str.9 = private unnamed_addr constant [5 x i32] [i32 46, i32 114, i32 97, i32 114, i32 0], align 4
@.str.10 = private unnamed_addr constant [5 x i32] [i32 46, i32 101, i32 120, i32 101, i32 0], align 4
@.str.11 = private unnamed_addr constant [5 x i32] [i32 46, i32 115, i32 102, i32 120, i32 0], align 4
@.str.12 = private unnamed_addr constant [3 x i32] [i32 48, i32 48, i32 0], align 4
@.str.13 = private unnamed_addr constant [7 x i32] [i32 63, i32 42, i32 60, i32 62, i32 124, i32 34, i32 0], align 4
@.str.14 = private unnamed_addr constant [7 x i8] c"?*<>|\22\00", align 1
@.str.15 = private unnamed_addr constant [3 x i8] c"?*\00", align 1
@.str.16 = private unnamed_addr constant [3 x i32] [i32 63, i32 42, i32 0], align 4
@.str.18 = private unnamed_addr constant [4 x i32] [i32 114, i32 97, i32 114, i32 0], align 4
@.str.19 = private unnamed_addr constant [2 x i32] [i32 42, i32 0], align 4
@.str.20 = private unnamed_addr constant [15 x i32] [i32 121, i32 121, i32 121, i32 121, i32 109, i32 109, i32 100, i32 100, i32 104, i32 104, i32 109, i32 109, i32 115, i32 115, i32 0], align 4
@.str.21 = private unnamed_addr constant [1 x i32] zeroinitializer, align 4
@.str.22 = private unnamed_addr constant [5 x i8] c"%04u\00", align 1
@.str.23 = private unnamed_addr constant [5 x i8] c"%02u\00", align 1
@.str.24 = private unnamed_addr constant [3 x i8] c"%u\00", align 1
@.str.25 = private unnamed_addr constant [5 x i8] c"%03u\00", align 1
@.str.26 = private unnamed_addr constant [5 x i8] c"%05u\00", align 1
@.str.27 = private unnamed_addr constant [11 x i32] [i32 89, i32 77, i32 68, i32 72, i32 73, i32 83, i32 87, i32 65, i32 69, i32 78, i32 0], align 4

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32* @_Z11PointToNamePKw(i32* readonly) local_unnamed_addr #0 {
  %2 = tail call i64 @wcslen(i32* %0) #13
  %3 = shl i64 %2, 32
  %4 = ashr exact i64 %3, 32
  br label %5

5:                                                ; preds = %9, %1
  %6 = phi i64 [ %7, %9 ], [ %4, %1 ]
  %7 = add nsw i64 %6, -1
  %8 = icmp sgt i64 %6, 0
  br i1 %8, label %9, label %17

9:                                                ; preds = %5
  %10 = getelementptr inbounds i32, i32* %0, i64 %7
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 47
  br i1 %12, label %13, label %5

13:                                               ; preds = %9
  %14 = shl i64 %6, 32
  %15 = ashr exact i64 %14, 32
  %16 = getelementptr inbounds i32, i32* %0, i64 %15
  br label %17

17:                                               ; preds = %5, %13
  %18 = phi i32* [ %16, %13 ], [ %0, %5 ]
  ret i32* %18
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @wcslen(i32* nocapture) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_Z9IsPathDivi(i32) local_unnamed_addr #3 {
  %2 = icmp eq i32 %0, 47
  ret i1 %2
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_Z10IsDriveDivi(i32) local_unnamed_addr #3 {
  ret i1 false
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32* @_Z15PointToLastCharPKw(i32* readonly) local_unnamed_addr #0 {
  %2 = tail call i64 @wcslen(i32* %0) #13
  %3 = icmp eq i64 %2, 0
  %4 = getelementptr inbounds i32, i32* %0, i64 %2
  %5 = getelementptr inbounds i32, i32* %4, i64 -1
  %6 = select i1 %3, i32* %0, i32* %5
  ret i32* %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i32* @_Z11ConvertPathPKwPwm(i32*, i32*, i64) local_unnamed_addr #4 {
  %4 = alloca [2048 x i32], align 16
  br label %5

5:                                                ; preds = %23, %3
  %6 = phi i32* [ %0, %3 ], [ %24, %23 ]
  %7 = phi i32* [ %0, %3 ], [ %25, %23 ]
  %8 = load i32, i32* %7, align 4
  switch i32 %8, label %23 [
    i32 0, label %26
    i32 47, label %9
  ]

9:                                                ; preds = %5
  %10 = getelementptr inbounds i32, i32* %7, i64 1
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 46
  br i1 %12, label %13, label %23

13:                                               ; preds = %9
  %14 = getelementptr inbounds i32, i32* %7, i64 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 46
  br i1 %16, label %17, label %23

17:                                               ; preds = %13
  %18 = getelementptr inbounds i32, i32* %7, i64 3
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 47
  %21 = getelementptr inbounds i32, i32* %7, i64 4
  %22 = select i1 %20, i32* %21, i32* %6
  br label %23

23:                                               ; preds = %5, %17, %9, %13
  %24 = phi i32* [ %6, %13 ], [ %6, %9 ], [ %22, %17 ], [ %6, %5 ]
  %25 = getelementptr inbounds i32, i32* %7, i64 1
  br label %5

26:                                               ; preds = %5, %54
  %27 = phi i32* [ %46, %54 ], [ %6, %5 ]
  %28 = load i32, i32* %27, align 4
  switch i32 %28, label %43 [
    i32 0, label %67
    i32 92, label %29
  ]

29:                                               ; preds = %26
  %30 = getelementptr inbounds i32, i32* %27, i64 1
  %31 = load i32, i32* %30, align 4
  %32 = icmp eq i32 %31, 92
  br i1 %32, label %33, label %43

33:                                               ; preds = %29
  %34 = getelementptr inbounds i32, i32* %27, i64 2
  %35 = tail call i32* @wcschr(i32* %34, i32 signext 92) #13
  %36 = icmp eq i32* %35, null
  br i1 %36, label %43, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds i32, i32* %35, i64 1
  %39 = tail call i32* @wcschr(i32* %38, i32 signext 92) #13
  %40 = icmp eq i32* %39, null
  %41 = getelementptr inbounds i32, i32* %39, i64 1
  %42 = select i1 %40, i32* %27, i32* %41
  br label %43

43:                                               ; preds = %26, %37, %33, %29
  %44 = phi i32* [ %27, %26 ], [ %42, %37 ], [ %27, %33 ], [ %27, %29 ]
  br label %45

45:                                               ; preds = %43, %51
  %46 = phi i32* [ %52, %51 ], [ %44, %43 ]
  %47 = phi i32* [ %53, %51 ], [ %44, %43 ]
  %48 = load i32, i32* %47, align 4
  switch i32 %48, label %54 [
    i32 46, label %51
    i32 47, label %49
  ]

49:                                               ; preds = %45
  %50 = getelementptr inbounds i32, i32* %47, i64 1
  br label %51

51:                                               ; preds = %45, %49
  %52 = phi i32* [ %50, %49 ], [ %46, %45 ]
  %53 = getelementptr inbounds i32, i32* %47, i64 1
  br label %45

54:                                               ; preds = %45
  %55 = icmp eq i32* %46, %27
  br i1 %55, label %56, label %26

56:                                               ; preds = %54
  %57 = icmp eq i32 %28, 46
  br i1 %57, label %58, label %67

58:                                               ; preds = %56
  %59 = getelementptr inbounds i32, i32* %27, i64 1
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 46
  br i1 %61, label %62, label %67

62:                                               ; preds = %58
  %63 = getelementptr inbounds i32, i32* %27, i64 2
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  %66 = select i1 %65, i32* %63, i32* %27
  br label %67

67:                                               ; preds = %26, %62, %58, %56
  %68 = phi i32* [ %27, %58 ], [ %27, %56 ], [ %66, %62 ], [ %27, %26 ]
  %69 = icmp eq i32* %1, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  %71 = bitcast [2048 x i32]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %71) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %71, i8 -86, i64 8192, i1 false)
  %72 = getelementptr inbounds [2048 x i32], [2048 x i32]* %4, i64 0, i64 0
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %72, i32* %68, i64 2048) #14
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %1, i32* nonnull %72, i64 %2) #14
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %71) #14
  br label %73

73:                                               ; preds = %67, %70
  ret i32* %68
}

; Function Attrs: nounwind readonly
declare i32* @wcschr(i32*, i32 signext) local_unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_Z8wcsncpyzPwPKwm(i32*, i32*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z7SetNamePwPKwm(i32*, i32*, i64) local_unnamed_addr #4 {
  %4 = tail call i64 @wcslen(i32* %0) #13
  %5 = shl i64 %4, 32
  %6 = ashr exact i64 %5, 32
  br label %7

7:                                                ; preds = %11, %3
  %8 = phi i64 [ %9, %11 ], [ %6, %3 ]
  %9 = add nsw i64 %8, -1
  %10 = icmp sgt i64 %8, 0
  br i1 %10, label %11, label %19

11:                                               ; preds = %7
  %12 = getelementptr inbounds i32, i32* %0, i64 %9
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 47
  br i1 %14, label %15, label %7

15:                                               ; preds = %11
  %16 = shl i64 %8, 32
  %17 = ashr exact i64 %16, 32
  %18 = getelementptr inbounds i32, i32* %0, i64 %17
  br label %19

19:                                               ; preds = %7, %15
  %20 = phi i32* [ %18, %15 ], [ %0, %7 ]
  %21 = ptrtoint i32* %20 to i64
  %22 = ptrtoint i32* %0 to i64
  %23 = sub i64 %21, %22
  %24 = ashr exact i64 %23, 2
  %25 = sub i64 %2, %24
  tail call void @_Z8wcsncpyzPwPKwm(i32* %20, i32* %1, i64 %25) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z6SetExtPwPKwm(i32*, i32*, i64) local_unnamed_addr #4 {
  %4 = icmp eq i32* %0, null
  br i1 %4, label %32, label %5

5:                                                ; preds = %3
  %6 = load i32, i32* %0, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %32, label %8

8:                                                ; preds = %5
  %9 = tail call i64 @wcslen(i32* nonnull %0) #13
  %10 = shl i64 %9, 32
  %11 = ashr exact i64 %10, 32
  br label %12

12:                                               ; preds = %16, %8
  %13 = phi i64 [ %14, %16 ], [ %11, %8 ]
  %14 = add nsw i64 %13, -1
  %15 = icmp sgt i64 %13, 0
  br i1 %15, label %16, label %24

16:                                               ; preds = %12
  %17 = getelementptr inbounds i32, i32* %0, i64 %14
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 47
  br i1 %19, label %20, label %12

20:                                               ; preds = %16
  %21 = shl i64 %13, 32
  %22 = ashr exact i64 %21, 32
  %23 = getelementptr inbounds i32, i32* %0, i64 %22
  br label %24

24:                                               ; preds = %12, %20
  %25 = phi i32* [ %23, %20 ], [ %0, %12 ]
  %26 = tail call i32* @wcsrchr(i32* %25, i32 signext 46) #13
  %27 = icmp eq i32* %26, null
  br i1 %27, label %29, label %28

28:                                               ; preds = %24
  store i32 0, i32* %26, align 4
  br label %29

29:                                               ; preds = %24, %28
  %30 = icmp eq i32* %1, null
  br i1 %30, label %32, label %31

31:                                               ; preds = %29
  tail call void @_Z8wcsncatzPwPKwm(i32* nonnull %0, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str, i64 0, i64 0), i64 %2) #14
  tail call void @_Z8wcsncatzPwPKwm(i32* nonnull %0, i32* nonnull %1, i64 %2) #14
  br label %32

32:                                               ; preds = %31, %29, %3, %5
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32* @_Z6GetExtPKw(i32* readonly) local_unnamed_addr #0 {
  %2 = icmp eq i32* %0, null
  br i1 %2, label %22, label %3

3:                                                ; preds = %1
  %4 = tail call i64 @wcslen(i32* nonnull %0) #13
  %5 = shl i64 %4, 32
  %6 = ashr exact i64 %5, 32
  br label %7

7:                                                ; preds = %11, %3
  %8 = phi i64 [ %9, %11 ], [ %6, %3 ]
  %9 = add nsw i64 %8, -1
  %10 = icmp sgt i64 %8, 0
  br i1 %10, label %11, label %19

11:                                               ; preds = %7
  %12 = getelementptr inbounds i32, i32* %0, i64 %9
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 47
  br i1 %14, label %15, label %7

15:                                               ; preds = %11
  %16 = shl i64 %8, 32
  %17 = ashr exact i64 %16, 32
  %18 = getelementptr inbounds i32, i32* %0, i64 %17
  br label %19

19:                                               ; preds = %7, %15
  %20 = phi i32* [ %18, %15 ], [ %0, %7 ]
  %21 = tail call i32* @wcsrchr(i32* %20, i32 signext 46) #13
  br label %22

22:                                               ; preds = %1, %19
  %23 = phi i32* [ %21, %19 ], [ null, %1 ]
  ret i32* %23
}

declare void @_Z8wcsncatzPwPKwm(i32*, i32*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z9SetSFXExtPwm(i32*, i64) local_unnamed_addr #4 {
  %3 = icmp eq i32* %0, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = load i32, i32* %0, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %29, label %7

7:                                                ; preds = %4
  %8 = tail call i64 @wcslen(i32* nonnull %0) #13
  %9 = shl i64 %8, 32
  %10 = ashr exact i64 %9, 32
  br label %11

11:                                               ; preds = %15, %7
  %12 = phi i64 [ %13, %15 ], [ %10, %7 ]
  %13 = add nsw i64 %12, -1
  %14 = icmp sgt i64 %12, 0
  br i1 %14, label %15, label %23

15:                                               ; preds = %11
  %16 = getelementptr inbounds i32, i32* %0, i64 %13
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 47
  br i1 %18, label %19, label %11

19:                                               ; preds = %15
  %20 = shl i64 %12, 32
  %21 = ashr exact i64 %20, 32
  %22 = getelementptr inbounds i32, i32* %0, i64 %21
  br label %23

23:                                               ; preds = %11, %19
  %24 = phi i32* [ %22, %19 ], [ %0, %11 ]
  %25 = tail call i32* @wcsrchr(i32* %24, i32 signext 46) #13
  %26 = icmp eq i32* %25, null
  br i1 %26, label %28, label %27

27:                                               ; preds = %23
  store i32 0, i32* %25, align 4
  br label %28

28:                                               ; preds = %23, %27
  tail call void @_Z8wcsncatzPwPKwm(i32* nonnull %0, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str, i64 0, i64 0), i64 %1) #14
  tail call void @_Z8wcsncatzPwPKwm(i32* nonnull %0, i32* nonnull getelementptr inbounds ([4 x i32], [4 x i32]* @.str.1, i64 0, i64 0), i64 %1) #14
  br label %29

29:                                               ; preds = %2, %4, %28
  ret void
}

; Function Attrs: nounwind readonly
declare i32* @wcsrchr(i32*, i32 signext) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z6CmpExtPKwS0_(i32*, i32*) local_unnamed_addr #4 {
  %3 = icmp eq i32* %0, null
  br i1 %3, label %28, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @wcslen(i32* nonnull %0) #13
  %6 = shl i64 %5, 32
  %7 = ashr exact i64 %6, 32
  br label %8

8:                                                ; preds = %12, %4
  %9 = phi i64 [ %10, %12 ], [ %7, %4 ]
  %10 = add nsw i64 %9, -1
  %11 = icmp sgt i64 %9, 0
  br i1 %11, label %12, label %20

12:                                               ; preds = %8
  %13 = getelementptr inbounds i32, i32* %0, i64 %10
  %14 = load i32, i32* %13, align 4
  %15 = icmp eq i32 %14, 47
  br i1 %15, label %16, label %8

16:                                               ; preds = %12
  %17 = shl i64 %9, 32
  %18 = ashr exact i64 %17, 32
  %19 = getelementptr inbounds i32, i32* %0, i64 %18
  br label %20

20:                                               ; preds = %8, %16
  %21 = phi i32* [ %19, %16 ], [ %0, %8 ]
  %22 = tail call i32* @wcsrchr(i32* %21, i32 signext 46) #13
  %23 = icmp eq i32* %22, null
  br i1 %23, label %28, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds i32, i32* %22, i64 1
  %26 = tail call i32 @_Z8wcsicompPKwS0_(i32* %25, i32* %1) #14
  %27 = icmp eq i32 %26, 0
  br label %28

28:                                               ; preds = %2, %20, %24
  %29 = phi i1 [ false, %20 ], [ %27, %24 ], [ false, %2 ]
  ret i1 %29
}

declare i32 @_Z8wcsicompPKwS0_(i32*, i32*) local_unnamed_addr #6

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_Z10IsWildcardPKw(i32* readonly) local_unnamed_addr #0 {
  %2 = icmp eq i32* %0, null
  br i1 %2, label %6, label %3

3:                                                ; preds = %1
  %4 = tail call i32* @wcspbrk(i32* nonnull %0, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.2, i64 0, i64 0)) #13
  %5 = icmp ne i32* %4, null
  br label %6

6:                                                ; preds = %1, %3
  %7 = phi i1 [ %5, %3 ], [ false, %1 ]
  ret i1 %7
}

; Function Attrs: nounwind readonly
declare i32* @wcspbrk(i32*, i32*) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z13IsDriveLetterPKw(i32* nocapture readonly) local_unnamed_addr #4 {
  %2 = load i32, i32* %0, align 4
  %3 = tail call signext i32 @_Z9etoupperww(i32 signext %2) #14
  ret i1 false
}

declare signext i32 @_Z9etoupperww(i32 signext) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z11GetPathDiskPKw(i32* nocapture readonly) local_unnamed_addr #4 {
  %2 = load i32, i32* %0, align 4
  %3 = tail call signext i32 @_Z9etoupperww(i32 signext %2) #14
  ret i32 -1
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_Z11AddEndSlashPwm(i32* nocapture, i64) local_unnamed_addr #7 {
  %3 = tail call i64 @wcslen(i32* %0) #13
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2
  %6 = add i64 %3, -1
  %7 = getelementptr inbounds i32, i32* %0, i64 %6
  %8 = load i32, i32* %7, align 4
  %9 = icmp eq i32 %8, 47
  br i1 %9, label %16, label %10

10:                                               ; preds = %5
  %11 = add i64 %3, 1
  %12 = icmp ult i64 %11, %1
  br i1 %12, label %13, label %16

13:                                               ; preds = %10
  %14 = getelementptr inbounds i32, i32* %0, i64 %3
  store i32 47, i32* %14, align 4
  %15 = getelementptr inbounds i32, i32* %0, i64 %11
  store i32 0, i32* %15, align 4
  br label %16

16:                                               ; preds = %5, %2, %13, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z8MakeNamePKwS0_Pwm(i32*, i32*, i32*, i64) local_unnamed_addr #4 {
  %5 = alloca [2048 x i32], align 16
  %6 = bitcast [2048 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %6) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %6, i8 -86, i64 8192, i1 false)
  %7 = getelementptr inbounds [2048 x i32], [2048 x i32]* %5, i64 0, i64 0
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %7, i32* %0, i64 2048) #14
  %8 = call i64 @wcslen(i32* nonnull %7) #13
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %21, label %10

10:                                               ; preds = %4
  %11 = add i64 %8, -1
  %12 = getelementptr inbounds [2048 x i32], [2048 x i32]* %5, i64 0, i64 %11
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 47
  br i1 %14, label %21, label %15

15:                                               ; preds = %10
  %16 = add i64 %8, 1
  %17 = icmp ult i64 %16, 2048
  br i1 %17, label %18, label %21

18:                                               ; preds = %15
  %19 = getelementptr inbounds [2048 x i32], [2048 x i32]* %5, i64 0, i64 %8
  store i32 47, i32* %19, align 4
  %20 = getelementptr inbounds [2048 x i32], [2048 x i32]* %5, i64 0, i64 %16
  store i32 0, i32* %20, align 4
  br label %21

21:                                               ; preds = %4, %10, %15, %18
  call void @_Z8wcsncatzPwPKwm(i32* nonnull %7, i32* %1, i64 2048) #14
  call void @_Z8wcsncpyzPwPKwm(i32* %2, i32* nonnull %7, i64 %3) #14
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %6) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z11GetFilePathPKwPwm(i32*, i32*, i64) local_unnamed_addr #4 {
  %4 = icmp eq i64 %2, 0
  br i1 %4, label %50, label %5

5:                                                ; preds = %3
  %6 = add i64 %2, -1
  %7 = tail call i64 @wcslen(i32* %0) #13
  %8 = shl i64 %7, 32
  %9 = ashr exact i64 %8, 32
  br label %10

10:                                               ; preds = %14, %5
  %11 = phi i64 [ %12, %14 ], [ %9, %5 ]
  %12 = add nsw i64 %11, -1
  %13 = icmp sgt i64 %11, 0
  br i1 %13, label %14, label %22

14:                                               ; preds = %10
  %15 = getelementptr inbounds i32, i32* %0, i64 %12
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 47
  br i1 %17, label %18, label %10

18:                                               ; preds = %14
  %19 = shl i64 %11, 32
  %20 = ashr exact i64 %19, 32
  %21 = getelementptr inbounds i32, i32* %0, i64 %20
  br label %22

22:                                               ; preds = %10, %18
  %23 = phi i32* [ %21, %18 ], [ %0, %10 ]
  %24 = ptrtoint i32* %23 to i64
  %25 = ptrtoint i32* %0 to i64
  %26 = sub i64 %24, %25
  %27 = ashr exact i64 %26, 2
  %28 = icmp ult i64 %6, %27
  br i1 %28, label %46, label %29

29:                                               ; preds = %22, %33
  %30 = phi i64 [ %31, %33 ], [ %9, %22 ]
  %31 = add nsw i64 %30, -1
  %32 = icmp sgt i64 %30, 0
  br i1 %32, label %33, label %42

33:                                               ; preds = %29
  %34 = getelementptr inbounds i32, i32* %0, i64 %31
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 47
  br i1 %36, label %37, label %29

37:                                               ; preds = %33
  %38 = shl i64 %30, 32
  %39 = ashr exact i64 %38, 32
  %40 = getelementptr inbounds i32, i32* %0, i64 %39
  %41 = ptrtoint i32* %40 to i64
  br label %42

42:                                               ; preds = %29, %37
  %43 = phi i64 [ %41, %37 ], [ %25, %29 ]
  %44 = sub i64 %43, %25
  %45 = ashr exact i64 %44, 2
  br label %46

46:                                               ; preds = %22, %42
  %47 = phi i64 [ %45, %42 ], [ %6, %22 ]
  %48 = tail call i32* @wcsncpy(i32* %1, i32* %0, i64 %47) #14
  %49 = getelementptr inbounds i32, i32* %1, i64 %47
  store i32 0, i32* %49, align 4
  br label %50

50:                                               ; preds = %3, %46
  ret void
}

; Function Attrs: nounwind
declare i32* @wcsncpy(i32*, i32*, i64) local_unnamed_addr #8

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_Z18RemoveNameFromPathPw(i32*) local_unnamed_addr #7 {
  %2 = tail call i64 @wcslen(i32* %0) #13
  %3 = shl i64 %2, 32
  %4 = ashr exact i64 %3, 32
  br label %5

5:                                                ; preds = %9, %1
  %6 = phi i64 [ %7, %9 ], [ %4, %1 ]
  %7 = add nsw i64 %6, -1
  %8 = icmp sgt i64 %6, 0
  br i1 %8, label %9, label %20

9:                                                ; preds = %5
  %10 = getelementptr inbounds i32, i32* %0, i64 %7
  %11 = load i32, i32* %10, align 4
  %12 = icmp eq i32 %11, 47
  br i1 %12, label %13, label %5

13:                                               ; preds = %9
  %14 = shl i64 %6, 32
  %15 = ashr exact i64 %14, 32
  %16 = getelementptr inbounds i32, i32* %0, i64 %15
  %17 = icmp slt i64 %14, 8589934592
  %18 = getelementptr inbounds i32, i32* %16, i64 -1
  %19 = select i1 %17, i32* %16, i32* %18
  br label %20

20:                                               ; preds = %5, %13
  %21 = phi i32* [ %19, %13 ], [ %0, %5 ]
  store i32 0, i32* %21, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z15EnumConfigPathsjPwmb(i32, i32*, i64, i1 zeroext) local_unnamed_addr #4 {
  %5 = icmp eq i32 %0, 0
  br i1 %5, label %6, label %12

6:                                                ; preds = %4
  %7 = tail call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0)) #14
  %8 = icmp eq i8* %7, null
  br i1 %8, label %11, label %9

9:                                                ; preds = %6
  %10 = tail call zeroext i1 @_Z10CharToWidePKcPwm(i8* nonnull %7, i32* %1, i64 %2) #14
  br label %19

11:                                               ; preds = %6
  tail call void @_Z8wcsncpyzPwPKwm(i32* %1, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.3, i64 0, i64 0), i64 %2) #14
  br label %19

12:                                               ; preds = %4
  %13 = add i32 %0, -1
  %14 = icmp ugt i32 %13, 4
  br i1 %14, label %19, label %15

15:                                               ; preds = %12
  %16 = zext i32 %13 to i64
  %17 = getelementptr inbounds [5 x i32*], [5 x i32*]* @_ZZ15EnumConfigPathsjPwmbE8ConfPath, i64 0, i64 %16
  %18 = load i32*, i32** %17, align 8
  tail call void @_Z8wcsncpyzPwPKwm(i32* %1, i32* %18, i64 %2) #14
  br label %19

19:                                               ; preds = %12, %9, %11, %15
  %20 = phi i1 [ true, %15 ], [ true, %11 ], [ true, %9 ], [ false, %12 ]
  ret i1 %20
}

; Function Attrs: nofree nounwind readonly
declare i8* @getenv(i8* nocapture) local_unnamed_addr #9

declare zeroext i1 @_Z10CharToWidePKcPwm(i8*, i32*, i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z13GetConfigNamePKwPwmbb(i32*, i32*, i64, i1 zeroext, i1 zeroext) local_unnamed_addr #4 {
  store i32 0, i32* %1, align 4
  br label %6

6:                                                ; preds = %37, %5
  %7 = phi i32 [ 0, %5 ], [ %39, %37 ]
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %6
  %10 = tail call i8* @getenv(i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.8, i64 0, i64 0)) #14
  %11 = icmp eq i8* %10, null
  br i1 %11, label %14, label %12

12:                                               ; preds = %9
  %13 = tail call zeroext i1 @_Z10CharToWidePKcPwm(i8* nonnull %10, i32* %1, i64 %2) #14
  br label %22

14:                                               ; preds = %9
  tail call void @_Z8wcsncpyzPwPKwm(i32* %1, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.3, i64 0, i64 0), i64 %2) #14
  br label %22

15:                                               ; preds = %6
  %16 = add nsw i32 %7, -1
  %17 = icmp ugt i32 %16, 4
  br i1 %17, label %40, label %18

18:                                               ; preds = %15
  %19 = zext i32 %16 to i64
  %20 = getelementptr inbounds [5 x i32*], [5 x i32*]* @_ZZ15EnumConfigPathsjPwmbE8ConfPath, i64 0, i64 %19
  %21 = load i32*, i32** %20, align 8
  tail call void @_Z8wcsncpyzPwPKwm(i32* %1, i32* %21, i64 %2) #14
  br label %22

22:                                               ; preds = %18, %14, %12
  %23 = tail call i64 @wcslen(i32* %1) #13
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %36, label %25

25:                                               ; preds = %22
  %26 = add i64 %23, -1
  %27 = getelementptr inbounds i32, i32* %1, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 47
  br i1 %29, label %36, label %30

30:                                               ; preds = %25
  %31 = add i64 %23, 1
  %32 = icmp ult i64 %31, %2
  br i1 %32, label %33, label %36

33:                                               ; preds = %30
  %34 = getelementptr inbounds i32, i32* %1, i64 %23
  store i32 47, i32* %34, align 4
  %35 = getelementptr inbounds i32, i32* %1, i64 %31
  store i32 0, i32* %35, align 4
  br label %36

36:                                               ; preds = %22, %25, %30, %33
  tail call void @_Z8wcsncatzPwPKwm(i32* %1, i32* %0, i64 %2) #14
  br i1 %3, label %37, label %40

37:                                               ; preds = %36
  %38 = tail call zeroext i1 @_Z13WildFileExistPKw(i32* %1) #14
  %39 = add nuw nsw i32 %7, 1
  br i1 %38, label %40, label %6

40:                                               ; preds = %15, %36, %37
  ret void
}

declare zeroext i1 @_Z13WildFileExistPKw(i32*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32* @_Z13GetVolNumPartPKw(i32* readonly) local_unnamed_addr #4 {
  %2 = load i32, i32* %0, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %55, label %4

4:                                                ; preds = %1
  %5 = tail call i64 @wcslen(i32* %0) #13
  %6 = getelementptr inbounds i32, i32* %0, i64 %5
  br label %7

7:                                                ; preds = %7, %4
  %8 = phi i32* [ %6, %4 ], [ %9, %7 ]
  %9 = getelementptr inbounds i32, i32* %8, i64 -1
  %10 = load i32, i32* %9, align 4
  %11 = tail call zeroext i1 @_Z7IsDigiti(i32 %10) #14
  %12 = xor i1 %11, true
  %13 = icmp ugt i32* %9, %0
  %14 = and i1 %13, %12
  br i1 %14, label %7, label %15

15:                                               ; preds = %7, %15
  %16 = phi i32* [ %21, %15 ], [ %9, %7 ]
  %17 = load i32, i32* %16, align 4
  %18 = tail call zeroext i1 @_Z7IsDigiti(i32 %17) #14
  %19 = icmp ugt i32* %16, %0
  %20 = and i1 %19, %18
  %21 = getelementptr inbounds i32, i32* %16, i64 -1
  br i1 %20, label %15, label %22

22:                                               ; preds = %15
  br i1 %19, label %23, label %55

23:                                               ; preds = %22, %52
  %24 = phi i32* [ %53, %52 ], [ %16, %22 ]
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 46
  br i1 %26, label %55, label %27

27:                                               ; preds = %23
  %28 = tail call zeroext i1 @_Z7IsDigiti(i32 %25) #14
  br i1 %28, label %29, label %52

29:                                               ; preds = %27
  %30 = tail call i64 @wcslen(i32* %0) #13
  %31 = shl i64 %30, 32
  %32 = ashr exact i64 %31, 32
  br label %33

33:                                               ; preds = %37, %29
  %34 = phi i64 [ %35, %37 ], [ %32, %29 ]
  %35 = add nsw i64 %34, -1
  %36 = icmp sgt i64 %34, 0
  br i1 %36, label %37, label %45

37:                                               ; preds = %33
  %38 = getelementptr inbounds i32, i32* %0, i64 %35
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 47
  br i1 %40, label %41, label %33

41:                                               ; preds = %37
  %42 = shl i64 %34, 32
  %43 = ashr exact i64 %42, 32
  %44 = getelementptr inbounds i32, i32* %0, i64 %43
  br label %45

45:                                               ; preds = %33, %41
  %46 = phi i32* [ %44, %41 ], [ %0, %33 ]
  %47 = tail call i32* @wcschr(i32* %46, i32 signext 46) #13
  %48 = icmp ne i32* %47, null
  %49 = icmp ult i32* %47, %24
  %50 = and i1 %48, %49
  %51 = select i1 %50, i32* %24, i32* %9
  br label %55

52:                                               ; preds = %27
  %53 = getelementptr inbounds i32, i32* %24, i64 -1
  %54 = icmp ugt i32* %53, %0
  br i1 %54, label %23, label %55

55:                                               ; preds = %23, %52, %22, %45, %1
  %56 = phi i32* [ %0, %1 ], [ %51, %45 ], [ %9, %22 ], [ %9, %52 ], [ %9, %23 ]
  ret i32* %56
}

declare zeroext i1 @_Z7IsDigiti(i32) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z14NextVolumeNamePwjb(i32*, i32, i1 zeroext) local_unnamed_addr #4 {
  %4 = icmp eq i32* %0, null
  br i1 %4, label %5, label %7

5:                                                ; preds = %3
  %6 = zext i32 %1 to i64
  tail call void @_Z8wcsncatzPwPKwm(i32* null, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.9, i64 0, i64 0), i64 %6) #14
  br label %73

7:                                                ; preds = %3
  %8 = tail call i64 @wcslen(i32* nonnull %0) #13
  %9 = shl i64 %8, 32
  %10 = ashr exact i64 %9, 32
  br label %11

11:                                               ; preds = %15, %7
  %12 = phi i64 [ %13, %15 ], [ %10, %7 ]
  %13 = add nsw i64 %12, -1
  %14 = icmp sgt i64 %12, 0
  br i1 %14, label %15, label %23

15:                                               ; preds = %11
  %16 = getelementptr inbounds i32, i32* %0, i64 %13
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 47
  br i1 %18, label %19, label %11

19:                                               ; preds = %15
  %20 = shl i64 %12, 32
  %21 = ashr exact i64 %20, 32
  %22 = getelementptr inbounds i32, i32* %0, i64 %21
  br label %23

23:                                               ; preds = %11, %19
  %24 = phi i32* [ %22, %19 ], [ %0, %11 ]
  %25 = tail call i32* @wcsrchr(i32* %24, i32 signext 46) #13
  %26 = icmp eq i32* %25, null
  br i1 %26, label %27, label %44

27:                                               ; preds = %23
  %28 = zext i32 %1 to i64
  tail call void @_Z8wcsncatzPwPKwm(i32* nonnull %0, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.9, i64 0, i64 0), i64 %28) #14
  %29 = tail call i64 @wcslen(i32* nonnull %0) #13
  %30 = shl i64 %29, 32
  %31 = ashr exact i64 %30, 32
  br label %32

32:                                               ; preds = %36, %27
  %33 = phi i64 [ %34, %36 ], [ %31, %27 ]
  %34 = add nsw i64 %33, -1
  %35 = icmp sgt i64 %33, 0
  br i1 %35, label %36, label %61

36:                                               ; preds = %32
  %37 = getelementptr inbounds i32, i32* %0, i64 %34
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %38, 47
  br i1 %39, label %40, label %32

40:                                               ; preds = %36
  %41 = shl i64 %33, 32
  %42 = ashr exact i64 %41, 32
  %43 = getelementptr inbounds i32, i32* %0, i64 %42
  br label %61

44:                                               ; preds = %23
  %45 = getelementptr inbounds i32, i32* %25, i64 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %54, label %48

48:                                               ; preds = %44
  %49 = tail call i32 @_Z8wcsicompPKwS0_(i32* nonnull %25, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.10, i64 0, i64 0)) #14
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %54, label %51

51:                                               ; preds = %48
  %52 = tail call i32 @_Z8wcsicompPKwS0_(i32* nonnull %25, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.11, i64 0, i64 0)) #14
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %65

54:                                               ; preds = %51, %48, %44
  %55 = zext i32 %1 to i64
  %56 = ptrtoint i32* %25 to i64
  %57 = ptrtoint i32* %0 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 2
  %60 = sub nsw i64 %55, %59
  tail call void @_Z8wcsncpyzPwPKwm(i32* nonnull %25, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.9, i64 0, i64 0), i64 %60) #14
  br label %65

61:                                               ; preds = %32, %40
  %62 = phi i32* [ %43, %40 ], [ %0, %32 ]
  %63 = tail call i32* @wcsrchr(i32* %62, i32 signext 46) #13
  %64 = icmp eq i32* %63, null
  br i1 %64, label %73, label %65

65:                                               ; preds = %51, %54, %61
  %66 = phi i32* [ %63, %61 ], [ %25, %54 ], [ %25, %51 ]
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 46
  br i1 %68, label %69, label %73

69:                                               ; preds = %65
  %70 = getelementptr inbounds i32, i32* %66, i64 1
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %5, %65, %69, %61
  store i32 0, i32* %0, align 4
  br label %173

74:                                               ; preds = %69
  br i1 %2, label %139, label %75

75:                                               ; preds = %74
  %76 = tail call i32* @_Z13GetVolNumPartPKw(i32* nonnull %0)
  br label %77

77:                                               ; preds = %85, %75
  %78 = phi i32* [ %76, %75 ], [ %83, %85 ]
  %79 = load i32, i32* %78, align 4
  %80 = add nsw i32 %79, 1
  store i32 %80, i32* %78, align 4
  %81 = icmp eq i32 %80, 58
  br i1 %81, label %82, label %173

82:                                               ; preds = %77
  store i32 48, i32* %78, align 4
  %83 = getelementptr inbounds i32, i32* %78, i64 -1
  %84 = icmp ult i32* %83, %0
  br i1 %84, label %88, label %85

85:                                               ; preds = %82
  %86 = load i32, i32* %83, align 4
  %87 = tail call zeroext i1 @_Z7IsDigiti(i32 %86) #14
  br i1 %87, label %77, label %88

88:                                               ; preds = %85, %82
  %89 = tail call i64 @wcslen(i32* nonnull %0) #13
  %90 = getelementptr inbounds i32, i32* %0, i64 %89
  %91 = icmp eq i32* %90, %83
  br i1 %91, label %112, label %92

92:                                               ; preds = %88
  %93 = ptrtoint i32* %78 to i64
  %94 = getelementptr i32, i32* %0, i64 %89
  %95 = ptrtoint i32* %94 to i64
  %96 = sub i64 %95, %93
  %97 = lshr i64 %96, 2
  %98 = add nuw nsw i64 %97, 1
  %99 = and i64 %98, 7
  %100 = icmp eq i64 %99, 0
  br i1 %100, label %109, label %101

101:                                              ; preds = %92, %101
  %102 = phi i32* [ %106, %101 ], [ %90, %92 ]
  %103 = phi i64 [ %107, %101 ], [ %99, %92 ]
  %104 = load i32, i32* %102, align 4
  %105 = getelementptr inbounds i32, i32* %102, i64 1
  store i32 %104, i32* %105, align 4
  %106 = getelementptr inbounds i32, i32* %102, i64 -1
  %107 = add i64 %103, -1
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %101, !llvm.loop !2

109:                                              ; preds = %101, %92
  %110 = phi i32* [ %90, %92 ], [ %106, %101 ]
  %111 = icmp ult i64 %96, 28
  br i1 %111, label %112, label %113

112:                                              ; preds = %109, %113, %88
  store i32 49, i32* %78, align 4
  br label %173

113:                                              ; preds = %109, %113
  %114 = phi i32* [ %137, %113 ], [ %110, %109 ]
  %115 = load i32, i32* %114, align 4
  %116 = getelementptr inbounds i32, i32* %114, i64 1
  store i32 %115, i32* %116, align 4
  %117 = getelementptr inbounds i32, i32* %114, i64 -1
  %118 = load i32, i32* %117, align 4
  store i32 %118, i32* %114, align 4
  %119 = getelementptr inbounds i32, i32* %114, i64 -2
  %120 = load i32, i32* %119, align 4
  %121 = getelementptr inbounds i32, i32* %114, i64 -1
  store i32 %120, i32* %121, align 4
  %122 = getelementptr inbounds i32, i32* %114, i64 -3
  %123 = load i32, i32* %122, align 4
  %124 = getelementptr inbounds i32, i32* %114, i64 -2
  store i32 %123, i32* %124, align 4
  %125 = getelementptr inbounds i32, i32* %114, i64 -4
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds i32, i32* %114, i64 -3
  store i32 %126, i32* %127, align 4
  %128 = getelementptr inbounds i32, i32* %114, i64 -5
  %129 = load i32, i32* %128, align 4
  %130 = getelementptr inbounds i32, i32* %114, i64 -4
  store i32 %129, i32* %130, align 4
  %131 = getelementptr inbounds i32, i32* %114, i64 -6
  %132 = load i32, i32* %131, align 4
  %133 = getelementptr inbounds i32, i32* %114, i64 -5
  store i32 %132, i32* %133, align 4
  %134 = getelementptr inbounds i32, i32* %114, i64 -7
  %135 = load i32, i32* %134, align 4
  %136 = getelementptr inbounds i32, i32* %114, i64 -6
  store i32 %135, i32* %136, align 4
  %137 = getelementptr inbounds i32, i32* %114, i64 -8
  %138 = icmp eq i32* %134, %78
  br i1 %138, label %112, label %113

139:                                              ; preds = %74
  %140 = getelementptr inbounds i32, i32* %66, i64 2
  %141 = load i32, i32* %140, align 4
  %142 = tail call zeroext i1 @_Z7IsDigiti(i32 %141) #14
  br i1 %142, label %143, label %147

143:                                              ; preds = %139
  %144 = getelementptr inbounds i32, i32* %66, i64 3
  %145 = load i32, i32* %144, align 4
  %146 = tail call zeroext i1 @_Z7IsDigiti(i32 %145) #14
  br i1 %146, label %155, label %147

147:                                              ; preds = %143, %139
  %148 = zext i32 %1 to i64
  %149 = ptrtoint i32* %66 to i64
  %150 = ptrtoint i32* %0 to i64
  %151 = sub i64 %149, %150
  %152 = ashr exact i64 %151, 2
  %153 = add nsw i64 %148, -2
  %154 = sub nsw i64 %153, %152
  tail call void @_Z8wcsncpyzPwPKwm(i32* %140, i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.12, i64 0, i64 0), i64 %154) #14
  br label %173

155:                                              ; preds = %143
  %156 = tail call i64 @wcslen(i32* nonnull %66) #13
  %157 = add i64 %156, -1
  %158 = getelementptr inbounds i32, i32* %66, i64 %157
  %159 = load i32, i32* %158, align 4
  %160 = add nsw i32 %159, 1
  store i32 %160, i32* %158, align 4
  %161 = icmp eq i32 %160, 58
  br i1 %161, label %162, label %173

162:                                              ; preds = %155, %170
  %163 = phi i32* [ %166, %170 ], [ %158, %155 ]
  %164 = icmp ugt i32* %163, %0
  br i1 %164, label %165, label %169

165:                                              ; preds = %162
  %166 = getelementptr inbounds i32, i32* %163, i64 -1
  %167 = load i32, i32* %166, align 4
  %168 = icmp eq i32 %167, 46
  br i1 %168, label %169, label %170

169:                                              ; preds = %162, %165
  store i32 97, i32* %163, align 4
  br label %173

170:                                              ; preds = %165
  store i32 48, i32* %163, align 4
  %171 = add nsw i32 %167, 1
  store i32 %171, i32* %166, align 4
  %172 = icmp eq i32 %171, 58
  br i1 %172, label %162, label %173

173:                                              ; preds = %77, %170, %155, %112, %169, %147, %73
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_Z12IsNameUsablePKw(i32* readonly) local_unnamed_addr #0 {
  %2 = load i32, i32* %0, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %7, label %4

4:                                                ; preds = %1
  %5 = tail call i32* @wcspbrk(i32* %0, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @.str.13, i64 0, i64 0)) #13
  %6 = icmp eq i32* %5, null
  br label %7

7:                                                ; preds = %1, %4
  %8 = phi i1 [ false, %1 ], [ %6, %4 ]
  ret i1 %8
}

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_Z14MakeNameUsablePcb(i8* nocapture, i1 zeroext) local_unnamed_addr #7 {
  %3 = load i8, i8* %0, align 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %2
  %6 = select i1 %1, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.15, i64 0, i64 0)
  br label %8

7:                                                ; preds = %18, %2
  ret void

8:                                                ; preds = %5, %18
  %9 = phi i8 [ %3, %5 ], [ %20, %18 ]
  %10 = phi i8* [ %0, %5 ], [ %19, %18 ]
  %11 = sext i8 %9 to i32
  %12 = tail call i8* @strchr(i8* %6, i32 %11) #13
  %13 = icmp ne i8* %12, null
  %14 = icmp ult i8 %9, 32
  %15 = and i1 %14, %1
  %16 = or i1 %15, %13
  br i1 %16, label %17, label %18

17:                                               ; preds = %8
  store i8 95, i8* %10, align 1
  br label %18

18:                                               ; preds = %8, %17
  %19 = getelementptr inbounds i8, i8* %10, i64 1
  %20 = load i8, i8* %19, align 1
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %7, label %8
}

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #9

; Function Attrs: nofree nounwind ssp uwtable
define hidden void @_Z14MakeNameUsablePwb(i32* nocapture, i1 zeroext) local_unnamed_addr #7 {
  %3 = load i32, i32* %0, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %7, label %5

5:                                                ; preds = %2
  %6 = select i1 %1, i32* getelementptr inbounds ([7 x i32], [7 x i32]* @.str.13, i64 0, i64 0), i32* getelementptr inbounds ([3 x i32], [3 x i32]* @.str.16, i64 0, i64 0)
  br label %8

7:                                                ; preds = %17, %2
  ret void

8:                                                ; preds = %5, %17
  %9 = phi i32 [ %3, %5 ], [ %19, %17 ]
  %10 = phi i32* [ %0, %5 ], [ %18, %17 ]
  %11 = tail call i32* @wcschr(i32* %6, i32 signext %9) #13
  %12 = icmp ne i32* %11, null
  %13 = icmp ult i32 %9, 32
  %14 = and i1 %13, %1
  %15 = or i1 %14, %12
  br i1 %15, label %16, label %17

16:                                               ; preds = %8
  store i32 95, i32* %10, align 4
  br label %17

17:                                               ; preds = %8, %16
  %18 = getelementptr inbounds i32, i32* %10, i64 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %7, label %8
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_Z14UnixSlashToDosPKcPcm(i8* nocapture readonly, i8* nocapture, i64) local_unnamed_addr #10 {
  %4 = add i64 %2, -1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %3, %11
  %7 = phi i64 [ %14, %11 ], [ 0, %3 ]
  %8 = getelementptr inbounds i8, i8* %0, i64 %7
  %9 = load i8, i8* %8, align 1
  switch i8 %9, label %10 [
    i8 0, label %16
    i8 47, label %11
  ]

10:                                               ; preds = %6
  br label %11

11:                                               ; preds = %6, %10
  %12 = phi i8 [ %9, %10 ], [ 92, %6 ]
  %13 = getelementptr inbounds i8, i8* %1, i64 %7
  store i8 %12, i8* %13, align 1
  %14 = add nuw i64 %7, 1
  %15 = icmp eq i64 %14, %4
  br i1 %15, label %16, label %6

16:                                               ; preds = %6, %11, %3
  %17 = phi i64 [ 0, %3 ], [ %7, %6 ], [ %4, %11 ]
  %18 = getelementptr inbounds i8, i8* %1, i64 %17
  store i8 0, i8* %18, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_Z14DosSlashToUnixPKcPcm(i8* nocapture readonly, i8* nocapture, i64) local_unnamed_addr #10 {
  %4 = add i64 %2, -1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %3, %11
  %7 = phi i64 [ %14, %11 ], [ 0, %3 ]
  %8 = getelementptr inbounds i8, i8* %0, i64 %7
  %9 = load i8, i8* %8, align 1
  switch i8 %9, label %10 [
    i8 0, label %16
    i8 92, label %11
  ]

10:                                               ; preds = %6
  br label %11

11:                                               ; preds = %6, %10
  %12 = phi i8 [ %9, %10 ], [ 47, %6 ]
  %13 = getelementptr inbounds i8, i8* %1, i64 %7
  store i8 %12, i8* %13, align 1
  %14 = add nuw i64 %7, 1
  %15 = icmp eq i64 %14, %4
  br i1 %15, label %16, label %6

16:                                               ; preds = %6, %11, %3
  %17 = phi i64 [ 0, %3 ], [ %7, %6 ], [ %4, %11 ]
  %18 = getelementptr inbounds i8, i8* %1, i64 %17
  store i8 0, i8* %18, align 1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_Z14UnixSlashToDosPKwPwm(i32* nocapture readonly, i32* nocapture, i64) local_unnamed_addr #10 {
  %4 = add i64 %2, -1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %3, %11
  %7 = phi i64 [ %14, %11 ], [ 0, %3 ]
  %8 = getelementptr inbounds i32, i32* %0, i64 %7
  %9 = load i32, i32* %8, align 4
  switch i32 %9, label %10 [
    i32 0, label %16
    i32 47, label %11
  ]

10:                                               ; preds = %6
  br label %11

11:                                               ; preds = %6, %10
  %12 = phi i32 [ %9, %10 ], [ 92, %6 ]
  %13 = getelementptr inbounds i32, i32* %1, i64 %7
  store i32 %12, i32* %13, align 4
  %14 = add nuw i64 %7, 1
  %15 = icmp eq i64 %14, %4
  br i1 %15, label %16, label %6

16:                                               ; preds = %6, %11, %3
  %17 = phi i64 [ 0, %3 ], [ %7, %6 ], [ %4, %11 ]
  %18 = getelementptr inbounds i32, i32* %1, i64 %17
  store i32 0, i32* %18, align 4
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_Z14DosSlashToUnixPKwPwm(i32* nocapture readonly, i32* nocapture, i64) local_unnamed_addr #10 {
  %4 = add i64 %2, -1
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %16, label %6

6:                                                ; preds = %3, %11
  %7 = phi i64 [ %14, %11 ], [ 0, %3 ]
  %8 = getelementptr inbounds i32, i32* %0, i64 %7
  %9 = load i32, i32* %8, align 4
  switch i32 %9, label %10 [
    i32 0, label %16
    i32 92, label %11
  ]

10:                                               ; preds = %6
  br label %11

11:                                               ; preds = %6, %10
  %12 = phi i32 [ %9, %10 ], [ 47, %6 ]
  %13 = getelementptr inbounds i32, i32* %1, i64 %7
  store i32 %12, i32* %13, align 4
  %14 = add nuw i64 %7, 1
  %15 = icmp eq i64 %14, %4
  br i1 %15, label %16, label %6

16:                                               ; preds = %6, %11, %3
  %17 = phi i64 [ 0, %3 ], [ %7, %6 ], [ %4, %11 ]
  %18 = getelementptr inbounds i32, i32* %1, i64 %17
  store i32 0, i32* %18, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z17ConvertNameToFullPKwPwm(i32*, i32*, i64) local_unnamed_addr #4 {
  %4 = alloca [2048 x i8], align 16
  %5 = icmp eq i32* %0, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  %7 = load i32, i32* %0, align 4
  switch i32 %7, label %12 [
    i32 0, label %8
    i32 47, label %11
  ]

8:                                                ; preds = %6, %3
  %9 = icmp eq i64 %2, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %8
  store i32 0, i32* %1, align 4
  br label %34

11:                                               ; preds = %6
  store i32 0, i32* %1, align 4
  br label %33

12:                                               ; preds = %6
  %13 = getelementptr inbounds [2048 x i8], [2048 x i8]* %4, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2048, i8* nonnull %13) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %13, i8 -86, i64 2048, i1 false)
  %14 = call i8* @getcwd(i8* nonnull %13, i64 2048) #14
  %15 = icmp eq i8* %14, null
  br i1 %15, label %16, label %17

16:                                               ; preds = %12
  store i8 0, i8* %13, align 16
  br label %17

17:                                               ; preds = %16, %12
  %18 = call zeroext i1 @_Z10CharToWidePKcPwm(i8* nonnull %13, i32* %1, i64 %2) #14
  %19 = call i64 @wcslen(i32* %1) #13
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %32, label %21

21:                                               ; preds = %17
  %22 = add i64 %19, -1
  %23 = getelementptr inbounds i32, i32* %1, i64 %22
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 47
  br i1 %25, label %32, label %26

26:                                               ; preds = %21
  %27 = add i64 %19, 1
  %28 = icmp ult i64 %27, %2
  br i1 %28, label %29, label %32

29:                                               ; preds = %26
  %30 = getelementptr inbounds i32, i32* %1, i64 %19
  store i32 47, i32* %30, align 4
  %31 = getelementptr inbounds i32, i32* %1, i64 %27
  store i32 0, i32* %31, align 4
  br label %32

32:                                               ; preds = %17, %21, %26, %29
  call void @llvm.lifetime.end.p0i8(i64 2048, i8* nonnull %13) #14
  br label %33

33:                                               ; preds = %32, %11
  call void @_Z8wcsncatzPwPKwm(i32* %1, i32* nonnull %0, i64 %2) #14
  br label %34

34:                                               ; preds = %8, %10, %33
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_Z10IsFullPathPKw(i32* nocapture readonly) local_unnamed_addr #11 {
  %2 = load i32, i32* %0, align 4
  %3 = icmp eq i32 %2, 47
  ret i1 %3
}

; Function Attrs: nounwind
declare i8* @getcwd(i8*, i64) local_unnamed_addr #8

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_Z14IsFullRootPathPKw(i32* nocapture readonly) local_unnamed_addr #11 {
  %2 = load i32, i32* %0, align 4
  %3 = icmp eq i32 %2, 47
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z11GetPathRootPKwPwm(i32*, i32*, i64) local_unnamed_addr #4 {
  store i32 0, i32* %1, align 4
  %4 = load i32, i32* %0, align 4
  %5 = tail call signext i32 @_Z9etoupperww(i32 signext %4) #14
  %6 = load i32, i32* %0, align 4
  %7 = icmp eq i32 %6, 92
  br i1 %7, label %8, label %34

8:                                                ; preds = %3
  %9 = getelementptr inbounds i32, i32* %0, i64 1
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 92
  br i1 %11, label %12, label %34

12:                                               ; preds = %8
  %13 = getelementptr inbounds i32, i32* %0, i64 2
  %14 = tail call i32* @wcschr(i32* %13, i32 signext 92) #13
  %15 = icmp eq i32* %14, null
  br i1 %15, label %34, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds i32, i32* %14, i64 1
  %18 = tail call i32* @wcschr(i32* %17, i32 signext 92) #13
  %19 = icmp eq i32* %18, null
  br i1 %19, label %26, label %20

20:                                               ; preds = %16
  %21 = ptrtoint i32* %18 to i64
  %22 = ptrtoint i32* %0 to i64
  %23 = sub i64 %21, %22
  %24 = ashr exact i64 %23, 2
  %25 = add nsw i64 %24, 1
  br label %28

26:                                               ; preds = %16
  %27 = tail call i64 @wcslen(i32* %0) #13
  br label %28

28:                                               ; preds = %26, %20
  %29 = phi i64 [ %25, %20 ], [ %27, %26 ]
  %30 = icmp ult i64 %29, %2
  %31 = select i1 %30, i64 %29, i64 0
  %32 = tail call i32* @wcsncpy(i32* %1, i32* %0, i64 %31) #14
  %33 = getelementptr inbounds i32, i32* %1, i64 %31
  store i32 0, i32* %33, align 4
  br label %34

34:                                               ; preds = %28, %12, %3, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_Z20ParseVersionFileNamePwb(i32*, i1 zeroext) local_unnamed_addr #4 {
  %3 = tail call i32* @wcsrchr(i32* %0, i32 signext 59) #13
  %4 = icmp eq i32* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds i32, i32* %3, i64 1
  %7 = tail call i32 @_Z5atoiwPKw(i32* %6) #14
  br i1 %1, label %8, label %9

8:                                                ; preds = %5
  store i32 0, i32* %3, align 4
  br label %9

9:                                                ; preds = %2, %5, %8
  %10 = phi i32 [ %7, %8 ], [ %7, %5 ], [ 0, %2 ]
  ret i32 %10
}

declare i32 @_Z5atoiwPKw(i32*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32* @_Z18VolNameToFirstNamePKwPwmb(i32*, i32*, i64, i1 zeroext) local_unnamed_addr #4 {
  %5 = alloca [2048 x i32], align 16
  %6 = alloca %class.FindFile, align 8
  %7 = alloca %struct.FindData, align 8
  %8 = alloca %class.Archive, align 8
  %9 = icmp eq i32* %1, %0
  br i1 %9, label %11, label %10

10:                                               ; preds = %4
  tail call void @_Z8wcsncpyzPwPKwm(i32* %1, i32* %0, i64 %2) #14
  br label %11

11:                                               ; preds = %4, %10
  br i1 %3, label %12, label %29

12:                                               ; preds = %11
  %13 = tail call i32* @_Z13GetVolNumPartPKw(i32* %1)
  %14 = icmp ugt i32* %13, %1
  br i1 %14, label %15, label %75

15:                                               ; preds = %12, %25
  %16 = phi i32* [ %27, %25 ], [ %13, %12 ]
  %17 = phi i32 [ %26, %25 ], [ 49, %12 ]
  %18 = load i32, i32* %16, align 4
  %19 = tail call zeroext i1 @_Z7IsDigiti(i32 %18) #14
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  store i32 %17, i32* %16, align 4
  br label %25

21:                                               ; preds = %15
  %22 = icmp eq i32 %17, 48
  br i1 %22, label %23, label %25

23:                                               ; preds = %21
  %24 = getelementptr inbounds i32, i32* %16, i64 1
  br label %75

25:                                               ; preds = %20, %21
  %26 = phi i32 [ 48, %20 ], [ %17, %21 ]
  %27 = getelementptr inbounds i32, i32* %16, i64 -1
  %28 = icmp ugt i32* %27, %1
  br i1 %28, label %15, label %75

29:                                               ; preds = %11
  %30 = icmp eq i32* %1, null
  br i1 %30, label %75, label %31

31:                                               ; preds = %29
  %32 = load i32, i32* %1, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %56, label %34

34:                                               ; preds = %31
  %35 = tail call i64 @wcslen(i32* nonnull %1) #13
  %36 = shl i64 %35, 32
  %37 = ashr exact i64 %36, 32
  br label %38

38:                                               ; preds = %42, %34
  %39 = phi i64 [ %40, %42 ], [ %37, %34 ]
  %40 = add nsw i64 %39, -1
  %41 = icmp sgt i64 %39, 0
  br i1 %41, label %42, label %50

42:                                               ; preds = %38
  %43 = getelementptr inbounds i32, i32* %1, i64 %40
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 47
  br i1 %45, label %46, label %38

46:                                               ; preds = %42
  %47 = shl i64 %39, 32
  %48 = ashr exact i64 %47, 32
  %49 = getelementptr inbounds i32, i32* %1, i64 %48
  br label %50

50:                                               ; preds = %38, %46
  %51 = phi i32* [ %49, %46 ], [ %1, %38 ]
  %52 = tail call i32* @wcsrchr(i32* %51, i32 signext 46) #13
  %53 = icmp eq i32* %52, null
  br i1 %53, label %55, label %54

54:                                               ; preds = %50
  store i32 0, i32* %52, align 4
  br label %55

55:                                               ; preds = %50, %54
  tail call void @_Z8wcsncatzPwPKwm(i32* nonnull %1, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str, i64 0, i64 0), i64 %2) #14
  tail call void @_Z8wcsncatzPwPKwm(i32* nonnull %1, i32* nonnull getelementptr inbounds ([4 x i32], [4 x i32]* @.str.18, i64 0, i64 0), i64 %2) #14
  br label %56

56:                                               ; preds = %55, %31
  %57 = tail call i64 @wcslen(i32* nonnull %1) #13
  %58 = shl i64 %57, 32
  %59 = ashr exact i64 %58, 32
  br label %60

60:                                               ; preds = %64, %56
  %61 = phi i64 [ %62, %64 ], [ %59, %56 ]
  %62 = add nsw i64 %61, -1
  %63 = icmp sgt i64 %61, 0
  br i1 %63, label %64, label %72

64:                                               ; preds = %60
  %65 = getelementptr inbounds i32, i32* %1, i64 %62
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 47
  br i1 %67, label %68, label %60

68:                                               ; preds = %64
  %69 = shl i64 %61, 32
  %70 = ashr exact i64 %69, 32
  %71 = getelementptr inbounds i32, i32* %1, i64 %70
  br label %72

72:                                               ; preds = %60, %68
  %73 = phi i32* [ %71, %68 ], [ %1, %60 ]
  %74 = tail call i32* @wcsrchr(i32* %73, i32 signext 46) #13
  br label %75

75:                                               ; preds = %25, %12, %29, %72, %23
  %76 = phi i32* [ %24, %23 ], [ %74, %72 ], [ null, %29 ], [ %1, %12 ], [ %1, %25 ]
  %77 = tail call zeroext i1 @_Z9FileExistPKw(i32* %1) #14
  br i1 %77, label %127, label %78

78:                                               ; preds = %75
  %79 = bitcast [2048 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %79) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %79, i8 -86, i64 8192, i1 false)
  %80 = getelementptr inbounds [2048 x i32], [2048 x i32]* %5, i64 0, i64 0
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %80, i32* %1, i64 2048) #14
  %81 = load i32, i32* %80, align 16
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %105, label %83

83:                                               ; preds = %78
  %84 = call i64 @wcslen(i32* nonnull %80) #13
  %85 = shl i64 %84, 32
  %86 = ashr exact i64 %85, 32
  br label %87

87:                                               ; preds = %91, %83
  %88 = phi i64 [ %89, %91 ], [ %86, %83 ]
  %89 = add nsw i64 %88, -1
  %90 = icmp sgt i64 %88, 0
  br i1 %90, label %91, label %99

91:                                               ; preds = %87
  %92 = getelementptr inbounds [2048 x i32], [2048 x i32]* %5, i64 0, i64 %89
  %93 = load i32, i32* %92, align 4
  %94 = icmp eq i32 %93, 47
  br i1 %94, label %95, label %87

95:                                               ; preds = %91
  %96 = shl i64 %88, 32
  %97 = ashr exact i64 %96, 32
  %98 = getelementptr inbounds [2048 x i32], [2048 x i32]* %5, i64 0, i64 %97
  br label %99

99:                                               ; preds = %87, %95
  %100 = phi i32* [ %98, %95 ], [ %80, %87 ]
  %101 = call i32* @wcsrchr(i32* %100, i32 signext 46) #13
  %102 = icmp eq i32* %101, null
  br i1 %102, label %104, label %103

103:                                              ; preds = %99
  store i32 0, i32* %101, align 4
  br label %104

104:                                              ; preds = %103, %99
  call void @_Z8wcsncatzPwPKwm(i32* nonnull %80, i32* getelementptr inbounds ([2 x i32], [2 x i32]* @.str, i64 0, i64 0), i64 2048) #14
  call void @_Z8wcsncatzPwPKwm(i32* nonnull %80, i32* nonnull getelementptr inbounds ([2 x i32], [2 x i32]* @.str.19, i64 0, i64 0), i64 2048) #14
  br label %105

105:                                              ; preds = %78, %104
  %106 = bitcast %class.FindFile* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8208, i8* nonnull %106) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %106, i8 -86, i64 8208, i1 false)
  call void @_ZN8FindFileC1Ev(%class.FindFile* nonnull %6) #14
  call void @_ZN8FindFile7SetMaskEPKw(%class.FindFile* nonnull %6, i32* nonnull %80) #14
  %107 = bitcast %struct.FindData* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8240, i8* nonnull %107) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 -86, i64 8240, i1 false)
  %108 = getelementptr inbounds %struct.FindData, %struct.FindData* %7, i64 0, i32 6, i32 0
  %109 = bitcast i64* %108 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %109, i8 0, i64 24, i1 false) #14
  %110 = call zeroext i1 @_ZN8FindFile4NextEP8FindDatab(%class.FindFile* nonnull %6, %struct.FindData* nonnull %7, i1 zeroext false) #14
  br i1 %110, label %111, label %126

111:                                              ; preds = %105
  %112 = bitcast %class.Archive* %8 to i8*
  %113 = getelementptr inbounds %struct.FindData, %struct.FindData* %7, i64 0, i32 0, i64 0
  %114 = getelementptr inbounds %class.Archive, %class.Archive* %8, i64 0, i32 39
  br label %115

115:                                              ; preds = %111, %124
  call void @llvm.lifetime.start.p0i8(i64 65336, i8* nonnull %112) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %112, i8 -86, i64 65336, i1 false)
  call void @_ZN7ArchiveC1EP10RAROptions(%class.Archive* nonnull %8, %class.RAROptions* null) #14
  %116 = call zeroext i1 @_ZN7Archive4OpenEPKwj(%class.Archive* nonnull %8, i32* nonnull %113, i32 0) #14
  br i1 %116, label %117, label %124

117:                                              ; preds = %115
  %118 = call zeroext i1 @_ZN7Archive9IsArchiveEb(%class.Archive* nonnull %8, i1 zeroext true) #14
  %119 = xor i1 %118, true
  %120 = load i8, i8* %114, align 1
  %121 = icmp eq i8 %120, 0
  %122 = or i1 %121, %119
  br i1 %122, label %124, label %123

123:                                              ; preds = %117
  call void @_Z8wcsncpyzPwPKwm(i32* %1, i32* nonnull %113, i64 %2) #14
  call void @_ZN7ArchiveD1Ev(%class.Archive* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 65336, i8* nonnull %112) #14
  br label %126

124:                                              ; preds = %117, %115
  call void @_ZN7ArchiveD1Ev(%class.Archive* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 65336, i8* nonnull %112) #14
  %125 = call zeroext i1 @_ZN8FindFile4NextEP8FindDatab(%class.FindFile* nonnull %6, %struct.FindData* nonnull %7, i1 zeroext false) #14
  br i1 %125, label %115, label %126

126:                                              ; preds = %124, %105, %123
  call void @llvm.lifetime.end.p0i8(i64 8240, i8* nonnull %107) #14
  call void @_ZN8FindFileD1Ev(%class.FindFile* nonnull %6) #14
  call void @llvm.lifetime.end.p0i8(i64 8208, i8* nonnull %106) #14
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %79) #14
  br label %127

127:                                              ; preds = %126, %75
  ret i32* %76
}

declare zeroext i1 @_Z9FileExistPKw(i32*) local_unnamed_addr #6

declare void @_ZN8FindFileC1Ev(%class.FindFile*) unnamed_addr #6

declare void @_ZN8FindFile7SetMaskEPKw(%class.FindFile*, i32*) local_unnamed_addr #6

declare zeroext i1 @_ZN8FindFile4NextEP8FindDatab(%class.FindFile*, %struct.FindData*, i1 zeroext) local_unnamed_addr #6

declare void @_ZN7ArchiveC1EP10RAROptions(%class.Archive*, %class.RAROptions*) unnamed_addr #6

declare zeroext i1 @_ZN7Archive4OpenEPKwj(%class.Archive*, i32*, i32) unnamed_addr #6

declare zeroext i1 @_ZN7Archive9IsArchiveEb(%class.Archive*, i1 zeroext) local_unnamed_addr #6

; Function Attrs: nounwind
declare void @_ZN7ArchiveD1Ev(%class.Archive*) unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN8FindFileD1Ev(%class.FindFile*) unnamed_addr #8

; Function Attrs: nounwind ssp uwtable
define hidden void @_Z19GenerateArchiveNamePwmPKwb(i32*, i64, i32*, i1 zeroext) local_unnamed_addr #4 {
  %5 = alloca [2048 x i32], align 16
  %6 = alloca i8, align 1
  %7 = bitcast [2048 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %7) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 8192, i1 false)
  %8 = getelementptr inbounds [2048 x i32], [2048 x i32]* %5, i64 0, i64 0
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %8, i32* %0, i64 2048) #14
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #14
  store i8 0, i8* %6, align 1
  call fastcc void @_ZL10GenArcNamePwmPKwjRb(i32* nonnull %8, i32* %2, i32 1, i8* nonnull dereferenceable(1) %6)
  %9 = load i8, i8* %6, align 1, !range !4
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %25, label %11

11:                                               ; preds = %4, %21
  %12 = phi i32 [ %22, %21 ], [ 1, %4 ]
  %13 = call zeroext i1 @_Z9FileExistPKw(i32* nonnull %8) #14
  br i1 %13, label %21, label %14

14:                                               ; preds = %11
  %15 = xor i1 %3, true
  %16 = icmp ugt i32 %12, 1
  %17 = and i1 %16, %15
  br i1 %17, label %18, label %25

18:                                               ; preds = %14
  %19 = call i32* @_Z11NullToEmptyPKw(i32* %0) #14
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %8, i32* %19, i64 2048) #14
  %20 = add i32 %12, -1
  call fastcc void @_ZL10GenArcNamePwmPKwjRb(i32* nonnull %8, i32* %2, i32 %20, i8* nonnull dereferenceable(1) %6)
  br label %25

21:                                               ; preds = %11
  %22 = add i32 %12, 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #14
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %8, i32* %0, i64 2048) #14
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6) #14
  store i8 0, i8* %6, align 1
  call fastcc void @_ZL10GenArcNamePwmPKwjRb(i32* nonnull %8, i32* %2, i32 %22, i8* nonnull dereferenceable(1) %6)
  %23 = load i8, i8* %6, align 1, !range !4
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %11

25:                                               ; preds = %21, %4, %14, %18
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6) #14
  call void @_Z8wcsncpyzPwPKwm(i32* %0, i32* nonnull %8, i64 %1) #14
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %7) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZL10GenArcNamePwmPKwjRb(i32*, i32*, i32, i8* nocapture dereferenceable(1)) unnamed_addr #4 {
  %5 = alloca [128 x i32], align 16
  %6 = alloca %class.RarTime, align 8
  %7 = alloca %struct.RarLocalTime, align 4
  %8 = alloca [2048 x i32], align 16
  %9 = alloca [10 x [6 x i8]], align 16
  %10 = alloca [10 x i32], align 16
  %11 = alloca [128 x i32], align 16
  %12 = alloca [2048 x i32], align 16
  %13 = load i32, i32* %1, align 4
  %14 = icmp eq i32 %13, 43
  %15 = getelementptr inbounds i32, i32* %1, i64 1
  %16 = select i1 %14, i32* %15, i32* %1
  %17 = bitcast [128 x i32]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %17) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 -86, i64 512, i1 false)
  %18 = getelementptr inbounds [128 x i32], [128 x i32]* %5, i64 0, i64 0
  %19 = load i32, i32* %16, align 4
  %20 = icmp eq i32 %19, 0
  %21 = select i1 %20, i32* getelementptr inbounds ([15 x i32], [15 x i32]* @.str.20, i64 0, i64 0), i32* %16
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %18, i32* %21, i64 128) #14
  br label %22

22:                                               ; preds = %101, %4
  %23 = phi i8 [ 0, %4 ], [ %102, %101 ]
  %24 = phi i8 [ 0, %4 ], [ %103, %101 ]
  %25 = phi i32 [ 0, %4 ], [ %105, %101 ]
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds [128 x i32], [128 x i32]* %5, i64 0, i64 %26
  %28 = load i32, i32* %27, align 4
  switch i32 %28, label %61 [
    i32 0, label %29
    i32 123, label %58
    i32 125, label %58
  ]

29:                                               ; preds = %22
  %30 = bitcast %class.RarTime* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #14
  %31 = getelementptr inbounds %class.RarTime, %class.RarTime* %6, i64 0, i32 0
  store i64 0, i64* %31, align 8
  call void @_ZN7RarTime14SetCurrentTimeEv(%class.RarTime* nonnull %6) #14
  %32 = bitcast %struct.RarLocalTime* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 36, i8* nonnull %32) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %32, i8 -86, i64 36, i1 false)
  call void @_ZN7RarTime8GetLocalEP12RarLocalTime(%class.RarTime* nonnull %6, %struct.RarLocalTime* nonnull %7) #14
  %33 = bitcast [2048 x i32]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %33) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %33, i8 -86, i64 8192, i1 false)
  %34 = icmp eq i32* %0, null
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = getelementptr inbounds [2048 x i32], [2048 x i32]* %8, i64 0, i64 0
  store i32 0, i32* %36, align 16
  br label %106

37:                                               ; preds = %29
  %38 = call i64 @wcslen(i32* nonnull %0) #13
  %39 = shl i64 %38, 32
  %40 = ashr exact i64 %39, 32
  br label %41

41:                                               ; preds = %45, %37
  %42 = phi i64 [ %43, %45 ], [ %40, %37 ]
  %43 = add nsw i64 %42, -1
  %44 = icmp sgt i64 %42, 0
  br i1 %44, label %45, label %53

45:                                               ; preds = %41
  %46 = getelementptr inbounds i32, i32* %0, i64 %43
  %47 = load i32, i32* %46, align 4
  %48 = icmp eq i32 %47, 47
  br i1 %48, label %49, label %41

49:                                               ; preds = %45
  %50 = shl i64 %42, 32
  %51 = ashr exact i64 %50, 32
  %52 = getelementptr inbounds i32, i32* %0, i64 %51
  br label %53

53:                                               ; preds = %41, %49
  %54 = phi i32* [ %52, %49 ], [ %0, %41 ]
  %55 = call i32* @wcsrchr(i32* %54, i32 signext 46) #13
  %56 = getelementptr inbounds [2048 x i32], [2048 x i32]* %8, i64 0, i64 0
  store i32 0, i32* %56, align 16
  %57 = icmp eq i32* %55, null
  br i1 %57, label %106, label %128

58:                                               ; preds = %22, %22
  %59 = icmp eq i32 %28, 123
  %60 = zext i1 %59 to i8
  br label %101

61:                                               ; preds = %22
  %62 = and i8 %23, 1
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %64, label %101

64:                                               ; preds = %61
  %65 = call i32 @_Z8toupperwi(i32 %28) #14
  %66 = icmp eq i32 %65, 72
  %67 = select i1 %66, i8 1, i8 %24
  %68 = and i8 %67, 1
  %69 = icmp ne i8 %68, 0
  %70 = icmp eq i32 %65, 77
  %71 = and i1 %70, %69
  br i1 %71, label %72, label %73

72:                                               ; preds = %64
  store i32 73, i32* %27, align 4
  br label %101

73:                                               ; preds = %64
  %74 = icmp eq i32 %65, 78
  br i1 %74, label %75, label %101

75:                                               ; preds = %73
  %76 = call i32 @_Z9GetDigitsj(i32 %2) #14
  br label %77

77:                                               ; preds = %77, %75
  %78 = phi i32 [ 0, %75 ], [ %85, %77 ]
  %79 = add i32 %78, %25
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds [128 x i32], [128 x i32]* %5, i64 0, i64 %80
  %82 = load i32, i32* %81, align 4
  %83 = call i32 @_Z8toupperwi(i32 %82) #14
  %84 = icmp eq i32 %83, 78
  %85 = add i32 %78, 1
  br i1 %84, label %77, label %86

86:                                               ; preds = %77
  %87 = icmp ult i32 %78, %76
  br i1 %87, label %88, label %97

88:                                               ; preds = %86
  %89 = zext i32 %76 to i64
  %90 = getelementptr inbounds i32, i32* %27, i64 %89
  %91 = zext i32 %78 to i64
  %92 = getelementptr inbounds i32, i32* %27, i64 %91
  %93 = call i64 @wcslen(i32* %92) #13
  %94 = add i64 %93, 1
  %95 = call i32* @wmemmove(i32* %90, i32* %92, i64 %94) #14
  %96 = call i32* @wmemset(i32* %27, i32 signext 78, i64 %89) #14
  br label %97

97:                                               ; preds = %88, %86
  %98 = select i1 %87, i32 %76, i32 %78
  %99 = add i32 %25, -1
  %100 = add i32 %99, %98
  store i8 1, i8* %3, align 1
  br label %101

101:                                              ; preds = %72, %97, %73, %61, %58
  %102 = phi i8 [ %60, %58 ], [ %23, %61 ], [ %23, %73 ], [ %23, %97 ], [ %23, %72 ]
  %103 = phi i8 [ %24, %58 ], [ %24, %61 ], [ %67, %73 ], [ %67, %97 ], [ %67, %72 ]
  %104 = phi i32 [ %25, %58 ], [ %25, %61 ], [ %25, %73 ], [ %100, %97 ], [ %25, %72 ]
  %105 = add i32 %104, 1
  br label %22

106:                                              ; preds = %35, %53
  %107 = phi i32* [ %36, %35 ], [ %56, %53 ]
  %108 = call i64 @wcslen(i32* %0) #13
  %109 = shl i64 %108, 32
  %110 = ashr exact i64 %109, 32
  br label %111

111:                                              ; preds = %115, %106
  %112 = phi i64 [ %113, %115 ], [ %110, %106 ]
  %113 = add nsw i64 %112, -1
  %114 = icmp sgt i64 %112, 0
  br i1 %114, label %115, label %123

115:                                              ; preds = %111
  %116 = getelementptr inbounds i32, i32* %0, i64 %113
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, 47
  br i1 %118, label %119, label %111

119:                                              ; preds = %115
  %120 = shl i64 %112, 32
  %121 = ashr exact i64 %120, 32
  %122 = getelementptr inbounds i32, i32* %0, i64 %121
  br label %123

123:                                              ; preds = %111, %119
  %124 = phi i32* [ %122, %119 ], [ %0, %111 ]
  %125 = load i32, i32* %124, align 4
  %126 = icmp eq i32 %125, 0
  %127 = select i1 %126, i32* getelementptr inbounds ([5 x i32], [5 x i32]* @.str.9, i64 0, i64 0), i32* getelementptr inbounds ([1 x i32], [1 x i32]* @.str.21, i64 0, i64 0)
  call void @_Z8wcsncpyzPwPKwm(i32* %107, i32* %127, i64 2048) #14
  br label %129

128:                                              ; preds = %53
  call void @_Z8wcsncpyzPwPKwm(i32* nonnull %56, i32* nonnull %55, i64 2048) #14
  store i32 0, i32* %55, align 4
  br label %129

129:                                              ; preds = %128, %123
  %130 = phi i32* [ %56, %128 ], [ %107, %123 ]
  %131 = getelementptr inbounds %struct.RarLocalTime, %struct.RarLocalTime* %7, i64 0, i32 7
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %132, 0
  %134 = add i32 %132, -1
  %135 = select i1 %133, i32 6, i32 %134
  %136 = getelementptr inbounds %struct.RarLocalTime, %struct.RarLocalTime* %7, i64 0, i32 8
  %137 = load i32, i32* %136, align 4
  %138 = sub i32 %137, %135
  %139 = icmp slt i32 %138, 0
  br i1 %139, label %140, label %149

140:                                              ; preds = %129
  %141 = icmp slt i32 %138, -3
  br i1 %141, label %142, label %149

142:                                              ; preds = %140
  %143 = getelementptr inbounds %struct.RarLocalTime, %struct.RarLocalTime* %7, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = add i32 %144, -1
  %146 = call zeroext i1 @_Z10IsLeapYeari(i32 %145) #14
  %147 = select i1 %146, i32 366, i32 365
  %148 = add nsw i32 %147, %138
  br label %149

149:                                              ; preds = %140, %142, %129
  %150 = phi i32 [ %148, %142 ], [ %138, %129 ], [ 0, %140 ]
  %151 = sdiv i32 %150, 7
  %152 = srem i32 %150, 7
  %153 = icmp sgt i32 %152, 3
  %154 = select i1 %153, i32 2, i32 1
  %155 = add nsw i32 %154, %151
  %156 = getelementptr inbounds [10 x [6 x i8]], [10 x [6 x i8]]* %9, i64 0, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 60, i8* nonnull %156) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %156, i8 -86, i64 60, i1 false)
  %157 = getelementptr inbounds %struct.RarLocalTime, %struct.RarLocalTime* %7, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  %159 = call i32 (i8*, i8*, ...) @sprintf(i8* nonnull %156, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.22, i64 0, i64 0), i32 %158) #14
  %160 = getelementptr inbounds [10 x [6 x i8]], [10 x [6 x i8]]* %9, i64 0, i64 1, i64 0
  %161 = getelementptr inbounds %struct.RarLocalTime, %struct.RarLocalTime* %7, i64 0, i32 1
  %162 = load i32, i32* %161, align 4
  %163 = call i32 (i8*, i8*, ...) @sprintf(i8* %160, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0), i32 %162) #14
  %164 = getelementptr inbounds [10 x [6 x i8]], [10 x [6 x i8]]* %9, i64 0, i64 2, i64 0
  %165 = getelementptr inbounds %struct.RarLocalTime, %struct.RarLocalTime* %7, i64 0, i32 2
  %166 = load i32, i32* %165, align 4
  %167 = call i32 (i8*, i8*, ...) @sprintf(i8* %164, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0), i32 %166) #14
  %168 = getelementptr inbounds [10 x [6 x i8]], [10 x [6 x i8]]* %9, i64 0, i64 3, i64 0
  %169 = getelementptr inbounds %struct.RarLocalTime, %struct.RarLocalTime* %7, i64 0, i32 3
  %170 = load i32, i32* %169, align 4
  %171 = call i32 (i8*, i8*, ...) @sprintf(i8* %168, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0), i32 %170) #14
  %172 = getelementptr inbounds [10 x [6 x i8]], [10 x [6 x i8]]* %9, i64 0, i64 4, i64 0
  %173 = getelementptr inbounds %struct.RarLocalTime, %struct.RarLocalTime* %7, i64 0, i32 4
  %174 = load i32, i32* %173, align 4
  %175 = call i32 (i8*, i8*, ...) @sprintf(i8* %172, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0), i32 %174) #14
  %176 = getelementptr inbounds [10 x [6 x i8]], [10 x [6 x i8]]* %9, i64 0, i64 5, i64 0
  %177 = getelementptr inbounds %struct.RarLocalTime, %struct.RarLocalTime* %7, i64 0, i32 5
  %178 = load i32, i32* %177, align 4
  %179 = call i32 (i8*, i8*, ...) @sprintf(i8* %176, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0), i32 %178) #14
  %180 = getelementptr inbounds [10 x [6 x i8]], [10 x [6 x i8]]* %9, i64 0, i64 6, i64 0
  %181 = call i32 (i8*, i8*, ...) @sprintf(i8* %180, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.23, i64 0, i64 0), i32 %155) #14
  %182 = getelementptr inbounds [10 x [6 x i8]], [10 x [6 x i8]]* %9, i64 0, i64 7, i64 0
  %183 = add nuw i32 %135, 1
  %184 = call i32 (i8*, i8*, ...) @sprintf(i8* %182, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.24, i64 0, i64 0), i32 %183) #14
  %185 = getelementptr inbounds [10 x [6 x i8]], [10 x [6 x i8]]* %9, i64 0, i64 8, i64 0
  %186 = load i32, i32* %136, align 4
  %187 = add i32 %186, 1
  %188 = call i32 (i8*, i8*, ...) @sprintf(i8* %185, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.25, i64 0, i64 0), i32 %187) #14
  %189 = getelementptr inbounds [10 x [6 x i8]], [10 x [6 x i8]]* %9, i64 0, i64 9, i64 0
  %190 = call i32 (i8*, i8*, ...) @sprintf(i8* %189, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.26, i64 0, i64 0), i32 %2) #14
  %191 = bitcast [10 x i32]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %191) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %191, i8 0, i64 40, i1 false)
  br label %192

192:                                              ; preds = %220, %149
  %193 = phi i8 [ 0, %149 ], [ %221, %220 ]
  %194 = phi i32 [ 0, %149 ], [ %222, %220 ]
  %195 = zext i32 %194 to i64
  %196 = getelementptr inbounds [128 x i32], [128 x i32]* %5, i64 0, i64 %195
  %197 = load i32, i32* %196, align 4
  switch i32 %197, label %206 [
    i32 0, label %198
    i32 123, label %203
    i32 125, label %203
  ]

198:                                              ; preds = %192
  %199 = bitcast [128 x i32]* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 512, i8* nonnull %199) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %199, i8 -86, i64 512, i1 false)
  %200 = getelementptr inbounds [128 x i32], [128 x i32]* %11, i64 0, i64 0
  store i32 0, i32* %200, align 16
  %201 = load i32, i32* %18, align 16
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %223, label %224

203:                                              ; preds = %192, %192
  %204 = icmp eq i32 %197, 123
  %205 = zext i1 %204 to i8
  br label %220

206:                                              ; preds = %192
  %207 = and i8 %193, 1
  %208 = icmp eq i8 %207, 0
  br i1 %208, label %209, label %220

209:                                              ; preds = %206
  %210 = call i32 @_Z8toupperwi(i32 %197) #14
  %211 = call i32* @wcschr(i32* getelementptr inbounds ([11 x i32], [11 x i32]* @.str.27, i64 0, i64 0), i32 signext %210) #13
  %212 = icmp eq i32* %211, null
  br i1 %212, label %220, label %213

213:                                              ; preds = %209
  %214 = ptrtoint i32* %211 to i64
  %215 = sub i64 %214, ptrtoint ([11 x i32]* @.str.27 to i64)
  %216 = ashr exact i64 %215, 2
  %217 = getelementptr inbounds [10 x i32], [10 x i32]* %10, i64 0, i64 %216
  %218 = load i32, i32* %217, align 4
  %219 = add nsw i32 %218, 1
  store i32 %219, i32* %217, align 4
  br label %220

220:                                              ; preds = %213, %209, %206, %203
  %221 = phi i8 [ %205, %203 ], [ %193, %206 ], [ %193, %209 ], [ %193, %213 ]
  %222 = add i32 %194, 1
  br label %192

223:                                              ; preds = %287, %198
  br i1 %14, label %297, label %374

224:                                              ; preds = %198, %287
  %225 = phi i32 [ %293, %287 ], [ %201, %198 ]
  %226 = phi i32* [ %292, %287 ], [ %18, %198 ]
  %227 = phi i64 [ %290, %287 ], [ 0, %198 ]
  %228 = phi i64 [ %291, %287 ], [ 0, %198 ]
  %229 = phi i8 [ %288, %287 ], [ 0, %198 ]
  switch i32 %225, label %233 [
    i32 123, label %230
    i32 125, label %230
  ]

230:                                              ; preds = %224, %224
  %231 = icmp eq i32 %225, 123
  %232 = zext i1 %231 to i8
  br label %287

233:                                              ; preds = %224
  %234 = call i32 @_Z8toupperwi(i32 %225) #14
  %235 = call i32* @wcschr(i32* getelementptr inbounds ([11 x i32], [11 x i32]* @.str.27, i64 0, i64 0), i32 signext %234) #13
  %236 = icmp ne i32* %235, null
  %237 = and i8 %229, 1
  %238 = icmp eq i8 %237, 0
  %239 = and i1 %238, %236
  br i1 %239, label %242, label %240

240:                                              ; preds = %233
  %241 = load i32, i32* %226, align 4
  br label %282

242:                                              ; preds = %233
  %243 = ptrtoint i32* %235 to i64
  %244 = sub i64 %243, ptrtoint ([11 x i32]* @.str.27 to i64)
  %245 = ashr exact i64 %244, 2
  %246 = getelementptr inbounds [10 x [6 x i8]], [10 x [6 x i8]]* %9, i64 0, i64 %245, i64 0
  %247 = call i64 @strlen(i8* %246) #13
  %248 = trunc i64 %247 to i32
  %249 = getelementptr inbounds [10 x i32], [10 x i32]* %10, i64 0, i64 %245
  %250 = load i32, i32* %249, align 4
  %251 = add nsw i32 %250, -1
  store i32 %251, i32* %249, align 4
  %252 = sub nsw i32 %248, %250
  %253 = icmp eq i64 %244, 4
  br i1 %253, label %254, label %266

254:                                              ; preds = %242
  %255 = add i64 %228, 1
  %256 = getelementptr inbounds [128 x i32], [128 x i32]* %5, i64 0, i64 %255
  %257 = load i32, i32* %256, align 4
  %258 = call i32 @_Z8toupperwi(i32 %257) #14
  %259 = icmp eq i32 %258, 77
  br i1 %259, label %260, label %266

260:                                              ; preds = %254
  %261 = add i64 %228, 2
  %262 = getelementptr inbounds [128 x i32], [128 x i32]* %5, i64 0, i64 %261
  %263 = load i32, i32* %262, align 4
  %264 = call i32 @_Z8toupperwi(i32 %263) #14
  %265 = icmp eq i32 %264, 77
  br i1 %265, label %275, label %266

266:                                              ; preds = %260, %254, %242
  %267 = icmp slt i32 %252, 0
  br i1 %267, label %268, label %270

268:                                              ; preds = %266
  %269 = load i32, i32* %226, align 4
  br label %282

270:                                              ; preds = %266
  %271 = sext i32 %252 to i64
  %272 = getelementptr inbounds [10 x [6 x i8]], [10 x [6 x i8]]* %9, i64 0, i64 %245, i64 %271
  %273 = load i8, i8* %272, align 1
  %274 = sext i8 %273 to i32
  br label %282

275:                                              ; preds = %260
  %276 = getelementptr inbounds [128 x i32], [128 x i32]* %11, i64 0, i64 %227
  %277 = load i32, i32* %161, align 4
  %278 = add i32 %277, -1
  %279 = call i32* @_Z12GetMonthNamei(i32 %278) #14
  %280 = sub nuw nsw i64 128, %227
  call void @_Z8wcsncpyzPwPKwm(i32* %276, i32* %279, i64 %280) #14
  %281 = call i64 @wcslen(i32* nonnull %200) #13
  br label %287

282:                                              ; preds = %268, %270, %240
  %283 = phi i32 [ %269, %268 ], [ %274, %270 ], [ %241, %240 ]
  %284 = getelementptr inbounds [128 x i32], [128 x i32]* %11, i64 0, i64 %227
  store i32 %283, i32* %284, align 4
  %285 = add nuw nsw i64 %227, 1
  %286 = getelementptr inbounds [128 x i32], [128 x i32]* %11, i64 0, i64 %285
  store i32 0, i32* %286, align 4
  br label %287

287:                                              ; preds = %275, %282, %230
  %288 = phi i8 [ %232, %230 ], [ %229, %275 ], [ %229, %282 ]
  %289 = phi i64 [ %228, %230 ], [ %261, %275 ], [ %228, %282 ]
  %290 = phi i64 [ %227, %230 ], [ %281, %275 ], [ %285, %282 ]
  %291 = add i64 %289, 1
  %292 = getelementptr inbounds [128 x i32], [128 x i32]* %5, i64 0, i64 %291
  %293 = load i32, i32* %292, align 4
  %294 = icmp ne i32 %293, 0
  %295 = icmp ult i64 %290, 127
  %296 = and i1 %295, %294
  br i1 %296, label %224, label %223

297:                                              ; preds = %223
  %298 = bitcast [2048 x i32]* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8192, i8* nonnull %298) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %298, i8 -86, i64 8192, i1 false)
  %299 = getelementptr inbounds [2048 x i32], [2048 x i32]* %12, i64 0, i64 0
  %300 = call i64 @wcslen(i32* %0) #13
  %301 = shl i64 %300, 32
  %302 = ashr exact i64 %301, 32
  br label %303

303:                                              ; preds = %307, %297
  %304 = phi i64 [ %305, %307 ], [ %302, %297 ]
  %305 = add nsw i64 %304, -1
  %306 = icmp sgt i64 %304, 0
  br i1 %306, label %307, label %315

307:                                              ; preds = %303
  %308 = getelementptr inbounds i32, i32* %0, i64 %305
  %309 = load i32, i32* %308, align 4
  %310 = icmp eq i32 %309, 47
  br i1 %310, label %311, label %303

311:                                              ; preds = %307
  %312 = shl i64 %304, 32
  %313 = ashr exact i64 %312, 32
  %314 = getelementptr inbounds i32, i32* %0, i64 %313
  br label %315

315:                                              ; preds = %303, %311
  %316 = phi i32* [ %314, %311 ], [ %0, %303 ]
  %317 = ptrtoint i32* %316 to i64
  %318 = ptrtoint i32* %0 to i64
  %319 = sub i64 %317, %318
  %320 = ashr exact i64 %319, 2
  %321 = icmp ugt i64 %320, 2047
  br i1 %321, label %339, label %322

322:                                              ; preds = %315, %326
  %323 = phi i64 [ %324, %326 ], [ %302, %315 ]
  %324 = add nsw i64 %323, -1
  %325 = icmp sgt i64 %323, 0
  br i1 %325, label %326, label %335

326:                                              ; preds = %322
  %327 = getelementptr inbounds i32, i32* %0, i64 %324
  %328 = load i32, i32* %327, align 4
  %329 = icmp eq i32 %328, 47
  br i1 %329, label %330, label %322

330:                                              ; preds = %326
  %331 = shl i64 %323, 32
  %332 = ashr exact i64 %331, 32
  %333 = getelementptr inbounds i32, i32* %0, i64 %332
  %334 = ptrtoint i32* %333 to i64
  br label %335

335:                                              ; preds = %322, %330
  %336 = phi i64 [ %334, %330 ], [ %318, %322 ]
  %337 = sub i64 %336, %318
  %338 = ashr exact i64 %337, 2
  br label %339

339:                                              ; preds = %315, %335
  %340 = phi i64 [ %338, %335 ], [ 2047, %315 ]
  %341 = call i32* @wcsncpy(i32* nonnull %299, i32* %0, i64 %340) #14
  %342 = getelementptr inbounds [2048 x i32], [2048 x i32]* %12, i64 0, i64 %340
  store i32 0, i32* %342, align 4
  %343 = call i64 @wcslen(i32* nonnull %299) #13
  %344 = icmp eq i64 %343, 0
  br i1 %344, label %356, label %345

345:                                              ; preds = %339
  %346 = add i64 %343, -1
  %347 = getelementptr inbounds [2048 x i32], [2048 x i32]* %12, i64 0, i64 %346
  %348 = load i32, i32* %347, align 4
  %349 = icmp eq i32 %348, 47
  br i1 %349, label %356, label %350

350:                                              ; preds = %345
  %351 = add i64 %343, 1
  %352 = icmp ult i64 %351, 2048
  br i1 %352, label %353, label %356

353:                                              ; preds = %350
  %354 = getelementptr inbounds [2048 x i32], [2048 x i32]* %12, i64 0, i64 %343
  store i32 47, i32* %354, align 4
  %355 = getelementptr inbounds [2048 x i32], [2048 x i32]* %12, i64 0, i64 %351
  store i32 0, i32* %355, align 4
  br label %356

356:                                              ; preds = %339, %345, %350, %353
  call void @_Z8wcsncatzPwPKwm(i32* nonnull %299, i32* nonnull %200, i64 2048) #14
  %357 = call i64 @wcslen(i32* %0) #13
  %358 = shl i64 %357, 32
  %359 = ashr exact i64 %358, 32
  br label %360

360:                                              ; preds = %364, %356
  %361 = phi i64 [ %362, %364 ], [ %359, %356 ]
  %362 = add nsw i64 %361, -1
  %363 = icmp sgt i64 %361, 0
  br i1 %363, label %364, label %372

364:                                              ; preds = %360
  %365 = getelementptr inbounds i32, i32* %0, i64 %362
  %366 = load i32, i32* %365, align 4
  %367 = icmp eq i32 %366, 47
  br i1 %367, label %368, label %360

368:                                              ; preds = %364
  %369 = shl i64 %361, 32
  %370 = ashr exact i64 %369, 32
  %371 = getelementptr inbounds i32, i32* %0, i64 %370
  br label %372

372:                                              ; preds = %360, %368
  %373 = phi i32* [ %371, %368 ], [ %0, %360 ]
  call void @_Z8wcsncatzPwPKwm(i32* nonnull %299, i32* %373, i64 2048) #14
  call void @_Z8wcsncpyzPwPKwm(i32* %0, i32* nonnull %299, i64 2048) #14
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %298) #14
  br label %375

374:                                              ; preds = %223
  call void @_Z8wcsncatzPwPKwm(i32* %0, i32* nonnull %200, i64 2048) #14
  br label %375

375:                                              ; preds = %374, %372
  call void @_Z8wcsncatzPwPKwm(i32* %0, i32* %130, i64 2048) #14
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %199) #14
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %191) #14
  call void @llvm.lifetime.end.p0i8(i64 60, i8* nonnull %156) #14
  call void @llvm.lifetime.end.p0i8(i64 8192, i8* nonnull %33) #14
  call void @llvm.lifetime.end.p0i8(i64 36, i8* nonnull %32) #14
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #14
  call void @llvm.lifetime.end.p0i8(i64 512, i8* nonnull %17) #14
  ret void
}

declare i32* @_Z11NullToEmptyPKw(i32*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i32* @_Z11GetWideNamePKcPKwPwm(i8*, i32*, i32* returned, i64) local_unnamed_addr #4 {
  %5 = icmp eq i32* %1, null
  br i1 %5, label %13, label %6

6:                                                ; preds = %4
  %7 = load i32, i32* %1, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %6
  %10 = icmp eq i32* %2, %1
  br i1 %10, label %18, label %11

11:                                               ; preds = %9
  %12 = tail call i32* @wcsncpy(i32* %2, i32* nonnull %1, i64 %3) #14
  br label %18

13:                                               ; preds = %6, %4
  %14 = icmp eq i8* %0, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %13
  %16 = tail call zeroext i1 @_Z10CharToWidePKcPwm(i8* nonnull %0, i32* %2, i64 %3) #14
  br label %18

17:                                               ; preds = %13
  store i32 0, i32* %2, align 4
  br label %18

18:                                               ; preds = %9, %15, %17, %11
  %19 = icmp eq i64 %3, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %18
  %21 = add i64 %3, -1
  %22 = getelementptr inbounds i32, i32* %2, i64 %21
  store i32 0, i32* %22, align 4
  br label %23

23:                                               ; preds = %18, %20
  ret i32* %2
}

declare i32 @_Z8toupperwi(i32) local_unnamed_addr #6

declare i32 @_Z9GetDigitsj(i32) local_unnamed_addr #6

; Function Attrs: nounwind
declare i32* @wmemmove(i32*, i32*, i64) local_unnamed_addr #8

; Function Attrs: nounwind
declare i32* @wmemset(i32*, i32 signext, i64) local_unnamed_addr #8

declare void @_ZN7RarTime14SetCurrentTimeEv(%class.RarTime*) local_unnamed_addr #6

declare void @_ZN7RarTime8GetLocalEP12RarLocalTime(%class.RarTime*, %struct.RarLocalTime*) local_unnamed_addr #6

declare zeroext i1 @_Z10IsLeapYeari(i32) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare i32 @sprintf(i8* nocapture, i8* nocapture readonly, ...) local_unnamed_addr #12

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #2

declare i32* @_Z12GetMonthNamei(i32) local_unnamed_addr #6

attributes #0 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind readonly }
attributes #14 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = !{i8 0, i8 2}
