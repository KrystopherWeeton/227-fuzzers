; ModuleID = '../../third_party/skia/src/core/SkCubicMap.cpp'
source_filename = "../../third_party/skia/src/core/SkCubicMap.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkCubicMap = type { [3 x %struct.SkPoint], i32 }
%struct.SkPoint = type { float, float }

@_ZN6SkOpts12cubic_solverE = external local_unnamed_addr global float (float, float, float, float)*, align 8

@_ZN10SkCubicMapC1E7SkPointS0_ = hidden unnamed_addr alias void (%class.SkCubicMap*, <2 x float>, <2 x float>), void (%class.SkCubicMap*, <2 x float>, <2 x float>)* @_ZN10SkCubicMapC2E7SkPointS0_

; Function Attrs: nounwind ssp uwtable
define hidden float @_ZNK10SkCubicMap13computeYFromXEf(%class.SkCubicMap* nocapture readonly, float) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca float, align 4
  %5 = alloca float, align 4
  %6 = bitcast i32* %3 to float*
  store float %1, float* %6, align 4
  %7 = bitcast float* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %7)
  store float 0.000000e+00, float* %4, align 4
  %8 = bitcast float* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %8)
  store float 1.000000e+00, float* %5, align 4
  %9 = fcmp ogt float %1, 1.000000e+00
  %10 = select i1 %9, float* %5, float* %6
  %11 = load float, float* %10, align 4
  %12 = fcmp ogt float %11, 0.000000e+00
  %13 = select i1 %12, float* %10, float* %4
  %14 = bitcast float* %13 to i32*
  %15 = load i32, i32* %14, align 4
  store i32 %15, i32* %3, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %8)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %7)
  %16 = bitcast i32 %15 to float
  %17 = fcmp ole float %16, 0x3DDB7CDFE0000000
  %18 = fsub float 1.000000e+00, %16
  %19 = fcmp ole float %18, 0x3DDB7CDFE0000000
  %20 = or i1 %17, %19
  br i1 %20, label %52, label %21

21:                                               ; preds = %2
  %22 = getelementptr inbounds %class.SkCubicMap, %class.SkCubicMap* %0, i64 0, i32 1
  %23 = load i32, i32* %22, align 4
  switch i32 %23, label %29 [
    i32 0, label %52
    i32 1, label %24
  ]

24:                                               ; preds = %21
  %25 = getelementptr inbounds %class.SkCubicMap, %class.SkCubicMap* %0, i64 0, i32 0, i64 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %16, %26
  %28 = tail call float @powf(float %27, float 0x3FD5555560000000) #6
  br label %39

29:                                               ; preds = %21
  %30 = getelementptr inbounds %class.SkCubicMap, %class.SkCubicMap* %0, i64 0, i32 0, i64 0, i32 0
  %31 = load float, float* %30, align 4
  %32 = getelementptr inbounds %class.SkCubicMap, %class.SkCubicMap* %0, i64 0, i32 0, i64 1, i32 0
  %33 = load float, float* %32, align 4
  %34 = getelementptr inbounds %class.SkCubicMap, %class.SkCubicMap* %0, i64 0, i32 0, i64 2, i32 0
  %35 = load float, float* %34, align 4
  %36 = load float (float, float, float, float)*, float (float, float, float, float)** @_ZN6SkOpts12cubic_solverE, align 8
  %37 = fsub float -0.000000e+00, %16
  %38 = tail call float %36(float %31, float %33, float %35, float %37) #6
  br label %39

39:                                               ; preds = %29, %24
  %40 = phi float [ %28, %24 ], [ %38, %29 ]
  %41 = getelementptr inbounds %class.SkCubicMap, %class.SkCubicMap* %0, i64 0, i32 0, i64 0, i32 1
  %42 = load float, float* %41, align 4
  %43 = getelementptr inbounds %class.SkCubicMap, %class.SkCubicMap* %0, i64 0, i32 0, i64 1, i32 1
  %44 = load float, float* %43, align 4
  %45 = getelementptr inbounds %class.SkCubicMap, %class.SkCubicMap* %0, i64 0, i32 0, i64 2, i32 1
  %46 = load float, float* %45, align 4
  %47 = fmul float %40, %42
  %48 = fadd float %47, %44
  %49 = fmul float %40, %48
  %50 = fadd float %46, %49
  %51 = fmul float %40, %50
  br label %52

52:                                               ; preds = %21, %2, %39
  %53 = phi float [ %51, %39 ], [ %16, %2 ], [ %16, %21 ]
  ret float %53
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN10SkCubicMapC2E7SkPointS0_(%class.SkCubicMap* nocapture, <2 x float>, <2 x float>) unnamed_addr #2 align 2 {
  %4 = alloca i32, align 8
  %5 = alloca i32, align 8
  %6 = alloca float, align 4
  %7 = alloca float, align 4
  %8 = alloca float, align 4
  %9 = alloca float, align 4
  %10 = bitcast <2 x float> %1 to <2 x i32>
  %11 = extractelement <2 x i32> %10, i32 0
  store i32 %11, i32* %4, align 8
  %12 = extractelement <2 x i32> %10, i32 1
  %13 = bitcast i32 %12 to float
  %14 = bitcast <2 x float> %2 to <2 x i32>
  %15 = extractelement <2 x i32> %14, i32 0
  store i32 %15, i32* %5, align 8
  %16 = extractelement <2 x i32> %14, i32 1
  %17 = bitcast float* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17)
  store float 0.000000e+00, float* %6, align 4
  %18 = bitcast i32 %11 to float
  %19 = fcmp olt float %18, 0.000000e+00
  %20 = bitcast i32* %4 to float*
  %21 = select i1 %19, float* %6, float* %20
  %22 = bitcast float* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %22)
  store float 1.000000e+00, float* %7, align 4
  %23 = load float, float* %21, align 4
  %24 = fcmp ogt float %23, 1.000000e+00
  %25 = select i1 %24, float* %7, float* %21
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  store i32 %27, i32* %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %22)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17)
  %28 = bitcast float* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %28)
  store float 0.000000e+00, float* %8, align 4
  %29 = bitcast i32 %15 to float
  %30 = fcmp olt float %29, 0.000000e+00
  %31 = bitcast i32* %5 to float*
  %32 = select i1 %30, float* %8, float* %31
  %33 = bitcast float* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %33)
  store float 1.000000e+00, float* %9, align 4
  %34 = load float, float* %32, align 4
  %35 = fcmp ogt float %34, 1.000000e+00
  %36 = select i1 %35, float* %9, float* %32
  %37 = bitcast float* %36 to i32*
  %38 = load i32, i32* %37, align 4
  store i32 %38, i32* %5, align 8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %33)
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %28)
  %39 = zext i32 %12 to i64
  %40 = shl nuw i64 %39, 32
  %41 = zext i32 %27 to i64
  %42 = or i64 %40, %41
  %43 = insertelement <2 x i64> <i64 undef, i64 0>, i64 %42, i32 0
  %44 = bitcast <2 x i64> %43 to <4 x float>
  %45 = fmul <4 x float> %44, <float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00>
  %46 = zext i32 %16 to i64
  %47 = shl nuw i64 %46, 32
  %48 = zext i32 %38 to i64
  %49 = or i64 %47, %48
  %50 = insertelement <2 x i64> <i64 undef, i64 0>, i64 %49, i32 0
  %51 = bitcast <2 x i64> %50 to <4 x float>
  %52 = fmul <4 x float> %51, <float 3.000000e+00, float 3.000000e+00, float 3.000000e+00, float 3.000000e+00>
  %53 = fadd <4 x float> %45, <float 1.000000e+00, float 1.000000e+00, float undef, float undef>
  %54 = fsub <4 x float> %53, %52
  %55 = shufflevector <4 x float> %54, <4 x float> undef, <2 x i32> <i32 0, i32 1>
  %56 = bitcast %class.SkCubicMap* %0 to <2 x float>*
  store <2 x float> %55, <2 x float>* %56, align 1
  %57 = fsub <4 x float> %52, %45
  %58 = fsub <4 x float> %57, %45
  %59 = getelementptr inbounds %class.SkCubicMap, %class.SkCubicMap* %0, i64 0, i32 0, i64 1
  %60 = bitcast <4 x float> %58 to <2 x i64>
  %61 = shufflevector <4 x float> %58, <4 x float> undef, <2 x i32> <i32 0, i32 1>
  %62 = bitcast %struct.SkPoint* %59 to <2 x float>*
  store <2 x float> %61, <2 x float>* %62, align 1
  %63 = getelementptr inbounds %class.SkCubicMap, %class.SkCubicMap* %0, i64 0, i32 0, i64 2
  %64 = bitcast <4 x float> %45 to <2 x i64>
  %65 = shufflevector <4 x float> %45, <4 x float> undef, <2 x i32> <i32 0, i32 1>
  %66 = bitcast %struct.SkPoint* %63 to <2 x float>*
  store <2 x float> %65, <2 x float>* %66, align 1
  %67 = getelementptr inbounds %class.SkCubicMap, %class.SkCubicMap* %0, i64 0, i32 1
  store i32 2, i32* %67, align 4
  %68 = bitcast i32 %27 to float
  %69 = fsub float %68, %13
  %70 = tail call float @llvm.fabs.f32(float %69) #6
  %71 = fcmp ugt float %70, 0x3F30000000000000
  %72 = shufflevector <2 x i64> %60, <2 x i64> %64, <2 x i32> <i32 0, i32 2>
  %73 = trunc <2 x i64> %72 to <2 x i32>
  %74 = bitcast <2 x i32> %73 to <2 x float>
  br i1 %71, label %81, label %75

75:                                               ; preds = %3
  %76 = bitcast i32 %16 to float
  %77 = bitcast i32 %38 to float
  %78 = fsub float %77, %76
  %79 = tail call float @llvm.fabs.f32(float %78) #6
  %80 = fcmp ugt float %79, 0x3F30000000000000
  br i1 %80, label %81, label %87

81:                                               ; preds = %75, %3
  %82 = call <2 x float> @llvm.fabs.v2f32(<2 x float> %74)
  %83 = fcmp ugt <2 x float> %82, <float 0x3E7AD7F2A0000000, float 0x3E7AD7F2A0000000>
  %84 = extractelement <2 x i1> %83, i32 0
  %85 = extractelement <2 x i1> %83, i32 1
  %86 = or i1 %84, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %81, %75
  %88 = phi i32 [ 0, %75 ], [ 1, %81 ]
  store i32 %88, i32* %67, align 4
  br label %89

89:                                               ; preds = %87, %81
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden <2 x float> @_ZNK10SkCubicMap12computeFromTEf(%class.SkCubicMap* nocapture readonly, float) local_unnamed_addr #3 align 2 {
  %3 = bitcast %class.SkCubicMap* %0 to i64*
  %4 = load i64, i64* %3, align 1
  %5 = insertelement <2 x i64> undef, i64 %4, i32 0
  %6 = bitcast <2 x i64> %5 to <4 x float>
  %7 = getelementptr inbounds %class.SkCubicMap, %class.SkCubicMap* %0, i64 0, i32 0, i64 1
  %8 = bitcast %struct.SkPoint* %7 to i64*
  %9 = load i64, i64* %8, align 1
  %10 = insertelement <2 x i64> undef, i64 %9, i32 0
  %11 = bitcast <2 x i64> %10 to <4 x float>
  %12 = getelementptr inbounds %class.SkCubicMap, %class.SkCubicMap* %0, i64 0, i32 0, i64 2
  %13 = bitcast %struct.SkPoint* %12 to i64*
  %14 = load i64, i64* %13, align 1
  %15 = insertelement <2 x i64> undef, i64 %14, i32 0
  %16 = bitcast <2 x i64> %15 to <4 x float>
  %17 = insertelement <4 x float> undef, float %1, i32 0
  %18 = shufflevector <4 x float> %17, <4 x float> undef, <4 x i32> zeroinitializer
  %19 = fmul <4 x float> %18, %6
  %20 = fadd <4 x float> %19, %11
  %21 = fmul <4 x float> %18, %20
  %22 = fadd <4 x float> %21, %16
  %23 = fmul <4 x float> %18, %22
  %24 = shufflevector <4 x float> %23, <4 x float> undef, <2 x i32> <i32 0, i32 1>
  ret <2 x float> %24
}

; Function Attrs: nofree nounwind
declare float @powf(float, float) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #5

; Function Attrs: nounwind readnone speculatable
declare <2 x float> @llvm.fabs.v2f32(<2 x float>) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="128" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone speculatable }
attributes #6 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
