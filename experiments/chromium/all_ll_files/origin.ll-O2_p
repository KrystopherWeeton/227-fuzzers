; ModuleID = '../../url/origin.cc'
source_filename = "../../url/origin.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::BasicStringPiece" = type { i8*, i64 }
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.url::debug::ScopedOriginCrashKey" = type { %"class.base::debug::ScopedCrashKeyString" }
%"class.base::debug::ScopedCrashKeyString" = type { %"struct.base::debug::CrashKeyString"* }
%"struct.base::debug::CrashKeyString" = type <{ i8*, i32, [4 x i8] }>
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.2" }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %class.GURL* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.absl::optional.5" = type { %"class.absl::optional_internal::optional_data.6" }
%"class.absl::optional_internal::optional_data.6" = type { %"class.absl::optional_internal::optional_data_base.7" }
%"class.absl::optional_internal::optional_data_base.7" = type { %"class.absl::optional_internal::optional_data_dtor_base.8" }
%"class.absl::optional_internal::optional_data_dtor_base.8" = type { i8, %union.anon.9 }
%union.anon.9 = type { %"class.url::Origin" }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.absl::optional.10" = type { %"class.absl::optional_internal::optional_data.11" }
%"class.absl::optional_internal::optional_data.11" = type { %"class.absl::optional_internal::optional_data_base.12" }
%"class.absl::optional_internal::optional_data_base.12" = type { %"class.absl::optional_internal::optional_data_dtor_base.13" }
%"class.absl::optional_internal::optional_data_dtor_base.13" = type { i8, %union.anon.14 }
%union.anon.14 = type { %"class.base::UnguessableToken" }
%"class.std::__1::allocator" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.16" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"class.std::__1::basic_string"* }
%"struct.std::__1::__tuple_less" = type { i8 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.15" }
%"class.std::__1::__tuple_leaf" = type { %"class.url::SchemeHostPort"* }
%"class.std::__1::__tuple_leaf.15" = type { %"class.absl::optional"* }
%"class.absl::optional.21" = type { %"class.absl::optional_internal::optional_data.22" }
%"class.absl::optional_internal::optional_data.22" = type { %"class.absl::optional_internal::optional_data_base.23" }
%"class.absl::optional_internal::optional_data_base.23" = type { %"class.absl::optional_internal::optional_data_dtor_base.24" }
%"class.absl::optional_internal::optional_data_dtor_base.24" = type { i8, %union.anon.25 }
%union.anon.25 = type { %"class.std::__1::basic_string" }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.base::PickleIterator" = type { i8*, i64, i64 }
%"class.perfetto::TracedValue" = type <{ %"class.perfetto::protos::pbzero::DebugAnnotation"*, %"class.perfetto::internal::CheckedScope", [7 x i8] }>
%"class.perfetto::protos::pbzero::DebugAnnotation" = type opaque
%"class.perfetto::internal::CheckedScope" = type { i8 }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>

$_ZN3url14SchemeHostPortaSERKS0_ = comdat any

$_ZNK3url14SchemeHostPorteqERKS0_ = comdat any

$_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKN3url14SchemeHostPortERKN4absl8optionalINS4_6Origin5NonceEEEEEESF_EEbRKT_RKT0_ = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

@_ZN3url12kAboutSchemeE = external constant [0 x i8], align 1
@_ZN3url11kFileSchemeE = external constant [0 x i8], align 1
@.str.1 = private unnamed_addr constant [8 x i8] c"file://\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"file:///\00", align 1
@_ZN3url11kDataSchemeE = external constant [0 x i8], align 1
@.str.3 = private unnamed_addr constant [15 x i8] c" [internally: \00", align 1
@.str.4 = private unnamed_addr constant [2 x i8] c"]\00", align 1
@.str.5 = private unnamed_addr constant [14 x i8] c" [internally:\00", align 1
@.str.6 = private unnamed_addr constant [3 x i8] c" (\00", align 1
@.str.7 = private unnamed_addr constant [10 x i8] c"nonce TBD\00", align 1
@.str.8 = private unnamed_addr constant [2 x i8] c")\00", align 1
@.str.9 = private unnamed_addr constant [12 x i8] c" anonymous]\00", align 1
@.ref.tmp = private constant [1 x %"class.base::BasicStringPiece"] [%"class.base::BasicStringPiece" { i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.9, i32 0, i32 0), i64 11 }], align 8
@.str.10 = private unnamed_addr constant [15 x i8] c" derived from \00", align 1
@.str.11 = private unnamed_addr constant [12 x i8] c"(nonce TBD)\00", align 1
@.str.12 = private unnamed_addr constant [20 x i8] c"../../url/origin.cc\00", align 1
@.str.13 = private unnamed_addr constant [19 x i8] c"!token_.is_empty()\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"nullptr\00", align 1
@_ZN3url17kFileSystemSchemeE = external constant [0 x i8], align 1
@_ZN3url11kBlobSchemeE = external constant [0 x i8], align 1
@.str.17 = private unnamed_addr constant [29 x i8] c"../../base/containers/span.h\00", align 1
@.str.18 = private unnamed_addr constant [13 x i8] c"begin <= end\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8

@_ZN3url6OriginC1Ev = hidden unnamed_addr alias void (%"class.url::Origin"*), void (%"class.url::Origin"*)* @_ZN3url6OriginC2Ev
@_ZN3url6OriginC1ERKS0_ = hidden unnamed_addr alias void (%"class.url::Origin"*, %"class.url::Origin"*), void (%"class.url::Origin"*, %"class.url::Origin"*)* @_ZN3url6OriginC2ERKS0_
@_ZN3url6OriginC1EOS0_ = hidden unnamed_addr alias void (%"class.url::Origin"*, %"class.url::Origin"*), void (%"class.url::Origin"*, %"class.url::Origin"*)* @_ZN3url6OriginC2EOS0_
@_ZN3url6OriginD1Ev = hidden unnamed_addr alias void (%"class.url::Origin"*), void (%"class.url::Origin"*)* @_ZN3url6OriginD2Ev
@_ZN3url6OriginC1ENS_14SchemeHostPortE = hidden unnamed_addr alias void (%"class.url::Origin"*, %"class.url::SchemeHostPort"*), void (%"class.url::Origin"*, %"class.url::SchemeHostPort"*)* @_ZN3url6OriginC2ENS_14SchemeHostPortE
@_ZN3url6OriginC1ERKNS0_5NonceENS_14SchemeHostPortE = hidden unnamed_addr alias void (%"class.url::Origin"*, %"class.url::Origin::Nonce"*, %"class.url::SchemeHostPort"*), void (%"class.url::Origin"*, %"class.url::Origin::Nonce"*, %"class.url::SchemeHostPort"*)* @_ZN3url6OriginC2ERKNS0_5NonceENS_14SchemeHostPortE
@_ZN3url6Origin5NonceC1Ev = hidden unnamed_addr alias void (%"class.url::Origin::Nonce"*), void (%"class.url::Origin::Nonce"*)* @_ZN3url6Origin5NonceC2Ev
@_ZN3url6Origin5NonceC1ERKN4base16UnguessableTokenE = hidden unnamed_addr alias void (%"class.url::Origin::Nonce"*, %"class.base::UnguessableToken"*), void (%"class.url::Origin::Nonce"*, %"class.base::UnguessableToken"*)* @_ZN3url6Origin5NonceC2ERKN4base16UnguessableTokenE
@_ZN3url6Origin5NonceC1ERKS1_ = hidden unnamed_addr alias void (%"class.url::Origin::Nonce"*, %"class.url::Origin::Nonce"*), void (%"class.url::Origin::Nonce"*, %"class.url::Origin::Nonce"*)* @_ZN3url6Origin5NonceC2ERKS1_
@_ZN3url6Origin5NonceC1EOS1_ = hidden unnamed_addr alias void (%"class.url::Origin::Nonce"*, %"class.url::Origin::Nonce"*), void (%"class.url::Origin::Nonce"*, %"class.url::Origin::Nonce"*)* @_ZN3url6Origin5NonceC2EOS1_
@_ZN3url5debug20ScopedOriginCrashKeyC1EPN4base5debug14CrashKeyStringEPKNS_6OriginE = hidden unnamed_addr alias void (%"class.url::debug::ScopedOriginCrashKey"*, %"struct.base::debug::CrashKeyString"*, %"class.url::Origin"*), void (%"class.url::debug::ScopedOriginCrashKey"*, %"struct.base::debug::CrashKeyString"*, %"class.url::Origin"*)* @_ZN3url5debug20ScopedOriginCrashKeyC2EPN4base5debug14CrashKeyStringEPKNS_6OriginE
@_ZN3url5debug20ScopedOriginCrashKeyD1Ev = hidden unnamed_addr alias void (%"class.url::debug::ScopedOriginCrashKey"*), void (%"class.url::debug::ScopedOriginCrashKey"*)* @_ZN3url5debug20ScopedOriginCrashKeyD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url6OriginC2Ev(%"class.url::Origin"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0
  tail call void @_ZN3url14SchemeHostPortC1Ev(%"class.url::SchemeHostPort"* %2) #12
  %3 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %5 = bitcast %union.anon.1* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false)
  ret void
}

declare void @_ZN3url14SchemeHostPortC1Ev(%"class.url::SchemeHostPort"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* noalias sret, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.url::SchemeHostPort", align 8
  %4 = alloca %"class.url::SchemeHostPort", align 8
  %5 = alloca %"class.url::SchemeHostPort", align 8
  %6 = alloca %class.GURL, align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.url::SchemeHostPort", align 8
  %9 = alloca %"class.url::SchemeHostPort", align 8
  %10 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 1
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %18

13:                                               ; preds = %2
  %14 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0
  tail call void @_ZN3url14SchemeHostPortC1Ev(%"class.url::SchemeHostPort"* %14) #12
  %15 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %15, align 8
  %16 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %union.anon.1* %16 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 16, i1 false) #12
  br label %155

18:                                               ; preds = %2
  %19 = bitcast %"class.url::SchemeHostPort"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %19) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 56, i1 false)
  call void @_ZN3url14SchemeHostPortC1Ev(%"class.url::SchemeHostPort"* nonnull %3) #12
  %20 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kFileSystemSchemeE, i64 0, i64 0)) #12
  %21 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kFileSystemSchemeE, i64 0, i64 0), i64 %20) #12
  br i1 %21, label %22, label %53

22:                                               ; preds = %18
  %23 = bitcast %"class.url::SchemeHostPort"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %23) #12
  %24 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %25 = load %class.GURL*, %class.GURL** %24, align 8
  call void @_ZN3url14SchemeHostPortC1ERK4GURL(%"class.url::SchemeHostPort"* nonnull %4, %class.GURL* dereferenceable(120) %25) #12
  %26 = bitcast %"class.url::SchemeHostPort"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %30, %22
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* nonnull align 8 %23, i64 24, i1 false) #12
  %34 = bitcast %"class.url::SchemeHostPort"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  store i8 0, i8* %35, align 1
  store i8 0, i8* %23, align 8
  %36 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %3, i64 0, i32 1
  %37 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %4, i64 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %45

42:                                               ; preds = %33
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #13
  br label %45

45:                                               ; preds = %33, %42
  %46 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  %47 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %46, i8* align 8 %47, i64 24, i1 false) #12
  %48 = bitcast %"class.std::__1::basic_string"* %37 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  store i8 0, i8* %49, align 1
  store i8 0, i8* %47, align 8
  %50 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %4, i64 0, i32 2
  %51 = load i16, i16* %50, align 8
  %52 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %3, i64 0, i32 2
  store i16 %51, i16* %52, align 8
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %4) #12
  br label %132

53:                                               ; preds = %18
  %54 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kBlobSchemeE, i64 0, i64 0)) #12
  %55 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kBlobSchemeE, i64 0, i64 0), i64 %54) #12
  br i1 %55, label %56, label %103

56:                                               ; preds = %53
  %57 = bitcast %"class.url::SchemeHostPort"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %57) #12
  %58 = bitcast %class.GURL* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %58) #12
  %59 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #12
  call void @_ZNK4GURL10GetContentEv(%"class.std::__1::basic_string"* nonnull sret %7, %class.GURL* %1) #12
  %60 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  %66 = select i1 %63, i8* %65, i8* %59
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = load i64, i64* %67, align 8
  %69 = zext i8 %62 to i64
  %70 = select i1 %63, i64 %68, i64 %69
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %6, i8* %66, i64 %70) #12
  call void @_ZN3url14SchemeHostPortC1ERK4GURL(%"class.url::SchemeHostPort"* nonnull %5, %class.GURL* nonnull dereferenceable(120) %6) #12
  %71 = bitcast %"class.url::SchemeHostPort"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %56
  %76 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %77) #13
  br label %78

78:                                               ; preds = %75, %56
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* nonnull align 8 %57, i64 24, i1 false) #12
  %79 = bitcast %"class.url::SchemeHostPort"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  store i8 0, i8* %80, align 1
  store i8 0, i8* %57, align 8
  %81 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %3, i64 0, i32 1
  %82 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %5, i64 0, i32 1
  %83 = bitcast %"class.std::__1::basic_string"* %81 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %84 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %83, i64 0, i32 1, i32 0
  %85 = load i8, i8* %84, align 1
  %86 = icmp slt i8 %85, 0
  br i1 %86, label %87, label %90

87:                                               ; preds = %78
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  call void @_ZdlPv(i8* %89) #13
  br label %90

90:                                               ; preds = %78, %87
  %91 = bitcast %"class.std::__1::basic_string"* %81 to i8*
  %92 = bitcast %"class.std::__1::basic_string"* %82 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 24, i1 false) #12
  %93 = bitcast %"class.std::__1::basic_string"* %82 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  store i8 0, i8* %94, align 1
  store i8 0, i8* %92, align 8
  %95 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %5, i64 0, i32 2
  %96 = load i16, i16* %95, align 8
  %97 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %3, i64 0, i32 2
  store i16 %96, i16* %97, align 8
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %5) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %6) #12
  %98 = load i8, i8* %61, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %90
  %101 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %101) #13
  br label %102

102:                                              ; preds = %90, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %58) #12
  br label %132

103:                                              ; preds = %53
  %104 = bitcast %"class.url::SchemeHostPort"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %104) #12
  call void @_ZN3url14SchemeHostPortC1ERK4GURL(%"class.url::SchemeHostPort"* nonnull %8, %class.GURL* dereferenceable(120) %1) #12
  %105 = bitcast %"class.url::SchemeHostPort"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %106 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %105, i64 0, i32 1, i32 0
  %107 = load i8, i8* %106, align 1
  %108 = icmp slt i8 %107, 0
  br i1 %108, label %109, label %112

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load i8*, i8** %110, align 8
  call void @_ZdlPv(i8* %111) #13
  br label %112

112:                                              ; preds = %109, %103
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %19, i8* nonnull align 8 %104, i64 24, i1 false) #12
  %113 = bitcast %"class.url::SchemeHostPort"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  store i8 0, i8* %114, align 1
  store i8 0, i8* %104, align 8
  %115 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %3, i64 0, i32 1
  %116 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %8, i64 0, i32 1
  %117 = bitcast %"class.std::__1::basic_string"* %115 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %124

121:                                              ; preds = %112
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %115, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  call void @_ZdlPv(i8* %123) #13
  br label %124

124:                                              ; preds = %112, %121
  %125 = bitcast %"class.std::__1::basic_string"* %115 to i8*
  %126 = bitcast %"class.std::__1::basic_string"* %116 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %125, i8* align 8 %126, i64 24, i1 false) #12
  %127 = bitcast %"class.std::__1::basic_string"* %116 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %128 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %127, i64 0, i32 1, i32 0
  store i8 0, i8* %128, align 1
  store i8 0, i8* %126, align 8
  %129 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %8, i64 0, i32 2
  %130 = load i16, i16* %129, align 8
  %131 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %3, i64 0, i32 2
  store i16 %130, i16* %131, align 8
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %8) #12
  br label %132

132:                                              ; preds = %102, %124, %45
  %133 = phi i8* [ %57, %102 ], [ %104, %124 ], [ %23, %45 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %133) #12
  %134 = call zeroext i1 @_ZNK3url14SchemeHostPort7IsValidEv(%"class.url::SchemeHostPort"* nonnull %3) #12
  br i1 %134, label %140, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0
  call void @_ZN3url14SchemeHostPortC1Ev(%"class.url::SchemeHostPort"* %136) #12
  %137 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %137, align 8
  %138 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %139 = bitcast %union.anon.1* %138 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %139, i8 0, i64 16, i1 false) #12
  br label %154

140:                                              ; preds = %132
  %141 = bitcast %"class.url::SchemeHostPort"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %141, i8* nonnull align 8 %19, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 0, i64 24, i1 false) #12
  %142 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %9, i64 0, i32 1
  %143 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %3, i64 0, i32 1
  %144 = bitcast %"class.std::__1::basic_string"* %142 to i8*
  %145 = bitcast %"class.std::__1::basic_string"* %143 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %145, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %145, i8 0, i64 24, i1 false) #12
  %146 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %9, i64 0, i32 2
  %147 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %3, i64 0, i32 2
  %148 = load i16, i16* %147, align 8
  store i16 %148, i16* %146, align 8
  %149 = bitcast %"class.url::Origin"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %149, i8* nonnull align 8 %141, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %141, i8 0, i64 24, i1 false) #12
  %150 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 1
  %151 = bitcast %"class.std::__1::basic_string"* %150 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %151, i8* align 8 %144, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %144, i8 0, i64 24, i1 false) #12
  %152 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 2
  store i16 %148, i16* %152, align 8
  %153 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %153, align 8
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %9) #12
  br label %154

154:                                              ; preds = %140, %135
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %19) #12
  br label %155

155:                                              ; preds = %154, %13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZN3url14SchemeHostPortC1ERK4GURL(%"class.url::SchemeHostPort"*, %class.GURL* dereferenceable(120)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"*) unnamed_addr #3

declare void @_ZNK4GURL10GetContentEv(%"class.std::__1::basic_string"* sret, %class.GURL*) local_unnamed_addr #1

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #3

declare zeroext i1 @_ZNK3url14SchemeHostPort7IsValidEv(%"class.url::SchemeHostPort"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url6Origin7ResolveERK4GURLRKS0_(%"class.url::Origin"* noalias sret, %class.GURL* dereferenceable(120), %"class.url::Origin"* nocapture dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.url::Origin", align 8
  %5 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kAboutSchemeE, i64 0, i64 0)) #12
  %6 = tail call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kAboutSchemeE, i64 0, i64 0), i64 %5) #12
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @_ZN3url6OriginC2ERKS0_(%"class.url::Origin"* %0, %"class.url::Origin"* dereferenceable(80) %2)
  br label %26

8:                                                ; preds = %3
  %9 = bitcast %"class.url::Origin"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %9) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 80, i1 false)
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %4, %class.GURL* dereferenceable(120) %1)
  %10 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %23

13:                                               ; preds = %8
  %14 = bitcast %"class.url::Origin"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* nonnull align 8 %9, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #12
  %15 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %4, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %18 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 24, i1 false) #12
  %19 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 2
  %20 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %4, i64 0, i32 0, i32 2
  %21 = load i16, i16* %20, align 8
  store i16 %21, i16* %19, align 8
  %22 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #12
  br label %24

23:                                               ; preds = %8
  call void @_ZNK3url6Origin21DeriveNewOpaqueOriginEv(%"class.url::Origin"* sret %0, %"class.url::Origin"* %2)
  br label %24

24:                                               ; preds = %23, %13
  %25 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %4, i64 0, i32 0
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %25) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %9) #12
  br label %26

26:                                               ; preds = %24, %7
  ret void
}

declare zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3url6Origin21DeriveNewOpaqueOriginEv(%"class.url::Origin"* noalias nocapture sret, %"class.url::Origin"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.url::SchemeHostPort", align 8
  %4 = bitcast %"class.url::Origin"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %11, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.url::SchemeHostPort"* %3 to i8*
  %10 = bitcast %"class.url::Origin"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %9, i8* align 8 %10, i64 24, i1 false) #12
  br label %17

11:                                               ; preds = %2
  %12 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %3, i64 0, i32 0
  %13 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %12, i8* %14, i64 %16) #12
  br label %17

17:                                               ; preds = %11, %8
  %18 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %3, i64 0, i32 1
  %19 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %19 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %17
  %25 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false) #12
  br label %33

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  %30 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %18, i8* %29, i64 %31) #12
  %32 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  br label %33

33:                                               ; preds = %27, %24
  %34 = phi i8* [ %32, %27 ], [ %25, %24 ]
  %35 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %3, i64 0, i32 2
  %36 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 2
  %37 = load i16, i16* %36, align 8
  store i16 %37, i16* %35, align 8
  %38 = bitcast %"class.url::Origin"* %0 to i8*
  %39 = bitcast %"class.url::SchemeHostPort"* %3 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* nonnull align 8 %39, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 24, i1 false) #12
  %40 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 1
  %41 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %34, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #12
  %42 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 2
  store i16 %37, i16* %42, align 8
  %43 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %43, align 8
  %44 = call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #12
  %45 = extractvalue { i64, i64 } %44, 0
  %46 = extractvalue { i64, i64 } %44, 1
  %47 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %45, i64* %47, align 8
  %48 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i64 %46, i64* %48, align 8
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url6OriginC2ERKS0_(%"class.url::Origin"*, %"class.url::Origin"* nocapture dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.url::Origin"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.url::Origin"* %0 to i8*
  %9 = bitcast %"class.url::Origin"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #12
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #12
  br label %16

16:                                               ; preds = %10, %7
  %17 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"* %18 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #12
  br label %31

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %17, i8* %28, i64 %30) #12
  br label %31

31:                                               ; preds = %23, %26
  %32 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 2
  %33 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 2
  %34 = load i16, i16* %33, align 8
  store i16 %34, i16* %32, align 8
  %35 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %36 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #12
  %37 = load i8, i8* %36, align 8, !range !2
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %56, label %39

39:                                               ; preds = %31
  %40 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %41 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %42 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %40, i64 0, i32 0, i32 0, i32 0
  %43 = load i64, i64* %42, align 8
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %45, label %53

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %49, label %53

49:                                               ; preds = %45
  %50 = tail call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #12
  %51 = extractvalue { i64, i64 } %50, 0
  %52 = extractvalue { i64, i64 } %50, 1
  store i64 %51, i64* %42, align 8
  store i64 %52, i64* %46, align 8
  br label %53

53:                                               ; preds = %49, %45, %39
  %54 = bitcast %"class.url::Origin::Nonce"* %41 to i8*
  %55 = bitcast %"class.url::Origin::Nonce"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %55, i64 16, i1 false) #12
  store i8 1, i8* %35, align 8
  br label %56

56:                                               ; preds = %31, %53
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSERKS0_(%"class.url::Origin"* returned, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0
  %5 = tail call dereferenceable(56) %"class.url::SchemeHostPort"* @_ZN3url14SchemeHostPortaSERKS0_(%"class.url::SchemeHostPort"* %3, %"class.url::SchemeHostPort"* dereferenceable(56) %4)
  %6 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %43, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %12 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  %15 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %16 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %11, i64 0, i32 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %14, label %31, label %19

19:                                               ; preds = %10
  br i1 %18, label %20, label %28

20:                                               ; preds = %19
  %21 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %20
  %25 = tail call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #12
  %26 = extractvalue { i64, i64 } %25, 0
  %27 = extractvalue { i64, i64 } %25, 1
  store i64 %26, i64* %16, align 8
  store i64 %27, i64* %21, align 8
  br label %28

28:                                               ; preds = %24, %20, %19
  %29 = bitcast %"class.url::Origin::Nonce"* %15 to i8*
  %30 = bitcast %"class.url::Origin::Nonce"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 16, i1 false) #12
  br label %45

31:                                               ; preds = %10
  br i1 %18, label %32, label %40

32:                                               ; preds = %31
  %33 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %40

36:                                               ; preds = %32
  %37 = tail call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #12
  %38 = extractvalue { i64, i64 } %37, 0
  %39 = extractvalue { i64, i64 } %37, 1
  store i64 %38, i64* %16, align 8
  store i64 %39, i64* %33, align 8
  br label %40

40:                                               ; preds = %36, %32, %31
  %41 = bitcast %"class.url::Origin::Nonce"* %15 to i8*
  %42 = bitcast %"class.url::Origin::Nonce"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %42, i64 16, i1 false) #12
  store i8 1, i8* %12, align 8
  br label %45

43:                                               ; preds = %2
  %44 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %44, align 8
  br label %45

45:                                               ; preds = %28, %40, %43
  ret %"class.url::Origin"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(56) %"class.url::SchemeHostPort"* @_ZN3url14SchemeHostPortaSERKS0_(%"class.url::SchemeHostPort"*, %"class.url::SchemeHostPort"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %0, i64 0, i32 0
  %4 = icmp eq %"class.url::SchemeHostPort"* %0, %1
  br i1 %4, label %65, label %5

5:                                                ; preds = %2
  %6 = bitcast %"class.url::SchemeHostPort"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %7 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %6, i64 0, i32 1, i32 0
  %8 = load i8, i8* %7, align 1
  %9 = icmp slt i8 %8, 0
  %10 = bitcast %"class.url::SchemeHostPort"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %11 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %10, i64 0, i32 1, i32 0
  %12 = load i8, i8* %11, align 1
  %13 = icmp slt i8 %12, 0
  br i1 %9, label %24, label %14

14:                                               ; preds = %5
  br i1 %13, label %18, label %15

15:                                               ; preds = %14
  %16 = bitcast %"class.url::SchemeHostPort"* %0 to i8*
  %17 = bitcast %"class.url::SchemeHostPort"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #12
  br label %34

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %20, i64 %22) #12
  br label %34

24:                                               ; preds = %5
  %25 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8*, i8** %25, align 8
  %27 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = bitcast %"class.url::SchemeHostPort"* %1 to i8*
  %30 = zext i8 %12 to i64
  %31 = select i1 %13, i8* %26, i8* %29
  %32 = select i1 %13, i64 %28, i64 %30
  %33 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %3, i8* %31, i64 %32) #12
  br label %34

34:                                               ; preds = %15, %18, %24
  %35 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %0, i64 0, i32 1
  %36 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %1, i64 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = bitcast %"class.std::__1::basic_string"* %36 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %40, label %55, label %45

45:                                               ; preds = %34
  br i1 %44, label %49, label %46

46:                                               ; preds = %45
  %47 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %48 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #12
  br label %65

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load i8*, i8** %50, align 8
  %52 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %35, i8* %51, i64 %53) #12
  br label %65

55:                                               ; preds = %34
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  %61 = zext i8 %43 to i64
  %62 = select i1 %44, i8* %57, i8* %60
  %63 = select i1 %44, i64 %59, i64 %61
  %64 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %35, i8* %62, i64 %63) #12
  br label %65

65:                                               ; preds = %2, %46, %49, %55
  %66 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %1, i64 0, i32 2
  %67 = load i16, i16* %66, align 8
  %68 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %0, i64 0, i32 2
  store i16 %67, i16* %68, align 8
  ret %"class.url::SchemeHostPort"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url6OriginC2EOS0_(%"class.url::Origin"* nocapture, %"class.url::Origin"* nocapture dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.url::Origin"* %0 to i8*
  %4 = bitcast %"class.url::Origin"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #12
  %5 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #12
  %9 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 2
  %11 = load i16, i16* %10, align 8
  store i16 %11, i16* %9, align 8
  %12 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #12
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %21, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = bitcast %"class.url::Origin::Nonce"* %18 to i8*
  %20 = bitcast %"class.url::Origin::Nonce"* %17 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %19, i8* align 8 %20, i64 16, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #12
  store i8 1, i8* %12, align 8
  br label %21

21:                                               ; preds = %2, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(80) %"class.url::Origin"* @_ZN3url6OriginaSEOS0_(%"class.url::Origin"* returned, %"class.url::Origin"* nocapture dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.url::Origin"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  tail call void @_ZdlPv(i8* %9) #13
  br label %10

10:                                               ; preds = %7, %2
  %11 = bitcast %"class.url::Origin"* %0 to i8*
  %12 = bitcast %"class.url::Origin"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %11, i8* align 8 %12, i64 24, i1 false) #12
  %13 = bitcast %"class.url::Origin"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  store i8 0, i8* %14, align 1
  store i8 0, i8* %12, align 1
  %15 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 1
  %16 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 1
  %17 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %20, label %21, label %24

21:                                               ; preds = %10
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  tail call void @_ZdlPv(i8* %23) #13
  br label %24

24:                                               ; preds = %10, %21
  %25 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false) #12
  %27 = bitcast %"class.std::__1::basic_string"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  store i8 0, i8* %28, align 1
  store i8 0, i8* %26, align 1
  %29 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 2
  %30 = load i16, i16* %29, align 8
  %31 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 2
  store i16 %30, i16* %31, align 8
  %32 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1
  %33 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %34 = load i8, i8* %33, align 8, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %45, label %36

36:                                               ; preds = %24
  %37 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %38 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  %41 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %42 = bitcast %"class.url::Origin::Nonce"* %41 to i8*
  %43 = bitcast %"class.url::Origin::Nonce"* %37 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 16, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false) #12
  br i1 %40, label %44, label %47

44:                                               ; preds = %36
  store i8 1, i8* %38, align 8
  br label %47

45:                                               ; preds = %24
  %46 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %32, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %46, align 8
  br label %47

47:                                               ; preds = %36, %44, %45
  ret %"class.url::Origin"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url6OriginD2Ev(%"class.url::Origin"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0
  tail call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* %2) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url6Origin45UnsafelyCreateTupleOriginWithoutNormalizationEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_t(%"class.absl::optional.5"* noalias nocapture sret, i8*, i64, i8*, i64, i16 zeroext) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.url::SchemeHostPort", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.url::Origin", align 8
  %11 = alloca %"class.url::SchemeHostPort", align 8
  %12 = bitcast %"class.url::SchemeHostPort"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %12) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 56, i1 false)
  %13 = icmp ugt i64 %2, -17
  br i1 %13, label %14, label %16

14:                                               ; preds = %6
  %15 = bitcast %"class.std::__1::basic_string"* %8 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %15) #14
  unreachable

16:                                               ; preds = %6
  %17 = icmp ult i64 %2, 23
  br i1 %17, label %26, label %18

18:                                               ; preds = %16
  %19 = add nuw i64 %2, 16
  %20 = and i64 %19, -16
  %21 = tail call i8* @_Znwm(i64 %20) #13
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %21, i8** %22, align 8, !alias.scope !3
  %23 = or i64 %20, -9223372036854775808
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %23, i64* %24, align 8, !alias.scope !3
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2, i64* %25, align 8, !alias.scope !3
  br label %32

26:                                               ; preds = %16
  %27 = trunc i64 %2 to i8
  %28 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 %27, i8* %29, align 1, !alias.scope !3
  %30 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %31 = icmp eq i64 %2, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %26, %18
  %33 = phi i8* [ %21, %18 ], [ %30, %26 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %33, i8* align 1 %1, i64 %2, i1 false) #12
  br label %34

34:                                               ; preds = %26, %32
  %35 = phi i8* [ %30, %26 ], [ %33, %32 ]
  %36 = getelementptr inbounds i8, i8* %35, i64 %2
  store i8 0, i8* %36, align 1
  %37 = icmp ugt i64 %4, -17
  br i1 %37, label %38, label %40

38:                                               ; preds = %34
  %39 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %39) #14
  unreachable

40:                                               ; preds = %34
  %41 = icmp ult i64 %4, 23
  br i1 %41, label %51, label %42

42:                                               ; preds = %40
  %43 = add nuw i64 %4, 16
  %44 = and i64 %43, -16
  %45 = tail call i8* @_Znwm(i64 %44) #13
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %45, i8** %46, align 8, !alias.scope !6
  %47 = or i64 %44, -9223372036854775808
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %47, i64* %48, align 8, !alias.scope !6
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %4, i64* %49, align 8, !alias.scope !6
  %50 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %57

51:                                               ; preds = %40
  %52 = trunc i64 %4 to i8
  %53 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  store i8 %52, i8* %54, align 1, !alias.scope !6
  %55 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %56 = icmp eq i64 %4, 0
  br i1 %56, label %60, label %57

57:                                               ; preds = %51, %42
  %58 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %53, %51 ], [ %50, %42 ]
  %59 = phi i8* [ %55, %51 ], [ %45, %42 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %59, i8* align 1 %3, i64 %4, i1 false) #12
  br label %60

60:                                               ; preds = %51, %57
  %61 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %53, %51 ], [ %58, %57 ]
  %62 = phi i8* [ %55, %51 ], [ %59, %57 ]
  %63 = getelementptr inbounds i8, i8* %62, i64 %4
  store i8 0, i8* %63, align 1
  call void @_ZN3url14SchemeHostPortC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_tNS0_15ConstructPolicyE(%"class.url::SchemeHostPort"* nonnull %7, %"class.std::__1::basic_string"* nonnull %8, %"class.std::__1::basic_string"* nonnull %9, i16 zeroext %5, i32 0) #12
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %70

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8*, i8** %68, align 8
  call void @_ZdlPv(i8* %69) #13
  br label %70

70:                                               ; preds = %60, %67
  %71 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  call void @_ZdlPv(i8* %77) #13
  br label %78

78:                                               ; preds = %70, %75
  %79 = call zeroext i1 @_ZNK3url14SchemeHostPort7IsValidEv(%"class.url::SchemeHostPort"* nonnull %7) #12
  br i1 %79, label %83, label %80

80:                                               ; preds = %78
  %81 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %82 = bitcast %union.anon.9* %81 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 80, i1 false) #12
  br label %104

83:                                               ; preds = %78
  %84 = bitcast %"class.url::Origin"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %84) #12
  %85 = bitcast %"class.url::SchemeHostPort"* %11 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %85, i8* nonnull align 8 %12, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 24, i1 false) #12
  %86 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %11, i64 0, i32 1
  %87 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %7, i64 0, i32 1
  %88 = bitcast %"class.std::__1::basic_string"* %86 to i8*
  %89 = bitcast %"class.std::__1::basic_string"* %87 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %88, i8* align 8 %89, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #12
  %90 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %11, i64 0, i32 2
  %91 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %7, i64 0, i32 2
  %92 = load i16, i16* %91, align 8
  store i16 %92, i16* %90, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %84, i8* nonnull align 8 %85, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 24, i1 false) #12
  %93 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %10, i64 0, i32 0, i32 1
  %94 = bitcast %"class.std::__1::basic_string"* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %88, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 24, i1 false) #12
  %95 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %10, i64 0, i32 0, i32 2
  store i16 %92, i16* %95, align 8
  %96 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %96, align 8
  %97 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %98 = bitcast %"class.url::Origin"* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* nonnull align 8 %84, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 24, i1 false) #12
  %99 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %100 = bitcast %"class.std::__1::basic_string"* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %94, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %94, i8 0, i64 24, i1 false) #12
  %101 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2
  store i16 %92, i16* %101, align 8
  %102 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 24, i1 false) #12
  %103 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %10, i64 0, i32 0
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %103) #12
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %84) #12
  br label %104

104:                                              ; preds = %83, %80
  %105 = phi i8 [ 1, %83 ], [ 0, %80 ]
  %106 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 %105, i8* %106, align 8
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %12) #12
  ret void
}

declare void @_ZN3url14SchemeHostPortC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_tNS0_15ConstructPolicyE(%"class.url::SchemeHostPort"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, i16 zeroext, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url6Origin46UnsafelyCreateOpaqueOriginWithoutNormalizationEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES6_tRKNS0_5NonceE(%"class.absl::optional.5"* noalias nocapture sret, i8*, i64, i8*, i64, i16 zeroext, %"class.url::Origin::Nonce"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.url::SchemeHostPort", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.url::Origin", align 8
  %12 = alloca %"class.url::SchemeHostPort", align 8
  %13 = bitcast %"class.url::SchemeHostPort"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %13) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 56, i1 false)
  %14 = icmp ugt i64 %2, -17
  br i1 %14, label %15, label %17

15:                                               ; preds = %7
  %16 = bitcast %"class.std::__1::basic_string"* %9 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %16) #14
  unreachable

17:                                               ; preds = %7
  %18 = icmp ult i64 %2, 23
  br i1 %18, label %27, label %19

19:                                               ; preds = %17
  %20 = add nuw i64 %2, 16
  %21 = and i64 %20, -16
  %22 = tail call i8* @_Znwm(i64 %21) #13
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %22, i8** %23, align 8, !alias.scope !9
  %24 = or i64 %21, -9223372036854775808
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %24, i64* %25, align 8, !alias.scope !9
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %2, i64* %26, align 8, !alias.scope !9
  br label %33

27:                                               ; preds = %17
  %28 = trunc i64 %2 to i8
  %29 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %30 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %29, i64 0, i32 1, i32 0
  store i8 %28, i8* %30, align 1, !alias.scope !9
  %31 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %32 = icmp eq i64 %2, 0
  br i1 %32, label %35, label %33

33:                                               ; preds = %27, %19
  %34 = phi i8* [ %22, %19 ], [ %31, %27 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %34, i8* align 1 %1, i64 %2, i1 false) #12
  br label %35

35:                                               ; preds = %27, %33
  %36 = phi i8* [ %31, %27 ], [ %34, %33 ]
  %37 = getelementptr inbounds i8, i8* %36, i64 %2
  store i8 0, i8* %37, align 1
  %38 = icmp ugt i64 %4, -17
  br i1 %38, label %39, label %41

39:                                               ; preds = %35
  %40 = bitcast %"class.std::__1::basic_string"* %10 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %40) #14
  unreachable

41:                                               ; preds = %35
  %42 = icmp ult i64 %4, 23
  br i1 %42, label %52, label %43

43:                                               ; preds = %41
  %44 = add nuw i64 %4, 16
  %45 = and i64 %44, -16
  %46 = tail call i8* @_Znwm(i64 %45) #13
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %46, i8** %47, align 8, !alias.scope !12
  %48 = or i64 %45, -9223372036854775808
  %49 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %48, i64* %49, align 8, !alias.scope !12
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %4, i64* %50, align 8, !alias.scope !12
  %51 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %58

52:                                               ; preds = %41
  %53 = trunc i64 %4 to i8
  %54 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  store i8 %53, i8* %55, align 1, !alias.scope !12
  %56 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %57 = icmp eq i64 %4, 0
  br i1 %57, label %61, label %58

58:                                               ; preds = %52, %43
  %59 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %54, %52 ], [ %51, %43 ]
  %60 = phi i8* [ %56, %52 ], [ %46, %43 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %60, i8* align 1 %3, i64 %4, i1 false) #12
  br label %61

61:                                               ; preds = %52, %58
  %62 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %54, %52 ], [ %59, %58 ]
  %63 = phi i8* [ %56, %52 ], [ %60, %58 ]
  %64 = getelementptr inbounds i8, i8* %63, i64 %4
  store i8 0, i8* %64, align 1
  call void @_ZN3url14SchemeHostPortC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_tNS0_15ConstructPolicyE(%"class.url::SchemeHostPort"* nonnull %8, %"class.std::__1::basic_string"* nonnull %9, %"class.std::__1::basic_string"* nonnull %10, i16 zeroext %5, i32 0) #12
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  br i1 %67, label %68, label %71

68:                                               ; preds = %61
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load i8*, i8** %69, align 8
  call void @_ZdlPv(i8* %70) #13
  br label %71

71:                                               ; preds = %61, %68
  %72 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  call void @_ZdlPv(i8* %78) #13
  br label %79

79:                                               ; preds = %71, %76
  %80 = call zeroext i1 @_ZNK3url14SchemeHostPort7IsValidEv(%"class.url::SchemeHostPort"* nonnull %8) #12
  br i1 %80, label %91, label %81

81:                                               ; preds = %79
  %82 = icmp eq i64 %2, 0
  br i1 %82, label %83, label %87

83:                                               ; preds = %81
  %84 = icmp eq i64 %4, 0
  %85 = icmp eq i16 %5, 0
  %86 = and i1 %84, %85
  br i1 %86, label %91, label %87

87:                                               ; preds = %83, %81
  %88 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %88, align 8
  %89 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %90 = bitcast %union.anon.9* %89 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 80, i1 false) #12
  br label %137

91:                                               ; preds = %83, %79
  %92 = bitcast %"class.url::Origin"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %92) #12
  %93 = bitcast %"class.url::SchemeHostPort"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %93, i8* nonnull align 8 %13, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #12
  %94 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %12, i64 0, i32 1
  %95 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %8, i64 0, i32 1
  %96 = bitcast %"class.std::__1::basic_string"* %94 to i8*
  %97 = bitcast %"class.std::__1::basic_string"* %95 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %96, i8* align 8 %97, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 24, i1 false) #12
  %98 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %12, i64 0, i32 2
  %99 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %8, i64 0, i32 2
  %100 = load i16, i16* %99, align 8
  store i16 %100, i16* %98, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %92, i8* nonnull align 8 %93, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 0, i64 24, i1 false) #12
  %101 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %11, i64 0, i32 0, i32 1
  %102 = bitcast %"class.std::__1::basic_string"* %101 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %102, i8* align 8 %96, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %96, i8 0, i64 24, i1 false) #12
  %103 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %11, i64 0, i32 0, i32 2
  store i16 %100, i16* %103, align 8
  %104 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %104, align 8
  %105 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %106 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %6, i64 0, i32 0, i32 0, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = icmp eq i64 %107, 0
  br i1 %108, label %109, label %120

109:                                              ; preds = %91
  %110 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %6, i64 0, i32 0, i32 0, i32 1
  %111 = load i64, i64* %110, align 8
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %120

113:                                              ; preds = %109
  %114 = call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #12
  %115 = extractvalue { i64, i64 } %114, 0
  %116 = extractvalue { i64, i64 } %114, 1
  store i64 %115, i64* %106, align 8
  store i64 %116, i64* %110, align 8
  %117 = load i16, i16* %103, align 8
  %118 = load i8, i8* %104, align 8, !range !2
  %119 = icmp eq i8 %118, 0
  br label %120

120:                                              ; preds = %91, %109, %113
  %121 = phi i1 [ false, %91 ], [ false, %109 ], [ %119, %113 ]
  %122 = phi i16 [ %100, %91 ], [ %100, %109 ], [ %117, %113 ]
  %123 = bitcast %"class.url::Origin::Nonce"* %105 to i8*
  %124 = bitcast %"class.url::Origin::Nonce"* %6 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %123, i8* align 8 %124, i64 16, i1 false) #12
  %125 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %125, align 8
  %126 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %127 = bitcast %"class.url::Origin"* %126 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %127, i8* nonnull align 8 %92, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 0, i64 24, i1 false) #12
  %128 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %129 = bitcast %"class.std::__1::basic_string"* %128 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %129, i8* align 8 %102, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %102, i8 0, i64 24, i1 false) #12
  %130 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2
  store i16 %122, i16* %130, align 8
  %131 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %131, i8 0, i64 24, i1 false) #12
  br i1 %121, label %135, label %132

132:                                              ; preds = %120
  %133 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %134 = bitcast %"class.url::Origin::Nonce"* %133 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %134, i8* align 8 %123, i64 16, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %123, i8 0, i64 16, i1 false) #12
  store i8 1, i8* %131, align 8
  br label %135

135:                                              ; preds = %120, %132
  %136 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %11, i64 0, i32 0
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %136) #12
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %92) #12
  br label %137

137:                                              ; preds = %135, %87
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %13) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url6Origin25CreateFromNormalizedTupleENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_t(%"class.url::Origin"* noalias sret, %"class.std::__1::basic_string"* nocapture, %"class.std::__1::basic_string"* nocapture, i16 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.url::SchemeHostPort", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.url::SchemeHostPort", align 8
  %9 = bitcast %"class.url::SchemeHostPort"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %9) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 56, i1 false)
  %10 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %11 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %11, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #12
  %12 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %13 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 %13, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #12
  call void @_ZN3url14SchemeHostPortC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_tNS0_15ConstructPolicyE(%"class.url::SchemeHostPort"* nonnull %5, %"class.std::__1::basic_string"* nonnull %6, %"class.std::__1::basic_string"* nonnull %7, i16 zeroext %3, i32 1) #12
  %14 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %4, %18
  %22 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %21
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @_ZdlPv(i8* %28) #13
  br label %29

29:                                               ; preds = %21, %26
  %30 = call zeroext i1 @_ZNK3url14SchemeHostPort7IsValidEv(%"class.url::SchemeHostPort"* nonnull %5) #12
  br i1 %30, label %36, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0
  call void @_ZN3url14SchemeHostPortC1Ev(%"class.url::SchemeHostPort"* %32) #12
  %33 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %33, align 8
  %34 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %35 = bitcast %union.anon.1* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #12
  br label %50

36:                                               ; preds = %29
  %37 = bitcast %"class.url::SchemeHostPort"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %37, i8* nonnull align 8 %9, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #12
  %38 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %8, i64 0, i32 1
  %39 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %5, i64 0, i32 1
  %40 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  %41 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #12
  %42 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %8, i64 0, i32 2
  %43 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %5, i64 0, i32 2
  %44 = load i16, i16* %43, align 8
  store i16 %44, i16* %42, align 8
  %45 = bitcast %"class.url::Origin"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %45, i8* nonnull align 8 %37, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %37, i8 0, i64 24, i1 false) #12
  %46 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 1
  %47 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %40, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #12
  %48 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 2
  store i16 %44, i16* %48, align 8
  %49 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %49, align 8
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %8) #12
  br label %50

50:                                               ; preds = %36, %31
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %9) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url6Origin40CreateOpaqueFromNormalizedPrecursorTupleENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_tRKNS0_5NonceE(%"class.url::Origin"* noalias nocapture sret, %"class.std::__1::basic_string"* nocapture, %"class.std::__1::basic_string"* nocapture, i16 zeroext, %"class.url::Origin::Nonce"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.url::SchemeHostPort", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.url::SchemeHostPort", align 8
  %10 = bitcast %"class.url::SchemeHostPort"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %10) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 56, i1 false)
  %11 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %11, i8* align 8 %12, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %12, i8 0, i64 24, i1 false) #12
  %13 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %13, i8* align 8 %14, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #12
  call void @_ZN3url14SchemeHostPortC1ENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES7_tNS0_15ConstructPolicyE(%"class.url::SchemeHostPort"* nonnull %6, %"class.std::__1::basic_string"* nonnull %7, %"class.std::__1::basic_string"* nonnull %8, i16 zeroext %3, i32 1) #12
  %15 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  call void @_ZdlPv(i8* %21) #13
  br label %22

22:                                               ; preds = %5, %19
  %23 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %29) #13
  br label %30

30:                                               ; preds = %22, %27
  %31 = bitcast %"class.url::SchemeHostPort"* %9 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %31, i8* nonnull align 8 %10, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 24, i1 false) #12
  %32 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %9, i64 0, i32 1
  %33 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %6, i64 0, i32 1
  %34 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %35 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #12
  %36 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %9, i64 0, i32 2
  %37 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %6, i64 0, i32 2
  %38 = load i16, i16* %37, align 8
  store i16 %38, i16* %36, align 8
  %39 = bitcast %"class.url::Origin"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %39, i8* nonnull align 8 %31, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 0, i64 24, i1 false) #12
  %40 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 1
  %41 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %41, i8* align 8 %34, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 24, i1 false) #12
  %42 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 2
  store i16 %38, i16* %42, align 8
  %43 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %43, align 8
  %44 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %45 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %4, i64 0, i32 0, i32 0, i32 0
  %46 = load i64, i64* %45, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %56

48:                                               ; preds = %30
  %49 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %4, i64 0, i32 0, i32 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %48
  %53 = call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #12
  %54 = extractvalue { i64, i64 } %53, 0
  %55 = extractvalue { i64, i64 } %53, 1
  store i64 %54, i64* %45, align 8
  store i64 %55, i64* %49, align 8
  br label %56

56:                                               ; preds = %30, %48, %52
  %57 = bitcast %"class.url::Origin::Nonce"* %44 to i8*
  %58 = bitcast %"class.url::Origin::Nonce"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %57, i8* align 8 %58, i64 16, i1 false) #12
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %9) #12
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %10) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3url6Origin9SerializeEv(%"class.std::__1::basic_string"* noalias sret, %"class.url::Origin"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  store i8 4, i8* %8, align 1
  %9 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %10 = bitcast %"class.std::__1::basic_string"* %0 to i32*
  store i32 1819047278, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %9, i64 4
  store i8 0, i8* %11, align 4
  br label %34

12:                                               ; preds = %2
  %13 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #12
  %14 = bitcast %"class.url::Origin"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %19, i64 %20
  %22 = icmp eq i64 %13, %21
  br i1 %22, label %23, label %32

23:                                               ; preds = %12
  %24 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 0
  %25 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %24, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0), i64 %13) #12
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %27, label %32

27:                                               ; preds = %23
  %28 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  store i8 7, i8* %29, align 1
  %30 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #12
  %31 = getelementptr inbounds i8, i8* %30, i64 7
  store i8 0, i8* %31, align 1
  br label %34

32:                                               ; preds = %12, %23
  %33 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0
  tail call void @_ZNK3url14SchemeHostPort9SerializeEv(%"class.std::__1::basic_string"* sret %0, %"class.url::SchemeHostPort"* %33) #12
  br label %34

34:                                               ; preds = %32, %27, %6
  ret void
}

declare void @_ZNK3url14SchemeHostPort9SerializeEv(%"class.std::__1::basic_string"* sret, %"class.url::SchemeHostPort"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3url6Origin6GetURLEv(%class.GURL* noalias sret, %"class.url::Origin"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN4GURLC1Ev(%class.GURL* %0) #12
  br label %25

7:                                                ; preds = %2
  %8 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #12
  %9 = bitcast %"class.url::Origin"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %11 to i64
  %16 = select i1 %12, i64 %14, i64 %15
  %17 = icmp eq i64 %8, %16
  br i1 %17, label %18, label %23

18:                                               ; preds = %7
  %19 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 0
  %20 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %19, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0), i64 %8) #12
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %23

22:                                               ; preds = %18
  tail call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %0, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i64 8) #12
  br label %25

23:                                               ; preds = %7, %18
  %24 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0
  tail call void @_ZNK3url14SchemeHostPort6GetURLEv(%class.GURL* sret %0, %"class.url::SchemeHostPort"* %24) #12
  br label %25

25:                                               ; preds = %23, %22, %6
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #1

declare void @_ZNK3url14SchemeHostPort6GetURLEv(%class.GURL* sret, %"class.url::SchemeHostPort"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3url6Origin24GetNonceForSerializationEv(%"class.absl::optional.10"* noalias nocapture sret, %"class.url::Origin"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %24, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %7, i64 0, i32 0, i32 0, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %19

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %15, label %19

15:                                               ; preds = %11
  %16 = tail call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #12
  %17 = extractvalue { i64, i64 } %16, 0
  %18 = extractvalue { i64, i64 } %16, 1
  store i64 %17, i64* %8, align 8
  store i64 %18, i64* %12, align 8
  br label %19

19:                                               ; preds = %6, %11, %15
  %20 = getelementptr inbounds %"class.absl::optional.10", %"class.absl::optional.10"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %20, align 8, !alias.scope !15
  %21 = getelementptr inbounds %"class.absl::optional.10", %"class.absl::optional.10"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %22 = bitcast %"class.base::UnguessableToken"* %21 to i8*
  %23 = bitcast %"class.url::Origin::Nonce"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 16, i1 false) #12
  br label %26

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.absl::optional.10", %"class.absl::optional.10"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %25, align 8
  br label %26

26:                                               ; preds = %24, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.base::UnguessableToken"* @_ZNK3url6Origin5Nonce5tokenEv(%"class.url::Origin::Nonce"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %0, i64 0, i32 0
  %3 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = tail call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #12
  %12 = extractvalue { i64, i64 } %11, 0
  %13 = extractvalue { i64, i64 } %11, 1
  store i64 %12, i64* %3, align 8
  store i64 %13, i64* %7, align 8
  br label %14

14:                                               ; preds = %1, %10, %6
  ret %"class.base::UnguessableToken"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3url6Origin16IsSameOriginWithERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0
  %5 = tail call zeroext i1 @_ZNK3url14SchemeHostPorteqERKS0_(%"class.url::SchemeHostPort"* %3, %"class.url::SchemeHostPort"* dereferenceable(56) %4) #12
  br i1 %5, label %6, label %37

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i8, i8* %7, align 8, !range !2
  %9 = icmp ne i8 %8, 0
  %10 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 8, !range !2
  %12 = icmp ne i8 %11, 0
  %13 = xor i1 %9, %12
  %14 = xor i1 %9, true
  %15 = or i1 %13, %14
  %16 = xor i1 %13, true
  br i1 %15, label %37, label %17

17:                                               ; preds = %6
  %18 = icmp eq i8 %11, 0
  br i1 %18, label %19, label %20, !prof !18

19:                                               ; preds = %17
  tail call void @llvm.trap() #12
  unreachable

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %22, %24
  br i1 %25, label %26, label %37

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = icmp eq i64 %28, %30
  br i1 %31, label %32, label %37

32:                                               ; preds = %26
  %33 = or i64 %28, %22
  %34 = icmp ne i64 %33, 0
  %35 = icmp eq %"class.url::Origin"* %1, %0
  %36 = or i1 %35, %34
  br label %37

37:                                               ; preds = %2, %6, %20, %26, %32
  %38 = phi i1 [ false, %2 ], [ %16, %6 ], [ false, %26 ], [ %36, %32 ], [ false, %20 ]
  ret i1 %38
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3url6Origin16CanBeDerivedFromERK4GURL(%"class.url::Origin"*, %class.GURL* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::allocator", align 1
  %4 = alloca %"class.std::__1::allocator", align 1
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.url::SchemeHostPort", align 8
  %7 = alloca %"class.url::SchemeHostPort", align 8
  %8 = alloca %"class.url::SchemeHostPort", align 8
  %9 = alloca %"class.url::SchemeHostPort", align 8
  %10 = alloca %class.GURL, align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = tail call dereferenceable(24) %"class.std::__1::vector"* @_ZN3url18GetNoAccessSchemesEv() #12
  %14 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #12
  %15 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 0, i32 1
  %16 = load i32, i32* %15, align 4, !noalias !19
  %17 = icmp slt i32 %16, 1
  br i1 %17, label %18, label %19

18:                                               ; preds = %2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 0, i64 24, i1 false) #12, !alias.scope !19
  br label %26

19:                                               ; preds = %2
  %20 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0
  %21 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 0, i32 0
  %22 = load i32, i32* %21, align 4, !noalias !19
  %23 = sext i32 %22 to i64
  %24 = sext i32 %16 to i64
  %25 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %25) #12, !noalias !19
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %5, %"class.std::__1::basic_string"* dereferenceable(24) %20, i64 %23, i64 %24, %"class.std::__1::allocator"* nonnull dereferenceable(1) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %25) #12, !noalias !19
  br label %26

26:                                               ; preds = %18, %19
  %27 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 0
  %28 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %27, align 8
  %29 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %13, i64 0, i32 0, i32 1
  %30 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  %31 = icmp eq %"class.std::__1::basic_string"* %28, %30
  br i1 %31, label %86, label %32

32:                                               ; preds = %26
  %33 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = zext i8 %35 to i64
  %40 = select i1 %36, i64 %38, i64 %39
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = select i1 %36, i8* %42, i8* %14
  %44 = icmp eq i64 %40, 0
  br label %45

45:                                               ; preds = %83, %32
  %46 = phi %"class.std::__1::basic_string"* [ %28, %32 ], [ %84, %83 ]
  %47 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %48 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %49 = load i8, i8* %48, align 1
  %50 = icmp slt i8 %49, 0
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = zext i8 %49 to i64
  %54 = select i1 %50, i64 %52, i64 %53
  %55 = icmp eq i64 %54, %40
  br i1 %55, label %56, label %83

56:                                               ; preds = %45
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  %60 = select i1 %50, i8* %58, i8* %59
  br i1 %50, label %67, label %61

61:                                               ; preds = %56
  br i1 %44, label %86, label %62

62:                                               ; preds = %61
  %63 = ptrtoint i8* %58 to i64
  %64 = trunc i64 %63 to i8
  %65 = load i8, i8* %43, align 1
  %66 = icmp eq i8 %65, %64
  br i1 %66, label %68, label %83

67:                                               ; preds = %56
  br i1 %44, label %86, label %80

68:                                               ; preds = %62, %75
  %69 = phi i64 [ %72, %75 ], [ %53, %62 ]
  %70 = phi i8* [ %73, %75 ], [ %59, %62 ]
  %71 = phi i8* [ %76, %75 ], [ %43, %62 ]
  %72 = add i64 %69, -1
  %73 = getelementptr inbounds i8, i8* %70, i64 1
  %74 = icmp eq i64 %72, 0
  br i1 %74, label %86, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds i8, i8* %71, i64 1
  %77 = load i8, i8* %73, align 1
  %78 = load i8, i8* %76, align 1
  %79 = icmp eq i8 %77, %78
  br i1 %79, label %68, label %83

80:                                               ; preds = %67
  %81 = call i32 @bcmp(i8* %60, i8* %43, i64 %40) #12
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %75, %80, %62, %45
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 1
  %85 = icmp eq %"class.std::__1::basic_string"* %84, %30
  br i1 %85, label %111, label %45

86:                                               ; preds = %61, %67, %80, %68, %26
  %87 = phi %"class.std::__1::basic_string"* [ %28, %26 ], [ %46, %68 ], [ %46, %80 ], [ %46, %67 ], [ %46, %61 ]
  %88 = icmp eq %"class.std::__1::basic_string"* %87, %30
  br i1 %88, label %89, label %93

89:                                               ; preds = %86
  %90 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  br label %111

93:                                               ; preds = %86
  %94 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kAboutSchemeE, i64 0, i64 0)) #12
  %95 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kAboutSchemeE, i64 0, i64 0), i64 %94) #12
  %96 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %97 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %96, i64 0, i32 1, i32 0
  %98 = load i8, i8* %97, align 1
  %99 = icmp slt i8 %98, 0
  br i1 %99, label %100, label %103

100:                                              ; preds = %93
  %101 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load i8*, i8** %101, align 8
  call void @_ZdlPv(i8* %102) #13
  br label %103

103:                                              ; preds = %93, %100
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  br i1 %95, label %118, label %104

104:                                              ; preds = %103
  %105 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %106 = load i8, i8* %105, align 8, !range !2
  %107 = icmp eq i8 %106, 0
  br i1 %107, label %328, label %108

108:                                              ; preds = %104
  %109 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0
  %110 = call zeroext i1 @_ZNK3url14SchemeHostPort7IsValidEv(%"class.url::SchemeHostPort"* %109) #12
  br i1 %110, label %118, label %328

111:                                              ; preds = %83, %89
  %112 = phi i8 [ %92, %89 ], [ %35, %83 ]
  %113 = icmp slt i8 %112, 0
  br i1 %113, label %114, label %117

114:                                              ; preds = %111
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  call void @_ZdlPv(i8* %116) #13
  br label %117

117:                                              ; preds = %111, %114
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #12
  br label %118

118:                                              ; preds = %103, %108, %117
  %119 = bitcast %"class.url::SchemeHostPort"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %119) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %119, i8 -86, i64 56, i1 false)
  call void @_ZN3url14SchemeHostPortC1Ev(%"class.url::SchemeHostPort"* nonnull %6) #12
  %120 = call zeroext i1 @_ZNK4GURL10IsStandardEv(%class.GURL* %1) #12
  br i1 %120, label %121, label %186

121:                                              ; preds = %118
  %122 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kFileSystemSchemeE, i64 0, i64 0)) #12
  %123 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url17kFileSystemSchemeE, i64 0, i64 0), i64 %122) #12
  br i1 %123, label %124, label %150

124:                                              ; preds = %121
  %125 = bitcast %"class.url::SchemeHostPort"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %125) #12
  %126 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %127 = load %class.GURL*, %class.GURL** %126, align 8
  call void @_ZN3url14SchemeHostPortC1ERK4GURL(%"class.url::SchemeHostPort"* nonnull %7, %class.GURL* dereferenceable(120) %127) #12
  %128 = bitcast %"class.url::SchemeHostPort"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %128, i64 0, i32 1, i32 0
  %130 = load i8, i8* %129, align 1
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %132, label %135

132:                                              ; preds = %124
  %133 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  call void @_ZdlPv(i8* %134) #13
  br label %135

135:                                              ; preds = %132, %124
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %119, i8* nonnull align 8 %125, i64 24, i1 false) #12
  %136 = bitcast %"class.url::SchemeHostPort"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %137 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %136, i64 0, i32 1, i32 0
  store i8 0, i8* %137, align 1
  store i8 0, i8* %125, align 8
  %138 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %6, i64 0, i32 1
  %139 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %7, i64 0, i32 1
  %140 = bitcast %"class.std::__1::basic_string"* %138 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %141 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %140, i64 0, i32 1, i32 0
  %142 = load i8, i8* %141, align 1
  %143 = icmp slt i8 %142, 0
  br i1 %143, label %144, label %147

144:                                              ; preds = %135
  %145 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %138, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %146 = load i8*, i8** %145, align 8
  call void @_ZdlPv(i8* %146) #13
  br label %147

147:                                              ; preds = %135, %144
  %148 = bitcast %"class.std::__1::basic_string"* %138 to i8*
  %149 = bitcast %"class.std::__1::basic_string"* %139 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %148, i8* align 8 %149, i64 24, i1 false) #12
  br label %174

150:                                              ; preds = %121
  %151 = bitcast %"class.url::SchemeHostPort"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %151) #12
  call void @_ZN3url14SchemeHostPortC1ERK4GURL(%"class.url::SchemeHostPort"* nonnull %8, %class.GURL* dereferenceable(120) %1) #12
  %152 = bitcast %"class.url::SchemeHostPort"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %153 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %152, i64 0, i32 1, i32 0
  %154 = load i8, i8* %153, align 1
  %155 = icmp slt i8 %154, 0
  br i1 %155, label %156, label %159

156:                                              ; preds = %150
  %157 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load i8*, i8** %157, align 8
  call void @_ZdlPv(i8* %158) #13
  br label %159

159:                                              ; preds = %156, %150
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %119, i8* nonnull align 8 %151, i64 24, i1 false) #12
  %160 = bitcast %"class.url::SchemeHostPort"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %161 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %160, i64 0, i32 1, i32 0
  store i8 0, i8* %161, align 1
  store i8 0, i8* %151, align 8
  %162 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %6, i64 0, i32 1
  %163 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %8, i64 0, i32 1
  %164 = bitcast %"class.std::__1::basic_string"* %162 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %165 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %164, i64 0, i32 1, i32 0
  %166 = load i8, i8* %165, align 1
  %167 = icmp slt i8 %166, 0
  br i1 %167, label %168, label %171

168:                                              ; preds = %159
  %169 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %162, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %170 = load i8*, i8** %169, align 8
  call void @_ZdlPv(i8* %170) #13
  br label %171

171:                                              ; preds = %159, %168
  %172 = bitcast %"class.std::__1::basic_string"* %162 to i8*
  %173 = bitcast %"class.std::__1::basic_string"* %163 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %172, i8* align 8 %173, i64 24, i1 false) #12
  br label %174

174:                                              ; preds = %171, %147
  %175 = phi %"class.std::__1::basic_string"* [ %163, %171 ], [ %139, %147 ]
  %176 = phi i8* [ %173, %171 ], [ %149, %147 ]
  %177 = phi %"class.url::SchemeHostPort"* [ %8, %171 ], [ %7, %147 ]
  %178 = phi i8* [ %151, %171 ], [ %125, %147 ]
  %179 = bitcast %"class.std::__1::basic_string"* %175 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %180 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %179, i64 0, i32 1, i32 0
  store i8 0, i8* %180, align 1
  store i8 0, i8* %176, align 8
  %181 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %177, i64 0, i32 2
  %182 = load i16, i16* %181, align 8
  %183 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %6, i64 0, i32 2
  store i16 %182, i16* %183, align 8
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %177) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %178) #12
  %184 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0
  %185 = call zeroext i1 @_ZNK3url14SchemeHostPorteqERKS0_(%"class.url::SchemeHostPort"* nonnull %6, %"class.url::SchemeHostPort"* dereferenceable(56) %184)
  br label %326

186:                                              ; preds = %118
  %187 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kBlobSchemeE, i64 0, i64 0)) #12
  %188 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kBlobSchemeE, i64 0, i64 0), i64 %187) #12
  br i1 %188, label %189, label %240

189:                                              ; preds = %186
  %190 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0
  %191 = call zeroext i1 @_ZNK3url14SchemeHostPort7IsValidEv(%"class.url::SchemeHostPort"* %190) #12
  br i1 %191, label %192, label %326

192:                                              ; preds = %189
  %193 = bitcast %"class.url::SchemeHostPort"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %193) #12
  %194 = bitcast %class.GURL* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %194) #12
  %195 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %195) #12
  call void @_ZNK4GURL10GetContentEv(%"class.std::__1::basic_string"* nonnull sret %11, %class.GURL* %1) #12
  %196 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %197 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %196, i64 0, i32 1, i32 0
  %198 = load i8, i8* %197, align 1
  %199 = icmp slt i8 %198, 0
  %200 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load i8*, i8** %200, align 8
  %202 = select i1 %199, i8* %201, i8* %195
  %203 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %204 = load i64, i64* %203, align 8
  %205 = zext i8 %198 to i64
  %206 = select i1 %199, i64 %204, i64 %205
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %10, i8* %202, i64 %206) #12
  call void @_ZN3url14SchemeHostPortC1ERK4GURL(%"class.url::SchemeHostPort"* nonnull %9, %class.GURL* nonnull dereferenceable(120) %10) #12
  %207 = bitcast %"class.url::SchemeHostPort"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %208 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %207, i64 0, i32 1, i32 0
  %209 = load i8, i8* %208, align 1
  %210 = icmp slt i8 %209, 0
  br i1 %210, label %211, label %214

211:                                              ; preds = %192
  %212 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %213 = load i8*, i8** %212, align 8
  call void @_ZdlPv(i8* %213) #13
  br label %214

214:                                              ; preds = %211, %192
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %119, i8* nonnull align 8 %193, i64 24, i1 false) #12
  %215 = bitcast %"class.url::SchemeHostPort"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %216 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %215, i64 0, i32 1, i32 0
  store i8 0, i8* %216, align 1
  store i8 0, i8* %193, align 8
  %217 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %6, i64 0, i32 1
  %218 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %9, i64 0, i32 1
  %219 = bitcast %"class.std::__1::basic_string"* %217 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %220 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %219, i64 0, i32 1, i32 0
  %221 = load i8, i8* %220, align 1
  %222 = icmp slt i8 %221, 0
  br i1 %222, label %223, label %226

223:                                              ; preds = %214
  %224 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %217, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %225 = load i8*, i8** %224, align 8
  call void @_ZdlPv(i8* %225) #13
  br label %226

226:                                              ; preds = %214, %223
  %227 = bitcast %"class.std::__1::basic_string"* %217 to i8*
  %228 = bitcast %"class.std::__1::basic_string"* %218 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %227, i8* align 8 %228, i64 24, i1 false) #12
  %229 = bitcast %"class.std::__1::basic_string"* %218 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %230 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %229, i64 0, i32 1, i32 0
  store i8 0, i8* %230, align 1
  store i8 0, i8* %228, align 8
  %231 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %9, i64 0, i32 2
  %232 = load i16, i16* %231, align 8
  %233 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %6, i64 0, i32 2
  store i16 %232, i16* %233, align 8
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %9) #12
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %10) #12
  %234 = load i8, i8* %197, align 1
  %235 = icmp slt i8 %234, 0
  br i1 %235, label %236, label %238

236:                                              ; preds = %226
  %237 = load i8*, i8** %200, align 8
  call void @_ZdlPv(i8* %237) #13
  br label %238

238:                                              ; preds = %226, %236
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %195) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %194) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %193) #12
  %239 = call zeroext i1 @_ZNK3url14SchemeHostPorteqERKS0_(%"class.url::SchemeHostPort"* nonnull %6, %"class.url::SchemeHostPort"* dereferenceable(56) %190)
  br label %326

240:                                              ; preds = %186
  %241 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kAboutSchemeE, i64 0, i64 0)) #12
  %242 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url12kAboutSchemeE, i64 0, i64 0), i64 %241) #12
  br i1 %242, label %326, label %243

243:                                              ; preds = %240
  %244 = call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kDataSchemeE, i64 0, i64 0)) #12
  %245 = call zeroext i1 @_ZNK4GURL8SchemeIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kDataSchemeE, i64 0, i64 0), i64 %244) #12
  br i1 %245, label %246, label %250

246:                                              ; preds = %243
  %247 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %248 = load i8, i8* %247, align 8, !range !2
  %249 = icmp ne i8 %248, 0
  br label %326

250:                                              ; preds = %243
  %251 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0
  %252 = call zeroext i1 @_ZNK3url14SchemeHostPort7IsValidEv(%"class.url::SchemeHostPort"* %251) #12
  br i1 %252, label %253, label %326

253:                                              ; preds = %250
  %254 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %254) #12
  %255 = load i32, i32* %15, align 4, !noalias !24
  %256 = icmp slt i32 %255, 1
  br i1 %256, label %257, label %258

257:                                              ; preds = %253
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %254, i8 0, i64 24, i1 false) #12, !alias.scope !24
  br label %270

258:                                              ; preds = %253
  %259 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 0
  %260 = getelementptr inbounds %class.GURL, %class.GURL* %1, i64 0, i32 2, i32 0, i32 0
  %261 = load i32, i32* %260, align 4, !noalias !24
  %262 = sext i32 %261 to i64
  %263 = sext i32 %255 to i64
  %264 = getelementptr inbounds %"class.std::__1::allocator", %"class.std::__1::allocator"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %264) #12, !noalias !24
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"* nonnull %12, %"class.std::__1::basic_string"* dereferenceable(24) %259, i64 %262, i64 %263, %"class.std::__1::allocator"* nonnull dereferenceable(1) %3) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %264) #12, !noalias !24
  %265 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %266 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %265, i64 0, i32 1, i32 0
  %267 = load i8, i8* %266, align 1
  %268 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %269 = load i64, i64* %268, align 8
  br label %270

270:                                              ; preds = %257, %258
  %271 = phi i64 [ 0, %257 ], [ %269, %258 ]
  %272 = phi i8 [ 0, %257 ], [ %267, %258 ]
  %273 = icmp slt i8 %272, 0
  %274 = zext i8 %272 to i64
  %275 = select i1 %273, i64 %271, i64 %274
  %276 = bitcast %"class.url::Origin"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %277 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %276, i64 0, i32 1, i32 0
  %278 = load i8, i8* %277, align 1
  %279 = icmp slt i8 %278, 0
  %280 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %281 = load i64, i64* %280, align 8
  %282 = zext i8 %278 to i64
  %283 = select i1 %279, i64 %281, i64 %282
  %284 = icmp eq i64 %275, %283
  br i1 %284, label %285, label %316

285:                                              ; preds = %270
  %286 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %287 = load i8*, i8** %286, align 8
  %288 = select i1 %273, i8* %287, i8* %254
  %289 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = load i8*, i8** %289, align 8
  %291 = bitcast %"class.url::Origin"* %0 to i8*
  %292 = select i1 %279, i8* %290, i8* %291
  %293 = icmp eq i64 %275, 0
  br i1 %273, label %300, label %294

294:                                              ; preds = %285
  br i1 %293, label %324, label %295

295:                                              ; preds = %294
  %296 = ptrtoint i8* %287 to i64
  %297 = trunc i64 %296 to i8
  %298 = load i8, i8* %292, align 1
  %299 = icmp eq i8 %298, %297
  br i1 %299, label %304, label %316

300:                                              ; preds = %285
  br i1 %293, label %321, label %301

301:                                              ; preds = %300
  %302 = call i32 @bcmp(i8* %288, i8* %292, i64 %275) #12
  %303 = icmp eq i32 %302, 0
  br label %321

304:                                              ; preds = %295, %311
  %305 = phi i64 [ %308, %311 ], [ %274, %295 ]
  %306 = phi i8* [ %309, %311 ], [ %254, %295 ]
  %307 = phi i8* [ %312, %311 ], [ %292, %295 ]
  %308 = add i64 %305, -1
  %309 = getelementptr inbounds i8, i8* %306, i64 1
  %310 = icmp eq i64 %308, 0
  br i1 %310, label %316, label %311

311:                                              ; preds = %304
  %312 = getelementptr inbounds i8, i8* %307, i64 1
  %313 = load i8, i8* %309, align 1
  %314 = load i8, i8* %312, align 1
  %315 = icmp eq i8 %313, %314
  br i1 %315, label %304, label %316

316:                                              ; preds = %304, %311, %295, %270
  %317 = phi i1 [ false, %270 ], [ false, %295 ], [ false, %311 ], [ true, %304 ]
  br i1 %273, label %318, label %324

318:                                              ; preds = %316
  %319 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %320 = load i8*, i8** %319, align 8
  br label %321

321:                                              ; preds = %318, %301, %300
  %322 = phi i8* [ %320, %318 ], [ %287, %300 ], [ %287, %301 ]
  %323 = phi i1 [ %317, %318 ], [ true, %300 ], [ %303, %301 ]
  call void @_ZdlPv(i8* %322) #13
  br label %324

324:                                              ; preds = %294, %316, %321
  %325 = phi i1 [ %317, %316 ], [ %323, %321 ], [ true, %294 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %254) #12
  br label %326

326:                                              ; preds = %250, %240, %189, %324, %246, %238, %174
  %327 = phi i1 [ %185, %174 ], [ %239, %238 ], [ %249, %246 ], [ %325, %324 ], [ true, %189 ], [ true, %240 ], [ true, %250 ]
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %119) #12
  br label %328

328:                                              ; preds = %104, %108, %326
  %329 = phi i1 [ %327, %326 ], [ false, %104 ], [ true, %108 ]
  ret i1 %329
}

declare dereferenceable(24) %"class.std::__1::vector"* @_ZN3url18GetNoAccessSchemesEv() local_unnamed_addr #1

declare zeroext i1 @_ZNK4GURL10IsStandardEv(%class.GURL*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3url14SchemeHostPorteqERKS0_(%"class.url::SchemeHostPort"*, %"class.url::SchemeHostPort"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %0, i64 0, i32 2
  %4 = load i16, i16* %3, align 8
  %5 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %1, i64 0, i32 2
  %6 = load i16, i16* %5, align 8
  %7 = icmp eq i16 %4, %6
  br i1 %7, label %8, label %110

8:                                                ; preds = %2
  %9 = bitcast %"class.url::SchemeHostPort"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %11 to i64
  %16 = select i1 %12, i64 %14, i64 %15
  %17 = bitcast %"class.url::SchemeHostPort"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %19 to i64
  %24 = select i1 %20, i64 %22, i64 %23
  %25 = icmp eq i64 %16, %24
  br i1 %25, label %26, label %110

26:                                               ; preds = %8
  %27 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast %"class.url::SchemeHostPort"* %0 to i8*
  %30 = select i1 %12, i8* %28, i8* %29
  %31 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast %"class.url::SchemeHostPort"* %1 to i8*
  %34 = select i1 %20, i8* %32, i8* %33
  %35 = icmp eq i64 %16, 0
  br i1 %12, label %42, label %36

36:                                               ; preds = %26
  br i1 %35, label %58, label %37

37:                                               ; preds = %36
  %38 = ptrtoint i8* %28 to i64
  %39 = trunc i64 %38 to i8
  %40 = load i8, i8* %34, align 1
  %41 = icmp eq i8 %40, %39
  br i1 %41, label %43, label %110

42:                                               ; preds = %26
  br i1 %35, label %58, label %55

43:                                               ; preds = %37, %50
  %44 = phi i64 [ %47, %50 ], [ %15, %37 ]
  %45 = phi i8* [ %48, %50 ], [ %29, %37 ]
  %46 = phi i8* [ %51, %50 ], [ %34, %37 ]
  %47 = add i64 %44, -1
  %48 = getelementptr inbounds i8, i8* %45, i64 1
  %49 = icmp eq i64 %47, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds i8, i8* %46, i64 1
  %52 = load i8, i8* %48, align 1
  %53 = load i8, i8* %51, align 1
  %54 = icmp eq i8 %52, %53
  br i1 %54, label %43, label %110

55:                                               ; preds = %42
  %56 = tail call i32 @bcmp(i8* %30, i8* %34, i64 %16) #12
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %110

58:                                               ; preds = %43, %36, %42, %55
  %59 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %0, i64 0, i32 1
  %60 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %1, i64 0, i32 1
  %61 = bitcast %"class.std::__1::basic_string"* %59 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i64, i64* %65, align 8
  %67 = zext i8 %63 to i64
  %68 = select i1 %64, i64 %66, i64 %67
  %69 = bitcast %"class.std::__1::basic_string"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  %73 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = zext i8 %71 to i64
  %76 = select i1 %72, i64 %74, i64 %75
  %77 = icmp eq i64 %68, %76
  br i1 %77, label %78, label %110

78:                                               ; preds = %58
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  %81 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  %82 = select i1 %64, i8* %80, i8* %81
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %60, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = bitcast %"class.std::__1::basic_string"* %60 to i8*
  %86 = select i1 %72, i8* %84, i8* %85
  %87 = icmp eq i64 %68, 0
  br i1 %64, label %94, label %88

88:                                               ; preds = %78
  br i1 %87, label %110, label %89

89:                                               ; preds = %88
  %90 = ptrtoint i8* %80 to i64
  %91 = trunc i64 %90 to i8
  %92 = load i8, i8* %86, align 1
  %93 = icmp eq i8 %92, %91
  br i1 %93, label %98, label %110

94:                                               ; preds = %78
  br i1 %87, label %110, label %95

95:                                               ; preds = %94
  %96 = tail call i32 @bcmp(i8* %82, i8* %86, i64 %68) #12
  %97 = icmp eq i32 %96, 0
  br label %110

98:                                               ; preds = %89, %105
  %99 = phi i64 [ %102, %105 ], [ %67, %89 ]
  %100 = phi i8* [ %103, %105 ], [ %81, %89 ]
  %101 = phi i8* [ %106, %105 ], [ %86, %89 ]
  %102 = add i64 %99, -1
  %103 = getelementptr inbounds i8, i8* %100, i64 1
  %104 = icmp eq i64 %102, 0
  br i1 %104, label %110, label %105

105:                                              ; preds = %98
  %106 = getelementptr inbounds i8, i8* %101, i64 1
  %107 = load i8, i8* %103, align 1
  %108 = load i8, i8* %106, align 1
  %109 = icmp eq i8 %107, %108
  br i1 %109, label %98, label %110

110:                                              ; preds = %50, %105, %98, %37, %89, %8, %95, %94, %88, %58, %55, %2
  %111 = phi i1 [ false, %55 ], [ false, %2 ], [ false, %58 ], [ %97, %95 ], [ true, %94 ], [ true, %88 ], [ false, %8 ], [ false, %89 ], [ false, %37 ], [ true, %98 ], [ false, %105 ], [ false, %50 ]
  ret i1 %111
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3url6Origin8DomainIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.url::Origin"*, i8*, i64) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %22

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 1
  %9 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  %15 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %16 = select i1 %12, i8* %14, i8* %15
  %17 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = zext i8 %11 to i64
  %20 = select i1 %12, i64 %18, i64 %19
  %21 = tail call zeroext i1 @_ZN3url8DomainIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8* %16, i64 %20, i8* %1, i64 %2) #12
  br label %22

22:                                               ; preds = %3, %7
  %23 = phi i1 [ false, %3 ], [ %21, %7 ]
  ret i1 %23
}

declare zeroext i1 @_ZN3url8DomainIsEN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEES5_(i8*, i64, i8*, i64) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3url6OriginltERKS0_(%"class.url::Origin"*, %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::__tuple_less", align 1
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0
  %8 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store %"class.url::SchemeHostPort"* %7, %"class.url::SchemeHostPort"** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %8, %"class.absl::optional"** %10, align 8
  %11 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #12
  %12 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0
  %13 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1
  %14 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.url::SchemeHostPort"* %12, %"class.url::SchemeHostPort"** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %13, %"class.absl::optional"** %15, align 8
  %16 = getelementptr inbounds %"struct.std::__1::__tuple_less", %"struct.std::__1::__tuple_less"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %16) #12
  %17 = call zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKN3url14SchemeHostPortERKN4absl8optionalINS4_6Origin5NonceEEEEEESF_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"* nonnull %3, %"class.std::__1::tuple"* nonnull dereferenceable(16) %4, %"class.std::__1::tuple"* nonnull dereferenceable(16) %5) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret i1 %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3url6Origin14GetDebugStringEb(%"class.std::__1::basic_string"* noalias sret, %"class.url::Origin"*, i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca [3 x %"class.base::BasicStringPiece"], align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca [2 x %"class.base::BasicStringPiece"], align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca [3 x %"class.base::BasicStringPiece"], align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %87

15:                                               ; preds = %3
  %16 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 -86, i64 24, i1 false)
  %17 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #12, !noalias !29
  %18 = bitcast %"class.url::Origin"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1, !noalias !29
  %21 = icmp slt i8 %20, 0
  %22 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %23 = load i64, i64* %22, align 8, !noalias !29
  %24 = zext i8 %20 to i64
  %25 = select i1 %21, i64 %23, i64 %24
  %26 = icmp eq i64 %17, %25
  br i1 %26, label %27, label %36

27:                                               ; preds = %15
  %28 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 0
  %29 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %28, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0), i64 %17) #12
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %36

31:                                               ; preds = %27
  %32 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  store i8 7, i8* %33, align 1, !alias.scope !29
  %34 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i1 false) #12
  %35 = getelementptr inbounds i8, i8* %34, i64 7
  store i8 0, i8* %35, align 1, !alias.scope !29
  br label %38

36:                                               ; preds = %27, %15
  %37 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0
  tail call void @_ZNK3url14SchemeHostPort9SerializeEv(%"class.std::__1::basic_string"* sret %0, %"class.url::SchemeHostPort"* %37) #12
  br label %38

38:                                               ; preds = %31, %36
  %39 = load i8, i8* %12, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %41, label %43

41:                                               ; preds = %38
  %42 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0, i32 0
  br label %45

43:                                               ; preds = %38
  %44 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() #12
  br label %45

45:                                               ; preds = %41, %43
  %46 = phi %"class.std::__1::basic_string"* [ %42, %41 ], [ %44, %43 ]
  %47 = tail call i64 @strlen(i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0)) #12
  %48 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = zext i8 %50 to i64
  %55 = select i1 %51, i64 %53, i64 %54
  %56 = icmp eq i64 %47, %55
  br i1 %56, label %57, label %177

57:                                               ; preds = %45
  %58 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"* %46, i64 0, i64 -1, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN3url11kFileSchemeE, i64 0, i64 0), i64 %47) #12
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %177

60:                                               ; preds = %57
  %61 = bitcast [3 x %"class.base::BasicStringPiece"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %61) #12
  %62 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 0
  %63 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 0, i32 0
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i8** %63, align 8
  %64 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 0, i32 1
  store i64 14, i64* %64, align 8
  %65 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #12
  %66 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0
  call void @_ZNK3url14SchemeHostPort9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %5, %"class.url::SchemeHostPort"* %66) #12
  %67 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 1, i32 0
  %68 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = select i1 %71, i8* %73, i8* %65
  store i8* %74, i8** %67, align 8
  %75 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 1, i32 1
  %76 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %77 = load i64, i64* %76, align 8
  %78 = zext i8 %70 to i64
  %79 = select i1 %71, i64 %77, i64 %78
  store i64 %79, i64* %75, align 8
  %80 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 2, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i8** %80, align 8
  %81 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %4, i64 0, i64 2, i32 1
  store i64 1, i64* %81, align 8
  call void @_ZN4base9StrAppendEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_4spanIKNS_16BasicStringPieceIcS3_EELm18446744073709551615EEE(%"class.std::__1::basic_string"* %0, i64 3, %"class.base::BasicStringPiece"* nonnull %62) #12
  %82 = load i8, i8* %69, align 1
  %83 = icmp slt i8 %82, 0
  br i1 %83, label %84, label %86

84:                                               ; preds = %60
  %85 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %85) #13
  br label %86

86:                                               ; preds = %60, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %61) #12
  br label %177

87:                                               ; preds = %3
  %88 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %88) #12
  %89 = bitcast [2 x %"class.base::BasicStringPiece"]* %7 to i8*
  %90 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %89) #12
  %91 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %7, i64 0, i64 0
  %92 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %92) #12
  %93 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %94 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %93, i64 0, i32 1, i32 0
  store i8 4, i8* %94, align 1, !alias.scope !32
  %95 = bitcast %"class.std::__1::basic_string"* %8 to i32*
  store i32 1819047278, i32* %95, align 8, !alias.scope !32
  %96 = getelementptr inbounds i8, i8* %92, i64 4
  store i8 0, i8* %96, align 4, !alias.scope !32
  %97 = bitcast [2 x %"class.base::BasicStringPiece"]* %7 to %"class.std::__1::basic_string"**
  store %"class.std::__1::basic_string"* %8, %"class.std::__1::basic_string"** %97, align 8
  %98 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %7, i64 0, i64 0, i32 1
  store i64 4, i64* %98, align 8
  %99 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %7, i64 0, i64 1, i32 0
  store i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.5, i64 0, i64 0), i8** %99, align 8
  %100 = getelementptr inbounds [2 x %"class.base::BasicStringPiece"], [2 x %"class.base::BasicStringPiece"]* %7, i64 0, i64 1, i32 1
  store i64 13, i64* %100, align 8
  call void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* nonnull sret %6, i64 2, %"class.base::BasicStringPiece"* nonnull %91) #12
  %101 = load i8, i8* %94, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %87
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  call void @_ZdlPv(i8* %105) #13
  br label %106

106:                                              ; preds = %87, %103
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %92) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %89) #12
  br i1 %2, label %107, label %145

107:                                              ; preds = %106
  %108 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %6, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.6, i64 0, i64 0)) #12
  %109 = load i8, i8* %12, align 8, !range !2
  %110 = icmp eq i8 %109, 0
  br i1 %110, label %111, label %112, !prof !18

111:                                              ; preds = %107
  call void @llvm.trap() #12
  unreachable

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %114 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %113, i64 0, i32 0, i32 0
  %115 = load i64, i64* %114, align 8
  %116 = icmp eq i64 %115, 0
  br i1 %116, label %117, label %123

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %119 = load i64, i64* %118, align 8
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %123

121:                                              ; preds = %117
  %122 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %6, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.7, i64 0, i64 0)) #12
  br label %143

123:                                              ; preds = %112, %117
  %124 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %124) #12
  %125 = getelementptr inbounds %"class.base::UnguessableToken", %"class.base::UnguessableToken"* %113, i64 0, i32 0
  call void @_ZNK4base5Token8ToStringEv(%"class.std::__1::basic_string"* nonnull sret %9, %"class.base::Token"* %125) #12
  %126 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %127 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %126, i64 0, i32 1, i32 0
  %128 = load i8, i8* %127, align 1
  %129 = icmp slt i8 %128, 0
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load i8*, i8** %130, align 8
  %132 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %133 = load i64, i64* %132, align 8
  %134 = zext i8 %128 to i64
  %135 = select i1 %129, i8* %131, i8* %124
  %136 = select i1 %129, i64 %133, i64 %134
  %137 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %6, i8* %135, i64 %136) #12
  %138 = load i8, i8* %127, align 1
  %139 = icmp slt i8 %138, 0
  br i1 %139, label %140, label %142

140:                                              ; preds = %123
  %141 = load i8*, i8** %130, align 8
  call void @_ZdlPv(i8* %141) #13
  br label %142

142:                                              ; preds = %123, %140
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %124) #12
  br label %143

143:                                              ; preds = %142, %121
  %144 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"* nonnull %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.8, i64 0, i64 0)) #12
  br label %145

145:                                              ; preds = %143, %106
  %146 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0
  %147 = call zeroext i1 @_ZNK3url14SchemeHostPort7IsValidEv(%"class.url::SchemeHostPort"* %146) #12
  br i1 %147, label %149, label %148

148:                                              ; preds = %145
  call void @_ZN4base9StrAppendEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_4spanIKNS_16BasicStringPieceIcS3_EELm18446744073709551615EEE(%"class.std::__1::basic_string"* nonnull %6, i64 1, %"class.base::BasicStringPiece"* getelementptr inbounds ([1 x %"class.base::BasicStringPiece"], [1 x %"class.base::BasicStringPiece"]* @.ref.tmp, i64 0, i64 0)) #12
  br label %175

149:                                              ; preds = %145
  %150 = bitcast [3 x %"class.base::BasicStringPiece"]* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %150) #12
  %151 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %10, i64 0, i64 0
  %152 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %10, i64 0, i64 0, i32 0
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.10, i64 0, i64 0), i8** %152, align 8
  %153 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %10, i64 0, i64 0, i32 1
  store i64 14, i64* %153, align 8
  %154 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %154) #12
  call void @_ZNK3url14SchemeHostPort9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %11, %"class.url::SchemeHostPort"* %146) #12
  %155 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %10, i64 0, i64 1, i32 0
  %156 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %157 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %156, i64 0, i32 1, i32 0
  %158 = load i8, i8* %157, align 1
  %159 = icmp slt i8 %158, 0
  %160 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = load i8*, i8** %160, align 8
  %162 = select i1 %159, i8* %161, i8* %154
  store i8* %162, i8** %155, align 8
  %163 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %10, i64 0, i64 1, i32 1
  %164 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %165 = load i64, i64* %164, align 8
  %166 = zext i8 %158 to i64
  %167 = select i1 %159, i64 %165, i64 %166
  store i64 %167, i64* %163, align 8
  %168 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %10, i64 0, i64 2, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.4, i64 0, i64 0), i8** %168, align 8
  %169 = getelementptr inbounds [3 x %"class.base::BasicStringPiece"], [3 x %"class.base::BasicStringPiece"]* %10, i64 0, i64 2, i32 1
  store i64 1, i64* %169, align 8
  call void @_ZN4base9StrAppendEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_4spanIKNS_16BasicStringPieceIcS3_EELm18446744073709551615EEE(%"class.std::__1::basic_string"* nonnull %6, i64 3, %"class.base::BasicStringPiece"* nonnull %151) #12
  %170 = load i8, i8* %157, align 1
  %171 = icmp slt i8 %170, 0
  br i1 %171, label %172, label %174

172:                                              ; preds = %149
  %173 = load i8*, i8** %160, align 8
  call void @_ZdlPv(i8* %173) #13
  br label %174

174:                                              ; preds = %149, %172
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %154) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %150) #12
  br label %175

175:                                              ; preds = %148, %174
  %176 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %176, i8* nonnull align 8 %88, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %88) #12
  br label %177

177:                                              ; preds = %45, %57, %86, %175
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(16) %"class.base::UnguessableToken"* @_ZNK3url6Origin5Nonce9raw_tokenEv(%"class.url::Origin::Nonce"* readnone) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %0, i64 0, i32 0
  ret %"class.base::UnguessableToken"* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url6OriginC2ENS_14SchemeHostPortE(%"class.url::Origin"* nocapture, %"class.url::SchemeHostPort"* nocapture) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.url::Origin"* %0 to i8*
  %4 = bitcast %"class.url::SchemeHostPort"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 0, i64 24, i1 false) #12
  %5 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %1, i64 0, i32 1
  %7 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #12
  %9 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %1, i64 0, i32 2
  %11 = load i16, i16* %10, align 8
  store i16 %11, i16* %9, align 8
  %12 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %12, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url6OriginC2ERKNS0_5NonceENS_14SchemeHostPortE(%"class.url::Origin"* nocapture, %"class.url::Origin::Nonce"* nocapture dereferenceable(16), %"class.url::SchemeHostPort"* nocapture) unnamed_addr #0 align 2 {
  %4 = bitcast %"class.url::Origin"* %0 to i8*
  %5 = bitcast %"class.url::SchemeHostPort"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #12
  %6 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %2, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  %9 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 24, i1 false) #12
  %10 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 0, i32 2
  %11 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %2, i64 0, i32 2
  %12 = load i16, i16* %11, align 8
  store i16 %12, i16* %10, align 8
  %13 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %13, align 8
  %14 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %15 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %1, i64 0, i32 0, i32 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %18, label %26

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %1, i64 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %26

22:                                               ; preds = %18
  %23 = tail call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #12
  %24 = extractvalue { i64, i64 } %23, 0
  %25 = extractvalue { i64, i64 } %23, 1
  store i64 %24, i64* %15, align 8
  store i64 %25, i64* %19, align 8
  br label %26

26:                                               ; preds = %3, %18, %22
  %27 = bitcast %"class.url::Origin::Nonce"* %14 to i8*
  %28 = bitcast %"class.url::Origin::Nonce"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %27, i8* align 8 %28, i64 16, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3url6Origin18SerializeWithNonceEv(%"class.absl::optional.21"* noalias nocapture sret, %"class.url::Origin"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZNK3url6Origin22SerializeWithNonceImplEv(%"class.absl::optional.21"* sret %0, %"class.url::Origin"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3url6Origin22SerializeWithNonceImplEv(%"class.absl::optional.21"* noalias nocapture sret, %"class.url::Origin"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca i64, align 8
  %5 = alloca i64, align 8
  %6 = alloca i64, align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = alloca %"class.base::Pickle", align 8
  %9 = alloca %"class.base::BasicStringPiece", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %22

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0
  %17 = tail call zeroext i1 @_ZNK3url14SchemeHostPort7IsValidEv(%"class.url::SchemeHostPort"* %16) #12
  br i1 %17, label %22, label %18

18:                                               ; preds = %15
  %19 = getelementptr inbounds %"class.absl::optional.21", %"class.absl::optional.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %19, align 8
  %20 = getelementptr inbounds %"class.absl::optional.21", %"class.absl::optional.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast %union.anon.25* %20 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #12
  br label %107

22:                                               ; preds = %2, %15
  %23 = bitcast %"class.base::Pickle"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23) #12
  %24 = getelementptr inbounds %"class.base::Pickle", %"class.base::Pickle"* %8, i64 0, i32 1
  %25 = getelementptr inbounds %"class.base::Pickle", %"class.base::Pickle"* %8, i64 0, i32 2
  %26 = bitcast %"class.base::Pickle"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 40, i1 false)
  call void @_ZN4base6PickleC1Ev(%"class.base::Pickle"* nonnull %8) #12
  %27 = bitcast %"class.base::BasicStringPiece"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %27) #12
  %28 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %28) #12
  %29 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 0
  call void @_ZNK3url14SchemeHostPort9SerializeEv(%"class.std::__1::basic_string"* nonnull sret %10, %"class.url::SchemeHostPort"* %29) #12
  %30 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 0
  %31 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = select i1 %34, i8* %36, i8* %28
  store i8* %37, i8** %30, align 8
  %38 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %9, i64 0, i32 1
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = zext i8 %33 to i64
  %42 = select i1 %34, i64 %40, i64 %41
  store i64 %42, i64* %38, align 8
  call void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"* nonnull %8, %"class.base::BasicStringPiece"* nonnull dereferenceable(16) %9) #12
  %43 = load i8, i8* %32, align 1
  %44 = icmp slt i8 %43, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %22
  %46 = load i8*, i8** %35, align 8
  call void @_ZdlPv(i8* %46) #13
  br label %47

47:                                               ; preds = %22, %45
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %28) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %27) #12
  %48 = load i8, i8* %12, align 8, !range !2
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %90, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %66

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %56 = load i64, i64* %55, align 8
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %85, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %60 = load i64, i64* %59, align 8
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %66

62:                                               ; preds = %58
  %63 = call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #12
  %64 = extractvalue { i64, i64 } %63, 0
  %65 = extractvalue { i64, i64 } %63, 1
  store i64 %64, i64* %51, align 8
  store i64 %65, i64* %59, align 8
  br label %66

66:                                               ; preds = %50, %58, %62
  %67 = phi i64 [ 0, %58 ], [ %64, %62 ], [ %52, %50 ]
  %68 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68)
  store i64 %67, i64* %3, align 8
  call void @_ZN4base6Pickle16WriteBytesStaticILm8EEEvPKv(%"class.base::Pickle"* nonnull %8, i8* nonnull %68) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %68)
  %69 = load i8, i8* %12, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %72, !prof !18

71:                                               ; preds = %66
  call void @llvm.trap() #12
  unreachable

72:                                               ; preds = %66
  %73 = load i64, i64* %51, align 8
  %74 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = or i64 %73, %75
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %78, label %82

78:                                               ; preds = %72
  %79 = call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #12
  %80 = extractvalue { i64, i64 } %79, 0
  %81 = extractvalue { i64, i64 } %79, 1
  store i64 %80, i64* %51, align 8
  store i64 %81, i64* %74, align 8
  br label %82

82:                                               ; preds = %72, %78
  %83 = phi i64 [ %81, %78 ], [ %75, %72 ]
  %84 = bitcast i64* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %84)
  store i64 %83, i64* %4, align 8
  br label %88

85:                                               ; preds = %54
  %86 = bitcast i64* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86)
  store i64 0, i64* %5, align 8
  call void @_ZN4base6Pickle16WriteBytesStaticILm8EEEvPKv(%"class.base::Pickle"* nonnull %8, i8* nonnull %86) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86)
  %87 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87)
  store i64 0, i64* %6, align 8
  br label %88

88:                                               ; preds = %82, %85
  %89 = phi i8* [ %87, %85 ], [ %84, %82 ]
  call void @_ZN4base6Pickle16WriteBytesStaticILm8EEEvPKv(%"class.base::Pickle"* nonnull %8, i8* nonnull %89) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89)
  br label %90

90:                                               ; preds = %88, %47
  %91 = bitcast %"struct.base::Pickle::Header"** %24 to i8**
  %92 = load i8*, i8** %91, align 8
  %93 = load i64, i64* %25, align 8
  %94 = bitcast i8* %92 to i32*
  %95 = load i32, i32* %94, align 4
  %96 = zext i32 %95 to i64
  %97 = add i64 %93, %96
  %98 = icmp slt i64 %97, 0
  br i1 %98, label %99, label %102

99:                                               ; preds = %90
  %100 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %100) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str.17, i64 0, i64 0), i32 297, i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.18, i64 0, i64 0)) #12
  %101 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %100) #12
  br label %102

102:                                              ; preds = %99, %90
  %103 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %103) #12
  call void @_ZN4base12Base64EncodeENS_4spanIKhLm18446744073709551615EEE(%"class.std::__1::basic_string"* nonnull sret %11, i64 %97, i8* %92) #12
  %104 = getelementptr inbounds %"class.absl::optional.21", %"class.absl::optional.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %104, align 8
  %105 = getelementptr inbounds %"class.absl::optional.21", %"class.absl::optional.21"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %106 = bitcast %"class.std::__1::basic_string"* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %106, i8* nonnull align 8 %103, i64 24, i1 false) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %103) #12
  call void @_ZN4base6PickleD1Ev(%"class.base::Pickle"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23) #12
  br label %107

107:                                              ; preds = %102, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url6Origin33SerializeWithNonceAndInitIfNeededEv(%"class.absl::optional.21"* noalias nocapture sret, %"class.url::Origin"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2, !noalias !35
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %18, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8, !noalias !35
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %18

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8, !noalias !35
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %14, label %18

14:                                               ; preds = %10
  %15 = tail call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #12, !noalias !35
  %16 = extractvalue { i64, i64 } %15, 0
  %17 = extractvalue { i64, i64 } %15, 1
  store i64 %16, i64* %7, align 8, !noalias !35
  store i64 %17, i64* %11, align 8, !noalias !35
  br label %18

18:                                               ; preds = %6, %10, %14, %2
  tail call void @_ZNK3url6Origin22SerializeWithNonceImplEv(%"class.absl::optional.21"* sret %0, %"class.url::Origin"* %1)
  ret void
}

declare void @_ZN4base6PickleC1Ev(%"class.base::Pickle"*) unnamed_addr #1

declare void @_ZN4base6Pickle11WriteStringERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::Pickle"*, %"class.base::BasicStringPiece"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN4base12Base64EncodeENS_4spanIKhLm18446744073709551615EEE(%"class.std::__1::basic_string"* sret, i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base6PickleD1Ev(%"class.base::Pickle"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url6Origin11DeserializeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.absl::optional.5"* noalias sret, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.base::BasicStringPiece", align 8
  %6 = alloca %"class.base::Pickle", align 8
  %7 = alloca %"class.base::PickleIterator", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %class.GURL, align 8
  %10 = alloca %"class.url::SchemeHostPort", align 8
  %11 = alloca %"class.url::Origin", align 8
  %12 = alloca %"class.url::SchemeHostPort", align 8
  %13 = alloca i64, align 8
  %14 = alloca i64, align 8
  %15 = alloca %"class.url::Origin", align 8
  %16 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #12
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 24, i1 false) #12
  %18 = bitcast %"class.base::BasicStringPiece"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %18) #12
  %19 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 0
  %20 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %27 = select i1 %23, i8* %25, i8* %26
  store i8* %27, i8** %19, align 8
  %28 = getelementptr inbounds %"class.base::BasicStringPiece", %"class.base::BasicStringPiece"* %5, i64 0, i32 1
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %22 to i64
  %32 = select i1 %23, i64 %30, i64 %31
  store i64 %32, i64* %28, align 8
  %33 = call zeroext i1 @_ZN4base12Base64DecodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* nonnull dereferenceable(16) %5, %"class.std::__1::basic_string"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %18) #12
  br i1 %33, label %39, label %34

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %35, align 8
  %36 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %37 = bitcast %union.anon.9* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 80, i1 false) #12
  %38 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %207

39:                                               ; preds = %2
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %41 = bitcast %"class.base::Pickle"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %41) #12
  %42 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = bitcast %"class.base::Pickle"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %44, i8 -86, i64 40, i1 false)
  %45 = load i8, i8* %43, align 1
  %46 = icmp slt i8 %45, 0
  %47 = load i8*, i8** %17, align 8
  %48 = load i64, i64* %40, align 8
  %49 = zext i8 %45 to i64
  %50 = select i1 %46, i8* %47, i8* %16
  %51 = select i1 %46, i64 %48, i64 %49
  call void @_ZN4base6PickleC1EPKcm(%"class.base::Pickle"* nonnull %6, i8* %50, i64 %51) #12
  %52 = bitcast %"class.base::PickleIterator"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %52) #12
  %53 = bitcast %"class.base::PickleIterator"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 -86, i64 24, i1 false)
  call void @_ZN4base14PickleIteratorC1ERKNS_6PickleE(%"class.base::PickleIterator"* nonnull %7, %"class.base::Pickle"* nonnull dereferenceable(40) %6) #12
  %54 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #12
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 0, i64 24, i1 false) #12
  %56 = call zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"* nonnull %7, %"class.std::__1::basic_string"* nonnull %8) #12
  br i1 %56, label %62, label %57

57:                                               ; preds = %39
  %58 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %58, align 8
  %59 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %60 = bitcast %union.anon.9* %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 80, i1 false) #12
  %61 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %199

62:                                               ; preds = %39
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.base::PickleIterator", %"class.base::PickleIterator"* %7, i64 0, i32 2
  %65 = getelementptr inbounds %"class.base::PickleIterator", %"class.base::PickleIterator"* %7, i64 0, i32 1
  %66 = bitcast %class.GURL* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %66) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 -86, i64 120, i1 false)
  %67 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  %71 = load i8*, i8** %55, align 8
  %72 = select i1 %70, i8* %71, i8* %54
  %73 = load i64, i64* %63, align 8
  %74 = zext i8 %69 to i64
  %75 = select i1 %70, i64 %73, i64 %74
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* nonnull %9, i8* %72, i64 %75) #12
  %76 = load i64, i64* %65, align 8
  %77 = load i64, i64* %64, align 8
  %78 = icmp eq i64 %76, %77
  br i1 %78, label %79, label %87

79:                                               ; preds = %62
  %80 = getelementptr inbounds %class.GURL, %class.GURL* %9, i64 0, i32 1
  %81 = load i8, i8* %80, align 8, !range !2
  %82 = icmp eq i8 %81, 0
  br i1 %82, label %83, label %87

83:                                               ; preds = %79
  %84 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %84, align 8
  %85 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %86 = bitcast %union.anon.9* %85 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 80, i1 false) #12
  br label %198

87:                                               ; preds = %79, %62
  %88 = bitcast %"class.url::SchemeHostPort"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %88) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %88, i8 -86, i64 56, i1 false)
  call void @_ZN3url14SchemeHostPortC1ERK4GURL(%"class.url::SchemeHostPort"* nonnull %10, %class.GURL* nonnull dereferenceable(120) %9) #12
  br i1 %78, label %89, label %137

89:                                               ; preds = %87
  %90 = bitcast %"class.url::Origin"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %90) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 80, i1 false)
  %91 = bitcast %"class.url::SchemeHostPort"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %92 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %91, i64 0, i32 1, i32 0
  %93 = load i8, i8* %92, align 1
  %94 = icmp slt i8 %93, 0
  br i1 %94, label %97, label %95

95:                                               ; preds = %89
  %96 = bitcast %"class.url::SchemeHostPort"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %96, i8* nonnull align 8 %88, i64 24, i1 false) #12
  br label %103

97:                                               ; preds = %89
  %98 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %12, i64 0, i32 0
  %99 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %102 = load i64, i64* %101, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* nonnull %98, i8* %100, i64 %102) #12
  br label %103

103:                                              ; preds = %97, %95
  %104 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %12, i64 0, i32 1
  %105 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %10, i64 0, i32 1
  %106 = bitcast %"class.std::__1::basic_string"* %105 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %113, label %110

110:                                              ; preds = %103
  %111 = bitcast %"class.std::__1::basic_string"* %104 to i8*
  %112 = bitcast %"class.std::__1::basic_string"* %105 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %112, i64 24, i1 false) #12
  br label %119

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  %116 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %117 = load i64, i64* %116, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %104, i8* %115, i64 %117) #12
  %118 = bitcast %"class.std::__1::basic_string"* %104 to i8*
  br label %119

119:                                              ; preds = %110, %113
  %120 = phi i8* [ %111, %110 ], [ %118, %113 ]
  %121 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %12, i64 0, i32 2
  %122 = getelementptr inbounds %"class.url::SchemeHostPort", %"class.url::SchemeHostPort"* %10, i64 0, i32 2
  %123 = load i16, i16* %122, align 8
  store i16 %123, i16* %121, align 8
  %124 = bitcast %"class.url::SchemeHostPort"* %12 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %90, i8* nonnull align 8 %124, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %124, i8 0, i64 24, i1 false) #12
  %125 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %11, i64 0, i32 0, i32 1
  %126 = bitcast %"class.std::__1::basic_string"* %125 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %126, i8* align 8 %120, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %120, i8 0, i64 24, i1 false) #12
  %127 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %11, i64 0, i32 0, i32 2
  store i16 %123, i16* %127, align 8
  %128 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %128, align 8
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %12) #12
  %129 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %129, align 8
  %130 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %131 = bitcast %"class.url::Origin"* %130 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %131, i8* nonnull align 8 %90, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 0, i64 24, i1 false) #12
  %132 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %133 = bitcast %"class.std::__1::basic_string"* %132 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %133, i8* align 8 %126, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %126, i8 0, i64 24, i1 false) #12
  %134 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2
  store i16 %123, i16* %134, align 8
  %135 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %135, i8 0, i64 24, i1 false) #12
  %136 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %11, i64 0, i32 0
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %136) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %90) #12
  br label %197

137:                                              ; preds = %87
  %138 = bitcast i64* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %138) #12
  store i64 0, i64* %13, align 8
  %139 = call zeroext i1 @_ZN4base14PickleIterator10ReadUInt64EPm(%"class.base::PickleIterator"* nonnull %7, i64* nonnull %13) #12
  br i1 %139, label %144, label %140

140:                                              ; preds = %137
  %141 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %141, align 8
  %142 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %143 = bitcast %union.anon.9* %142 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 80, i1 false) #12
  br label %196

144:                                              ; preds = %137
  %145 = bitcast i64* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %145) #12
  store i64 0, i64* %14, align 8
  %146 = call zeroext i1 @_ZN4base14PickleIterator10ReadUInt64EPm(%"class.base::PickleIterator"* nonnull %7, i64* nonnull %14) #12
  br i1 %146, label %151, label %147

147:                                              ; preds = %144
  %148 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %148, align 8
  %149 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %150 = bitcast %union.anon.9* %149 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %150, i8 0, i64 80, i1 false) #12
  br label %195

151:                                              ; preds = %144
  %152 = load i64, i64* %13, align 8
  %153 = icmp ne i64 %152, 0
  %154 = load i64, i64* %14, align 8
  %155 = icmp ne i64 %154, 0
  %156 = and i1 %153, %155
  br i1 %156, label %157, label %167

157:                                              ; preds = %151
  %158 = call { i64, i64 } @_ZN4base16UnguessableToken11DeserializeEmm(i64 %152, i64 %154) #12
  %159 = extractvalue { i64, i64 } %158, 0
  %160 = extractvalue { i64, i64 } %158, 1
  %161 = icmp eq i64 %159, 0
  br i1 %161, label %162, label %167

162:                                              ; preds = %157
  %163 = icmp eq i64 %160, 0
  br i1 %163, label %164, label %167

164:                                              ; preds = %162
  %165 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %165) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0), i32 400, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0)) #12
  %166 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %165) #12
  br label %167

167:                                              ; preds = %164, %162, %157, %151
  %168 = phi i64 [ 0, %151 ], [ %160, %157 ], [ %160, %162 ], [ 0, %164 ]
  %169 = phi i64 [ 0, %151 ], [ %159, %157 ], [ 0, %162 ], [ 0, %164 ]
  %170 = bitcast %"class.url::Origin"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %170) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %170, i8 -86, i64 80, i1 false)
  %171 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %15, i64 0, i32 0
  call void @_ZN3url14SchemeHostPortC1Ev(%"class.url::SchemeHostPort"* nonnull %171) #12
  %172 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %172, align 8
  %173 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %169, i64* %173, align 8
  %174 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  store i64 %168, i64* %174, align 8
  %175 = call dereferenceable(56) %"class.url::SchemeHostPort"* @_ZN3url14SchemeHostPortaSERKS0_(%"class.url::SchemeHostPort"* nonnull %171, %"class.url::SchemeHostPort"* nonnull dereferenceable(56) %10)
  %176 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %176, align 8
  %177 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %178 = bitcast %"class.url::Origin"* %177 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %178, i8* nonnull align 8 %170, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %170, i8 0, i64 24, i1 false) #12
  %179 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %180 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %15, i64 0, i32 0, i32 1
  %181 = bitcast %"class.std::__1::basic_string"* %179 to i8*
  %182 = bitcast %"class.std::__1::basic_string"* %180 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %181, i8* align 8 %182, i64 24, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %182, i8 0, i64 24, i1 false) #12
  %183 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2
  %184 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %15, i64 0, i32 0, i32 2
  %185 = load i16, i16* %184, align 8
  store i16 %185, i16* %183, align 8
  %186 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %186, i8 0, i64 24, i1 false) #12
  %187 = load i8, i8* %172, align 8, !range !2
  %188 = icmp eq i8 %187, 0
  br i1 %188, label %194, label %189

189:                                              ; preds = %167
  %190 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %15, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %191 = getelementptr inbounds %"class.absl::optional.5", %"class.absl::optional.5"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %192 = bitcast %"class.url::Origin::Nonce"* %191 to i8*
  %193 = bitcast %"class.url::Origin::Nonce"* %190 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %192, i8* align 8 %193, i64 16, i1 false) #12
  call void @llvm.memset.p0i8.i64(i8* align 8 %193, i8 0, i64 16, i1 false) #12
  store i8 1, i8* %186, align 8
  br label %194

194:                                              ; preds = %167, %189
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %171) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %170) #12
  br label %195

195:                                              ; preds = %194, %147
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %145) #12
  br label %196

196:                                              ; preds = %195, %140
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %138) #12
  br label %197

197:                                              ; preds = %196, %119
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %88) #12
  br label %198

198:                                              ; preds = %197, %83
  call void @_ZN4GURLD1Ev(%class.GURL* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %66) #12
  br label %199

199:                                              ; preds = %198, %57
  %200 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %67, %198 ], [ %61, %57 ]
  %201 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %200, i64 0, i32 1, i32 0
  %202 = load i8, i8* %201, align 1
  %203 = icmp slt i8 %202, 0
  br i1 %203, label %204, label %206

204:                                              ; preds = %199
  %205 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %205) #13
  br label %206

206:                                              ; preds = %199, %204
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %52) #12
  call void @_ZN4base6PickleD1Ev(%"class.base::Pickle"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %41) #12
  br label %207

207:                                              ; preds = %206, %34
  %208 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %206 ], [ %38, %34 ]
  %209 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %208, i64 0, i32 1, i32 0
  %210 = load i8, i8* %209, align 1
  %211 = icmp slt i8 %210, 0
  br i1 %211, label %212, label %214

212:                                              ; preds = %207
  %213 = load i8*, i8** %17, align 8
  call void @_ZdlPv(i8* %213) #13
  br label %214

214:                                              ; preds = %207, %212
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  ret void
}

declare zeroext i1 @_ZN4base12Base64DecodeERKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEPNS1_12basic_stringIcS3_NS1_9allocatorIcEEEE(%"class.base::BasicStringPiece"* dereferenceable(16), %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare void @_ZN4base6PickleC1EPKcm(%"class.base::Pickle"*, i8*, i64) unnamed_addr #1

declare void @_ZN4base14PickleIteratorC1ERKNS_6PickleE(%"class.base::PickleIterator"*, %"class.base::Pickle"* dereferenceable(40)) unnamed_addr #1

declare zeroext i1 @_ZN4base14PickleIterator10ReadStringEPNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.base::PickleIterator"*, %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base14PickleIterator10ReadUInt64EPm(%"class.base::PickleIterator"*, i64*) local_unnamed_addr #1

declare { i64, i64 } @_ZN4base16UnguessableToken11DeserializeEmm(i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.url::Origin::Nonce"* @_ZN3url6Origin5NonceaSEOS1_(%"class.url::Origin::Nonce"* returned, %"class.url::Origin::Nonce"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.url::Origin::Nonce"* %0 to i8*
  %4 = bitcast %"class.url::Origin::Nonce"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = bitcast %"class.url::Origin::Nonce"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false)
  ret %"class.url::Origin::Nonce"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3url6Origin14WriteIntoTraceEN8perfetto11TracedValueE(%"class.url::Origin"*, %"class.perfetto::TracedValue"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  call void @_ZNK3url6Origin14GetDebugStringEb(%"class.std::__1::basic_string"* nonnull sret %3, %"class.url::Origin"* %0, i1 zeroext true)
  call void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"* %1, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #12
  %5 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  br i1 %8, label %9, label %12

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %11 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %11) #13
  br label %12

12:                                               ; preds = %2, %9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  ret void
}

declare void @_ZNO8perfetto11TracedValue11WriteStringERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.perfetto::TracedValue"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3urllsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6OriginE(%"class.std::__1::basic_ostream"* returned dereferenceable(160), %"class.url::Origin"* dereferenceable(80)) local_unnamed_addr #0 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #12
  call void @_ZNK3url6Origin14GetDebugStringEb(%"class.std::__1::basic_string"* nonnull sret %3, %"class.url::Origin"* %1, i1 zeroext true)
  %5 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %7 to i64
  %14 = select i1 %8, i8* %10, i8* %4
  %15 = select i1 %8, i64 %12, i64 %13
  %16 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* %14, i64 %15) #12
  %17 = load i8, i8* %6, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %21

19:                                               ; preds = %2
  %20 = load i8*, i8** %9, align 8
  call void @_ZdlPv(i8* %20) #13
  br label %21

21:                                               ; preds = %2, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #12
  ret %"class.std::__1::basic_ostream"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN3urllsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_6Origin5NonceE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.url::Origin::Nonce"* dereferenceable(16)) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %1, i64 0, i32 0
  %4 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %13

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %1, i64 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %11, label %13

11:                                               ; preds = %7
  %12 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.11, i64 0, i64 0), i64 11) #12
  br label %15

13:                                               ; preds = %2, %7
  %14 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4baselsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_16UnguessableTokenE(%"class.std::__1::basic_ostream"* dereferenceable(160) %0, %"class.base::UnguessableToken"* dereferenceable(16) %3) #12
  br label %15

15:                                               ; preds = %13, %11
  %16 = phi %"class.std::__1::basic_ostream"* [ %12, %11 ], [ %14, %13 ]
  ret %"class.std::__1::basic_ostream"* %16
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN4baselsERNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEERKNS_16UnguessableTokenE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"class.base::UnguessableToken"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3url16IsSameOriginWithERK4GURLS2_(%class.GURL* dereferenceable(120), %class.GURL* dereferenceable(120)) local_unnamed_addr #0 {
  %3 = alloca %"class.url::Origin", align 8
  %4 = alloca %"class.url::Origin", align 8
  %5 = bitcast %"class.url::Origin"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %5) #12
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %3, %class.GURL* dereferenceable(120) %0)
  %6 = bitcast %"class.url::Origin"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %6) #12
  call void @_ZN3url6Origin6CreateERK4GURL(%"class.url::Origin"* nonnull sret %4, %class.GURL* dereferenceable(120) %1)
  %7 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %3, i64 0, i32 0
  %8 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %4, i64 0, i32 0
  %9 = call zeroext i1 @_ZNK3url14SchemeHostPorteqERKS0_(%"class.url::SchemeHostPort"* nonnull %7, %"class.url::SchemeHostPort"* nonnull dereferenceable(56) %8) #12
  br i1 %9, label %10, label %39

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp ne i8 %12, 0
  %14 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp ne i8 %15, 0
  %17 = xor i1 %13, %16
  %18 = xor i1 %13, true
  %19 = or i1 %17, %18
  %20 = xor i1 %17, true
  br i1 %19, label %39, label %21

21:                                               ; preds = %10
  %22 = icmp eq i8 %15, 0
  br i1 %22, label %23, label %24, !prof !18

23:                                               ; preds = %21
  call void @llvm.trap() #12
  unreachable

24:                                               ; preds = %21
  %25 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %26, %28
  br i1 %29, label %30, label %39

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %4, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = getelementptr inbounds %"class.url::Origin", %"class.url::Origin"* %3, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %34 = load i64, i64* %33, align 8
  %35 = icmp eq i64 %32, %34
  br i1 %35, label %36, label %39

36:                                               ; preds = %30
  %37 = or i64 %32, %26
  %38 = icmp ne i64 %37, 0
  br label %39

39:                                               ; preds = %2, %10, %24, %30, %36
  %40 = phi i1 [ false, %2 ], [ %20, %10 ], [ false, %30 ], [ %38, %36 ], [ false, %24 ]
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %6) #12
  call void @_ZN3url14SchemeHostPortD1Ev(%"class.url::SchemeHostPort"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %5) #12
  ret i1 %40
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url6Origin5NonceC2Ev(%"class.url::Origin::Nonce"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.url::Origin::Nonce"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %2, i8 0, i64 16, i1 false) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url6Origin5NonceC2ERKN4base16UnguessableTokenE(%"class.url::Origin::Nonce"* nocapture, %"class.base::UnguessableToken"* nocapture readonly dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = bitcast %"class.url::Origin::Nonce"* %0 to i8*
  %5 = bitcast %"class.base::UnguessableToken"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 %5, i64 16, i1 false)
  %6 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %0, i64 0, i32 0, i32 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %9
  %14 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #12
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.12, i64 0, i64 0), i32 400, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.13, i64 0, i64 0)) #12
  %15 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #12
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #12
  br label %16

16:                                               ; preds = %2, %9, %13
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url6Origin5NonceC2ERKS1_(%"class.url::Origin::Nonce"* nocapture, %"class.url::Origin::Nonce"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = tail call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #12
  %12 = extractvalue { i64, i64 } %11, 0
  %13 = extractvalue { i64, i64 } %11, 1
  store i64 %12, i64* %3, align 8
  store i64 %13, i64* %7, align 8
  br label %14

14:                                               ; preds = %2, %6, %10
  %15 = bitcast %"class.url::Origin::Nonce"* %0 to i8*
  %16 = bitcast %"class.url::Origin::Nonce"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(16) %"class.url::Origin::Nonce"* @_ZN3url6Origin5NonceaSERKS1_(%"class.url::Origin::Nonce"* returned, %"class.url::Origin::Nonce"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %1, i64 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = tail call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #12
  %12 = extractvalue { i64, i64 } %11, 0
  %13 = extractvalue { i64, i64 } %11, 1
  store i64 %12, i64* %3, align 8
  store i64 %13, i64* %7, align 8
  br label %14

14:                                               ; preds = %2, %6, %10
  %15 = bitcast %"class.url::Origin::Nonce"* %0 to i8*
  %16 = bitcast %"class.url::Origin::Nonce"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %15, i8* align 8 %16, i64 16, i1 false)
  ret %"class.url::Origin::Nonce"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url6Origin5NonceC2EOS1_(%"class.url::Origin::Nonce"* nocapture, %"class.url::Origin::Nonce"* nocapture dereferenceable(16)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.url::Origin::Nonce"* %0 to i8*
  %4 = bitcast %"class.url::Origin::Nonce"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %3, i8* align 8 %4, i64 16, i1 false)
  %5 = bitcast %"class.url::Origin::Nonce"* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3url6Origin5NonceltERKS1_(%"class.url::Origin::Nonce"* nocapture, %"class.url::Origin::Nonce"* nocapture dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %6, label %14

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %0, i64 0, i32 0, i32 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %10, label %14

10:                                               ; preds = %6
  %11 = tail call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #12
  %12 = extractvalue { i64, i64 } %11, 0
  %13 = extractvalue { i64, i64 } %11, 1
  store i64 %12, i64* %3, align 8
  store i64 %13, i64* %7, align 8
  br label %14

14:                                               ; preds = %2, %6, %10
  %15 = phi i64 [ %4, %2 ], [ 0, %6 ], [ %12, %10 ]
  %16 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %1, i64 0, i32 0, i32 0, i32 0
  %17 = load i64, i64* %16, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %19, label %28

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %1, i64 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %23, label %32

23:                                               ; preds = %19
  %24 = tail call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #12
  %25 = extractvalue { i64, i64 } %24, 0
  %26 = extractvalue { i64, i64 } %24, 1
  store i64 %25, i64* %16, align 8
  store i64 %26, i64* %20, align 8
  %27 = load i64, i64* %3, align 8
  br label %28

28:                                               ; preds = %14, %23
  %29 = phi i64 [ %17, %14 ], [ %25, %23 ]
  %30 = phi i64 [ %15, %14 ], [ %27, %23 ]
  %31 = icmp ult i64 %30, %29
  br i1 %31, label %42, label %32

32:                                               ; preds = %19, %28
  %33 = phi i64 [ %30, %28 ], [ %15, %19 ]
  %34 = phi i64 [ %29, %28 ], [ 0, %19 ]
  %35 = icmp ult i64 %34, %33
  br i1 %35, label %42, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %0, i64 0, i32 0, i32 0, i32 1
  %38 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %1, i64 0, i32 0, i32 0, i32 1
  %39 = load i64, i64* %37, align 8
  %40 = load i64, i64* %38, align 8
  %41 = icmp ult i64 %39, %40
  br label %42

42:                                               ; preds = %28, %32, %36
  %43 = phi i1 [ %41, %36 ], [ true, %28 ], [ false, %32 ]
  ret i1 %43
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3url6Origin5NonceeqERKS1_(%"class.url::Origin::Nonce"* readonly, %"class.url::Origin::Nonce"* readonly dereferenceable(16)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %19

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %14, label %19

14:                                               ; preds = %8
  %15 = or i64 %4, %10
  %16 = icmp ne i64 %15, 0
  %17 = icmp eq %"class.url::Origin::Nonce"* %1, %0
  %18 = or i1 %16, %17
  br label %19

19:                                               ; preds = %2, %14, %8
  %20 = phi i1 [ false, %8 ], [ %18, %14 ], [ false, %2 ]
  ret i1 %20
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3url6Origin5NonceneERKS1_(%"class.url::Origin::Nonce"* readonly, %"class.url::Origin::Nonce"* readonly dereferenceable(16)) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8
  %5 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %0, i64 0, i32 0, i32 0, i32 0
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %4, %6
  br i1 %7, label %8, label %19

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %1, i64 0, i32 0, i32 0, i32 1
  %10 = load i64, i64* %9, align 8
  %11 = getelementptr inbounds %"class.url::Origin::Nonce", %"class.url::Origin::Nonce"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %10, %12
  br i1 %13, label %14, label %19

14:                                               ; preds = %8
  %15 = or i64 %10, %4
  %16 = icmp eq i64 %15, 0
  %17 = icmp ne %"class.url::Origin::Nonce"* %1, %0
  %18 = and i1 %17, %16
  br label %19

19:                                               ; preds = %2, %8, %14
  %20 = phi i1 [ true, %8 ], [ %18, %14 ], [ true, %2 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url5debug20ScopedOriginCrashKeyC2EPN4base5debug14CrashKeyStringEPKNS_6OriginE(%"class.url::debug::ScopedOriginCrashKey"*, %"struct.base::debug::CrashKeyString"*, %"class.url::Origin"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = getelementptr inbounds %"class.url::debug::ScopedOriginCrashKey", %"class.url::debug::ScopedOriginCrashKey"* %0, i64 0, i32 0
  %6 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #12
  %7 = icmp eq %"class.url::Origin"* %2, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %3
  call void @_ZNK3url6Origin14GetDebugStringEb(%"class.std::__1::basic_string"* nonnull sret %4, %"class.url::Origin"* nonnull %2, i1 zeroext false)
  %9 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  br label %18

14:                                               ; preds = %3
  %15 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  store i8 7, i8* %16, align 1
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %6, i8* align 1 getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0), i64 7, i1 false) #12
  %17 = getelementptr inbounds i8, i8* %6, i64 7
  store i8 0, i8* %17, align 1
  br label %18

18:                                               ; preds = %14, %8
  %19 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %15, %14 ], [ %9, %8 ]
  %20 = phi i64 [ undef, %14 ], [ %13, %8 ]
  %21 = phi i8 [ 7, %14 ], [ %11, %8 ]
  %22 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %23 = icmp slt i8 %21, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = select i1 %23, i8* %25, i8* %6
  %27 = zext i8 %21 to i64
  %28 = select i1 %23, i64 %20, i64 %27
  call void @_ZN4base5debug20ScopedCrashKeyStringC2EPNS0_14CrashKeyStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::debug::ScopedCrashKeyString"* %5, %"struct.base::debug::CrashKeyString"* %1, i8* %26, i64 %28) #12
  %29 = load i8, i8* %22, align 1
  %30 = icmp slt i8 %29, 0
  br i1 %30, label %31, label %33

31:                                               ; preds = %18
  %32 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %32) #13
  br label %33

33:                                               ; preds = %18, %31
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #12
  ret void
}

declare void @_ZN4base5debug20ScopedCrashKeyStringC2EPNS0_14CrashKeyStringENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.base::debug::ScopedCrashKeyString"*, %"struct.base::debug::CrashKeyString"*, i8*, i64) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5debug20ScopedCrashKeyStringD2Ev(%"class.base::debug::ScopedCrashKeyString"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3url5debug20ScopedOriginCrashKeyD2Ev(%"class.url::debug::ScopedOriginCrashKey"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.url::debug::ScopedOriginCrashKey", %"class.url::debug::ScopedOriginCrashKey"* %0, i64 0, i32 0
  tail call void @_ZN4base5debug20ScopedCrashKeyStringD2Ev(%"class.base::debug::ScopedCrashKeyString"* %2) #12
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #7

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZN4base11EmptyStringEv() local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEC1ERKS5_mmRKS4_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* dereferenceable(24), i64, i64, %"class.std::__1::allocator"* dereferenceable(1)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__112__tuple_lessILm2EEclINS_5tupleIJRKN3url14SchemeHostPortERKN4absl8optionalINS4_6Origin5NonceEEEEEESF_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less"*, %"class.std::__1::tuple"* dereferenceable(16), %"class.std::__1::tuple"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.url::SchemeHostPort"*, %"class.url::SchemeHostPort"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.url::SchemeHostPort"*, %"class.url::SchemeHostPort"** %6, align 8
  %8 = tail call zeroext i1 @_ZNK3url14SchemeHostPortltERKS0_(%"class.url::SchemeHostPort"* %5, %"class.url::SchemeHostPort"* dereferenceable(56) %7) #12
  br i1 %8, label %99, label %9

9:                                                ; preds = %3
  %10 = load %"class.url::SchemeHostPort"*, %"class.url::SchemeHostPort"** %6, align 8
  %11 = load %"class.url::SchemeHostPort"*, %"class.url::SchemeHostPort"** %4, align 8
  %12 = tail call zeroext i1 @_ZNK3url14SchemeHostPortltERKS0_(%"class.url::SchemeHostPort"* %10, %"class.url::SchemeHostPort"* dereferenceable(56) %11) #12
  br i1 %12, label %99, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 1, i32 0
  %15 = load %"class.absl::optional"*, %"class.absl::optional"** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 1, i32 0
  %17 = load %"class.absl::optional"*, %"class.absl::optional"** %16, align 8
  %18 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %65, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8, i8* %22, align 8, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %99, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %37

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %37

33:                                               ; preds = %29
  %34 = tail call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #12
  %35 = extractvalue { i64, i64 } %34, 0
  %36 = extractvalue { i64, i64 } %34, 1
  store i64 %35, i64* %26, align 8
  store i64 %36, i64* %30, align 8
  br label %37

37:                                               ; preds = %33, %29, %25
  %38 = phi i64 [ %27, %25 ], [ 0, %29 ], [ %35, %33 ]
  %39 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %51

42:                                               ; preds = %37
  %43 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %55

46:                                               ; preds = %42
  %47 = tail call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #12
  %48 = extractvalue { i64, i64 } %47, 0
  %49 = extractvalue { i64, i64 } %47, 1
  store i64 %48, i64* %39, align 8
  store i64 %49, i64* %43, align 8
  %50 = load i64, i64* %26, align 8
  br label %51

51:                                               ; preds = %46, %37
  %52 = phi i64 [ %40, %37 ], [ %48, %46 ]
  %53 = phi i64 [ %38, %37 ], [ %50, %46 ]
  %54 = icmp ult i64 %53, %52
  br i1 %54, label %99, label %55

55:                                               ; preds = %51, %42
  %56 = phi i64 [ %53, %51 ], [ %38, %42 ]
  %57 = phi i64 [ %52, %51 ], [ 0, %42 ]
  %58 = icmp ult i64 %57, %56
  br i1 %58, label %65, label %59

59:                                               ; preds = %55
  %60 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %15, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %62 = load i64, i64* %60, align 8
  %63 = load i64, i64* %61, align 8
  %64 = icmp ult i64 %62, %63
  br i1 %64, label %99, label %65

65:                                               ; preds = %55, %13, %59
  %66 = load %"class.absl::optional"*, %"class.absl::optional"** %16, align 8
  %67 = load %"class.absl::optional"*, %"class.absl::optional"** %14, align 8
  %68 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  %69 = load i8, i8* %68, align 8, !range !2
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %99, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %66, i64 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8, i8* %72, align 8, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %99, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %66, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %77 = load i64, i64* %76, align 8
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %79, label %87

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %66, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = icmp eq i64 %81, 0
  br i1 %82, label %83, label %87

83:                                               ; preds = %79
  %84 = tail call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #12
  %85 = extractvalue { i64, i64 } %84, 0
  %86 = extractvalue { i64, i64 } %84, 1
  store i64 %85, i64* %76, align 8
  store i64 %86, i64* %80, align 8
  br label %87

87:                                               ; preds = %83, %79, %75
  %88 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %67, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %99

91:                                               ; preds = %87
  %92 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %67, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = icmp eq i64 %93, 0
  br i1 %94, label %95, label %99

95:                                               ; preds = %91
  %96 = tail call { i64, i64 } @_ZN4base16UnguessableToken6CreateEv() #12
  %97 = extractvalue { i64, i64 } %96, 0
  %98 = extractvalue { i64, i64 } %96, 1
  store i64 %97, i64* %88, align 8
  store i64 %98, i64* %92, align 8
  br label %99

99:                                               ; preds = %3, %9, %71, %65, %59, %21, %51, %91, %95, %87
  %100 = phi i1 [ false, %91 ], [ false, %95 ], [ false, %87 ], [ true, %3 ], [ false, %9 ], [ true, %59 ], [ false, %65 ], [ false, %71 ], [ true, %21 ], [ true, %51 ]
  ret i1 %100
}

declare zeroext i1 @_ZNK3url14SchemeHostPortltERKS0_(%"class.url::SchemeHostPort"*, %"class.url::SchemeHostPort"* dereferenceable(56)) local_unnamed_addr #1

declare void @_ZN4base9StrAppendEPNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_4spanIKNS_16BasicStringPieceIcS3_EELm18446744073709551615EEE(%"class.std::__1::basic_string"*, i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #1

declare void @_ZN4base6StrCatENS_4spanIKNS_16BasicStringPieceIcNSt3__111char_traitsIcEEEELm18446744073709551615EEE(%"class.std::__1::basic_string"* sret, i64, %"class.base::BasicStringPiece"*) local_unnamed_addr #1

declare void @_ZNK4base5Token8ToStringEv(%"class.std::__1::basic_string"* sret, %"class.base::Token"*) local_unnamed_addr #1

declare void @_ZN4base6Pickle16WriteBytesStaticILm8EEEvPKv(%"class.base::Pickle"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #12
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #12
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #12
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #12
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #12
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #12
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #12
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #12
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #12
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #13
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #12
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #12
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #13
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #12
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #12
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #9

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #10

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #3

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #1

declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEmmPKcm(%"class.std::__1::basic_string"*, i64, i64, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #11

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nofree nounwind readonly }
attributes #12 = { nounwind }
attributes #13 = { builtin nounwind }
attributes #14 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!5 = distinct !{!5, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!8 = distinct !{!8, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!11 = distinct !{!11, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!12 = !{!13}
!13 = distinct !{!13, !14, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!14 = distinct !{!14, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZN4absl13make_optionalIRKN4base16UnguessableTokenEEENS_8optionalINSt3__15decayIT_E4typeEEEOS8_: argument 0"}
!17 = distinct !{!17, !"_ZN4absl13make_optionalIRKN4base16UnguessableTokenEEENS_8optionalINSt3__15decayIT_E4typeEEEOS8_"}
!18 = !{!"branch_weights", i32 1, i32 2000}
!19 = !{!20, !22}
!20 = distinct !{!20, !21, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!21 = distinct !{!21, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!22 = distinct !{!22, !23, !"_ZNK4GURL6schemeEv: argument 0"}
!23 = distinct !{!23, !"_ZNK4GURL6schemeEv"}
!24 = !{!25, !27}
!25 = distinct !{!25, !26, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE: argument 0"}
!26 = distinct !{!26, !"_ZNK4GURL15ComponentStringERKN3url9ComponentE"}
!27 = distinct !{!27, !28, !"_ZNK4GURL6schemeEv: argument 0"}
!28 = distinct !{!28, !"_ZNK4GURL6schemeEv"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZNK3url6Origin9SerializeEv: argument 0"}
!31 = distinct !{!31, !"_ZNK3url6Origin9SerializeEv"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZNK3url6Origin9SerializeEv: argument 0"}
!34 = distinct !{!34, !"_ZNK3url6Origin9SerializeEv"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZNK3url6Origin24GetNonceForSerializationEv: argument 0"}
!37 = distinct !{!37, !"_ZNK3url6Origin24GetNonceForSerializationEv"}
