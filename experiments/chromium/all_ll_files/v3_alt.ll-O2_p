; ModuleID = '../../third_party/boringssl/src/crypto/x509v3/v3_alt.c'
source_filename = "../../third_party/boringssl/src/crypto/x509v3/v3_alt.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.ASN1_ITEM_st = type opaque
%struct.v3_ext_method = type { i32, i32, %struct.ASN1_ITEM_st*, i8* ()*, void (i8*)*, i8* (i8*, i8**, i64)*, i32 (i8*, i8**)*, {}*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, %struct.stack_st_CONF_VALUE* (%struct.v3_ext_method*, i8*, %struct.stack_st_CONF_VALUE*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)*, i32 (%struct.v3_ext_method*, i8*, %struct.bio_st*, i32)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, i8* }
%struct.stack_st_CONF_VALUE = type opaque
%struct.v3_ext_ctx = type { i32, %struct.x509_st*, %struct.x509_st*, %struct.X509_req_st*, %struct.X509_crl_st*, %struct.X509V3_CONF_METHOD_st*, i8* }
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.AUTHORITY_KEYID_st = type { %struct.asn1_string_st*, %struct.stack_st_GENERAL_NAME*, %struct.asn1_string_st* }
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type { %struct.stack_st_GENERAL_SUBTREE*, %struct.stack_st_GENERAL_SUBTREE* }
%struct.stack_st_GENERAL_SUBTREE = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.X509_req_st = type opaque
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.stack_st_X509_REVOKED = type opaque
%struct.ISSUING_DIST_POINT_st = type { %struct.DIST_POINT_NAME_st*, i32, i32, %struct.asn1_string_st*, i32, i32 }
%struct.DIST_POINT_NAME_st = type { i32, %union.anon.0, %struct.X509_name_st* }
%union.anon.0 = type { %struct.stack_st_GENERAL_NAME* }
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.X509V3_CONF_METHOD_st = type { i8* (i8*, i8*, i8*)*, %struct.stack_st_CONF_VALUE* (i8*, i8*)*, void (i8*, i8*)*, void (i8*, %struct.stack_st_CONF_VALUE*)* }
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%struct.GENERAL_NAME_st = type { i32, %union.anon.1 }
%union.anon.1 = type { i8* }
%struct.conf_value_st = type { i8*, i8*, i8* }
%struct.X509_extension_st = type { %struct.asn1_object_st*, i32, %struct.asn1_string_st* }
%struct.otherName_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.X509_name_entry_st = type { %struct.asn1_object_st*, %struct.asn1_string_st*, i32, i32 }

@GENERAL_NAMES_it = external constant %struct.ASN1_ITEM_st, align 1
@v3_alt = hidden local_unnamed_addr constant [3 x { i32, i32, %struct.ASN1_ITEM_st*, i8* ()*, void (i8*)*, i8* (i8*, i8**, i64)*, i32 (i8*, i8**)*, i8* (%struct.v3_ext_method*, i8*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, %struct.stack_st_CONF_VALUE* (%struct.v3_ext_method*, i8*, %struct.stack_st_CONF_VALUE*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)*, i32 (%struct.v3_ext_method*, i8*, %struct.bio_st*, i32)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, i8* }] [{ i32, i32, %struct.ASN1_ITEM_st*, i8* ()*, void (i8*)*, i8* (i8*, i8**, i64)*, i32 (i8*, i8**)*, i8* (%struct.v3_ext_method*, i8*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, %struct.stack_st_CONF_VALUE* (%struct.v3_ext_method*, i8*, %struct.stack_st_CONF_VALUE*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)*, i32 (%struct.v3_ext_method*, i8*, %struct.bio_st*, i32)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, i8* } { i32 85, i32 0, %struct.ASN1_ITEM_st* @GENERAL_NAMES_it, i8* ()* null, void (i8*)* null, i8* (i8*, i8**, i64)* null, i32 (i8*, i8**)* null, i8* (%struct.v3_ext_method*, i8*)* null, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)* null, %struct.stack_st_CONF_VALUE* (%struct.v3_ext_method*, i8*, %struct.stack_st_CONF_VALUE*)* bitcast (%struct.stack_st_CONF_VALUE* (%struct.v3_ext_method*, %struct.stack_st_GENERAL_NAME*, %struct.stack_st_CONF_VALUE*)* @i2v_GENERAL_NAMES to %struct.stack_st_CONF_VALUE* (%struct.v3_ext_method*, i8*, %struct.stack_st_CONF_VALUE*)*), i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)* bitcast (%struct.stack_st_GENERAL_NAME* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)* @v2i_subject_alt to i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)*), i32 (%struct.v3_ext_method*, i8*, %struct.bio_st*, i32)* null, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)* null, i8* null }, { i32, i32, %struct.ASN1_ITEM_st*, i8* ()*, void (i8*)*, i8* (i8*, i8**, i64)*, i32 (i8*, i8**)*, i8* (%struct.v3_ext_method*, i8*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, %struct.stack_st_CONF_VALUE* (%struct.v3_ext_method*, i8*, %struct.stack_st_CONF_VALUE*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)*, i32 (%struct.v3_ext_method*, i8*, %struct.bio_st*, i32)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, i8* } { i32 86, i32 0, %struct.ASN1_ITEM_st* @GENERAL_NAMES_it, i8* ()* null, void (i8*)* null, i8* (i8*, i8**, i64)* null, i32 (i8*, i8**)* null, i8* (%struct.v3_ext_method*, i8*)* null, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)* null, %struct.stack_st_CONF_VALUE* (%struct.v3_ext_method*, i8*, %struct.stack_st_CONF_VALUE*)* bitcast (%struct.stack_st_CONF_VALUE* (%struct.v3_ext_method*, %struct.stack_st_GENERAL_NAME*, %struct.stack_st_CONF_VALUE*)* @i2v_GENERAL_NAMES to %struct.stack_st_CONF_VALUE* (%struct.v3_ext_method*, i8*, %struct.stack_st_CONF_VALUE*)*), i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)* bitcast (%struct.stack_st_GENERAL_NAME* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)* @v2i_issuer_alt to i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)*), i32 (%struct.v3_ext_method*, i8*, %struct.bio_st*, i32)* null, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)* null, i8* null }, { i32, i32, %struct.ASN1_ITEM_st*, i8* ()*, void (i8*)*, i8* (i8*, i8**, i64)*, i32 (i8*, i8**)*, i8* (%struct.v3_ext_method*, i8*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, %struct.stack_st_CONF_VALUE* (%struct.v3_ext_method*, i8*, %struct.stack_st_CONF_VALUE*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)*, i32 (%struct.v3_ext_method*, i8*, %struct.bio_st*, i32)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, i8* } { i32 771, i32 0, %struct.ASN1_ITEM_st* @GENERAL_NAMES_it, i8* ()* null, void (i8*)* null, i8* (i8*, i8**, i64)* null, i32 (i8*, i8**)* null, i8* (%struct.v3_ext_method*, i8*)* null, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)* null, %struct.stack_st_CONF_VALUE* (%struct.v3_ext_method*, i8*, %struct.stack_st_CONF_VALUE*)* bitcast (%struct.stack_st_CONF_VALUE* (%struct.v3_ext_method*, %struct.stack_st_GENERAL_NAME*, %struct.stack_st_CONF_VALUE*)* @i2v_GENERAL_NAMES to %struct.stack_st_CONF_VALUE* (%struct.v3_ext_method*, i8*, %struct.stack_st_CONF_VALUE*)*), i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)* null, i32 (%struct.v3_ext_method*, i8*, %struct.bio_st*, i32)* null, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)* null, i8* null }], align 16
@.str = private unnamed_addr constant [10 x i8] c"othername\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"<unsupported>\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"X400Name\00", align 1
@.str.3 = private unnamed_addr constant [13 x i8] c"EdiPartyName\00", align 1
@.str.4 = private unnamed_addr constant [6 x i8] c"email\00", align 1
@.str.5 = private unnamed_addr constant [4 x i8] c"DNS\00", align 1
@.str.6 = private unnamed_addr constant [4 x i8] c"URI\00", align 1
@.str.7 = private unnamed_addr constant [8 x i8] c"DirName\00", align 1
@.str.8 = private unnamed_addr constant [12 x i8] c"%d.%d.%d.%d\00", align 1
@.str.9 = private unnamed_addr constant [3 x i8] c"%X\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.11 = private unnamed_addr constant [11 x i8] c"IP Address\00", align 1
@.str.12 = private unnamed_addr constant [10 x i8] c"<invalid>\00", align 1
@.str.13 = private unnamed_addr constant [14 x i8] c"Registered ID\00", align 1
@.str.14 = private unnamed_addr constant [24 x i8] c"othername:<unsupported>\00", align 1
@.str.15 = private unnamed_addr constant [23 x i8] c"X400Name:<unsupported>\00", align 1
@.str.16 = private unnamed_addr constant [27 x i8] c"EdiPartyName:<unsupported>\00", align 1
@.str.17 = private unnamed_addr constant [7 x i8] c"email:\00", align 1
@.str.18 = private unnamed_addr constant [5 x i8] c"DNS:\00", align 1
@.str.19 = private unnamed_addr constant [5 x i8] c"URI:\00", align 1
@.str.20 = private unnamed_addr constant [10 x i8] c"DirName: \00", align 1
@.str.21 = private unnamed_addr constant [23 x i8] c"IP Address:%d.%d.%d.%d\00", align 1
@.str.22 = private unnamed_addr constant [4 x i8] c":%X\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.24 = private unnamed_addr constant [21 x i8] c"IP Address:<invalid>\00", align 1
@.str.25 = private unnamed_addr constant [55 x i8] c"../../third_party/boringssl/src/crypto/x509v3/v3_alt.c\00", align 1
@.str.26 = private unnamed_addr constant [7 x i8] c"value=\00", align 1
@.str.27 = private unnamed_addr constant [4 x i8] c"RID\00", align 1
@.str.28 = private unnamed_addr constant [3 x i8] c"IP\00", align 1
@.str.29 = private unnamed_addr constant [8 x i8] c"dirName\00", align 1
@.str.30 = private unnamed_addr constant [10 x i8] c"otherName\00", align 1
@.str.31 = private unnamed_addr constant [6 x i8] c"name=\00", align 1
@.str.32 = private unnamed_addr constant [7 x i8] c"issuer\00", align 1
@.str.33 = private unnamed_addr constant [5 x i8] c"copy\00", align 1
@.str.34 = private unnamed_addr constant [5 x i8] c"move\00", align 1
@.str.35 = private unnamed_addr constant [9 x i8] c"section=\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.stack_st_CONF_VALUE* @i2v_GENERAL_NAMES(%struct.v3_ext_method* nocapture readnone, %struct.stack_st_GENERAL_NAME*, %struct.stack_st_CONF_VALUE*) #0 {
  %4 = bitcast %struct.stack_st_GENERAL_NAME* %1 to %struct.stack_st*
  %5 = tail call i64 @sk_num(%struct.stack_st* %4) #6
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %16, label %7

7:                                                ; preds = %3, %7
  %8 = phi i64 [ %13, %7 ], [ 0, %3 ]
  %9 = phi %struct.stack_st_CONF_VALUE* [ %12, %7 ], [ %2, %3 ]
  %10 = tail call i8* @sk_value(%struct.stack_st* %4, i64 %8) #6
  %11 = bitcast i8* %10 to %struct.GENERAL_NAME_st*
  %12 = tail call %struct.stack_st_CONF_VALUE* @i2v_GENERAL_NAME(%struct.v3_ext_method* undef, %struct.GENERAL_NAME_st* %11, %struct.stack_st_CONF_VALUE* %9)
  %13 = add nuw i64 %8, 1
  %14 = tail call i64 @sk_num(%struct.stack_st* %4) #6
  %15 = icmp ult i64 %13, %14
  br i1 %15, label %7, label %16

16:                                               ; preds = %7, %3
  %17 = phi %struct.stack_st_CONF_VALUE* [ %2, %3 ], [ %12, %7 ]
  %18 = icmp eq %struct.stack_st_CONF_VALUE* %17, null
  br i1 %18, label %19, label %22

19:                                               ; preds = %16
  %20 = tail call %struct.stack_st* @sk_new_null() #6
  %21 = bitcast %struct.stack_st* %20 to %struct.stack_st_CONF_VALUE*
  br label %22

22:                                               ; preds = %16, %19
  %23 = phi %struct.stack_st_CONF_VALUE* [ %21, %19 ], [ %17, %16 ]
  ret %struct.stack_st_CONF_VALUE* %23
}

; Function Attrs: nounwind ssp uwtable
define internal %struct.stack_st_GENERAL_NAME* @v2i_subject_alt(%struct.v3_ext_method* nocapture readnone, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*) #0 {
  %4 = tail call %struct.stack_st* @sk_new_null() #6
  %5 = bitcast %struct.stack_st* %4 to %struct.stack_st_GENERAL_NAME*
  %6 = icmp eq %struct.stack_st* %4, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = bitcast %struct.stack_st_CONF_VALUE* %2 to %struct.stack_st*
  %9 = tail call i64 @sk_num(%struct.stack_st* %8) #6
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %58, label %12

11:                                               ; preds = %3
  tail call void @ERR_put_error(i32 20, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 335) #6
  br label %58

12:                                               ; preds = %7, %53
  %13 = phi i64 [ %54, %53 ], [ 0, %7 ]
  %14 = tail call i8* @sk_value(%struct.stack_st* %8, i64 %13) #6
  %15 = bitcast i8* %14 to %struct.conf_value_st*
  %16 = getelementptr inbounds i8, i8* %14, i64 8
  %17 = bitcast i8* %16 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = tail call i32 @x509v3_name_cmp(i8* %18, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0)) #6
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %32

21:                                               ; preds = %12
  %22 = getelementptr inbounds i8, i8* %14, i64 16
  %23 = bitcast i8* %22 to i8**
  %24 = load i8*, i8** %23, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %32, label %26

26:                                               ; preds = %21
  %27 = tail call i32 @strcmp(i8* nonnull %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0)) #7
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %26
  %30 = tail call fastcc i32 @copy_email(%struct.v3_ext_ctx* %1, %struct.stack_st_GENERAL_NAME* nonnull %5, i32 0)
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %57, label %53

32:                                               ; preds = %26, %21, %12
  %33 = load i8*, i8** %17, align 8
  %34 = tail call i32 @x509v3_name_cmp(i8* %33, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0)) #6
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %47

36:                                               ; preds = %32
  %37 = getelementptr inbounds i8, i8* %14, i64 16
  %38 = bitcast i8* %37 to i8**
  %39 = load i8*, i8** %38, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %47, label %41

41:                                               ; preds = %36
  %42 = tail call i32 @strcmp(i8* nonnull %39, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.34, i64 0, i64 0)) #7
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %47

44:                                               ; preds = %41
  %45 = tail call fastcc i32 @copy_email(%struct.v3_ext_ctx* %1, %struct.stack_st_GENERAL_NAME* nonnull %5, i32 1)
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %57, label %53

47:                                               ; preds = %41, %36, %32
  %48 = tail call %struct.GENERAL_NAME_st* @v2i_GENERAL_NAME_ex(%struct.GENERAL_NAME_st* null, %struct.v3_ext_method* %0, %struct.v3_ext_ctx* %1, %struct.conf_value_st* %15, i32 0) #6
  %49 = icmp eq %struct.GENERAL_NAME_st* %48, null
  br i1 %49, label %57, label %50

50:                                               ; preds = %47
  %51 = bitcast %struct.GENERAL_NAME_st* %48 to i8*
  %52 = tail call i64 @sk_push(%struct.stack_st* nonnull %4, i8* nonnull %51) #6
  br label %53

53:                                               ; preds = %50, %29, %44
  %54 = add nuw i64 %13, 1
  %55 = tail call i64 @sk_num(%struct.stack_st* %8) #6
  %56 = icmp ult i64 %54, %55
  br i1 %56, label %12, label %58

57:                                               ; preds = %47, %29, %44
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %4, void (void (i8*)*, i8*)* nonnull @sk_GENERAL_NAME_call_free_func, void (i8*)* bitcast (void (%struct.GENERAL_NAME_st*)* @GENERAL_NAME_free to void (i8*)*)) #6
  br label %58

58:                                               ; preds = %53, %7, %57, %11
  %59 = phi %struct.stack_st_GENERAL_NAME* [ null, %57 ], [ null, %11 ], [ %5, %7 ], [ %5, %53 ]
  ret %struct.stack_st_GENERAL_NAME* %59
}

; Function Attrs: nounwind ssp uwtable
define internal %struct.stack_st_GENERAL_NAME* @v2i_issuer_alt(%struct.v3_ext_method* nocapture readnone, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*) #0 {
  %4 = tail call %struct.stack_st* @sk_new_null() #6
  %5 = bitcast %struct.stack_st* %4 to %struct.stack_st_GENERAL_NAME*
  %6 = icmp eq %struct.stack_st* %4, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = bitcast %struct.stack_st_CONF_VALUE* %2 to %struct.stack_st*
  %9 = tail call i64 @sk_num(%struct.stack_st* %8) #6
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %83, label %11

11:                                               ; preds = %7
  %12 = icmp eq %struct.v3_ext_ctx* %1, null
  %13 = getelementptr inbounds %struct.v3_ext_ctx, %struct.v3_ext_ctx* %1, i64 0, i32 0
  %14 = getelementptr inbounds %struct.v3_ext_ctx, %struct.v3_ext_ctx* %1, i64 0, i32 1
  br label %16

15:                                               ; preds = %3
  tail call void @ERR_put_error(i32 20, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 265) #6
  br label %83

16:                                               ; preds = %11, %78
  %17 = phi i64 [ 0, %11 ], [ %79, %78 ]
  %18 = tail call i8* @sk_value(%struct.stack_st* %8, i64 %17) #6
  %19 = bitcast i8* %18 to %struct.conf_value_st*
  %20 = getelementptr inbounds i8, i8* %18, i64 8
  %21 = bitcast i8* %20 to i8**
  %22 = load i8*, i8** %21, align 8
  %23 = tail call i32 @x509v3_name_cmp(i8* %22, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.32, i64 0, i64 0)) #6
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %72

25:                                               ; preds = %16
  %26 = getelementptr inbounds i8, i8* %18, i64 16
  %27 = bitcast i8* %26 to i8**
  %28 = load i8*, i8** %27, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %72, label %30

30:                                               ; preds = %25
  %31 = tail call i32 @strcmp(i8* nonnull %28, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.33, i64 0, i64 0)) #7
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %33, label %72

33:                                               ; preds = %30
  br i1 %12, label %40, label %34

34:                                               ; preds = %33
  %35 = load i32, i32* %13, align 8
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %78, label %37

37:                                               ; preds = %34
  %38 = load %struct.x509_st*, %struct.x509_st** %14, align 8
  %39 = icmp eq %struct.x509_st* %38, null
  br i1 %39, label %40, label %41

40:                                               ; preds = %33, %37
  tail call void @ERR_put_error(i32 20, i32 0, i32 141, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 294) #6
  br label %82

41:                                               ; preds = %37
  %42 = tail call i32 @X509_get_ext_by_NID(%struct.x509_st* nonnull %38, i32 85, i32 -1) #6
  %43 = icmp slt i32 %42, 0
  br i1 %43, label %78, label %44

44:                                               ; preds = %41
  %45 = load %struct.x509_st*, %struct.x509_st** %14, align 8
  %46 = tail call %struct.X509_extension_st* @X509_get_ext(%struct.x509_st* %45, i32 %42) #6
  %47 = icmp eq %struct.X509_extension_st* %46, null
  br i1 %47, label %56, label %48

48:                                               ; preds = %44
  %49 = tail call i8* @X509V3_EXT_d2i(%struct.X509_extension_st* nonnull %46) #6
  %50 = bitcast i8* %49 to %struct.stack_st_GENERAL_NAME*
  %51 = icmp eq i8* %49, null
  br i1 %51, label %56, label %52

52:                                               ; preds = %48
  %53 = bitcast %struct.stack_st_GENERAL_NAME* %50 to %struct.stack_st*
  %54 = tail call i64 @sk_num(%struct.stack_st* nonnull %53) #6
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %71, label %57

56:                                               ; preds = %48, %44
  tail call void @ERR_put_error(i32 20, i32 0, i32 136, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 306) #6
  br label %69

57:                                               ; preds = %52, %62
  %58 = phi i64 [ %64, %62 ], [ 0, %52 ]
  %59 = tail call i8* @sk_value(%struct.stack_st* nonnull %53, i64 %58) #6
  %60 = tail call i64 @sk_push(%struct.stack_st* nonnull %4, i8* %59) #6
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %67, label %62

62:                                               ; preds = %57
  %63 = tail call i8* @sk_set(%struct.stack_st* nonnull %53, i64 %58, i8* null) #6
  %64 = add nuw i64 %58, 1
  %65 = tail call i64 @sk_num(%struct.stack_st* nonnull %53) #6
  %66 = icmp ult i64 %64, %65
  br i1 %66, label %57, label %71

67:                                               ; preds = %57
  %68 = bitcast i8* %49 to %struct.stack_st_GENERAL_NAME*
  tail call void @ERR_put_error(i32 20, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 313) #6
  br label %69

69:                                               ; preds = %67, %56
  %70 = phi %struct.stack_st_GENERAL_NAME* [ null, %56 ], [ %68, %67 ]
  tail call void @GENERAL_NAMES_free(%struct.stack_st_GENERAL_NAME* %70) #6
  br label %82

71:                                               ; preds = %62, %52
  tail call void @GENERAL_NAMES_free(%struct.stack_st_GENERAL_NAME* nonnull %50) #6
  br label %78

72:                                               ; preds = %30, %25, %16
  %73 = tail call %struct.GENERAL_NAME_st* @v2i_GENERAL_NAME_ex(%struct.GENERAL_NAME_st* null, %struct.v3_ext_method* %0, %struct.v3_ext_ctx* %1, %struct.conf_value_st* %19, i32 0) #6
  %74 = icmp eq %struct.GENERAL_NAME_st* %73, null
  br i1 %74, label %82, label %75

75:                                               ; preds = %72
  %76 = bitcast %struct.GENERAL_NAME_st* %73 to i8*
  %77 = tail call i64 @sk_push(%struct.stack_st* nonnull %4, i8* nonnull %76) #6
  br label %78

78:                                               ; preds = %41, %34, %75, %71
  %79 = add nuw i64 %17, 1
  %80 = tail call i64 @sk_num(%struct.stack_st* %8) #6
  %81 = icmp ult i64 %79, %80
  br i1 %81, label %16, label %83

82:                                               ; preds = %72, %69, %40
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %4, void (void (i8*)*, i8*)* nonnull @sk_GENERAL_NAME_call_free_func, void (i8*)* bitcast (void (%struct.GENERAL_NAME_st*)* @GENERAL_NAME_free to void (i8*)*)) #6
  br label %83

83:                                               ; preds = %78, %7, %82, %15
  %84 = phi %struct.stack_st_GENERAL_NAME* [ null, %82 ], [ null, %15 ], [ %5, %7 ], [ %5, %78 ]
  ret %struct.stack_st_GENERAL_NAME* %84
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.stack_st_CONF_VALUE* @i2v_GENERAL_NAME(%struct.v3_ext_method* nocapture readnone, %struct.GENERAL_NAME_st* nocapture readonly, %struct.stack_st_CONF_VALUE*) local_unnamed_addr #0 {
  %4 = alloca %struct.stack_st_CONF_VALUE*, align 8
  %5 = alloca [256 x i8], align 16
  %6 = alloca [5 x i8], align 1
  store %struct.stack_st_CONF_VALUE* %2, %struct.stack_st_CONF_VALUE** %4, align 8
  %7 = getelementptr inbounds [256 x i8], [256 x i8]* %5, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 256, i8* nonnull %7) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %7, i8 -86, i64 256, i1 false)
  %8 = getelementptr inbounds [5 x i8], [5 x i8]* %6, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 5, i8* nonnull %8) #6
  %9 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %1, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %8, i8 -86, i64 5, i1 false)
  %10 = load i32, i32* %9, align 8
  switch i32 %10, label %174 [
    i32 0, label %11
    i32 3, label %14
    i32 5, label %17
    i32 1, label %20
    i32 2, label %28
    i32 6, label %36
    i32 4, label %44
    i32 7, label %53
    i32 8, label %167
  ]

11:                                               ; preds = %3
  %12 = call i32 @X509V3_add_value(i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), %struct.stack_st_CONF_VALUE** nonnull %4) #6
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %176, label %174

14:                                               ; preds = %3
  %15 = call i32 @X509V3_add_value(i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), %struct.stack_st_CONF_VALUE** nonnull %4) #6
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %176, label %174

17:                                               ; preds = %3
  %18 = call i32 @X509V3_add_value(i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), %struct.stack_st_CONF_VALUE** nonnull %4) #6
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %176, label %174

20:                                               ; preds = %3
  %21 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %1, i64 0, i32 1
  %22 = bitcast %union.anon.1* %21 to %struct.asn1_string_st**
  %23 = load %struct.asn1_string_st*, %struct.asn1_string_st** %22, align 8
  %24 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %23, i64 0, i32 2
  %25 = load i8*, i8** %24, align 8
  %26 = call i32 @X509V3_add_value_uchar(i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0), i8* %25, %struct.stack_st_CONF_VALUE** nonnull %4) #6
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %176, label %174

28:                                               ; preds = %3
  %29 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %1, i64 0, i32 1
  %30 = bitcast %union.anon.1* %29 to %struct.asn1_string_st**
  %31 = load %struct.asn1_string_st*, %struct.asn1_string_st** %30, align 8
  %32 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %31, i64 0, i32 2
  %33 = load i8*, i8** %32, align 8
  %34 = call i32 @X509V3_add_value_uchar(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0), i8* %33, %struct.stack_st_CONF_VALUE** nonnull %4) #6
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %176, label %174

36:                                               ; preds = %3
  %37 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %1, i64 0, i32 1
  %38 = bitcast %union.anon.1* %37 to %struct.asn1_string_st**
  %39 = load %struct.asn1_string_st*, %struct.asn1_string_st** %38, align 8
  %40 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %39, i64 0, i32 2
  %41 = load i8*, i8** %40, align 8
  %42 = call i32 @X509V3_add_value_uchar(i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0), i8* %41, %struct.stack_st_CONF_VALUE** nonnull %4) #6
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %176, label %174

44:                                               ; preds = %3
  %45 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %1, i64 0, i32 1
  %46 = bitcast %union.anon.1* %45 to %struct.X509_name_st**
  %47 = load %struct.X509_name_st*, %struct.X509_name_st** %46, align 8
  %48 = call i8* @X509_NAME_oneline(%struct.X509_name_st* %47, i8* nonnull %7, i32 256) #6
  %49 = icmp eq i8* %48, null
  br i1 %49, label %176, label %50

50:                                               ; preds = %44
  %51 = call i32 @X509V3_add_value(i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.7, i64 0, i64 0), i8* nonnull %7, %struct.stack_st_CONF_VALUE** nonnull %4) #6
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %176, label %174

53:                                               ; preds = %3
  %54 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %1, i64 0, i32 1
  %55 = bitcast %union.anon.1* %54 to %struct.asn1_string_st**
  %56 = load %struct.asn1_string_st*, %struct.asn1_string_st** %55, align 8
  %57 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %56, i64 0, i32 2
  %58 = load i8*, i8** %57, align 8
  %59 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %56, i64 0, i32 0
  %60 = load i32, i32* %59, align 8
  switch i32 %60, label %161 [
    i32 4, label %61
    i32 16, label %74
  ]

61:                                               ; preds = %53
  %62 = load i8, i8* %58, align 1
  %63 = zext i8 %62 to i32
  %64 = getelementptr inbounds i8, i8* %58, i64 1
  %65 = load i8, i8* %64, align 1
  %66 = zext i8 %65 to i32
  %67 = getelementptr inbounds i8, i8* %58, i64 2
  %68 = load i8, i8* %67, align 1
  %69 = zext i8 %68 to i32
  %70 = getelementptr inbounds i8, i8* %58, i64 3
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* nonnull %7, i64 256, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.8, i64 0, i64 0), i32 %63, i32 %66, i32 %69, i32 %72) #6
  br label %164

74:                                               ; preds = %53
  store i8 0, i8* %7, align 16
  %75 = load i8, i8* %58, align 1
  %76 = zext i8 %75 to i32
  %77 = shl nuw nsw i32 %76, 8
  %78 = getelementptr inbounds i8, i8* %58, i64 1
  %79 = load i8, i8* %78, align 1
  %80 = zext i8 %79 to i32
  %81 = or i32 %77, %80
  %82 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* nonnull %8, i64 5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i32 %81) #6
  %83 = call i64 @OPENSSL_strlcat(i8* nonnull %7, i8* nonnull %8, i64 256) #6
  %84 = getelementptr inbounds i8, i8* %58, i64 2
  %85 = call i64 @OPENSSL_strlcat(i8* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i64 256) #6
  %86 = load i8, i8* %84, align 1
  %87 = zext i8 %86 to i32
  %88 = shl nuw nsw i32 %87, 8
  %89 = getelementptr inbounds i8, i8* %58, i64 3
  %90 = load i8, i8* %89, align 1
  %91 = zext i8 %90 to i32
  %92 = or i32 %88, %91
  %93 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* nonnull %8, i64 5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i32 %92) #6
  %94 = call i64 @OPENSSL_strlcat(i8* nonnull %7, i8* nonnull %8, i64 256) #6
  %95 = getelementptr inbounds i8, i8* %58, i64 4
  %96 = call i64 @OPENSSL_strlcat(i8* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i64 256) #6
  %97 = load i8, i8* %95, align 1
  %98 = zext i8 %97 to i32
  %99 = shl nuw nsw i32 %98, 8
  %100 = getelementptr inbounds i8, i8* %58, i64 5
  %101 = load i8, i8* %100, align 1
  %102 = zext i8 %101 to i32
  %103 = or i32 %99, %102
  %104 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* nonnull %8, i64 5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i32 %103) #6
  %105 = call i64 @OPENSSL_strlcat(i8* nonnull %7, i8* nonnull %8, i64 256) #6
  %106 = getelementptr inbounds i8, i8* %58, i64 6
  %107 = call i64 @OPENSSL_strlcat(i8* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i64 256) #6
  %108 = load i8, i8* %106, align 1
  %109 = zext i8 %108 to i32
  %110 = shl nuw nsw i32 %109, 8
  %111 = getelementptr inbounds i8, i8* %58, i64 7
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = or i32 %110, %113
  %115 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* nonnull %8, i64 5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i32 %114) #6
  %116 = call i64 @OPENSSL_strlcat(i8* nonnull %7, i8* nonnull %8, i64 256) #6
  %117 = getelementptr inbounds i8, i8* %58, i64 8
  %118 = call i64 @OPENSSL_strlcat(i8* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i64 256) #6
  %119 = load i8, i8* %117, align 1
  %120 = zext i8 %119 to i32
  %121 = shl nuw nsw i32 %120, 8
  %122 = getelementptr inbounds i8, i8* %58, i64 9
  %123 = load i8, i8* %122, align 1
  %124 = zext i8 %123 to i32
  %125 = or i32 %121, %124
  %126 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* nonnull %8, i64 5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i32 %125) #6
  %127 = call i64 @OPENSSL_strlcat(i8* nonnull %7, i8* nonnull %8, i64 256) #6
  %128 = getelementptr inbounds i8, i8* %58, i64 10
  %129 = call i64 @OPENSSL_strlcat(i8* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i64 256) #6
  %130 = load i8, i8* %128, align 1
  %131 = zext i8 %130 to i32
  %132 = shl nuw nsw i32 %131, 8
  %133 = getelementptr inbounds i8, i8* %58, i64 11
  %134 = load i8, i8* %133, align 1
  %135 = zext i8 %134 to i32
  %136 = or i32 %132, %135
  %137 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* nonnull %8, i64 5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i32 %136) #6
  %138 = call i64 @OPENSSL_strlcat(i8* nonnull %7, i8* nonnull %8, i64 256) #6
  %139 = getelementptr inbounds i8, i8* %58, i64 12
  %140 = call i64 @OPENSSL_strlcat(i8* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i64 256) #6
  %141 = load i8, i8* %139, align 1
  %142 = zext i8 %141 to i32
  %143 = shl nuw nsw i32 %142, 8
  %144 = getelementptr inbounds i8, i8* %58, i64 13
  %145 = load i8, i8* %144, align 1
  %146 = zext i8 %145 to i32
  %147 = or i32 %143, %146
  %148 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* nonnull %8, i64 5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i32 %147) #6
  %149 = call i64 @OPENSSL_strlcat(i8* nonnull %7, i8* nonnull %8, i64 256) #6
  %150 = getelementptr inbounds i8, i8* %58, i64 14
  %151 = call i64 @OPENSSL_strlcat(i8* nonnull %7, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i64 256) #6
  %152 = load i8, i8* %150, align 1
  %153 = zext i8 %152 to i32
  %154 = shl nuw nsw i32 %153, 8
  %155 = getelementptr inbounds i8, i8* %58, i64 15
  %156 = load i8, i8* %155, align 1
  %157 = zext i8 %156 to i32
  %158 = or i32 %154, %157
  %159 = call i32 (i8*, i64, i8*, ...) @BIO_snprintf(i8* nonnull %8, i64 5, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.9, i64 0, i64 0), i32 %158) #6
  %160 = call i64 @OPENSSL_strlcat(i8* nonnull %7, i8* nonnull %8, i64 256) #6
  br label %164

161:                                              ; preds = %53
  %162 = call i32 @X509V3_add_value(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.12, i64 0, i64 0), %struct.stack_st_CONF_VALUE** nonnull %4) #6
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %176, label %174

164:                                              ; preds = %74, %61
  %165 = call i32 @X509V3_add_value(i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0), i8* nonnull %7, %struct.stack_st_CONF_VALUE** nonnull %4) #6
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %176, label %174

167:                                              ; preds = %3
  %168 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %1, i64 0, i32 1
  %169 = bitcast %union.anon.1* %168 to %struct.asn1_object_st**
  %170 = load %struct.asn1_object_st*, %struct.asn1_object_st** %169, align 8
  %171 = call i32 @i2t_ASN1_OBJECT(i8* nonnull %7, i32 256, %struct.asn1_object_st* %170) #6
  %172 = call i32 @X509V3_add_value(i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0), i8* nonnull %7, %struct.stack_st_CONF_VALUE** nonnull %4) #6
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %176, label %174

174:                                              ; preds = %11, %14, %17, %20, %28, %36, %50, %164, %161, %167, %3
  %175 = load %struct.stack_st_CONF_VALUE*, %struct.stack_st_CONF_VALUE** %4, align 8
  br label %176

176:                                              ; preds = %167, %164, %161, %44, %50, %36, %28, %20, %17, %14, %11, %174
  %177 = phi %struct.stack_st_CONF_VALUE* [ %175, %174 ], [ null, %11 ], [ null, %14 ], [ null, %17 ], [ null, %20 ], [ null, %28 ], [ null, %36 ], [ null, %50 ], [ null, %44 ], [ null, %161 ], [ null, %164 ], [ null, %167 ]
  call void @llvm.lifetime.end.p0i8(i64 5, i8* nonnull %8) #6
  call void @llvm.lifetime.end.p0i8(i64 256, i8* nonnull %7) #6
  ret %struct.stack_st_CONF_VALUE* %177
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @X509V3_add_value(i8*, i8*, %struct.stack_st_CONF_VALUE**) local_unnamed_addr #2

declare i32 @X509V3_add_value_uchar(i8*, i8*, %struct.stack_st_CONF_VALUE**) local_unnamed_addr #2

declare i8* @X509_NAME_oneline(%struct.X509_name_st*, i8*, i32) local_unnamed_addr #2

declare i32 @BIO_snprintf(i8*, i64, i8*, ...) local_unnamed_addr #2

declare i64 @OPENSSL_strlcat(i8*, i8*, i64) local_unnamed_addr #2

declare i32 @i2t_ASN1_OBJECT(i8*, i32, %struct.asn1_object_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @GENERAL_NAME_print(%struct.bio_st*, %struct.GENERAL_NAME_st* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %138 [
    i32 0, label %5
    i32 3, label %7
    i32 5, label %9
    i32 1, label %11
    i32 2, label %17
    i32 6, label %23
    i32 4, label %29
    i32 7, label %35
    i32 8, label %132
  ]

5:                                                ; preds = %2
  %6 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.14, i64 0, i64 0)) #6
  br label %138

7:                                                ; preds = %2
  %8 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.15, i64 0, i64 0)) #6
  br label %138

9:                                                ; preds = %2
  %10 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.16, i64 0, i64 0)) #6
  br label %138

11:                                               ; preds = %2
  %12 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.17, i64 0, i64 0)) #6
  %13 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %1, i64 0, i32 1
  %14 = bitcast %union.anon.1* %13 to %struct.asn1_string_st**
  %15 = load %struct.asn1_string_st*, %struct.asn1_string_st** %14, align 8
  %16 = tail call i32 @ASN1_STRING_print(%struct.bio_st* %0, %struct.asn1_string_st* %15) #6
  br label %138

17:                                               ; preds = %2
  %18 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.18, i64 0, i64 0)) #6
  %19 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %1, i64 0, i32 1
  %20 = bitcast %union.anon.1* %19 to %struct.asn1_string_st**
  %21 = load %struct.asn1_string_st*, %struct.asn1_string_st** %20, align 8
  %22 = tail call i32 @ASN1_STRING_print(%struct.bio_st* %0, %struct.asn1_string_st* %21) #6
  br label %138

23:                                               ; preds = %2
  %24 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.19, i64 0, i64 0)) #6
  %25 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %1, i64 0, i32 1
  %26 = bitcast %union.anon.1* %25 to %struct.asn1_string_st**
  %27 = load %struct.asn1_string_st*, %struct.asn1_string_st** %26, align 8
  %28 = tail call i32 @ASN1_STRING_print(%struct.bio_st* %0, %struct.asn1_string_st* %27) #6
  br label %138

29:                                               ; preds = %2
  %30 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.20, i64 0, i64 0)) #6
  %31 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %1, i64 0, i32 1
  %32 = bitcast %union.anon.1* %31 to %struct.X509_name_st**
  %33 = load %struct.X509_name_st*, %struct.X509_name_st** %32, align 8
  %34 = tail call i32 @X509_NAME_print_ex(%struct.bio_st* %0, %struct.X509_name_st* %33, i32 0, i64 8520479) #6
  br label %138

35:                                               ; preds = %2
  %36 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %1, i64 0, i32 1
  %37 = bitcast %union.anon.1* %36 to %struct.asn1_string_st**
  %38 = load %struct.asn1_string_st*, %struct.asn1_string_st** %37, align 8
  %39 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %38, i64 0, i32 2
  %40 = load i8*, i8** %39, align 8
  %41 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %38, i64 0, i32 0
  %42 = load i32, i32* %41, align 8
  switch i32 %42, label %130 [
    i32 4, label %43
    i32 16, label %56
  ]

43:                                               ; preds = %35
  %44 = load i8, i8* %40, align 1
  %45 = zext i8 %44 to i32
  %46 = getelementptr inbounds i8, i8* %40, i64 1
  %47 = load i8, i8* %46, align 1
  %48 = zext i8 %47 to i32
  %49 = getelementptr inbounds i8, i8* %40, i64 2
  %50 = load i8, i8* %49, align 1
  %51 = zext i8 %50 to i32
  %52 = getelementptr inbounds i8, i8* %40, i64 3
  %53 = load i8, i8* %52, align 1
  %54 = zext i8 %53 to i32
  %55 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.21, i64 0, i64 0), i32 %45, i32 %48, i32 %51, i32 %54) #6
  br label %138

56:                                               ; preds = %35
  %57 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.11, i64 0, i64 0)) #6
  %58 = load i8, i8* %40, align 1
  %59 = zext i8 %58 to i32
  %60 = shl nuw nsw i32 %59, 8
  %61 = getelementptr inbounds i8, i8* %40, i64 1
  %62 = load i8, i8* %61, align 1
  %63 = zext i8 %62 to i32
  %64 = or i32 %60, %63
  %65 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i64 0, i64 0), i32 %64) #6
  %66 = getelementptr inbounds i8, i8* %40, i64 2
  %67 = load i8, i8* %66, align 1
  %68 = zext i8 %67 to i32
  %69 = shl nuw nsw i32 %68, 8
  %70 = getelementptr inbounds i8, i8* %40, i64 3
  %71 = load i8, i8* %70, align 1
  %72 = zext i8 %71 to i32
  %73 = or i32 %69, %72
  %74 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i64 0, i64 0), i32 %73) #6
  %75 = getelementptr inbounds i8, i8* %40, i64 4
  %76 = load i8, i8* %75, align 1
  %77 = zext i8 %76 to i32
  %78 = shl nuw nsw i32 %77, 8
  %79 = getelementptr inbounds i8, i8* %40, i64 5
  %80 = load i8, i8* %79, align 1
  %81 = zext i8 %80 to i32
  %82 = or i32 %78, %81
  %83 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i64 0, i64 0), i32 %82) #6
  %84 = getelementptr inbounds i8, i8* %40, i64 6
  %85 = load i8, i8* %84, align 1
  %86 = zext i8 %85 to i32
  %87 = shl nuw nsw i32 %86, 8
  %88 = getelementptr inbounds i8, i8* %40, i64 7
  %89 = load i8, i8* %88, align 1
  %90 = zext i8 %89 to i32
  %91 = or i32 %87, %90
  %92 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i64 0, i64 0), i32 %91) #6
  %93 = getelementptr inbounds i8, i8* %40, i64 8
  %94 = load i8, i8* %93, align 1
  %95 = zext i8 %94 to i32
  %96 = shl nuw nsw i32 %95, 8
  %97 = getelementptr inbounds i8, i8* %40, i64 9
  %98 = load i8, i8* %97, align 1
  %99 = zext i8 %98 to i32
  %100 = or i32 %96, %99
  %101 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i64 0, i64 0), i32 %100) #6
  %102 = getelementptr inbounds i8, i8* %40, i64 10
  %103 = load i8, i8* %102, align 1
  %104 = zext i8 %103 to i32
  %105 = shl nuw nsw i32 %104, 8
  %106 = getelementptr inbounds i8, i8* %40, i64 11
  %107 = load i8, i8* %106, align 1
  %108 = zext i8 %107 to i32
  %109 = or i32 %105, %108
  %110 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i64 0, i64 0), i32 %109) #6
  %111 = getelementptr inbounds i8, i8* %40, i64 12
  %112 = load i8, i8* %111, align 1
  %113 = zext i8 %112 to i32
  %114 = shl nuw nsw i32 %113, 8
  %115 = getelementptr inbounds i8, i8* %40, i64 13
  %116 = load i8, i8* %115, align 1
  %117 = zext i8 %116 to i32
  %118 = or i32 %114, %117
  %119 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i64 0, i64 0), i32 %118) #6
  %120 = getelementptr inbounds i8, i8* %40, i64 14
  %121 = load i8, i8* %120, align 1
  %122 = zext i8 %121 to i32
  %123 = shl nuw nsw i32 %122, 8
  %124 = getelementptr inbounds i8, i8* %40, i64 15
  %125 = load i8, i8* %124, align 1
  %126 = zext i8 %125 to i32
  %127 = or i32 %123, %126
  %128 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.22, i64 0, i64 0), i32 %127) #6
  %129 = tail call i32 @BIO_puts(%struct.bio_st* %0, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0)) #6
  br label %138

130:                                              ; preds = %35
  %131 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.24, i64 0, i64 0)) #6
  br label %138

132:                                              ; preds = %2
  %133 = tail call i32 (%struct.bio_st*, i8*, ...) @BIO_printf(%struct.bio_st* %0, i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.13, i64 0, i64 0)) #6
  %134 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %1, i64 0, i32 1
  %135 = bitcast %union.anon.1* %134 to %struct.asn1_object_st**
  %136 = load %struct.asn1_object_st*, %struct.asn1_object_st** %135, align 8
  %137 = tail call i32 @i2a_ASN1_OBJECT(%struct.bio_st* %0, %struct.asn1_object_st* %136) #6
  br label %138

138:                                              ; preds = %43, %56, %2, %132, %130, %29, %23, %17, %11, %9, %7, %5
  ret i32 1
}

declare i32 @BIO_printf(%struct.bio_st*, i8*, ...) local_unnamed_addr #2

declare i32 @ASN1_STRING_print(%struct.bio_st*, %struct.asn1_string_st*) local_unnamed_addr #2

declare i32 @X509_NAME_print_ex(%struct.bio_st*, %struct.X509_name_st*, i32, i64) local_unnamed_addr #2

declare i32 @BIO_puts(%struct.bio_st*, i8*) local_unnamed_addr #2

declare i32 @i2a_ASN1_OBJECT(%struct.bio_st*, %struct.asn1_object_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.stack_st_GENERAL_NAME* @v2i_GENERAL_NAMES(%struct.v3_ext_method* nocapture readnone, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*) local_unnamed_addr #0 {
  %4 = tail call %struct.stack_st* @sk_new_null() #6
  %5 = bitcast %struct.stack_st* %4 to %struct.stack_st_GENERAL_NAME*
  %6 = icmp eq %struct.stack_st* %4, null
  br i1 %6, label %11, label %7

7:                                                ; preds = %3
  %8 = bitcast %struct.stack_st_CONF_VALUE* %2 to %struct.stack_st*
  %9 = tail call i64 @sk_num(%struct.stack_st* %8) #6
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %25, label %12

11:                                               ; preds = %3
  tail call void @ERR_put_error(i32 20, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 426) #6
  br label %25

12:                                               ; preds = %7, %18
  %13 = phi i64 [ %21, %18 ], [ 0, %7 ]
  %14 = tail call i8* @sk_value(%struct.stack_st* %8, i64 %13) #6
  %15 = bitcast i8* %14 to %struct.conf_value_st*
  %16 = tail call %struct.GENERAL_NAME_st* @v2i_GENERAL_NAME_ex(%struct.GENERAL_NAME_st* null, %struct.v3_ext_method* %0, %struct.v3_ext_ctx* %1, %struct.conf_value_st* %15, i32 0) #6
  %17 = icmp eq %struct.GENERAL_NAME_st* %16, null
  br i1 %17, label %24, label %18

18:                                               ; preds = %12
  %19 = bitcast %struct.GENERAL_NAME_st* %16 to i8*
  %20 = tail call i64 @sk_push(%struct.stack_st* nonnull %4, i8* nonnull %19) #6
  %21 = add nuw i64 %13, 1
  %22 = tail call i64 @sk_num(%struct.stack_st* %8) #6
  %23 = icmp ult i64 %21, %22
  br i1 %23, label %12, label %25

24:                                               ; preds = %12
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %4, void (void (i8*)*, i8*)* nonnull @sk_GENERAL_NAME_call_free_func, void (i8*)* bitcast (void (%struct.GENERAL_NAME_st*)* @GENERAL_NAME_free to void (i8*)*)) #6
  br label %25

25:                                               ; preds = %18, %7, %24, %11
  %26 = phi %struct.stack_st_GENERAL_NAME* [ null, %24 ], [ null, %11 ], [ %5, %7 ], [ %5, %18 ]
  ret %struct.stack_st_GENERAL_NAME* %26
}

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.GENERAL_NAME_st* @v2i_GENERAL_NAME(%struct.v3_ext_method* nocapture readnone, %struct.v3_ext_ctx*, %struct.conf_value_st* nocapture readonly) local_unnamed_addr #0 {
  %4 = tail call %struct.GENERAL_NAME_st* @v2i_GENERAL_NAME_ex(%struct.GENERAL_NAME_st* null, %struct.v3_ext_method* %0, %struct.v3_ext_ctx* %1, %struct.conf_value_st* %2, i32 0)
  ret %struct.GENERAL_NAME_st* %4
}

declare void @GENERAL_NAME_free(%struct.GENERAL_NAME_st*) #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.GENERAL_NAME_st* @v2i_GENERAL_NAME_ex(%struct.GENERAL_NAME_st*, %struct.v3_ext_method* nocapture readnone, %struct.v3_ext_ctx*, %struct.conf_value_st* nocapture readonly, i32) local_unnamed_addr #0 {
  %6 = getelementptr inbounds %struct.conf_value_st, %struct.conf_value_st* %3, i64 0, i32 1
  %7 = load i8*, i8** %6, align 8
  %8 = getelementptr inbounds %struct.conf_value_st, %struct.conf_value_st* %3, i64 0, i32 2
  %9 = load i8*, i8** %8, align 8
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %5
  tail call void @ERR_put_error(i32 20, i32 0, i32 137, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 550) #6
  br label %37

12:                                               ; preds = %5
  %13 = tail call i32 @x509v3_name_cmp(i8* %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.4, i64 0, i64 0)) #6
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %34, label %15

15:                                               ; preds = %12
  %16 = tail call i32 @x509v3_name_cmp(i8* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.6, i64 0, i64 0)) #6
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %34, label %18

18:                                               ; preds = %15
  %19 = tail call i32 @x509v3_name_cmp(i8* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.5, i64 0, i64 0)) #6
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %34, label %21

21:                                               ; preds = %18
  %22 = tail call i32 @x509v3_name_cmp(i8* %7, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.27, i64 0, i64 0)) #6
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %34, label %24

24:                                               ; preds = %21
  %25 = tail call i32 @x509v3_name_cmp(i8* %7, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.28, i64 0, i64 0)) #6
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %24
  %28 = tail call i32 @x509v3_name_cmp(i8* %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.29, i64 0, i64 0)) #6
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %34, label %30

30:                                               ; preds = %27
  %31 = tail call i32 @x509v3_name_cmp(i8* %7, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.30, i64 0, i64 0)) #6
  %32 = icmp eq i32 %31, 0
  br i1 %32, label %34, label %33

33:                                               ; preds = %30
  tail call void @ERR_put_error(i32 20, i32 0, i32 160, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 569) #6
  tail call void (i32, ...) @ERR_add_error_data(i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.31, i64 0, i64 0), i8* %7) #6
  br label %37

34:                                               ; preds = %30, %27, %24, %21, %18, %15, %12
  %35 = phi i32 [ 1, %12 ], [ 6, %15 ], [ 2, %18 ], [ 8, %21 ], [ 7, %24 ], [ 4, %27 ], [ 0, %30 ]
  %36 = tail call %struct.GENERAL_NAME_st* @a2i_GENERAL_NAME(%struct.GENERAL_NAME_st* %0, %struct.v3_ext_method* undef, %struct.v3_ext_ctx* %2, i32 %35, i8* nonnull %9, i32 %4)
  br label %37

37:                                               ; preds = %34, %33, %11
  %38 = phi %struct.GENERAL_NAME_st* [ null, %33 ], [ %36, %34 ], [ null, %11 ]
  ret %struct.GENERAL_NAME_st* %38
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.GENERAL_NAME_st* @a2i_GENERAL_NAME(%struct.GENERAL_NAME_st*, %struct.v3_ext_method* nocapture readnone, %struct.v3_ext_ctx*, i32, i8*, i32) local_unnamed_addr #0 {
  %7 = icmp eq i8* %4, null
  br i1 %7, label %8, label %9

8:                                                ; preds = %6
  tail call void @ERR_put_error(i32 20, i32 0, i32 137, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 456) #6
  br label %102

9:                                                ; preds = %6
  %10 = icmp ne %struct.GENERAL_NAME_st* %0, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %9
  %12 = tail call %struct.GENERAL_NAME_st* @GENERAL_NAME_new() #6
  %13 = icmp eq %struct.GENERAL_NAME_st* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %11
  tail call void @ERR_put_error(i32 20, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 465) #6
  br label %102

15:                                               ; preds = %9, %11
  %16 = phi %struct.GENERAL_NAME_st* [ %12, %11 ], [ %0, %9 ]
  switch i32 %3, label %86 [
    i32 6, label %87
    i32 1, label %87
    i32 2, label %87
    i32 8, label %17
    i32 7, label %24
    i32 4, label %36
    i32 0, label %51
  ]

17:                                               ; preds = %15
  %18 = tail call %struct.asn1_object_st* @OBJ_txt2obj(i8* nonnull %4, i32 0) #6
  %19 = icmp eq %struct.asn1_object_st* %18, null
  br i1 %19, label %23, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %16, i64 0, i32 1
  %22 = bitcast %union.anon.1* %21 to %struct.asn1_object_st**
  store %struct.asn1_object_st* %18, %struct.asn1_object_st** %22, align 8
  br label %98

23:                                               ; preds = %17
  tail call void @ERR_put_error(i32 20, i32 0, i32 101, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 481) #6
  tail call void (i32, ...) @ERR_add_error_data(i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0), i8* nonnull %4) #6
  br label %100

24:                                               ; preds = %15
  %25 = icmp eq i32 %5, 0
  br i1 %25, label %28, label %26

26:                                               ; preds = %24
  %27 = tail call %struct.asn1_string_st* @a2i_IPADDRESS_NC(i8* nonnull %4) #6
  br label %30

28:                                               ; preds = %24
  %29 = tail call %struct.asn1_string_st* @a2i_IPADDRESS(i8* nonnull %4) #6
  br label %30

30:                                               ; preds = %28, %26
  %31 = phi %struct.asn1_string_st* [ %29, %28 ], [ %27, %26 ]
  %32 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %16, i64 0, i32 1
  %33 = bitcast %union.anon.1* %32 to %struct.asn1_string_st**
  store %struct.asn1_string_st* %31, %struct.asn1_string_st** %33, align 8
  %34 = icmp eq %struct.asn1_string_st* %31, null
  br i1 %34, label %35, label %98

35:                                               ; preds = %30
  tail call void @ERR_put_error(i32 20, i32 0, i32 100, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 495) #6
  tail call void (i32, ...) @ERR_add_error_data(i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.26, i64 0, i64 0), i8* nonnull %4) #6
  br label %100

36:                                               ; preds = %15
  %37 = tail call %struct.X509_name_st* @X509_NAME_new() #6
  %38 = icmp eq %struct.X509_name_st* %37, null
  br i1 %38, label %49, label %39

39:                                               ; preds = %36
  %40 = tail call %struct.stack_st_CONF_VALUE* @X509V3_get_section(%struct.v3_ext_ctx* %2, i8* nonnull %4) #6
  %41 = icmp eq %struct.stack_st_CONF_VALUE* %40, null
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @ERR_put_error(i32 20, i32 0, i32 153, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 615) #6
  tail call void (i32, ...) @ERR_add_error_data(i32 2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.35, i64 0, i64 0), i8* nonnull %4) #6
  br label %49

43:                                               ; preds = %39
  %44 = tail call i32 @X509V3_NAME_from_section(%struct.X509_name_st* nonnull %37, %struct.stack_st_CONF_VALUE* nonnull %40, i64 4097) #6
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %43
  %47 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %16, i64 0, i32 1
  %48 = bitcast %union.anon.1* %47 to %struct.X509_name_st**
  store %struct.X509_name_st* %37, %struct.X509_name_st** %48, align 8
  tail call void @X509V3_section_free(%struct.v3_ext_ctx* %2, %struct.stack_st_CONF_VALUE* nonnull %40) #6
  br label %98

49:                                               ; preds = %36, %42, %43
  %50 = phi %struct.stack_st_CONF_VALUE* [ %40, %43 ], [ null, %42 ], [ null, %36 ]
  tail call void @X509_NAME_free(%struct.X509_name_st* %37) #6
  tail call void @X509V3_section_free(%struct.v3_ext_ctx* %2, %struct.stack_st_CONF_VALUE* %50) #6
  tail call void @ERR_put_error(i32 20, i32 0, i32 105, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 503) #6
  br label %100

51:                                               ; preds = %15
  %52 = tail call i8* @strchr(i8* nonnull %4, i32 59) #7
  %53 = icmp eq i8* %52, null
  br i1 %53, label %85, label %54

54:                                               ; preds = %51
  %55 = tail call %struct.otherName_st* @OTHERNAME_new() #6
  %56 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %16, i64 0, i32 1
  %57 = bitcast %union.anon.1* %56 to %struct.otherName_st**
  store %struct.otherName_st* %55, %struct.otherName_st** %57, align 8
  %58 = icmp eq %struct.otherName_st* %55, null
  br i1 %58, label %85, label %59

59:                                               ; preds = %54
  %60 = getelementptr inbounds %struct.otherName_st, %struct.otherName_st* %55, i64 0, i32 1
  %61 = load %struct.asn1_type_st*, %struct.asn1_type_st** %60, align 8
  tail call void @ASN1_TYPE_free(%struct.asn1_type_st* %61) #6
  %62 = getelementptr inbounds i8, i8* %52, i64 1
  %63 = tail call %struct.asn1_type_st* @ASN1_generate_v3(i8* %62, %struct.v3_ext_ctx* %2) #6
  %64 = load %struct.otherName_st*, %struct.otherName_st** %57, align 8
  %65 = getelementptr inbounds %struct.otherName_st, %struct.otherName_st* %64, i64 0, i32 1
  store %struct.asn1_type_st* %63, %struct.asn1_type_st** %65, align 8
  %66 = icmp eq %struct.asn1_type_st* %63, null
  br i1 %66, label %85, label %67

67:                                               ; preds = %59
  %68 = ptrtoint i8* %52 to i64
  %69 = ptrtoint i8* %4 to i64
  %70 = sub i64 %68, %69
  %71 = shl i64 %70, 32
  %72 = add i64 %71, 4294967296
  %73 = ashr exact i64 %72, 32
  %74 = tail call i8* @OPENSSL_malloc(i64 %73) #6
  %75 = icmp eq i8* %74, null
  br i1 %75, label %85, label %76

76:                                               ; preds = %67
  %77 = tail call i64 @OPENSSL_strlcpy(i8* nonnull %74, i8* nonnull %4, i64 %73) #6
  %78 = tail call %struct.asn1_object_st* @OBJ_txt2obj(i8* nonnull %74, i32 0) #6
  %79 = load %struct.otherName_st*, %struct.otherName_st** %57, align 8
  %80 = getelementptr inbounds %struct.otherName_st, %struct.otherName_st* %79, i64 0, i32 0
  store %struct.asn1_object_st* %78, %struct.asn1_object_st** %80, align 8
  tail call void @OPENSSL_free(i8* nonnull %74) #6
  %81 = load %struct.otherName_st*, %struct.otherName_st** %57, align 8
  %82 = getelementptr inbounds %struct.otherName_st, %struct.otherName_st* %81, i64 0, i32 0
  %83 = load %struct.asn1_object_st*, %struct.asn1_object_st** %82, align 8
  %84 = icmp eq %struct.asn1_object_st* %83, null
  br i1 %84, label %85, label %98

85:                                               ; preds = %67, %59, %54, %51, %76
  tail call void @ERR_put_error(i32 20, i32 0, i32 148, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 510) #6
  br label %100

86:                                               ; preds = %15
  tail call void @ERR_put_error(i32 20, i32 0, i32 161, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 515) #6
  br label %100

87:                                               ; preds = %15, %15, %15
  %88 = tail call %struct.asn1_string_st* @ASN1_IA5STRING_new() #6
  %89 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %16, i64 0, i32 1
  %90 = bitcast %union.anon.1* %89 to %struct.asn1_string_st**
  store %struct.asn1_string_st* %88, %struct.asn1_string_st** %90, align 8
  %91 = icmp eq %struct.asn1_string_st* %88, null
  br i1 %91, label %97, label %92

92:                                               ; preds = %87
  %93 = tail call i64 @strlen(i8* nonnull %4) #7
  %94 = trunc i64 %93 to i32
  %95 = tail call i32 @ASN1_STRING_set(%struct.asn1_string_st* nonnull %88, i8* nonnull %4, i32 %94) #6
  %96 = icmp eq i32 %95, 0
  br i1 %96, label %97, label %98

97:                                               ; preds = %92, %87
  tail call void @ERR_put_error(i32 20, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 523) #6
  br label %100

98:                                               ; preds = %46, %20, %30, %76, %92
  %99 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %16, i64 0, i32 0
  store i32 %3, i32* %99, align 8
  br label %102

100:                                              ; preds = %23, %97, %86, %85, %49, %35
  br i1 %10, label %102, label %101

101:                                              ; preds = %100
  tail call void @GENERAL_NAME_free(%struct.GENERAL_NAME_st* nonnull %16) #6
  br label %102

102:                                              ; preds = %100, %101, %98, %14, %8
  %103 = phi %struct.GENERAL_NAME_st* [ %16, %98 ], [ null, %14 ], [ null, %8 ], [ null, %101 ], [ null, %100 ]
  ret %struct.GENERAL_NAME_st* %103
}

declare %struct.GENERAL_NAME_st* @GENERAL_NAME_new() local_unnamed_addr #2

declare %struct.asn1_object_st* @OBJ_txt2obj(i8*, i32) local_unnamed_addr #2

declare void @ERR_add_error_data(i32, ...) local_unnamed_addr #2

declare %struct.asn1_string_st* @a2i_IPADDRESS_NC(i8*) local_unnamed_addr #2

declare %struct.asn1_string_st* @a2i_IPADDRESS(i8*) local_unnamed_addr #2

declare %struct.asn1_string_st* @ASN1_IA5STRING_new() local_unnamed_addr #2

declare i32 @ASN1_STRING_set(%struct.asn1_string_st*, i8*, i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #3

declare i32 @x509v3_name_cmp(i8*, i8*) local_unnamed_addr #2

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #2

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #2

declare %struct.stack_st* @sk_new_null() local_unnamed_addr #2

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #4

declare i32 @X509_get_ext_by_NID(%struct.x509_st*, i32, i32) local_unnamed_addr #2

declare %struct.X509_extension_st* @X509_get_ext(%struct.x509_st*, i32) local_unnamed_addr #2

declare i8* @X509V3_EXT_d2i(%struct.X509_extension_st*) local_unnamed_addr #2

declare void @GENERAL_NAMES_free(%struct.stack_st_GENERAL_NAME*) local_unnamed_addr #2

declare i8* @sk_set(%struct.stack_st*, i64, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @copy_email(%struct.v3_ext_ctx* readonly, %struct.stack_st_GENERAL_NAME*, i32) unnamed_addr #0 {
  %4 = icmp eq %struct.v3_ext_ctx* %0, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.v3_ext_ctx, %struct.v3_ext_ctx* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 1
  br i1 %8, label %55, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %struct.v3_ext_ctx, %struct.v3_ext_ctx* %0, i64 0, i32 2
  %11 = load %struct.x509_st*, %struct.x509_st** %10, align 8
  %12 = icmp eq %struct.x509_st* %11, null
  br i1 %12, label %13, label %18

13:                                               ; preds = %9
  %14 = getelementptr inbounds %struct.v3_ext_ctx, %struct.v3_ext_ctx* %0, i64 0, i32 3
  %15 = load %struct.X509_req_st*, %struct.X509_req_st** %14, align 8
  %16 = icmp eq %struct.X509_req_st* %15, null
  br i1 %16, label %17, label %20

17:                                               ; preds = %3, %13
  tail call void @ERR_put_error(i32 20, i32 0, i32 145, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 375) #6
  br label %52

18:                                               ; preds = %9
  %19 = tail call %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st* nonnull %11) #6
  br label %22

20:                                               ; preds = %13
  %21 = tail call %struct.X509_name_st* @X509_REQ_get_subject_name(%struct.X509_req_st* nonnull %15) #6
  br label %22

22:                                               ; preds = %20, %18
  %23 = phi %struct.X509_name_st* [ %19, %18 ], [ %21, %20 ]
  %24 = icmp eq i32 %2, 0
  %25 = bitcast %struct.stack_st_GENERAL_NAME* %1 to %struct.stack_st*
  br label %26

26:                                               ; preds = %44, %22
  %27 = phi i32 [ -1, %22 ], [ %38, %44 ]
  %28 = tail call i32 @X509_NAME_get_index_by_NID(%struct.X509_name_st* %23, i32 48, i32 %27) #6
  %29 = icmp sgt i32 %28, -1
  br i1 %29, label %30, label %55

30:                                               ; preds = %26
  %31 = tail call %struct.X509_name_entry_st* @X509_NAME_get_entry(%struct.X509_name_st* %23, i32 %28) #6
  %32 = tail call %struct.asn1_string_st* @X509_NAME_ENTRY_get_data(%struct.X509_name_entry_st* %31) #6
  %33 = tail call %struct.asn1_string_st* @ASN1_STRING_dup(%struct.asn1_string_st* %32) #6
  br i1 %24, label %37, label %34

34:                                               ; preds = %30
  %35 = tail call %struct.X509_name_entry_st* @X509_NAME_delete_entry(%struct.X509_name_st* %23, i32 %28) #6
  tail call void @X509_NAME_ENTRY_free(%struct.X509_name_entry_st* %31) #6
  %36 = add nsw i32 %28, -1
  br label %37

37:                                               ; preds = %30, %34
  %38 = phi i32 [ %36, %34 ], [ %28, %30 ]
  %39 = icmp eq %struct.asn1_string_st* %33, null
  br i1 %39, label %43, label %40

40:                                               ; preds = %37
  %41 = tail call %struct.GENERAL_NAME_st* @GENERAL_NAME_new() #6
  %42 = icmp eq %struct.GENERAL_NAME_st* %41, null
  br i1 %42, label %43, label %44

43:                                               ; preds = %40, %37
  tail call void @ERR_put_error(i32 20, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 396) #6
  br label %52

44:                                               ; preds = %40
  %45 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %41, i64 0, i32 1
  %46 = bitcast %union.anon.1* %45 to %struct.asn1_string_st**
  store %struct.asn1_string_st* %33, %struct.asn1_string_st** %46, align 8
  %47 = getelementptr inbounds %struct.GENERAL_NAME_st, %struct.GENERAL_NAME_st* %41, i64 0, i32 0
  store i32 1, i32* %47, align 8
  %48 = bitcast %struct.GENERAL_NAME_st* %41 to i8*
  %49 = tail call i64 @sk_push(%struct.stack_st* %25, i8* nonnull %48) #6
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %26

51:                                               ; preds = %44
  tail call void @ERR_put_error(i32 20, i32 0, i32 65, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.25, i64 0, i64 0), i32 403) #6
  br label %52

52:                                               ; preds = %51, %43, %17
  %53 = phi %struct.asn1_string_st* [ null, %51 ], [ %33, %43 ], [ null, %17 ]
  %54 = phi %struct.GENERAL_NAME_st* [ %41, %51 ], [ null, %43 ], [ null, %17 ]
  tail call void @GENERAL_NAME_free(%struct.GENERAL_NAME_st* %54) #6
  tail call void @ASN1_IA5STRING_free(%struct.asn1_string_st* %53) #6
  br label %55

55:                                               ; preds = %26, %5, %52
  %56 = phi i32 [ 0, %52 ], [ 1, %5 ], [ 1, %26 ]
  ret i32 %56
}

declare %struct.X509_name_st* @X509_get_subject_name(%struct.x509_st*) local_unnamed_addr #2

declare %struct.X509_name_st* @X509_REQ_get_subject_name(%struct.X509_req_st*) local_unnamed_addr #2

declare i32 @X509_NAME_get_index_by_NID(%struct.X509_name_st*, i32, i32) local_unnamed_addr #2

declare %struct.X509_name_entry_st* @X509_NAME_get_entry(%struct.X509_name_st*, i32) local_unnamed_addr #2

declare %struct.asn1_string_st* @ASN1_STRING_dup(%struct.asn1_string_st*) local_unnamed_addr #2

declare %struct.asn1_string_st* @X509_NAME_ENTRY_get_data(%struct.X509_name_entry_st*) local_unnamed_addr #2

declare %struct.X509_name_entry_st* @X509_NAME_delete_entry(%struct.X509_name_st*, i32) local_unnamed_addr #2

declare void @X509_NAME_ENTRY_free(%struct.X509_name_entry_st*) local_unnamed_addr #2

declare void @ASN1_IA5STRING_free(%struct.asn1_string_st*) local_unnamed_addr #2

declare i64 @sk_push(%struct.stack_st*, i8*) local_unnamed_addr #2

declare void @sk_pop_free_ex(%struct.stack_st*, void (void (i8*)*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_GENERAL_NAME_call_free_func(void (i8*)* nocapture, i8*) #5 {
  %3 = bitcast void (i8*)* %0 to void (%struct.GENERAL_NAME_st*)*
  %4 = bitcast i8* %1 to %struct.GENERAL_NAME_st*
  tail call void %3(%struct.GENERAL_NAME_st* %4) #6
  ret void
}

; Function Attrs: nofree nounwind readonly
declare i8* @strchr(i8*, i32) local_unnamed_addr #4

declare %struct.otherName_st* @OTHERNAME_new() local_unnamed_addr #2

declare void @ASN1_TYPE_free(%struct.asn1_type_st*) local_unnamed_addr #2

declare %struct.asn1_type_st* @ASN1_generate_v3(i8*, %struct.v3_ext_ctx*) local_unnamed_addr #2

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

declare i64 @OPENSSL_strlcpy(i8*, i8*, i64) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

declare %struct.X509_name_st* @X509_NAME_new() local_unnamed_addr #2

declare %struct.stack_st_CONF_VALUE* @X509V3_get_section(%struct.v3_ext_ctx*, i8*) local_unnamed_addr #2

declare i32 @X509V3_NAME_from_section(%struct.X509_name_st*, %struct.stack_st_CONF_VALUE*, i64) local_unnamed_addr #2

declare void @X509_NAME_free(%struct.X509_name_st*) local_unnamed_addr #2

declare void @X509V3_section_free(%struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
