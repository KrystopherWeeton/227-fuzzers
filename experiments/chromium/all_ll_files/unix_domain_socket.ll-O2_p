; ModuleID = '../../base/posix/unix_domain_socket.cc'
source_filename = "../../base/posix/unix_domain_socket.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.base::ScopedGeneric" = type <{ i32 (...)**, %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", i8, [3 x i8] }>
%"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%struct.msghdr = type { i8*, i32, %struct.iovec*, i64, i8*, i64, i32 }
%struct.iovec = type { i8*, i64 }
%struct.cmsghdr = type { i64, i32, i32, [0 x i8] }
%"class.std::__1::vector.1" = type { %"class.std::__1::__vector_base.2" }
%"class.std::__1::__vector_base.2" = type { %"class.base::ScopedGeneric"*, %"class.base::ScopedGeneric"*, %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"class.base::ScopedGeneric"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.base::Pickle" = type { i32 (...)**, %"struct.base::Pickle::Header"*, i64, i64, i64 }
%"struct.base::Pickle::Header" = type { i32 }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev = comdat any

$_ZNSt3__16vectorIN4base13ScopedGenericIiNS1_8internal19ScopedFDCloseTraitsEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

$_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = comdat any

@_ZN4base16UnixDomainSocket19kMaxFileDescriptorsE = hidden local_unnamed_addr constant i64 16, align 8
@.str = private unnamed_addr constant [39 x i8] c"../../base/posix/unix_domain_socket.cc\00", align 1
@.str.1 = private unnamed_addr constant [49 x i8] c"recvmsg returned MSG_CTRUNC flag, buffer len is \00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev to i8*), i8* bitcast (void (%"class.base::ScopedGeneric"*)* @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev to i8*)] }, comdat, align 8
@.str.3 = private unnamed_addr constant [28 x i8] c"../../base/scoped_generic.h\00", align 1
@.str.4 = private unnamed_addr constant [12 x i8] c"!receiving_\00", align 1
@.str.5 = private unnamed_addr constant [45 x i8] c"ScopedGeneric destroyed with active receiver\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base16CreateSocketPairEPNS_13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEES4_(%"class.base::ScopedGeneric"*, %"class.base::ScopedGeneric"*) local_unnamed_addr #0 {
  %3 = alloca [2 x i32], align 4
  %4 = bitcast [2 x i32]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #10
  %5 = getelementptr inbounds [2 x i32], [2 x i32]* %3, i64 0, i64 0
  store i32 -1431655766, i32* %5, align 4
  %6 = getelementptr inbounds [2 x i32], [2 x i32]* %3, i64 0, i64 1
  store i32 -1431655766, i32* %6, align 4
  %7 = call i32 @socketpair(i32 1, i32 5, i32 0, i32* nonnull %5) #10
  %8 = icmp eq i32 %7, -1
  br i1 %8, label %37, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, -1
  br i1 %12, label %19, label %13

13:                                               ; preds = %9
  %14 = load i32, i32* %5, align 4
  %15 = icmp eq i32 %11, %14
  br i1 %15, label %16, label %17

16:                                               ; preds = %13
  call void @abort() #11
  unreachable

17:                                               ; preds = %13
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %0, i32 %11) #10
  %18 = load i32, i32* %10, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %18) #10
  store i32 -1, i32* %10, align 8
  br label %19

19:                                               ; preds = %17, %9
  %20 = load i32, i32* %5, align 4
  store i32 %20, i32* %10, align 8
  %21 = icmp eq i32 %20, -1
  br i1 %21, label %23, label %22

22:                                               ; preds = %19
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %0, i32 %20) #10
  br label %23

23:                                               ; preds = %19, %22
  %24 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %1, i64 0, i32 1, i32 0
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, -1
  br i1 %26, label %33, label %27

27:                                               ; preds = %23
  %28 = load i32, i32* %6, align 4
  %29 = icmp eq i32 %25, %28
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  call void @abort() #11
  unreachable

31:                                               ; preds = %27
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %1, i32 %25) #10
  %32 = load i32, i32* %24, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %32) #10
  store i32 -1, i32* %24, align 8
  br label %33

33:                                               ; preds = %31, %23
  %34 = load i32, i32* %6, align 4
  store i32 %34, i32* %24, align 8
  %35 = icmp eq i32 %34, -1
  br i1 %35, label %37, label %36

36:                                               ; preds = %33
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %1, i32 %34) #10
  br label %37

37:                                               ; preds = %36, %33, %2
  %38 = phi i1 [ false, %2 ], [ true, %33 ], [ true, %36 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #10
  ret i1 %38
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare i32 @socketpair(i32, i32, i32, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base16UnixDomainSocket22EnableReceiveProcessIdEi(i32) local_unnamed_addr #0 align 2 {
  %2 = alloca i32, align 4
  %3 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %3) #10
  store i32 1, i32* %2, align 4
  %4 = call i32 @setsockopt(i32 %0, i32 1, i32 16, i8* nonnull %3, i32 4) #10
  %5 = icmp eq i32 %4, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %3) #10
  ret i1 %5
}

; Function Attrs: nounwind
declare i32 @setsockopt(i32, i32, i32, i8*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4base16UnixDomainSocket7SendMsgEiPKvmRKNSt3__16vectorIiNS3_9allocatorIiEEEE(i32, i8*, i64, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.msghdr, align 8
  %6 = alloca %struct.iovec, align 8
  %7 = bitcast %struct.msghdr* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %7) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 56, i1 false)
  %8 = bitcast %struct.iovec* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #10
  %9 = getelementptr inbounds %struct.iovec, %struct.iovec* %6, i64 0, i32 0
  %10 = getelementptr inbounds %struct.iovec, %struct.iovec* %6, i64 0, i32 1
  store i8* %1, i8** %9, align 8
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i64 0, i32 2
  store %struct.iovec* %6, %struct.iovec** %11, align 8
  %12 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i64 0, i32 3
  store i64 1, i64* %12, align 8
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %3, i64 0, i32 0, i32 1
  %14 = bitcast i32** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.std::__1::vector"* %3 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %15, %17
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %42, label %20

20:                                               ; preds = %4
  %21 = add i64 %18, 23
  %22 = and i64 %21, 4294967288
  %23 = call i8* @_Znam(i64 %22) #12
  %24 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i64 0, i32 4
  store i8* %23, i8** %24, align 8
  %25 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %5, i64 0, i32 5
  store i64 %22, i64* %25, align 8
  %26 = icmp ugt i64 %22, 15
  %27 = bitcast i8* %23 to %struct.cmsghdr*
  %28 = select i1 %26, %struct.cmsghdr* %27, %struct.cmsghdr* null
  %29 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %28, i64 0, i32 1
  store i32 1, i32* %29, align 8
  %30 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %28, i64 0, i32 2
  store i32 1, i32* %30, align 4
  %31 = load i64, i64* %14, align 8
  %32 = load i64, i64* %16, align 8
  %33 = sub i64 %31, %32
  %34 = add i64 %33, 16
  %35 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %28, i64 0, i32 0
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %28, i64 0, i32 3, i64 0
  %37 = bitcast %"class.std::__1::vector"* %3 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = load i64, i64* %14, align 8
  %40 = ptrtoint i8* %38 to i64
  %41 = sub i64 %39, %40
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 4 %38, i64 %41, i1 false)
  store i64 %34, i64* %25, align 8
  br label %42

42:                                               ; preds = %4, %20
  %43 = phi i8* [ %23, %20 ], [ null, %4 ]
  br label %44

44:                                               ; preds = %47, %42
  %45 = call i64 @sendmsg(i32 %0, %struct.msghdr* nonnull %5, i32 16384) #10
  %46 = icmp eq i64 %45, -1
  br i1 %46, label %47, label %51

47:                                               ; preds = %44
  %48 = tail call i32* @__errno_location() #13
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 4
  br i1 %50, label %44, label %51

51:                                               ; preds = %44, %47
  %52 = icmp eq i64 %45, %2
  %53 = icmp eq i8* %43, null
  br i1 %53, label %55, label %54

54:                                               ; preds = %51
  call void @_ZdaPv(i8* nonnull %43) #12
  br label %55

55:                                               ; preds = %54, %51
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %7) #10
  ret i1 %52
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare i64 @sendmsg(i32, %struct.msghdr*, i32) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i32* @__errno_location() local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base16UnixDomainSocket7RecvMsgEiPvmPNSt3__16vectorINS_13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEENS2_9allocatorIS7_EEEE(i32, i8*, i64, %"class.std::__1::vector.1"*) local_unnamed_addr #0 align 2 {
  %5 = tail call i64 @_ZN4base16UnixDomainSocket16RecvMsgWithFlagsEiPvmiPNSt3__16vectorINS_13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEENS2_9allocatorIS7_EEEEPi(i32 %0, i8* %1, i64 %2, i32 0, %"class.std::__1::vector.1"* %3, i32* null) #10
  ret i64 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base16UnixDomainSocket14RecvMsgWithPidEiPvmPNSt3__16vectorINS_13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEENS2_9allocatorIS7_EEEEPi(i32, i8*, i64, %"class.std::__1::vector.1"*, i32*) local_unnamed_addr #0 align 2 {
  %6 = tail call i64 @_ZN4base16UnixDomainSocket16RecvMsgWithFlagsEiPvmiPNSt3__16vectorINS_13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEENS2_9allocatorIS7_EEEEPi(i32 %0, i8* %1, i64 %2, i32 0, %"class.std::__1::vector.1"* %3, i32* %4)
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base16UnixDomainSocket16RecvMsgWithFlagsEiPvmiPNSt3__16vectorINS_13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEENS2_9allocatorIS7_EEEEPi(i32, i8*, i64, i32, %"class.std::__1::vector.1"*, i32*) local_unnamed_addr #0 align 2 {
  %7 = alloca %struct.msghdr, align 8
  %8 = alloca %struct.iovec, align 8
  %9 = alloca [112 x i8], align 16
  %10 = alloca %"class.logging::LogMessage", align 8
  %11 = alloca %"class.base::ScopedGeneric", align 8
  %12 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 0
  %13 = load %"class.base::ScopedGeneric"*, %"class.base::ScopedGeneric"** %12, align 8
  %14 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 1
  %15 = load %"class.base::ScopedGeneric"*, %"class.base::ScopedGeneric"** %14, align 8
  %16 = icmp eq %"class.base::ScopedGeneric"* %15, %13
  br i1 %16, label %24, label %17

17:                                               ; preds = %6, %17
  %18 = phi %"class.base::ScopedGeneric"* [ %19, %17 ], [ %15, %6 ]
  %19 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %18, i64 -1
  %20 = bitcast %"class.base::ScopedGeneric"* %19 to void (%"class.base::ScopedGeneric"*)***
  %21 = load void (%"class.base::ScopedGeneric"*)**, void (%"class.base::ScopedGeneric"*)*** %20, align 8
  %22 = load void (%"class.base::ScopedGeneric"*)*, void (%"class.base::ScopedGeneric"*)** %21, align 8
  tail call void %22(%"class.base::ScopedGeneric"* %19) #10
  %23 = icmp eq %"class.base::ScopedGeneric"* %19, %13
  br i1 %23, label %24, label %17

24:                                               ; preds = %17, %6
  store %"class.base::ScopedGeneric"* %13, %"class.base::ScopedGeneric"** %14, align 8
  %25 = bitcast %struct.msghdr* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %25) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 56, i1 false)
  %26 = bitcast %struct.iovec* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #10
  %27 = getelementptr inbounds %struct.iovec, %struct.iovec* %8, i64 0, i32 0
  %28 = getelementptr inbounds %struct.iovec, %struct.iovec* %8, i64 0, i32 1
  store i8* %1, i8** %27, align 8
  store i64 %2, i64* %28, align 8
  %29 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %7, i64 0, i32 2
  store %struct.iovec* %8, %struct.iovec** %29, align 8
  %30 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %7, i64 0, i32 3
  store i64 1, i64* %30, align 8
  %31 = getelementptr inbounds [112 x i8], [112 x i8]* %9, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %31) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %31, i8 -86, i64 112, i1 false)
  %32 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %7, i64 0, i32 4
  store i8* %31, i8** %32, align 8
  %33 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %7, i64 0, i32 5
  store i64 112, i64* %33, align 8
  br label %34

34:                                               ; preds = %37, %24
  %35 = call i64 @recvmsg(i32 %0, %struct.msghdr* nonnull %7, i32 %3) #10
  %36 = icmp eq i64 %35, -1
  br i1 %36, label %37, label %41

37:                                               ; preds = %34
  %38 = tail call i32* @__errno_location() #13
  %39 = load i32, i32* %38, align 4
  %40 = icmp eq i32 %39, 4
  br i1 %40, label %34, label %176

41:                                               ; preds = %34
  %42 = load i64, i64* %33, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %100, label %44

44:                                               ; preds = %41
  %45 = icmp ult i64 %42, 16
  %46 = bitcast i8** %32 to %struct.cmsghdr**
  %47 = load %struct.cmsghdr*, %struct.cmsghdr** %46, align 8
  %48 = icmp eq %struct.cmsghdr* %47, null
  %49 = or i1 %48, %45
  br i1 %49, label %100, label %50

50:                                               ; preds = %44
  %51 = bitcast %struct.cmsghdr* %47 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 %42
  br label %53

53:                                               ; preds = %90, %50
  %54 = phi %struct.cmsghdr* [ %47, %50 ], [ %91, %90 ]
  %55 = phi i32 [ -1, %50 ], [ %81, %90 ]
  %56 = phi i32 [ 0, %50 ], [ %79, %90 ]
  %57 = phi i32* [ null, %50 ], [ %80, %90 ]
  %58 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %54, i64 0, i32 0
  %59 = load i64, i64* %58, align 8
  %60 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %54, i64 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %61, 1
  br i1 %62, label %63, label %78

63:                                               ; preds = %53
  %64 = add i64 %59, 4294967280
  %65 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %54, i64 0, i32 2
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 1
  %68 = getelementptr inbounds %struct.cmsghdr, %struct.cmsghdr* %54, i64 0, i32 3, i64 0
  %69 = bitcast i8* %68 to i32*
  %70 = lshr i64 %64, 2
  %71 = trunc i64 %70 to i32
  %72 = and i32 %71, 1073741823
  %73 = select i1 %67, i32* %69, i32* %57
  %74 = select i1 %67, i32 %72, i32 %56
  %75 = icmp eq i32 %66, 2
  br i1 %75, label %76, label %78

76:                                               ; preds = %63
  %77 = load i32, i32* %69, align 8
  br label %78

78:                                               ; preds = %53, %76, %63
  %79 = phi i32 [ %74, %76 ], [ %74, %63 ], [ %56, %53 ]
  %80 = phi i32* [ %73, %76 ], [ %73, %63 ], [ %57, %53 ]
  %81 = phi i32 [ %77, %76 ], [ %55, %63 ], [ %55, %53 ]
  %82 = icmp ult i64 %59, 16
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = bitcast %struct.cmsghdr* %54 to i8*
  %85 = add i64 %59, 7
  %86 = and i64 %85, -8
  %87 = getelementptr inbounds i8, i8* %84, i64 %86
  %88 = getelementptr inbounds i8, i8* %87, i64 16
  %89 = icmp ugt i8* %88, %52
  br i1 %89, label %100, label %90

90:                                               ; preds = %83
  %91 = bitcast i8* %87 to %struct.cmsghdr*
  %92 = bitcast i8* %87 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = add i64 %93, 7
  %95 = and i64 %94, -8
  %96 = getelementptr inbounds i8, i8* %87, i64 %95
  %97 = icmp ugt i8* %96, %52
  %98 = icmp eq i8* %87, null
  %99 = or i1 %97, %98
  br i1 %99, label %100, label %53

100:                                              ; preds = %90, %78, %83, %44, %41
  %101 = phi i32* [ null, %41 ], [ null, %44 ], [ %80, %83 ], [ %80, %78 ], [ %80, %90 ]
  %102 = phi i32 [ 0, %41 ], [ 0, %44 ], [ %79, %83 ], [ %79, %78 ], [ %79, %90 ]
  %103 = phi i32 [ -1, %41 ], [ -1, %44 ], [ %81, %83 ], [ %81, %78 ], [ %81, %90 ]
  %104 = getelementptr inbounds %struct.msghdr, %struct.msghdr* %7, i64 0, i32 6
  %105 = load i32, i32* %104, align 8
  %106 = and i32 %105, 40
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %133, label %108

108:                                              ; preds = %100
  %109 = and i32 %105, 8
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %120, label %111

111:                                              ; preds = %108
  %112 = call zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32 2) #10
  br i1 %112, label %113, label %120

113:                                              ; preds = %111
  %114 = bitcast %"class.logging::LogMessage"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 304, i8* nonnull %114) #10
  call void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"* nonnull %10, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str, i64 0, i64 0), i32 194, i32 2) #10
  %115 = getelementptr inbounds %"class.logging::LogMessage", %"class.logging::LogMessage"* %10, i64 0, i32 2
  %116 = bitcast %"class.std::__1::basic_ostringstream"* %115 to %"class.std::__1::basic_ostream"*
  %117 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %116, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.1, i64 0, i64 0), i64 48) #10
  %118 = load i64, i64* %33, align 8
  %119 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"* %117, i64 %118) #10
  call void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"* nonnull %10) #10
  call void @llvm.lifetime.end.p0i8(i64 304, i8* nonnull %114) #10
  br label %120

120:                                              ; preds = %113, %111, %108
  %121 = icmp eq i32 %102, 0
  br i1 %121, label %124, label %122

122:                                              ; preds = %120
  %123 = zext i32 %102 to i64
  br label %126

124:                                              ; preds = %126, %120
  %125 = tail call i32* @__errno_location() #13
  store i32 90, i32* %125, align 4
  br label %176

126:                                              ; preds = %126, %122
  %127 = phi i64 [ 0, %122 ], [ %131, %126 ]
  %128 = getelementptr inbounds i32, i32* %101, i64 %127
  %129 = load i32, i32* %128, align 4
  %130 = call i32 @close(i32 %129) #10
  %131 = add nuw nsw i64 %127, 1
  %132 = icmp eq i64 %131, %123
  br i1 %132, label %124, label %126

133:                                              ; preds = %100
  %134 = icmp ne i32* %101, null
  %135 = icmp ne i32 %102, 0
  %136 = and i1 %134, %135
  br i1 %136, label %137, label %173

137:                                              ; preds = %133
  %138 = bitcast %"class.base::ScopedGeneric"* %11 to i8*
  %139 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %11, i64 0, i32 0
  %140 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %11, i64 0, i32 1, i32 0
  %141 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %11, i64 0, i32 2
  %142 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %4, i64 0, i32 0, i32 2, i32 0, i32 0
  %143 = bitcast %"class.base::ScopedGeneric"** %14 to i64*
  %144 = zext i32 %102 to i64
  br label %145

145:                                              ; preds = %170, %137
  %146 = phi i64 [ 0, %137 ], [ %171, %170 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %138) #10
  %147 = getelementptr inbounds i32, i32* %101, i64 %146
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %139, align 8
  %148 = load i32, i32* %147, align 4
  store i32 %148, i32* %140, align 8
  store i8 0, i8* %141, align 4
  %149 = icmp eq i32 %148, -1
  br i1 %149, label %151, label %150

150:                                              ; preds = %145
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %11, i32 %148) #10
  br label %151

151:                                              ; preds = %145, %150
  %152 = load %"class.base::ScopedGeneric"*, %"class.base::ScopedGeneric"** %14, align 8
  %153 = load %"class.base::ScopedGeneric"*, %"class.base::ScopedGeneric"** %142, align 8
  %154 = icmp ult %"class.base::ScopedGeneric"* %152, %153
  br i1 %154, label %155, label %169

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %152, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %156, align 8
  %157 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %152, i64 0, i32 1
  %158 = load i32, i32* %140, align 8
  store i32 -1, i32* %140, align 8
  %159 = icmp eq i32 %158, -1
  br i1 %159, label %160, label %163

160:                                              ; preds = %155
  %161 = getelementptr inbounds %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data"* %157, i64 0, i32 0
  store i32 -1, i32* %161, align 4
  %162 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %152, i64 0, i32 2
  store i8 0, i8* %162, align 4
  br label %166

163:                                              ; preds = %155
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %11, i32 %158) #10
  %164 = getelementptr inbounds %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data"* %157, i64 0, i32 0
  store i32 %158, i32* %164, align 4
  %165 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %152, i64 0, i32 2
  store i8 0, i8* %165, align 4
  call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %152, i32 %158) #10
  br label %166

166:                                              ; preds = %163, %160
  %167 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %152, i64 1
  %168 = ptrtoint %"class.base::ScopedGeneric"* %167 to i64
  store i64 %168, i64* %143, align 8
  br label %170

169:                                              ; preds = %151
  call void @_ZNSt3__16vectorIN4base13ScopedGenericIiNS1_8internal19ScopedFDCloseTraitsEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.1"* %4, %"class.base::ScopedGeneric"* nonnull dereferenceable(16) %11) #10
  br label %170

170:                                              ; preds = %166, %169
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %11) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %138) #10
  %171 = add nuw nsw i64 %146, 1
  %172 = icmp eq i64 %171, %144
  br i1 %172, label %173, label %145

173:                                              ; preds = %170, %133
  %174 = icmp eq i32* %5, null
  br i1 %174, label %176, label %175

175:                                              ; preds = %173
  store i32 %103, i32* %5, align 4
  br label %176

176:                                              ; preds = %37, %124, %173, %175
  %177 = phi i64 [ -1, %124 ], [ %35, %173 ], [ %35, %175 ], [ -1, %37 ]
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %31) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #10
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %25) #10
  ret i64 %177
}

declare i64 @recvmsg(i32, %struct.msghdr*, i32) local_unnamed_addr #4

declare zeroext i1 @_ZN7logging22ShouldCreateLogMessageEi(i32) local_unnamed_addr #4

declare void @_ZN7logging10LogMessageC1EPKcii(%"class.logging::LogMessage"*, i8*, i32, i32) unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEm(%"class.std::__1::basic_ostream"*, i64) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10LogMessageD1Ev(%"class.logging::LogMessage"*) unnamed_addr #2

declare i32 @close(i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckError", align 8
  %3 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 4, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.logging::CheckError"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %2, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.3, i64 0, i64 0), i32 128, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.4, i64 0, i64 0)) #10
  %9 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %2) #10
  %10 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %9, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.5, i64 0, i64 0), i64 44) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  br label %11

11:                                               ; preds = %1, %7
  %12 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %0, i64 0, i32 1, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, -1
  br i1 %14, label %17, label %15

15:                                               ; preds = %11
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %0, i32 %13) #10
  %16 = load i32, i32* %12, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %16) #10
  store i32 -1, i32* %12, align 8
  br label %17

17:                                               ; preds = %11, %15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base16UnixDomainSocket11SendRecvMsgEiPhjPiRKNS_6PickleE(i32, i8*, i32, i32*, %"class.base::Pickle"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %6 = tail call i64 @_ZN4base16UnixDomainSocket20SendRecvMsgWithFlagsEiPhjiPiRKNS_6PickleE(i32 %0, i8* %1, i32 %2, i32 0, i32* %3, %"class.base::Pickle"* dereferenceable(40) %4)
  ret i64 %6
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN4base16UnixDomainSocket20SendRecvMsgWithFlagsEiPhjiPiRKNS_6PickleE(i32, i8*, i32, i32, i32*, %"class.base::Pickle"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.base::ScopedGeneric", align 8
  %8 = alloca %"class.base::ScopedGeneric", align 8
  %9 = alloca %"class.std::__1::vector", align 8
  %10 = alloca %"class.std::__1::vector.1", align 8
  %11 = bitcast %"class.base::ScopedGeneric"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #10
  %12 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %7, i64 0, i32 0
  %13 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %7, i64 0, i32 1, i32 0
  %14 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %7, i64 0, i32 2
  %15 = bitcast %"class.base::ScopedGeneric"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  store i32 -1, i32* %13, align 8
  store i8 0, i8* %14, align 4
  %16 = bitcast %"class.base::ScopedGeneric"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #10
  %17 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %8, i64 0, i32 0
  %18 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %8, i64 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %8, i64 0, i32 2
  %20 = bitcast %"class.base::ScopedGeneric"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  store i32 -1, i32* %18, align 8
  store i8 0, i8* %19, align 4
  %21 = call zeroext i1 @_ZN4base16CreateSocketPairEPNS_13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEES4_(%"class.base::ScopedGeneric"* nonnull %7, %"class.base::ScopedGeneric"* nonnull %8)
  br i1 %21, label %22, label %116

22:                                               ; preds = %6
  %23 = bitcast %"class.std::__1::vector"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #10
  %24 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 1
  %26 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %9, i64 0, i32 0, i32 2, i32 0, i32 0
  %27 = bitcast i32** %25 to i64*
  %28 = bitcast %"class.std::__1::vector"* %9 to i64*
  %29 = bitcast i32** %26 to i64*
  %30 = call i8* @_Znwm(i64 4) #12
  %31 = bitcast i8* %30 to i32*
  %32 = getelementptr inbounds i8, i8* %30, i64 4
  %33 = ptrtoint i8* %32 to i64
  %34 = load i32, i32* %18, align 8
  store i32 %34, i32* %31, align 4
  %35 = ptrtoint i8* %30 to i64
  store i64 %35, i64* %28, align 8
  store i64 %33, i64* %27, align 8
  store i64 %33, i64* %29, align 8
  %36 = getelementptr inbounds %"class.base::Pickle", %"class.base::Pickle"* %5, i64 0, i32 1
  %37 = bitcast %"struct.base::Pickle::Header"** %36 to i8**
  %38 = load i8*, i8** %37, align 8
  %39 = bitcast i8* %38 to i32*
  %40 = getelementptr inbounds %"class.base::Pickle", %"class.base::Pickle"* %5, i64 0, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = load i32, i32* %39, align 4
  %43 = zext i32 %42 to i64
  %44 = add i64 %41, %43
  %45 = call zeroext i1 @_ZN4base16UnixDomainSocket7SendMsgEiPKvmRKNSt3__16vectorIiNS3_9allocatorIiEEEE(i32 %0, i8* %38, i64 %44, %"class.std::__1::vector"* nonnull dereferenceable(24) %9)
  %46 = load i32*, i32** %24, align 8
  %47 = icmp eq i32* %46, null
  br i1 %47, label %52, label %48

48:                                               ; preds = %22
  %49 = ptrtoint i32* %46 to i64
  %50 = bitcast i32** %25 to i64*
  store i64 %49, i64* %50, align 8
  %51 = bitcast i32* %46 to i8*
  call void @_ZdlPv(i8* %51) #12
  br label %52

52:                                               ; preds = %22, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #10
  br i1 %45, label %53, label %116

53:                                               ; preds = %52
  %54 = load i32, i32* %18, align 8
  %55 = icmp eq i32 %54, -1
  br i1 %55, label %58, label %56

56:                                               ; preds = %53
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %8, i32 %54) #10
  %57 = load i32, i32* %18, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %57) #10
  store i32 -1, i32* %18, align 8
  br label %58

58:                                               ; preds = %53, %56
  store i32 -1, i32* %18, align 8
  %59 = bitcast %"class.std::__1::vector.1"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #10
  %60 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %10, i64 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %10, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 24, i1 false) #10
  %62 = load i32, i32* %13, align 8
  %63 = zext i32 %2 to i64
  %64 = call i64 @_ZN4base16UnixDomainSocket16RecvMsgWithFlagsEiPvmiPNSt3__16vectorINS_13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEENS2_9allocatorIS7_EEEEPi(i32 %62, i8* %1, i64 %63, i32 %3, %"class.std::__1::vector.1"* nonnull %10, i32* null)
  %65 = load i32, i32* %13, align 8
  %66 = icmp eq i32 %65, -1
  br i1 %66, label %69, label %67

67:                                               ; preds = %58
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* nonnull dereferenceable(16) %7, i32 %65) #10
  %68 = load i32, i32* %13, align 8
  call void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32 %68) #10
  store i32 -1, i32* %13, align 8
  br label %69

69:                                               ; preds = %58, %67
  store i32 -1, i32* %13, align 8
  %70 = icmp eq i64 %64, -1
  br i1 %70, label %95, label %71

71:                                               ; preds = %69
  %72 = bitcast %"class.base::ScopedGeneric"** %61 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = bitcast %"class.std::__1::vector.1"* %10 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = sub i64 %73, %75
  %77 = ashr exact i64 %76, 4
  %78 = icmp ne i32* %4, null
  %79 = zext i1 %78 to i64
  %80 = icmp ugt i64 %77, %79
  %81 = xor i1 %78, true
  %82 = or i1 %80, %81
  %83 = select i1 %80, i64 -1, i64 %64
  %84 = inttoptr i64 %75 to %"class.base::ScopedGeneric"*
  br i1 %82, label %95, label %85

85:                                               ; preds = %71
  %86 = inttoptr i64 %73 to %"class.base::ScopedGeneric"*
  %87 = icmp eq %"class.base::ScopedGeneric"* %84, %86
  br i1 %87, label %93, label %88

88:                                               ; preds = %85
  %89 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %84, i64 0, i32 1, i32 0
  %90 = load i32, i32* %89, align 8
  store i32 -1, i32* %89, align 8
  %91 = icmp eq i32 %90, -1
  br i1 %91, label %93, label %92

92:                                               ; preds = %88
  call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %84, i32 %90) #10
  br label %93

93:                                               ; preds = %92, %88, %85
  %94 = phi i32 [ -1, %85 ], [ -1, %88 ], [ %90, %92 ]
  store i32 %94, i32* %4, align 4
  br label %95

95:                                               ; preds = %71, %93, %69
  %96 = phi i64 [ -1, %69 ], [ %83, %71 ], [ %64, %93 ]
  %97 = load %"class.base::ScopedGeneric"*, %"class.base::ScopedGeneric"** %60, align 8
  %98 = icmp eq %"class.base::ScopedGeneric"* %97, null
  br i1 %98, label %115, label %99

99:                                               ; preds = %95
  %100 = bitcast %"class.base::ScopedGeneric"* %97 to i8*
  %101 = load %"class.base::ScopedGeneric"*, %"class.base::ScopedGeneric"** %61, align 8
  %102 = icmp eq %"class.base::ScopedGeneric"* %101, %97
  br i1 %102, label %113, label %103

103:                                              ; preds = %99, %103
  %104 = phi %"class.base::ScopedGeneric"* [ %105, %103 ], [ %101, %99 ]
  %105 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %104, i64 -1
  %106 = bitcast %"class.base::ScopedGeneric"* %105 to void (%"class.base::ScopedGeneric"*)***
  %107 = load void (%"class.base::ScopedGeneric"*)**, void (%"class.base::ScopedGeneric"*)*** %106, align 8
  %108 = load void (%"class.base::ScopedGeneric"*)*, void (%"class.base::ScopedGeneric"*)** %107, align 8
  call void %108(%"class.base::ScopedGeneric"* %105) #10
  %109 = icmp eq %"class.base::ScopedGeneric"* %105, %97
  br i1 %109, label %110, label %103

110:                                              ; preds = %103
  %111 = bitcast %"class.std::__1::vector.1"* %10 to i8**
  %112 = load i8*, i8** %111, align 8
  br label %113

113:                                              ; preds = %110, %99
  %114 = phi i8* [ %112, %110 ], [ %100, %99 ]
  store %"class.base::ScopedGeneric"* %97, %"class.base::ScopedGeneric"** %61, align 8
  call void @_ZdlPv(i8* %114) #12
  br label %115

115:                                              ; preds = %95, %113
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #10
  br label %116

116:                                              ; preds = %6, %52, %115
  %117 = phi i64 [ %96, %115 ], [ -1, %52 ], [ -1, %6 ]
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %8) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #10
  call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* nonnull %7) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #10
  ret i64 %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #10
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 -86, i64 16, i1 false)
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #10
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #10
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #10
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #10
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #10
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #10
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #10
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #10
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = icmp ult i64 %17, 23
  %34 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %34, i8 -86, i64 24, i1 false)
  br i1 %33, label %43, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = add nuw i64 %17, 16
  %39 = and i64 %38, -16
  %40 = tail call i8* @_Znwm(i64 %39) #12
  store i8* %40, i8** %32, align 8
  %41 = or i64 %39, -9223372036854775808
  store i64 %41, i64* %36, align 8
  store i64 %17, i64* %37, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %47

43:                                               ; preds = %30
  %44 = trunc i64 %17 to i8
  %45 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 %44, i8* %46, align 1
  br label %47

47:                                               ; preds = %35, %43
  %48 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %42, %35 ], [ %45, %43 ]
  %49 = phi i8* [ %40, %35 ], [ %31, %43 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %49, i8 %5, i64 %17, i1 false) #10
  %50 = getelementptr inbounds i8, i8* %49, i64 %17
  store i8 0, i8* %50, align 1
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = load i8*, i8** %32, align 8
  %55 = select i1 %53, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #10
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %51, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %47
  %65 = load i8*, i8** %32, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %47, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #10
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #10
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #2

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #7

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #2

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #4

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #4

declare void @_ZN4base8internal19ScopedFDCloseTraits4FreeEi(i32) local_unnamed_addr #4

declare void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #4

declare void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16), i32) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED0Ev(%"class.base::ScopedGeneric"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEED2Ev(%"class.base::ScopedGeneric"* %0) #10
  %2 = bitcast %"class.base::ScopedGeneric"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #12
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #4

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN4base13ScopedGenericIiNS1_8internal19ScopedFDCloseTraitsEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.1"*, %"class.base::ScopedGeneric"* dereferenceable(16)) local_unnamed_addr #8 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.base::ScopedGeneric"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 4
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 1152921504606846975
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #11
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.base::ScopedGeneric"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 4
  %20 = icmp ult i64 %19, 576460752303423487
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 3
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 1152921504606846975
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #11
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 1152921504606846975, %14 ]
  %31 = shl i64 %30, 4
  %32 = tail call i8* @_Znwm(i64 %31) #12
  %33 = bitcast i8* %32 to %"class.base::ScopedGeneric"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.base::ScopedGeneric"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %36, i64 %9
  %38 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %36, i64 %35
  %39 = ptrtoint %"class.base::ScopedGeneric"* %38 to i64
  %40 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %37, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %40, align 8
  %41 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %36, i64 %9, i32 1
  %42 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %1, i64 0, i32 1, i32 0
  %43 = load i32, i32* %42, align 8
  store i32 -1, i32* %42, align 8
  %44 = icmp eq i32 %43, -1
  br i1 %44, label %45, label %48

45:                                               ; preds = %34
  %46 = getelementptr inbounds %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data"* %41, i64 0, i32 0
  store i32 -1, i32* %46, align 4
  %47 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %36, i64 %9, i32 2
  store i8 0, i8* %47, align 4
  br label %51

48:                                               ; preds = %34
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %1, i32 %43) #10
  %49 = getelementptr inbounds %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data"* %41, i64 0, i32 0
  store i32 %43, i32* %49, align 4
  %50 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %36, i64 %9, i32 2
  store i8 0, i8* %50, align 4
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %37, i32 %43) #10
  br label %51

51:                                               ; preds = %45, %48
  %52 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %37, i64 1
  %53 = ptrtoint %"class.base::ScopedGeneric"* %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector.1", %"class.std::__1::vector.1"* %0, i64 0, i32 0, i32 0
  %55 = load %"class.base::ScopedGeneric"*, %"class.base::ScopedGeneric"** %54, align 8
  %56 = load %"class.base::ScopedGeneric"*, %"class.base::ScopedGeneric"** %3, align 8
  %57 = icmp eq %"class.base::ScopedGeneric"* %56, %55
  br i1 %57, label %58, label %60

58:                                               ; preds = %51
  %59 = ptrtoint %"class.base::ScopedGeneric"* %55 to i64
  br label %81

60:                                               ; preds = %51, %76
  %61 = phi %"class.base::ScopedGeneric"* [ %63, %76 ], [ %37, %51 ]
  %62 = phi %"class.base::ScopedGeneric"* [ %64, %76 ], [ %56, %51 ]
  %63 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %61, i64 -1
  %64 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %62, i64 -1
  %65 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %63, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN4base13ScopedGenericIiNS_8internal19ScopedFDCloseTraitsEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %65, align 8
  %66 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %61, i64 -1, i32 1
  %67 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %62, i64 -1, i32 1, i32 0
  %68 = load i32, i32* %67, align 8
  store i32 -1, i32* %67, align 8
  %69 = icmp eq i32 %68, -1
  br i1 %69, label %70, label %73

70:                                               ; preds = %60
  %71 = getelementptr inbounds %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data"* %66, i64 0, i32 0
  store i32 -1, i32* %71, align 4
  %72 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %61, i64 -1, i32 2
  store i8 0, i8* %72, align 4
  br label %76

73:                                               ; preds = %60
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7ReleaseERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %64, i32 %68) #10
  %74 = getelementptr inbounds %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data", %"struct.base::ScopedGeneric<int, base::internal::ScopedFDCloseTraits>::Data"* %66, i64 0, i32 0
  store i32 %68, i32* %74, align 4
  %75 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %61, i64 -1, i32 2
  store i8 0, i8* %75, align 4
  tail call void @_ZN4base8internal19ScopedFDCloseTraits7AcquireERKNS_13ScopedGenericIiS1_EEi(%"class.base::ScopedGeneric"* dereferenceable(16) %63, i32 %68) #10
  br label %76

76:                                               ; preds = %73, %70
  %77 = icmp eq %"class.base::ScopedGeneric"* %64, %55
  br i1 %77, label %78, label %60

78:                                               ; preds = %76
  %79 = load i64, i64* %6, align 8
  %80 = load %"class.base::ScopedGeneric"*, %"class.base::ScopedGeneric"** %3, align 8
  br label %81

81:                                               ; preds = %58, %78
  %82 = phi %"class.base::ScopedGeneric"* [ %55, %58 ], [ %80, %78 ]
  %83 = phi %"class.base::ScopedGeneric"* [ %37, %58 ], [ %63, %78 ]
  %84 = phi i64 [ %59, %58 ], [ %79, %78 ]
  %85 = ptrtoint %"class.base::ScopedGeneric"* %83 to i64
  store i64 %85, i64* %6, align 8
  store i64 %53, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %86 = inttoptr i64 %84 to %"class.base::ScopedGeneric"*
  %87 = icmp eq %"class.base::ScopedGeneric"* %82, %86
  br i1 %87, label %95, label %88

88:                                               ; preds = %81, %88
  %89 = phi %"class.base::ScopedGeneric"* [ %90, %88 ], [ %82, %81 ]
  %90 = getelementptr inbounds %"class.base::ScopedGeneric", %"class.base::ScopedGeneric"* %89, i64 -1
  %91 = bitcast %"class.base::ScopedGeneric"* %90 to void (%"class.base::ScopedGeneric"*)***
  %92 = load void (%"class.base::ScopedGeneric"*)**, void (%"class.base::ScopedGeneric"*)*** %91, align 8
  %93 = load void (%"class.base::ScopedGeneric"*)*, void (%"class.base::ScopedGeneric"*)** %92, align 8
  tail call void %93(%"class.base::ScopedGeneric"* %90) #10
  %94 = icmp eq %"class.base::ScopedGeneric"* %90, %86
  br i1 %94, label %95, label %88

95:                                               ; preds = %88, %81
  %96 = icmp eq i64 %84, 0
  br i1 %96, label %99, label %97

97:                                               ; preds = %95
  %98 = inttoptr i64 %84 to i8*
  tail call void @_ZdlPv(i8* %98) #12
  br label %99

99:                                               ; preds = %95, %97
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }
attributes #13 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
