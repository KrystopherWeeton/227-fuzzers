; ModuleID = '../../third_party/blink/renderer/modules/animationworklet/worklet_animation_effect_timings.cc'
source_filename = "../../third_party/blink/renderer/modules/animationworklet/worklet_animation_effect_timings.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::WorkletAnimationEffectTimings" = type { %"class.cc::AnimationEffectTimings", %class.scoped_refptr }
%"class.cc::AnimationEffectTimings" = type { i32 (...)** }
%class.scoped_refptr = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe", %"class.WTF::Vector" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::Timing"*, i32, i32 }
%"struct.blink::Timing" = type <{ %"class.blink::AnimationTimeDelta", %"class.blink::AnimationTimeDelta", i32, [4 x i8], double, double, %"class.absl::optional", i32, [4 x i8], %class.scoped_refptr.8, i16, [6 x i8] }>
%"class.blink::AnimationTimeDelta" = type { double }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::AnimationTimeDelta" }
%class.scoped_refptr.8 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.9" }
%"class.base::RefCountedThreadSafe.9" = type { %"class.base::subtle::RefCountedThreadSafeBase" }

@_ZTVN5blink29WorkletAnimationEffectTimingsE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::WorkletAnimationEffectTimings"*)* @_ZN5blink29WorkletAnimationEffectTimingsD2Ev to i8*), i8* bitcast (void (%"class.blink::WorkletAnimationEffectTimings"*)* @_ZN5blink29WorkletAnimationEffectTimingsD0Ev to i8*), i8* bitcast (%"class.cc::AnimationEffectTimings"* (%"class.blink::WorkletAnimationEffectTimings"*)* @_ZNK5blink29WorkletAnimationEffectTimings5CloneEv to i8*)] }, align 8

@_ZN5blink29WorkletAnimationEffectTimingsC1E13scoped_refptrIN4base14RefCountedDataIN3WTF6VectorINS_6TimingELj0ENS4_18PartitionAllocatorEEEEEE = hidden unnamed_addr alias void (%"class.blink::WorkletAnimationEffectTimings"*, %"class.base::RefCountedData"*), void (%"class.blink::WorkletAnimationEffectTimings"*, %"class.base::RefCountedData"*)* @_ZN5blink29WorkletAnimationEffectTimingsC2E13scoped_refptrIN4base14RefCountedDataIN3WTF6VectorINS_6TimingELj0ENS4_18PartitionAllocatorEEEEEE
@_ZN5blink29WorkletAnimationEffectTimingsD1Ev = hidden unnamed_addr alias void (%"class.blink::WorkletAnimationEffectTimings"*), void (%"class.blink::WorkletAnimationEffectTimings"*)* @_ZN5blink29WorkletAnimationEffectTimingsD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29WorkletAnimationEffectTimingsC2E13scoped_refptrIN4base14RefCountedDataIN3WTF6VectorINS_6TimingELj0ENS4_18PartitionAllocatorEEEEEE(%"class.blink::WorkletAnimationEffectTimings"* nocapture, %"class.base::RefCountedData"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::WorkletAnimationEffectTimings", %"class.blink::WorkletAnimationEffectTimings"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink29WorkletAnimationEffectTimingsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::WorkletAnimationEffectTimings", %"class.blink::WorkletAnimationEffectTimings"* %0, i64 0, i32 1, i32 0
  store %"class.base::RefCountedData"* %1, %"class.base::RefCountedData"** %4, align 8
  %5 = icmp eq %"class.base::RefCountedData"* %1, null
  br i1 %5, label %52, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  %9 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %1, i64 0, i32 0
  %10 = atomicrmw sub i32* %7, i32 1 acq_rel
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %12, label %52

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 2
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %13 to %"struct.blink::Timing"**
  %15 = load %"struct.blink::Timing"*, %"struct.blink::Timing"** %14, align 8
  %16 = icmp eq %"struct.blink::Timing"* %15, null
  br i1 %16, label %50, label %17, !prof !2

17:                                               ; preds = %12
  %18 = bitcast %"struct.blink::Timing"* %15 to i8*
  %19 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %9, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %48, label %22, !prof !3

22:                                               ; preds = %17
  %23 = zext i32 %20 to i64
  %24 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %15, i64 %23
  br label %25

25:                                               ; preds = %42, %22
  %26 = phi %"struct.blink::Timing"* [ %43, %42 ], [ %15, %22 ]
  %27 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %26, i64 0, i32 9, i32 0
  %28 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %27, align 8
  %29 = icmp eq %"class.blink::TimingFunction"* %28, null
  br i1 %29, label %42, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %28, i64 0, i32 1, i32 0
  %32 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw sub i32* %32, i32 1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %42

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %31, i64 -2
  %37 = bitcast %"class.base::RefCountedThreadSafe.9"* %36 to %"class.blink::TimingFunction"*
  %38 = bitcast %"class.base::RefCountedThreadSafe.9"* %36 to void (%"class.blink::TimingFunction"*)***
  %39 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %39, i64 1
  %41 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %40, align 8
  tail call void %41(%"class.blink::TimingFunction"* nonnull %37) #4
  br label %42

42:                                               ; preds = %35, %30, %25
  %43 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %26, i64 1
  %44 = icmp eq %"struct.blink::Timing"* %43, %24
  br i1 %44, label %45, label %25

45:                                               ; preds = %42
  store i32 0, i32* %19, align 4
  %46 = bitcast %"class.base::RefCountedThreadSafe"* %13 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %17
  %49 = phi i8* [ %47, %45 ], [ %18, %17 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %49) #4
  br label %50

50:                                               ; preds = %48, %12
  %51 = bitcast %"class.base::RefCountedData"* %1 to i8*
  tail call void @_ZdlPv(i8* %51) #5
  br label %52

52:                                               ; preds = %2, %6, %50
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.cc::AnimationEffectTimings"* @_ZNK5blink29WorkletAnimationEffectTimings5CloneEv(%"class.blink::WorkletAnimationEffectTimings"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 16) #5
  %3 = getelementptr inbounds %"class.blink::WorkletAnimationEffectTimings", %"class.blink::WorkletAnimationEffectTimings"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %3, align 8
  %5 = icmp eq %"class.base::RefCountedData"* %4, null
  br i1 %5, label %6, label %10

6:                                                ; preds = %1
  %7 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink29WorkletAnimationEffectTimingsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 8
  %9 = bitcast i8* %8 to %"class.base::RefCountedData"**
  store %"class.base::RefCountedData"* null, %"class.base::RefCountedData"** %9, align 8
  br label %60

10:                                               ; preds = %1
  %11 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = atomicrmw add i32* %11, i32 1 monotonic
  %13 = bitcast i8* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink29WorkletAnimationEffectTimingsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds i8, i8* %2, i64 8
  %15 = bitcast i8* %14 to %"class.base::RefCountedData"**
  store %"class.base::RefCountedData"* %4, %"class.base::RefCountedData"** %15, align 8
  %16 = atomicrmw add i32* %11, i32 1 monotonic
  %17 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %4, i64 0, i32 0
  %18 = atomicrmw sub i32* %11, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %60

20:                                               ; preds = %10
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %17, i64 2
  %22 = bitcast %"class.base::RefCountedThreadSafe"* %21 to %"struct.blink::Timing"**
  %23 = load %"struct.blink::Timing"*, %"struct.blink::Timing"** %22, align 8
  %24 = icmp eq %"struct.blink::Timing"* %23, null
  br i1 %24, label %58, label %25, !prof !2

25:                                               ; preds = %20
  %26 = bitcast %"struct.blink::Timing"* %23 to i8*
  %27 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %17, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %56, label %30, !prof !3

30:                                               ; preds = %25
  %31 = zext i32 %28 to i64
  %32 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %23, i64 %31
  br label %33

33:                                               ; preds = %50, %30
  %34 = phi %"struct.blink::Timing"* [ %51, %50 ], [ %23, %30 ]
  %35 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %34, i64 0, i32 9, i32 0
  %36 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %35, align 8
  %37 = icmp eq %"class.blink::TimingFunction"* %36, null
  br i1 %37, label %50, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %36, i64 0, i32 1, i32 0
  %40 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i32* %40, i32 1 acq_rel
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %43, label %50

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %39, i64 -2
  %45 = bitcast %"class.base::RefCountedThreadSafe.9"* %44 to %"class.blink::TimingFunction"*
  %46 = bitcast %"class.base::RefCountedThreadSafe.9"* %44 to void (%"class.blink::TimingFunction"*)***
  %47 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %46, align 8
  %48 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %47, i64 1
  %49 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %48, align 8
  tail call void %49(%"class.blink::TimingFunction"* nonnull %45) #4
  br label %50

50:                                               ; preds = %43, %38, %33
  %51 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %34, i64 1
  %52 = icmp eq %"struct.blink::Timing"* %51, %32
  br i1 %52, label %53, label %33

53:                                               ; preds = %50
  store i32 0, i32* %27, align 4
  %54 = bitcast %"class.base::RefCountedThreadSafe"* %21 to i8**
  %55 = load i8*, i8** %54, align 8
  br label %56

56:                                               ; preds = %53, %25
  %57 = phi i8* [ %55, %53 ], [ %26, %25 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %57) #4
  br label %58

58:                                               ; preds = %56, %20
  %59 = bitcast %"class.base::RefCountedData"* %4 to i8*
  tail call void @_ZdlPv(i8* %59) #5
  br label %60

60:                                               ; preds = %58, %10, %6
  %61 = bitcast i8* %2 to %"class.cc::AnimationEffectTimings"*
  ret %"class.cc::AnimationEffectTimings"* %61
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29WorkletAnimationEffectTimingsD2Ev(%"class.blink::WorkletAnimationEffectTimings"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletAnimationEffectTimings", %"class.blink::WorkletAnimationEffectTimings"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink29WorkletAnimationEffectTimingsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WorkletAnimationEffectTimings", %"class.blink::WorkletAnimationEffectTimings"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %3, align 8
  %5 = icmp eq %"class.base::RefCountedData"* %4, null
  br i1 %5, label %51, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %51

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"struct.blink::Timing"**
  %14 = load %"struct.blink::Timing"*, %"struct.blink::Timing"** %13, align 8
  %15 = icmp eq %"struct.blink::Timing"* %14, null
  br i1 %15, label %49, label %16, !prof !2

16:                                               ; preds = %11
  %17 = bitcast %"struct.blink::Timing"* %14 to i8*
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %47, label %21, !prof !3

21:                                               ; preds = %16
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %14, i64 %22
  br label %24

24:                                               ; preds = %41, %21
  %25 = phi %"struct.blink::Timing"* [ %42, %41 ], [ %14, %21 ]
  %26 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %25, i64 0, i32 9, i32 0
  %27 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %26, align 8
  %28 = icmp eq %"class.blink::TimingFunction"* %27, null
  br i1 %28, label %41, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %27, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw sub i32* %31, i32 1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %41

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %30, i64 -2
  %36 = bitcast %"class.base::RefCountedThreadSafe.9"* %35 to %"class.blink::TimingFunction"*
  %37 = bitcast %"class.base::RefCountedThreadSafe.9"* %35 to void (%"class.blink::TimingFunction"*)***
  %38 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %38, i64 1
  %40 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %39, align 8
  tail call void %40(%"class.blink::TimingFunction"* nonnull %36) #4
  br label %41

41:                                               ; preds = %34, %29, %24
  %42 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %25, i64 1
  %43 = icmp eq %"struct.blink::Timing"* %42, %23
  br i1 %43, label %44, label %24

44:                                               ; preds = %41
  store i32 0, i32* %18, align 4
  %45 = bitcast %"class.base::RefCountedThreadSafe"* %12 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %16
  %48 = phi i8* [ %46, %44 ], [ %17, %16 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %48) #4
  br label %49

49:                                               ; preds = %47, %11
  %50 = bitcast %"class.base::RefCountedData"* %4 to i8*
  tail call void @_ZdlPv(i8* %50) #5
  br label %51

51:                                               ; preds = %1, %6, %49
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink29WorkletAnimationEffectTimingsD0Ev(%"class.blink::WorkletAnimationEffectTimings"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::WorkletAnimationEffectTimings", %"class.blink::WorkletAnimationEffectTimings"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink29WorkletAnimationEffectTimingsE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::WorkletAnimationEffectTimings", %"class.blink::WorkletAnimationEffectTimings"* %0, i64 0, i32 1, i32 0
  %4 = load %"class.base::RefCountedData"*, %"class.base::RefCountedData"** %3, align 8
  %5 = icmp eq %"class.base::RefCountedData"* %4, null
  br i1 %5, label %51, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %4, i64 0, i32 0
  %8 = getelementptr inbounds %"class.base::RefCountedData", %"class.base::RefCountedData"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw sub i32* %8, i32 1 acq_rel
  %10 = icmp eq i32 %9, 1
  br i1 %10, label %11, label %51

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 2
  %13 = bitcast %"class.base::RefCountedThreadSafe"* %12 to %"struct.blink::Timing"**
  %14 = load %"struct.blink::Timing"*, %"struct.blink::Timing"** %13, align 8
  %15 = icmp eq %"struct.blink::Timing"* %14, null
  br i1 %15, label %49, label %16, !prof !2

16:                                               ; preds = %11
  %17 = bitcast %"struct.blink::Timing"* %14 to i8*
  %18 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %7, i64 5, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %47, label %21, !prof !3

21:                                               ; preds = %16
  %22 = zext i32 %19 to i64
  %23 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %14, i64 %22
  br label %24

24:                                               ; preds = %41, %21
  %25 = phi %"struct.blink::Timing"* [ %42, %41 ], [ %14, %21 ]
  %26 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %25, i64 0, i32 9, i32 0
  %27 = load %"class.blink::TimingFunction"*, %"class.blink::TimingFunction"** %26, align 8
  %28 = icmp eq %"class.blink::TimingFunction"* %27, null
  br i1 %28, label %41, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.blink::TimingFunction", %"class.blink::TimingFunction"* %27, i64 0, i32 1, i32 0
  %31 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = atomicrmw sub i32* %31, i32 1 acq_rel
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %34, label %41

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.base::RefCountedThreadSafe.9", %"class.base::RefCountedThreadSafe.9"* %30, i64 -2
  %36 = bitcast %"class.base::RefCountedThreadSafe.9"* %35 to %"class.blink::TimingFunction"*
  %37 = bitcast %"class.base::RefCountedThreadSafe.9"* %35 to void (%"class.blink::TimingFunction"*)***
  %38 = load void (%"class.blink::TimingFunction"*)**, void (%"class.blink::TimingFunction"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %38, i64 1
  %40 = load void (%"class.blink::TimingFunction"*)*, void (%"class.blink::TimingFunction"*)** %39, align 8
  tail call void %40(%"class.blink::TimingFunction"* nonnull %36) #4
  br label %41

41:                                               ; preds = %34, %29, %24
  %42 = getelementptr inbounds %"struct.blink::Timing", %"struct.blink::Timing"* %25, i64 1
  %43 = icmp eq %"struct.blink::Timing"* %42, %23
  br i1 %43, label %44, label %24

44:                                               ; preds = %41
  store i32 0, i32* %18, align 4
  %45 = bitcast %"class.base::RefCountedThreadSafe"* %12 to i8**
  %46 = load i8*, i8** %45, align 8
  br label %47

47:                                               ; preds = %44, %16
  %48 = phi i8* [ %46, %44 ], [ %17, %16 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %48) #4
  br label %49

49:                                               ; preds = %47, %11
  %50 = bitcast %"class.base::RefCountedData"* %4 to i8*
  tail call void @_ZdlPv(i8* %50) #5
  br label %51

51:                                               ; preds = %1, %6, %49
  %52 = bitcast %"class.blink::WorkletAnimationEffectTimings"* %0 to i8*
  tail call void @_ZdlPv(i8* %52) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
