; ModuleID = '../../third_party/blink/renderer/core/dom/live_node_list_registry.cc'
source_filename = "../../third_party/blink/renderer/core/dom/live_node_list_registry.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.334", i32, [4 x i8], %"class.std::__1::unique_ptr.470", %"class.std::__1::unique_ptr.470", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.481", %"class.std::__1::unique_ptr.487", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.499", %"class.std::__1::unique_ptr.505", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.512", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.334" = type { %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.337", %"class.std::__1::unique_ptr.343", %"class.std::__1::unique_ptr.349", %"class.std::__1::unique_ptr.355", %"class.std::__1::unique_ptr.361", %"class.std::__1::unique_ptr.367", %"class.std::__1::unique_ptr.378", %"class.std::__1::unique_ptr.385", %"class.std::__1::unique_ptr.385", %"class.std::__1::unique_ptr.392", %"class.std::__1::unique_ptr.399", %"class.std::__1::unique_ptr.406", %"class.std::__1::unique_ptr.406", %"class.std::__1::unique_ptr.413", %"class.std::__1::unique_ptr.420", %"class.std::__1::unique_ptr.427", %"class.std::__1::unique_ptr.450", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.361" = type { %"class.std::__1::__compressed_pair.362" }
%"class.std::__1::__compressed_pair.362" = type { %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.367" = type { %"class.std::__1::__compressed_pair.368" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.370" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.370" = type { %"struct.std::__1::__atomic_base.371" }
%"struct.std::__1::__atomic_base.371" = type { %"struct.std::__1::__atomic_base.372" }
%"struct.std::__1::__atomic_base.372" = type { %"struct.std::__1::__cxx_atomic_impl.373" }
%"struct.std::__1::__cxx_atomic_impl.373" = type { %"struct.std::__1::__cxx_atomic_base_impl.374" }
%"struct.std::__1::__cxx_atomic_base_impl.374" = type { i64 }
%"class.std::__1::unique_ptr.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.380" }
%"struct.std::__1::__compressed_pair_elem.380" = type { %"class.blink::Worklist.381"* }
%"class.blink::Worklist.381" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.370" }
%"class.std::__1::unique_ptr.385" = type { %"class.std::__1::__compressed_pair.386" }
%"class.std::__1::__compressed_pair.386" = type { %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.blink::Worklist.388"* }
%"class.blink::Worklist.388" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.370" }
%"class.std::__1::unique_ptr.392" = type { %"class.std::__1::__compressed_pair.393" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"class.blink::Worklist.395"* }
%"class.blink::Worklist.395" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.370" }
%"class.std::__1::unique_ptr.399" = type { %"class.std::__1::__compressed_pair.400" }
%"class.std::__1::__compressed_pair.400" = type { %"struct.std::__1::__compressed_pair_elem.401" }
%"struct.std::__1::__compressed_pair_elem.401" = type { %"class.blink::Worklist.402"* }
%"class.blink::Worklist.402" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.370" }
%"class.std::__1::unique_ptr.406" = type { %"class.std::__1::__compressed_pair.407" }
%"class.std::__1::__compressed_pair.407" = type { %"struct.std::__1::__compressed_pair_elem.408" }
%"struct.std::__1::__compressed_pair_elem.408" = type { %"class.blink::Worklist.409"* }
%"class.blink::Worklist.409" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.370" }
%"class.std::__1::unique_ptr.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"class.blink::Worklist.416"* }
%"class.blink::Worklist.416" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.370" }
%"class.std::__1::unique_ptr.420" = type { %"class.std::__1::__compressed_pair.421" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.422" }
%"struct.std::__1::__compressed_pair_elem.422" = type { %"class.blink::Worklist.423"* }
%"class.blink::Worklist.423" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.370" }
%"class.std::__1::unique_ptr.427" = type { %"class.std::__1::__compressed_pair.428" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.429" }
%"struct.std::__1::__compressed_pair_elem.429" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.430", %"class.std::__1::__compressed_pair.437", %"class.std::__1::__compressed_pair.442", %"class.std::__1::__compressed_pair.444", [4 x i8] }>
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432", %"struct.std::__1::__compressed_pair_elem.433" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.433" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.434" }
%"class.std::__1::__compressed_pair.434" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"struct.std::__1::__compressed_pair_elem.435" = type { i64 }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.438" }
%"struct.std::__1::__compressed_pair_elem.438" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.442" = type { %"struct.std::__1::__compressed_pair_elem.435" }
%"class.std::__1::__compressed_pair.444" = type { %"struct.std::__1::__compressed_pair_elem.445" }
%"struct.std::__1::__compressed_pair_elem.445" = type { float }
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.453", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.453" = type { %"class.std::__1::__compressed_pair.454" }
%"class.std::__1::__compressed_pair.454" = type { %"struct.std::__1::__compressed_pair_elem.455" }
%"struct.std::__1::__compressed_pair_elem.455" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.462" }
%"class.WTF::Vector.462" = type { %"class.WTF::VectorBuffer.463" }
%"class.WTF::VectorBuffer.463" = type { %"class.WTF::VectorBufferBase.464" }
%"class.WTF::VectorBufferBase.464" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.470" = type { %"class.std::__1::__compressed_pair.471" }
%"class.std::__1::__compressed_pair.471" = type { %"struct.std::__1::__compressed_pair_elem.472" }
%"struct.std::__1::__compressed_pair_elem.472" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.478" }
%"class.WTF::VectorBuffer.478" = type { %"class.WTF::VectorBufferBase.479" }
%"class.WTF::VectorBufferBase.479" = type { %"struct.std::__1::pair.480"*, i32, i32 }
%"struct.std::__1::pair.480" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.487" = type { %"class.std::__1::__compressed_pair.488" }
%"class.std::__1::__compressed_pair.488" = type { %"struct.std::__1::__compressed_pair_elem.489" }
%"struct.std::__1::__compressed_pair_elem.489" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.493" }
%"class.std::__1::unique_ptr.493" = type { %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.495" }
%"struct.std::__1::__compressed_pair_elem.495" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.381"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.388"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.395"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.402"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.409"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.516" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.499" = type { %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.501" }
%"struct.std::__1::__compressed_pair_elem.501" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.511 }
%class.scoped_refptr.511 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.512" = type { %"struct.std::__1::__atomic_base.513" }
%"struct.std::__1::__atomic_base.513" = type { %"struct.std::__1::__cxx_atomic_impl.514" }
%"struct.std::__1::__cxx_atomic_impl.514" = type { %"struct.std::__1::__cxx_atomic_base_impl.515" }
%"struct.std::__1::__cxx_atomic_base_impl.515" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector", i32, [4 x i8] }>
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type <{ %"class.blink::UntracedMember", i32, [4 x i8] }>
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::LiveNodeListBase"* }
%"class.blink::LiveNodeListBase" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::Member", i16, [6 x i8] }>
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member" = type { %"class.blink::MemberBase.0" }
%"class.blink::MemberBase.0" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.1", %"class.blink::Member.1" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.1", %"class.blink::Member.3", %"class.blink::Member.1", %"class.blink::Member.1", %"class.blink::Member.5" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.3" = type { %"class.blink::MemberBase.4" }
%"class.blink::MemberBase.4" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member", %"class.blink::Member.9", %"class.blink::Member.3", %"class.blink::Member.11", %"class.blink::Member.11", %"class.blink::Member.48", %"class.blink::Member.50", %"class.blink::Member.52", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.57", %"class.blink::HeapVector.59" }
%"class.blink::Member.9" = type { %"class.blink::MemberBase.10" }
%"class.blink::MemberBase.10" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.75", %"class.WTF::Vector.75", i8, i32, %"class.blink::Member.86", %"class.blink::Member.88", %"class.blink::Member.90", %"class.blink::Member.92", %"class.blink::Member.94", %"class.blink::Member.96", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.99", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.105", %"class.blink::Member.107", %"class.blink::Member.65", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.110", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.23", %"class.blink::Member.125", %"class.blink::Member.23", %"class.blink::Member.23", %"class.blink::Member.23", %"class.blink::UserActionElementSet", %"class.blink::Member.134", double, double, i64, i64, %"class.blink::HeapHashSet", %"class.blink::HeapHashSet.141", i16, i8, %"class.blink::Member.148", %"class.blink::Member.150", %"class.blink::Member.152", %"class.blink::Member.154", %"class.blink::TextLinkColors", %"class.blink::Member.156", i8, [7 x i8], %"class.blink::HeapHashMap.158", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.23", %"class.WTF::Vector.165", %"class.blink::Member.170", %"class.blink::Member.172", i8, %"class.blink::Member.23", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.174", %"class.blink::HeapVector.176", %"class.std::__1::unique_ptr.184", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.190", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.197", %"class.WTF::Vector.199", i8, i8, %"class.std::__1::unique_ptr.204", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.210", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.218", i8, i32, %"class.blink::Member.220", %"class.blink::Member.222", %"class.blink::Member.224", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.226", %"class.WTF::HashMap.228", %"class.blink::Member.233", %"class.blink::Member.235", %"class.blink::Member.237", %"class.blink::Member.239", %"class.blink::Member.9", %"class.blink::Member.9", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.241", i8, i32, %"class.blink::Member.248", %"class.blink::Member.250", i32, %"class.blink::Member.252", %"class.blink::Member.254", %"class.blink::Member.256", %"class.std::__1::unique_ptr.258", i64, %"class.std::__1::unique_ptr.264", i32, i32, %"class.blink::Member.270", %"class.blink::Member.272", %"class.blink::Member.274", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.276", %"class.WTF::Vector.278", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.283", %"class.blink::Member.290", %"class.std::__1::unique_ptr.292", %"class.blink::Member.298", i8, i8, %"class.WTF::String", %"class.blink::Member.300", i8, [7 x i8], %"class.blink::HeapHashMap.302", %"class.blink::HeapObserverSet", %"class.blink::Member.316", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.318", i32, i8, i8, %"class.blink::WeakMember.320", %"class.blink::Member.321" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.68" }
%"class.blink::HeapHashMap.68" = type { %"class.WTF::HashMap.71" }
%"class.WTF::HashMap.71" = type { %"class.WTF::HashTable.72" }
%"class.WTF::HashTable.72" = type <{ %"struct.WTF::KeyValuePair.74"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.74" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.75" = type { %"class.WTF::VectorBuffer.76" }
%"class.WTF::VectorBuffer.76" = type { %"class.WTF::VectorBufferBase.77" }
%"class.WTF::VectorBufferBase.77" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.78 }
%class.scoped_refptr.78 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.79" }
%"struct.std::__1::atomic.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__atomic_base.81" }
%"struct.std::__1::__atomic_base.81" = type { %"struct.std::__1::__cxx_atomic_impl.82" }
%"struct.std::__1::__cxx_atomic_impl.82" = type { %"struct.std::__1::__cxx_atomic_base_impl.83" }
%"struct.std::__1::__cxx_atomic_base_impl.83" = type { i32 }
%"class.blink::Member.86" = type { %"class.blink::MemberBase.87" }
%"class.blink::MemberBase.87" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.88" = type { %"class.blink::MemberBase.89" }
%"class.blink::MemberBase.89" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type opaque
%"class.blink::Member.90" = type { %"class.blink::MemberBase.91" }
%"class.blink::MemberBase.91" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.92" = type { %"class.blink::MemberBase.93" }
%"class.blink::MemberBase.93" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.94" = type { %"class.blink::MemberBase.95" }
%"class.blink::MemberBase.95" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.96" = type { %"class.blink::MemberBase.97" }
%"class.blink::MemberBase.97" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::KURL"* }
%"class.blink::Member.105" = type { %"class.blink::MemberBase.106" }
%"class.blink::MemberBase.106" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.107" = type { %"class.blink::MemberBase.108" }
%"class.blink::MemberBase.108" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.blink::Member.65" = type { %"class.blink::MemberBase.66" }
%"class.blink::MemberBase.66" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type opaque
%"class.blink::TaskHandle" = type { %class.scoped_refptr.109 }
%class.scoped_refptr.109 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.WTF::Vector.110" = type { %"class.WTF::VectorBuffer.111" }
%"class.WTF::VectorBuffer.111" = type { %"class.WTF::VectorBufferBase.112" }
%"class.WTF::VectorBufferBase.112" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.113 }
%class.scoped_refptr.113 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type opaque
%"class.blink::Member.125" = type { %"class.blink::MemberBase.126" }
%"class.blink::MemberBase.126" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.127" }
%"class.blink::HeapHashMap.127" = type { %"class.WTF::HashMap.130" }
%"class.WTF::HashMap.130" = type { %"class.WTF::HashTable.131" }
%"class.WTF::HashTable.131" = type <{ %"struct.WTF::KeyValuePair.133"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.133" = type opaque
%"class.blink::Member.134" = type { %"class.blink::MemberBase.135" }
%"class.blink::MemberBase.135" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.138" }
%"class.WTF::HashTable.138" = type <{ %"class.blink::WeakMember.140"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.140" = type opaque
%"class.blink::HeapHashSet.141" = type { %"class.WTF::HashSet.144" }
%"class.WTF::HashSet.144" = type { %"class.WTF::HashTable.145" }
%"class.WTF::HashTable.145" = type <{ %"class.blink::WeakMember.147"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.147" = type opaque
%"class.blink::Member.148" = type { %"class.blink::MemberBase.149" }
%"class.blink::MemberBase.149" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.150" = type { %"class.blink::MemberBase.151" }
%"class.blink::MemberBase.151" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type opaque
%"class.blink::Member.152" = type { %"class.blink::MemberBase.153" }
%"class.blink::MemberBase.153" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.154" = type { %"class.blink::MemberBase.155" }
%"class.blink::MemberBase.155" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::Member.156" = type { %"class.blink::MemberBase.157" }
%"class.blink::MemberBase.157" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.158" = type { %"class.WTF::HashMap.161" }
%"class.WTF::HashMap.161" = type { %"class.WTF::HashTable.162" }
%"class.WTF::HashTable.162" = type <{ %"struct.WTF::KeyValuePair.164"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.164" = type opaque
%"class.WTF::Vector.165" = type { %"class.WTF::VectorBuffer.166" }
%"class.WTF::VectorBuffer.166" = type { %"class.WTF::VectorBufferBase.167" }
%"class.WTF::VectorBufferBase.167" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.170" = type { %"class.blink::MemberBase.171" }
%"class.blink::MemberBase.171" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.172" = type { %"class.blink::MemberBase.173" }
%"class.blink::MemberBase.173" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.blink::Member.23" = type { %"class.blink::MemberBase.24" }
%"class.blink::MemberBase.24" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.26" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.25 }
%class.scoped_refptr.25 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::Member.26" = type { %"class.blink::MemberBase.27" }
%"class.blink::MemberBase.27" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.30", %"class.blink::Member.32", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.30" = type { %"class.WTF::SingleThreadedBitField.31" }
%"class.WTF::SingleThreadedBitField.31" = type { i32 }
%"class.blink::Member.32" = type { %"class.blink::MemberBase.33" }
%"class.blink::MemberBase.33" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type opaque
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.34 }
%class.scoped_refptr.34 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.35", %"class.WTF::AtomicString", %"class.WTF::Vector.37" }
%"class.WTF::RefCounted.35" = type { %"class.base::RefCounted.36" }
%"class.base::RefCounted.36" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.37" = type { %"class.WTF::VectorBuffer.38" }
%"class.WTF::VectorBuffer.38" = type { %"class.WTF::VectorBufferBase.39", [32 x i8] }
%"class.WTF::VectorBufferBase.39" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.174" = type { %"class.blink::MemberBase.175" }
%"class.blink::MemberBase.175" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.176" = type { %"class.WTF::Vector.179" }
%"class.WTF::Vector.179" = type { %"class.WTF::VectorBuffer.180" }
%"class.WTF::VectorBuffer.180" = type { %"class.WTF::VectorBufferBase.181" }
%"class.WTF::VectorBufferBase.181" = type { %"class.blink::Member.182"*, i32, i32 }
%"class.blink::Member.182" = type opaque
%"class.std::__1::unique_ptr.184" = type { %"class.std::__1::__compressed_pair.185" }
%"class.std::__1::__compressed_pair.185" = type { %"struct.std::__1::__compressed_pair_elem.186" }
%"struct.std::__1::__compressed_pair_elem.186" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::HeapHashSet.190" = type { %"class.WTF::HashSet.193" }
%"class.WTF::HashSet.193" = type { %"class.WTF::HashTable.194" }
%"class.WTF::HashTable.194" = type <{ %"class.blink::WeakMember.196"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.196" = type opaque
%"class.blink::Member.197" = type { %"class.blink::MemberBase.198" }
%"class.blink::MemberBase.198" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.199" = type { %"class.WTF::VectorBuffer.200" }
%"class.WTF::VectorBuffer.200" = type { %"class.WTF::VectorBufferBase.201" }
%"class.WTF::VectorBufferBase.201" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.204" = type { %"class.std::__1::__compressed_pair.205" }
%"class.std::__1::__compressed_pair.205" = type { %"struct.std::__1::__compressed_pair_elem.206" }
%"struct.std::__1::__compressed_pair_elem.206" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector" = type { %"class.WTF::Vector.44" }
%"class.WTF::Vector.44" = type { %"class.WTF::VectorBuffer.45" }
%"class.WTF::VectorBuffer.45" = type { %"class.WTF::VectorBufferBase.46" }
%"class.WTF::VectorBufferBase.46" = type { %"class.blink::Member.23"*, i32, i32 }
%"class.blink::HeapVector.210" = type { %"class.WTF::Vector.213" }
%"class.WTF::Vector.213" = type { %"class.WTF::VectorBuffer.214" }
%"class.WTF::VectorBuffer.214" = type { %"class.WTF::VectorBufferBase.215" }
%"class.WTF::VectorBufferBase.215" = type { %"class.blink::Member.216"*, i32, i32 }
%"class.blink::Member.216" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.9" }
%"class.blink::Member.218" = type { %"class.blink::MemberBase.219" }
%"class.blink::MemberBase.219" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.220" = type { %"class.blink::MemberBase.221" }
%"class.blink::MemberBase.221" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.222" = type { %"class.blink::MemberBase.223" }
%"class.blink::MemberBase.223" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.224" = type { %"class.blink::MemberBase.225" }
%"class.blink::MemberBase.225" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.226" = type { %"class.blink::MemberBase.227" }
%"class.blink::MemberBase.227" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.228" = type { %"class.WTF::HashTable.229" }
%"class.WTF::HashTable.229" = type <{ %"struct.WTF::KeyValuePair.232"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.232" = type opaque
%"class.blink::Member.233" = type { %"class.blink::MemberBase.234" }
%"class.blink::MemberBase.234" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.235" = type { %"class.blink::MemberBase.236" }
%"class.blink::MemberBase.236" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.237" = type { %"class.blink::MemberBase.238" }
%"class.blink::MemberBase.238" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.239" = type { %"class.blink::MemberBase.240" }
%"class.blink::MemberBase.240" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.116, %"class.base::WeakPtrFactory" }
%"class.base::TimeDelta" = type { i64 }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%class.scoped_refptr.116 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.117" }>
%"class.base::RefCountedThreadSafe.117" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.118 }
%class.scoped_refptr.118 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.119", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.119" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.120" }
%"struct.std::__1::atomic.120" = type { %"struct.std::__1::__atomic_base.121" }
%"struct.std::__1::__atomic_base.121" = type { %"struct.std::__1::__atomic_base.122" }
%"struct.std::__1::__atomic_base.122" = type { %"struct.std::__1::__cxx_atomic_impl.123" }
%"struct.std::__1::__cxx_atomic_impl.123" = type { %"struct.std::__1::__cxx_atomic_base_impl.124" }
%"struct.std::__1::__cxx_atomic_base_impl.124" = type { i8 }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.10" }
%"class.blink::HeapHashSet.241" = type { %"class.WTF::HashSet.244" }
%"class.WTF::HashSet.244" = type { %"class.WTF::HashTable.245" }
%"class.WTF::HashTable.245" = type <{ %"class.blink::Member.247"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.247" = type opaque
%"class.blink::Member.248" = type { %"class.blink::MemberBase.249" }
%"class.blink::MemberBase.249" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.250" = type { %"class.blink::MemberBase.251" }
%"class.blink::MemberBase.251" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.252" = type { %"class.blink::MemberBase.253" }
%"class.blink::MemberBase.253" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.254" = type { %"class.blink::MemberBase.255" }
%"class.blink::MemberBase.255" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.256" = type { %"class.blink::MemberBase.257" }
%"class.blink::MemberBase.257" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.264" = type { %"class.std::__1::__compressed_pair.265" }
%"class.std::__1::__compressed_pair.265" = type { %"struct.std::__1::__compressed_pair_elem.266" }
%"struct.std::__1::__compressed_pair_elem.266" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.270" = type { %"class.blink::MemberBase.271" }
%"class.blink::MemberBase.271" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.272" = type { %"class.blink::MemberBase.273" }
%"class.blink::MemberBase.273" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.274" = type { %"class.blink::MemberBase.275" }
%"class.blink::MemberBase.275" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.276" = type { %"class.blink::MemberBase.277" }
%"class.blink::MemberBase.277" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.278" = type { %"class.WTF::VectorBuffer.279" }
%"class.WTF::VectorBuffer.279" = type { %"class.WTF::VectorBufferBase.280" }
%"class.WTF::VectorBufferBase.280" = type { i8*, i32, i32 }
%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.blink::HeapHashMap.283" = type { %"class.WTF::HashMap.286" }
%"class.WTF::HashMap.286" = type { %"class.WTF::HashTable.287" }
%"class.WTF::HashTable.287" = type <{ %"struct.WTF::KeyValuePair.289"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.289" = type opaque
%"class.blink::Member.290" = type { %"class.blink::MemberBase.291" }
%"class.blink::MemberBase.291" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.292" = type { %"class.std::__1::__compressed_pair.293" }
%"class.std::__1::__compressed_pair.293" = type { %"struct.std::__1::__compressed_pair_elem.294" }
%"struct.std::__1::__compressed_pair_elem.294" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.298" = type { %"class.blink::MemberBase.299" }
%"class.blink::MemberBase.299" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.WTF::String" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::Member.300" = type { %"class.blink::MemberBase.301" }
%"class.blink::MemberBase.301" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.302" = type { %"class.WTF::HashMap.305" }
%"class.WTF::HashMap.305" = type { %"class.WTF::HashTable.306" }
%"class.WTF::HashTable.306" = type <{ %"struct.WTF::KeyValuePair.308"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.308" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.309" }
%"class.blink::HeapHashSet.309" = type { %"class.WTF::HashSet.312" }
%"class.WTF::HashSet.312" = type { %"class.WTF::HashTable.313" }
%"class.WTF::HashTable.313" = type <{ %"class.blink::WeakMember.315"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.315" = type opaque
%"class.blink::Member.316" = type { %"class.blink::MemberBase.317" }
%"class.blink::MemberBase.317" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.9", %"class.blink::HeapHashSet.325", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.332", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.325" = type { %"class.WTF::HashSet.328" }
%"class.WTF::HashSet.328" = type { %"class.WTF::HashTable.329" }
%"class.WTF::HashTable.329" = type <{ %"class.blink::Member.331"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.331" = type opaque
%"class.blink::HeapTaskRunnerTimer.332" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.333", { i64, i64 } }
%"class.blink::WeakMember.333" = type { %"class.blink::MemberBase.319" }
%"class.blink::WeakMember.320" = type { %"class.blink::MemberBase.2" }
%"class.blink::MemberBase.2" = type { %"class.blink::Node"* }
%"class.blink::Member.321" = type { %"class.blink::MemberBase.322" }
%"class.blink::MemberBase.322" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.11" = type { %"class.blink::MemberBase.12" }
%"class.blink::MemberBase.12" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.blink::Member.19" }
%"class.blink::Member.19" = type { %"class.blink::MemberBase.20" }
%"class.blink::MemberBase.20" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.23", i32, %"class.blink::HeapVector" }
%"class.blink::Member.48" = type { %"class.blink::MemberBase.49" }
%"class.blink::MemberBase.49" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.50" = type { %"class.blink::MemberBase.51" }
%"class.blink::MemberBase.51" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.52" = type { %"class.blink::MemberBase.53" }
%"class.blink::MemberBase.53" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.54" }
%"class.blink::Member.54" = type { %"class.blink::MemberBase.55" }
%"class.blink::MemberBase.55" = type { %"class.blink::HeapHashMap.56"* }
%"class.blink::HeapHashMap.56" = type opaque
%"class.blink::Member.57" = type { %"class.blink::MemberBase.58" }
%"class.blink::MemberBase.58" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.59" = type { %"class.WTF::Vector.62" }
%"class.WTF::Vector.62" = type { %"class.WTF::VectorBuffer.63" }
%"class.WTF::VectorBuffer.63" = type { %"class.WTF::VectorBufferBase.64" }
%"class.WTF::VectorBufferBase.64" = type { %"class.blink::Member.65"*, i32, i32 }
%"class.blink::Member.5" = type { %"class.blink::MemberBase.6" }
%"class.blink::MemberBase.6" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::Member.1" = type { %"class.blink::MemberBase.2" }
%class.anon = type { %"class.blink::LivenessBroker" }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.521" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.522" }
%"struct.std::__1::__compressed_pair_elem.522" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.530", %"class.blink::FreeList", %"class.WTF::Vector.535" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.530" = type { %"class.WTF::VectorBuffer.531" }
%"class.WTF::VectorBuffer.531" = type { %"class.WTF::VectorBufferBase.532" }
%"class.WTF::VectorBufferBase.532" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.535" = type { %"class.WTF::VectorBuffer.536" }
%"class.WTF::VectorBuffer.536" = type { %"class.WTF::VectorBufferBase.537" }
%"class.WTF::VectorBufferBase.537" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }

$_ZN3WTF6VectorINSt3__14pairIN5blink14UntracedMemberIKNS3_16LiveNodeListBaseEEEjEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS8_EEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink14UntracedMemberIKNS4_16LiveNodeListBaseEEEjEEEEmm = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink14UntracedMemberIKNS3_16LiveNodeListBaseEEEjEELj0ENS_18PartitionAllocatorEE7EraseAtEj = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink14UntracedMemberIKNS3_16LiveNodeListBaseEEEjEELj0ENS_18PartitionAllocatorEE14ShrinkCapacityEj = comdat any

$_ZN5blink26WeakCallbackMethodDelegateINS_20LiveNodeListRegistryEXadL_ZNS1_21ProcessCustomWeaknessERKNS_14LivenessBrokerEEEE10TrampolineES4_PKv = comdat any

$_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_16LiveNodeListBaseEEEbPKT_ = comdat any

@.str = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@.str.2 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.3 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink14UntracedMemberIKNS3_16LiveNodeListBaseEEEjEEEEPKcv = private unnamed_addr constant [130 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<blink::UntracedMember<const blink::LiveNodeListBase>, unsigned int>]\00", align 1
@.str.4 = private unnamed_addr constant [18 x i8] c"position < size()\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20LiveNodeListRegistry3AddEPKNS_16LiveNodeListBaseENS_24NodeListInvalidationTypeE(%"class.blink::LiveNodeListRegistry"*, %"class.blink::LiveNodeListBase"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::pair", align 8
  %5 = ptrtoint %"class.blink::LiveNodeListBase"* %1 to i64
  %6 = bitcast %"struct.std::__1::pair"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %4, i64 0, i32 1
  %8 = shl i32 1, %2
  %9 = bitcast %"struct.std::__1::pair"* %4 to i64*
  %10 = bitcast %"struct.std::__1::pair"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 16, i1 false)
  store i64 %5, i64* %9, align 8
  store i32 %8, i32* %7, align 8
  %11 = getelementptr inbounds %"class.blink::LiveNodeListRegistry", %"class.blink::LiveNodeListRegistry"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %"class.blink::LiveNodeListRegistry", %"class.blink::LiveNodeListRegistry"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp eq i32 %12, %14
  br i1 %15, label %26, label %16, !prof !2

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.blink::LiveNodeListRegistry", %"class.blink::LiveNodeListRegistry"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %17, align 8
  %19 = zext i32 %12 to i64
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 %19
  %21 = bitcast %"struct.std::__1::pair"* %20 to i64*
  store i64 %5, i64* %21, align 8
  %22 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %18, i64 %19, i32 1
  %23 = load i32, i32* %7, align 8
  store i32 %23, i32* %22, align 8
  %24 = load i32, i32* %11, align 4
  %25 = add i32 %24, 1
  store i32 %25, i32* %11, align 4
  br label %28

26:                                               ; preds = %3
  %27 = getelementptr inbounds %"class.blink::LiveNodeListRegistry", %"class.blink::LiveNodeListRegistry"* %0, i64 0, i32 0
  call void @_ZN3WTF6VectorINSt3__14pairIN5blink14UntracedMemberIKNS3_16LiveNodeListBaseEEEjEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS8_EEvOT_(%"class.WTF::Vector"* %27, %"struct.std::__1::pair"* nonnull dereferenceable(16) %4) #8
  br label %28

28:                                               ; preds = %16, %26
  %29 = load i32, i32* %7, align 8
  %30 = getelementptr inbounds %"class.blink::LiveNodeListRegistry", %"class.blink::LiveNodeListRegistry"* %0, i64 0, i32 1
  %31 = load i32, i32* %30, align 8
  %32 = or i32 %31, %29
  store i32 %32, i32* %30, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20LiveNodeListRegistry6RemoveEPKNS_16LiveNodeListBaseENS_24NodeListInvalidationTypeE(%"class.blink::LiveNodeListRegistry"*, %"class.blink::LiveNodeListBase"*, i32) local_unnamed_addr #0 align 2 {
  %4 = shl i32 1, %2
  %5 = getelementptr inbounds %"class.blink::LiveNodeListRegistry", %"class.blink::LiveNodeListRegistry"* %0, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::LiveNodeListRegistry", %"class.blink::LiveNodeListRegistry"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::LiveNodeListRegistry", %"class.blink::LiveNodeListRegistry"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %7, i64 %10
  %12 = icmp eq i32 %9, 0
  %13 = ptrtoint %"struct.std::__1::pair"* %7 to i64
  br i1 %12, label %29, label %14

14:                                               ; preds = %3, %23
  %15 = phi %"struct.std::__1::pair"* [ %24, %23 ], [ %7, %3 ]
  %16 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::LiveNodeListBase"*, %"class.blink::LiveNodeListBase"** %16, align 8
  %18 = icmp eq %"class.blink::LiveNodeListBase"* %17, %1
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = icmp eq i32 %21, %4
  br i1 %22, label %26, label %23

23:                                               ; preds = %19, %14
  %24 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %15, i64 1
  %25 = icmp eq %"struct.std::__1::pair"* %24, %11
  br i1 %25, label %26, label %14

26:                                               ; preds = %23, %19
  %27 = phi %"struct.std::__1::pair"* [ %11, %23 ], [ %15, %19 ]
  %28 = ptrtoint %"struct.std::__1::pair"* %27 to i64
  br label %29

29:                                               ; preds = %26, %3
  %30 = phi i64 [ %28, %26 ], [ %13, %3 ]
  %31 = sub i64 %30, %13
  %32 = lshr exact i64 %31, 4
  %33 = trunc i64 %32 to i32
  tail call void @_ZN3WTF6VectorINSt3__14pairIN5blink14UntracedMemberIKNS3_16LiveNodeListBaseEEEjEELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector"* %5, i32 %33) #8
  %34 = load i32, i32* %8, align 4
  %35 = shl i32 %34, 1
  %36 = getelementptr inbounds %"class.blink::LiveNodeListRegistry", %"class.blink::LiveNodeListRegistry"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i32, i32* %36, align 8
  %38 = icmp ult i32 %35, %37
  br i1 %38, label %39, label %44

39:                                               ; preds = %29
  %40 = lshr i32 %34, 2
  %41 = add i32 %34, 1
  %42 = add i32 %41, %40
  tail call void @_ZN3WTF6VectorINSt3__14pairIN5blink14UntracedMemberIKNS3_16LiveNodeListBaseEEEjEELj0ENS_18PartitionAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector"* %5, i32 %42) #8
  %43 = load i32, i32* %8, align 4
  br label %44

44:                                               ; preds = %29, %39
  %45 = phi i32 [ %34, %29 ], [ %43, %39 ]
  %46 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %47 = icmp eq i32 %45, 0
  br i1 %47, label %104, label %48

48:                                               ; preds = %44
  %49 = zext i32 %45 to i64
  %50 = shl nuw nsw i64 %49, 4
  %51 = add nsw i64 %50, -16
  %52 = lshr exact i64 %51, 4
  %53 = add nuw nsw i64 %52, 1
  %54 = and i64 %53, 7
  %55 = icmp ult i64 %51, 112
  br i1 %55, label %89, label %56

56:                                               ; preds = %48
  %57 = sub nsw i64 %53, %54
  br label %58

58:                                               ; preds = %58, %56
  %59 = phi i32 [ 0, %56 ], [ %85, %58 ]
  %60 = phi %"struct.std::__1::pair"* [ %46, %56 ], [ %86, %58 ]
  %61 = phi i64 [ %57, %56 ], [ %87, %58 ]
  %62 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %60, i64 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = or i32 %63, %59
  %65 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %60, i64 1, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = or i32 %66, %64
  %68 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %60, i64 2, i32 1
  %69 = load i32, i32* %68, align 8
  %70 = or i32 %69, %67
  %71 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %60, i64 3, i32 1
  %72 = load i32, i32* %71, align 8
  %73 = or i32 %72, %70
  %74 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %60, i64 4, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = or i32 %75, %73
  %77 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %60, i64 5, i32 1
  %78 = load i32, i32* %77, align 8
  %79 = or i32 %78, %76
  %80 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %60, i64 6, i32 1
  %81 = load i32, i32* %80, align 8
  %82 = or i32 %81, %79
  %83 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %60, i64 7, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = or i32 %84, %82
  %86 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %60, i64 8
  %87 = add i64 %61, -8
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %58

89:                                               ; preds = %58, %48
  %90 = phi i32 [ undef, %48 ], [ %85, %58 ]
  %91 = phi i32 [ 0, %48 ], [ %85, %58 ]
  %92 = phi %"struct.std::__1::pair"* [ %46, %48 ], [ %86, %58 ]
  %93 = icmp eq i64 %54, 0
  br i1 %93, label %104, label %94

94:                                               ; preds = %89, %94
  %95 = phi i32 [ %100, %94 ], [ %91, %89 ]
  %96 = phi %"struct.std::__1::pair"* [ %101, %94 ], [ %92, %89 ]
  %97 = phi i64 [ %102, %94 ], [ %54, %89 ]
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %96, i64 0, i32 1
  %99 = load i32, i32* %98, align 8
  %100 = or i32 %99, %95
  %101 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %96, i64 1
  %102 = add i64 %97, -1
  %103 = icmp eq i64 %102, 0
  br i1 %103, label %104, label %94, !llvm.loop !3

104:                                              ; preds = %89, %94, %44
  %105 = phi i32 [ 0, %44 ], [ %90, %89 ], [ %100, %94 ]
  %106 = getelementptr inbounds %"class.blink::LiveNodeListRegistry", %"class.blink::LiveNodeListRegistry"* %0, i64 0, i32 1
  store i32 %105, i32* %106, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink20LiveNodeListRegistry13RecomputeMaskEv(%"class.blink::LiveNodeListRegistry"* nocapture) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.blink::LiveNodeListRegistry", %"class.blink::LiveNodeListRegistry"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %3 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::LiveNodeListRegistry", %"class.blink::LiveNodeListRegistry"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %32, label %7

7:                                                ; preds = %1
  %8 = zext i32 %5 to i64
  %9 = shl nuw nsw i64 %8, 4
  %10 = add nsw i64 %9, -16
  %11 = lshr exact i64 %10, 4
  %12 = add nuw nsw i64 %11, 1
  %13 = and i64 %12, 7
  %14 = icmp ult i64 %10, 112
  br i1 %14, label %17, label %15

15:                                               ; preds = %7
  %16 = sub nsw i64 %12, %13
  br label %35

17:                                               ; preds = %35, %7
  %18 = phi i32 [ undef, %7 ], [ %62, %35 ]
  %19 = phi i32 [ 0, %7 ], [ %62, %35 ]
  %20 = phi %"struct.std::__1::pair"* [ %3, %7 ], [ %63, %35 ]
  %21 = icmp eq i64 %13, 0
  br i1 %21, label %32, label %22

22:                                               ; preds = %17, %22
  %23 = phi i32 [ %28, %22 ], [ %19, %17 ]
  %24 = phi %"struct.std::__1::pair"* [ %29, %22 ], [ %20, %17 ]
  %25 = phi i64 [ %30, %22 ], [ %13, %17 ]
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = or i32 %27, %23
  %29 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 1
  %30 = add i64 %25, -1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %32, label %22, !llvm.loop !5

32:                                               ; preds = %17, %22, %1
  %33 = phi i32 [ 0, %1 ], [ %18, %17 ], [ %28, %22 ]
  %34 = getelementptr inbounds %"class.blink::LiveNodeListRegistry", %"class.blink::LiveNodeListRegistry"* %0, i64 0, i32 1
  store i32 %33, i32* %34, align 8
  ret void

35:                                               ; preds = %35, %15
  %36 = phi i32 [ 0, %15 ], [ %62, %35 ]
  %37 = phi %"struct.std::__1::pair"* [ %3, %15 ], [ %63, %35 ]
  %38 = phi i64 [ %16, %15 ], [ %64, %35 ]
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 0, i32 1
  %40 = load i32, i32* %39, align 8
  %41 = or i32 %40, %36
  %42 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 1, i32 1
  %43 = load i32, i32* %42, align 8
  %44 = or i32 %43, %41
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 2, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = or i32 %46, %44
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 3, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = or i32 %49, %47
  %51 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 4, i32 1
  %52 = load i32, i32* %51, align 8
  %53 = or i32 %52, %50
  %54 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 5, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = or i32 %55, %53
  %57 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 6, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = or i32 %58, %56
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 7, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = or i32 %61, %59
  %63 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 8
  %64 = add i64 %38, -8
  %65 = icmp eq i64 %64, 0
  br i1 %65, label %17, label %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink20LiveNodeListRegistry5TraceEPNS_7VisitorE(%"class.blink::LiveNodeListRegistry"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::LiveNodeListRegistry"* %0 to i8*
  %4 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)***
  %5 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)**, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %5, i64 2
  %7 = load void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)*, void (%"class.blink::Visitor"*, void (%"class.blink::LivenessBroker"*, i8*)*, i8*)** %6, align 8
  tail call void %7(%"class.blink::Visitor"* %1, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink26WeakCallbackMethodDelegateINS_20LiveNodeListRegistryEXadL_ZNS1_21ProcessCustomWeaknessERKNS_14LivenessBrokerEEEE10TrampolineES4_PKv, i8* %3) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink20LiveNodeListRegistry21ProcessCustomWeaknessERKNS_14LivenessBrokerE(%"class.blink::LiveNodeListRegistry"*, %"class.blink::LivenessBroker"* nocapture readnone dereferenceable(1)) local_unnamed_addr #0 align 2 {
  %3 = alloca %class.anon, align 1
  %4 = getelementptr inbounds %"class.blink::LiveNodeListRegistry", %"class.blink::LiveNodeListRegistry"* %0, i64 0, i32 0
  %5 = getelementptr inbounds %"class.blink::LiveNodeListRegistry", %"class.blink::LiveNodeListRegistry"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %6 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %7 = getelementptr inbounds %"class.blink::LiveNodeListRegistry", %"class.blink::LiveNodeListRegistry"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %6, i64 %9
  %11 = getelementptr inbounds %class.anon, %class.anon* %3, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %11)
  %12 = icmp eq i32 %8, 0
  br i1 %12, label %23, label %13

13:                                               ; preds = %2
  %14 = getelementptr inbounds %class.anon, %class.anon* %3, i64 0, i32 0
  br label %15

15:                                               ; preds = %20, %13
  %16 = phi %"struct.std::__1::pair"* [ %6, %13 ], [ %21, %20 ]
  %17 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::LiveNodeListBase"*, %"class.blink::LiveNodeListBase"** %17, align 8
  %19 = call zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_16LiveNodeListBaseEEEbPKT_(%"class.blink::LivenessBroker"* nonnull %14, %"class.blink::LiveNodeListBase"* %18) #8
  br i1 %19, label %20, label %23

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %16, i64 1
  %22 = icmp eq %"struct.std::__1::pair"* %21, %10
  br i1 %22, label %50, label %15

23:                                               ; preds = %15, %2
  %24 = phi %"struct.std::__1::pair"* [ %6, %2 ], [ %16, %15 ]
  %25 = icmp eq %"struct.std::__1::pair"* %24, %10
  br i1 %25, label %50, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 1
  %28 = icmp eq %"struct.std::__1::pair"* %27, %10
  br i1 %28, label %50, label %29

29:                                               ; preds = %26
  %30 = getelementptr inbounds %class.anon, %class.anon* %3, i64 0, i32 0
  br label %31

31:                                               ; preds = %46, %29
  %32 = phi %"struct.std::__1::pair"* [ %27, %29 ], [ %48, %46 ]
  %33 = phi %"struct.std::__1::pair"* [ %24, %29 ], [ %32, %46 ]
  %34 = phi %"struct.std::__1::pair"* [ %24, %29 ], [ %47, %46 ]
  %35 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %32, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::LiveNodeListBase"*, %"class.blink::LiveNodeListBase"** %35, align 8
  %37 = call zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_16LiveNodeListBaseEEEbPKT_(%"class.blink::LivenessBroker"* nonnull %30, %"class.blink::LiveNodeListBase"* %36) #8
  br i1 %37, label %38, label %46

38:                                               ; preds = %31
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %33, i64 1, i32 1
  %40 = bitcast %"struct.std::__1::pair"* %32 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"struct.std::__1::pair"* %34 to i64*
  store i64 %41, i64* %42, align 8
  %43 = load i32, i32* %39, align 4
  %44 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %34, i64 1
  br label %46

46:                                               ; preds = %38, %31
  %47 = phi %"struct.std::__1::pair"* [ %34, %31 ], [ %45, %38 ]
  %48 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %32, i64 1
  %49 = icmp eq %"struct.std::__1::pair"* %48, %10
  br i1 %49, label %50, label %31

50:                                               ; preds = %20, %46, %23, %26
  %51 = phi %"struct.std::__1::pair"* [ %10, %23 ], [ %24, %26 ], [ %47, %46 ], [ %10, %20 ]
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %11)
  %52 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %53 = load i32, i32* %7, align 4
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %52, i64 %54
  %56 = icmp eq %"struct.std::__1::pair"* %51, %55
  br i1 %56, label %139, label %57

57:                                               ; preds = %50
  %58 = ptrtoint %"struct.std::__1::pair"* %51 to i64
  %59 = ptrtoint %"struct.std::__1::pair"* %52 to i64
  %60 = sub i64 %58, %59
  %61 = lshr exact i64 %60, 4
  %62 = trunc i64 %61 to i32
  store i32 %62, i32* %7, align 4
  %63 = lshr exact i64 %60, 3
  %64 = trunc i64 %63 to i32
  %65 = getelementptr inbounds %"class.blink::LiveNodeListRegistry", %"class.blink::LiveNodeListRegistry"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = icmp ugt i32 %66, %64
  br i1 %67, label %68, label %76

68:                                               ; preds = %57
  %69 = lshr i64 %60, 6
  %70 = trunc i64 %69 to i32
  %71 = and i32 %70, 1073741823
  %72 = add i32 %62, 1
  %73 = add i32 %72, %71
  call void @_ZN3WTF6VectorINSt3__14pairIN5blink14UntracedMemberIKNS3_16LiveNodeListBaseEEEjEELj0ENS_18PartitionAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector"* %4, i32 %73) #8
  %74 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %5, align 8
  %75 = load i32, i32* %7, align 4
  br label %76

76:                                               ; preds = %57, %68
  %77 = phi i32 [ %62, %57 ], [ %75, %68 ]
  %78 = phi %"struct.std::__1::pair"* [ %52, %57 ], [ %74, %68 ]
  %79 = icmp eq i32 %77, 0
  br i1 %79, label %136, label %80

80:                                               ; preds = %76
  %81 = zext i32 %77 to i64
  %82 = shl nuw nsw i64 %81, 4
  %83 = add nsw i64 %82, -16
  %84 = lshr exact i64 %83, 4
  %85 = add nuw nsw i64 %84, 1
  %86 = and i64 %85, 7
  %87 = icmp ult i64 %83, 112
  br i1 %87, label %121, label %88

88:                                               ; preds = %80
  %89 = sub nsw i64 %85, %86
  br label %90

90:                                               ; preds = %90, %88
  %91 = phi i32 [ 0, %88 ], [ %117, %90 ]
  %92 = phi %"struct.std::__1::pair"* [ %78, %88 ], [ %118, %90 ]
  %93 = phi i64 [ %89, %88 ], [ %119, %90 ]
  %94 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 0, i32 1
  %95 = load i32, i32* %94, align 8
  %96 = or i32 %95, %91
  %97 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 1, i32 1
  %98 = load i32, i32* %97, align 8
  %99 = or i32 %98, %96
  %100 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 2, i32 1
  %101 = load i32, i32* %100, align 8
  %102 = or i32 %101, %99
  %103 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 3, i32 1
  %104 = load i32, i32* %103, align 8
  %105 = or i32 %104, %102
  %106 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 4, i32 1
  %107 = load i32, i32* %106, align 8
  %108 = or i32 %107, %105
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 5, i32 1
  %110 = load i32, i32* %109, align 8
  %111 = or i32 %110, %108
  %112 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 6, i32 1
  %113 = load i32, i32* %112, align 8
  %114 = or i32 %113, %111
  %115 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 7, i32 1
  %116 = load i32, i32* %115, align 8
  %117 = or i32 %116, %114
  %118 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %92, i64 8
  %119 = add i64 %93, -8
  %120 = icmp eq i64 %119, 0
  br i1 %120, label %121, label %90

121:                                              ; preds = %90, %80
  %122 = phi i32 [ undef, %80 ], [ %117, %90 ]
  %123 = phi i32 [ 0, %80 ], [ %117, %90 ]
  %124 = phi %"struct.std::__1::pair"* [ %78, %80 ], [ %118, %90 ]
  %125 = icmp eq i64 %86, 0
  br i1 %125, label %136, label %126

126:                                              ; preds = %121, %126
  %127 = phi i32 [ %132, %126 ], [ %123, %121 ]
  %128 = phi %"struct.std::__1::pair"* [ %133, %126 ], [ %124, %121 ]
  %129 = phi i64 [ %134, %126 ], [ %86, %121 ]
  %130 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %128, i64 0, i32 1
  %131 = load i32, i32* %130, align 8
  %132 = or i32 %131, %127
  %133 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %128, i64 1
  %134 = add i64 %129, -1
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %136, label %126, !llvm.loop !6

136:                                              ; preds = %121, %126, %76
  %137 = phi i32 [ 0, %76 ], [ %122, %121 ], [ %132, %126 ]
  %138 = getelementptr inbounds %"class.blink::LiveNodeListRegistry", %"class.blink::LiveNodeListRegistry"* %0, i64 0, i32 1
  store i32 %137, i32* %138, align 8
  br label %139

139:                                              ; preds = %50, %136
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink14UntracedMemberIKNS3_16LiveNodeListBaseEEEjEELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS8_EEvOT_(%"class.WTF::Vector"*, %"struct.std::__1::pair"* dereferenceable(16)) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %8 = icmp ugt %"struct.std::__1::pair"* %7, %1
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = zext i32 %4 to i64
  %11 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %7, i64 %10
  %12 = icmp ugt %"struct.std::__1::pair"* %11, %1
  br i1 %12, label %54, label %13

13:                                               ; preds = %9, %2
  %14 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %5
  %22 = select i1 %21, i32 %20, i32 %5
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %99, !prof !7

24:                                               ; preds = %13
  %25 = icmp eq %"struct.std::__1::pair"* %7, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink14UntracedMemberIKNS4_16LiveNodeListBaseEEEjEEEEmm(i64 %26) #8
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([130 x i8], [130 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink14UntracedMemberIKNS3_16LiveNodeListBaseEEEjEEEEPKcv, i64 0, i64 0)) #8
  br i1 %25, label %29, label %35

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 4
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  %34 = bitcast i8* %28 to %"struct.std::__1::pair"*
  br label %99

35:                                               ; preds = %24
  %36 = lshr i64 %27, 4
  %37 = ptrtoint i8* %28 to i64
  %38 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %39 = icmp ne i8* %28, null
  %40 = icmp ne %"struct.std::__1::pair"* %38, null
  %41 = and i1 %39, %40
  %42 = bitcast %"struct.std::__1::pair"* %38 to i8*
  br i1 %41, label %43, label %49, !prof !7

43:                                               ; preds = %35
  %44 = load i32, i32* %3, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %28, i8* nonnull align 8 %42, i64 %46, i1 false) #8
  %47 = bitcast %"class.WTF::Vector"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %43, %35
  %50 = phi i8* [ %48, %43 ], [ %42, %35 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #8
  %51 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %37, i64* %51 monotonic, align 8
  %52 = trunc i64 %36 to i32
  store i32 %52, i32* %14, align 8
  %53 = bitcast i8* %28 to %"struct.std::__1::pair"*
  br label %99

54:                                               ; preds = %9
  %55 = ptrtoint %"struct.std::__1::pair"* %1 to i64
  %56 = ptrtoint %"struct.std::__1::pair"* %7 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 4
  %59 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i32, i32* %59, align 8
  %61 = lshr i32 %60, 2
  %62 = add i32 %60, 1
  %63 = add i32 %62, %61
  %64 = icmp ugt i32 %63, 4
  %65 = select i1 %64, i32 %63, i32 4
  %66 = icmp ugt i32 %65, %5
  %67 = select i1 %66, i32 %65, i32 %5
  %68 = icmp ult i32 %60, %67
  br i1 %68, label %69, label %96, !prof !7

69:                                               ; preds = %54
  %70 = icmp eq %"struct.std::__1::pair"* %7, null
  %71 = zext i32 %67 to i64
  %72 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink14UntracedMemberIKNS4_16LiveNodeListBaseEEEjEEEEmm(i64 %71) #8
  %73 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %72, i8* getelementptr inbounds ([130 x i8], [130 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink14UntracedMemberIKNS3_16LiveNodeListBaseEEEjEEEEPKcv, i64 0, i64 0)) #8
  %74 = ptrtoint i8* %73 to i64
  br i1 %70, label %75, label %77

75:                                               ; preds = %69
  %76 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %76 monotonic, align 8
  br label %92

77:                                               ; preds = %69
  %78 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %6, align 8
  %79 = icmp ne i8* %73, null
  %80 = icmp ne %"struct.std::__1::pair"* %78, null
  %81 = and i1 %79, %80
  %82 = bitcast %"struct.std::__1::pair"* %78 to i8*
  br i1 %81, label %83, label %89, !prof !7

83:                                               ; preds = %77
  %84 = load i32, i32* %3, align 4
  %85 = zext i32 %84 to i64
  %86 = shl nuw nsw i64 %85, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %73, i8* nonnull align 8 %82, i64 %86, i1 false) #8
  %87 = bitcast %"class.WTF::Vector"* %0 to i8**
  %88 = load i8*, i8** %87, align 8
  br label %89

89:                                               ; preds = %83, %77
  %90 = phi i8* [ %88, %83 ], [ %82, %77 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %90) #8
  %91 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %74, i64* %91 monotonic, align 8
  br label %92

92:                                               ; preds = %89, %75
  %93 = lshr i64 %72, 4
  %94 = trunc i64 %93 to i32
  store i32 %94, i32* %59, align 8
  %95 = bitcast i8* %73 to %"struct.std::__1::pair"*
  br label %96

96:                                               ; preds = %92, %54
  %97 = phi %"struct.std::__1::pair"* [ %7, %54 ], [ %95, %92 ]
  %98 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %97, i64 %58
  br label %99

99:                                               ; preds = %49, %29, %13, %96
  %100 = phi %"struct.std::__1::pair"* [ %97, %96 ], [ %7, %13 ], [ %34, %29 ], [ %53, %49 ]
  %101 = phi %"struct.std::__1::pair"* [ %98, %96 ], [ %1, %13 ], [ %1, %29 ], [ %1, %49 ]
  %102 = load i32, i32* %3, align 4
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %100, i64 %103
  %105 = bitcast %"struct.std::__1::pair"* %101 to i64*
  %106 = load i64, i64* %105, align 8
  %107 = bitcast %"struct.std::__1::pair"* %104 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %100, i64 %103, i32 1
  %109 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %101, i64 0, i32 1
  %110 = load i32, i32* %109, align 8
  store i32 %110, i32* %108, align 8
  %111 = load i32, i32* %3, align 4
  %112 = add i32 %111, 1
  store i32 %112, i32* %3, align 4
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink14UntracedMemberIKNS4_16LiveNodeListBaseEEEjEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #8
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #8
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.2, i64 0, i64 0), i8* %11, i8* %12) #8
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.3, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #8
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #8
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #8
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #8
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #4

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #4

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #4

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #4

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #4

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink14UntracedMemberIKNS3_16LiveNodeListBaseEEEjEELj0ENS_18PartitionAllocatorEE7EraseAtEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #6 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #8
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #8
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.4, i64 0, i64 0), i8* %14, i8* %15) #8
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #8
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str, i64 0, i64 0), i32 2050, %"class.logging::CheckOpResult"* nonnull %4) #8
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #8
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #8
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #8
  %23 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 %25
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %26, i64 1
  %28 = icmp ne %"struct.std::__1::pair"* %26, null
  %29 = icmp ne %"struct.std::__1::pair"* %27, null
  %30 = and i1 %28, %29
  br i1 %30, label %31, label %40, !prof !7

31:                                               ; preds = %22
  %32 = load i32, i32* %8, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 %33
  %35 = bitcast %"struct.std::__1::pair"* %26 to i8*
  %36 = bitcast %"struct.std::__1::pair"* %27 to i8*
  %37 = ptrtoint %"struct.std::__1::pair"* %34 to i64
  %38 = ptrtoint %"struct.std::__1::pair"* %27 to i64
  %39 = sub i64 %37, %38
  call void @llvm.memmove.p0i8.p0i8.i64(i8* nonnull align 8 %35, i8* nonnull align 8 %36, i64 %39, i1 false) #8
  br label %40

40:                                               ; preds = %22, %31
  %41 = load i32, i32* %8, align 4
  %42 = add i32 %41, -1
  store i32 %42, i32* %8, align 4
  ret void
}

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorINSt3__14pairIN5blink14UntracedMemberIKNS3_16LiveNodeListBaseEEEjEELj0ENS_18PartitionAllocatorEE14ShrinkCapacityEj(%"class.WTF::Vector"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = icmp ugt i32 %4, %1
  br i1 %5, label %6, label %48

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = icmp ugt i32 %8, %1
  br i1 %9, label %10, label %11

10:                                               ; preds = %6
  store i32 %1, i32* %7, align 4
  br label %11

11:                                               ; preds = %10, %6
  %12 = getelementptr inbounds %"class.WTF::Vector", %"class.WTF::Vector"* %0, i64 0, i32 0, i32 0, i32 0
  %13 = icmp eq i32 %1, 0
  br i1 %13, label %44, label %14

14:                                               ; preds = %11
  %15 = zext i32 %1 to i64
  %16 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink14UntracedMemberIKNS4_16LiveNodeListBaseEEEjEEEEmm(i64 %15) #8
  %17 = load i32, i32* %3, align 8
  %18 = zext i32 %17 to i64
  %19 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink14UntracedMemberIKNS4_16LiveNodeListBaseEEEjEEEEmm(i64 %18) #8
  %20 = icmp eq i64 %19, %16
  br i1 %20, label %21, label %24

21:                                               ; preds = %14
  %22 = lshr i64 %16, 4
  %23 = trunc i64 %22 to i32
  store i32 %23, i32* %3, align 8
  br label %48

24:                                               ; preds = %14
  %25 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIN5blink14UntracedMemberIKNS4_16LiveNodeListBaseEEEjEEEEmm(i64 %15) #8
  %26 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %25, i8* getelementptr inbounds ([130 x i8], [130 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIN5blink14UntracedMemberIKNS3_16LiveNodeListBaseEEEjEEEEPKcv, i64 0, i64 0)) #8
  %27 = lshr i64 %25, 4
  %28 = ptrtoint i8* %26 to i64
  %29 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %12, align 8
  %30 = icmp ne i8* %26, null
  %31 = icmp ne %"struct.std::__1::pair"* %29, null
  %32 = and i1 %30, %31
  %33 = bitcast %"struct.std::__1::pair"* %29 to i8*
  br i1 %32, label %34, label %40, !prof !7

34:                                               ; preds = %24
  %35 = load i32, i32* %7, align 4
  %36 = zext i32 %35 to i64
  %37 = shl nuw nsw i64 %36, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %26, i8* nonnull align 8 %33, i64 %37, i1 false) #8
  %38 = bitcast %"class.WTF::Vector"* %0 to i8**
  %39 = load i8*, i8** %38, align 8
  br label %40

40:                                               ; preds = %24, %34
  %41 = phi i8* [ %39, %34 ], [ %33, %24 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %41) #8
  %42 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 %28, i64* %42 monotonic, align 8
  %43 = trunc i64 %27 to i32
  store i32 %43, i32* %3, align 8
  br label %48

44:                                               ; preds = %11
  %45 = bitcast %"class.WTF::Vector"* %0 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = bitcast %"class.WTF::Vector"* %0 to i64*
  store atomic i64 0, i64* %47 monotonic, align 8
  store i32 0, i32* %3, align 8
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %46) #8
  br label %48

48:                                               ; preds = %21, %40, %44, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink26WeakCallbackMethodDelegateINS_20LiveNodeListRegistryEXadL_ZNS1_21ProcessCustomWeaknessERKNS_14LivenessBrokerEEEE10TrampolineES4_PKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::LiveNodeListRegistry"*
  tail call void @_ZN5blink20LiveNodeListRegistry21ProcessCustomWeaknessERKNS_14LivenessBrokerE(%"class.blink::LiveNodeListRegistry"* %3, %"class.blink::LivenessBroker"* dereferenceable(1) undef)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_16LiveNodeListBaseEEEbPKT_(%"class.blink::LivenessBroker"*, %"class.blink::LiveNodeListBase"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::LiveNodeListBase"* %1, null
  br i1 %3, label %73, label %4

4:                                                ; preds = %2
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #8
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #8
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #8
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = icmp eq %"class.blink::ThreadState"* %14, null
  br i1 %15, label %73, label %16

16:                                               ; preds = %11
  %17 = ptrtoint %"class.blink::LiveNodeListBase"* %1 to i64
  %18 = and i64 %17, -131072
  %19 = inttoptr i64 %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 4138
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %16
  %24 = getelementptr inbounds i8, i8* %19, i64 4160
  br label %63

25:                                               ; preds = %16
  %26 = getelementptr inbounds i8, i8* %19, i64 4096
  %27 = bitcast i8* %26 to %"class.blink::NormalPage"*
  %28 = getelementptr inbounds i8, i8* %19, i64 4400
  %29 = bitcast i8* %28 to i8**
  %30 = bitcast i8* %28 to i64*
  %31 = load i64, i64* %30, align 16
  %32 = sub i64 %17, %31
  %33 = lshr i64 %32, 3
  %34 = lshr i64 %32, 6
  %35 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %34
  %36 = load atomic i8, i8* %35 acquire, align 1
  %37 = trunc i64 %33 to i32
  %38 = and i32 %37, 7
  %39 = shl i32 2, %38
  %40 = trunc i32 %39 to i8
  %41 = add i8 %40, -1
  %42 = and i8 %41, %36
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %25, %44
  %45 = phi i64 [ %46, %44 ], [ %34, %25 ]
  %46 = add i64 %45, -1
  %47 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %46
  %48 = load atomic i8, i8* %47 acquire, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %44, label %50

50:                                               ; preds = %44, %25
  %51 = phi i64 [ %34, %25 ], [ %46, %44 ]
  %52 = phi i8 [ %42, %25 ], [ %48, %44 ]
  %53 = zext i8 %52 to i32
  %54 = tail call i32 @llvm.ctlz.i32(i32 %53, i1 true) #8, !range !8
  %55 = add nsw i32 %54, -24
  %56 = shl i64 %51, 3
  %57 = or i64 %56, 7
  %58 = sext i32 %55 to i64
  %59 = sub i64 %57, %58
  %60 = shl i64 %59, 3
  %61 = load i8*, i8** %29, align 16
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  br label %63

63:                                               ; preds = %23, %50
  %64 = phi i8* [ %24, %23 ], [ %62, %50 ]
  %65 = getelementptr inbounds i8, i8* %64, i64 4
  %66 = bitcast i8* %65 to i16*
  %67 = load atomic i16, i16* %66 acquire, align 2
  %68 = getelementptr inbounds i8, i8* %64, i64 6
  %69 = bitcast i8* %68 to i16*
  %70 = load i16, i16* %69, align 2
  %71 = and i16 %70, 1
  %72 = icmp ne i16 %71, 0
  br label %73

73:                                               ; preds = %11, %2, %63
  %74 = phi i1 [ %72, %63 ], [ true, %2 ], [ true, %11 ]
  ret i1 %74
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #4

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #4

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #4

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #7

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = distinct !{!3, !4}
!4 = !{!"llvm.loop.unroll.disable"}
!5 = distinct !{!5, !4}
!6 = distinct !{!6, !4}
!7 = !{!"branch_weights", i32 2000, i32 1}
!8 = !{i32 24, i32 33}
