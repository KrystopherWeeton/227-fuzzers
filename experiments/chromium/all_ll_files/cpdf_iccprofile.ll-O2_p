; ModuleID = '../../third_party/pdfium/core/fpdfapi/page/cpdf_iccprofile.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/page/cpdf_iccprofile.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_IccProfile = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", i8, i32, %"class.fxcrt::RetainPtr", %"class.std::__1::unique_ptr.23" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %class.CPDF_Stream* }
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.fxcodec::CLcmsCmm"* }
%"class.fxcodec::CLcmsCmm" = type <{ i8*, i32, i8, i8, [2 x i8] }>
%class.CPDF_Stream = type { %class.CPDF_Object, i8, i32, %"class.fxcrt::RetainPtr.6", %"class.std::__1::unique_ptr.11", %"class.fxcrt::RetainPtr.15" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.fxcrt::RetainPtr.6" = type { %"class.std::__1::unique_ptr.7" }
%"class.std::__1::unique_ptr.7" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type opaque
%"class.std::__1::unique_ptr.11" = type { %"class.std::__1::__compressed_pair.12" }
%"class.std::__1::__compressed_pair.12" = type { %"struct.std::__1::__compressed_pair_elem.13" }
%"struct.std::__1::__compressed_pair_elem.13" = type { i8* }
%"class.fxcrt::RetainPtr.15" = type { %"class.std::__1::unique_ptr.16" }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type { %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%class.IFX_StreamWithSize = type { i32 (...)** }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr", i64 }
%"class.fxcrt::UnownedPtr" = type { i8* }

$_ZN5fxcrt10RetainableD2Ev = comdat any

$_ZN5fxcrt10RetainableD0Ev = comdat any

$_ZTVN5fxcrt10RetainableE = comdat any

@_ZTV15CPDF_IccProfile = hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_IccProfile*)* @_ZN15CPDF_IccProfileD2Ev to i8*), i8* bitcast (void (%class.CPDF_IccProfile*)* @_ZN15CPDF_IccProfileD0Ev to i8*)] }, align 8
@_ZTVN5fxcrt10RetainableE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.fxcrt::Retainable"*)* @_ZN5fxcrt10RetainableD2Ev to i8*), i8* bitcast (void (%"class.fxcrt::Retainable"*)* @_ZN5fxcrt10RetainableD0Ev to i8*)] }, comdat, align 8
@_ZZN12_GLOBAL__N_110DetectSRGBEN6pdfium4spanIKhEEE5kSRGB = internal constant [18 x i8] c"sRGB IEC61966-2.1\00", align 16

@_ZN15CPDF_IccProfileC1EPK11CPDF_StreamN6pdfium4spanIKhEE = hidden unnamed_addr alias void (%class.CPDF_IccProfile*, %class.CPDF_Stream*, %"class.pdfium::span"*), void (%class.CPDF_IccProfile*, %class.CPDF_Stream*, %"class.pdfium::span"*)* @_ZN15CPDF_IccProfileC2EPK11CPDF_StreamN6pdfium4spanIKhEE
@_ZN15CPDF_IccProfileD1Ev = hidden unnamed_addr alias void (%class.CPDF_IccProfile*), void (%class.CPDF_IccProfile*)* @_ZN15CPDF_IccProfileD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_IccProfileC2EPK11CPDF_StreamN6pdfium4spanIKhEE(%class.CPDF_IccProfile*, %class.CPDF_Stream*, %"class.pdfium::span"* nocapture readonly) unnamed_addr #0 align 2 {
  %4 = alloca %"class.pdfium::span", align 8
  %5 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5fxcrt10RetainableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %0, i64 0, i32 0, i32 1
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10ObservableC2Ev(%"class.fxcrt::Observable"* %7) #6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV15CPDF_IccProfile, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %0, i64 0, i32 2
  %9 = bitcast %"class.pdfium::span"* %2 to i8*
  %10 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %2, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 3144
  br i1 %12, label %13, label %20

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.pdfium::span", %"class.pdfium::span"* %2, i64 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  %16 = getelementptr inbounds i8, i8* %15, i64 400
  %17 = tail call i32 @bcmp(i8* %16, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @_ZZN12_GLOBAL__N_110DetectSRGBEN6pdfium4spanIKhEEE5kSRGB, i64 0, i64 0), i64 17) #6
  %18 = icmp eq i32 %17, 0
  %19 = zext i1 %18 to i8
  br label %20

20:                                               ; preds = %3, %13
  %21 = phi i8 [ 0, %3 ], [ %19, %13 ]
  store i8 %21, i8* %8, align 8
  %22 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %0, i64 0, i32 3
  store i32 0, i32* %22, align 4
  %23 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %0, i64 0, i32 4
  %24 = ptrtoint %class.CPDF_Stream* %1 to i64
  %25 = bitcast %"class.fxcrt::RetainPtr"* %23 to i64*
  store i64 %24, i64* %25, align 8
  %26 = icmp eq %class.CPDF_Stream* %1, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %20
  %28 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %1, i64 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = add nsw i64 %29, 1
  store i64 %30, i64* %28, align 8
  %31 = load i8, i8* %8, align 8, !range !2
  br label %32

32:                                               ; preds = %20, %27
  %33 = phi i8 [ %21, %20 ], [ %31, %27 ]
  %34 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %0, i64 0, i32 5
  %35 = bitcast %"class.std::__1::unique_ptr.23"* %34 to i64*
  store i64 0, i64* %35, align 8
  %36 = icmp eq i8 %33, 0
  br i1 %36, label %37, label %53

37:                                               ; preds = %32
  %38 = bitcast %"class.pdfium::span"* %4 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %38, i8* align 8 %9, i64 16, i1 false)
  %39 = call %"class.fxcodec::CLcmsCmm"* @_ZN7fxcodec9IccModule19CreateTransformSRGBEN6pdfium4spanIKhEE(%"class.pdfium::span"* nonnull %4) #6
  %40 = ptrtoint %"class.fxcodec::CLcmsCmm"* %39 to i64
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.23", %"class.std::__1::unique_ptr.23"* %34, i64 0, i32 0, i32 0, i32 0
  %42 = load %"class.fxcodec::CLcmsCmm"*, %"class.fxcodec::CLcmsCmm"** %41, align 8
  store i64 %40, i64* %35, align 8
  %43 = icmp eq %"class.fxcodec::CLcmsCmm"* %42, null
  br i1 %43, label %47, label %44

44:                                               ; preds = %37
  call void @_ZN7fxcodec8CLcmsCmmD1Ev(%"class.fxcodec::CLcmsCmm"* nonnull %42) #6
  %45 = bitcast %"class.fxcodec::CLcmsCmm"* %42 to i8*
  call void @_ZdlPv(i8* %45) #7
  %46 = load %"class.fxcodec::CLcmsCmm"*, %"class.fxcodec::CLcmsCmm"** %41, align 8
  br label %47

47:                                               ; preds = %44, %37
  %48 = phi %"class.fxcodec::CLcmsCmm"* [ %46, %44 ], [ %39, %37 ]
  %49 = icmp eq %"class.fxcodec::CLcmsCmm"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds %"class.fxcodec::CLcmsCmm", %"class.fxcodec::CLcmsCmm"* %48, i64 0, i32 1
  %52 = load i32, i32* %51, align 8
  br label %53

53:                                               ; preds = %32, %50
  %54 = phi i32 [ %52, %50 ], [ 3, %32 ]
  store i32 %54, i32* %22, align 4
  br label %55

55:                                               ; preds = %53, %47
  ret void
}

declare void @_ZN5fxcrt10ObservableC2Ev(%"class.fxcrt::Observable"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare %"class.fxcodec::CLcmsCmm"* @_ZN7fxcodec9IccModule19CreateTransformSRGBEN6pdfium4spanIKhEE(%"class.pdfium::span"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_IccProfileD2Ev(%class.CPDF_IccProfile*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV15CPDF_IccProfile, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.fxcodec::CLcmsCmm"*, %"class.fxcodec::CLcmsCmm"** %3, align 8
  store %"class.fxcodec::CLcmsCmm"* null, %"class.fxcodec::CLcmsCmm"** %3, align 8
  %5 = icmp eq %"class.fxcodec::CLcmsCmm"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN7fxcodec8CLcmsCmmD1Ev(%"class.fxcodec::CLcmsCmm"* nonnull %4) #6
  %7 = bitcast %"class.fxcodec::CLcmsCmm"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #7
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %10 = load %class.CPDF_Stream*, %class.CPDF_Stream** %9, align 8
  store %class.CPDF_Stream* null, %class.CPDF_Stream** %9, align 8
  %11 = icmp eq %class.CPDF_Stream* %10, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %10, i64 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = add nsw i64 %14, -1
  store i64 %15, i64* %13, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %10, i64 0, i32 0, i32 0
  %19 = bitcast %class.CPDF_Stream* %10 to void (%"class.fxcrt::Retainable"*)***
  %20 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %20, i64 1
  %22 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %21, align 8
  tail call void %22(%"class.fxcrt::Retainable"* nonnull %18) #6
  br label %23

23:                                               ; preds = %8, %12, %17
  %24 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %24) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_IccProfileD0Ev(%class.CPDF_IccProfile*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTV15CPDF_IccProfile, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.fxcodec::CLcmsCmm"*, %"class.fxcodec::CLcmsCmm"** %3, align 8
  store %"class.fxcodec::CLcmsCmm"* null, %"class.fxcodec::CLcmsCmm"** %3, align 8
  %5 = icmp eq %"class.fxcodec::CLcmsCmm"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  tail call void @_ZN7fxcodec8CLcmsCmmD1Ev(%"class.fxcodec::CLcmsCmm"* nonnull %4) #6
  %7 = bitcast %"class.fxcodec::CLcmsCmm"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #7
  br label %8

8:                                                ; preds = %6, %1
  %9 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %10 = load %class.CPDF_Stream*, %class.CPDF_Stream** %9, align 8
  store %class.CPDF_Stream* null, %class.CPDF_Stream** %9, align 8
  %11 = icmp eq %class.CPDF_Stream* %10, null
  br i1 %11, label %23, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %10, i64 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = add nsw i64 %14, -1
  store i64 %15, i64* %13, align 8
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %17, label %23

17:                                               ; preds = %12
  %18 = getelementptr inbounds %class.CPDF_Stream, %class.CPDF_Stream* %10, i64 0, i32 0, i32 0
  %19 = bitcast %class.CPDF_Stream* %10 to void (%"class.fxcrt::Retainable"*)***
  %20 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %20, i64 1
  %22 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %21, align 8
  tail call void %22(%"class.fxcrt::Retainable"* nonnull %18) #6
  br label %23

23:                                               ; preds = %8, %12, %17
  %24 = getelementptr inbounds %class.CPDF_IccProfile, %class.CPDF_IccProfile* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %24) #6
  %25 = bitcast %class.CPDF_IccProfile* %0 to i8*
  tail call void @_ZdlPv(i8* %25) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt10RetainableD2Ev(%"class.fxcrt::Retainable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt10RetainableD0Ev(%"class.fxcrt::Retainable"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.fxcrt::Retainable"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN7fxcodec8CLcmsCmmD1Ev(%"class.fxcodec::CLcmsCmm"*) unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
