; ModuleID = '../../components/policy/core/common/policy_merger.cc'
source_filename = "../../components/policy/core/common/policy_merger.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::array" = type { [6 x i8*] }
%"struct.policy::AtomicGroup" = type { i16, i8*, i8** }
%"struct.std::nothrow_t" = type { i8 }
%"class.policy::PolicyMerger" = type { i32 (...)** }
%"class.policy::PolicyListMerger" = type { %"class.policy::PolicyMerger", i8, %"class.base::internal::flat_tree.53" }
%"class.base::internal::flat_tree.53" = type { %"class.std::__1::vector.54" }
%"class.std::__1::vector.54" = type { %"class.std::__1::__vector_base.55" }
%"class.std::__1::__vector_base.55" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"class.std::__1::basic_string"* }
%"class.policy::PolicyGroupMerger" = type { %"class.policy::PolicyMerger" }
%"class.policy::PolicyDictionaryMerger" = type { %"class.policy::PolicyMerger", i8, %"class.base::internal::flat_tree.53", %"class.base::internal::flat_tree.53" }
%"class.policy::PolicyMap::Entry" = type { i32, i32, i32, %"class.std::__1::unique_ptr", %"class.std::__1::vector", %"class.absl::optional", i8, i8, %"class.std::__1::map" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.policy::ExternalDataFetcher"* }
%"class.policy::ExternalDataFetcher" = type { %"class.base::WeakPtr", %"class.std::__1::basic_string" }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.policy::PolicyMap::EntryConflict"*, %"class.policy::PolicyMap::EntryConflict"*, %"class.std::__1::__compressed_pair.10" }
%"class.policy::PolicyMap::EntryConflict" = type { i32, %"class.policy::PolicyMap::Entry" }
%"class.std::__1::__compressed_pair.10" = type { %"struct.std::__1::__compressed_pair_elem.11" }
%"struct.std::__1::__compressed_pair_elem.11" = type { %"class.policy::PolicyMap::EntryConflict"* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.15 }
%union.anon.15 = type { %"class.base::Value" }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.16" }
%"union.absl::variant_internal::DestructibleUnionImpl.16" = type { %"union.absl::variant_internal::DestructibleUnionImpl.17" }
%"union.absl::variant_internal::DestructibleUnionImpl.17" = type { %"union.absl::variant_internal::DestructibleUnionImpl.18" }
%"union.absl::variant_internal::DestructibleUnionImpl.18" = type { %"union.absl::variant_internal::DestructibleUnionImpl.19" }
%"union.absl::variant_internal::DestructibleUnionImpl.19" = type { %"class.std::__1::basic_string" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.45", %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.std::__1::map.61" = type { %"class.std::__1::__tree.62" }
%"class.std::__1::__tree.62" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.63", %"class.std::__1::__compressed_pair.67" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.67" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.std::__1::vector.73" = type { %"class.std::__1::__vector_base.74" }
%"class.std::__1::__vector_base.74" = type { %"class.base::Value"**, %"class.base::Value"**, %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.base::Value"** }
%"class.std::__1::set" = type { %"class.std::__1::__tree.80" }
%"class.std::__1::__tree.80" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.81", %"class.std::__1::__compressed_pair.85" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"class.std::__1::__compressed_pair.85" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"class.base::CheckedContiguousIterator" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"* }
%"class.base::CheckedContiguousIterator.90" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"* }
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"class.base::Value"*, %"class.base::Value"*, %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.base::Value"* }
%"class.std::__1::__tree_node.114" = type { %"class.std::__1::__tree_node_base.base", %"class.base::Value"* }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type opaque
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"struct.std::__1::less.92" = type { i8 }
%"class.std::__1::__basic_string_common" = type { i8 }
%"class.std::__1::vector.93" = type { %"class.std::__1::__vector_base.94" }
%"class.std::__1::__vector_base.94" = type { %"class.policy::PolicyMap::Entry"**, %"class.policy::PolicyMap::Entry"**, %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.96" }
%"struct.std::__1::__compressed_pair_elem.96" = type { %"class.policy::PolicyMap::Entry"** }
%"class.base::DictionaryValue" = type { %"class.base::Value" }
%"class.base::detail::const_dict_iterator_proxy" = type { %"class.base::flat_map"* }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.29" }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.31" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %"struct.std::__1::pair"* }
%"class.base::detail::const_dict_iterator" = type { %"class.std::__1::__wrap_iter.103" }
%"class.std::__1::__wrap_iter.103" = type { %"struct.std::__1::pair"* }
%"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare" = type { i8 }
%"class.std::__1::reverse_iterator.133" = type { %"class.std::__1::__wrap_iter.125", %"class.std::__1::__wrap_iter.125" }
%"class.std::__1::__wrap_iter.125" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.72" }
%"struct.std::__1::pair.72" = type { %"class.std::__1::basic_string", %"class.policy::PolicyMap::Entry" }

$_ZNK4base25CheckedContiguousIteratorINS_5ValueEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorINS_5ValueEEppEv = comdat any

$_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv = comdat any

$_ZN4base8internal9flat_treeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEEC2IPKPKcEET_SL_RKSB_ = comdat any

$_ZN4base25CheckedContiguousIteratorINS_5ValueEEC2EPKS1_PS1_S4_ = comdat any

$_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_ = comdat any

$_ZZN7logging15CheckOpValueStrIPN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_ = comdat any

$_ZNK4base25CheckedContiguousIteratorINS_5ValueEE15CheckComparableERKS2_ = comdat any

$_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_ = comdat any

$_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_ = comdat any

$_ZNK4base8internal9flat_treeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE11equal_rangeIS8_EENS2_4pairINS2_11__wrap_iterIPKS8_EESL_EERKT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZN4base8internal9flat_treeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE15sort_and_uniqueENS2_11__wrap_iterIPS8_EESI_ = comdat any

$_ZNSt3__16uniqueINS_11__wrap_iterIPNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEN4base8internal9NotFnImplINSB_9flat_treeIS7_NSA_8identityENS_4lessIvEENS_6vectorIS7_NS5_IS7_EEEEE13value_compareEEEEET_SN_SN_T0_ = comdat any

$_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl = comdat any

$_ZNSt3__116__insertion_sortIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_ = comdat any

$_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeE = comdat any

$_ZNSt3__119__merge_move_assignIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareEPS9_SJ_NS_11__wrap_iterISJ_EEEEvT0_SM_T1_SN_T2_T_ = comdat any

$_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeEl = comdat any

$_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_PNS_15iterator_traitsISM_E10value_typeET_ = comdat any

$_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeE = comdat any

$_ZNSt3__120__half_inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareEPS9_NS_11__wrap_iterISJ_EESL_EEvT0_SM_T1_SN_T2_T_ = comdat any

$_ZNSt3__120__half_inplace_mergeINS_8__invertIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_8identityENS_4lessIvEENS_6vectorISA_NS8_ISA_EEEEE13value_compareEEENS_16reverse_iteratorIPSA_EENSL_INS_11__wrap_iterISM_EEEESQ_EEvT0_SR_T1_SS_T2_T_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy9PolicyMap5EntryEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEElEERKT_ = comdat any

@_ZTVN6policy12PolicyMergerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.policy::PolicyMerger"*)* @_ZN6policy12PolicyMergerD2Ev to i8*), i8* bitcast (void (%"class.policy::PolicyMerger"*)* @_ZN6policy12PolicyMergerD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@_ZTVN6policy16PolicyListMergerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.policy::PolicyListMerger"*)* @_ZN6policy16PolicyListMergerD2Ev to i8*), i8* bitcast (void (%"class.policy::PolicyListMerger"*)* @_ZN6policy16PolicyListMergerD0Ev to i8*), i8* bitcast (void (%"class.policy::PolicyListMerger"*, %"class.std::__1::map.61"*)* @_ZNK6policy16PolicyListMerger5MergeEPNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9PolicyMap5EntryENS1_4lessIS8_EENS6_INS1_4pairIKS8_SA_EEEEEE to i8*)] }, align 8
@_ZTVN6policy17PolicyGroupMergerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.policy::PolicyMerger"*)* @_ZN6policy12PolicyMergerD2Ev to i8*), i8* bitcast (void (%"class.policy::PolicyGroupMerger"*)* @_ZN6policy17PolicyGroupMergerD0Ev to i8*), i8* bitcast (void (%"class.policy::PolicyGroupMerger"*, %"class.std::__1::map.61"*)* @_ZNK6policy17PolicyGroupMerger5MergeEPNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9PolicyMap5EntryENS1_4lessIS8_EENS6_INS1_4pairIKS8_SA_EEEEEE to i8*)] }, align 8
@.str = private unnamed_addr constant [2 x i8] c"*\00", align 1
@_ZTVN6policy22PolicyDictionaryMergerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.policy::PolicyDictionaryMerger"*)* @_ZN6policy22PolicyDictionaryMergerD2Ev to i8*), i8* bitcast (void (%"class.policy::PolicyDictionaryMerger"*)* @_ZN6policy22PolicyDictionaryMergerD0Ev to i8*), i8* bitcast (void (%"class.policy::PolicyDictionaryMerger"*, %"class.std::__1::map.61"*)* @_ZNK6policy22PolicyDictionaryMerger5MergeEPNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9PolicyMap5EntryENS1_4lessIS8_EENS6_INS1_4pairIKS8_SA_EEEEEE to i8*)] }, align 8
@_ZN6policy12_GLOBAL__N_126kDictionaryPoliciesToMergeE = internal constant %"struct.std::__1::array" { [6 x i8*] [i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6policy3key18kExtensionSettingsE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6policy3key33kDeviceLoginScreenPowerManagementE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6policy3key15kKeyPermissionsE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6policy3key28kPowerManagementIdleSettingsE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6policy3key24kScreenBrightnessPercentE, i32 0, i32 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN6policy3key17kScreenLockDelaysE, i32 0, i32 0)] }, align 8
@_ZN6policy32kPolicyAtomicGroupMappingsLengthE = external local_unnamed_addr constant i64, align 8
@_ZN6policy26kPolicyAtomicGroupMappingsE = external local_unnamed_addr global [0 x %"struct.policy::AtomicGroup"], align 8
@.str.1 = private unnamed_addr constant [17 x i8] c"start <= current\00", align 1
@.str.2 = private unnamed_addr constant [42 x i8] c"../../base/containers/checked_iterators.h\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"current <= end\00", align 1
@.str.4 = private unnamed_addr constant [23 x i8] c"start_ == other.start_\00", align 1
@.str.5 = private unnamed_addr constant [19 x i8] c"end_ == other.end_\00", align 1
@.str.6 = private unnamed_addr constant [17 x i8] c"current_ != end_\00", align 1
@_ZN6policy3key18kExtensionSettingsE = external constant [0 x i8], align 1
@_ZN6policy3key33kDeviceLoginScreenPowerManagementE = external constant [0 x i8], align 1
@_ZN6policy3key15kKeyPermissionsE = external constant [0 x i8], align 1
@_ZN6policy3key28kPowerManagementIdleSettingsE = external constant [0 x i8], align 1
@_ZN6policy3key24kScreenBrightnessPercentE = external constant [0 x i8], align 1
@_ZN6policy3key17kScreenLockDelaysE = external constant [0 x i8], align 1
@_ZSt7nothrow = external global %"struct.std::nothrow_t", align 1

@_ZN6policy12PolicyMergerD1Ev = hidden unnamed_addr alias void (%"class.policy::PolicyMerger"*), void (%"class.policy::PolicyMerger"*)* @_ZN6policy12PolicyMergerD2Ev
@_ZN6policy16PolicyListMergerC1EN4base8internal9flat_treeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS1_8identityENS4_4lessIvEENS4_6vectorISA_NS8_ISA_EEEEEE = hidden unnamed_addr alias void (%"class.policy::PolicyListMerger"*, %"class.base::internal::flat_tree.53"*), void (%"class.policy::PolicyListMerger"*, %"class.base::internal::flat_tree.53"*)* @_ZN6policy16PolicyListMergerC2EN4base8internal9flat_treeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS1_8identityENS4_4lessIvEENS4_6vectorISA_NS8_ISA_EEEEEE
@_ZN6policy16PolicyListMergerD1Ev = hidden unnamed_addr alias void (%"class.policy::PolicyListMerger"*), void (%"class.policy::PolicyListMerger"*)* @_ZN6policy16PolicyListMergerD2Ev
@_ZN6policy17PolicyGroupMergerC1Ev = hidden unnamed_addr alias void (%"class.policy::PolicyGroupMerger"*), void (%"class.policy::PolicyGroupMerger"*)* @_ZN6policy17PolicyGroupMergerC2Ev
@_ZN6policy17PolicyGroupMergerD2Ev = hidden unnamed_addr alias void (%"class.policy::PolicyGroupMerger"*), bitcast (void (%"class.policy::PolicyMerger"*)* @_ZN6policy12PolicyMergerD2Ev to void (%"class.policy::PolicyGroupMerger"*)*)
@_ZN6policy17PolicyGroupMergerD1Ev = hidden unnamed_addr alias void (%"class.policy::PolicyGroupMerger"*), bitcast (void (%"class.policy::PolicyMerger"*)* @_ZN6policy12PolicyMergerD2Ev to void (%"class.policy::PolicyGroupMerger"*)*)
@_ZN6policy22PolicyDictionaryMergerC1EN4base8internal9flat_treeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS1_8identityENS4_4lessIvEENS4_6vectorISA_NS8_ISA_EEEEEE = hidden unnamed_addr alias void (%"class.policy::PolicyDictionaryMerger"*, %"class.base::internal::flat_tree.53"*), void (%"class.policy::PolicyDictionaryMerger"*, %"class.base::internal::flat_tree.53"*)* @_ZN6policy22PolicyDictionaryMergerC2EN4base8internal9flat_treeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS1_8identityENS4_4lessIvEENS4_6vectorISA_NS8_ISA_EEEEEE
@_ZN6policy22PolicyDictionaryMergerD1Ev = hidden unnamed_addr alias void (%"class.policy::PolicyDictionaryMerger"*), void (%"class.policy::PolicyDictionaryMerger"*)* @_ZN6policy22PolicyDictionaryMergerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN6policy12PolicyMerger19ConflictCanBeMergedERKNS_9PolicyMap5EntryES4_b(%"class.policy::PolicyMap::Entry"* dereferenceable(120), %"class.policy::PolicyMap::Entry"* nocapture readonly dereferenceable(120), i1 zeroext) local_unnamed_addr #0 align 2 {
  %4 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry7ignoredEv(%"class.policy::PolicyMap::Entry"* %0) #17
  br i1 %4, label %37, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %0, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %37, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %0, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %11, %13
  br i1 %14, label %15, label %37

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %1, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = icmp ne i32 %17, %19
  %21 = icmp eq i32 %17, 0
  %22 = or i1 %21, %20
  br i1 %22, label %23, label %37

23:                                               ; preds = %15
  %24 = or i32 %7, 4
  %25 = icmp eq i32 %24, 6
  %26 = and i1 %21, %25
  %27 = icmp eq i32 %7, 5
  %28 = and i1 %27, %21
  %29 = xor i1 %28, true
  %30 = xor i1 %26, true
  %31 = or i1 %30, %2
  %32 = and i1 %31, %29
  br i1 %32, label %33, label %37

33:                                               ; preds = %23
  %34 = and i1 %26, %2
  %35 = icmp eq i32 %17, %19
  %36 = or i1 %35, %34
  br label %37

37:                                               ; preds = %23, %33, %15, %3, %5, %9
  %38 = phi i1 [ false, %9 ], [ false, %5 ], [ false, %3 ], [ true, %15 ], [ false, %23 ], [ %36, %33 ]
  ret i1 %38
}

declare zeroext i1 @_ZNK6policy9PolicyMap5Entry7ignoredEv(%"class.policy::PolicyMap::Entry"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6policy12PolicyMergerC2Ev(%"class.policy::PolicyMerger"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.policy::PolicyMerger", %"class.policy::PolicyMerger"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6policy12PolicyMergerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6policy12PolicyMergerD2Ev(%"class.policy::PolicyMerger"* nocapture) unnamed_addr #4 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN6policy12PolicyMergerD0Ev(%"class.policy::PolicyMerger"* nocapture readnone) unnamed_addr #5 align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy16PolicyListMergerC2EN4base8internal9flat_treeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS1_8identityENS4_4lessIvEENS4_6vectorISA_NS8_ISA_EEEEEE(%"class.policy::PolicyListMerger"* nocapture, %"class.base::internal::flat_tree.53"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.policy::PolicyListMerger", %"class.policy::PolicyListMerger"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6policy16PolicyListMergerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.policy::PolicyListMerger", %"class.policy::PolicyListMerger"* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"class.policy::PolicyListMerger", %"class.policy::PolicyListMerger"* %0, i64 0, i32 2
  %6 = bitcast %"class.base::internal::flat_tree.53"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #17
  %7 = bitcast %"class.base::internal::flat_tree.53"* %1 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast %"class.base::internal::flat_tree.53"* %5 to i64*
  store i64 %8, i64* %9, align 8
  %10 = getelementptr inbounds %"class.base::internal::flat_tree.53", %"class.base::internal::flat_tree.53"* %1, i64 0, i32 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::basic_string"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.policy::PolicyListMerger", %"class.policy::PolicyListMerger"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %14 = bitcast %"class.std::__1::basic_string"** %13 to i64*
  store i64 %12, i64* %14, align 8
  %15 = getelementptr inbounds %"class.base::internal::flat_tree.53", %"class.base::internal::flat_tree.53"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::basic_string"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.policy::PolicyListMerger", %"class.policy::PolicyListMerger"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = bitcast %"class.base::internal::flat_tree.53"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy16PolicyListMergerD2Ev(%"class.policy::PolicyListMerger"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.policy::PolicyListMerger", %"class.policy::PolicyListMerger"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6policy16PolicyListMergerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.policy::PolicyListMerger", %"class.policy::PolicyListMerger"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::internal::flat_tree.53", %"class.base::internal::flat_tree.53"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = icmp eq %"class.std::__1::basic_string"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %9 = getelementptr inbounds %"class.policy::PolicyListMerger", %"class.policy::PolicyListMerger"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %11 = icmp eq %"class.std::__1::basic_string"* %10, %5
  br i1 %11, label %27, label %12

12:                                               ; preds = %7, %22
  %13 = phi %"class.std::__1::basic_string"* [ %14, %22 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 -1
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #19
  br label %22

22:                                               ; preds = %19, %12
  %23 = icmp eq %"class.std::__1::basic_string"* %14, %5
  br i1 %23, label %24, label %12

24:                                               ; preds = %22
  %25 = bitcast %"class.base::internal::flat_tree.53"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  store %"class.std::__1::basic_string"* %5, %"class.std::__1::basic_string"** %9, align 8
  tail call void @_ZdlPv(i8* %28) #19
  br label %29

29:                                               ; preds = %1, %27
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy16PolicyListMergerD0Ev(%"class.policy::PolicyListMerger"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.policy::PolicyListMerger", %"class.policy::PolicyListMerger"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6policy16PolicyListMergerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.policy::PolicyListMerger", %"class.policy::PolicyListMerger"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.base::internal::flat_tree.53", %"class.base::internal::flat_tree.53"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = icmp eq %"class.std::__1::basic_string"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %9 = getelementptr inbounds %"class.policy::PolicyListMerger", %"class.policy::PolicyListMerger"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %11 = icmp eq %"class.std::__1::basic_string"* %10, %5
  br i1 %11, label %27, label %12

12:                                               ; preds = %7, %22
  %13 = phi %"class.std::__1::basic_string"* [ %14, %22 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 -1
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #19
  br label %22

22:                                               ; preds = %19, %12
  %23 = icmp eq %"class.std::__1::basic_string"* %14, %5
  br i1 %23, label %24, label %12

24:                                               ; preds = %22
  %25 = bitcast %"class.base::internal::flat_tree.53"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  store %"class.std::__1::basic_string"* %5, %"class.std::__1::basic_string"** %9, align 8
  tail call void @_ZdlPv(i8* %28) #19
  br label %29

29:                                               ; preds = %1, %27
  %30 = bitcast %"class.policy::PolicyListMerger"* %0 to i8*
  tail call void @_ZdlPv(i8* %30) #19
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6policy17PolicyGroupMergerC2Ev(%"class.policy::PolicyGroupMerger"* nocapture) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.policy::PolicyGroupMerger", %"class.policy::PolicyGroupMerger"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6policy17PolicyGroupMergerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy17PolicyGroupMergerD0Ev(%"class.policy::PolicyGroupMerger"*) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.policy::PolicyGroupMerger"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6policy16PolicyListMerger5MergeEPNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9PolicyMap5EntryENS1_4lessIS8_EENS6_INS1_4pairIKS8_SA_EEEEEE(%"class.policy::PolicyListMerger"*, %"class.std::__1::map.61"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::map.61", %"class.std::__1::map.61"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::map.61", %"class.std::__1::map.61"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %4, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %44, %2
  ret void

8:                                                ; preds = %2, %44
  %9 = phi %"class.std::__1::__tree_end_node"* [ %45, %44 ], [ %4, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 4
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::basic_string"*
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 7
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.policy::PolicyMap::Entry"*
  %14 = tail call zeroext i1 @_ZNK6policy16PolicyListMerger8CanMergeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERNS_9PolicyMap5EntryE(%"class.policy::PolicyListMerger"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %11, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %13)
  br i1 %14, label %15, label %16

15:                                               ; preds = %8
  tail call void @_ZNK6policy16PolicyListMerger7DoMergeEPNS_9PolicyMap5EntryE(%"class.policy::PolicyListMerger"* %0, %"class.policy::PolicyMap::Entry"* %13)
  br label %16

16:                                               ; preds = %15, %8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 1, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node_base"*
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 2
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_end_node"**
  %24 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 0, i32 0
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, %21
  br i1 %27, label %44, label %35

28:                                               ; preds = %16, %28
  %29 = phi %"class.std::__1::__tree_node_base"* [ %31, %28 ], [ %18, %16 ]
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node_base"* %31, null
  br i1 %32, label %33, label %28

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %29, i64 0, i32 0
  br label %44

35:                                               ; preds = %20, %35
  %36 = phi %"class.std::__1::__tree_end_node"** [ %39, %35 ], [ %23, %20 ]
  %37 = bitcast %"class.std::__1::__tree_end_node"** %36 to %"class.std::__1::__tree_node_base"**
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %40 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, %38
  br i1 %43, label %44, label %35

44:                                               ; preds = %35, %20, %33
  %45 = phi %"class.std::__1::__tree_end_node"* [ %34, %33 ], [ %24, %20 ], [ %40, %35 ]
  %46 = icmp eq %"class.std::__1::__tree_end_node"* %45, %5
  br i1 %46, label %7, label %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6policy16PolicyListMerger8CanMergeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERNS_9PolicyMap5EntryE(%"class.policy::PolicyListMerger"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.policy::PolicyMap::Entry"* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %2, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 7
  br i1 %6, label %83, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.policy::PolicyListMerger", %"class.policy::PolicyListMerger"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.base::internal::flat_tree.53", %"class.base::internal::flat_tree.53"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %11 = getelementptr inbounds %"class.policy::PolicyListMerger", %"class.policy::PolicyListMerger"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = ptrtoint %"class.std::__1::basic_string"* %10 to i64
  %15 = sub i64 %13, %14
  %16 = icmp eq i64 %15, 0
  %17 = inttoptr i64 %13 to %"class.std::__1::basic_string"*
  br i1 %16, label %36, label %18

18:                                               ; preds = %7
  %19 = sdiv exact i64 %15, 24
  br label %20

20:                                               ; preds = %20, %18
  %21 = phi %"class.std::__1::basic_string"* [ %10, %18 ], [ %31, %20 ]
  %22 = phi i64 [ %19, %18 ], [ %30, %20 ]
  %23 = lshr i64 %22, 1
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 %23
  %25 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(%"class.std::__1::basic_string"* %24, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #17
  %26 = icmp slt i32 %25, 0
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 1
  %28 = xor i64 %23, -1
  %29 = add i64 %22, %28
  %30 = select i1 %26, i64 %29, i64 %23
  %31 = select i1 %26, %"class.std::__1::basic_string"* %27, %"class.std::__1::basic_string"* %21
  %32 = icmp eq i64 %30, 0
  br i1 %32, label %33, label %20

33:                                               ; preds = %20
  %34 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %35 = ptrtoint %"class.std::__1::basic_string"* %31 to i64
  br label %36

36:                                               ; preds = %33, %7
  %37 = phi i64 [ %35, %33 ], [ %14, %7 ]
  %38 = phi %"class.std::__1::basic_string"* [ %34, %33 ], [ %17, %7 ]
  %39 = phi %"class.std::__1::basic_string"* [ %31, %33 ], [ %10, %7 ]
  %40 = icmp eq %"class.std::__1::basic_string"* %39, %38
  br i1 %40, label %47, label %41

41:                                               ; preds = %36
  %42 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(%"class.std::__1::basic_string"* %39, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #17
  %43 = icmp sgt i32 %42, 0
  br i1 %43, label %47, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 1
  %46 = ptrtoint %"class.std::__1::basic_string"* %45 to i64
  br label %47

47:                                               ; preds = %44, %41, %36
  %48 = phi i64 [ %46, %44 ], [ %37, %36 ], [ %37, %41 ]
  %49 = inttoptr i64 %48 to %"class.std::__1::basic_string"*
  %50 = icmp eq %"class.std::__1::basic_string"* %39, %49
  br i1 %50, label %64, label %51

51:                                               ; preds = %47
  %52 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %53 = icmp eq %"class.std::__1::basic_string"* %39, %52
  br i1 %53, label %64, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %2, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %56 = load i8, i8* %55, align 8, !range !2
  %57 = icmp eq i8 %56, 0
  %58 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %2, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %59 = select i1 %57, %"class.base::Value"* null, %"class.base::Value"* %58
  %60 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %59, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = trunc i64 %61 to i8
  %63 = icmp eq i8 %62, 7
  br label %83

64:                                               ; preds = %47, %51
  %65 = tail call { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* } @_ZNK4base8internal9flat_treeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE11equal_rangeIS8_EENS2_4pairINS2_11__wrap_iterIPKS8_EESL_EERKT_(%"class.base::internal::flat_tree.53"* %8, %"class.std::__1::basic_string"* dereferenceable(24) %1) #17
  %66 = extractvalue { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* } %65, 0
  %67 = extractvalue { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* } %65, 1
  %68 = icmp eq %"class.std::__1::basic_string"* %66, %67
  br i1 %68, label %83, label %69

69:                                               ; preds = %64
  %70 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %11, align 8
  %71 = icmp eq %"class.std::__1::basic_string"* %66, %70
  br i1 %71, label %83, label %72

72:                                               ; preds = %69
  %73 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %2, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %74 = load i8, i8* %73, align 8, !range !2
  %75 = icmp eq i8 %74, 0
  %76 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %2, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %77 = select i1 %75, %"class.base::Value"* null, %"class.base::Value"* %76
  %78 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %79 = load i64, i64* %78, align 8
  %80 = trunc i64 %79 to i8
  %81 = icmp eq i8 %80, 7
  br i1 %81, label %83, label %82

82:                                               ; preds = %72
  tail call void @_ZN6policy9PolicyMap5Entry10AddMessageENS0_11MessageTypeEi(%"class.policy::PolicyMap::Entry"* %2, i32 2, i32 20426) #17
  br label %83

83:                                               ; preds = %64, %72, %69, %3, %82, %54
  %84 = phi i1 [ %63, %54 ], [ false, %82 ], [ false, %3 ], [ false, %69 ], [ true, %72 ], [ false, %64 ]
  ret i1 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6policy16PolicyListMerger7DoMergeEPNS_9PolicyMap5EntryE(%"class.policy::PolicyListMerger"* nocapture readonly, %"class.policy::PolicyMap::Entry"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.73", align 8
  %4 = alloca %"class.std::__1::set", align 8
  %5 = alloca %"class.base::CheckedContiguousIterator", align 8
  %6 = alloca %"class.base::CheckedContiguousIterator", align 8
  %7 = alloca %"class.base::Value"*, align 8
  %8 = alloca %"class.base::CheckedContiguousIterator.90", align 8
  %9 = alloca %"class.base::CheckedContiguousIterator.90", align 8
  %10 = alloca %"class.base::Value"*, align 8
  %11 = alloca %"class.policy::PolicyMap::Entry", align 8
  %12 = alloca %"class.base::Value", align 8
  %13 = alloca %"class.base::Value", align 8
  %14 = alloca %"class.absl::optional", align 8
  %15 = bitcast %"class.std::__1::vector.73"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #17
  %16 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %3, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %3, i64 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.std::__1::vector.73", %"class.std::__1::vector.73"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #17
  %19 = bitcast %"class.std::__1::set"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %19) #17
  %20 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 0
  %21 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  %23 = bitcast %"class.std::__1::__tree_node_base"** %21 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %22, %"class.std::__1::__tree_end_node"** %20, align 8
  %24 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %25 = load i8, i8* %24, align 8, !range !2
  %26 = icmp eq i8 %25, 0
  %27 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %1, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %28 = select i1 %26, %"class.base::Value"* null, %"class.base::Value"* %27
  %29 = call %"class.std::__1::vector.37"* @_ZN4base5Value7GetListEv(%"class.base::Value"* %28) #17
  %30 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #17
  %31 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %5, i64 0, i32 1
  %32 = icmp eq %"class.std::__1::vector.37"* %29, null
  %33 = bitcast %"class.base::CheckedContiguousIterator"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %33, i8 -86, i64 24, i1 false)
  br i1 %32, label %43, label %34

34:                                               ; preds = %2
  %35 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %29, i64 0, i32 0, i32 0
  %36 = load %"class.base::Value"*, %"class.base::Value"** %35, align 8
  %37 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %29, i64 0, i32 0, i32 1
  %38 = bitcast %"class.base::Value"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = ptrtoint %"class.base::Value"* %36 to i64
  %41 = sub i64 %39, %40
  %42 = ashr exact i64 %41, 5
  br label %43

43:                                               ; preds = %2, %34
  %44 = phi %"class.base::Value"* [ %36, %34 ], [ null, %2 ]
  %45 = phi i64 [ %42, %34 ], [ 0, %2 ]
  %46 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %44, i64 %45
  call void @_ZN4base25CheckedContiguousIteratorINS_5ValueEEC2EPKS1_PS1_S4_(%"class.base::CheckedContiguousIterator"* nonnull %5, %"class.base::Value"* %44, %"class.base::Value"* %44, %"class.base::Value"* %46) #17
  %47 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %47) #17
  %48 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %6, i64 0, i32 1
  %49 = bitcast %"class.base::CheckedContiguousIterator"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false)
  br i1 %32, label %60, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %29, i64 0, i32 0, i32 0
  %52 = load %"class.base::Value"*, %"class.base::Value"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %29, i64 0, i32 0, i32 1
  %54 = bitcast %"class.base::Value"** %53 to i64*
  %55 = load i64, i64* %54, align 8
  %56 = ptrtoint %"class.base::Value"* %52 to i64
  %57 = sub i64 %55, %56
  %58 = ashr exact i64 %57, 5
  %59 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %52, i64 %58
  br label %60

60:                                               ; preds = %43, %50
  %61 = phi %"class.base::Value"* [ %52, %50 ], [ null, %43 ]
  %62 = phi %"class.base::Value"* [ %59, %50 ], [ null, %43 ]
  %63 = phi i64 [ %58, %50 ], [ 0, %43 ]
  %64 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %61, i64 %63
  call void @_ZN4base25CheckedContiguousIteratorINS_5ValueEEC2EPKS1_PS1_S4_(%"class.base::CheckedContiguousIterator"* nonnull %6, %"class.base::Value"* %61, %"class.base::Value"* %62, %"class.base::Value"* %64) #17
  call void @_ZNK4base25CheckedContiguousIteratorINS_5ValueEE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %5, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %6) #17
  %65 = load %"class.base::Value"*, %"class.base::Value"** %31, align 8
  %66 = load %"class.base::Value"*, %"class.base::Value"** %48, align 8
  %67 = icmp eq %"class.base::Value"* %65, %66
  br i1 %67, label %74, label %68

68:                                               ; preds = %60
  %69 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node.114"**
  %70 = bitcast %"class.base::Value"** %7 to i8*
  %71 = bitcast %"class.base::Value"*** %17 to i64*
  %72 = bitcast %"class.std::__1::vector.73"* %3 to i64*
  %73 = bitcast %"class.base::Value"*** %18 to i64*
  br label %96

74:                                               ; preds = %175, %60
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %47) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #17
  %75 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %1, i64 0, i32 4, i32 0, i32 0
  %76 = load %"class.policy::PolicyMap::EntryConflict"*, %"class.policy::PolicyMap::EntryConflict"** %75, align 8
  %77 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %1, i64 0, i32 4, i32 0, i32 1
  %78 = load %"class.policy::PolicyMap::EntryConflict"*, %"class.policy::PolicyMap::EntryConflict"** %77, align 8
  %79 = icmp eq %"class.policy::PolicyMap::EntryConflict"* %76, %78
  br i1 %79, label %180, label %80

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.policy::PolicyListMerger", %"class.policy::PolicyListMerger"* %0, i64 0, i32 1
  %82 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %1, i64 0, i32 0
  %83 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %1, i64 0, i32 1
  %84 = bitcast %"class.base::CheckedContiguousIterator.90"* %8 to i8*
  %85 = getelementptr inbounds %"class.base::CheckedContiguousIterator.90", %"class.base::CheckedContiguousIterator.90"* %8, i64 0, i32 1
  %86 = bitcast %"class.base::CheckedContiguousIterator.90"* %9 to i8*
  %87 = getelementptr inbounds %"class.base::CheckedContiguousIterator.90", %"class.base::CheckedContiguousIterator.90"* %9, i64 0, i32 1
  %88 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node.114"**
  %89 = bitcast %"class.base::Value"** %10 to i8*
  %90 = bitcast %"class.base::Value"*** %17 to i64*
  %91 = bitcast %"class.std::__1::vector.73"* %3 to i64*
  %92 = bitcast %"class.base::Value"*** %18 to i64*
  %93 = bitcast %"class.base::CheckedContiguousIterator.90"* %8 to i8*
  %94 = bitcast %"class.base::CheckedContiguousIterator.90"* %9 to i8*
  %95 = bitcast %"class.base::CheckedContiguousIterator.90"* %9 to i8*
  br label %185

96:                                               ; preds = %68, %175
  %97 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorINS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"* nonnull %5)
  %98 = load %"class.std::__1::__tree_node.114"*, %"class.std::__1::__tree_node.114"** %69, align 8
  %99 = icmp eq %"class.std::__1::__tree_node.114"* %98, null
  br i1 %99, label %121, label %100

100:                                              ; preds = %96, %100
  %101 = phi %"class.std::__1::__tree_end_node"* [ %111, %100 ], [ %22, %96 ]
  %102 = phi %"class.std::__1::__tree_node.114"* [ %112, %100 ], [ %98, %96 ]
  %103 = getelementptr inbounds %"class.std::__1::__tree_node.114", %"class.std::__1::__tree_node.114"* %102, i64 0, i32 1
  %104 = load %"class.base::Value"*, %"class.base::Value"** %103, align 8
  %105 = call zeroext i1 @_ZN4baseltERKNS_5ValueES2_(%"class.base::Value"* dereferenceable(32) %104, %"class.base::Value"* dereferenceable(32) %97) #17
  %106 = getelementptr inbounds %"class.std::__1::__tree_node.114", %"class.std::__1::__tree_node.114"* %102, i64 0, i32 0, i32 1
  %107 = bitcast %"class.std::__1::__tree_node_base"** %106 to %"class.std::__1::__tree_node.114"**
  %108 = getelementptr inbounds %"class.std::__1::__tree_node.114", %"class.std::__1::__tree_node.114"* %102, i64 0, i32 0, i32 0
  %109 = bitcast %"class.std::__1::__tree_node.114"* %102 to %"class.std::__1::__tree_node.114"**
  %110 = select i1 %105, %"class.std::__1::__tree_node.114"** %107, %"class.std::__1::__tree_node.114"** %109
  %111 = select i1 %105, %"class.std::__1::__tree_end_node"* %101, %"class.std::__1::__tree_end_node"* %108
  %112 = load %"class.std::__1::__tree_node.114"*, %"class.std::__1::__tree_node.114"** %110, align 8
  %113 = icmp eq %"class.std::__1::__tree_node.114"* %112, null
  br i1 %113, label %114, label %100

114:                                              ; preds = %100
  %115 = icmp eq %"class.std::__1::__tree_end_node"* %111, %22
  br i1 %115, label %121, label %116

116:                                              ; preds = %114
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %111, i64 4
  %118 = bitcast %"class.std::__1::__tree_end_node"* %117 to %"class.base::Value"**
  %119 = load %"class.base::Value"*, %"class.base::Value"** %118, align 8
  %120 = call zeroext i1 @_ZN4baseltERKNS_5ValueES2_(%"class.base::Value"* dereferenceable(32) %97, %"class.base::Value"* dereferenceable(32) %119) #17
  br i1 %120, label %121, label %175

121:                                              ; preds = %116, %114, %96
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %70) #17
  store %"class.base::Value"* %97, %"class.base::Value"** %7, align 8
  call fastcc void @"_ZNSt3__13setIPKN4base5ValueEZNK6policy16PolicyListMerger7DoMergeEPNS5_9PolicyMap5EntryEE3$_0NS_9allocatorIS4_EEE6insertEOS4_"(%"class.std::__1::set"* nonnull %4, %"class.base::Value"** nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %70) #17
  %122 = ptrtoint %"class.base::Value"* %97 to i64
  %123 = load %"class.base::Value"**, %"class.base::Value"*** %17, align 8
  %124 = load %"class.base::Value"**, %"class.base::Value"*** %18, align 8
  %125 = icmp ult %"class.base::Value"** %123, %124
  %126 = ptrtoint %"class.base::Value"** %124 to i64
  br i1 %125, label %127, label %131

127:                                              ; preds = %121
  %128 = bitcast %"class.base::Value"** %123 to i64*
  store i64 %122, i64* %128, align 8
  %129 = getelementptr inbounds %"class.base::Value"*, %"class.base::Value"** %123, i64 1
  %130 = ptrtoint %"class.base::Value"** %129 to i64
  store i64 %130, i64* %71, align 8
  br label %175

131:                                              ; preds = %121
  %132 = ptrtoint %"class.base::Value"** %123 to i64
  %133 = load i64, i64* %72, align 8
  %134 = sub i64 %132, %133
  %135 = ashr exact i64 %134, 3
  %136 = add nsw i64 %135, 1
  %137 = icmp ugt i64 %136, 2305843009213693951
  br i1 %137, label %138, label %140

138:                                              ; preds = %131
  %139 = bitcast %"class.std::__1::vector.73"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %139) #18
  unreachable

140:                                              ; preds = %131
  %141 = sub i64 %126, %133
  %142 = ashr exact i64 %141, 3
  %143 = icmp ult i64 %142, 1152921504606846975
  br i1 %143, label %144, label %152

144:                                              ; preds = %140
  %145 = ashr exact i64 %141, 2
  %146 = icmp ult i64 %145, %136
  %147 = select i1 %146, i64 %136, i64 %145
  %148 = icmp eq i64 %147, 0
  br i1 %148, label %157, label %149

149:                                              ; preds = %144
  %150 = icmp ugt i64 %147, 2305843009213693951
  br i1 %150, label %151, label %152

151:                                              ; preds = %149
  call void @abort() #18
  unreachable

152:                                              ; preds = %149, %140
  %153 = phi i64 [ %147, %149 ], [ 2305843009213693951, %140 ]
  %154 = shl i64 %153, 3
  %155 = call i8* @_Znwm(i64 %154) #19
  %156 = bitcast i8* %155 to %"class.base::Value"**
  br label %157

157:                                              ; preds = %152, %144
  %158 = phi i64 [ %153, %152 ], [ 0, %144 ]
  %159 = phi i8* [ %155, %152 ], [ null, %144 ]
  %160 = phi %"class.base::Value"** [ %156, %152 ], [ null, %144 ]
  %161 = getelementptr inbounds %"class.base::Value"*, %"class.base::Value"** %160, i64 %135
  %162 = getelementptr inbounds %"class.base::Value"*, %"class.base::Value"** %160, i64 %158
  %163 = ptrtoint %"class.base::Value"** %162 to i64
  %164 = bitcast %"class.base::Value"** %161 to i64*
  store i64 %122, i64* %164, align 8
  %165 = getelementptr inbounds %"class.base::Value"*, %"class.base::Value"** %161, i64 1
  %166 = ptrtoint %"class.base::Value"** %165 to i64
  %167 = ptrtoint %"class.base::Value"** %160 to i64
  %168 = icmp sgt i64 %134, 0
  br i1 %168, label %169, label %171

169:                                              ; preds = %157
  %170 = inttoptr i64 %133 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %159, i8* align 8 %170, i64 %134, i1 false) #17
  br label %171

171:                                              ; preds = %169, %157
  store i64 %167, i64* %72, align 8
  store i64 %166, i64* %71, align 8
  store i64 %163, i64* %73, align 8
  %172 = icmp eq i64 %133, 0
  br i1 %172, label %175, label %173

173:                                              ; preds = %171
  %174 = inttoptr i64 %133 to i8*
  call void @_ZdlPv(i8* %174) #19
  br label %175

175:                                              ; preds = %116, %173, %171, %127
  %176 = call dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorINS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"* nonnull %5)
  call void @_ZNK4base25CheckedContiguousIteratorINS_5ValueEE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"* nonnull %5, %"class.base::CheckedContiguousIterator"* nonnull dereferenceable(24) %6) #17
  %177 = load %"class.base::Value"*, %"class.base::Value"** %31, align 8
  %178 = load %"class.base::Value"*, %"class.base::Value"** %48, align 8
  %179 = icmp eq %"class.base::Value"* %177, %178
  br i1 %179, label %74, label %96

180:                                              ; preds = %341, %74
  %181 = phi i8 [ 0, %74 ], [ %342, %341 ]
  %182 = bitcast %"class.policy::PolicyMap::Entry"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %182) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %182, i8 -86, i64 120, i1 false)
  call void @_ZNK6policy9PolicyMap5Entry8DeepCopyEv(%"class.policy::PolicyMap::Entry"* nonnull sret %11, %"class.policy::PolicyMap::Entry"* %1) #17
  %183 = and i8 %181, 1
  %184 = icmp eq i8 %183, 0
  br i1 %184, label %365, label %345

185:                                              ; preds = %80, %341
  %186 = phi i8 [ 0, %80 ], [ %342, %341 ]
  %187 = phi %"class.policy::PolicyMap::EntryConflict"* [ %76, %80 ], [ %343, %341 ]
  %188 = call dereferenceable(120) %"class.policy::PolicyMap::Entry"* @_ZNK6policy9PolicyMap13EntryConflict5entryEv(%"class.policy::PolicyMap::EntryConflict"* %187) #17
  %189 = load i8, i8* %81, align 8, !range !2
  %190 = icmp ne i8 %189, 0
  %191 = call zeroext i1 @_ZNK6policy9PolicyMap5Entry7ignoredEv(%"class.policy::PolicyMap::Entry"* %188) #17
  br i1 %191, label %341, label %192

192:                                              ; preds = %185
  %193 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %188, i64 0, i32 2
  %194 = load i32, i32* %193, align 8
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %341, label %196

196:                                              ; preds = %192
  %197 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %188, i64 0, i32 0
  %198 = load i32, i32* %197, align 8
  %199 = load i32, i32* %82, align 8
  %200 = icmp eq i32 %198, %199
  br i1 %200, label %201, label %341

201:                                              ; preds = %196
  %202 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %188, i64 0, i32 1
  %203 = load i32, i32* %202, align 4
  %204 = load i32, i32* %83, align 4
  %205 = icmp ne i32 %203, %204
  %206 = icmp eq i32 %203, 0
  %207 = or i1 %206, %205
  br i1 %207, label %208, label %222

208:                                              ; preds = %201
  %209 = or i32 %194, 4
  %210 = icmp eq i32 %209, 6
  %211 = and i1 %210, %206
  %212 = icmp eq i32 %194, 5
  %213 = and i1 %212, %206
  %214 = xor i1 %213, true
  %215 = xor i1 %211, true
  %216 = or i1 %190, %215
  %217 = and i1 %216, %214
  br i1 %217, label %218, label %341

218:                                              ; preds = %208
  %219 = and i1 %190, %211
  %220 = icmp eq i32 %203, %204
  %221 = or i1 %220, %219
  br i1 %221, label %222, label %341

222:                                              ; preds = %201, %218
  %223 = call dereferenceable(120) %"class.policy::PolicyMap::Entry"* @_ZNK6policy9PolicyMap13EntryConflict5entryEv(%"class.policy::PolicyMap::EntryConflict"* %187) #17
  %224 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %223, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %225 = load i8, i8* %224, align 8, !range !2
  %226 = icmp eq i8 %225, 0
  %227 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %223, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %228 = select i1 %226, %"class.base::Value"* null, %"class.base::Value"* %227
  %229 = call %"class.std::__1::vector.37"* @_ZNK4base5Value7GetListEv(%"class.base::Value"* %228) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %84) #17
  %230 = icmp eq %"class.std::__1::vector.37"* %229, null
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %93, i8 -86, i64 24, i1 false)
  br i1 %230, label %247, label %231

231:                                              ; preds = %222
  %232 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %229, i64 0, i32 0, i32 0
  %233 = load %"class.base::Value"*, %"class.base::Value"** %232, align 8
  %234 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %229, i64 0, i32 0, i32 1
  %235 = bitcast %"class.base::Value"** %234 to i64*
  %236 = load i64, i64* %235, align 8
  %237 = ptrtoint %"class.base::Value"* %233 to i64
  %238 = sub i64 %236, %237
  %239 = ashr exact i64 %238, 5
  %240 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %233, i64 %239
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator.90"* nonnull %8, %"class.base::Value"* %233, %"class.base::Value"* %233, %"class.base::Value"* %240) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %94, i8 -86, i64 24, i1 false)
  %241 = load %"class.base::Value"*, %"class.base::Value"** %232, align 8
  %242 = load i64, i64* %235, align 8
  %243 = ptrtoint %"class.base::Value"* %241 to i64
  %244 = sub i64 %242, %243
  %245 = ashr exact i64 %244, 5
  %246 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %241, i64 %245
  br label %248

247:                                              ; preds = %222
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator.90"* nonnull %8, %"class.base::Value"* null, %"class.base::Value"* null, %"class.base::Value"* null) #17
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %86) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 24, i1 false)
  br label %248

248:                                              ; preds = %247, %231
  %249 = phi %"class.base::Value"* [ %241, %231 ], [ null, %247 ]
  %250 = phi %"class.base::Value"* [ %246, %231 ], [ null, %247 ]
  %251 = phi i64 [ %245, %231 ], [ 0, %247 ]
  %252 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %249, i64 %251
  call void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator.90"* nonnull %9, %"class.base::Value"* %249, %"class.base::Value"* %250, %"class.base::Value"* %252) #17
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator.90"* nonnull %8, %"class.base::CheckedContiguousIterator.90"* nonnull dereferenceable(24) %9) #17
  %253 = load %"class.base::Value"*, %"class.base::Value"** %85, align 8
  %254 = load %"class.base::Value"*, %"class.base::Value"** %87, align 8
  %255 = icmp eq %"class.base::Value"* %253, %254
  br i1 %255, label %256, label %257

256:                                              ; preds = %336, %248
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %86) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %84) #17
  br label %341

257:                                              ; preds = %248, %336
  %258 = call dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator.90"* nonnull %8)
  %259 = load %"class.std::__1::__tree_node.114"*, %"class.std::__1::__tree_node.114"** %88, align 8
  %260 = icmp eq %"class.std::__1::__tree_node.114"* %259, null
  br i1 %260, label %282, label %261

261:                                              ; preds = %257, %261
  %262 = phi %"class.std::__1::__tree_end_node"* [ %272, %261 ], [ %22, %257 ]
  %263 = phi %"class.std::__1::__tree_node.114"* [ %273, %261 ], [ %259, %257 ]
  %264 = getelementptr inbounds %"class.std::__1::__tree_node.114", %"class.std::__1::__tree_node.114"* %263, i64 0, i32 1
  %265 = load %"class.base::Value"*, %"class.base::Value"** %264, align 8
  %266 = call zeroext i1 @_ZN4baseltERKNS_5ValueES2_(%"class.base::Value"* dereferenceable(32) %265, %"class.base::Value"* dereferenceable(32) %258) #17
  %267 = getelementptr inbounds %"class.std::__1::__tree_node.114", %"class.std::__1::__tree_node.114"* %263, i64 0, i32 0, i32 1
  %268 = bitcast %"class.std::__1::__tree_node_base"** %267 to %"class.std::__1::__tree_node.114"**
  %269 = getelementptr inbounds %"class.std::__1::__tree_node.114", %"class.std::__1::__tree_node.114"* %263, i64 0, i32 0, i32 0
  %270 = bitcast %"class.std::__1::__tree_node.114"* %263 to %"class.std::__1::__tree_node.114"**
  %271 = select i1 %266, %"class.std::__1::__tree_node.114"** %268, %"class.std::__1::__tree_node.114"** %270
  %272 = select i1 %266, %"class.std::__1::__tree_end_node"* %262, %"class.std::__1::__tree_end_node"* %269
  %273 = load %"class.std::__1::__tree_node.114"*, %"class.std::__1::__tree_node.114"** %271, align 8
  %274 = icmp eq %"class.std::__1::__tree_node.114"* %273, null
  br i1 %274, label %275, label %261

275:                                              ; preds = %261
  %276 = icmp eq %"class.std::__1::__tree_end_node"* %272, %22
  br i1 %276, label %282, label %277

277:                                              ; preds = %275
  %278 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %272, i64 4
  %279 = bitcast %"class.std::__1::__tree_end_node"* %278 to %"class.base::Value"**
  %280 = load %"class.base::Value"*, %"class.base::Value"** %279, align 8
  %281 = call zeroext i1 @_ZN4baseltERKNS_5ValueES2_(%"class.base::Value"* dereferenceable(32) %258, %"class.base::Value"* dereferenceable(32) %280) #17
  br i1 %281, label %282, label %336

282:                                              ; preds = %277, %275, %257
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #17
  store %"class.base::Value"* %258, %"class.base::Value"** %10, align 8
  call fastcc void @"_ZNSt3__13setIPKN4base5ValueEZNK6policy16PolicyListMerger7DoMergeEPNS5_9PolicyMap5EntryEE3$_0NS_9allocatorIS4_EEE6insertEOS4_"(%"class.std::__1::set"* nonnull %4, %"class.base::Value"** nonnull dereferenceable(8) %10)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %89) #17
  %283 = ptrtoint %"class.base::Value"* %258 to i64
  %284 = load %"class.base::Value"**, %"class.base::Value"*** %17, align 8
  %285 = load %"class.base::Value"**, %"class.base::Value"*** %18, align 8
  %286 = icmp ult %"class.base::Value"** %284, %285
  %287 = ptrtoint %"class.base::Value"** %285 to i64
  br i1 %286, label %288, label %292

288:                                              ; preds = %282
  %289 = bitcast %"class.base::Value"** %284 to i64*
  store i64 %283, i64* %289, align 8
  %290 = getelementptr inbounds %"class.base::Value"*, %"class.base::Value"** %284, i64 1
  %291 = ptrtoint %"class.base::Value"** %290 to i64
  store i64 %291, i64* %90, align 8
  br label %336

292:                                              ; preds = %282
  %293 = ptrtoint %"class.base::Value"** %284 to i64
  %294 = load i64, i64* %91, align 8
  %295 = sub i64 %293, %294
  %296 = ashr exact i64 %295, 3
  %297 = add nsw i64 %296, 1
  %298 = icmp ugt i64 %297, 2305843009213693951
  br i1 %298, label %299, label %301

299:                                              ; preds = %292
  %300 = bitcast %"class.std::__1::vector.73"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %300) #18
  unreachable

301:                                              ; preds = %292
  %302 = sub i64 %287, %294
  %303 = ashr exact i64 %302, 3
  %304 = icmp ult i64 %303, 1152921504606846975
  br i1 %304, label %305, label %313

305:                                              ; preds = %301
  %306 = ashr exact i64 %302, 2
  %307 = icmp ult i64 %306, %297
  %308 = select i1 %307, i64 %297, i64 %306
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %318, label %310

310:                                              ; preds = %305
  %311 = icmp ugt i64 %308, 2305843009213693951
  br i1 %311, label %312, label %313

312:                                              ; preds = %310
  call void @abort() #18
  unreachable

313:                                              ; preds = %310, %301
  %314 = phi i64 [ %308, %310 ], [ 2305843009213693951, %301 ]
  %315 = shl i64 %314, 3
  %316 = call i8* @_Znwm(i64 %315) #19
  %317 = bitcast i8* %316 to %"class.base::Value"**
  br label %318

318:                                              ; preds = %313, %305
  %319 = phi i64 [ %314, %313 ], [ 0, %305 ]
  %320 = phi i8* [ %316, %313 ], [ null, %305 ]
  %321 = phi %"class.base::Value"** [ %317, %313 ], [ null, %305 ]
  %322 = getelementptr inbounds %"class.base::Value"*, %"class.base::Value"** %321, i64 %296
  %323 = getelementptr inbounds %"class.base::Value"*, %"class.base::Value"** %321, i64 %319
  %324 = ptrtoint %"class.base::Value"** %323 to i64
  %325 = bitcast %"class.base::Value"** %322 to i64*
  store i64 %283, i64* %325, align 8
  %326 = getelementptr inbounds %"class.base::Value"*, %"class.base::Value"** %322, i64 1
  %327 = ptrtoint %"class.base::Value"** %326 to i64
  %328 = ptrtoint %"class.base::Value"** %321 to i64
  %329 = icmp sgt i64 %295, 0
  br i1 %329, label %330, label %332

330:                                              ; preds = %318
  %331 = inttoptr i64 %294 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %320, i8* align 8 %331, i64 %295, i1 false) #17
  br label %332

332:                                              ; preds = %330, %318
  store i64 %328, i64* %91, align 8
  store i64 %327, i64* %90, align 8
  store i64 %324, i64* %92, align 8
  %333 = icmp eq i64 %294, 0
  br i1 %333, label %336, label %334

334:                                              ; preds = %332
  %335 = inttoptr i64 %294 to i8*
  call void @_ZdlPv(i8* %335) #19
  br label %336

336:                                              ; preds = %277, %334, %332, %288
  %337 = call dereferenceable(24) %"class.base::CheckedContiguousIterator.90"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator.90"* nonnull %8)
  call void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator.90"* nonnull %8, %"class.base::CheckedContiguousIterator.90"* nonnull dereferenceable(24) %9) #17
  %338 = load %"class.base::Value"*, %"class.base::Value"** %85, align 8
  %339 = load %"class.base::Value"*, %"class.base::Value"** %87, align 8
  %340 = icmp eq %"class.base::Value"* %338, %339
  br i1 %340, label %256, label %257

341:                                              ; preds = %208, %185, %192, %196, %218, %256
  %342 = phi i8 [ 1, %256 ], [ %186, %218 ], [ %186, %196 ], [ %186, %192 ], [ %186, %185 ], [ %186, %208 ]
  %343 = getelementptr inbounds %"class.policy::PolicyMap::EntryConflict", %"class.policy::PolicyMap::EntryConflict"* %187, i64 1
  %344 = icmp eq %"class.policy::PolicyMap::EntryConflict"* %343, %78
  br i1 %344, label %180, label %185

345:                                              ; preds = %180
  %346 = bitcast %"class.base::Value"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %346) #17
  %347 = bitcast %"class.base::Value"* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %347, i8 -86, i64 32, i1 false)
  call void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"* nonnull %12, i8 zeroext 7) #17
  %348 = load %"class.base::Value"**, %"class.base::Value"*** %16, align 8
  %349 = load %"class.base::Value"**, %"class.base::Value"*** %17, align 8
  %350 = icmp eq %"class.base::Value"** %348, %349
  br i1 %350, label %353, label %351

351:                                              ; preds = %345
  %352 = bitcast %"class.base::Value"* %13 to i8*
  br label %360

353:                                              ; preds = %360, %345
  %354 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %354, align 8
  %355 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %14, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %355, %"class.base::Value"* nonnull dereferenceable(32) %12) #17
  call void @_ZN6policy9PolicyMap5Entry9set_valueEN4absl8optionalIN4base5ValueEEE(%"class.policy::PolicyMap::Entry"* %1, %"class.absl::optional"* nonnull %14) #17
  %356 = load i8, i8* %354, align 8, !range !2
  %357 = icmp eq i8 %356, 0
  br i1 %357, label %359, label %358

358:                                              ; preds = %353
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %355) #17
  store i8 0, i8* %354, align 8
  br label %359

359:                                              ; preds = %353, %358
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %12) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %346) #17
  br label %365

360:                                              ; preds = %351, %360
  %361 = phi %"class.base::Value"** [ %348, %351 ], [ %363, %360 ]
  %362 = load %"class.base::Value"*, %"class.base::Value"** %361, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %352) #17
  call void @_ZNK4base5Value5CloneEv(%"class.base::Value"* nonnull sret %13, %"class.base::Value"* %362) #17
  call void @_ZN4base5Value6AppendEOS0_(%"class.base::Value"* nonnull %12, %"class.base::Value"* nonnull dereferenceable(32) %13) #17
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %13) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %352) #17
  %363 = getelementptr inbounds %"class.base::Value"*, %"class.base::Value"** %361, i64 1
  %364 = icmp eq %"class.base::Value"** %363, %349
  br i1 %364, label %353, label %360

365:                                              ; preds = %180, %359
  call void @_ZN6policy9PolicyMap5Entry14ClearConflictsEv(%"class.policy::PolicyMap::Entry"* %1) #17
  call void @_ZN6policy9PolicyMap5Entry20AddConflictingPolicyEOS1_(%"class.policy::PolicyMap::Entry"* %1, %"class.policy::PolicyMap::Entry"* nonnull dereferenceable(120) %11) #17
  %366 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %1, i64 0, i32 2
  store i32 7, i32* %366, align 8
  call void @_ZN6policy9PolicyMap5EntryD1Ev(%"class.policy::PolicyMap::Entry"* nonnull %11) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %182) #17
  %367 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %4, i64 0, i32 0
  %368 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_node.114"**
  %369 = load %"class.std::__1::__tree_node.114"*, %"class.std::__1::__tree_node.114"** %368, align 8
  call fastcc void @"_ZNSt3__16__treeIPKN4base5ValueEZNK6policy16PolicyListMerger7DoMergeEPNS5_9PolicyMap5EntryEE3$_0NS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE"(%"class.std::__1::__tree.80"* nonnull %367, %"class.std::__1::__tree_node.114"* %369) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %19) #17
  %370 = load %"class.base::Value"**, %"class.base::Value"*** %16, align 8
  %371 = icmp eq %"class.base::Value"** %370, null
  br i1 %371, label %376, label %372

372:                                              ; preds = %365
  %373 = ptrtoint %"class.base::Value"** %370 to i64
  %374 = bitcast %"class.base::Value"*** %17 to i64*
  store i64 %373, i64* %374, align 8
  %375 = bitcast %"class.base::Value"** %370 to i8*
  call void @_ZdlPv(i8* %375) #19
  br label %376

376:                                              ; preds = %365, %372
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #17
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6policy16PolicyListMerger30SetAllowUserCloudPolicyMergingEb(%"class.policy::PolicyListMerger"* nocapture, i1 zeroext) local_unnamed_addr #3 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.policy::PolicyListMerger", %"class.policy::PolicyListMerger"* %0, i64 0, i32 1
  store i8 %3, i8* %4, align 8
  ret void
}

declare void @_ZN6policy9PolicyMap5Entry10AddMessageENS0_11MessageTypeEi(%"class.policy::PolicyMap::Entry"*, i32, i32) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6policy16PolicyListMerger27AllowUserCloudPolicyMergingEv(%"class.policy::PolicyListMerger"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.policy::PolicyListMerger", %"class.policy::PolicyListMerger"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

declare %"class.std::__1::vector.37"* @_ZN4base5Value7GetListEv(%"class.base::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorINS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #17
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* %16, i8* %18) #17
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #17
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #17
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  ret %"class.base::Value"* %26
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__13setIPKN4base5ValueEZNK6policy16PolicyListMerger7DoMergeEPNS5_9PolicyMap5EntryEE3$_0NS_9allocatorIS4_EEE6insertEOS4_"(%"class.std::__1::set"*, %"class.base::Value"** nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node.114"**
  %5 = load %"class.std::__1::__tree_node.114"*, %"class.std::__1::__tree_node.114"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node.114"* %5, null
  br i1 %6, label %38, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  br label %9

9:                                                ; preds = %34, %7
  %10 = phi %"class.std::__1::__tree_node.114"* [ %37, %34 ], [ %5, %7 ]
  %11 = phi %"class.std::__1::__tree_node_base"** [ %36, %34 ], [ %8, %7 ]
  %12 = load %"class.base::Value"*, %"class.base::Value"** %1, align 8
  %13 = getelementptr inbounds %"class.std::__1::__tree_node.114", %"class.std::__1::__tree_node.114"* %10, i64 0, i32 1
  %14 = load %"class.base::Value"*, %"class.base::Value"** %13, align 8
  %15 = tail call zeroext i1 @_ZN4baseltERKNS_5ValueES2_(%"class.base::Value"* dereferenceable(32) %12, %"class.base::Value"* dereferenceable(32) %14) #17
  br i1 %15, label %16, label %22

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.std::__1::__tree_node.114", %"class.std::__1::__tree_node.114"* %10, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %19, label %20, label %34

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.std::__1::__tree_node.114", %"class.std::__1::__tree_node.114"* %10, i64 0, i32 0, i32 0
  br label %40

22:                                               ; preds = %9
  %23 = load %"class.base::Value"*, %"class.base::Value"** %13, align 8
  %24 = load %"class.base::Value"*, %"class.base::Value"** %1, align 8
  %25 = tail call zeroext i1 @_ZN4baseltERKNS_5ValueES2_(%"class.base::Value"* dereferenceable(32) %23, %"class.base::Value"* dereferenceable(32) %24) #17
  br i1 %25, label %26, label %32

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.std::__1::__tree_node.114", %"class.std::__1::__tree_node.114"* %10, i64 0, i32 0, i32 1
  %28 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %27, align 8
  %29 = icmp eq %"class.std::__1::__tree_node_base"* %28, null
  br i1 %29, label %30, label %34

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.std::__1::__tree_node.114", %"class.std::__1::__tree_node.114"* %10, i64 0, i32 0, i32 0
  br label %40

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.std::__1::__tree_node.114", %"class.std::__1::__tree_node.114"* %10, i64 0, i32 0, i32 0
  br label %40

34:                                               ; preds = %26, %16
  %35 = phi %"class.std::__1::__tree_node_base"* [ %18, %16 ], [ %28, %26 ]
  %36 = phi %"class.std::__1::__tree_node_base"** [ %17, %16 ], [ %27, %26 ]
  %37 = bitcast %"class.std::__1::__tree_node_base"* %35 to %"class.std::__1::__tree_node.114"*
  br label %9

38:                                               ; preds = %2
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %3, i64 0, i32 0
  br label %40

40:                                               ; preds = %38, %32, %30, %20
  %41 = phi %"class.std::__1::__tree_end_node"* [ %3, %38 ], [ %21, %20 ], [ %31, %30 ], [ %33, %32 ]
  %42 = phi %"class.std::__1::__tree_node_base"** [ %39, %38 ], [ %17, %20 ], [ %27, %30 ], [ %11, %32 ]
  %43 = bitcast %"class.std::__1::__tree_node_base"** %42 to %"class.std::__1::__tree_node.114"**
  %44 = load %"class.std::__1::__tree_node.114"*, %"class.std::__1::__tree_node.114"** %43, align 8
  %45 = icmp eq %"class.std::__1::__tree_node.114"* %44, null
  br i1 %45, label %46, label %72

46:                                               ; preds = %40
  %47 = tail call i8* @_Znwm(i64 40) #19, !noalias !3
  %48 = getelementptr inbounds i8, i8* %47, i64 32
  %49 = bitcast %"class.base::Value"** %1 to i64*
  %50 = load i64, i64* %49, align 8, !noalias !3
  %51 = bitcast i8* %48 to i64*
  store i64 %50, i64* %51, align 8, !noalias !3
  %52 = bitcast i8* %47 to %"class.std::__1::__tree_node_base"*
  %53 = getelementptr inbounds i8, i8* %47, i64 16
  %54 = bitcast i8* %53 to %"class.std::__1::__tree_end_node"**
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 0, i64 16, i1 false) #17
  store %"class.std::__1::__tree_end_node"* %41, %"class.std::__1::__tree_end_node"** %54, align 8
  %55 = bitcast %"class.std::__1::__tree_node_base"** %42 to i8**
  store i8* %47, i8** %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 0
  %57 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %56, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %57, i64 0, i32 0
  %59 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %58, align 8
  %60 = icmp eq %"class.std::__1::__tree_node_base"* %59, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %46
  %62 = ptrtoint %"class.std::__1::__tree_node_base"* %59 to i64
  %63 = bitcast %"class.std::__1::set"* %0 to i64*
  store i64 %62, i64* %63, align 8
  %64 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %42, align 8
  br label %65

65:                                               ; preds = %61, %46
  %66 = phi %"class.std::__1::__tree_node_base"* [ %52, %46 ], [ %64, %61 ]
  %67 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %68 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %67, align 8
  tail call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %68, %"class.std::__1::__tree_node_base"* %66) #17
  %69 = getelementptr inbounds %"class.std::__1::set", %"class.std::__1::set"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, 1
  store i64 %71, i64* %69, align 8
  br label %72

72:                                               ; preds = %40, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator"* @_ZN4base25CheckedContiguousIteratorINS_5ValueEEppEv(%"class.base::CheckedContiguousIterator"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #17
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* %16, i8* %18) #17
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #17
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #17
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %27 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %26, i64 1
  store %"class.base::Value"* %27, %"class.base::Value"** %7, align 8
  ret %"class.base::CheckedContiguousIterator"* %0
}

declare dereferenceable(120) %"class.policy::PolicyMap::Entry"* @_ZNK6policy9PolicyMap13EntryConflict5entryEv(%"class.policy::PolicyMap::EntryConflict"*) local_unnamed_addr #1

declare %"class.std::__1::vector.37"* @_ZNK4base5Value7GetListEv(%"class.base::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.base::Value"* @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEEdeEv(%"class.base::CheckedContiguousIterator.90"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator.90", %"class.base::CheckedContiguousIterator.90"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator.90", %"class.base::CheckedContiguousIterator.90"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #17
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* %16, i8* %18) #17
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i32 173, %"class.logging::CheckOpResult"* nonnull %3) #17
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #17
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  ret %"class.base::Value"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.base::CheckedContiguousIterator.90"* @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEppEv(%"class.base::CheckedContiguousIterator.90"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #17
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = getelementptr inbounds %"class.base::CheckedContiguousIterator.90", %"class.base::CheckedContiguousIterator.90"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.base::CheckedContiguousIterator.90", %"class.base::CheckedContiguousIterator.90"* %0, i64 0, i32 2
  %9 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9)
  %10 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %11 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %12 = icmp eq %"class.base::Value"* %10, %11
  br i1 %12, label %14, label %13

13:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* null, i8** %6, align 8
  br label %25

14:                                               ; preds = %1
  %15 = bitcast %"class.base::Value"** %7 to i8*
  %16 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %15, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #17
  %17 = bitcast %"class.base::Value"** %8 to i8*
  %18 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %17, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.6, i64 0, i64 0), i8* %16, i8* %18) #17
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %20 = load i8*, i8** %19, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9)
  store i8* %20, i8** %6, align 8
  %21 = icmp eq i8* %20, null
  br i1 %21, label %25, label %22

22:                                               ; preds = %14
  %23 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i32 110, %"class.logging::CheckOpResult"* nonnull %3) #17
  %24 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #17
  br label %25

25:                                               ; preds = %13, %14, %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #17
  %26 = load %"class.base::Value"*, %"class.base::Value"** %7, align 8
  %27 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %26, i64 1
  store %"class.base::Value"* %27, %"class.base::Value"** %7, align 8
  ret %"class.base::CheckedContiguousIterator.90"* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK6policy9PolicyMap5Entry8DeepCopyEv(%"class.policy::PolicyMap::Entry"* sret, %"class.policy::PolicyMap::Entry"*) local_unnamed_addr #1

declare void @_ZN4base5ValueC1ENS0_4TypeE(%"class.base::Value"*, i8 zeroext) unnamed_addr #1

declare void @_ZN4base5Value6AppendEOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

declare void @_ZNK4base5Value5CloneEv(%"class.base::Value"* sret, %"class.base::Value"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base5ValueD1Ev(%"class.base::Value"*) unnamed_addr #9

declare void @_ZN6policy9PolicyMap5Entry9set_valueEN4absl8optionalIN4base5ValueEEE(%"class.policy::PolicyMap::Entry"*, %"class.absl::optional"*) local_unnamed_addr #1

declare void @_ZN6policy9PolicyMap5Entry14ClearConflictsEv(%"class.policy::PolicyMap::Entry"*) local_unnamed_addr #1

declare void @_ZN6policy9PolicyMap5Entry20AddConflictingPolicyEOS1_(%"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6policy9PolicyMap5EntryD1Ev(%"class.policy::PolicyMap::Entry"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy22PolicyDictionaryMergerC2EN4base8internal9flat_treeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS1_8identityENS4_4lessIvEENS4_6vectorISA_NS8_ISA_EEEEEE(%"class.policy::PolicyDictionaryMerger"*, %"class.base::internal::flat_tree.53"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::less.92", align 1
  %4 = getelementptr inbounds %"class.policy::PolicyDictionaryMerger", %"class.policy::PolicyDictionaryMerger"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6policy22PolicyDictionaryMergerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.policy::PolicyDictionaryMerger", %"class.policy::PolicyDictionaryMerger"* %0, i64 0, i32 1
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %"class.policy::PolicyDictionaryMerger", %"class.policy::PolicyDictionaryMerger"* %0, i64 0, i32 2
  %7 = bitcast %"class.base::internal::flat_tree.53"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #17
  %8 = bitcast %"class.base::internal::flat_tree.53"* %1 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.base::internal::flat_tree.53"* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %"class.base::internal::flat_tree.53", %"class.base::internal::flat_tree.53"* %1, i64 0, i32 0, i32 0, i32 1
  %12 = bitcast %"class.std::__1::basic_string"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.policy::PolicyDictionaryMerger", %"class.policy::PolicyDictionaryMerger"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %15 = bitcast %"class.std::__1::basic_string"** %14 to i64*
  store i64 %13, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::internal::flat_tree.53", %"class.base::internal::flat_tree.53"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.std::__1::basic_string"** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.policy::PolicyDictionaryMerger", %"class.policy::PolicyDictionaryMerger"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.std::__1::basic_string"** %19 to i64*
  store i64 %18, i64* %20, align 8
  %21 = bitcast %"class.base::internal::flat_tree.53"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #17
  %22 = getelementptr inbounds %"class.policy::PolicyDictionaryMerger", %"class.policy::PolicyDictionaryMerger"* %0, i64 0, i32 3
  %23 = getelementptr inbounds %"struct.std::__1::less.92", %"struct.std::__1::less.92"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %23) #17
  call void @_ZN4base8internal9flat_treeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEEC2IPKPKcEET_SL_RKSB_(%"class.base::internal::flat_tree.53"* %22, i8** getelementptr inbounds (%"struct.std::__1::array", %"struct.std::__1::array"* @_ZN6policy12_GLOBAL__N_126kDictionaryPoliciesToMergeE, i64 0, i32 0, i64 0), i8** getelementptr inbounds (%"struct.std::__1::array", %"struct.std::__1::array"* @_ZN6policy12_GLOBAL__N_126kDictionaryPoliciesToMergeE, i64 1, i32 0, i64 0), %"struct.std::__1::less.92"* nonnull dereferenceable(1) %3)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %23) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEEC2IPKPKcEET_SL_RKSB_(%"class.base::internal::flat_tree.53"*, i8**, i8**, %"struct.std::__1::less.92"* dereferenceable(1)) unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.base::internal::flat_tree.53"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 24, i1 false) #17
  %6 = ptrtoint i8** %2 to i64
  %7 = ptrtoint i8** %1 to i64
  %8 = sub i64 %6, %7
  %9 = ashr exact i64 %8, 3
  %10 = icmp eq i64 %8, 0
  br i1 %10, label %69, label %11

11:                                               ; preds = %4
  %12 = icmp ugt i64 %9, 768614336404564650
  br i1 %12, label %13, label %15

13:                                               ; preds = %11
  %14 = bitcast %"class.base::internal::flat_tree.53"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %14) #18
  unreachable

15:                                               ; preds = %11
  %16 = mul i64 %9, 24
  %17 = tail call i8* @_Znwm(i64 %16) #19
  %18 = bitcast i8* %17 to %"class.std::__1::basic_string"*
  %19 = getelementptr inbounds %"class.base::internal::flat_tree.53", %"class.base::internal::flat_tree.53"* %0, i64 0, i32 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"** %19 to i8**
  store i8* %17, i8** %20, align 8
  %21 = bitcast %"class.base::internal::flat_tree.53"* %0 to i8**
  store i8* %17, i8** %21, align 8
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %18, i64 %9
  %23 = getelementptr inbounds %"class.base::internal::flat_tree.53", %"class.base::internal::flat_tree.53"* %0, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %22, %"class.std::__1::basic_string"** %23, align 8
  %24 = bitcast %"class.std::__1::basic_string"** %19 to i64*
  %25 = ptrtoint i8* %17 to i64
  %26 = icmp eq i8** %1, %2
  br i1 %26, label %65, label %27

27:                                               ; preds = %15
  %28 = bitcast i8* %17 to %"class.std::__1::basic_string"*
  br label %29

29:                                               ; preds = %55, %27
  %30 = phi %"class.std::__1::basic_string"* [ %59, %55 ], [ %28, %27 ]
  %31 = phi i8** [ %58, %55 ], [ %1, %27 ]
  %32 = load i8*, i8** %31, align 8
  %33 = tail call i64 @strlen(i8* %32) #17
  %34 = icmp ugt i64 %33, -17
  br i1 %34, label %35, label %37

35:                                               ; preds = %29
  %36 = bitcast %"class.std::__1::basic_string"* %30 to %"class.std::__1::__basic_string_common"*
  tail call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* %36) #18
  unreachable

37:                                               ; preds = %29
  %38 = icmp ult i64 %33, 23
  br i1 %38, label %47, label %39

39:                                               ; preds = %37
  %40 = add nuw i64 %33, 16
  %41 = and i64 %40, -16
  %42 = tail call i8* @_Znwm(i64 %41) #19
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %42, i8** %43, align 8
  %44 = or i64 %41, -9223372036854775808
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %44, i64* %45, align 8
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %33, i64* %46, align 8
  br label %53

47:                                               ; preds = %37
  %48 = trunc i64 %33 to i8
  %49 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  store i8 %48, i8* %50, align 1
  %51 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  %52 = icmp eq i64 %33, 0
  br i1 %52, label %55, label %53

53:                                               ; preds = %47, %39
  %54 = phi i8* [ %42, %39 ], [ %51, %47 ]
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %54, i8* align 1 %32, i64 %33, i1 false) #17
  br label %55

55:                                               ; preds = %53, %47
  %56 = phi i8* [ %51, %47 ], [ %54, %53 ]
  %57 = getelementptr inbounds i8, i8* %56, i64 %33
  store i8 0, i8* %57, align 1
  %58 = getelementptr inbounds i8*, i8** %31, i64 1
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 1
  %60 = icmp eq i8** %58, %2
  br i1 %60, label %61, label %29

61:                                               ; preds = %55
  %62 = ptrtoint %"class.std::__1::basic_string"* %59 to i64
  %63 = getelementptr inbounds %"class.base::internal::flat_tree.53", %"class.base::internal::flat_tree.53"* %0, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %63, align 8
  br label %65

65:                                               ; preds = %15, %61
  %66 = phi %"class.std::__1::basic_string"* [ %18, %15 ], [ %64, %61 ]
  %67 = phi i64 [ %25, %15 ], [ %62, %61 ]
  store i64 %67, i64* %24, align 8
  %68 = inttoptr i64 %67 to %"class.std::__1::basic_string"*
  br label %69

69:                                               ; preds = %4, %65
  %70 = phi %"class.std::__1::basic_string"* [ null, %4 ], [ %68, %65 ]
  %71 = phi %"class.std::__1::basic_string"* [ null, %4 ], [ %66, %65 ]
  tail call void @_ZN4base8internal9flat_treeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE15sort_and_uniqueENS2_11__wrap_iterIPS8_EESI_(%"class.base::internal::flat_tree.53"* %0, %"class.std::__1::basic_string"* %71, %"class.std::__1::basic_string"* %70) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy22PolicyDictionaryMergerD2Ev(%"class.policy::PolicyDictionaryMerger"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.policy::PolicyDictionaryMerger", %"class.policy::PolicyDictionaryMerger"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6policy22PolicyDictionaryMergerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.policy::PolicyDictionaryMerger", %"class.policy::PolicyDictionaryMerger"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.base::internal::flat_tree.53", %"class.base::internal::flat_tree.53"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = icmp eq %"class.std::__1::basic_string"* %5, null
  br i1 %6, label %29, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %9 = getelementptr inbounds %"class.policy::PolicyDictionaryMerger", %"class.policy::PolicyDictionaryMerger"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %11 = icmp eq %"class.std::__1::basic_string"* %10, %5
  br i1 %11, label %27, label %12

12:                                               ; preds = %7, %22
  %13 = phi %"class.std::__1::basic_string"* [ %14, %22 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 -1
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #19
  br label %22

22:                                               ; preds = %19, %12
  %23 = icmp eq %"class.std::__1::basic_string"* %14, %5
  br i1 %23, label %24, label %12

24:                                               ; preds = %22
  %25 = bitcast %"class.base::internal::flat_tree.53"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  store %"class.std::__1::basic_string"* %5, %"class.std::__1::basic_string"** %9, align 8
  tail call void @_ZdlPv(i8* %28) #19
  br label %29

29:                                               ; preds = %1, %27
  %30 = getelementptr inbounds %"class.policy::PolicyDictionaryMerger", %"class.policy::PolicyDictionaryMerger"* %0, i64 0, i32 2
  %31 = getelementptr inbounds %"class.base::internal::flat_tree.53", %"class.base::internal::flat_tree.53"* %30, i64 0, i32 0, i32 0, i32 0
  %32 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %31, align 8
  %33 = icmp eq %"class.std::__1::basic_string"* %32, null
  br i1 %33, label %56, label %34

34:                                               ; preds = %29
  %35 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %36 = getelementptr inbounds %"class.policy::PolicyDictionaryMerger", %"class.policy::PolicyDictionaryMerger"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %37 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %36, align 8
  %38 = icmp eq %"class.std::__1::basic_string"* %37, %32
  br i1 %38, label %54, label %39

39:                                               ; preds = %34, %49
  %40 = phi %"class.std::__1::basic_string"* [ %41, %49 ], [ %37, %34 ]
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 -1
  %42 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  br i1 %45, label %46, label %49

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  tail call void @_ZdlPv(i8* %48) #19
  br label %49

49:                                               ; preds = %46, %39
  %50 = icmp eq %"class.std::__1::basic_string"* %41, %32
  br i1 %50, label %51, label %39

51:                                               ; preds = %49
  %52 = bitcast %"class.base::internal::flat_tree.53"* %30 to i8**
  %53 = load i8*, i8** %52, align 8
  br label %54

54:                                               ; preds = %51, %34
  %55 = phi i8* [ %53, %51 ], [ %35, %34 ]
  store %"class.std::__1::basic_string"* %32, %"class.std::__1::basic_string"** %36, align 8
  tail call void @_ZdlPv(i8* %55) #19
  br label %56

56:                                               ; preds = %29, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy22PolicyDictionaryMergerD0Ev(%"class.policy::PolicyDictionaryMerger"*) unnamed_addr #0 align 2 {
  tail call void @_ZN6policy22PolicyDictionaryMergerD2Ev(%"class.policy::PolicyDictionaryMerger"* %0) #17
  %2 = bitcast %"class.policy::PolicyDictionaryMerger"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6policy22PolicyDictionaryMerger5MergeEPNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9PolicyMap5EntryENS1_4lessIS8_EENS6_INS1_4pairIKS8_SA_EEEEEE(%"class.policy::PolicyDictionaryMerger"*, %"class.std::__1::map.61"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::map.61", %"class.std::__1::map.61"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::map.61", %"class.std::__1::map.61"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = icmp eq %"class.std::__1::__tree_end_node"* %4, %5
  br i1 %6, label %7, label %8

7:                                                ; preds = %44, %2
  ret void

8:                                                ; preds = %2, %44
  %9 = phi %"class.std::__1::__tree_end_node"* [ %45, %44 ], [ %4, %2 ]
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 4
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::basic_string"*
  %12 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 7
  %13 = bitcast %"class.std::__1::__tree_end_node"* %12 to %"class.policy::PolicyMap::Entry"*
  %14 = tail call zeroext i1 @_ZNK6policy22PolicyDictionaryMerger8CanMergeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERNS_9PolicyMap5EntryE(%"class.policy::PolicyDictionaryMerger"* %0, %"class.std::__1::basic_string"* dereferenceable(24) %11, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %13)
  br i1 %14, label %15, label %16

15:                                               ; preds = %8
  tail call void @_ZNK6policy22PolicyDictionaryMerger7DoMergeEPNS_9PolicyMap5EntryE(%"class.policy::PolicyDictionaryMerger"* %0, %"class.policy::PolicyMap::Entry"* %13)
  br label %16

16:                                               ; preds = %15, %8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 1, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = bitcast %"class.std::__1::__tree_end_node"* %9 to %"class.std::__1::__tree_node_base"*
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %9, i64 2
  %23 = bitcast %"class.std::__1::__tree_end_node"* %22 to %"class.std::__1::__tree_end_node"**
  %24 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %23, align 8
  %25 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %24, i64 0, i32 0
  %26 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %25, align 8
  %27 = icmp eq %"class.std::__1::__tree_node_base"* %26, %21
  br i1 %27, label %44, label %35

28:                                               ; preds = %16, %28
  %29 = phi %"class.std::__1::__tree_node_base"* [ %31, %28 ], [ %18, %16 ]
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %29, i64 0, i32 0, i32 0
  %31 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %30, align 8
  %32 = icmp eq %"class.std::__1::__tree_node_base"* %31, null
  br i1 %32, label %33, label %28

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %29, i64 0, i32 0
  br label %44

35:                                               ; preds = %20, %35
  %36 = phi %"class.std::__1::__tree_end_node"** [ %39, %35 ], [ %23, %20 ]
  %37 = bitcast %"class.std::__1::__tree_end_node"** %36 to %"class.std::__1::__tree_node_base"**
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %40 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %40, i64 0, i32 0
  %42 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %41, align 8
  %43 = icmp eq %"class.std::__1::__tree_node_base"* %42, %38
  br i1 %43, label %44, label %35

44:                                               ; preds = %35, %20, %33
  %45 = phi %"class.std::__1::__tree_end_node"* [ %34, %33 ], [ %24, %20 ], [ %40, %35 ]
  %46 = icmp eq %"class.std::__1::__tree_end_node"* %45, %5
  br i1 %46, label %7, label %8
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK6policy22PolicyDictionaryMerger8CanMergeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEERNS_9PolicyMap5EntryE(%"class.policy::PolicyDictionaryMerger"*, %"class.std::__1::basic_string"* dereferenceable(24), %"class.policy::PolicyMap::Entry"* dereferenceable(120)) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %2, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 7
  br i1 %6, label %95, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.policy::PolicyDictionaryMerger", %"class.policy::PolicyDictionaryMerger"* %0, i64 0, i32 3
  %9 = tail call { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* } @_ZNK4base8internal9flat_treeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE11equal_rangeIS8_EENS2_4pairINS2_11__wrap_iterIPKS8_EESL_EERKT_(%"class.base::internal::flat_tree.53"* %8, %"class.std::__1::basic_string"* dereferenceable(24) %1) #17
  %10 = extractvalue { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* } %9, 0
  %11 = extractvalue { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* } %9, 1
  %12 = icmp eq %"class.std::__1::basic_string"* %10, %11
  %13 = getelementptr inbounds %"class.policy::PolicyDictionaryMerger", %"class.policy::PolicyDictionaryMerger"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %14 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %15 = select i1 %12, %"class.std::__1::basic_string"* %14, %"class.std::__1::basic_string"* %10
  %16 = icmp ne %"class.std::__1::basic_string"* %15, %14
  %17 = getelementptr inbounds %"class.policy::PolicyDictionaryMerger", %"class.policy::PolicyDictionaryMerger"* %0, i64 0, i32 2
  %18 = getelementptr inbounds %"class.base::internal::flat_tree.53", %"class.base::internal::flat_tree.53"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %20 = getelementptr inbounds %"class.policy::PolicyDictionaryMerger", %"class.policy::PolicyDictionaryMerger"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %21 = bitcast %"class.std::__1::basic_string"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = ptrtoint %"class.std::__1::basic_string"* %19 to i64
  %24 = sub i64 %22, %23
  %25 = icmp eq i64 %24, 0
  %26 = inttoptr i64 %22 to %"class.std::__1::basic_string"*
  br i1 %25, label %45, label %27

27:                                               ; preds = %7
  %28 = sdiv exact i64 %24, 24
  br label %29

29:                                               ; preds = %29, %27
  %30 = phi %"class.std::__1::basic_string"* [ %19, %27 ], [ %40, %29 ]
  %31 = phi i64 [ %28, %27 ], [ %39, %29 ]
  %32 = lshr i64 %31, 1
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 %32
  %34 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(%"class.std::__1::basic_string"* %33, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #17
  %35 = icmp slt i32 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 1
  %37 = xor i64 %32, -1
  %38 = add i64 %31, %37
  %39 = select i1 %35, i64 %38, i64 %32
  %40 = select i1 %35, %"class.std::__1::basic_string"* %36, %"class.std::__1::basic_string"* %30
  %41 = icmp eq i64 %39, 0
  br i1 %41, label %42, label %29

42:                                               ; preds = %29
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %20, align 8
  %44 = ptrtoint %"class.std::__1::basic_string"* %40 to i64
  br label %45

45:                                               ; preds = %42, %7
  %46 = phi i64 [ %44, %42 ], [ %23, %7 ]
  %47 = phi %"class.std::__1::basic_string"* [ %43, %42 ], [ %26, %7 ]
  %48 = phi %"class.std::__1::basic_string"* [ %40, %42 ], [ %19, %7 ]
  %49 = icmp eq %"class.std::__1::basic_string"* %48, %47
  br i1 %49, label %56, label %50

50:                                               ; preds = %45
  %51 = tail call i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(%"class.std::__1::basic_string"* %48, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str, i64 0, i64 0)) #17
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %50
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 1
  %55 = ptrtoint %"class.std::__1::basic_string"* %54 to i64
  br label %56

56:                                               ; preds = %53, %50, %45
  %57 = phi i64 [ %55, %53 ], [ %46, %45 ], [ %46, %50 ]
  %58 = inttoptr i64 %57 to %"class.std::__1::basic_string"*
  %59 = icmp eq %"class.std::__1::basic_string"* %48, %58
  br i1 %59, label %74, label %60

60:                                               ; preds = %56
  %61 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %20, align 8
  %62 = icmp eq %"class.std::__1::basic_string"* %48, %61
  br i1 %62, label %74, label %63

63:                                               ; preds = %60
  br i1 %16, label %64, label %95

64:                                               ; preds = %63
  %65 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %2, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %66 = load i8, i8* %65, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  %68 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %2, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %69 = select i1 %67, %"class.base::Value"* null, %"class.base::Value"* %68
  %70 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %71 = load i64, i64* %70, align 8
  %72 = trunc i64 %71 to i8
  %73 = icmp eq i8 %72, 6
  br label %95

74:                                               ; preds = %56, %60
  %75 = tail call { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* } @_ZNK4base8internal9flat_treeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE11equal_rangeIS8_EENS2_4pairINS2_11__wrap_iterIPKS8_EESL_EERKT_(%"class.base::internal::flat_tree.53"* %17, %"class.std::__1::basic_string"* dereferenceable(24) %1) #17
  %76 = extractvalue { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* } %75, 0
  %77 = extractvalue { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* } %75, 1
  %78 = icmp eq %"class.std::__1::basic_string"* %76, %77
  br i1 %78, label %95, label %79

79:                                               ; preds = %74
  %80 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %20, align 8
  %81 = icmp eq %"class.std::__1::basic_string"* %76, %80
  br i1 %81, label %95, label %82

82:                                               ; preds = %79
  br i1 %16, label %84, label %83

83:                                               ; preds = %82
  tail call void @_ZN6policy9PolicyMap5Entry10AddMessageENS0_11MessageTypeEi(%"class.policy::PolicyMap::Entry"* %2, i32 2, i32 20428) #17
  br label %95

84:                                               ; preds = %82
  %85 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %2, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %86 = load i8, i8* %85, align 8, !range !2
  %87 = icmp eq i8 %86, 0
  %88 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %2, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %89 = select i1 %87, %"class.base::Value"* null, %"class.base::Value"* %88
  %90 = getelementptr inbounds %"class.base::Value", %"class.base::Value"* %89, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = trunc i64 %91 to i8
  %93 = icmp eq i8 %92, 6
  br i1 %93, label %95, label %94

94:                                               ; preds = %84
  tail call void @_ZN6policy9PolicyMap5Entry10AddMessageENS0_11MessageTypeEi(%"class.policy::PolicyMap::Entry"* %2, i32 2, i32 20427) #17
  br label %95

95:                                               ; preds = %74, %83, %94, %64, %63, %79, %84, %3
  %96 = phi i1 [ false, %3 ], [ false, %94 ], [ false, %83 ], [ false, %63 ], [ %73, %64 ], [ false, %79 ], [ true, %84 ], [ false, %74 ]
  ret i1 %96
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6policy22PolicyDictionaryMerger7DoMergeEPNS_9PolicyMap5EntryE(%"class.policy::PolicyDictionaryMerger"* nocapture readonly, %"class.policy::PolicyMap::Entry"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::vector.93", align 8
  %4 = alloca %"class.base::DictionaryValue", align 8
  %5 = alloca %"class.base::DictionaryValue"*, align 8
  %6 = alloca %"class.base::detail::const_dict_iterator_proxy", align 8
  %7 = alloca %"class.base::detail::const_dict_iterator", align 8
  %8 = alloca %"class.base::detail::const_dict_iterator", align 8
  %9 = alloca %"class.base::Value", align 8
  %10 = alloca %"class.policy::PolicyMap::Entry", align 8
  %11 = alloca %"class.absl::optional", align 8
  %12 = bitcast %"class.std::__1::vector.93"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #17
  %13 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %3, i64 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %3, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.93", %"class.std::__1::vector.93"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = ptrtoint %"class.policy::PolicyMap::Entry"* %1 to i64
  %17 = bitcast %"class.policy::PolicyMap::Entry"*** %14 to i64*
  %18 = bitcast %"class.std::__1::vector.93"* %3 to i64*
  %19 = bitcast %"class.policy::PolicyMap::Entry"*** %15 to i64*
  %20 = tail call i8* @_Znwm(i64 8) #19
  %21 = bitcast i8* %20 to %"class.policy::PolicyMap::Entry"**
  %22 = getelementptr inbounds i8, i8* %20, i64 8
  %23 = bitcast i8* %22 to %"class.policy::PolicyMap::Entry"**
  %24 = ptrtoint i8* %22 to i64
  %25 = bitcast i8* %20 to i64*
  store i64 %16, i64* %25, align 8
  %26 = ptrtoint i8* %20 to i64
  store i64 %26, i64* %18, align 8
  store i64 %24, i64* %17, align 8
  store i64 %24, i64* %19, align 8
  %27 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %1, i64 0, i32 4, i32 0, i32 0
  %28 = load %"class.policy::PolicyMap::EntryConflict"*, %"class.policy::PolicyMap::EntryConflict"** %27, align 8
  %29 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %1, i64 0, i32 4, i32 0, i32 1
  %30 = load %"class.policy::PolicyMap::EntryConflict"*, %"class.policy::PolicyMap::EntryConflict"** %29, align 8
  %31 = icmp eq %"class.policy::PolicyMap::EntryConflict"* %28, %30
  br i1 %31, label %36, label %32

32:                                               ; preds = %2
  %33 = bitcast %"class.policy::PolicyMap::Entry"*** %14 to i64*
  %34 = bitcast %"class.std::__1::vector.93"* %3 to i64*
  %35 = bitcast %"class.policy::PolicyMap::Entry"*** %15 to i64*
  br label %58

36:                                               ; preds = %120, %2
  %37 = phi %"class.policy::PolicyMap::Entry"** [ %23, %2 ], [ %122, %120 ]
  %38 = phi %"class.policy::PolicyMap::Entry"** [ %21, %2 ], [ %121, %120 ]
  tail call fastcc void @"_ZNSt3__16__sortIRZNK6policy22PolicyDictionaryMerger7DoMergeEPNS1_9PolicyMap5EntryEE3$_1PPKS4_EEvT0_SB_T_"(%"class.policy::PolicyMap::Entry"** %38, %"class.policy::PolicyMap::Entry"** %37) #17
  %39 = bitcast %"class.base::DictionaryValue"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #17
  %40 = bitcast %"class.base::DictionaryValue"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 -86, i64 32, i1 false)
  call void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"* nonnull %4) #17
  %41 = load %"class.policy::PolicyMap::Entry"**, %"class.policy::PolicyMap::Entry"*** %13, align 8
  %42 = load %"class.policy::PolicyMap::Entry"**, %"class.policy::PolicyMap::Entry"*** %14, align 8
  %43 = icmp eq %"class.policy::PolicyMap::Entry"** %41, %42
  br i1 %43, label %128, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.policy::PolicyDictionaryMerger", %"class.policy::PolicyDictionaryMerger"* %0, i64 0, i32 1
  %46 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %1, i64 0, i32 0
  %47 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %1, i64 0, i32 1
  %48 = bitcast %"class.base::DictionaryValue"** %5 to i8*
  %49 = bitcast %"class.base::detail::const_dict_iterator_proxy"* %6 to i8*
  %50 = bitcast %"class.base::DictionaryValue"** %5 to %"class.base::Value"**
  %51 = getelementptr inbounds %"class.base::detail::const_dict_iterator_proxy", %"class.base::detail::const_dict_iterator_proxy"* %6, i64 0, i32 0
  %52 = bitcast %"class.base::detail::const_dict_iterator"* %7 to i8*
  %53 = getelementptr inbounds %"class.base::detail::const_dict_iterator", %"class.base::detail::const_dict_iterator"* %7, i64 0, i32 0, i32 0
  %54 = bitcast %"class.base::detail::const_dict_iterator"* %8 to i8*
  %55 = getelementptr inbounds %"class.base::detail::const_dict_iterator", %"class.base::detail::const_dict_iterator"* %8, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %4, i64 0, i32 0
  %57 = bitcast %"class.base::Value"* %9 to i8*
  br label %133

58:                                               ; preds = %126, %32
  %59 = phi %"class.policy::PolicyMap::Entry"** [ %21, %32 ], [ %121, %126 ]
  %60 = phi i64 [ %24, %32 ], [ %123, %126 ]
  %61 = phi %"class.policy::PolicyMap::Entry"** [ %23, %32 ], [ %127, %126 ]
  %62 = phi %"class.policy::PolicyMap::Entry"** [ %23, %32 ], [ %122, %126 ]
  %63 = phi %"class.policy::PolicyMap::EntryConflict"* [ %28, %32 ], [ %124, %126 ]
  %64 = tail call dereferenceable(120) %"class.policy::PolicyMap::Entry"* @_ZNK6policy9PolicyMap13EntryConflict5entryEv(%"class.policy::PolicyMap::EntryConflict"* %63) #17
  %65 = ptrtoint %"class.policy::PolicyMap::Entry"* %64 to i64
  %66 = icmp ult %"class.policy::PolicyMap::Entry"** %62, %61
  %67 = ptrtoint %"class.policy::PolicyMap::Entry"** %61 to i64
  br i1 %66, label %68, label %72

68:                                               ; preds = %58
  %69 = bitcast %"class.policy::PolicyMap::Entry"** %62 to i64*
  store i64 %65, i64* %69, align 8
  %70 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %62, i64 1
  %71 = ptrtoint %"class.policy::PolicyMap::Entry"** %70 to i64
  store i64 %71, i64* %33, align 8
  br label %120

72:                                               ; preds = %58
  %73 = ptrtoint %"class.policy::PolicyMap::Entry"** %62 to i64
  %74 = load i64, i64* %34, align 8
  %75 = sub i64 %73, %74
  %76 = ashr exact i64 %75, 3
  %77 = add nsw i64 %76, 1
  %78 = icmp ugt i64 %77, 2305843009213693951
  br i1 %78, label %79, label %81

79:                                               ; preds = %72
  %80 = bitcast %"class.std::__1::vector.93"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %80) #18
  unreachable

81:                                               ; preds = %72
  %82 = sub i64 %67, %74
  %83 = ashr exact i64 %82, 3
  %84 = icmp ult i64 %83, 1152921504606846975
  br i1 %84, label %85, label %93

85:                                               ; preds = %81
  %86 = ashr exact i64 %82, 2
  %87 = icmp ult i64 %86, %77
  %88 = select i1 %87, i64 %77, i64 %86
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %98, label %90

90:                                               ; preds = %85
  %91 = icmp ugt i64 %88, 2305843009213693951
  br i1 %91, label %92, label %93

92:                                               ; preds = %90
  tail call void @abort() #18
  unreachable

93:                                               ; preds = %90, %81
  %94 = phi i64 [ %88, %90 ], [ 2305843009213693951, %81 ]
  %95 = shl i64 %94, 3
  %96 = tail call i8* @_Znwm(i64 %95) #19
  %97 = bitcast i8* %96 to %"class.policy::PolicyMap::Entry"**
  br label %98

98:                                               ; preds = %93, %85
  %99 = phi i64 [ %94, %93 ], [ 0, %85 ]
  %100 = phi %"class.policy::PolicyMap::Entry"** [ %97, %93 ], [ null, %85 ]
  %101 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %100, i64 %76
  %102 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %100, i64 %99
  %103 = ptrtoint %"class.policy::PolicyMap::Entry"** %102 to i64
  %104 = bitcast %"class.policy::PolicyMap::Entry"** %101 to i64*
  store i64 %65, i64* %104, align 8
  %105 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %101, i64 1
  %106 = ptrtoint %"class.policy::PolicyMap::Entry"** %105 to i64
  %107 = sub i64 %60, %74
  %108 = ashr exact i64 %107, 3
  %109 = sub nsw i64 0, %108
  %110 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %101, i64 %109
  %111 = ptrtoint %"class.policy::PolicyMap::Entry"** %110 to i64
  %112 = icmp sgt i64 %107, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %98
  %114 = bitcast %"class.policy::PolicyMap::Entry"** %110 to i8*
  %115 = inttoptr i64 %74 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %114, i8* align 8 %115, i64 %107, i1 false) #17
  br label %116

116:                                              ; preds = %113, %98
  store i64 %111, i64* %34, align 8
  store i64 %106, i64* %33, align 8
  store i64 %103, i64* %35, align 8
  %117 = icmp eq i64 %74, 0
  br i1 %117, label %120, label %118

118:                                              ; preds = %116
  %119 = inttoptr i64 %74 to i8*
  tail call void @_ZdlPv(i8* %119) #19
  br label %120

120:                                              ; preds = %68, %116, %118
  %121 = phi %"class.policy::PolicyMap::Entry"** [ %59, %68 ], [ %110, %116 ], [ %110, %118 ]
  %122 = phi %"class.policy::PolicyMap::Entry"** [ %70, %68 ], [ %105, %116 ], [ %105, %118 ]
  %123 = phi i64 [ %71, %68 ], [ %106, %116 ], [ %106, %118 ]
  %124 = getelementptr inbounds %"class.policy::PolicyMap::EntryConflict", %"class.policy::PolicyMap::EntryConflict"* %63, i64 1
  %125 = icmp eq %"class.policy::PolicyMap::EntryConflict"* %124, %30
  br i1 %125, label %36, label %126

126:                                              ; preds = %120
  %127 = load %"class.policy::PolicyMap::Entry"**, %"class.policy::PolicyMap::Entry"*** %15, align 8
  br label %58

128:                                              ; preds = %205, %36
  %129 = phi i8 [ 0, %36 ], [ %206, %205 ]
  %130 = bitcast %"class.policy::PolicyMap::Entry"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %130) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %130, i8 -86, i64 120, i1 false)
  call void @_ZNK6policy9PolicyMap5Entry8DeepCopyEv(%"class.policy::PolicyMap::Entry"* nonnull sret %10, %"class.policy::PolicyMap::Entry"* %1) #17
  %131 = and i8 %129, 1
  %132 = icmp eq i8 %131, 0
  br i1 %132, label %216, label %209

133:                                              ; preds = %44, %205
  %134 = phi i8 [ 0, %44 ], [ %206, %205 ]
  %135 = phi %"class.policy::PolicyMap::Entry"** [ %41, %44 ], [ %207, %205 ]
  %136 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %135, align 8
  %137 = icmp ne %"class.policy::PolicyMap::Entry"* %136, %1
  br i1 %137, label %138, label %172

138:                                              ; preds = %133
  %139 = load i8, i8* %45, align 8, !range !2
  %140 = icmp ne i8 %139, 0
  %141 = call zeroext i1 @_ZNK6policy9PolicyMap5Entry7ignoredEv(%"class.policy::PolicyMap::Entry"* %136) #17
  br i1 %141, label %205, label %142

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %136, i64 0, i32 2
  %144 = load i32, i32* %143, align 8
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %205, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %136, i64 0, i32 0
  %148 = load i32, i32* %147, align 8
  %149 = load i32, i32* %46, align 8
  %150 = icmp eq i32 %148, %149
  br i1 %150, label %151, label %205

151:                                              ; preds = %146
  %152 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %136, i64 0, i32 1
  %153 = load i32, i32* %152, align 4
  %154 = load i32, i32* %47, align 4
  %155 = icmp ne i32 %153, %154
  %156 = icmp eq i32 %153, 0
  %157 = or i1 %156, %155
  br i1 %157, label %158, label %172

158:                                              ; preds = %151
  %159 = or i32 %144, 4
  %160 = icmp eq i32 %159, 6
  %161 = and i1 %160, %156
  %162 = icmp eq i32 %144, 5
  %163 = and i1 %162, %156
  %164 = xor i1 %163, true
  %165 = xor i1 %161, true
  %166 = or i1 %140, %165
  %167 = and i1 %166, %164
  br i1 %167, label %168, label %205

168:                                              ; preds = %158
  %169 = and i1 %140, %161
  %170 = icmp eq i32 %153, %154
  %171 = or i1 %170, %169
  br i1 %171, label %172, label %205

172:                                              ; preds = %151, %168, %133
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #17
  store %"class.base::DictionaryValue"* null, %"class.base::DictionaryValue"** %5, align 8
  %173 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %136, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %174 = load i8, i8* %173, align 8, !range !2
  %175 = icmp eq i8 %174, 0
  %176 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %136, i64 0, i32 5, i32 0, i32 0, i32 0, i32 1, i32 0
  %177 = select i1 %175, %"class.base::Value"* null, %"class.base::Value"* %176
  %178 = call zeroext i1 @_ZNK4base5Value15GetAsDictionaryEPPKNS_15DictionaryValueE(%"class.base::Value"* %177, %"class.base::DictionaryValue"** nonnull %5) #17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #17
  %179 = load %"class.base::Value"*, %"class.base::Value"** %50, align 8
  %180 = call %"class.base::flat_map"* @_ZNK4base5Value9DictItemsEv(%"class.base::Value"* %179) #17
  store %"class.base::flat_map"* %180, %"class.base::flat_map"** %51, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #17
  store %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"struct.std::__1::pair"** %53, align 8
  call void @_ZNK4base6detail25const_dict_iterator_proxy5beginEv(%"class.base::detail::const_dict_iterator"* nonnull sret %7, %"class.base::detail::const_dict_iterator_proxy"* nonnull %6) #17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #17
  store %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), %"struct.std::__1::pair"** %55, align 8
  call void @_ZNK4base6detail25const_dict_iterator_proxy3endEv(%"class.base::detail::const_dict_iterator"* nonnull sret %8, %"class.base::detail::const_dict_iterator_proxy"* nonnull %6) #17
  %181 = call zeroext i1 @_ZN4base6detailneERKNS0_19const_dict_iteratorES3_(%"class.base::detail::const_dict_iterator"* nonnull dereferenceable(8) %7, %"class.base::detail::const_dict_iterator"* nonnull dereferenceable(8) %8) #17
  br i1 %181, label %186, label %182

182:                                              ; preds = %186, %172
  call void @_ZN4base6detail19const_dict_iteratorD1Ev(%"class.base::detail::const_dict_iterator"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #17
  call void @_ZN4base6detail19const_dict_iteratorD1Ev(%"class.base::detail::const_dict_iterator"* nonnull %7) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #17
  %183 = zext i1 %137 to i8
  %184 = and i8 %134, 1
  %185 = or i8 %184, %183
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #17
  br label %205

186:                                              ; preds = %172, %186
  %187 = call { %"class.std::__1::basic_string"*, %"class.base::Value"* } @_ZNK4base6detail19const_dict_iteratordeEv(%"class.base::detail::const_dict_iterator"* nonnull %7) #17
  %188 = extractvalue { %"class.std::__1::basic_string"*, %"class.base::Value"* } %187, 0
  %189 = extractvalue { %"class.std::__1::basic_string"*, %"class.base::Value"* } %187, 1
  %190 = bitcast %"class.std::__1::basic_string"* %188 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %191 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %190, i64 0, i32 1, i32 0
  %192 = load i8, i8* %191, align 1
  %193 = icmp slt i8 %192, 0
  %194 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %188, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %195 = load i8*, i8** %194, align 8
  %196 = bitcast %"class.std::__1::basic_string"* %188 to i8*
  %197 = select i1 %193, i8* %195, i8* %196
  %198 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %188, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %199 = load i64, i64* %198, align 8
  %200 = zext i8 %192 to i64
  %201 = select i1 %193, i64 %199, i64 %200
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %57) #17
  call void @_ZNK4base5Value5CloneEv(%"class.base::Value"* nonnull sret %9, %"class.base::Value"* %189) #17
  %202 = call %"class.base::Value"* @_ZN4base5Value6SetKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEOS0_(%"class.base::Value"* nonnull %56, i8* %197, i64 %201, %"class.base::Value"* nonnull dereferenceable(32) %9) #17
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* nonnull %9) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %57) #17
  %203 = call dereferenceable(8) %"class.base::detail::const_dict_iterator"* @_ZN4base6detail19const_dict_iteratorppEv(%"class.base::detail::const_dict_iterator"* nonnull %7) #17
  %204 = call zeroext i1 @_ZN4base6detailneERKNS0_19const_dict_iteratorES3_(%"class.base::detail::const_dict_iterator"* nonnull dereferenceable(8) %7, %"class.base::detail::const_dict_iterator"* nonnull dereferenceable(8) %8) #17
  br i1 %204, label %186, label %182

205:                                              ; preds = %158, %138, %142, %146, %168, %182
  %206 = phi i8 [ %185, %182 ], [ %134, %168 ], [ %134, %146 ], [ %134, %142 ], [ %134, %138 ], [ %134, %158 ]
  %207 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %135, i64 1
  %208 = icmp eq %"class.policy::PolicyMap::Entry"** %207, %42
  br i1 %208, label %128, label %133

209:                                              ; preds = %128
  %210 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %210, align 8
  %211 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %212 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %4, i64 0, i32 0
  call void @_ZN4base5ValueC1EOS0_(%"class.base::Value"* %211, %"class.base::Value"* nonnull dereferenceable(32) %212) #17
  call void @_ZN6policy9PolicyMap5Entry9set_valueEN4absl8optionalIN4base5ValueEEE(%"class.policy::PolicyMap::Entry"* %1, %"class.absl::optional"* nonnull %11) #17
  %213 = load i8, i8* %210, align 8, !range !2
  %214 = icmp eq i8 %213, 0
  br i1 %214, label %216, label %215

215:                                              ; preds = %209
  call void @_ZN4base5ValueD1Ev(%"class.base::Value"* %211) #17
  store i8 0, i8* %210, align 8
  br label %216

216:                                              ; preds = %215, %209, %128
  call void @_ZN6policy9PolicyMap5Entry14ClearConflictsEv(%"class.policy::PolicyMap::Entry"* %1) #17
  call void @_ZN6policy9PolicyMap5Entry20AddConflictingPolicyEOS1_(%"class.policy::PolicyMap::Entry"* %1, %"class.policy::PolicyMap::Entry"* nonnull dereferenceable(120) %10) #17
  %217 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %1, i64 0, i32 2
  store i32 7, i32* %217, align 8
  call void @_ZN6policy9PolicyMap5EntryD1Ev(%"class.policy::PolicyMap::Entry"* nonnull %10) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %130) #17
  %218 = getelementptr inbounds %"class.base::DictionaryValue", %"class.base::DictionaryValue"* %4, i64 0, i32 0
  call void @_ZN4base5ValueD2Ev(%"class.base::Value"* nonnull %218) #17
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #17
  %219 = load %"class.policy::PolicyMap::Entry"**, %"class.policy::PolicyMap::Entry"*** %13, align 8
  %220 = icmp eq %"class.policy::PolicyMap::Entry"** %219, null
  br i1 %220, label %225, label %221

221:                                              ; preds = %216
  %222 = ptrtoint %"class.policy::PolicyMap::Entry"** %219 to i64
  %223 = bitcast %"class.policy::PolicyMap::Entry"*** %14 to i64*
  store i64 %222, i64* %223, align 8
  %224 = bitcast %"class.policy::PolicyMap::Entry"** %219 to i8*
  call void @_ZdlPv(i8* %224) #19
  br label %225

225:                                              ; preds = %216, %221
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6policy22PolicyDictionaryMerger28SetAllowedPoliciesForTestingEN4base8internal9flat_treeINSt3__112basic_stringIcNS4_11char_traitsIcEENS4_9allocatorIcEEEENS1_8identityENS4_4lessIvEENS4_6vectorISA_NS8_ISA_EEEEEE(%"class.policy::PolicyDictionaryMerger"* nocapture, %"class.base::internal::flat_tree.53"* nocapture) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.policy::PolicyDictionaryMerger", %"class.policy::PolicyDictionaryMerger"* %0, i64 0, i32 3
  %4 = getelementptr inbounds %"class.base::internal::flat_tree.53", %"class.base::internal::flat_tree.53"* %3, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %4, align 8
  %6 = icmp eq %"class.std::__1::basic_string"* %5, null
  br i1 %6, label %30, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  %9 = getelementptr inbounds %"class.policy::PolicyDictionaryMerger", %"class.policy::PolicyDictionaryMerger"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %10 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %9, align 8
  %11 = icmp eq %"class.std::__1::basic_string"* %10, %5
  br i1 %11, label %27, label %12

12:                                               ; preds = %7, %22
  %13 = phi %"class.std::__1::basic_string"* [ %14, %22 ], [ %10, %7 ]
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 -1
  %15 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  br i1 %18, label %19, label %22

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load i8*, i8** %20, align 8
  tail call void @_ZdlPv(i8* %21) #19
  br label %22

22:                                               ; preds = %19, %12
  %23 = icmp eq %"class.std::__1::basic_string"* %14, %5
  br i1 %23, label %24, label %12

24:                                               ; preds = %22
  %25 = bitcast %"class.base::internal::flat_tree.53"* %3 to i8**
  %26 = load i8*, i8** %25, align 8
  br label %27

27:                                               ; preds = %24, %7
  %28 = phi i8* [ %26, %24 ], [ %8, %7 ]
  store %"class.std::__1::basic_string"* %5, %"class.std::__1::basic_string"** %9, align 8
  tail call void @_ZdlPv(i8* %28) #19
  %29 = bitcast %"class.base::internal::flat_tree.53"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #17
  br label %30

30:                                               ; preds = %2, %27
  %31 = bitcast %"class.base::internal::flat_tree.53"* %1 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.base::internal::flat_tree.53"* %3 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.base::internal::flat_tree.53", %"class.base::internal::flat_tree.53"* %1, i64 0, i32 0, i32 0, i32 1
  %35 = bitcast %"class.std::__1::basic_string"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"class.policy::PolicyDictionaryMerger", %"class.policy::PolicyDictionaryMerger"* %0, i64 0, i32 3, i32 0, i32 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string"** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = getelementptr inbounds %"class.base::internal::flat_tree.53", %"class.base::internal::flat_tree.53"* %1, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast %"class.std::__1::basic_string"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"class.policy::PolicyDictionaryMerger", %"class.policy::PolicyDictionaryMerger"* %0, i64 0, i32 3, i32 0, i32 0, i32 2, i32 0, i32 0
  %43 = bitcast %"class.std::__1::basic_string"** %42 to i64*
  store i64 %41, i64* %43, align 8
  %44 = bitcast %"class.base::internal::flat_tree.53"* %1 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #17
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN6policy22PolicyDictionaryMerger30SetAllowUserCloudPolicyMergingEb(%"class.policy::PolicyDictionaryMerger"* nocapture, i1 zeroext) local_unnamed_addr #3 align 2 {
  %3 = zext i1 %1 to i8
  %4 = getelementptr inbounds %"class.policy::PolicyDictionaryMerger", %"class.policy::PolicyDictionaryMerger"* %0, i64 0, i32 1
  store i8 %3, i8* %4, align 8
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK6policy22PolicyDictionaryMerger27AllowUserCloudPolicyMergingEv(%"class.policy::PolicyDictionaryMerger"* nocapture readonly) local_unnamed_addr #8 align 2 {
  %2 = getelementptr inbounds %"class.policy::PolicyDictionaryMerger", %"class.policy::PolicyDictionaryMerger"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp ne i8 %3, 0
  ret i1 %4
}

declare void @_ZN4base15DictionaryValueC1Ev(%"class.base::DictionaryValue"*) unnamed_addr #1

declare zeroext i1 @_ZNK4base5Value15GetAsDictionaryEPPKNS_15DictionaryValueE(%"class.base::Value"*, %"class.base::DictionaryValue"**) local_unnamed_addr #1

declare %"class.base::flat_map"* @_ZNK4base5Value9DictItemsEv(%"class.base::Value"*) local_unnamed_addr #1

declare void @_ZNK4base6detail25const_dict_iterator_proxy5beginEv(%"class.base::detail::const_dict_iterator"* sret, %"class.base::detail::const_dict_iterator_proxy"*) local_unnamed_addr #1

declare void @_ZNK4base6detail25const_dict_iterator_proxy3endEv(%"class.base::detail::const_dict_iterator"* sret, %"class.base::detail::const_dict_iterator_proxy"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base6detailneERKNS0_19const_dict_iteratorES3_(%"class.base::detail::const_dict_iterator"* dereferenceable(8), %"class.base::detail::const_dict_iterator"* dereferenceable(8)) local_unnamed_addr #1

declare { %"class.std::__1::basic_string"*, %"class.base::Value"* } @_ZNK4base6detail19const_dict_iteratordeEv(%"class.base::detail::const_dict_iterator"*) local_unnamed_addr #1

declare %"class.base::Value"* @_ZN4base5Value6SetKeyENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEEOS0_(%"class.base::Value"*, i8*, i64, %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

declare dereferenceable(8) %"class.base::detail::const_dict_iterator"* @_ZN4base6detail19const_dict_iteratorppEv(%"class.base::detail::const_dict_iterator"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base6detail19const_dict_iteratorD1Ev(%"class.base::detail::const_dict_iterator"*) unnamed_addr #9

; Function Attrs: nounwind
declare void @_ZN4base5ValueD2Ev(%"class.base::Value"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6policy17PolicyGroupMerger5MergeEPNSt3__13mapINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS_9PolicyMap5EntryENS1_4lessIS8_EENS6_INS1_4pairIKS8_SA_EEEEEE(%"class.policy::PolicyGroupMerger"* nocapture readnone, %"class.std::__1::map.61"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.policy::PolicyMap::Entry", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.policy::PolicyMap::Entry", align 8
  %6 = alloca %"class.policy::PolicyMap::Entry", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = load i64, i64* @_ZN6policy32kPolicyAtomicGroupMappingsLengthE, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %29, label %10

10:                                               ; preds = %2
  %11 = bitcast %"class.policy::PolicyMap::Entry"* %3 to i8*
  %12 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.std::__1::map.61", %"class.std::__1::map.61"* %1, i64 0, i32 0
  %19 = getelementptr inbounds %"class.std::__1::map.61", %"class.std::__1::map.61"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %20 = bitcast %"class.policy::PolicyMap::Entry"* %5 to i8*
  %21 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %3, i64 0, i32 2
  %22 = bitcast %"class.policy::PolicyMap::Entry"* %6 to i8*
  %23 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  br label %30

29:                                               ; preds = %155, %2
  ret void

30:                                               ; preds = %10, %155
  %31 = phi i64 [ 0, %10 ], [ %156, %155 ]
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %11) #17
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 120, i1 false)
  call void @_ZN6policy9PolicyMap5EntryC1Ev(%"class.policy::PolicyMap::Entry"* nonnull %3) #17
  %32 = getelementptr inbounds [0 x %"struct.policy::AtomicGroup"], [0 x %"struct.policy::AtomicGroup"]* @_ZN6policy26kPolicyAtomicGroupMappingsE, i64 0, i64 %31, i32 2
  %33 = load i8**, i8*** %32, align 8
  %34 = load i8*, i8** %33, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %155, label %39

36:                                               ; preds = %104
  %37 = and i8 %105, 1
  %38 = icmp eq i8 %37, 0
  br i1 %38, label %155, label %109

39:                                               ; preds = %30, %104
  %40 = phi i8* [ %107, %104 ], [ %34, %30 ]
  %41 = phi i8** [ %106, %104 ], [ %33, %30 ]
  %42 = phi i8 [ %105, %104 ], [ 0, %30 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12) #17
  %43 = call i64 @strlen(i8* nonnull %40) #17
  %44 = icmp ugt i64 %43, -17
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = bitcast %"class.std::__1::basic_string"* %4 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %46) #18
  unreachable

47:                                               ; preds = %39
  %48 = icmp ult i64 %43, 23
  br i1 %48, label %54, label %49

49:                                               ; preds = %47
  %50 = add nuw i64 %43, 16
  %51 = and i64 %50, -16
  %52 = call i8* @_Znwm(i64 %51) #19
  store i8* %52, i8** %13, align 8
  %53 = or i64 %51, -9223372036854775808
  store i64 %53, i64* %14, align 8
  store i64 %43, i64* %15, align 8
  br label %57

54:                                               ; preds = %47
  %55 = trunc i64 %43 to i8
  store i8 %55, i8* %17, align 1
  %56 = icmp eq i64 %43, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %54, %49
  %58 = phi i8* [ %52, %49 ], [ %12, %54 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %58, i8* nonnull align 1 %40, i64 %43, i1 false) #17
  br label %59

59:                                               ; preds = %54, %57
  %60 = phi i8* [ %12, %54 ], [ %58, %57 ]
  %61 = getelementptr inbounds i8, i8* %60, i64 %43
  store i8 0, i8* %61, align 1
  %62 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy9PolicyMap5EntryEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEElEERKT_(%"class.std::__1::__tree.62"* %18, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %4) #17
  %63 = load i8, i8* %17, align 1
  %64 = icmp slt i8 %63, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %59
  %66 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %66) #19
  br label %67

67:                                               ; preds = %59, %65
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12) #17
  %68 = icmp eq %"class.std::__1::__tree_end_node"* %62, %19
  br i1 %68, label %104, label %69

69:                                               ; preds = %67
  %70 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %62, i64 7
  %71 = bitcast %"class.std::__1::__tree_end_node"* %70 to %"class.policy::PolicyMap::Entry"*
  %72 = call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %71, %"class.policy::PolicyMap::Entry"* nonnull dereferenceable(120) %3) #17
  br i1 %72, label %73, label %104

73:                                               ; preds = %69
  %74 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %62, i64 8
  %75 = bitcast %"class.std::__1::__tree_end_node"* %74 to i32*
  %76 = load i32, i32* %75, align 8
  %77 = icmp eq i32 %76, 7
  br i1 %77, label %80, label %78

78:                                               ; preds = %73
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %20) #17
  call void @_ZNK6policy9PolicyMap5Entry8DeepCopyEv(%"class.policy::PolicyMap::Entry"* nonnull sret %5, %"class.policy::PolicyMap::Entry"* %71) #17
  %79 = call dereferenceable(120) %"class.policy::PolicyMap::Entry"* @_ZN6policy9PolicyMap5EntryaSEOS1_(%"class.policy::PolicyMap::Entry"* nonnull %3, %"class.policy::PolicyMap::Entry"* nonnull dereferenceable(120) %5) #17
  call void @_ZN6policy9PolicyMap5EntryD1Ev(%"class.policy::PolicyMap::Entry"* nonnull %5) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %20) #17
  br label %104

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %62, i64 10
  %82 = bitcast %"class.std::__1::__tree_end_node"* %81 to %"class.policy::PolicyMap::EntryConflict"**
  %83 = load %"class.policy::PolicyMap::EntryConflict"*, %"class.policy::PolicyMap::EntryConflict"** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %62, i64 11
  %85 = bitcast %"class.std::__1::__tree_end_node"* %84 to %"class.policy::PolicyMap::EntryConflict"**
  %86 = load %"class.policy::PolicyMap::EntryConflict"*, %"class.policy::PolicyMap::EntryConflict"** %85, align 8
  %87 = icmp eq %"class.policy::PolicyMap::EntryConflict"* %83, %86
  br i1 %87, label %104, label %88

88:                                               ; preds = %80, %101
  %89 = phi %"class.policy::PolicyMap::EntryConflict"* [ %102, %101 ], [ %83, %80 ]
  %90 = call dereferenceable(120) %"class.policy::PolicyMap::Entry"* @_ZNK6policy9PolicyMap13EntryConflict5entryEv(%"class.policy::PolicyMap::EntryConflict"* %89) #17
  %91 = call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %90, %"class.policy::PolicyMap::Entry"* nonnull dereferenceable(120) %3) #17
  br i1 %91, label %92, label %101

92:                                               ; preds = %88
  %93 = call dereferenceable(120) %"class.policy::PolicyMap::Entry"* @_ZNK6policy9PolicyMap13EntryConflict5entryEv(%"class.policy::PolicyMap::EntryConflict"* %89) #17
  %94 = getelementptr inbounds %"class.policy::PolicyMap::Entry", %"class.policy::PolicyMap::Entry"* %93, i64 0, i32 2
  %95 = load i32, i32* %94, align 8
  %96 = load i32, i32* %21, align 8
  %97 = icmp sgt i32 %95, %96
  br i1 %97, label %98, label %101

98:                                               ; preds = %92
  call void @llvm.lifetime.start.p0i8(i64 120, i8* nonnull %22) #17
  %99 = call dereferenceable(120) %"class.policy::PolicyMap::Entry"* @_ZNK6policy9PolicyMap13EntryConflict5entryEv(%"class.policy::PolicyMap::EntryConflict"* %89) #17
  call void @_ZNK6policy9PolicyMap5Entry8DeepCopyEv(%"class.policy::PolicyMap::Entry"* nonnull sret %6, %"class.policy::PolicyMap::Entry"* %99) #17
  %100 = call dereferenceable(120) %"class.policy::PolicyMap::Entry"* @_ZN6policy9PolicyMap5EntryaSEOS1_(%"class.policy::PolicyMap::Entry"* nonnull %3, %"class.policy::PolicyMap::Entry"* nonnull dereferenceable(120) %6) #17
  call void @_ZN6policy9PolicyMap5EntryD1Ev(%"class.policy::PolicyMap::Entry"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %22) #17
  br label %101

101:                                              ; preds = %98, %92, %88
  %102 = getelementptr inbounds %"class.policy::PolicyMap::EntryConflict", %"class.policy::PolicyMap::EntryConflict"* %89, i64 1
  %103 = icmp eq %"class.policy::PolicyMap::EntryConflict"* %102, %86
  br i1 %103, label %104, label %88

104:                                              ; preds = %101, %80, %69, %78, %67
  %105 = phi i8 [ %42, %67 ], [ 1, %78 ], [ 1, %69 ], [ 1, %80 ], [ 1, %101 ]
  %106 = getelementptr inbounds i8*, i8** %41, i64 1
  %107 = load i8*, i8** %106, align 8
  %108 = icmp eq i8* %107, null
  br i1 %108, label %36, label %39

109:                                              ; preds = %36
  %110 = load i8**, i8*** %32, align 8
  %111 = load i8*, i8** %110, align 8
  %112 = icmp eq i8* %111, null
  br i1 %112, label %155, label %113

113:                                              ; preds = %109, %151
  %114 = phi i8* [ %153, %151 ], [ %111, %109 ]
  %115 = phi i8** [ %152, %151 ], [ %110, %109 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #17
  %116 = call i64 @strlen(i8* nonnull %114) #17
  %117 = icmp ugt i64 %116, -17
  br i1 %117, label %118, label %120

118:                                              ; preds = %113
  %119 = bitcast %"class.std::__1::basic_string"* %7 to %"class.std::__1::__basic_string_common"*
  call void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"* nonnull %119) #18
  unreachable

120:                                              ; preds = %113
  %121 = icmp ult i64 %116, 23
  br i1 %121, label %127, label %122

122:                                              ; preds = %120
  %123 = add nuw i64 %116, 16
  %124 = and i64 %123, -16
  %125 = call i8* @_Znwm(i64 %124) #19
  store i8* %125, i8** %24, align 8
  %126 = or i64 %124, -9223372036854775808
  store i64 %126, i64* %25, align 8
  store i64 %116, i64* %26, align 8
  br label %130

127:                                              ; preds = %120
  %128 = trunc i64 %116 to i8
  store i8 %128, i8* %28, align 1
  %129 = icmp eq i64 %116, 0
  br i1 %129, label %132, label %130

130:                                              ; preds = %127, %122
  %131 = phi i8* [ %125, %122 ], [ %23, %127 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %131, i8* nonnull align 1 %114, i64 %116, i1 false) #17
  br label %132

132:                                              ; preds = %127, %130
  %133 = phi i8* [ %23, %127 ], [ %131, %130 ]
  %134 = getelementptr inbounds i8, i8* %133, i64 %116
  store i8 0, i8* %134, align 1
  %135 = call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy9PolicyMap5EntryEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEElEERKT_(%"class.std::__1::__tree.62"* %18, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %7) #17
  %136 = load i8, i8* %28, align 1
  %137 = icmp slt i8 %136, 0
  br i1 %137, label %138, label %140

138:                                              ; preds = %132
  %139 = load i8*, i8** %24, align 8
  call void @_ZdlPv(i8* %139) #19
  br label %140

140:                                              ; preds = %132, %138
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #17
  %141 = icmp eq %"class.std::__1::__tree_end_node"* %135, %19
  br i1 %141, label %151, label %142

142:                                              ; preds = %140
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %135, i64 8
  %144 = bitcast %"class.std::__1::__tree_end_node"* %143 to i32*
  %145 = load i32, i32* %144, align 8
  %146 = load i32, i32* %21, align 8
  %147 = icmp slt i32 %145, %146
  br i1 %147, label %148, label %151

148:                                              ; preds = %142
  %149 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %135, i64 7
  %150 = bitcast %"class.std::__1::__tree_end_node"* %149 to %"class.policy::PolicyMap::Entry"*
  call void @_ZN6policy9PolicyMap5Entry29SetIgnoredByPolicyAtomicGroupEv(%"class.policy::PolicyMap::Entry"* %150) #17
  br label %151

151:                                              ; preds = %142, %148, %140
  %152 = getelementptr inbounds i8*, i8** %115, i64 1
  %153 = load i8*, i8** %152, align 8
  %154 = icmp eq i8* %153, null
  br i1 %154, label %155, label %113

155:                                              ; preds = %151, %30, %109, %36
  call void @_ZN6policy9PolicyMap5EntryD1Ev(%"class.policy::PolicyMap::Entry"* nonnull %3) #17
  call void @llvm.lifetime.end.p0i8(i64 120, i8* nonnull %11) #17
  %156 = add nuw i64 %31, 1
  %157 = icmp ult i64 %156, %8
  br i1 %157, label %30, label %29
}

declare void @_ZN6policy9PolicyMap5EntryC1Ev(%"class.policy::PolicyMap::Entry"*) unnamed_addr #1

declare zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"* dereferenceable(120)) local_unnamed_addr #1

; Function Attrs: nounwind
declare dereferenceable(120) %"class.policy::PolicyMap::Entry"* @_ZN6policy9PolicyMap5EntryaSEOS1_(%"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"* dereferenceable(120)) local_unnamed_addr #9

declare void @_ZN6policy9PolicyMap5Entry29SetIgnoredByPolicyAtomicGroupEv(%"class.policy::PolicyMap::Entry"*) local_unnamed_addr #1

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorINS_5ValueEEC2EPKS1_PS1_S4_(%"class.base::CheckedContiguousIterator"*, %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.base::Value"*, align 8
  %8 = alloca %"class.base::Value"*, align 8
  %9 = alloca %"class.base::Value"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"class.base::Value"* %1, %"class.base::Value"** %7, align 8
  store %"class.base::Value"* %2, %"class.base::Value"** %8, align 8
  store %"class.base::Value"* %3, %"class.base::Value"** %9, align 8
  %14 = ptrtoint %"class.base::Value"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 1
  %17 = ptrtoint %"class.base::Value"* %2 to i64
  %18 = bitcast %"class.base::Value"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %20 = ptrtoint %"class.base::Value"* %3 to i64
  %21 = bitcast %"class.base::Value"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #17
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"class.base::Value"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"class.base::Value"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #17
  %30 = bitcast %"class.base::Value"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i8* %29, i8* %31) #17
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #17
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #17
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #17
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #17
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %43 = load %"class.base::Value"*, %"class.base::Value"** %9, align 8
  %44 = icmp ugt %"class.base::Value"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"class.base::Value"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_) #17
  %49 = bitcast %"class.base::Value"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i8* %48, i8* %50) #17
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #17
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #17
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #17
  ret void
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #9

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8*, void (%"class.std::__1::basic_ostream"*, i8*)*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #10 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #17
  ret void
}

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZZN7logging15CheckOpValueStrIPN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS4_14remove_pointerIS6_E4typeEEE5valueEPcE4typeES8_ENUlRNS4_13basic_ostreamIcNS4_11char_traitsIcEEEEPKvE_8__invokeESJ_SL_(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*) #10 comdat align 2 {
  %3 = bitcast i8* %1 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = tail call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %0, i8* %4) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorINS_5ValueEE15CheckComparableERKS2_(%"class.base::CheckedContiguousIterator"*, %"class.base::CheckedContiguousIterator"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"class.base::Value"*, %"class.base::Value"** %11, align 8
  %15 = load %"class.base::Value"*, %"class.base::Value"** %12, align 8
  %16 = icmp eq %"class.base::Value"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #17
  %21 = bitcast %"class.base::CheckedContiguousIterator"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %20, i8* %22) #17
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #17
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #17
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #17
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator", %"class.base::CheckedContiguousIterator"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"class.base::Value"*, %"class.base::Value"** %32, align 8
  %36 = load %"class.base::Value"*, %"class.base::Value"** %33, align 8
  %37 = icmp eq %"class.base::Value"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"class.base::Value"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #17
  %42 = bitcast %"class.base::Value"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0), i8* %41, i8* %43) #17
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #17
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #17
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base25CheckedContiguousIteratorIKNS_5ValueEEC2EPS2_S4_S4_(%"class.base::CheckedContiguousIterator.90"*, %"class.base::Value"*, %"class.base::Value"*, %"class.base::Value"*) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.base::Value"*, align 8
  %8 = alloca %"class.base::Value"*, align 8
  %9 = alloca %"class.base::Value"*, align 8
  %10 = alloca %"class.logging::CheckOpResult", align 8
  %11 = alloca %"class.logging::CheckError", align 8
  %12 = alloca %"class.logging::CheckOpResult", align 8
  %13 = alloca %"class.logging::CheckError", align 8
  store %"class.base::Value"* %1, %"class.base::Value"** %7, align 8
  store %"class.base::Value"* %2, %"class.base::Value"** %8, align 8
  store %"class.base::Value"* %3, %"class.base::Value"** %9, align 8
  %14 = ptrtoint %"class.base::Value"* %1 to i64
  %15 = bitcast %"class.base::CheckedContiguousIterator.90"* %0 to i64*
  store i64 %14, i64* %15, align 8
  %16 = getelementptr inbounds %"class.base::CheckedContiguousIterator.90", %"class.base::CheckedContiguousIterator.90"* %0, i64 0, i32 1
  %17 = ptrtoint %"class.base::Value"* %2 to i64
  %18 = bitcast %"class.base::Value"** %16 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.base::CheckedContiguousIterator.90", %"class.base::CheckedContiguousIterator.90"* %0, i64 0, i32 2
  %20 = ptrtoint %"class.base::Value"* %3 to i64
  %21 = bitcast %"class.base::Value"** %19 to i64*
  store i64 %20, i64* %21, align 8
  %22 = bitcast %"class.logging::CheckOpResult"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #17
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %10, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %23, align 8
  %24 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24)
  %25 = icmp ugt %"class.base::Value"* %1, %2
  br i1 %25, label %27, label %26

26:                                               ; preds = %4
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* null, i8** %23, align 8
  br label %38

27:                                               ; preds = %4
  %28 = bitcast %"class.base::Value"** %7 to i8*
  %29 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %28, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #17
  %30 = bitcast %"class.base::Value"** %8 to i8*
  %31 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %30, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.1, i64 0, i64 0), i8* %29, i8* %31) #17
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24)
  store i8* %33, i8** %23, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %27
  %36 = bitcast %"class.logging::CheckError"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %11, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i32 45, %"class.logging::CheckOpResult"* nonnull %10) #17
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %11) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %11) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #17
  br label %38

38:                                               ; preds = %26, %27, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #17
  %39 = bitcast %"class.logging::CheckOpResult"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #17
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %12, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = load %"class.base::Value"*, %"class.base::Value"** %8, align 8
  %43 = load %"class.base::Value"*, %"class.base::Value"** %9, align 8
  %44 = icmp ugt %"class.base::Value"* %42, %43
  br i1 %44, label %46, label %45

45:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %57

46:                                               ; preds = %38
  %47 = bitcast %"class.base::Value"** %8 to i8*
  %48 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %47, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #17
  %49 = bitcast %"class.base::Value"** %9 to i8*
  %50 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* nonnull %49, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %5, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i8* %48, i8* %50) #17
  %51 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  %52 = load i8*, i8** %51, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %52, i8** %40, align 8
  %53 = icmp eq i8* %52, null
  br i1 %53, label %57, label %54

54:                                               ; preds = %46
  %55 = bitcast %"class.logging::CheckError"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %55) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %13, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i32 46, %"class.logging::CheckOpResult"* nonnull %12) #17
  %56 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %13) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %13) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %55) #17
  br label %57

57:                                               ; preds = %45, %46, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK4base25CheckedContiguousIteratorIKNS_5ValueEE15CheckComparableERKS3_(%"class.base::CheckedContiguousIterator.90"*, %"class.base::CheckedContiguousIterator.90"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #17
  %10 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %10, align 8
  %11 = getelementptr inbounds %"class.base::CheckedContiguousIterator.90", %"class.base::CheckedContiguousIterator.90"* %0, i64 0, i32 0
  %12 = getelementptr inbounds %"class.base::CheckedContiguousIterator.90", %"class.base::CheckedContiguousIterator.90"* %1, i64 0, i32 0
  %13 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13)
  %14 = load %"class.base::Value"*, %"class.base::Value"** %11, align 8
  %15 = load %"class.base::Value"*, %"class.base::Value"** %12, align 8
  %16 = icmp eq %"class.base::Value"* %14, %15
  br i1 %16, label %17, label %18

17:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* null, i8** %10, align 8
  br label %29

18:                                               ; preds = %2
  %19 = bitcast %"class.base::CheckedContiguousIterator.90"* %0 to i8*
  %20 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %19, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #17
  %21 = bitcast %"class.base::CheckedContiguousIterator.90"* %1 to i8*
  %22 = tail call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %21, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %4, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.4, i64 0, i64 0), i8* %20, i8* %22) #17
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13)
  store i8* %24, i8** %10, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %18
  %27 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i32 206, %"class.logging::CheckOpResult"* nonnull %5) #17
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #17
  br label %29

29:                                               ; preds = %17, %18, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #17
  %30 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #17
  %31 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %31, align 8
  %32 = getelementptr inbounds %"class.base::CheckedContiguousIterator.90", %"class.base::CheckedContiguousIterator.90"* %0, i64 0, i32 2
  %33 = getelementptr inbounds %"class.base::CheckedContiguousIterator.90", %"class.base::CheckedContiguousIterator.90"* %1, i64 0, i32 2
  %34 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = load %"class.base::Value"*, %"class.base::Value"** %32, align 8
  %36 = load %"class.base::Value"*, %"class.base::Value"** %33, align 8
  %37 = icmp eq %"class.base::Value"* %35, %36
  br i1 %37, label %38, label %39

38:                                               ; preds = %29
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* null, i8** %31, align 8
  br label %50

39:                                               ; preds = %29
  %40 = bitcast %"class.base::Value"** %32 to i8*
  %41 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %40, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #17
  %42 = bitcast %"class.base::Value"** %33 to i8*
  %43 = call i8* @_ZN7logging14StreamValToStrEPKvPFvRNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEES1_E(i8* %42, void (%"class.std::__1::basic_ostream"*, i8*)* nonnull @_ZZN7logging15CheckOpValueStrIPKN4base5ValueEEENSt3__19enable_ifIXaasr4base8internal23SupportsOstreamOperatorIRKT_EE5valuentsr3std11is_functionINS5_14remove_pointerIS7_E4typeEEE5valueEPcE4typeES9_ENUlRNS5_13basic_ostreamIcNS5_11char_traitsIcEEEEPKvE_8__invokeESK_SM_) #17
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.5, i64 0, i64 0), i8* %41, i8* %43) #17
  %44 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %45 = load i8*, i8** %44, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  store i8* %45, i8** %31, align 8
  %46 = icmp eq i8* %45, null
  br i1 %46, label %50, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #17
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.2, i64 0, i64 0), i32 207, %"class.logging::CheckOpResult"* nonnull %7) #17
  %49 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #17
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #17
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #17
  br label %50

50:                                               ; preds = %38, %39, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #17
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base5ValueC1EOS0_(%"class.base::Value"*, %"class.base::Value"* dereferenceable(32)) unnamed_addr #9

; Function Attrs: noreturn
declare void @_ZNKSt3__121__basic_string_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__basic_string_common"*) local_unnamed_addr #11

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #12

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #13

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #14

; Function Attrs: nounwind
declare i32 @_ZNKSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE7compareEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* } @_ZNK4base8internal9flat_treeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE11equal_rangeIS8_EENS2_4pairINS2_11__wrap_iterIPKS8_EESL_EERKT_(%"class.base::internal::flat_tree.53"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::flat_tree.53", %"class.base::internal::flat_tree.53"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %3, align 8
  %5 = getelementptr inbounds %"class.base::internal::flat_tree.53", %"class.base::internal::flat_tree.53"* %0, i64 0, i32 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::basic_string"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = ptrtoint %"class.std::__1::basic_string"* %4 to i64
  %9 = sub i64 %7, %8
  %10 = icmp eq i64 %9, 0
  %11 = inttoptr i64 %7 to %"class.std::__1::basic_string"*
  br i1 %10, label %63, label %12

12:                                               ; preds = %2
  %13 = sdiv exact i64 %9, 24
  %14 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = zext i8 %16 to i64
  %21 = select i1 %17, i64 %19, i64 %20
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load i8*, i8** %22, align 8
  %24 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %25 = select i1 %17, i8* %23, i8* %24
  br label %26

26:                                               ; preds = %57, %12
  %27 = phi %"class.std::__1::basic_string"* [ %4, %12 ], [ %59, %57 ]
  %28 = phi i64 [ %13, %12 ], [ %58, %57 ]
  %29 = lshr i64 %28, 1
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 %29
  %31 = bitcast %"class.std::__1::basic_string"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %27, i64 %29, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = load i64, i64* %35, align 8
  %37 = zext i8 %33 to i64
  %38 = select i1 %34, i64 %36, i64 %37
  %39 = icmp ult i64 %21, %38
  %40 = select i1 %39, i64 %21, i64 %38
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %49, label %42

42:                                               ; preds = %26
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = bitcast %"class.std::__1::basic_string"* %30 to i8*
  %46 = select i1 %34, i8* %44, i8* %45
  %47 = tail call i32 @memcmp(i8* %46, i8* %25, i64 %40) #17
  %48 = icmp eq i32 %47, 0
  br i1 %48, label %49, label %51

49:                                               ; preds = %42, %26
  %50 = icmp ult i64 %38, %21
  br i1 %50, label %53, label %57

51:                                               ; preds = %42
  %52 = icmp slt i32 %47, 0
  br i1 %52, label %53, label %57

53:                                               ; preds = %51, %49
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %30, i64 1
  %55 = xor i64 %29, -1
  %56 = add i64 %28, %55
  br label %57

57:                                               ; preds = %53, %51, %49
  %58 = phi i64 [ %56, %53 ], [ %29, %51 ], [ %29, %49 ]
  %59 = phi %"class.std::__1::basic_string"* [ %54, %53 ], [ %27, %51 ], [ %27, %49 ]
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %61, label %26

61:                                               ; preds = %57
  %62 = ptrtoint %"class.std::__1::basic_string"* %59 to i64
  br label %63

63:                                               ; preds = %61, %2
  %64 = phi i64 [ %62, %61 ], [ %8, %2 ]
  %65 = phi %"class.std::__1::basic_string"* [ %59, %61 ], [ %4, %2 ]
  %66 = icmp eq %"class.std::__1::basic_string"* %65, %11
  br i1 %66, label %105, label %67

67:                                               ; preds = %63
  %68 = bitcast %"class.std::__1::basic_string"* %65 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %69 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %68, i64 0, i32 1, i32 0
  %70 = load i8, i8* %69, align 1
  %71 = icmp slt i8 %70, 0
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = load i64, i64* %72, align 8
  %74 = zext i8 %70 to i64
  %75 = select i1 %71, i64 %73, i64 %74
  %76 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %77 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %76, i64 0, i32 1, i32 0
  %78 = load i8, i8* %77, align 1
  %79 = icmp slt i8 %78, 0
  %80 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %81 = load i64, i64* %80, align 8
  %82 = zext i8 %78 to i64
  %83 = select i1 %79, i64 %81, i64 %82
  %84 = icmp ult i64 %75, %83
  %85 = select i1 %84, i64 %75, i64 %83
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %98, label %87

87:                                               ; preds = %67
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load i8*, i8** %88, align 8
  %90 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %91 = select i1 %79, i8* %89, i8* %90
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  %94 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  %95 = select i1 %71, i8* %93, i8* %94
  %96 = tail call i32 @memcmp(i8* %91, i8* %95, i64 %85) #17
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %87, %67
  %99 = icmp ult i64 %83, %75
  br i1 %99, label %105, label %102

100:                                              ; preds = %87
  %101 = icmp slt i32 %96, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %98, %100
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %65, i64 1
  %104 = ptrtoint %"class.std::__1::basic_string"* %103 to i64
  br label %105

105:                                              ; preds = %98, %100, %63, %102
  %106 = phi i64 [ %104, %102 ], [ %64, %63 ], [ %64, %100 ], [ %64, %98 ]
  %107 = insertvalue { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* } undef, %"class.std::__1::basic_string"* %65, 0
  %108 = inttoptr i64 %106 to %"class.std::__1::basic_string"*
  %109 = insertvalue { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* } %107, %"class.std::__1::basic_string"* %108, 1
  ret { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"* } %109
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__treeIPKN4base5ValueEZNK6policy16PolicyListMerger7DoMergeEPNS5_9PolicyMap5EntryEE3$_0NS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE"(%"class.std::__1::__tree.80"* readnone, %"class.std::__1::__tree_node.114"*) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node.114"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node.114"* %1 to %"class.std::__1::__tree_node.114"**
  %6 = load %"class.std::__1::__tree_node.114"*, %"class.std::__1::__tree_node.114"** %5, align 8
  tail call fastcc void @"_ZNSt3__16__treeIPKN4base5ValueEZNK6policy16PolicyListMerger7DoMergeEPNS5_9PolicyMap5EntryEE3$_0NS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE"(%"class.std::__1::__tree.80"* %0, %"class.std::__1::__tree_node.114"* %6) #17
  %7 = getelementptr inbounds %"class.std::__1::__tree_node.114", %"class.std::__1::__tree_node.114"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node.114"**
  %9 = load %"class.std::__1::__tree_node.114"*, %"class.std::__1::__tree_node.114"** %8, align 8
  tail call fastcc void @"_ZNSt3__16__treeIPKN4base5ValueEZNK6policy16PolicyListMerger7DoMergeEPNS5_9PolicyMap5EntryEE3$_0NS_9allocatorIS4_EEE7destroyEPNS_11__tree_nodeIS4_PvEE"(%"class.std::__1::__tree.80"* %0, %"class.std::__1::__tree_node.114"* %9) #17
  %10 = bitcast %"class.std::__1::__tree_node.114"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #19
  ret void

11:                                               ; preds = %2
  ret void
}

declare zeroext i1 @_ZN4baseltERKNS_5ValueES2_(%"class.base::Value"* dereferenceable(32), %"class.base::Value"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #11

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9flat_treeINSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS_8identityENS2_4lessIvEENS2_6vectorIS8_NS6_IS8_EEEEE15sort_and_uniqueENS2_11__wrap_iterIPS8_EESI_(%"class.base::internal::flat_tree.53"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare", align 1
  %5 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %6 = getelementptr inbounds %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare", %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %6)
  %7 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %8 = sub i64 %5, %7
  %9 = sdiv exact i64 %8, 24
  %10 = icmp sgt i64 %8, 0
  br i1 %10, label %11, label %22

11:                                               ; preds = %3
  %12 = icmp slt i64 %9, 384307168202282325
  %13 = select i1 %12, i64 %9, i64 384307168202282325
  br label %14

14:                                               ; preds = %19, %11
  %15 = phi i64 [ %20, %19 ], [ %13, %11 ]
  %16 = mul i64 %15, 24
  %17 = tail call noalias i8* @_ZnwmRKSt9nothrow_t(i64 %16, %"struct.std::nothrow_t"* nonnull dereferenceable(1) @_ZSt7nothrow) #17
  %18 = icmp eq i8* %17, null
  br i1 %18, label %19, label %23

19:                                               ; preds = %14
  %20 = lshr i64 %15, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %22, label %14

22:                                               ; preds = %19, %3
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"* %2, %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %9, %"class.std::__1::basic_string"* null, i64 0) #17
  br label %25

23:                                               ; preds = %14
  %24 = bitcast i8* %17 to %"class.std::__1::basic_string"*
  call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"* %2, %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* nonnull dereferenceable(1) %4, i64 %9, %"class.std::__1::basic_string"* nonnull %24, i64 %15) #17
  call void @_ZdlPv(i8* nonnull %17) #19
  br label %25

25:                                               ; preds = %22, %23
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %6)
  %26 = call %"class.std::__1::basic_string"* @_ZNSt3__16uniqueINS_11__wrap_iterIPNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEN4base8internal9NotFnImplINSB_9flat_treeIS7_NSA_8identityENS_4lessIvEENS_6vectorIS7_NS5_IS7_EEEEE13value_compareEEEEET_SN_SN_T0_(%"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"* %2)
  %27 = icmp eq %"class.std::__1::basic_string"* %26, %2
  br i1 %27, label %69, label %28

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.base::internal::flat_tree.53", %"class.base::internal::flat_tree.53"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  %31 = icmp eq %"class.std::__1::basic_string"* %30, %2
  br i1 %31, label %52, label %32

32:                                               ; preds = %28, %42
  %33 = phi %"class.std::__1::basic_string"* [ %48, %42 ], [ %26, %28 ]
  %34 = phi %"class.std::__1::basic_string"* [ %47, %42 ], [ %2, %28 ]
  %35 = bitcast %"class.std::__1::basic_string"* %33 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  br i1 %38, label %39, label %42

39:                                               ; preds = %32
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  call void @_ZdlPv(i8* %41) #19
  br label %42

42:                                               ; preds = %39, %32
  %43 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  %44 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #17
  %45 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  store i8 0, i8* %46, align 1
  store i8 0, i8* %44, align 1
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 1
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %33, i64 1
  %49 = icmp eq %"class.std::__1::basic_string"* %47, %30
  br i1 %49, label %50, label %32

50:                                               ; preds = %42
  %51 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %29, align 8
  br label %52

52:                                               ; preds = %50, %28
  %53 = phi %"class.std::__1::basic_string"* [ %2, %28 ], [ %51, %50 ]
  %54 = phi %"class.std::__1::basic_string"* [ %26, %28 ], [ %48, %50 ]
  %55 = icmp eq %"class.std::__1::basic_string"* %53, %54
  br i1 %55, label %68, label %56

56:                                               ; preds = %52, %66
  %57 = phi %"class.std::__1::basic_string"* [ %58, %66 ], [ %53, %52 ]
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %57, i64 -1
  %59 = bitcast %"class.std::__1::basic_string"* %58 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %66

63:                                               ; preds = %56
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load i8*, i8** %64, align 8
  call void @_ZdlPv(i8* %65) #19
  br label %66

66:                                               ; preds = %63, %56
  %67 = icmp eq %"class.std::__1::basic_string"* %58, %54
  br i1 %67, label %68, label %56

68:                                               ; preds = %66, %52
  store %"class.std::__1::basic_string"* %54, %"class.std::__1::basic_string"** %29, align 8
  br label %69

69:                                               ; preds = %25, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_string"* @_ZNSt3__16uniqueINS_11__wrap_iterIPNS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEEEN4base8internal9NotFnImplINSB_9flat_treeIS7_NSA_8identityENS_4lessIvEENS_6vectorIS7_NS5_IS7_EEEEE13value_compareEEEEET_SN_SN_T0_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat {
  %3 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %3, label %51, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1
  %6 = icmp eq %"class.std::__1::basic_string"* %5, %1
  br i1 %6, label %49, label %7

7:                                                ; preds = %4
  %8 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  br label %11

11:                                               ; preds = %46, %7
  %12 = phi i8 [ %17, %46 ], [ %10, %7 ]
  %13 = phi %"class.std::__1::basic_string"* [ %47, %46 ], [ %5, %7 ]
  %14 = phi %"class.std::__1::basic_string"* [ %13, %46 ], [ %0, %7 ]
  %15 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %16 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %15, i64 0, i32 1, i32 0
  %17 = load i8, i8* %16, align 1
  %18 = icmp slt i8 %17, 0
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = zext i8 %17 to i64
  %22 = select i1 %18, i64 %20, i64 %21
  %23 = icmp slt i8 %12, 0
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = zext i8 %12 to i64
  %27 = select i1 %23, i64 %25, i64 %26
  %28 = icmp ult i64 %22, %27
  %29 = select i1 %28, i64 %22, i64 %27
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %42, label %31

31:                                               ; preds = %11
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %35 = select i1 %23, i8* %33, i8* %34
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %39 = select i1 %18, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %35, i8* %39, i64 %29) #17
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %44

42:                                               ; preds = %31, %11
  %43 = icmp ult i64 %27, %22
  br i1 %43, label %46, label %51

44:                                               ; preds = %31
  %45 = icmp sgt i32 %40, -1
  br i1 %45, label %51, label %46

46:                                               ; preds = %44, %42
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 1
  %48 = icmp eq %"class.std::__1::basic_string"* %47, %1
  br i1 %48, label %49, label %11

49:                                               ; preds = %46, %4
  %50 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  br label %123

51:                                               ; preds = %42, %44, %2
  %52 = phi %"class.std::__1::basic_string"* [ %0, %2 ], [ %14, %44 ], [ %14, %42 ]
  %53 = ptrtoint %"class.std::__1::basic_string"* %52 to i64
  %54 = icmp eq %"class.std::__1::basic_string"* %52, %1
  br i1 %54, label %123, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 2
  %57 = icmp eq %"class.std::__1::basic_string"* %56, %1
  br i1 %57, label %119, label %58

58:                                               ; preds = %55
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 1
  br label %60

60:                                               ; preds = %58, %112
  %61 = phi %"class.std::__1::basic_string"* [ %116, %112 ], [ %52, %58 ]
  %62 = phi %"class.std::__1::basic_string"* [ %114, %112 ], [ %56, %58 ]
  %63 = phi %"class.std::__1::basic_string"* [ %62, %112 ], [ %59, %58 ]
  %64 = phi i64 [ %113, %112 ], [ %53, %58 ]
  %65 = bitcast %"class.std::__1::basic_string"* %62 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  %69 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %70 = load i64, i64* %69, align 8
  %71 = zext i8 %67 to i64
  %72 = select i1 %68, i64 %70, i64 %71
  %73 = inttoptr i64 %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = zext i8 %75 to i64
  %80 = select i1 %76, i64 %78, i64 %79
  %81 = icmp ult i64 %72, %80
  %82 = select i1 %81, i64 %72, i64 %80
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %95, label %84

84:                                               ; preds = %60
  %85 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %86 = load i8*, i8** %85, align 8
  %87 = inttoptr i64 %64 to i8*
  %88 = select i1 %76, i8* %86, i8* %87
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  %91 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  %92 = select i1 %68, i8* %90, i8* %91
  %93 = tail call i32 @memcmp(i8* %88, i8* %92, i64 %82) #17
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %84, %60
  %96 = icmp ult i64 %80, %72
  br i1 %96, label %99, label %112

97:                                               ; preds = %84
  %98 = icmp sgt i32 %93, -1
  br i1 %98, label %112, label %99

99:                                               ; preds = %95, %97
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %61, i64 1
  %101 = ptrtoint %"class.std::__1::basic_string"* %100 to i64
  %102 = bitcast %"class.std::__1::basic_string"* %100 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %109

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %100, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load i8*, i8** %107, align 8
  tail call void @_ZdlPv(i8* %108) #19
  br label %109

109:                                              ; preds = %99, %106
  %110 = bitcast %"class.std::__1::basic_string"* %100 to i8*
  %111 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %110, i8* align 8 %111, i64 24, i1 false) #17
  store i8 0, i8* %66, align 1
  store i8 0, i8* %111, align 1
  br label %112

112:                                              ; preds = %95, %109, %97
  %113 = phi i64 [ %64, %97 ], [ %101, %109 ], [ %64, %95 ]
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 1
  %115 = icmp eq %"class.std::__1::basic_string"* %114, %1
  %116 = inttoptr i64 %113 to %"class.std::__1::basic_string"*
  br i1 %115, label %117, label %60

117:                                              ; preds = %112
  %118 = inttoptr i64 %113 to %"class.std::__1::basic_string"*
  br label %119

119:                                              ; preds = %117, %55
  %120 = phi %"class.std::__1::basic_string"* [ %52, %55 ], [ %118, %117 ]
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %120, i64 1
  %122 = ptrtoint %"class.std::__1::basic_string"* %121 to i64
  br label %123

123:                                              ; preds = %51, %49, %119
  %124 = phi i64 [ %122, %119 ], [ %53, %51 ], [ %50, %49 ]
  %125 = inttoptr i64 %124 to %"class.std::__1::basic_string"*
  ret %"class.std::__1::basic_string"* %125
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* dereferenceable(1), i64, %"class.std::__1::basic_string"*, i64) local_unnamed_addr #0 comdat {
  switch i64 %3, label %57 [
    i64 0, label %85
    i64 1, label %85
    i64 2, label %7
  ]

7:                                                ; preds = %6
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1
  %9 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %11 to i64
  %16 = select i1 %12, i64 %14, i64 %15
  %17 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %19 to i64
  %24 = select i1 %20, i64 %22, i64 %23
  %25 = icmp ult i64 %16, %24
  %26 = select i1 %25, i64 %16, i64 %24
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %39, label %28

28:                                               ; preds = %7
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  %31 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %32 = select i1 %20, i8* %30, i8* %31
  %33 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %36 = select i1 %12, i8* %34, i8* %35
  %37 = tail call i32 @memcmp(i8* %32, i8* %36, i64 %26) #17
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %46

39:                                               ; preds = %28, %7
  %40 = icmp ult i64 %24, %16
  br i1 %40, label %41, label %85

41:                                               ; preds = %39
  %42 = bitcast %"class.std::__1::basic_string"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  %44 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %45 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  br label %49

46:                                               ; preds = %28
  %47 = ptrtoint i8* %34 to i64
  %48 = icmp slt i32 %37, 0
  br i1 %48, label %49, label %85

49:                                               ; preds = %46, %41
  %50 = phi i8* [ %45, %41 ], [ %31, %46 ]
  %51 = phi i8* [ %44, %41 ], [ %35, %46 ]
  %52 = phi i64 [ %43, %41 ], [ %47, %46 ]
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %54 = load i64, i64* %53, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %51, i8* align 8 %50, i64 24, i1 false) #17
  %55 = bitcast %"class.std::__1::basic_string"* %8 to i64*
  store i64 %52, i64* %55, align 8
  store i64 %14, i64* %21, align 8
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %54, i64* %56, align 8
  br label %85

57:                                               ; preds = %6
  %58 = icmp slt i64 %3, 1
  br i1 %58, label %59, label %60

59:                                               ; preds = %57
  tail call void @_ZNSt3__116__insertion_sortIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %1, %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* dereferenceable(1) %2)
  br label %85

60:                                               ; preds = %57
  %61 = lshr i64 %3, 1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 %61
  %63 = icmp sgt i64 %3, %5
  br i1 %63, label %83, label %64

64:                                               ; preds = %60
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeE(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %62, %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* dereferenceable(1) %2, i64 %61, %"class.std::__1::basic_string"* %4)
  %65 = sub nsw i64 %3, %61
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 %61
  tail call void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeE(%"class.std::__1::basic_string"* %62, %"class.std::__1::basic_string"* %1, %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* dereferenceable(1) %2, i64 %65, %"class.std::__1::basic_string"* %66)
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 %3
  tail call void @_ZNSt3__119__merge_move_assignIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareEPS9_SJ_NS_11__wrap_iterISJ_EEEEvT0_SM_T1_SN_T2_T_(%"class.std::__1::basic_string"* %4, %"class.std::__1::basic_string"* %66, %"class.std::__1::basic_string"* %66, %"class.std::__1::basic_string"* %67, %"class.std::__1::basic_string"* %0, %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* dereferenceable(1) %2)
  %68 = icmp eq %"class.std::__1::basic_string"* %4, null
  br i1 %68, label %85, label %69

69:                                               ; preds = %64, %79
  %70 = phi i64 [ %80, %79 ], [ 0, %64 ]
  %71 = phi %"class.std::__1::basic_string"* [ %81, %79 ], [ %4, %64 ]
  %72 = bitcast %"class.std::__1::basic_string"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  %74 = load i8, i8* %73, align 1
  %75 = icmp slt i8 %74, 0
  br i1 %75, label %76, label %79

76:                                               ; preds = %69
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load i8*, i8** %77, align 8
  tail call void @_ZdlPv(i8* %78) #19
  br label %79

79:                                               ; preds = %76, %69
  %80 = add nuw i64 %70, 1
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 1
  %82 = icmp eq i64 %80, %3
  br i1 %82, label %85, label %69

83:                                               ; preds = %60
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %62, %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* dereferenceable(1) %2, i64 %61, %"class.std::__1::basic_string"* %4, i64 %5)
  %84 = sub nsw i64 %3, %61
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.std::__1::basic_string"* %62, %"class.std::__1::basic_string"* %1, %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* dereferenceable(1) %2, i64 %84, %"class.std::__1::basic_string"* %4, i64 %5)
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeEl(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %62, %"class.std::__1::basic_string"* %1, %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* dereferenceable(1) %2, i64 %61, i64 %84, %"class.std::__1::basic_string"* %4, i64 %5)
  ret void

85:                                               ; preds = %79, %39, %64, %46, %49, %6, %6, %59
  ret void
}

; Function Attrs: nobuiltin nofree nounwind
declare noalias i8* @_ZnwmRKSt9nothrow_t(i64, %"struct.std::nothrow_t"* dereferenceable(1)) local_unnamed_addr #16

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116__insertion_sortIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %5, label %76, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1
  %8 = icmp eq %"class.std::__1::basic_string"* %7, %1
  br i1 %8, label %76, label %9

9:                                                ; preds = %6
  %10 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  br label %15

15:                                               ; preds = %9, %60
  %16 = phi %"class.std::__1::basic_string"* [ %7, %9 ], [ %62, %60 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %10) #17
  %17 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %17, i64 24, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #17
  %18 = icmp eq %"class.std::__1::basic_string"* %16, %0
  br i1 %18, label %51, label %19

19:                                               ; preds = %15, %72
  %20 = phi %"class.std::__1::basic_string"* [ %21, %72 ], [ %16, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 -1
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %27 = load i64, i64* %26, align 8
  %28 = zext i8 %24 to i64
  %29 = select i1 %25, i64 %27, i64 %28
  %30 = load i8, i8* %14, align 1
  %31 = icmp slt i8 %30, 0
  %32 = load i64, i64* %12, align 8
  %33 = zext i8 %30 to i64
  %34 = select i1 %31, i64 %32, i64 %33
  %35 = icmp ult i64 %29, %34
  %36 = select i1 %35, i64 %29, i64 %34
  %37 = icmp eq i64 %36, 0
  br i1 %37, label %47, label %38

38:                                               ; preds = %19
  %39 = load i8*, i8** %11, align 8
  %40 = select i1 %31, i8* %39, i8* %10
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %44 = select i1 %25, i8* %42, i8* %43
  %45 = call i32 @memcmp(i8* %40, i8* %44, i64 %36) #17
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %38, %19
  %48 = icmp ult i64 %34, %29
  br i1 %48, label %64, label %51

49:                                               ; preds = %38
  %50 = icmp slt i32 %45, 0
  br i1 %50, label %64, label %51

51:                                               ; preds = %49, %47, %72, %15
  %52 = phi %"class.std::__1::basic_string"* [ %0, %15 ], [ %0, %72 ], [ %20, %47 ], [ %20, %49 ]
  %53 = bitcast %"class.std::__1::basic_string"* %52 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %54 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %53, i64 0, i32 1, i32 0
  %55 = load i8, i8* %54, align 1
  %56 = icmp slt i8 %55, 0
  br i1 %56, label %57, label %60

57:                                               ; preds = %51
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %52, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  tail call void @_ZdlPv(i8* %59) #19
  br label %60

60:                                               ; preds = %57, %51
  %61 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* nonnull align 8 %10, i64 24, i1 false) #17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %10) #17
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 1
  %63 = icmp eq %"class.std::__1::basic_string"* %62, %1
  br i1 %63, label %76, label %15

64:                                               ; preds = %47, %49
  %65 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %64
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  tail call void @_ZdlPv(i8* %71) #19
  br label %72

72:                                               ; preds = %64, %69
  %73 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  %74 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %73, i8* align 8 %74, i64 24, i1 false) #17
  store i8 0, i8* %23, align 1
  store i8 0, i8* %74, align 1
  %75 = icmp eq %"class.std::__1::basic_string"* %21, %0
  br i1 %75, label %51, label %19

76:                                               ; preds = %60, %6, %3
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__118__stable_sort_moveIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeE(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* dereferenceable(1), i64, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat {
  switch i64 %3, label %63 [
    i64 0, label %151
    i64 1, label %6
    i64 2, label %9
  ]

6:                                                ; preds = %5
  %7 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #17
  br label %151

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1
  %11 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %12 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %11, i64 0, i32 1, i32 0
  %13 = load i8, i8* %12, align 1
  %14 = icmp slt i8 %13, 0
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = load i64, i64* %15, align 8
  %17 = zext i8 %13 to i64
  %18 = select i1 %14, i64 %16, i64 %17
  %19 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %20 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %19, i64 0, i32 1, i32 0
  %21 = load i8, i8* %20, align 1
  %22 = icmp slt i8 %21, 0
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = zext i8 %21 to i64
  %26 = select i1 %22, i64 %24, i64 %25
  %27 = icmp ult i64 %18, %26
  %28 = select i1 %27, i64 %18, i64 %26
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %41, label %30

30:                                               ; preds = %9
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %34 = select i1 %22, i8* %32, i8* %33
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %38 = select i1 %14, i8* %36, i8* %37
  %39 = tail call i32 @memcmp(i8* %34, i8* %38, i64 %28) #17
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %49

41:                                               ; preds = %30, %9
  %42 = icmp ult i64 %26, %18
  br i1 %42, label %43, label %46

43:                                               ; preds = %41
  %44 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %45 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  br label %51

46:                                               ; preds = %41
  %47 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %48 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  br label %57

49:                                               ; preds = %30
  %50 = icmp slt i32 %39, 0
  br i1 %50, label %51, label %57

51:                                               ; preds = %43, %49
  %52 = phi i8* [ %45, %43 ], [ %37, %49 ]
  %53 = phi i8* [ %44, %43 ], [ %33, %49 ]
  %54 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %53, i64 24, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #17
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 1
  %56 = bitcast %"class.std::__1::basic_string"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %52, i64 24, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %52, i8 0, i64 24, i1 false) #17
  br label %151

57:                                               ; preds = %46, %49
  %58 = phi i8* [ %48, %46 ], [ %33, %49 ]
  %59 = phi i8* [ %47, %46 ], [ %37, %49 ]
  %60 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %59, i64 24, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %59, i8 0, i64 24, i1 false) #17
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 1
  %62 = bitcast %"class.std::__1::basic_string"* %61 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %62, i8* align 8 %58, i64 24, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false) #17
  br label %151

63:                                               ; preds = %5
  %64 = icmp slt i64 %3, 9
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  tail call void @_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_PNS_15iterator_traitsISM_E10value_typeET_(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"* %4, %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* dereferenceable(1) %2)
  br label %151

66:                                               ; preds = %63
  %67 = lshr i64 %3, 1
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 %67
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"* %68, %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* dereferenceable(1) %2, i64 %67, %"class.std::__1::basic_string"* %4, i64 %67)
  %69 = sub nsw i64 %3, %67
  %70 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 %67
  tail call void @_ZNSt3__113__stable_sortIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_T_NS_15iterator_traitsISM_E15difference_typeEPNSP_10value_typeEl(%"class.std::__1::basic_string"* %68, %"class.std::__1::basic_string"* %1, %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* dereferenceable(1) %2, i64 %69, %"class.std::__1::basic_string"* %70, i64 %69)
  %71 = icmp eq i64 %67, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %146, %66
  %73 = phi %"class.std::__1::basic_string"* [ %68, %66 ], [ %147, %146 ]
  %74 = phi %"class.std::__1::basic_string"* [ %4, %66 ], [ %149, %146 ]
  %75 = icmp eq %"class.std::__1::basic_string"* %73, %1
  br i1 %75, label %151, label %76

76:                                               ; preds = %72, %76
  %77 = phi %"class.std::__1::basic_string"* [ %82, %76 ], [ %74, %72 ]
  %78 = phi %"class.std::__1::basic_string"* [ %81, %76 ], [ %73, %72 ]
  %79 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  %80 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %80, i8 0, i64 24, i1 false) #17
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 1
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 1
  %83 = icmp eq %"class.std::__1::basic_string"* %81, %1
  br i1 %83, label %151, label %76

84:                                               ; preds = %66, %146
  %85 = phi %"class.std::__1::basic_string"* [ %149, %146 ], [ %4, %66 ]
  %86 = phi %"class.std::__1::basic_string"* [ %148, %146 ], [ %0, %66 ]
  %87 = phi %"class.std::__1::basic_string"* [ %147, %146 ], [ %68, %66 ]
  %88 = icmp eq %"class.std::__1::basic_string"* %87, %1
  br i1 %88, label %89, label %99

89:                                               ; preds = %84
  %90 = icmp eq %"class.std::__1::basic_string"* %86, %68
  br i1 %90, label %151, label %91

91:                                               ; preds = %89, %91
  %92 = phi %"class.std::__1::basic_string"* [ %97, %91 ], [ %85, %89 ]
  %93 = phi %"class.std::__1::basic_string"* [ %96, %91 ], [ %86, %89 ]
  %94 = bitcast %"class.std::__1::basic_string"* %92 to i8*
  %95 = bitcast %"class.std::__1::basic_string"* %93 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 24, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %95, i8 0, i64 24, i1 false) #17
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %93, i64 1
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %92, i64 1
  %98 = icmp eq %"class.std::__1::basic_string"* %96, %68
  br i1 %98, label %151, label %91

99:                                               ; preds = %84
  %100 = bitcast %"class.std::__1::basic_string"* %86 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %105 = load i64, i64* %104, align 8
  %106 = zext i8 %102 to i64
  %107 = select i1 %103, i64 %105, i64 %106
  %108 = bitcast %"class.std::__1::basic_string"* %87 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  %112 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = zext i8 %110 to i64
  %115 = select i1 %111, i64 %113, i64 %114
  %116 = icmp ult i64 %107, %115
  %117 = select i1 %116, i64 %107, i64 %115
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %130, label %119

119:                                              ; preds = %99
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  %122 = bitcast %"class.std::__1::basic_string"* %87 to i8*
  %123 = select i1 %111, i8* %121, i8* %122
  %124 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load i8*, i8** %124, align 8
  %126 = bitcast %"class.std::__1::basic_string"* %86 to i8*
  %127 = select i1 %103, i8* %125, i8* %126
  %128 = tail call i32 @memcmp(i8* %123, i8* %127, i64 %117) #17
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %136

130:                                              ; preds = %119, %99
  %131 = icmp ult i64 %115, %107
  br i1 %131, label %132, label %134

132:                                              ; preds = %130
  %133 = bitcast %"class.std::__1::basic_string"* %87 to i8*
  br label %138

134:                                              ; preds = %130
  %135 = bitcast %"class.std::__1::basic_string"* %86 to i8*
  br label %142

136:                                              ; preds = %119
  %137 = icmp slt i32 %128, 0
  br i1 %137, label %138, label %142

138:                                              ; preds = %136, %132
  %139 = phi i8* [ %133, %132 ], [ %122, %136 ]
  %140 = bitcast %"class.std::__1::basic_string"* %85 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %140, i8* align 8 %139, i64 24, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %139, i8 0, i64 24, i1 false) #17
  %141 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %87, i64 1
  br label %146

142:                                              ; preds = %136, %134
  %143 = phi i8* [ %135, %134 ], [ %126, %136 ]
  %144 = bitcast %"class.std::__1::basic_string"* %85 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %144, i8* align 8 %143, i64 24, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %143, i8 0, i64 24, i1 false) #17
  %145 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 1
  br label %146

146:                                              ; preds = %142, %138
  %147 = phi %"class.std::__1::basic_string"* [ %141, %138 ], [ %87, %142 ]
  %148 = phi %"class.std::__1::basic_string"* [ %86, %138 ], [ %145, %142 ]
  %149 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %85, i64 1
  %150 = icmp eq %"class.std::__1::basic_string"* %148, %68
  br i1 %150, label %72, label %84

151:                                              ; preds = %91, %76, %89, %72, %57, %51, %5, %65, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__119__merge_move_assignIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareEPS9_SJ_NS_11__wrap_iterISJ_EEEEvT0_SM_T1_SN_T2_T_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %7 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %7, label %8, label %12

8:                                                ; preds = %96, %6
  %9 = phi %"class.std::__1::basic_string"* [ %4, %6 ], [ %99, %96 ]
  %10 = phi %"class.std::__1::basic_string"* [ %2, %6 ], [ %97, %96 ]
  %11 = icmp eq %"class.std::__1::basic_string"* %10, %3
  br i1 %11, label %119, label %101

12:                                               ; preds = %6, %96
  %13 = phi %"class.std::__1::basic_string"* [ %98, %96 ], [ %0, %6 ]
  %14 = phi %"class.std::__1::basic_string"* [ %97, %96 ], [ %2, %6 ]
  %15 = phi %"class.std::__1::basic_string"* [ %99, %96 ], [ %4, %6 ]
  %16 = icmp eq %"class.std::__1::basic_string"* %14, %3
  br i1 %16, label %17, label %37

17:                                               ; preds = %12
  %18 = icmp eq %"class.std::__1::basic_string"* %13, %1
  br i1 %18, label %119, label %19

19:                                               ; preds = %17, %29
  %20 = phi %"class.std::__1::basic_string"* [ %34, %29 ], [ %13, %17 ]
  %21 = phi %"class.std::__1::basic_string"* [ %35, %29 ], [ %15, %17 ]
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #19
  br label %29

29:                                               ; preds = %19, %26
  %30 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %31 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false) #17
  %32 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  store i8 0, i8* %33, align 1
  store i8 0, i8* %31, align 1
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 1
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 1
  %36 = icmp eq %"class.std::__1::basic_string"* %34, %1
  br i1 %36, label %119, label %19

37:                                               ; preds = %12
  %38 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  %44 = zext i8 %40 to i64
  %45 = select i1 %41, i64 %43, i64 %44
  %46 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %47 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %46, i64 0, i32 1, i32 0
  %48 = load i8, i8* %47, align 1
  %49 = icmp slt i8 %48, 0
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = zext i8 %48 to i64
  %53 = select i1 %49, i64 %51, i64 %52
  %54 = icmp ult i64 %45, %53
  %55 = select i1 %54, i64 %45, i64 %53
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %68, label %57

57:                                               ; preds = %37
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %61 = select i1 %49, i8* %59, i8* %60
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %65 = select i1 %41, i8* %63, i8* %64
  %66 = tail call i32 @memcmp(i8* %61, i8* %65, i64 %55) #17
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %70

68:                                               ; preds = %57, %37
  %69 = icmp ult i64 %53, %45
  br i1 %69, label %72, label %84

70:                                               ; preds = %57
  %71 = icmp slt i32 %66, 0
  br i1 %71, label %72, label %84

72:                                               ; preds = %68, %70
  %73 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %72
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load i8*, i8** %78, align 8
  tail call void @_ZdlPv(i8* %79) #19
  br label %80

80:                                               ; preds = %72, %77
  %81 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %82 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %81, i8* align 8 %82, i64 24, i1 false) #17
  store i8 0, i8* %47, align 1
  store i8 0, i8* %82, align 1
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 1
  br label %96

84:                                               ; preds = %68, %70
  %85 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1
  %88 = icmp slt i8 %87, 0
  br i1 %88, label %89, label %92

89:                                               ; preds = %84
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  tail call void @_ZdlPv(i8* %91) #19
  br label %92

92:                                               ; preds = %84, %89
  %93 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  %94 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %93, i8* align 8 %94, i64 24, i1 false) #17
  store i8 0, i8* %39, align 1
  store i8 0, i8* %94, align 1
  %95 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 1
  br label %96

96:                                               ; preds = %80, %92
  %97 = phi %"class.std::__1::basic_string"* [ %83, %80 ], [ %14, %92 ]
  %98 = phi %"class.std::__1::basic_string"* [ %13, %80 ], [ %95, %92 ]
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 1
  %100 = icmp eq %"class.std::__1::basic_string"* %98, %1
  br i1 %100, label %8, label %12

101:                                              ; preds = %8, %111
  %102 = phi %"class.std::__1::basic_string"* [ %116, %111 ], [ %10, %8 ]
  %103 = phi %"class.std::__1::basic_string"* [ %117, %111 ], [ %9, %8 ]
  %104 = bitcast %"class.std::__1::basic_string"* %103 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %105 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %104, i64 0, i32 1, i32 0
  %106 = load i8, i8* %105, align 1
  %107 = icmp slt i8 %106, 0
  br i1 %107, label %108, label %111

108:                                              ; preds = %101
  %109 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %103, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load i8*, i8** %109, align 8
  tail call void @_ZdlPv(i8* %110) #19
  br label %111

111:                                              ; preds = %101, %108
  %112 = bitcast %"class.std::__1::basic_string"* %103 to i8*
  %113 = bitcast %"class.std::__1::basic_string"* %102 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %113, i64 24, i1 false) #17
  %114 = bitcast %"class.std::__1::basic_string"* %102 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %115 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %114, i64 0, i32 1, i32 0
  store i8 0, i8* %115, align 1
  store i8 0, i8* %113, align 1
  %116 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %102, i64 1
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %103, i64 1
  %118 = icmp eq %"class.std::__1::basic_string"* %116, %3
  br i1 %118, label %119, label %101

119:                                              ; preds = %29, %111, %17, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeEl(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* dereferenceable(1), i64, i64, %"class.std::__1::basic_string"*, i64) local_unnamed_addr #0 comdat {
  %9 = icmp eq i64 %5, 0
  br i1 %9, label %307, label %10

10:                                               ; preds = %8
  %11 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %12 = ptrtoint %"class.std::__1::basic_string"* %0 to i64
  br label %13

13:                                               ; preds = %10, %300
  %14 = phi %"class.std::__1::basic_string"* [ %305, %300 ], [ %2, %10 ]
  %15 = phi i64 [ %304, %300 ], [ %4, %10 ]
  %16 = phi i64 [ %303, %300 ], [ %5, %10 ]
  %17 = phi i64 [ %302, %300 ], [ %11, %10 ]
  %18 = phi i64 [ %301, %300 ], [ %12, %10 ]
  %19 = icmp sgt i64 %15, %7
  %20 = icmp sgt i64 %16, %7
  %21 = and i1 %20, %19
  br i1 %21, label %22, label %36

22:                                               ; preds = %13
  %23 = icmp eq i64 %15, 0
  br i1 %23, label %307, label %24

24:                                               ; preds = %22
  %25 = inttoptr i64 %17 to %"class.std::__1::basic_string"*
  %26 = inttoptr i64 %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = zext i8 %28 to i64
  %33 = select i1 %29, i64 %31, i64 %32
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = inttoptr i64 %17 to i8*
  br label %39

36:                                               ; preds = %13
  %37 = inttoptr i64 %18 to %"class.std::__1::basic_string"*
  %38 = inttoptr i64 %17 to %"class.std::__1::basic_string"*
  tail call void @_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeE(%"class.std::__1::basic_string"* %37, %"class.std::__1::basic_string"* %38, %"class.std::__1::basic_string"* %14, %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* dereferenceable(1) %3, i64 %15, i64 %16, %"class.std::__1::basic_string"* %6)
  br label %307

39:                                               ; preds = %24, %67
  %40 = phi i64 [ %15, %24 ], [ %70, %67 ]
  %41 = phi i64 [ %18, %24 ], [ %69, %67 ]
  %42 = inttoptr i64 %41 to %"class.std::__1::basic_string"*
  %43 = inttoptr i64 %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %44 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %43, i64 0, i32 1, i32 0
  %45 = load i8, i8* %44, align 1
  %46 = icmp slt i8 %45, 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = zext i8 %45 to i64
  %50 = select i1 %46, i64 %48, i64 %49
  %51 = icmp ult i64 %50, %33
  %52 = select i1 %51, i64 %50, i64 %33
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %63, label %54

54:                                               ; preds = %39
  %55 = load i8*, i8** %34, align 8
  %56 = select i1 %29, i8* %55, i8* %35
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  %59 = inttoptr i64 %41 to i8*
  %60 = select i1 %46, i8* %58, i8* %59
  %61 = tail call i32 @memcmp(i8* %56, i8* %60, i64 %52) #17
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %65

63:                                               ; preds = %54, %39
  %64 = icmp ult i64 %33, %50
  br i1 %64, label %72, label %67

65:                                               ; preds = %54
  %66 = icmp slt i32 %61, 0
  br i1 %66, label %72, label %67

67:                                               ; preds = %63, %65
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %42, i64 1
  %69 = ptrtoint %"class.std::__1::basic_string"* %68 to i64
  %70 = add nsw i64 %40, -1
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %307, label %39

72:                                               ; preds = %63, %65
  %73 = inttoptr i64 %41 to %"class.std::__1::basic_string"*
  %74 = icmp slt i64 %40, %16
  br i1 %74, label %75, label %135

75:                                               ; preds = %72
  %76 = sdiv i64 %16, 2
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 %76
  %78 = sub i64 %17, %41
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %129, label %80

80:                                               ; preds = %75
  %81 = sdiv exact i64 %78, 24
  %82 = bitcast %"class.std::__1::basic_string"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 %76, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %87 = load i64, i64* %86, align 8
  %88 = zext i8 %84 to i64
  %89 = select i1 %85, i64 %87, i64 %88
  %90 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  %92 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  %93 = select i1 %85, i8* %91, i8* %92
  br label %94

94:                                               ; preds = %125, %80
  %95 = phi %"class.std::__1::basic_string"* [ %73, %80 ], [ %127, %125 ]
  %96 = phi i64 [ %81, %80 ], [ %126, %125 ]
  %97 = lshr i64 %96, 1
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %95, i64 %97
  %99 = bitcast %"class.std::__1::basic_string"* %98 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %95, i64 %97, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %104 = load i64, i64* %103, align 8
  %105 = zext i8 %101 to i64
  %106 = select i1 %102, i64 %104, i64 %105
  %107 = icmp ult i64 %106, %89
  %108 = select i1 %107, i64 %106, i64 %89
  %109 = icmp eq i64 %108, 0
  br i1 %109, label %117, label %110

110:                                              ; preds = %94
  %111 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load i8*, i8** %111, align 8
  %113 = bitcast %"class.std::__1::basic_string"* %98 to i8*
  %114 = select i1 %102, i8* %112, i8* %113
  %115 = tail call i32 @memcmp(i8* %93, i8* %114, i64 %108) #17
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %119

117:                                              ; preds = %110, %94
  %118 = icmp ult i64 %89, %106
  br i1 %118, label %125, label %121

119:                                              ; preds = %110
  %120 = icmp slt i32 %115, 0
  br i1 %120, label %125, label %121

121:                                              ; preds = %119, %117
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 1
  %123 = xor i64 %97, -1
  %124 = add i64 %96, %123
  br label %125

125:                                              ; preds = %121, %119, %117
  %126 = phi i64 [ %124, %121 ], [ %97, %119 ], [ %97, %117 ]
  %127 = phi %"class.std::__1::basic_string"* [ %122, %121 ], [ %95, %119 ], [ %95, %117 ]
  %128 = icmp eq i64 %126, 0
  br i1 %128, label %129, label %94

129:                                              ; preds = %125, %75
  %130 = phi %"class.std::__1::basic_string"* [ %73, %75 ], [ %127, %125 ]
  %131 = ptrtoint %"class.std::__1::basic_string"* %130 to i64
  %132 = sub i64 %131, %41
  %133 = sdiv exact i64 %132, 24
  %134 = ptrtoint %"class.std::__1::basic_string"* %77 to i64
  br label %212

135:                                              ; preds = %72
  %136 = icmp eq i64 %40, 1
  br i1 %136, label %137, label %148

137:                                              ; preds = %135
  %138 = inttoptr i64 %17 to %"class.std::__1::basic_string"*
  %139 = inttoptr i64 %17 to i8*
  %140 = inttoptr i64 %41 to %"class.std::__1::basic_string"*
  %141 = inttoptr i64 %41 to i64*
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %140, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %144 = load i64, i64* %143, align 8
  %145 = inttoptr i64 %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %145, i8* align 8 %139, i64 24, i1 false) #17
  %146 = inttoptr i64 %17 to i64*
  store i64 %142, i64* %146, align 8
  store i64 %48, i64* %30, align 8
  %147 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %138, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %144, i64* %147, align 8
  br label %307

148:                                              ; preds = %135
  %149 = sdiv i64 %40, 2
  %150 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 %149
  %151 = ptrtoint %"class.std::__1::basic_string"* %150 to i64
  %152 = ptrtoint %"class.std::__1::basic_string"* %14 to i64
  %153 = sub i64 %152, %17
  %154 = icmp eq i64 %153, 0
  br i1 %154, label %206, label %155

155:                                              ; preds = %148
  %156 = sdiv exact i64 %153, 24
  %157 = bitcast %"class.std::__1::basic_string"* %150 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %158 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %157, i64 0, i32 1, i32 0
  %159 = load i8, i8* %158, align 1
  %160 = icmp slt i8 %159, 0
  %161 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 %149, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %162 = load i64, i64* %161, align 8
  %163 = zext i8 %159 to i64
  %164 = select i1 %160, i64 %162, i64 %163
  %165 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %150, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %166 = load i8*, i8** %165, align 8
  %167 = bitcast %"class.std::__1::basic_string"* %150 to i8*
  %168 = select i1 %160, i8* %166, i8* %167
  br label %169

169:                                              ; preds = %202, %155
  %170 = phi i64 [ 0, %155 ], [ %204, %202 ]
  %171 = phi i64 [ %156, %155 ], [ %203, %202 ]
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 %170
  %173 = lshr i64 %171, 1
  %174 = add nsw i64 %173, %170
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 %174
  %176 = bitcast %"class.std::__1::basic_string"* %175 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %177 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %176, i64 0, i32 1, i32 0
  %178 = load i8, i8* %177, align 1
  %179 = icmp slt i8 %178, 0
  %180 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %172, i64 %173, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %181 = load i64, i64* %180, align 8
  %182 = zext i8 %178 to i64
  %183 = select i1 %179, i64 %181, i64 %182
  %184 = icmp ult i64 %164, %183
  %185 = select i1 %184, i64 %164, i64 %183
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %194, label %187

187:                                              ; preds = %169
  %188 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %175, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %189 = load i8*, i8** %188, align 8
  %190 = bitcast %"class.std::__1::basic_string"* %175 to i8*
  %191 = select i1 %179, i8* %189, i8* %190
  %192 = tail call i32 @memcmp(i8* %191, i8* %168, i64 %185) #17
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %196

194:                                              ; preds = %187, %169
  %195 = icmp ult i64 %183, %164
  br i1 %195, label %198, label %202

196:                                              ; preds = %187
  %197 = icmp slt i32 %192, 0
  br i1 %197, label %198, label %202

198:                                              ; preds = %196, %194
  %199 = add nsw i64 %174, 1
  %200 = xor i64 %173, -1
  %201 = add i64 %171, %200
  br label %202

202:                                              ; preds = %198, %196, %194
  %203 = phi i64 [ %201, %198 ], [ %173, %196 ], [ %173, %194 ]
  %204 = phi i64 [ %199, %198 ], [ %170, %196 ], [ %170, %194 ]
  %205 = icmp eq i64 %203, 0
  br i1 %205, label %206, label %169

206:                                              ; preds = %202, %148
  %207 = phi i64 [ 0, %148 ], [ %204, %202 ]
  %208 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 %207
  %209 = ptrtoint %"class.std::__1::basic_string"* %208 to i64
  %210 = sub i64 %209, %17
  %211 = sdiv exact i64 %210, 24
  br label %212

212:                                              ; preds = %206, %129
  %213 = phi i64 [ %209, %206 ], [ %134, %129 ]
  %214 = phi i64 [ %151, %206 ], [ %131, %129 ]
  %215 = phi i64 [ %207, %206 ], [ %76, %129 ]
  %216 = phi i64 [ %211, %206 ], [ %76, %129 ]
  %217 = phi i64 [ %149, %206 ], [ %133, %129 ]
  %218 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 %215
  %219 = sub nsw i64 %40, %217
  %220 = sub nsw i64 %16, %216
  %221 = inttoptr i64 %214 to %"class.std::__1::basic_string"*
  %222 = icmp eq %"class.std::__1::basic_string"* %221, %25
  br i1 %222, label %292, label %223

223:                                              ; preds = %212
  %224 = icmp eq i64 %215, 0
  br i1 %224, label %292, label %225

225:                                              ; preds = %223
  %226 = inttoptr i64 %214 to i64*
  %227 = load i64, i64* %226, align 8
  %228 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %221, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %229 = bitcast i64* %228 to <2 x i64>*
  %230 = load <2 x i64>, <2 x i64>* %229, align 8
  %231 = inttoptr i64 %214 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %231, i8* align 8 %35, i64 24, i1 false) #17
  %232 = inttoptr i64 %17 to i64*
  store i64 %227, i64* %232, align 8
  %233 = bitcast i64* %30 to <2 x i64>*
  store <2 x i64> %230, <2 x i64>* %233, align 8
  %234 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %221, i64 1
  %235 = icmp eq i64 %215, 1
  br i1 %235, label %260, label %236

236:                                              ; preds = %225
  %237 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 1
  br label %238

238:                                              ; preds = %236, %238
  %239 = phi %"class.std::__1::basic_string"* [ %257, %238 ], [ %25, %236 ]
  %240 = phi %"class.std::__1::basic_string"* [ %255, %238 ], [ %237, %236 ]
  %241 = phi %"class.std::__1::basic_string"* [ %254, %238 ], [ %234, %236 ]
  %242 = phi i64 [ %245, %238 ], [ %17, %236 ]
  %243 = ptrtoint %"class.std::__1::basic_string"* %240 to i64
  %244 = icmp eq %"class.std::__1::basic_string"* %241, %239
  %245 = select i1 %244, i64 %243, i64 %242
  %246 = bitcast %"class.std::__1::basic_string"* %241 to <2 x i64>*
  %247 = load <2 x i64>, <2 x i64>* %246, align 8
  %248 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %241, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %249 = load i64, i64* %248, align 8
  %250 = bitcast %"class.std::__1::basic_string"* %241 to i8*
  %251 = bitcast %"class.std::__1::basic_string"* %240 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %250, i8* align 8 %251, i64 24, i1 false) #17
  %252 = bitcast %"class.std::__1::basic_string"* %240 to <2 x i64>*
  store <2 x i64> %247, <2 x i64>* %252, align 8
  %253 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %240, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %249, i64* %253, align 8
  %254 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %241, i64 1
  %255 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %240, i64 1
  %256 = icmp eq %"class.std::__1::basic_string"* %255, %218
  %257 = inttoptr i64 %245 to %"class.std::__1::basic_string"*
  br i1 %256, label %258, label %238

258:                                              ; preds = %238
  %259 = inttoptr i64 %245 to %"class.std::__1::basic_string"*
  br label %260

260:                                              ; preds = %258, %225
  %261 = phi i64 [ %17, %225 ], [ %245, %258 ]
  %262 = phi %"class.std::__1::basic_string"* [ %234, %225 ], [ %254, %258 ]
  %263 = phi %"class.std::__1::basic_string"* [ %25, %225 ], [ %259, %258 ]
  %264 = icmp eq %"class.std::__1::basic_string"* %262, %263
  br i1 %264, label %292, label %265

265:                                              ; preds = %260, %289
  %266 = phi i64 [ %291, %289 ], [ %261, %260 ]
  %267 = phi %"class.std::__1::basic_string"* [ %284, %289 ], [ %262, %260 ]
  %268 = phi i64 [ %290, %289 ], [ %261, %260 ]
  %269 = inttoptr i64 %266 to %"class.std::__1::basic_string"*
  br label %270

270:                                              ; preds = %265, %288
  %271 = phi %"class.std::__1::basic_string"* [ %284, %288 ], [ %267, %265 ]
  %272 = phi i64 [ %266, %288 ], [ %268, %265 ]
  %273 = inttoptr i64 %272 to %"class.std::__1::basic_string"*
  %274 = bitcast %"class.std::__1::basic_string"* %271 to i64*
  %275 = load i64, i64* %274, align 8
  %276 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %271, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %277 = bitcast i64* %276 to <2 x i64>*
  %278 = load <2 x i64>, <2 x i64>* %277, align 8
  %279 = bitcast %"class.std::__1::basic_string"* %271 to i8*
  %280 = inttoptr i64 %272 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %279, i8* align 8 %280, i64 24, i1 false) #17
  %281 = inttoptr i64 %272 to i64*
  store i64 %275, i64* %281, align 8
  %282 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %273, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %283 = bitcast i64* %282 to <2 x i64>*
  store <2 x i64> %278, <2 x i64>* %283, align 8
  %284 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %271, i64 1
  %285 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %273, i64 1
  %286 = icmp eq %"class.std::__1::basic_string"* %285, %218
  %287 = icmp eq %"class.std::__1::basic_string"* %284, %269
  br i1 %286, label %288, label %289

288:                                              ; preds = %270
  br i1 %287, label %292, label %270

289:                                              ; preds = %270
  %290 = ptrtoint %"class.std::__1::basic_string"* %285 to i64
  %291 = select i1 %287, i64 %290, i64 %266
  br label %265

292:                                              ; preds = %288, %212, %223, %260
  %293 = phi %"class.std::__1::basic_string"* [ %221, %223 ], [ %218, %212 ], [ %262, %260 ], [ %262, %288 ]
  %294 = add nsw i64 %217, %216
  %295 = add nsw i64 %219, %220
  %296 = icmp slt i64 %294, %295
  br i1 %296, label %297, label %299

297:                                              ; preds = %292
  %298 = ptrtoint %"class.std::__1::basic_string"* %293 to i64
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeEl(%"class.std::__1::basic_string"* %73, %"class.std::__1::basic_string"* %221, %"class.std::__1::basic_string"* %293, %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* dereferenceable(1) %3, i64 %217, i64 %216, %"class.std::__1::basic_string"* %6, i64 %7)
  br label %300

299:                                              ; preds = %292
  tail call void @_ZNSt3__115__inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeEl(%"class.std::__1::basic_string"* %293, %"class.std::__1::basic_string"* %218, %"class.std::__1::basic_string"* %14, %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* dereferenceable(1) %3, i64 %219, i64 %220, %"class.std::__1::basic_string"* %6, i64 %7)
  br label %300

300:                                              ; preds = %297, %299
  %301 = phi i64 [ %298, %297 ], [ %41, %299 ]
  %302 = phi i64 [ %213, %297 ], [ %214, %299 ]
  %303 = phi i64 [ %220, %297 ], [ %216, %299 ]
  %304 = phi i64 [ %219, %297 ], [ %217, %299 ]
  %305 = phi %"class.std::__1::basic_string"* [ %14, %297 ], [ %293, %299 ]
  %306 = icmp eq i64 %303, 0
  br i1 %306, label %307, label %13

307:                                              ; preds = %300, %22, %67, %8, %137, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__121__insertion_sort_moveIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_PNS_15iterator_traitsISM_E10value_typeET_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %5 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %5, label %115, label %6

6:                                                ; preds = %4
  %7 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  %8 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 24, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #17
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 1
  %10 = icmp eq %"class.std::__1::basic_string"* %9, %1
  br i1 %10, label %115, label %11

11:                                               ; preds = %6, %112
  %12 = phi %"class.std::__1::basic_string"* [ %113, %112 ], [ %9, %6 ]
  %13 = phi %"class.std::__1::basic_string"* [ %15, %112 ], [ %2, %6 ]
  %14 = phi %"class.std::__1::basic_string"* [ %12, %112 ], [ %0, %6 ]
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 1
  %16 = bitcast %"class.std::__1::basic_string"* %13 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %18 to i64
  %23 = select i1 %19, i64 %21, i64 %22
  %24 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %23, %31
  %33 = select i1 %32, i64 %23, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %46, label %35

35:                                               ; preds = %11
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  %43 = select i1 %19, i8* %41, i8* %42
  %44 = tail call i32 @memcmp(i8* %39, i8* %43, i64 %33) #17
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %52

46:                                               ; preds = %35, %11
  %47 = icmp ult i64 %31, %23
  br i1 %47, label %48, label %50

48:                                               ; preds = %46
  %49 = bitcast %"class.std::__1::basic_string"* %13 to i8*
  br label %54

50:                                               ; preds = %46
  %51 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  br label %109

52:                                               ; preds = %35
  %53 = icmp slt i32 %44, 0
  br i1 %53, label %54, label %109

54:                                               ; preds = %48, %52
  %55 = phi i8* [ %49, %48 ], [ %42, %52 ]
  %56 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %55, i64 24, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #17
  %57 = icmp eq %"class.std::__1::basic_string"* %13, %2
  br i1 %57, label %97, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  br label %61

61:                                               ; preds = %58, %93
  %62 = phi %"class.std::__1::basic_string"* [ %13, %58 ], [ %63, %93 ]
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 -1
  %64 = bitcast %"class.std::__1::basic_string"* %63 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %65 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %64, i64 0, i32 1, i32 0
  %66 = load i8, i8* %65, align 1
  %67 = icmp slt i8 %66, 0
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %62, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = zext i8 %66 to i64
  %71 = select i1 %67, i64 %69, i64 %70
  %72 = load i8, i8* %25, align 1
  %73 = icmp slt i8 %72, 0
  %74 = load i64, i64* %28, align 8
  %75 = zext i8 %72 to i64
  %76 = select i1 %73, i64 %74, i64 %75
  %77 = icmp ult i64 %71, %76
  %78 = select i1 %77, i64 %71, i64 %76
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %89, label %80

80:                                               ; preds = %61
  %81 = load i8*, i8** %59, align 8
  %82 = select i1 %73, i8* %81, i8* %60
  %83 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %63, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load i8*, i8** %83, align 8
  %85 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  %86 = select i1 %67, i8* %84, i8* %85
  %87 = tail call i32 @memcmp(i8* %82, i8* %86, i64 %78) #17
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %91

89:                                               ; preds = %80, %61
  %90 = icmp ult i64 %76, %71
  br i1 %90, label %93, label %97

91:                                               ; preds = %80
  %92 = icmp slt i32 %87, 0
  br i1 %92, label %93, label %97

93:                                               ; preds = %91, %89
  %94 = bitcast %"class.std::__1::basic_string"* %62 to i8*
  %95 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %94, i8* align 8 %95, i64 24, i1 false) #17
  store i8 0, i8* %65, align 1
  store i8 0, i8* %95, align 1
  %96 = icmp eq %"class.std::__1::basic_string"* %63, %2
  br i1 %96, label %97, label %61

97:                                               ; preds = %91, %93, %89, %54
  %98 = phi %"class.std::__1::basic_string"* [ %2, %54 ], [ %62, %89 ], [ %2, %93 ], [ %62, %91 ]
  %99 = bitcast %"class.std::__1::basic_string"* %98 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %100 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %99, i64 0, i32 1, i32 0
  %101 = load i8, i8* %100, align 1
  %102 = icmp slt i8 %101, 0
  br i1 %102, label %103, label %106

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %105 = load i8*, i8** %104, align 8
  tail call void @_ZdlPv(i8* %105) #19
  br label %106

106:                                              ; preds = %97, %103
  %107 = bitcast %"class.std::__1::basic_string"* %98 to i8*
  %108 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %107, i8* align 8 %108, i64 24, i1 false) #17
  store i8 0, i8* %25, align 1
  store i8 0, i8* %108, align 1
  br label %112

109:                                              ; preds = %50, %52
  %110 = phi i8* [ %51, %50 ], [ %38, %52 ]
  %111 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* align 8 %110, i64 24, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 24, i1 false) #17
  br label %112

112:                                              ; preds = %109, %106
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 1
  %114 = icmp eq %"class.std::__1::basic_string"* %113, %1
  br i1 %114, label %115, label %11

115:                                              ; preds = %112, %6, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__124__buffered_inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareENS_11__wrap_iterIPS9_EEEEvT0_SM_SM_T_NS_15iterator_traitsISM_E15difference_typeESQ_PNSP_10value_typeE(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* dereferenceable(1), i64, i64, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat {
  %8 = alloca %"class.std::__1::reverse_iterator.133", align 8
  %9 = alloca %"class.std::__1::reverse_iterator.133", align 8
  %10 = icmp sgt i64 %4, %5
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %12, label %15, label %18

13:                                               ; preds = %7
  %14 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %14, label %28, label %36

15:                                               ; preds = %18, %11
  %16 = phi i64 [ 0, %11 ], [ %24, %18 ]
  %17 = phi %"class.std::__1::basic_string"* [ %6, %11 ], [ %26, %18 ]
  tail call void @_ZNSt3__120__half_inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareEPS9_NS_11__wrap_iterISJ_EESL_EEvT0_SM_T1_SN_T2_T_(%"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"* %17, %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"* %0, %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* dereferenceable(1) %3)
  br label %46

18:                                               ; preds = %11, %18
  %19 = phi %"class.std::__1::basic_string"* [ %26, %18 ], [ %6, %11 ]
  %20 = phi %"class.std::__1::basic_string"* [ %25, %18 ], [ %0, %11 ]
  %21 = phi i64 [ %24, %18 ], [ 0, %11 ]
  %22 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %23 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %22, i8* align 8 %23, i64 24, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 0, i64 24, i1 false) #17
  %24 = add nuw nsw i64 %21, 1
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 1
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %19, i64 1
  %27 = icmp eq %"class.std::__1::basic_string"* %25, %1
  br i1 %27, label %15, label %18

28:                                               ; preds = %36, %13
  %29 = phi i64 [ 0, %13 ], [ %42, %36 ]
  %30 = phi %"class.std::__1::basic_string"* [ %6, %13 ], [ %44, %36 ]
  %31 = getelementptr inbounds %"class.std::__1::reverse_iterator.133", %"class.std::__1::reverse_iterator.133"* %8, i64 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"** %31, align 8
  %32 = getelementptr inbounds %"class.std::__1::reverse_iterator.133", %"class.std::__1::reverse_iterator.133"* %8, i64 0, i32 1, i32 0
  store %"class.std::__1::basic_string"* %0, %"class.std::__1::basic_string"** %32, align 8
  %33 = getelementptr inbounds %"class.std::__1::reverse_iterator.133", %"class.std::__1::reverse_iterator.133"* %9, i64 0, i32 0, i32 0
  store %"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"** %33, align 8
  %34 = getelementptr inbounds %"class.std::__1::reverse_iterator.133", %"class.std::__1::reverse_iterator.133"* %9, i64 0, i32 1, i32 0
  store %"class.std::__1::basic_string"* %2, %"class.std::__1::basic_string"** %34, align 8
  %35 = ptrtoint %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* %3 to i64
  tail call void @_ZNSt3__120__half_inplace_mergeINS_8__invertIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_8identityENS_4lessIvEENS_6vectorISA_NS8_ISA_EEEEE13value_compareEEENS_16reverse_iteratorIPSA_EENSL_INS_11__wrap_iterISM_EEEESQ_EEvT0_SR_T1_SS_T2_T_(%"class.std::__1::basic_string"* %30, %"class.std::__1::basic_string"* %30, %"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"* %6, %"class.std::__1::basic_string"* %1, %"class.std::__1::basic_string"* %1, %"class.std::__1::reverse_iterator.133"* nonnull byval(%"class.std::__1::reverse_iterator.133") align 8 %8, %"class.std::__1::reverse_iterator.133"* nonnull byval(%"class.std::__1::reverse_iterator.133") align 8 %9, i64 %35)
  br label %46

36:                                               ; preds = %13, %36
  %37 = phi %"class.std::__1::basic_string"* [ %44, %36 ], [ %6, %13 ]
  %38 = phi %"class.std::__1::basic_string"* [ %43, %36 ], [ %1, %13 ]
  %39 = phi i64 [ %42, %36 ], [ 0, %13 ]
  %40 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  %41 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #17
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #17
  %42 = add nuw nsw i64 %39, 1
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %38, i64 1
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %37, i64 1
  %45 = icmp eq %"class.std::__1::basic_string"* %43, %2
  br i1 %45, label %28, label %36

46:                                               ; preds = %28, %15
  %47 = phi i64 [ %29, %28 ], [ %16, %15 ]
  %48 = icmp eq %"class.std::__1::basic_string"* %6, null
  %49 = icmp eq i64 %47, 0
  %50 = or i1 %48, %49
  br i1 %50, label %67, label %51

51:                                               ; preds = %46, %62
  %52 = phi i64 [ %63, %62 ], [ %47, %46 ]
  %53 = phi i64 [ %64, %62 ], [ 0, %46 ]
  %54 = phi %"class.std::__1::basic_string"* [ %65, %62 ], [ %6, %46 ]
  %55 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  tail call void @_ZdlPv(i8* %61) #19
  br label %62

62:                                               ; preds = %59, %51
  %63 = phi i64 [ %52, %51 ], [ %47, %59 ]
  %64 = add nuw i64 %53, 1
  %65 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 1
  %66 = icmp ult i64 %64, %63
  br i1 %66, label %51, label %67

67:                                               ; preds = %62, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__half_inplace_mergeIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS1_8identityENS_4lessIvEENS_6vectorIS9_NS7_IS9_EEEEE13value_compareEPS9_NS_11__wrap_iterISJ_EESL_EEvT0_SM_T1_SN_T2_T_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"struct.base::internal::flat_tree<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, base::identity, std::__1::less<void>, std::__1::vector<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> > > > >::value_compare"* dereferenceable(1)) local_unnamed_addr #0 comdat {
  %7 = icmp eq %"class.std::__1::basic_string"* %0, %1
  br i1 %7, label %95, label %8

8:                                                ; preds = %6, %90
  %9 = phi %"class.std::__1::basic_string"* [ %92, %90 ], [ %0, %6 ]
  %10 = phi %"class.std::__1::basic_string"* [ %93, %90 ], [ %4, %6 ]
  %11 = phi %"class.std::__1::basic_string"* [ %91, %90 ], [ %2, %6 ]
  %12 = icmp eq %"class.std::__1::basic_string"* %11, %3
  br i1 %12, label %13, label %31

13:                                               ; preds = %8, %23
  %14 = phi %"class.std::__1::basic_string"* [ %29, %23 ], [ %10, %8 ]
  %15 = phi %"class.std::__1::basic_string"* [ %28, %23 ], [ %9, %8 ]
  %16 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  br i1 %19, label %20, label %23

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load i8*, i8** %21, align 8
  tail call void @_ZdlPv(i8* %22) #19
  br label %23

23:                                               ; preds = %20, %13
  %24 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #17
  %26 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  store i8 0, i8* %27, align 1
  store i8 0, i8* %25, align 1
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 1
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 1
  %30 = icmp eq %"class.std::__1::basic_string"* %28, %1
  br i1 %30, label %95, label %13

31:                                               ; preds = %8
  %32 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = zext i8 %34 to i64
  %39 = select i1 %35, i64 %37, i64 %38
  %40 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %45 = load i64, i64* %44, align 8
  %46 = zext i8 %42 to i64
  %47 = select i1 %43, i64 %45, i64 %46
  %48 = icmp ult i64 %39, %47
  %49 = select i1 %48, i64 %39, i64 %47
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %62, label %51

51:                                               ; preds = %31
  %52 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  %55 = select i1 %43, i8* %53, i8* %54
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  %58 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %59 = select i1 %35, i8* %57, i8* %58
  %60 = tail call i32 @memcmp(i8* %55, i8* %59, i64 %49) #17
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %64

62:                                               ; preds = %51, %31
  %63 = icmp ult i64 %47, %39
  br i1 %63, label %66, label %78

64:                                               ; preds = %51
  %65 = icmp slt i32 %60, 0
  br i1 %65, label %66, label %78

66:                                               ; preds = %62, %64
  %67 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  tail call void @_ZdlPv(i8* %73) #19
  br label %74

74:                                               ; preds = %66, %71
  %75 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %76 = bitcast %"class.std::__1::basic_string"* %11 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 24, i1 false) #17
  store i8 0, i8* %41, align 1
  store i8 0, i8* %76, align 1
  %77 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 1
  br label %90

78:                                               ; preds = %62, %64
  %79 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #19
  br label %86

86:                                               ; preds = %78, %83
  %87 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %88 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 24, i1 false) #17
  store i8 0, i8* %33, align 1
  store i8 0, i8* %88, align 1
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 1
  br label %90

90:                                               ; preds = %74, %86
  %91 = phi %"class.std::__1::basic_string"* [ %77, %74 ], [ %11, %86 ]
  %92 = phi %"class.std::__1::basic_string"* [ %9, %74 ], [ %89, %86 ]
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 1
  %94 = icmp eq %"class.std::__1::basic_string"* %92, %1
  br i1 %94, label %95, label %8

95:                                               ; preds = %90, %23, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__120__half_inplace_mergeINS_8__invertIRN4base8internal9flat_treeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS2_8identityENS_4lessIvEENS_6vectorISA_NS8_ISA_EEEEE13value_compareEEENS_16reverse_iteratorIPSA_EENSL_INS_11__wrap_iterISM_EEEESQ_EEvT0_SR_T1_SS_T2_T_(%"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::reverse_iterator.133"* byval(%"class.std::__1::reverse_iterator.133") align 8, %"class.std::__1::reverse_iterator.133"* byval(%"class.std::__1::reverse_iterator.133") align 8, i64) local_unnamed_addr #0 comdat {
  %10 = icmp eq %"class.std::__1::basic_string"* %1, %3
  br i1 %10, label %110, label %11

11:                                               ; preds = %9
  %12 = getelementptr inbounds %"class.std::__1::reverse_iterator.133", %"class.std::__1::reverse_iterator.133"* %6, i64 0, i32 1, i32 0
  %13 = getelementptr inbounds %"class.std::__1::reverse_iterator.133", %"class.std::__1::reverse_iterator.133"* %7, i64 0, i32 1, i32 0
  br label %14

14:                                               ; preds = %11, %102
  %15 = phi %"class.std::__1::basic_string"* [ %1, %11 ], [ %106, %102 ]
  %16 = phi %"class.std::__1::basic_string"* [ %5, %11 ], [ %105, %102 ]
  %17 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %18 = icmp eq %"class.std::__1::basic_string"* %16, %17
  br i1 %18, label %19, label %39

19:                                               ; preds = %14
  %20 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  br label %21

21:                                               ; preds = %19, %33
  %22 = phi %"class.std::__1::basic_string"* [ %24, %33 ], [ %15, %19 ]
  %23 = phi %"class.std::__1::basic_string"* [ %25, %33 ], [ %20, %19 ]
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 -1
  %25 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 -1
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %21
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  tail call void @_ZdlPv(i8* %32) #19
  br label %33

33:                                               ; preds = %30, %21
  %34 = bitcast %"class.std::__1::basic_string"* %25 to i8*
  %35 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false) #17
  %36 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  store i8 0, i8* %37, align 1
  store i8 0, i8* %35, align 1
  %38 = icmp eq %"class.std::__1::basic_string"* %24, %3
  br i1 %38, label %110, label %21

39:                                               ; preds = %14
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 -1
  %41 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 -1
  %42 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %43 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %42, i64 0, i32 1, i32 0
  %44 = load i8, i8* %43, align 1
  %45 = icmp slt i8 %44, 0
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = zext i8 %44 to i64
  %49 = select i1 %45, i64 %47, i64 %48
  %50 = bitcast %"class.std::__1::basic_string"* %41 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  %54 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 -1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = zext i8 %52 to i64
  %57 = select i1 %53, i64 %55, i64 %56
  %58 = icmp ult i64 %49, %57
  %59 = select i1 %58, i64 %49, i64 %57
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %72, label %61

61:                                               ; preds = %39
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8*, i8** %62, align 8
  %64 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  %65 = select i1 %53, i8* %63, i8* %64
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %67 = load i8*, i8** %66, align 8
  %68 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %69 = select i1 %45, i8* %67, i8* %68
  %70 = tail call i32 @memcmp(i8* %65, i8* %69, i64 %59) #17
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %74

72:                                               ; preds = %61, %39
  %73 = icmp ult i64 %57, %49
  br i1 %73, label %76, label %89

74:                                               ; preds = %61
  %75 = icmp slt i32 %70, 0
  br i1 %75, label %76, label %89

76:                                               ; preds = %72, %74
  %77 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %78 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %77, i64 -1
  %79 = bitcast %"class.std::__1::basic_string"* %78 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  %81 = load i8, i8* %80, align 1
  %82 = icmp slt i8 %81, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %76
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load i8*, i8** %84, align 8
  tail call void @_ZdlPv(i8* %85) #19
  br label %86

86:                                               ; preds = %76, %83
  %87 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  %88 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 24, i1 false) #17
  br label %102

89:                                               ; preds = %72, %74
  %90 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %90, i64 -1
  %92 = bitcast %"class.std::__1::basic_string"* %91 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  tail call void @_ZdlPv(i8* %98) #19
  br label %99

99:                                               ; preds = %89, %96
  %100 = bitcast %"class.std::__1::basic_string"* %91 to i8*
  %101 = bitcast %"class.std::__1::basic_string"* %41 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %100, i8* align 8 %101, i64 24, i1 false) #17
  br label %102

102:                                              ; preds = %86, %99
  %103 = phi i8* [ %43, %86 ], [ %51, %99 ]
  %104 = phi i8* [ %88, %86 ], [ %101, %99 ]
  %105 = phi %"class.std::__1::basic_string"* [ %40, %86 ], [ %16, %99 ]
  %106 = phi %"class.std::__1::basic_string"* [ %15, %86 ], [ %41, %99 ]
  store i8 0, i8* %103, align 1
  store i8 0, i8* %104, align 1
  %107 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %108 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %107, i64 -1
  store %"class.std::__1::basic_string"* %108, %"class.std::__1::basic_string"** %13, align 8
  %109 = icmp eq %"class.std::__1::basic_string"* %106, %3
  br i1 %109, label %110, label %14

110:                                              ; preds = %102, %33, %9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @"_ZNSt3__16__sortIRZNK6policy22PolicyDictionaryMerger7DoMergeEPNS1_9PolicyMap5EntryEE3$_1PPKS4_EEvT0_SB_T_"(%"class.policy::PolicyMap::Entry"**, %"class.policy::PolicyMap::Entry"**) unnamed_addr #0 {
  br label %3

3:                                                ; preds = %208, %2
  %4 = phi %"class.policy::PolicyMap::Entry"** [ %1, %2 ], [ %188, %208 ]
  %5 = phi %"class.policy::PolicyMap::Entry"** [ %0, %2 ], [ %13, %208 ]
  %6 = ptrtoint %"class.policy::PolicyMap::Entry"** %4 to i64
  %7 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %4, i64 -1
  %8 = bitcast %"class.policy::PolicyMap::Entry"** %7 to i64*
  %9 = ptrtoint %"class.policy::PolicyMap::Entry"** %4 to i64
  br label %10

10:                                               ; preds = %217, %3
  %11 = phi %"class.policy::PolicyMap::Entry"** [ %5, %3 ], [ %218, %217 ]
  br label %12

12:                                               ; preds = %135, %10
  %13 = phi %"class.policy::PolicyMap::Entry"** [ %11, %10 ], [ %124, %135 ]
  %14 = ptrtoint %"class.policy::PolicyMap::Entry"** %13 to i64
  %15 = sub i64 %6, %14
  %16 = ashr exact i64 %15, 3
  switch i64 %16, label %42 [
    i64 0, label %221
    i64 1, label %221
    i64 2, label %17
    i64 3, label %27
    i64 4, label %31
    i64 5, label %36
  ]

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %4, i64 -1
  %19 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %18, align 8
  %20 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %13, align 8
  %21 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %20, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %19) #17
  br i1 %21, label %22, label %221

22:                                               ; preds = %17
  %23 = bitcast %"class.policy::PolicyMap::Entry"** %13 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.policy::PolicyMap::Entry"** %18 to i64*
  %26 = load i64, i64* %25, align 8
  store i64 %26, i64* %23, align 8
  store i64 %24, i64* %25, align 8
  br label %221

27:                                               ; preds = %12
  %28 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %13, i64 1
  %29 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %4, i64 -1
  %30 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZNK6policy22PolicyDictionaryMerger7DoMergeEPNS1_9PolicyMap5EntryEE3$_1PPKS4_EEjT0_SB_SB_T_"(%"class.policy::PolicyMap::Entry"** %13, %"class.policy::PolicyMap::Entry"** %28, %"class.policy::PolicyMap::Entry"** %29)
  br label %221

31:                                               ; preds = %12
  %32 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %13, i64 1
  %33 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %13, i64 2
  %34 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %4, i64 -1
  %35 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZNK6policy22PolicyDictionaryMerger7DoMergeEPNS1_9PolicyMap5EntryEE3$_1PPKS4_EEjT0_SB_SB_SB_T_"(%"class.policy::PolicyMap::Entry"** %13, %"class.policy::PolicyMap::Entry"** %32, %"class.policy::PolicyMap::Entry"** %33, %"class.policy::PolicyMap::Entry"** %34)
  br label %221

36:                                               ; preds = %12
  %37 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %13, i64 1
  %38 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %13, i64 2
  %39 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %13, i64 3
  %40 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %4, i64 -1
  %41 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZNK6policy22PolicyDictionaryMerger7DoMergeEPNS1_9PolicyMap5EntryEE3$_1PPKS4_EEjT0_SB_SB_SB_SB_T_"(%"class.policy::PolicyMap::Entry"** %13, %"class.policy::PolicyMap::Entry"** %37, %"class.policy::PolicyMap::Entry"** %38, %"class.policy::PolicyMap::Entry"** %39, %"class.policy::PolicyMap::Entry"** %40)
  br label %221

42:                                               ; preds = %12
  %43 = icmp slt i64 %15, 248
  br i1 %43, label %44, label %77

44:                                               ; preds = %42
  %45 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %13, i64 2
  %46 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %13, i64 1
  %47 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZNK6policy22PolicyDictionaryMerger7DoMergeEPNS1_9PolicyMap5EntryEE3$_1PPKS4_EEjT0_SB_SB_T_"(%"class.policy::PolicyMap::Entry"** %13, %"class.policy::PolicyMap::Entry"** %46, %"class.policy::PolicyMap::Entry"** %45) #17
  %48 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %13, i64 3
  %49 = icmp eq %"class.policy::PolicyMap::Entry"** %48, %4
  br i1 %49, label %221, label %50

50:                                               ; preds = %44, %74
  %51 = phi %"class.policy::PolicyMap::Entry"** [ %75, %74 ], [ %48, %44 ]
  %52 = phi %"class.policy::PolicyMap::Entry"** [ %51, %74 ], [ %45, %44 ]
  %53 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %51, align 8
  %54 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %52, align 8
  %55 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %54, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %53) #17
  br i1 %55, label %56, label %74

56:                                               ; preds = %50
  %57 = bitcast %"class.policy::PolicyMap::Entry"** %51 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = inttoptr i64 %58 to %"class.policy::PolicyMap::Entry"*
  br label %60

60:                                               ; preds = %67, %56
  %61 = phi %"class.policy::PolicyMap::Entry"** [ %51, %56 ], [ %62, %67 ]
  %62 = phi %"class.policy::PolicyMap::Entry"** [ %52, %56 ], [ %68, %67 ]
  %63 = bitcast %"class.policy::PolicyMap::Entry"** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = bitcast %"class.policy::PolicyMap::Entry"** %61 to i64*
  store i64 %64, i64* %65, align 8
  %66 = icmp eq %"class.policy::PolicyMap::Entry"** %62, %13
  br i1 %66, label %71, label %67

67:                                               ; preds = %60
  %68 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %62, i64 -1
  %69 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %68, align 8
  %70 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %69, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %59) #17
  br i1 %70, label %60, label %71

71:                                               ; preds = %60, %67
  %72 = phi %"class.policy::PolicyMap::Entry"** [ %62, %67 ], [ %13, %60 ]
  %73 = bitcast %"class.policy::PolicyMap::Entry"** %72 to i64*
  store i64 %58, i64* %73, align 8
  br label %74

74:                                               ; preds = %71, %50
  %75 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %51, i64 1
  %76 = icmp eq %"class.policy::PolicyMap::Entry"** %75, %4
  br i1 %76, label %221, label %50

77:                                               ; preds = %42
  %78 = icmp sgt i64 %15, 7992
  %79 = sdiv i64 %16, 2
  %80 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %13, i64 %79
  br i1 %78, label %81, label %86

81:                                               ; preds = %77
  %82 = sdiv i64 %16, 4
  %83 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %13, i64 %82
  %84 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %80, i64 %82
  %85 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZNK6policy22PolicyDictionaryMerger7DoMergeEPNS1_9PolicyMap5EntryEE3$_1PPKS4_EEjT0_SB_SB_SB_SB_T_"(%"class.policy::PolicyMap::Entry"** %13, %"class.policy::PolicyMap::Entry"** %83, %"class.policy::PolicyMap::Entry"** %80, %"class.policy::PolicyMap::Entry"** %84, %"class.policy::PolicyMap::Entry"** %7)
  br label %88

86:                                               ; preds = %77
  %87 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZNK6policy22PolicyDictionaryMerger7DoMergeEPNS1_9PolicyMap5EntryEE3$_1PPKS4_EEjT0_SB_SB_T_"(%"class.policy::PolicyMap::Entry"** %13, %"class.policy::PolicyMap::Entry"** %80, %"class.policy::PolicyMap::Entry"** %7)
  br label %88

88:                                               ; preds = %86, %81
  %89 = phi i32 [ %85, %81 ], [ %87, %86 ]
  %90 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %13, align 8
  %91 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %80, align 8
  %92 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %91, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %90) #17
  br i1 %92, label %152, label %93

93:                                               ; preds = %88, %142
  %94 = phi %"class.policy::PolicyMap::Entry"** [ %95, %142 ], [ %7, %88 ]
  %95 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %94, i64 -1
  %96 = icmp eq %"class.policy::PolicyMap::Entry"** %13, %95
  br i1 %96, label %97, label %142

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %13, i64 1
  %99 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %13, align 8
  %100 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %7, align 8
  %101 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %100, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %99) #17
  br i1 %101, label %117, label %102

102:                                              ; preds = %97
  %103 = icmp eq %"class.policy::PolicyMap::Entry"** %98, %7
  br i1 %103, label %221, label %104

104:                                              ; preds = %102, %114
  %105 = phi %"class.policy::PolicyMap::Entry"** [ %115, %114 ], [ %98, %102 ]
  %106 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %13, align 8
  %107 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %105, align 8
  %108 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %107, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %106) #17
  br i1 %108, label %109, label %114

109:                                              ; preds = %104
  %110 = bitcast %"class.policy::PolicyMap::Entry"** %105 to i64*
  %111 = load i64, i64* %110, align 8
  %112 = load i64, i64* %8, align 8
  store i64 %112, i64* %110, align 8
  store i64 %111, i64* %8, align 8
  %113 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %105, i64 1
  br label %117

114:                                              ; preds = %104
  %115 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %105, i64 1
  %116 = icmp eq %"class.policy::PolicyMap::Entry"** %115, %7
  br i1 %116, label %221, label %104

117:                                              ; preds = %109, %97
  %118 = phi %"class.policy::PolicyMap::Entry"** [ %98, %97 ], [ %113, %109 ]
  %119 = icmp eq %"class.policy::PolicyMap::Entry"** %118, %7
  br i1 %119, label %221, label %120

120:                                              ; preds = %117, %137
  %121 = phi %"class.policy::PolicyMap::Entry"** [ %128, %137 ], [ %118, %117 ]
  %122 = phi %"class.policy::PolicyMap::Entry"** [ %132, %137 ], [ %7, %117 ]
  br label %123

123:                                              ; preds = %123, %120
  %124 = phi %"class.policy::PolicyMap::Entry"** [ %121, %120 ], [ %128, %123 ]
  %125 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %13, align 8
  %126 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %124, align 8
  %127 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %126, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %125) #17
  %128 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %124, i64 1
  br i1 %127, label %129, label %123

129:                                              ; preds = %123, %129
  %130 = phi %"class.policy::PolicyMap::Entry"** [ %132, %129 ], [ %122, %123 ]
  %131 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %13, align 8
  %132 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %130, i64 -1
  %133 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %132, align 8
  %134 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %133, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %131) #17
  br i1 %134, label %129, label %135

135:                                              ; preds = %129
  %136 = icmp ult %"class.policy::PolicyMap::Entry"** %124, %132
  br i1 %136, label %137, label %12

137:                                              ; preds = %135
  %138 = bitcast %"class.policy::PolicyMap::Entry"** %124 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = bitcast %"class.policy::PolicyMap::Entry"** %132 to i64*
  %141 = load i64, i64* %140, align 8
  store i64 %141, i64* %138, align 8
  store i64 %139, i64* %140, align 8
  br label %120

142:                                              ; preds = %93
  %143 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %95, align 8
  %144 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %80, align 8
  %145 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %144, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %143) #17
  br i1 %145, label %146, label %93

146:                                              ; preds = %142
  %147 = bitcast %"class.policy::PolicyMap::Entry"** %13 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = bitcast %"class.policy::PolicyMap::Entry"** %95 to i64*
  %150 = load i64, i64* %149, align 8
  store i64 %150, i64* %147, align 8
  store i64 %148, i64* %149, align 8
  %151 = add i32 %89, 1
  br label %152

152:                                              ; preds = %88, %146
  %153 = phi i32 [ %151, %146 ], [ %89, %88 ]
  %154 = phi %"class.policy::PolicyMap::Entry"** [ %95, %146 ], [ %7, %88 ]
  %155 = ptrtoint %"class.policy::PolicyMap::Entry"** %13 to i64
  %156 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %13, i64 1
  %157 = icmp ult %"class.policy::PolicyMap::Entry"** %156, %154
  br i1 %157, label %158, label %185

158:                                              ; preds = %152, %177
  %159 = phi %"class.policy::PolicyMap::Entry"** [ %184, %177 ], [ %80, %152 ]
  %160 = phi i32 [ %182, %177 ], [ %153, %152 ]
  %161 = phi %"class.policy::PolicyMap::Entry"** [ %168, %177 ], [ %156, %152 ]
  %162 = phi %"class.policy::PolicyMap::Entry"** [ %171, %177 ], [ %154, %152 ]
  br label %163

163:                                              ; preds = %163, %158
  %164 = phi %"class.policy::PolicyMap::Entry"** [ %161, %158 ], [ %168, %163 ]
  %165 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %164, align 8
  %166 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %159, align 8
  %167 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %166, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %165) #17
  %168 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %164, i64 1
  br i1 %167, label %163, label %169

169:                                              ; preds = %163, %169
  %170 = phi %"class.policy::PolicyMap::Entry"** [ %171, %169 ], [ %162, %163 ]
  %171 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %170, i64 -1
  %172 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %171, align 8
  %173 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %159, align 8
  %174 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %173, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %172) #17
  br i1 %174, label %175, label %169

175:                                              ; preds = %169
  %176 = icmp ugt %"class.policy::PolicyMap::Entry"** %164, %171
  br i1 %176, label %185, label %177

177:                                              ; preds = %175
  %178 = bitcast %"class.policy::PolicyMap::Entry"** %164 to i64*
  %179 = load i64, i64* %178, align 8
  %180 = bitcast %"class.policy::PolicyMap::Entry"** %171 to i64*
  %181 = load i64, i64* %180, align 8
  store i64 %181, i64* %178, align 8
  store i64 %179, i64* %180, align 8
  %182 = add i32 %160, 1
  %183 = icmp eq %"class.policy::PolicyMap::Entry"** %159, %164
  %184 = select i1 %183, %"class.policy::PolicyMap::Entry"** %171, %"class.policy::PolicyMap::Entry"** %159
  br label %158

185:                                              ; preds = %175, %152
  %186 = phi %"class.policy::PolicyMap::Entry"** [ %80, %152 ], [ %159, %175 ]
  %187 = phi i32 [ %153, %152 ], [ %160, %175 ]
  %188 = phi %"class.policy::PolicyMap::Entry"** [ %156, %152 ], [ %164, %175 ]
  %189 = icmp eq %"class.policy::PolicyMap::Entry"** %188, %186
  br i1 %189, label %200, label %190

190:                                              ; preds = %185
  %191 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %186, align 8
  %192 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %188, align 8
  %193 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %192, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %191) #17
  br i1 %193, label %194, label %200

194:                                              ; preds = %190
  %195 = bitcast %"class.policy::PolicyMap::Entry"** %188 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.policy::PolicyMap::Entry"** %186 to i64*
  %198 = load i64, i64* %197, align 8
  store i64 %198, i64* %195, align 8
  store i64 %196, i64* %197, align 8
  %199 = add i32 %187, 1
  br label %200

200:                                              ; preds = %185, %194, %190
  %201 = phi i32 [ %199, %194 ], [ %187, %190 ], [ %187, %185 ]
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %203, label %210

203:                                              ; preds = %200
  %204 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZNK6policy22PolicyDictionaryMerger7DoMergeEPNS1_9PolicyMap5EntryEE3$_1PPKS4_EEbT0_SB_T_"(%"class.policy::PolicyMap::Entry"** %13, %"class.policy::PolicyMap::Entry"** %188)
  %205 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %188, i64 1
  %206 = tail call fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZNK6policy22PolicyDictionaryMerger7DoMergeEPNS1_9PolicyMap5EntryEE3$_1PPKS4_EEbT0_SB_T_"(%"class.policy::PolicyMap::Entry"** %205, %"class.policy::PolicyMap::Entry"** %4)
  br i1 %206, label %207, label %209

207:                                              ; preds = %203
  br i1 %204, label %221, label %208

208:                                              ; preds = %207, %219
  br label %3

209:                                              ; preds = %203
  br i1 %204, label %217, label %210

210:                                              ; preds = %209, %200
  %211 = ptrtoint %"class.policy::PolicyMap::Entry"** %188 to i64
  %212 = sub i64 %211, %155
  %213 = sub i64 %9, %211
  %214 = icmp slt i64 %212, %213
  br i1 %214, label %215, label %219

215:                                              ; preds = %210
  tail call fastcc void @"_ZNSt3__16__sortIRZNK6policy22PolicyDictionaryMerger7DoMergeEPNS1_9PolicyMap5EntryEE3$_1PPKS4_EEvT0_SB_T_"(%"class.policy::PolicyMap::Entry"** %13, %"class.policy::PolicyMap::Entry"** %188)
  %216 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %188, i64 1
  br label %217

217:                                              ; preds = %215, %209
  %218 = phi %"class.policy::PolicyMap::Entry"** [ %205, %209 ], [ %216, %215 ]
  br label %10

219:                                              ; preds = %210
  %220 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %188, i64 1
  tail call fastcc void @"_ZNSt3__16__sortIRZNK6policy22PolicyDictionaryMerger7DoMergeEPNS1_9PolicyMap5EntryEE3$_1PPKS4_EEvT0_SB_T_"(%"class.policy::PolicyMap::Entry"** %220, %"class.policy::PolicyMap::Entry"** %4)
  br label %208

221:                                              ; preds = %207, %117, %12, %12, %102, %114, %74, %44, %17, %22, %27, %31, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort3IRZNK6policy22PolicyDictionaryMerger7DoMergeEPNS1_9PolicyMap5EntryEE3$_1PPKS4_EEjT0_SB_SB_T_"(%"class.policy::PolicyMap::Entry"** nocapture, %"class.policy::PolicyMap::Entry"** nocapture, %"class.policy::PolicyMap::Entry"** nocapture) unnamed_addr #0 {
  %4 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %1, align 8
  %5 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %0, align 8
  %6 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %5, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %4) #17
  %7 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %2, align 8
  %8 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %1, align 8
  %9 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %8, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %7) #17
  br i1 %6, label %23, label %10

10:                                               ; preds = %3
  br i1 %9, label %11, label %39

11:                                               ; preds = %10
  %12 = bitcast %"class.policy::PolicyMap::Entry"** %1 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.policy::PolicyMap::Entry"** %2 to i64*
  %15 = load i64, i64* %14, align 8
  store i64 %15, i64* %12, align 8
  store i64 %13, i64* %14, align 8
  %16 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %1, align 8
  %17 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %0, align 8
  %18 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %17, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %16) #17
  br i1 %18, label %19, label %39

19:                                               ; preds = %11
  %20 = bitcast %"class.policy::PolicyMap::Entry"** %0 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = load i64, i64* %12, align 8
  store i64 %22, i64* %20, align 8
  store i64 %21, i64* %12, align 8
  br label %39

23:                                               ; preds = %3
  %24 = bitcast %"class.policy::PolicyMap::Entry"** %0 to i64*
  %25 = load i64, i64* %24, align 8
  br i1 %9, label %26, label %29

26:                                               ; preds = %23
  %27 = bitcast %"class.policy::PolicyMap::Entry"** %2 to i64*
  %28 = load i64, i64* %27, align 8
  store i64 %28, i64* %24, align 8
  store i64 %25, i64* %27, align 8
  br label %39

29:                                               ; preds = %23
  %30 = bitcast %"class.policy::PolicyMap::Entry"** %1 to i64*
  %31 = load i64, i64* %30, align 8
  store i64 %31, i64* %24, align 8
  store i64 %25, i64* %30, align 8
  %32 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %2, align 8
  %33 = inttoptr i64 %25 to %"class.policy::PolicyMap::Entry"*
  %34 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %33, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %32) #17
  br i1 %34, label %35, label %39

35:                                               ; preds = %29
  %36 = load i64, i64* %30, align 8
  %37 = bitcast %"class.policy::PolicyMap::Entry"** %2 to i64*
  %38 = load i64, i64* %37, align 8
  store i64 %38, i64* %30, align 8
  store i64 %36, i64* %37, align 8
  br label %39

39:                                               ; preds = %29, %35, %11, %19, %10, %26
  %40 = phi i32 [ 1, %26 ], [ 0, %10 ], [ 2, %19 ], [ 1, %11 ], [ 2, %35 ], [ 1, %29 ]
  ret i32 %40
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort4IRZNK6policy22PolicyDictionaryMerger7DoMergeEPNS1_9PolicyMap5EntryEE3$_1PPKS4_EEjT0_SB_SB_SB_T_"(%"class.policy::PolicyMap::Entry"** nocapture, %"class.policy::PolicyMap::Entry"** nocapture, %"class.policy::PolicyMap::Entry"** nocapture, %"class.policy::PolicyMap::Entry"** nocapture) unnamed_addr #0 {
  %5 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZNK6policy22PolicyDictionaryMerger7DoMergeEPNS1_9PolicyMap5EntryEE3$_1PPKS4_EEjT0_SB_SB_T_"(%"class.policy::PolicyMap::Entry"** %0, %"class.policy::PolicyMap::Entry"** %1, %"class.policy::PolicyMap::Entry"** %2)
  %6 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %3, align 8
  %7 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %2, align 8
  %8 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %7, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %6) #17
  br i1 %8, label %9, label %31

9:                                                ; preds = %4
  %10 = bitcast %"class.policy::PolicyMap::Entry"** %2 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.policy::PolicyMap::Entry"** %3 to i64*
  %13 = load i64, i64* %12, align 8
  store i64 %13, i64* %10, align 8
  store i64 %11, i64* %12, align 8
  %14 = add i32 %5, 1
  %15 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %2, align 8
  %16 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %1, align 8
  %17 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %16, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %15) #17
  br i1 %17, label %18, label %31

18:                                               ; preds = %9
  %19 = bitcast %"class.policy::PolicyMap::Entry"** %1 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = load i64, i64* %10, align 8
  store i64 %21, i64* %19, align 8
  store i64 %20, i64* %10, align 8
  %22 = add i32 %5, 2
  %23 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %1, align 8
  %24 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %0, align 8
  %25 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %24, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %23) #17
  br i1 %25, label %26, label %31

26:                                               ; preds = %18
  %27 = bitcast %"class.policy::PolicyMap::Entry"** %0 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = load i64, i64* %19, align 8
  store i64 %29, i64* %27, align 8
  store i64 %28, i64* %19, align 8
  %30 = add i32 %5, 3
  br label %31

31:                                               ; preds = %9, %26, %18, %4
  %32 = phi i32 [ %30, %26 ], [ %22, %18 ], [ %14, %9 ], [ %5, %4 ]
  ret i32 %32
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZNSt3__17__sort5IRZNK6policy22PolicyDictionaryMerger7DoMergeEPNS1_9PolicyMap5EntryEE3$_1PPKS4_EEjT0_SB_SB_SB_SB_T_"(%"class.policy::PolicyMap::Entry"** nocapture, %"class.policy::PolicyMap::Entry"** nocapture, %"class.policy::PolicyMap::Entry"** nocapture, %"class.policy::PolicyMap::Entry"** nocapture, %"class.policy::PolicyMap::Entry"** nocapture) unnamed_addr #0 {
  %6 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZNK6policy22PolicyDictionaryMerger7DoMergeEPNS1_9PolicyMap5EntryEE3$_1PPKS4_EEjT0_SB_SB_SB_T_"(%"class.policy::PolicyMap::Entry"** %0, %"class.policy::PolicyMap::Entry"** %1, %"class.policy::PolicyMap::Entry"** %2, %"class.policy::PolicyMap::Entry"** %3)
  %7 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %4, align 8
  %8 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %3, align 8
  %9 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %8, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %7) #17
  br i1 %9, label %10, label %40

10:                                               ; preds = %5
  %11 = bitcast %"class.policy::PolicyMap::Entry"** %3 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.policy::PolicyMap::Entry"** %4 to i64*
  %14 = load i64, i64* %13, align 8
  store i64 %14, i64* %11, align 8
  store i64 %12, i64* %13, align 8
  %15 = add i32 %6, 1
  %16 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %3, align 8
  %17 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %2, align 8
  %18 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %17, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %16) #17
  br i1 %18, label %19, label %40

19:                                               ; preds = %10
  %20 = bitcast %"class.policy::PolicyMap::Entry"** %2 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = load i64, i64* %11, align 8
  store i64 %22, i64* %20, align 8
  store i64 %21, i64* %11, align 8
  %23 = add i32 %6, 2
  %24 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %2, align 8
  %25 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %1, align 8
  %26 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %25, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %24) #17
  br i1 %26, label %27, label %40

27:                                               ; preds = %19
  %28 = bitcast %"class.policy::PolicyMap::Entry"** %1 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = load i64, i64* %20, align 8
  store i64 %30, i64* %28, align 8
  store i64 %29, i64* %20, align 8
  %31 = add i32 %6, 3
  %32 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %1, align 8
  %33 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %0, align 8
  %34 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %33, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %32) #17
  br i1 %34, label %35, label %40

35:                                               ; preds = %27
  %36 = bitcast %"class.policy::PolicyMap::Entry"** %0 to i64*
  %37 = load i64, i64* %36, align 8
  %38 = load i64, i64* %28, align 8
  store i64 %38, i64* %36, align 8
  store i64 %37, i64* %28, align 8
  %39 = add i32 %6, 4
  br label %40

40:                                               ; preds = %10, %27, %35, %19, %5
  %41 = phi i32 [ %39, %35 ], [ %31, %27 ], [ %23, %19 ], [ %15, %10 ], [ %6, %5 ]
  ret i32 %41
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc zeroext i1 @"_ZNSt3__127__insertion_sort_incompleteIRZNK6policy22PolicyDictionaryMerger7DoMergeEPNS1_9PolicyMap5EntryEE3$_1PPKS4_EEbT0_SB_T_"(%"class.policy::PolicyMap::Entry"**, %"class.policy::PolicyMap::Entry"**) unnamed_addr #0 {
  %3 = ptrtoint %"class.policy::PolicyMap::Entry"** %1 to i64
  %4 = ptrtoint %"class.policy::PolicyMap::Entry"** %0 to i64
  %5 = sub i64 %3, %4
  %6 = ashr exact i64 %5, 3
  switch i64 %6, label %32 [
    i64 0, label %72
    i64 1, label %72
    i64 2, label %7
    i64 3, label %17
    i64 4, label %21
    i64 5, label %26
  ]

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %1, i64 -1
  %9 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %8, align 8
  %10 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %0, align 8
  %11 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %10, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %9) #17
  br i1 %11, label %12, label %72

12:                                               ; preds = %7
  %13 = bitcast %"class.policy::PolicyMap::Entry"** %0 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.policy::PolicyMap::Entry"** %8 to i64*
  %16 = load i64, i64* %15, align 8
  store i64 %16, i64* %13, align 8
  store i64 %14, i64* %15, align 8
  br label %72

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %0, i64 1
  %19 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %1, i64 -1
  %20 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZNK6policy22PolicyDictionaryMerger7DoMergeEPNS1_9PolicyMap5EntryEE3$_1PPKS4_EEjT0_SB_SB_T_"(%"class.policy::PolicyMap::Entry"** %0, %"class.policy::PolicyMap::Entry"** %18, %"class.policy::PolicyMap::Entry"** %19)
  br label %72

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %0, i64 1
  %23 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %0, i64 2
  %24 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %1, i64 -1
  %25 = tail call fastcc i32 @"_ZNSt3__17__sort4IRZNK6policy22PolicyDictionaryMerger7DoMergeEPNS1_9PolicyMap5EntryEE3$_1PPKS4_EEjT0_SB_SB_SB_T_"(%"class.policy::PolicyMap::Entry"** %0, %"class.policy::PolicyMap::Entry"** %22, %"class.policy::PolicyMap::Entry"** %23, %"class.policy::PolicyMap::Entry"** %24)
  br label %72

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %0, i64 1
  %28 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %0, i64 2
  %29 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %0, i64 3
  %30 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %1, i64 -1
  %31 = tail call fastcc i32 @"_ZNSt3__17__sort5IRZNK6policy22PolicyDictionaryMerger7DoMergeEPNS1_9PolicyMap5EntryEE3$_1PPKS4_EEjT0_SB_SB_SB_SB_T_"(%"class.policy::PolicyMap::Entry"** %0, %"class.policy::PolicyMap::Entry"** %27, %"class.policy::PolicyMap::Entry"** %28, %"class.policy::PolicyMap::Entry"** %29, %"class.policy::PolicyMap::Entry"** %30)
  br label %72

32:                                               ; preds = %2
  %33 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %0, i64 2
  %34 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %0, i64 1
  %35 = tail call fastcc i32 @"_ZNSt3__17__sort3IRZNK6policy22PolicyDictionaryMerger7DoMergeEPNS1_9PolicyMap5EntryEE3$_1PPKS4_EEjT0_SB_SB_T_"(%"class.policy::PolicyMap::Entry"** %0, %"class.policy::PolicyMap::Entry"** %34, %"class.policy::PolicyMap::Entry"** %33)
  %36 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %0, i64 3
  %37 = icmp eq %"class.policy::PolicyMap::Entry"** %36, %1
  br i1 %37, label %72, label %38

38:                                               ; preds = %32, %65
  %39 = phi %"class.policy::PolicyMap::Entry"** [ %67, %65 ], [ %36, %32 ]
  %40 = phi i32 [ %66, %65 ], [ 0, %32 ]
  %41 = phi %"class.policy::PolicyMap::Entry"** [ %39, %65 ], [ %33, %32 ]
  %42 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %39, align 8
  %43 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %41, align 8
  %44 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %43, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %42) #17
  br i1 %44, label %45, label %65

45:                                               ; preds = %38
  %46 = bitcast %"class.policy::PolicyMap::Entry"** %39 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = inttoptr i64 %47 to %"class.policy::PolicyMap::Entry"*
  br label %49

49:                                               ; preds = %56, %45
  %50 = phi %"class.policy::PolicyMap::Entry"** [ %39, %45 ], [ %51, %56 ]
  %51 = phi %"class.policy::PolicyMap::Entry"** [ %41, %45 ], [ %57, %56 ]
  %52 = bitcast %"class.policy::PolicyMap::Entry"** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = bitcast %"class.policy::PolicyMap::Entry"** %50 to i64*
  store i64 %53, i64* %54, align 8
  %55 = icmp eq %"class.policy::PolicyMap::Entry"** %51, %0
  br i1 %55, label %60, label %56

56:                                               ; preds = %49
  %57 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %51, i64 -1
  %58 = load %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %57, align 8
  %59 = tail call zeroext i1 @_ZNK6policy9PolicyMap5Entry24has_higher_priority_thanERKS1_(%"class.policy::PolicyMap::Entry"* %58, %"class.policy::PolicyMap::Entry"* dereferenceable(120) %48) #17
  br i1 %59, label %49, label %60

60:                                               ; preds = %49, %56
  %61 = phi %"class.policy::PolicyMap::Entry"** [ %51, %56 ], [ %0, %49 ]
  %62 = bitcast %"class.policy::PolicyMap::Entry"** %61 to i64*
  store i64 %47, i64* %62, align 8
  %63 = add i32 %40, 1
  %64 = icmp eq i32 %63, 8
  br i1 %64, label %69, label %65

65:                                               ; preds = %60, %38
  %66 = phi i32 [ %63, %60 ], [ %40, %38 ]
  %67 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %39, i64 1
  %68 = icmp eq %"class.policy::PolicyMap::Entry"** %67, %1
  br i1 %68, label %72, label %38

69:                                               ; preds = %60
  %70 = getelementptr inbounds %"class.policy::PolicyMap::Entry"*, %"class.policy::PolicyMap::Entry"** %39, i64 1
  %71 = icmp eq %"class.policy::PolicyMap::Entry"** %70, %1
  br label %72

72:                                               ; preds = %65, %69, %32, %7, %12, %2, %2, %26, %21, %17
  %73 = phi i1 [ true, %26 ], [ true, %21 ], [ true, %17 ], [ true, %2 ], [ true, %2 ], [ true, %12 ], [ true, %7 ], [ true, %32 ], [ %71, %69 ], [ true, %65 ]
  ret i1 %73
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEEN6policy9PolicyMap5EntryEEENS_19__map_value_compareIS7_SB_NS_4lessIS7_EELb1EEENS5_ISB_EEE4findIS7_EENS_15__tree_iteratorISB_PNS_11__tree_nodeISB_PvEElEERKT_(%"class.std::__1::__tree.62"*, %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree.62", %"class.std::__1::__tree.62"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %84, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = zext i8 %10 to i64
  %15 = select i1 %11, i64 %13, i64 %14
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  %19 = select i1 %11, i8* %17, i8* %18
  br label %20

20:                                               ; preds = %46, %7
  %21 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %54, %46 ]
  %22 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %55, %46 ]
  %23 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1
  %24 = bitcast %"struct.std::__1::__value_type"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  %28 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = zext i8 %26 to i64
  %31 = select i1 %27, i64 %29, i64 %30
  %32 = icmp ult i64 %15, %31
  %33 = select i1 %32, i64 %15, i64 %31
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %42, label %35

35:                                               ; preds = %20
  %36 = getelementptr inbounds %"struct.std::__1::__value_type", %"struct.std::__1::__value_type"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = bitcast %"struct.std::__1::__value_type"* %23 to i8*
  %39 = select i1 %27, i8* %37, i8* %38
  %40 = tail call i32 @memcmp(i8* %39, i8* %19, i64 %33) #17
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %46

42:                                               ; preds = %35, %20
  %43 = icmp ult i64 %31, %15
  %44 = zext i1 %32 to i32
  %45 = select i1 %43, i32 -1, i32 %44
  br label %46

46:                                               ; preds = %42, %35
  %47 = phi i32 [ %45, %42 ], [ %40, %35 ]
  %48 = icmp slt i32 %47, 0
  %49 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 1
  %50 = bitcast %"class.std::__1::__tree_node_base"** %49 to %"class.std::__1::__tree_node"**
  %51 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %22, i64 0, i32 0, i32 0
  %52 = bitcast %"class.std::__1::__tree_node"* %22 to %"class.std::__1::__tree_node"**
  %53 = select i1 %48, %"class.std::__1::__tree_node"** %50, %"class.std::__1::__tree_node"** %52
  %54 = select i1 %48, %"class.std::__1::__tree_end_node"* %21, %"class.std::__1::__tree_end_node"* %51
  %55 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %53, align 8
  %56 = icmp eq %"class.std::__1::__tree_node"* %55, null
  br i1 %56, label %57, label %20

57:                                               ; preds = %46
  %58 = icmp eq %"class.std::__1::__tree_end_node"* %54, %3
  br i1 %58, label %84, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 4
  %61 = bitcast %"class.std::__1::__tree_end_node"* %60 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %62 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %61, i64 0, i32 1, i32 0
  %63 = load i8, i8* %62, align 1
  %64 = icmp slt i8 %63, 0
  %65 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 5
  %66 = bitcast %"class.std::__1::__tree_end_node"* %65 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = zext i8 %63 to i64
  %69 = select i1 %64, i64 %67, i64 %68
  %70 = icmp ult i64 %69, %15
  %71 = select i1 %70, i64 %69, i64 %15
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %80, label %73

73:                                               ; preds = %59
  %74 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8**
  %75 = load i8*, i8** %74, align 8
  %76 = bitcast %"class.std::__1::__tree_end_node"* %60 to i8*
  %77 = select i1 %64, i8* %75, i8* %76
  %78 = tail call i32 @memcmp(i8* %19, i8* %77, i64 %71) #17
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %82

80:                                               ; preds = %73, %59
  %81 = icmp ult i64 %15, %69
  br i1 %81, label %84, label %85

82:                                               ; preds = %73
  %83 = icmp slt i32 %78, 0
  br i1 %83, label %84, label %85

84:                                               ; preds = %57, %80, %2, %82
  br label %85

85:                                               ; preds = %80, %82, %84
  %86 = phi %"class.std::__1::__tree_end_node"* [ %3, %84 ], [ %54, %82 ], [ %54, %80 ]
  ret %"class.std::__1::__tree_end_node"* %86
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nobuiltin nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #17 = { nounwind }
attributes #18 = { noreturn nounwind }
attributes #19 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZNSt3__16__treeIPKN4base5ValueEZNK6policy16PolicyListMerger7DoMergeEPNS5_9PolicyMap5EntryEE3$_0NS_9allocatorIS4_EEE16__construct_nodeIJS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINSB_ISI_EEEEEEDpOT_: argument 0"}
!5 = distinct !{!5, !"_ZNSt3__16__treeIPKN4base5ValueEZNK6policy16PolicyListMerger7DoMergeEPNS5_9PolicyMap5EntryEE3$_0NS_9allocatorIS4_EEE16__construct_nodeIJS4_EEENS_10unique_ptrINS_11__tree_nodeIS4_PvEENS_22__tree_node_destructorINSB_ISI_EEEEEEDpOT_"}
