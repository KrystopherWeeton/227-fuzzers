; ModuleID = '../../third_party/skia/src/shaders/gradients/SkTwoPointConicalGradient.cpp'
source_filename = "../../third_party/skia/src/shaders/gradients/SkTwoPointConicalGradient.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.SkPoint = type { float, float }
%"struct.SkGradientShaderBase::Descriptor.base" = type <{ %class.SkMatrix*, %struct.SkRGBA4f*, %class.sk_sp, float*, i32, i32, i32 }>
%struct.SkRGBA4f = type { float, float, float, float }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [256 x i8] }
%class.SkTArray = type { %struct.SkRGBA4f*, i64 }
%class.SkSTArray.12 = type { %class.SkAlignedSTStorage.13, %class.SkTArray.14 }
%class.SkAlignedSTStorage.13 = type { [64 x i8] }
%class.SkTArray.14 = type { float*, i64 }
%class.SkMatrix = type { [9 x float], i32 }
%class.SkTwoPointConicalGradient = type { %class.SkGradientShaderBase.base, %struct.SkPoint, %struct.SkPoint, float, float, i32, %"struct.SkTwoPointConicalGradient::FocalData", [4 x i8] }
%class.SkGradientShaderBase.base = type <{ %class.SkShaderBase.base, %class.SkMatrix, i32, i8, [7 x i8], %struct.SkRGBA4f*, float*, i32, [4 x i8], %class.sk_sp, %class.SkAutoSTMalloc, i8 }>
%class.SkShaderBase.base = type { %class.SkShader.base, %class.SkMatrix }
%class.SkShader.base = type { %class.SkFlattenable.base }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%class.SkAutoSTMalloc = type { i8*, %union.anon }
%union.anon = type { [20 x i32] }
%"struct.SkTwoPointConicalGradient::FocalData" = type { float, float, i8 }
%"struct.SkGradientShaderBase::Descriptor" = type <{ %class.SkMatrix*, %struct.SkRGBA4f*, %class.sk_sp, float*, i32, i32, i32, [4 x i8] }>
%class.sk_sp.6 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkGradientShaderBase = type <{ %class.SkShaderBase.base, %class.SkMatrix, i32, i8, [7 x i8], %struct.SkRGBA4f*, float*, i32, [4 x i8], %class.sk_sp, %class.SkAutoSTMalloc, i8, [7 x i8] }>
%"struct.SkShader::GradientInfo" = type { i32, i32*, float*, [2 x %struct.SkPoint], [2 x float], i32, i32 }
%class.sk_sp.11 = type { %class.SkFlattenable* }
%class.SkFlattenable = type { %class.SkRefCnt.base, [4 x i8] }
%class.SkReadBuffer = type <{ i8*, i8*, i8*, %class.SkTHashMap, i32, [4 x i8], %class.sk_sp.8*, i32, [4 x i8], {}**, i32, [4 x i8], %struct.SkDeserialProcs, i8, [7 x i8] }>
%class.SkTHashMap = type { %class.SkTHashTable }
%class.SkTHashTable = type { i32, i32, %class.SkAutoTArray }
%class.SkAutoTArray = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<unsigned int, sk_sp<SkFlattenable> (*)(SkReadBuffer &), SkGoodHash>::Pair" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { i32, void (%class.sk_sp.11*, %class.SkReadBuffer*)* }
%class.sk_sp.8 = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic" }
%class.SkFontStyle = type { i32 }
%struct.SkRect = type { float, float, float, float }
%struct.SkDeserialProcs = type { {}*, i8*, {}*, i8*, void (%class.sk_sp.8*, i8*, i64, i8*)*, i8* }
%"class.SkGradientShaderBase::DescriptorScope" = type { %"struct.SkGradientShaderBase::Descriptor.base", %class.SkSTArray, %class.SkSTArray.12, %class.SkMatrix }
%class.SkWriteBuffer = type { i32 (...)**, %struct.SkSerialProcs }
%struct.SkSerialProcs = type { void (%class.sk_sp.19*, %class.SkPicture*, i8*)*, i8*, void (%class.sk_sp.19*, %class.SkImage*, i8*)*, i8*, void (%class.sk_sp.19*, %class.SkTypeface*, i8*)*, i8* }
%class.sk_sp.19 = type { %class.SkData* }
%class.SkData = type { %class.SkNVRefCnt.20, void (i8*, i8*)*, i8*, i8*, i64 }
%class.SkNVRefCnt.20 = type { %"struct.std::__1::atomic" }
%class.SkPicture = type <{ %class.SkRefCnt.base, i32, %"struct.std::__1::atomic.15", [7 x i8] }>
%"struct.std::__1::atomic.15" = type { %"struct.std::__1::__atomic_base.16" }
%"struct.std::__1::__atomic_base.16" = type { %"struct.std::__1::__cxx_atomic_impl.17" }
%"struct.std::__1::__cxx_atomic_impl.17" = type { %"struct.std::__1::__cxx_atomic_base_impl.18" }
%"struct.std::__1::__cxx_atomic_base_impl.18" = type { i8 }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%struct.SkISize = type { i32, i32 }
%class.SkArenaAlloc = type <{ i8*, i8*, i8*, %class.SkFibBlockSizes, [4 x i8] }>
%class.SkFibBlockSizes = type { i32 }
%class.SkRasterPipeline = type { %class.SkArenaAlloc*, %"struct.SkRasterPipeline::StageList"*, i32, i32 }
%"struct.SkRasterPipeline::StageList" = type { %"struct.SkRasterPipeline::StageList"*, i32, i8* }
%"class.skvm::Builder" = type <{ %class.SkTHashMap.21, %"class.std::__1::vector", %"class.std::__1::vector.33", %"struct.skvm::Features", [6 x i8] }>
%class.SkTHashMap.21 = type { %class.SkTHashTable.22 }
%class.SkTHashTable.22 = type { i32, i32, %class.SkAutoTArray.23 }
%class.SkAutoTArray.23 = type { %"class.std::__1::unique_ptr.24" }
%"class.std::__1::unique_ptr.24" = type { %"class.std::__1::__compressed_pair.25" }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair, skvm::Instruction, SkTHashMap<skvm::Instruction, int, skvm::InstructionHash>::Pair>::Slot" = type opaque
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.skvm::Instruction"*, %"struct.skvm::Instruction"*, %"class.std::__1::__compressed_pair.30" }
%"struct.skvm::Instruction" = type { i32, i32, i32, i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"struct.skvm::Instruction"* }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { i32*, i32*, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { i32* }
%"struct.skvm::Features" = type { i8, i8 }
%"struct.skvm::Uniforms" = type { %"struct.skvm::Ptr", %"class.std::__1::vector.33" }
%"struct.skvm::Ptr" = type { i32 }
%"struct.skvm::Coord" = type { %"struct.skvm::F32", %"struct.skvm::F32" }
%"struct.skvm::F32" = type <{ %"class.skvm::Builder"*, i32, [4 x i8] }>
%"struct.skvm::I32" = type <{ %"class.skvm::Builder"*, i32, [4 x i8] }>
%"class.std::__1::__vector_base_common" = type { i8 }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray.43, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray.43 = type { %class.SkAlignedSTStorage.44, %class.SkTArray.45 }
%class.SkAlignedSTStorage.44 = type { [8 x i8] }
%class.SkTArray.45 = type { %"class.std::__1::unique_ptr.40"*, i64 }
%"class.std::__1::unique_ptr.40" = type { %"class.std::__1::__compressed_pair.41" }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %class.GrFragmentProcessor* }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%struct.GrFPArgs = type { %class.GrRecordingContext*, %class.SkMatrixProvider*, %class.SkMatrix*, i8, %class.GrColorInfo* }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.50", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.93", %"class.std::__1::unique_ptr.99" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.49 }
%class.sk_sp.49 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type <{ %class.SkTArray.53, %class.SkTHashMap.55, %class.SkTHashMap.64, %class.SkTArray.73, %class.SkTArray.75, i32, i8, [3 x i8] }>
%class.SkTArray.53 = type { %"class.std::__1::unique_ptr.54"*, i64 }
%"class.std::__1::unique_ptr.54" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %"struct.GrAuditTrail::Op"* }
%"struct.GrAuditTrail::Op" = type <{ %class.SkString, %class.SkTArray.75, %struct.SkRect, i32, i32, i32, [4 x i8] }>
%class.SkString = type { %class.sk_sp.76 }
%class.sk_sp.76 = type { %"struct.SkString::Rec"* }
%"struct.SkString::Rec" = type <{ i32, %"struct.std::__1::atomic", i8, [3 x i8] }>
%class.SkTHashMap.55 = type { %class.SkTHashTable.56 }
%class.SkTHashTable.56 = type { i32, i32, %class.SkAutoTArray.57 }
%class.SkAutoTArray.57 = type { %"class.std::__1::unique_ptr.58" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<unsigned int, int, SkGoodHash>::Pair, unsigned int, SkTHashMap<unsigned int, int, SkGoodHash>::Pair>::Slot" = type { %"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair", i32 }
%"struct.SkTHashMap<unsigned int, int, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.115" }
%"struct.std::__1::pair.115" = type { i32, i32 }
%class.SkTHashMap.64 = type { %class.SkTHashTable.65 }
%class.SkTHashTable.65 = type { i32, i32, %class.SkAutoTArray.66 }
%class.SkAutoTArray.66 = type { %"class.std::__1::unique_ptr.67" }
%"class.std::__1::unique_ptr.67" = type { %"class.std::__1::__compressed_pair.68" }
%"class.std::__1::__compressed_pair.68" = type { %"struct.std::__1::__compressed_pair_elem.69" }
%"struct.std::__1::__compressed_pair_elem.69" = type { %"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot"* }
%"struct.SkTHashTable<SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair, int, SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair>::Slot" = type <{ %"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair", i32, [4 x i8] }>
%"struct.SkTHashMap<int, SkTArray<GrAuditTrail::Op *, false> *, SkGoodHash>::Pair" = type { %"struct.std::__1::pair.116" }
%"struct.std::__1::pair.116" = type { i32, %class.SkTArray.117* }
%class.SkTArray.117 = type { %"struct.GrAuditTrail::Op"**, i64 }
%class.SkTArray.73 = type { %"class.std::__1::unique_ptr.74"*, i64 }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"struct.GrAuditTrail::OpNode"* }
%"struct.GrAuditTrail::OpNode" = type <{ %struct.SkRect, %class.SkTArray.117, %"class.GrSurfaceProxy::UniqueID", [4 x i8] }>
%"class.GrSurfaceProxy::UniqueID" = type { i32 }
%class.SkTArray.75 = type { %class.SkString*, i64 }
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %class.SkArenaAlloc* }
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type { %class.GrBagOfBytes }
%class.GrBagOfBytes = type { i8*, i32, %class.SkFibBlockSizes.89 }
%class.SkFibBlockSizes.89 = type { i32 }
%"class.std::__1::unique_ptr.93" = type { %"class.std::__1::__compressed_pair.94" }
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.99" = type { %"class.std::__1::__compressed_pair.100" }
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%class.SkMatrixProvider = type opaque
%class.GrColorInfo = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.SkShaderBase = type { %class.SkShader.base, %class.SkMatrix, [4 x i8] }
%class.SkRuntimeEffect = type opaque
%"class.SkShaderBase::Context" = type <{ i32 (...)**, %class.SkShaderBase*, %class.SkMatrix, %class.SkMatrix, i8, [7 x i8] }>
%"struct.SkShaderBase::ContextRec" = type <{ %class.SkMatrix*, %class.SkMatrix*, i32, [4 x i8], %class.SkColorSpace*, i8, i8, [6 x i8] }>
%struct.SkStageRec = type { %class.SkRasterPipeline*, %class.SkArenaAlloc*, i32, %class.SkColorSpace*, %class.SkPaint*, %class.SkMatrix*, %class.SkMatrixProvider* }
%class.SkPaint = type <{ %class.sk_sp.105, %class.sk_sp.6, %class.sk_sp.106, %class.sk_sp.107, %class.sk_sp.108, %struct.SkRGBA4f, float, float, %union.anon.109, [4 x i8] }>
%class.sk_sp.105 = type { %class.SkPathEffect* }
%class.SkPathEffect = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.106 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.107 = type { %class.SkColorFilter* }
%class.SkColorFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.sk_sp.108 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%union.anon.109 = type { %struct.anon }
%struct.anon = type { i32 }
%class.SkStageUpdater = type { i32 (...)** }
%"struct.skvm::Color" = type { %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32", %"struct.skvm::F32" }

$_ZN4skvm8Uniforms5pushFEf = comdat any

$_ZN25SkTwoPointConicalGradientD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZNK25SkTwoPointConicalGradient10getFactoryEv = comdat any

$_ZNK25SkTwoPointConicalGradient11getTypeNameEv = comdat any

$_ZNK12SkShaderBase18getFlattenableTypeEv = comdat any

$_ZNK12SkShaderBase10isConstantEv = comdat any

$_ZNK12SkShaderBase10onIsAImageEP8SkMatrixP10SkTileMode = comdat any

$_ZNK12SkShaderBase15asRuntimeEffectEv = comdat any

$_ZNK12SkShaderBase13onMakeContextERKNS_10ContextRecEP12SkArenaAlloc = comdat any

$_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec = comdat any

@_ZZN25SkTwoPointConicalGradient9FocalData3setEffP8SkMatrixE2to = internal constant [2 x %struct.SkPoint] [%struct.SkPoint zeroinitializer, %struct.SkPoint { float 1.000000e+00, float 0.000000e+00 }], align 16
@_ZZN25SkTwoPointConicalGradient6CreateERK7SkPointfS2_fRKN20SkGradientShaderBase10DescriptorEE7unitvec = internal constant [2 x %struct.SkPoint] [%struct.SkPoint zeroinitializer, %struct.SkPoint { float 1.000000e+00, float 0.000000e+00 }], align 16
@__const._ZN25SkTwoPointConicalGradient6CreateERK7SkPointfS2_fRKN20SkGradientShaderBase10DescriptorE.focalData = private unnamed_addr constant { float, float, i8, [3 x i8] } { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA" }, align 4
@_ZTV25SkTwoPointConicalGradient = hidden unnamed_addr constant { [23 x i8*] } { [23 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkGradientShaderBase*)* @_ZN20SkGradientShaderBaseD2Ev to i8*), i8* bitcast (void (%class.SkTwoPointConicalGradient*)* @_ZN25SkTwoPointConicalGradientD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (void (%class.sk_sp.11*, %class.SkReadBuffer*)* (%class.SkTwoPointConicalGradient*)* @_ZNK25SkTwoPointConicalGradient10getFactoryEv to i8*), i8* bitcast (i8* (%class.SkTwoPointConicalGradient*)* @_ZNK25SkTwoPointConicalGradient11getTypeNameEv to i8*), i8* bitcast (void (%class.SkTwoPointConicalGradient*, %class.SkWriteBuffer*)* @_ZNK25SkTwoPointConicalGradient7flattenER13SkWriteBuffer to i8*), i8* bitcast (i32 (%class.SkShaderBase*)* @_ZNK12SkShaderBase18getFlattenableTypeEv to i8*), i8* bitcast (i1 (%class.SkTwoPointConicalGradient*)* @_ZNK25SkTwoPointConicalGradient8isOpaqueEv to i8*), i8* bitcast (i32 (%class.SkTwoPointConicalGradient*, %"struct.SkShader::GradientInfo"*)* @_ZNK25SkTwoPointConicalGradient11asAGradientEPN8SkShader12GradientInfoE to i8*), i8* bitcast (i1 (%class.SkShaderBase*)* @_ZNK12SkShaderBase10isConstantEv to i8*), i8* bitcast (%class.GrFragmentProcessor* (%class.SkTwoPointConicalGradient*, %struct.GrFPArgs*)* @_ZNK25SkTwoPointConicalGradient19asFragmentProcessorERK8GrFPArgs to i8*), i8* bitcast (%class.SkImage* (%class.SkShaderBase*, %class.SkMatrix*, i32*)* @_ZNK12SkShaderBase10onIsAImageEP8SkMatrixP10SkTileMode to i8*), i8* bitcast (%class.SkRuntimeEffect* (%class.SkShaderBase*)* @_ZNK12SkShaderBase15asRuntimeEffectEv to i8*), i8* bitcast (void (%class.sk_sp.6*, %class.SkShaderBase*, %class.SkMatrix*)* @_ZNK12SkShaderBase24makeAsALocalMatrixShaderEP8SkMatrix to i8*), i8* bitcast (%"class.SkShaderBase::Context"* (%class.SkShaderBase*, %"struct.SkShaderBase::ContextRec"*, %class.SkArenaAlloc*)* @_ZNK12SkShaderBase13onMakeContextERKNS_10ContextRecEP12SkArenaAlloc to i8*), i8* bitcast (i1 (%class.SkGradientShaderBase*, i32*)* @_ZNK20SkGradientShaderBase18onAsLuminanceColorEPj to i8*), i8* bitcast (i1 (%class.SkGradientShaderBase*, %struct.SkStageRec*)* @_ZNK20SkGradientShaderBase14onAppendStagesERK10SkStageRec to i8*), i8* bitcast (%class.SkStageUpdater* (%class.SkShaderBase*, %struct.SkStageRec*)* @_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec to i8*), i8* bitcast (void (%"struct.skvm::Color"*, %class.SkGradientShaderBase*, %"class.skvm::Builder"*, %"struct.skvm::Coord"*, %"struct.skvm::Coord"*, %"struct.skvm::Color"*, %class.SkMatrixProvider*, %class.SkMatrix*, %class.SkColorInfo*, %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*)* @_ZNK20SkGradientShaderBase9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc to i8*), i8* bitcast (void (%class.SkTwoPointConicalGradient*, %class.SkArenaAlloc*, %class.SkRasterPipeline*, %class.SkRasterPipeline*)* @_ZNK25SkTwoPointConicalGradient20appendGradientStagesEP12SkArenaAllocP16SkRasterPipelineS3_ to i8*), i8* bitcast ({ %"class.skvm::Builder"*, i32 } (%class.SkTwoPointConicalGradient*, %"class.skvm::Builder"*, %"struct.skvm::Uniforms"*, %"struct.skvm::Coord"*, %"struct.skvm::I32"*)* @_ZNK25SkTwoPointConicalGradient10transformTEPN4skvm7BuilderEPNS0_8UniformsENS0_5CoordEPNS0_3I32E to i8*)] }, align 8
@__const._ZN25SkTwoPointConicalGradient10CreateProcER12SkReadBuffer.desc = private unnamed_addr constant { %"struct.SkGradientShaderBase::Descriptor.base", [4 x i8], %class.SkSTArray, %class.SkSTArray.12, %class.SkMatrix } { %"struct.SkGradientShaderBase::Descriptor.base" <{ %class.SkMatrix* inttoptr (i64 -6148914691236517206 to %class.SkMatrix*), %struct.SkRGBA4f* inttoptr (i64 -6148914691236517206 to %struct.SkRGBA4f*), %class.sk_sp { %class.SkColorSpace* inttoptr (i64 -6148914691236517206 to %class.SkColorSpace*) }, float* inttoptr (i64 -6148914691236517206 to float*), i32 -1431655766, i32 -1431655766, i32 -1431655766 }>, [4 x i8] c"\AA\AA\AA\AA", %class.SkSTArray { %class.SkAlignedSTStorage { [256 x i8] c}, %class.SkTArray { %struct.SkRGBA4f* inttoptr (i64 -6148914691236517206 to %struct.SkRGBA4f*), i64 -6148914691236517206 } }, %class.SkSTArray.12 { %class.SkAlignedSTStorage.13 { [64 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" }, %class.SkTArray.14 { float* inttoptr (i64 -6148914691236517206 to float*), i64 -6148914691236517206 } }, %class.SkMatrix { [9 x float] [float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000], i32 -1431655766 } }, align 8
@.str.1 = private unnamed_addr constant [26 x i8] c"SkTwoPointConicalGradient\00", align 1

@_ZN25SkTwoPointConicalGradientC1ERK7SkPointfS2_fRKN20SkGradientShaderBase10DescriptorENS_4TypeERK8SkMatrixRKNS_9FocalDataE = hidden unnamed_addr alias void (%class.SkTwoPointConicalGradient*, %struct.SkPoint*, float, %struct.SkPoint*, float, %"struct.SkGradientShaderBase::Descriptor"*, i32, %class.SkMatrix*, %"struct.SkTwoPointConicalGradient::FocalData"*), void (%class.SkTwoPointConicalGradient*, %struct.SkPoint*, float, %struct.SkPoint*, float, %"struct.SkGradientShaderBase::Descriptor"*, i32, %class.SkMatrix*, %"struct.SkTwoPointConicalGradient::FocalData"*)* @_ZN25SkTwoPointConicalGradientC2ERK7SkPointfS2_fRKN20SkGradientShaderBase10DescriptorENS_4TypeERK8SkMatrixRKNS_9FocalDataE

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN25SkTwoPointConicalGradient9FocalData3setEffP8SkMatrix(%"struct.SkTwoPointConicalGradient::FocalData"* nocapture, float, float, %class.SkMatrix*) local_unnamed_addr #0 align 2 {
  %5 = alloca [2 x %struct.SkPoint], align 16
  %6 = alloca %class.SkMatrix, align 16
  %7 = getelementptr inbounds %"struct.SkTwoPointConicalGradient::FocalData", %"struct.SkTwoPointConicalGradient::FocalData"* %0, i64 0, i32 2
  store i8 0, i8* %7, align 4
  %8 = fsub float %1, %2
  %9 = fdiv float %1, %8
  %10 = getelementptr inbounds %"struct.SkTwoPointConicalGradient::FocalData", %"struct.SkTwoPointConicalGradient::FocalData"* %0, i64 0, i32 1
  store float %9, float* %10, align 4
  %11 = fadd float %9, -1.000000e+00
  %12 = tail call float @llvm.fabs.f32(float %11) #13
  %13 = fcmp ugt float %12, 0x3F30000000000000
  %14 = bitcast float %9 to i32
  br i1 %13, label %18, label %15

15:                                               ; preds = %4
  %16 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix* %3, float -1.000000e+00, float 0.000000e+00) #13
  %17 = tail call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9postScaleEff(%class.SkMatrix* %3, float -1.000000e+00, float 1.000000e+00) #13
  store float 0.000000e+00, float* %10, align 4
  store i8 1, i8* %7, align 4
  br label %18

18:                                               ; preds = %4, %15
  %19 = phi i32 [ 0, %15 ], [ %14, %4 ]
  %20 = phi float [ %1, %15 ], [ %2, %4 ]
  %21 = bitcast [2 x %struct.SkPoint]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #13
  %22 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %5, i64 0, i64 0
  %23 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %5, i64 0, i64 0, i32 1
  %24 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %5, i64 0, i64 1, i32 0
  %25 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %5, i64 0, i64 1, i32 1
  %26 = bitcast [2 x %struct.SkPoint]* %5 to i32*
  store i32 %19, i32* %26, align 16
  store float 0.000000e+00, float* %23, align 4
  store float 1.000000e+00, float* %24, align 8
  store float 0.000000e+00, float* %25, align 4
  %27 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %27) #13
  %28 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %29 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %29, align 16
  %30 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %31 = bitcast float* %30 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %31, align 16
  %32 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %32, align 16
  store i32 16, i32* %28, align 4
  %33 = call zeroext i1 @_ZN8SkMatrix13setPolyToPolyEPK7SkPointS2_i(%class.SkMatrix* nonnull %6, %struct.SkPoint* nonnull %22, %struct.SkPoint* getelementptr inbounds ([2 x %struct.SkPoint], [2 x %struct.SkPoint]* @_ZZN25SkTwoPointConicalGradient9FocalData3setEffP8SkMatrixE2to, i64 0, i64 0), i32 2) #13
  br i1 %33, label %34, label %59

34:                                               ; preds = %18
  %35 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10postConcatERKS_(%class.SkMatrix* %3, %class.SkMatrix* nonnull dereferenceable(40) %6) #13
  %36 = load float, float* %10, align 4
  %37 = fsub float 1.000000e+00, %36
  %38 = call float @llvm.fabs.f32(float %37)
  %39 = fdiv float %20, %38
  %40 = getelementptr inbounds %"struct.SkTwoPointConicalGradient::FocalData", %"struct.SkTwoPointConicalGradient::FocalData"* %0, i64 0, i32 0
  store float %39, float* %40, align 4
  %41 = fsub float 1.000000e+00, %39
  %42 = call float @llvm.fabs.f32(float %41) #13
  %43 = fcmp ugt float %42, 0x3F30000000000000
  br i1 %43, label %46, label %44

44:                                               ; preds = %34
  %45 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9postScaleEff(%class.SkMatrix* %3, float 5.000000e-01, float 5.000000e-01) #13
  br label %54

46:                                               ; preds = %34
  %47 = fmul float %39, %39
  %48 = fadd float %47, -1.000000e+00
  %49 = fdiv float %39, %48
  %50 = call float @llvm.fabs.f32(float %48)
  %51 = call float @sqrtf(float %50) #13
  %52 = fdiv float 1.000000e+00, %51
  %53 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9postScaleEff(%class.SkMatrix* %3, float %49, float %52) #13
  br label %54

54:                                               ; preds = %46, %44
  %55 = load float, float* %10, align 4
  %56 = fsub float 1.000000e+00, %55
  %57 = call float @llvm.fabs.f32(float %56)
  %58 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9postScaleEff(%class.SkMatrix* %3, float %57, float %57) #13
  br label %59

59:                                               ; preds = %18, %54
  %60 = phi i1 [ true, %54 ], [ false, %18 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %27) #13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #13
  ret i1 %60
}

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix13postTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9postScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare zeroext i1 @_ZN8SkMatrix13setPolyToPolyEPK7SkPointS2_i(%class.SkMatrix*, %struct.SkPoint*, %struct.SkPoint*, i32) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix10postConcatERKS_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN25SkTwoPointConicalGradient6CreateERK7SkPointfS2_fRKN20SkGradientShaderBase10DescriptorE(%class.sk_sp.6* noalias nocapture sret, %struct.SkPoint* nocapture readonly dereferenceable(8), float, %struct.SkPoint* nocapture readonly dereferenceable(8), float, %"struct.SkGradientShaderBase::Descriptor"* dereferenceable(48)) local_unnamed_addr #4 align 2 {
  %7 = alloca %class.SkMatrix, align 16
  %8 = alloca %class.SkMatrix, align 16
  %9 = alloca [2 x %struct.SkPoint], align 16
  %10 = alloca %"struct.SkTwoPointConicalGradient::FocalData", align 4
  %11 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %11) #13
  %12 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 1
  %13 = bitcast %class.SkMatrix* %7 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %13, align 16
  %14 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 4
  %15 = bitcast float* %14 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %15, align 16
  %16 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %16, align 16
  store i32 16, i32* %12, align 4
  %17 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 0
  %18 = load float, float* %17, align 4
  %19 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 0
  %20 = load float, float* %19, align 4
  %21 = fsub float %18, %20
  %22 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %1, i64 0, i32 1
  %23 = load float, float* %22, align 4
  %24 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %3, i64 0, i32 1
  %25 = load float, float* %24, align 4
  %26 = fsub float %23, %25
  %27 = tail call float @_ZN7SkPoint6LengthEff(float %21, float %26) #13
  %28 = tail call float @llvm.fabs.f32(float %27) #13
  %29 = fcmp ugt float %28, 0x3F30000000000000
  br i1 %29, label %58, label %30

30:                                               ; preds = %6
  %31 = fcmp olt float %2, %4
  %32 = select i1 %31, float %4, float %2
  %33 = tail call float @llvm.fabs.f32(float %32) #13
  %34 = fcmp ugt float %33, 0x3F30000000000000
  br i1 %34, label %35, label %39

35:                                               ; preds = %30
  %36 = fsub float %2, %4
  %37 = tail call float @llvm.fabs.f32(float %36) #13
  %38 = fcmp ugt float %37, 0x3F30000000000000
  br i1 %38, label %41, label %39

39:                                               ; preds = %35, %30
  %40 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %0, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %40, align 8
  br label %116

41:                                               ; preds = %35
  %42 = fdiv float 1.000000e+00, %32
  %43 = bitcast %class.SkMatrix* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %43) #13
  %44 = load float, float* %19, align 4
  %45 = fsub float -0.000000e+00, %44
  %46 = load float, float* %24, align 4
  %47 = fsub float -0.000000e+00, %46
  %48 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 1
  %49 = bitcast %class.SkMatrix* %8 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %49, align 16, !alias.scope !2
  %50 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 4
  %51 = bitcast float* %50 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %51, align 16, !alias.scope !2
  %52 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %8, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %52, align 16, !alias.scope !2
  store i32 16, i32* %48, align 4, !alias.scope !2
  %53 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %8, float %45, float %47) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %11, i8* nonnull align 16 %43, i64 40, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %43) #13
  %54 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9postScaleEff(%class.SkMatrix* nonnull %7, float %42, float %42) #13
  %55 = bitcast %"struct.SkTwoPointConicalGradient::FocalData"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %55) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %55, i8* align 4 bitcast ({ float, float, i8, [3 x i8] }* @__const._ZN25SkTwoPointConicalGradient6CreateERK7SkPointfS2_fRKN20SkGradientShaderBase10DescriptorE.focalData to i8*), i64 12, i1 false)
  %56 = bitcast %struct.SkPoint* %1 to i64*
  %57 = bitcast %struct.SkPoint* %3 to i64*
  br label %89

58:                                               ; preds = %6
  %59 = bitcast [2 x %struct.SkPoint]* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %59) #13
  %60 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %9, i64 0, i64 0
  %61 = bitcast %struct.SkPoint* %1 to i64*
  %62 = bitcast [2 x %struct.SkPoint]* %9 to i64*
  %63 = load i64, i64* %61, align 4
  store i64 %63, i64* %62, align 16
  %64 = getelementptr inbounds [2 x %struct.SkPoint], [2 x %struct.SkPoint]* %9, i64 0, i64 1
  %65 = bitcast %struct.SkPoint* %3 to i64*
  %66 = bitcast %struct.SkPoint* %64 to i64*
  %67 = load i64, i64* %65, align 4
  store i64 %67, i64* %66, align 8
  %68 = call zeroext i1 @_ZN8SkMatrix13setPolyToPolyEPK7SkPointS2_i(%class.SkMatrix* nonnull %7, %struct.SkPoint* nonnull %60, %struct.SkPoint* getelementptr inbounds ([2 x %struct.SkPoint], [2 x %struct.SkPoint]* @_ZZN25SkTwoPointConicalGradient6CreateERK7SkPointfS2_fRKN20SkGradientShaderBase10DescriptorEE7unitvec, i64 0, i64 0), i32 2) #13
  br i1 %68, label %71, label %69

69:                                               ; preds = %58
  %70 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %0, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %70, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #13
  br label %116

71:                                               ; preds = %58
  %72 = fsub float %4, %2
  %73 = call float @llvm.fabs.f32(float %72) #13
  %74 = fcmp ugt float %73, 0x3F30000000000000
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %59) #13
  %75 = bitcast %"struct.SkTwoPointConicalGradient::FocalData"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %75) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %75, i8* align 4 bitcast ({ float, float, i8, [3 x i8] }* @__const._ZN25SkTwoPointConicalGradient6CreateERK7SkPointfS2_fRKN20SkGradientShaderBase10DescriptorE.focalData to i8*), i64 12, i1 false)
  br i1 %74, label %76, label %89

76:                                               ; preds = %71
  %77 = load float, float* %17, align 4
  %78 = load float, float* %19, align 4
  %79 = fsub float %77, %78
  %80 = load float, float* %22, align 4
  %81 = load float, float* %24, align 4
  %82 = fsub float %80, %81
  %83 = call float @_ZN7SkPoint6LengthEff(float %79, float %82) #13
  %84 = fdiv float %2, %83
  %85 = fdiv float %4, %83
  %86 = call zeroext i1 @_ZN25SkTwoPointConicalGradient9FocalData3setEffP8SkMatrix(%"struct.SkTwoPointConicalGradient::FocalData"* nonnull %10, float %84, float %85, %class.SkMatrix* nonnull %7)
  br i1 %86, label %89, label %87

87:                                               ; preds = %76
  %88 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %0, i64 0, i32 0
  store %class.SkShader* null, %class.SkShader** %88, align 8
  br label %114

89:                                               ; preds = %41, %76, %71
  %90 = phi i64* [ %57, %41 ], [ %65, %76 ], [ %65, %71 ]
  %91 = phi i64* [ %56, %41 ], [ %61, %76 ], [ %61, %71 ]
  %92 = phi i1 [ false, %41 ], [ true, %76 ], [ false, %71 ]
  %93 = phi i8* [ %55, %41 ], [ %75, %76 ], [ %75, %71 ]
  %94 = phi i32 [ 0, %41 ], [ 2, %76 ], [ 1, %71 ]
  %95 = call i8* @_Znwm(i64 272) #14
  %96 = bitcast i8* %95 to %class.SkGradientShaderBase*
  call void @_ZN20SkGradientShaderBaseC2ERKNS_10DescriptorERK8SkMatrix(%class.SkGradientShaderBase* nonnull %96, %"struct.SkGradientShaderBase::Descriptor"* dereferenceable(48) %5, %class.SkMatrix* nonnull dereferenceable(40) %7) #13
  %97 = bitcast i8* %95 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTV25SkTwoPointConicalGradient, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %97, align 8
  %98 = getelementptr inbounds i8, i8* %95, i64 228
  %99 = bitcast i8* %98 to i64*
  %100 = load i64, i64* %91, align 4
  store i64 %100, i64* %99, align 4
  %101 = getelementptr inbounds i8, i8* %95, i64 236
  %102 = bitcast i8* %101 to i64*
  %103 = load i64, i64* %90, align 4
  store i64 %103, i64* %102, align 4
  %104 = getelementptr inbounds i8, i8* %95, i64 244
  %105 = bitcast i8* %104 to float*
  store float %2, float* %105, align 4
  %106 = getelementptr inbounds i8, i8* %95, i64 248
  %107 = bitcast i8* %106 to float*
  store float %4, float* %107, align 8
  %108 = getelementptr inbounds i8, i8* %95, i64 252
  %109 = bitcast i8* %108 to i32*
  store i32 %94, i32* %109, align 4
  br i1 %92, label %110, label %112

110:                                              ; preds = %89
  %111 = getelementptr inbounds i8, i8* %95, i64 256
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %111, i8* nonnull align 4 %93, i64 12, i1 false) #13
  br label %112

112:                                              ; preds = %89, %110
  %113 = bitcast %class.sk_sp.6* %0 to i8**
  store i8* %95, i8** %113, align 8
  br label %114

114:                                              ; preds = %87, %112
  %115 = phi i8* [ %75, %87 ], [ %93, %112 ]
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %115) #13
  br label %116

116:                                              ; preds = %69, %114, %39
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %11) #13
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN25SkTwoPointConicalGradientC2ERK7SkPointfS2_fRKN20SkGradientShaderBase10DescriptorENS_4TypeERK8SkMatrixRKNS_9FocalDataE(%class.SkTwoPointConicalGradient*, %struct.SkPoint* nocapture readonly dereferenceable(8), float, %struct.SkPoint* nocapture readonly dereferenceable(8), float, %"struct.SkGradientShaderBase::Descriptor"* dereferenceable(48), i32, %class.SkMatrix* dereferenceable(40), %"struct.SkTwoPointConicalGradient::FocalData"* nocapture readonly dereferenceable(12)) unnamed_addr #0 align 2 {
  %10 = bitcast %class.SkTwoPointConicalGradient* %0 to %class.SkGradientShaderBase*
  tail call void @_ZN20SkGradientShaderBaseC2ERKNS_10DescriptorERK8SkMatrix(%class.SkGradientShaderBase* %10, %"struct.SkGradientShaderBase::Descriptor"* dereferenceable(48) %5, %class.SkMatrix* dereferenceable(40) %7) #13
  %11 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [23 x i8*] }, { [23 x i8*] }* @_ZTV25SkTwoPointConicalGradient, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 1
  %13 = bitcast %struct.SkPoint* %1 to i64*
  %14 = bitcast %struct.SkPoint* %12 to i64*
  %15 = load i64, i64* %13, align 4
  store i64 %15, i64* %14, align 4
  %16 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 2
  %17 = bitcast %struct.SkPoint* %3 to i64*
  %18 = bitcast %struct.SkPoint* %16 to i64*
  %19 = load i64, i64* %17, align 4
  store i64 %19, i64* %18, align 4
  %20 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 3
  store float %2, float* %20, align 4
  %21 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 4
  store float %4, float* %21, align 8
  %22 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 5
  store i32 %6, i32* %22, align 4
  %23 = icmp eq i32 %6, 2
  br i1 %23, label %24, label %28

24:                                               ; preds = %9
  %25 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 6
  %26 = bitcast %"struct.SkTwoPointConicalGradient::FocalData"* %25 to i8*
  %27 = bitcast %"struct.SkTwoPointConicalGradient::FocalData"* %8 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %26, i8* align 4 %27, i64 12, i1 false)
  br label %28

28:                                               ; preds = %24, %9
  ret void
}

declare void @_ZN20SkGradientShaderBaseC2ERKNS_10DescriptorERK8SkMatrix(%class.SkGradientShaderBase*, %"struct.SkGradientShaderBase::Descriptor"* dereferenceable(48), %class.SkMatrix* dereferenceable(40)) unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK25SkTwoPointConicalGradient8isOpaqueEv(%class.SkTwoPointConicalGradient* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK25SkTwoPointConicalGradient11asAGradientEPN8SkShader12GradientInfoE(%class.SkTwoPointConicalGradient*, %"struct.SkShader::GradientInfo"*) unnamed_addr #0 align 2 {
  %3 = icmp eq %"struct.SkShader::GradientInfo"* %1, null
  br i1 %3, label %26, label %4

4:                                                ; preds = %2
  %5 = bitcast %class.SkTwoPointConicalGradient* %0 to %class.SkGradientShaderBase*
  tail call void @_ZNK20SkGradientShaderBase17commonAsAGradientEPN8SkShader12GradientInfoE(%class.SkGradientShaderBase* %5, %"struct.SkShader::GradientInfo"* nonnull %1) #13
  %6 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.SkShader::GradientInfo", %"struct.SkShader::GradientInfo"* %1, i64 0, i32 3
  %8 = bitcast %struct.SkPoint* %6 to i64*
  %9 = bitcast [2 x %struct.SkPoint]* %7 to i64*
  %10 = load i64, i64* %8, align 4
  store i64 %10, i64* %9, align 8
  %11 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.SkShader::GradientInfo", %"struct.SkShader::GradientInfo"* %1, i64 0, i32 3, i64 1
  %13 = bitcast %struct.SkPoint* %11 to i64*
  %14 = bitcast %struct.SkPoint* %12 to i64*
  %15 = load i64, i64* %13, align 4
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 3
  %17 = bitcast float* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = getelementptr inbounds %"struct.SkShader::GradientInfo", %"struct.SkShader::GradientInfo"* %1, i64 0, i32 4
  %20 = bitcast [2 x float]* %19 to i32*
  store i32 %18, i32* %20, align 8
  %21 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 4
  %22 = bitcast float* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = getelementptr inbounds %"struct.SkShader::GradientInfo", %"struct.SkShader::GradientInfo"* %1, i64 0, i32 4, i64 1
  %25 = bitcast float* %24 to i32*
  store i32 %23, i32* %25, align 4
  br label %26

26:                                               ; preds = %2, %4
  ret i32 5
}

declare void @_ZNK20SkGradientShaderBase17commonAsAGradientEPN8SkShader12GradientInfoE(%class.SkGradientShaderBase*, %"struct.SkShader::GradientInfo"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN25SkTwoPointConicalGradient10CreateProcER12SkReadBuffer(%class.sk_sp.11* noalias nocapture sret, %class.SkReadBuffer* dereferenceable(136)) #4 align 2 {
  %3 = alloca <2 x float>, align 8
  %4 = alloca <2 x float>, align 8
  %5 = alloca %"class.SkGradientShaderBase::DescriptorScope", align 8
  %6 = alloca <2 x float>, align 8
  %7 = bitcast <2 x float>* %6 to %struct.SkPoint*
  %8 = alloca <2 x float>, align 8
  %9 = bitcast <2 x float>* %8 to %struct.SkPoint*
  %10 = alloca %class.sk_sp.6, align 8
  %11 = alloca %class.sk_sp, align 8
  %12 = bitcast %"class.SkGradientShaderBase::DescriptorScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 440, i8* nonnull %12) #13
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 bitcast ({ %"struct.SkGradientShaderBase::Descriptor.base", [4 x i8], %class.SkSTArray, %class.SkSTArray.12, %class.SkMatrix }* @__const._ZN25SkTwoPointConicalGradient10CreateProcER12SkReadBuffer.desc to i8*), i64 384, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 0, i64 48, i1 false) #13
  %13 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %5, i64 0, i32 1, i32 0, i32 0, i64 256
  %14 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %5, i64 0, i32 1, i32 0, i32 0, i64 0
  %15 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %5, i64 0, i32 1, i32 0, i32 0, i64 264
  %16 = bitcast i8* %15 to i64*
  %17 = bitcast i8* %13 to i8**
  store i8* %14, i8** %17, align 8
  store i64 137438953472, i64* %16, align 8
  %18 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %5, i64 0, i32 2, i32 0, i32 0, i64 64
  %19 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %5, i64 0, i32 2, i32 0, i32 0, i64 0
  %20 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %5, i64 0, i32 2, i32 0, i32 0, i64 72
  %21 = bitcast i8* %20 to i64*
  %22 = bitcast i8* %18 to i8**
  store i8* %19, i8** %22, align 8
  store i64 137438953472, i64* %21, align 8
  %23 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %5, i64 0, i32 3, i32 0, i64 0
  %24 = bitcast float* %23 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %24, align 8
  %25 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %5, i64 0, i32 3, i32 0, i64 4
  %26 = bitcast float* %25 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %26, align 8
  %27 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %5, i64 0, i32 3, i32 0, i64 8
  store float 1.000000e+00, float* %27, align 8
  %28 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %5, i64 0, i32 3, i32 1
  store i32 16, i32* %28, align 4
  %29 = call zeroext i1 @_ZN20SkGradientShaderBase15DescriptorScope9unflattenER12SkReadBuffer(%"class.SkGradientShaderBase::DescriptorScope"* nonnull %5, %class.SkReadBuffer* dereferenceable(136) %1) #13
  br i1 %29, label %32, label %30

30:                                               ; preds = %2
  %31 = getelementptr inbounds %class.sk_sp.11, %class.sk_sp.11* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %31, align 8
  br label %90

32:                                               ; preds = %2
  %33 = bitcast <2 x float>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #13
  %34 = bitcast <2 x float>* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34)
  %35 = bitcast <2 x float>* %4 to %struct.SkPoint*
  %36 = getelementptr inbounds <2 x float>, <2 x float>* %4, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %36, align 8
  %37 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %35, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %37, align 4
  call void @_ZN12SkReadBuffer9readPointEP7SkPoint(%class.SkReadBuffer* %1, %struct.SkPoint* nonnull %35) #13
  %38 = bitcast <2 x float>* %4 to i64*
  %39 = load i64, i64* %38, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34)
  %40 = bitcast <2 x float>* %6 to i64*
  store i64 %39, i64* %40, align 8
  %41 = bitcast <2 x float>* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #13
  %42 = bitcast <2 x float>* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = bitcast <2 x float>* %3 to %struct.SkPoint*
  %44 = getelementptr inbounds <2 x float>, <2 x float>* %3, i64 0, i64 0
  store float 0xFFFFFFFFE0000000, float* %44, align 8
  %45 = getelementptr inbounds %struct.SkPoint, %struct.SkPoint* %43, i64 0, i32 1
  store float 0xFFFFFFFFE0000000, float* %45, align 4
  call void @_ZN12SkReadBuffer9readPointEP7SkPoint(%class.SkReadBuffer* %1, %struct.SkPoint* nonnull %43) #13
  %46 = bitcast <2 x float>* %3 to i64*
  %47 = load i64, i64* %46, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  %48 = bitcast <2 x float>* %8 to i64*
  store i64 %47, i64* %48, align 8
  %49 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #13
  %50 = call float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer* %1) #13
  %51 = getelementptr inbounds %class.SkReadBuffer, %class.SkReadBuffer* %1, i64 0, i32 13
  %52 = load i8, i8* %51, align 8, !range !5
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %32
  %55 = getelementptr inbounds %class.sk_sp.11, %class.sk_sp.11* %0, i64 0, i32 0
  store %class.SkFlattenable* null, %class.SkFlattenable** %55, align 8
  br label %89

56:                                               ; preds = %32
  %57 = bitcast %class.sk_sp.6* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #13
  %58 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %5, i64 0, i32 0, i32 1
  %59 = load %struct.SkRGBA4f*, %struct.SkRGBA4f** %58, align 8
  %60 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %5, i64 0, i32 0, i32 2
  %61 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %60, i64 0, i32 0
  %62 = bitcast %class.sk_sp* %60 to i64*
  %63 = load i64, i64* %62, align 8
  store %class.SkColorSpace* null, %class.SkColorSpace** %61, align 8
  %64 = bitcast %class.sk_sp* %11 to i64*
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %5, i64 0, i32 0, i32 3
  %66 = load float*, float** %65, align 8
  %67 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %5, i64 0, i32 0, i32 4
  %68 = load i32, i32* %67, align 8
  %69 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %5, i64 0, i32 0, i32 5
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %5, i64 0, i32 0, i32 6
  %72 = load i32, i32* %71, align 8
  %73 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %5, i64 0, i32 0, i32 0
  %74 = load %class.SkMatrix*, %class.SkMatrix** %73, align 8
  call void @_ZN16SkGradientShader19MakeTwoPointConicalERK7SkPointfS2_fPK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceEPKfi10SkTileModejPK8SkMatrix(%class.sk_sp.6* nonnull sret %10, %struct.SkPoint* nonnull dereferenceable(8) %7, float %49, %struct.SkPoint* nonnull dereferenceable(8) %9, float %50, %struct.SkRGBA4f* %59, %class.sk_sp* nonnull %11, float* %66, i32 %68, i32 %70, i32 %72, %class.SkMatrix* %74) #13
  %75 = getelementptr inbounds %class.sk_sp.6, %class.sk_sp.6* %10, i64 0, i32 0
  %76 = bitcast %class.sk_sp.6* %10 to i64*
  %77 = load i64, i64* %76, align 8
  store %class.SkShader* null, %class.SkShader** %75, align 8
  %78 = bitcast %class.sk_sp.11* %0 to i64*
  store i64 %77, i64* %78, align 8
  %79 = getelementptr inbounds %class.sk_sp, %class.sk_sp* %11, i64 0, i32 0
  %80 = load %class.SkColorSpace*, %class.SkColorSpace** %79, align 8
  %81 = icmp eq %class.SkColorSpace* %80, null
  br i1 %81, label %88, label %82

82:                                               ; preds = %56
  %83 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i32* %83, i32 -1 acq_rel
  %85 = icmp eq i32 %84, 1
  br i1 %85, label %86, label %88

86:                                               ; preds = %82
  %87 = bitcast %class.SkColorSpace* %80 to i8*
  call void @_ZdlPv(i8* %87) #14
  br label %88

88:                                               ; preds = %56, %82, %86
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #13
  br label %89

89:                                               ; preds = %88, %54
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #13
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #13
  br label %90

90:                                               ; preds = %89, %30
  %91 = load i64, i64* %21, align 8
  %92 = and i64 %91, 1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %96, label %94

94:                                               ; preds = %90
  %95 = load i8*, i8** %22, align 8
  call void @_Z7sk_freePv(i8* %95) #13
  br label %96

96:                                               ; preds = %94, %90
  %97 = load i64, i64* %16, align 8
  %98 = and i64 %97, 1
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %102, label %100

100:                                              ; preds = %96
  %101 = load i8*, i8** %17, align 8
  call void @_Z7sk_freePv(i8* %101) #13
  br label %102

102:                                              ; preds = %100, %96
  %103 = getelementptr inbounds %"class.SkGradientShaderBase::DescriptorScope", %"class.SkGradientShaderBase::DescriptorScope"* %5, i64 0, i32 0, i32 2, i32 0
  %104 = load %class.SkColorSpace*, %class.SkColorSpace** %103, align 8
  %105 = icmp eq %class.SkColorSpace* %104, null
  br i1 %105, label %112, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %104, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i32* %107, i32 -1 acq_rel
  %109 = icmp eq i32 %108, 1
  br i1 %109, label %110, label %112

110:                                              ; preds = %106
  %111 = bitcast %class.SkColorSpace* %104 to i8*
  call void @_ZdlPv(i8* %111) #14
  br label %112

112:                                              ; preds = %102, %106, %110
  call void @llvm.lifetime.end.p0i8(i64 440, i8* nonnull %12) #13
  ret void
}

declare zeroext i1 @_ZN20SkGradientShaderBase15DescriptorScope9unflattenER12SkReadBuffer(%"class.SkGradientShaderBase::DescriptorScope"*, %class.SkReadBuffer* dereferenceable(136)) local_unnamed_addr #1

declare float @_ZN12SkReadBuffer10readScalarEv(%class.SkReadBuffer*) local_unnamed_addr #1

declare void @_ZN16SkGradientShader19MakeTwoPointConicalERK7SkPointfS2_fPK8SkRGBA4fIL11SkAlphaType3EE5sk_spI12SkColorSpaceEPKfi10SkTileModejPK8SkMatrix(%class.sk_sp.6* sret, %struct.SkPoint* dereferenceable(8), float, %struct.SkPoint* dereferenceable(8), float, %struct.SkRGBA4f*, %class.sk_sp*, float*, i32, i32, i32, %class.SkMatrix*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK25SkTwoPointConicalGradient7flattenER13SkWriteBuffer(%class.SkTwoPointConicalGradient*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.SkTwoPointConicalGradient* %0 to %class.SkGradientShaderBase*
  tail call void @_ZNK20SkGradientShaderBase7flattenER13SkWriteBuffer(%class.SkGradientShaderBase* %3, %class.SkWriteBuffer* dereferenceable(56) %1) #13
  %4 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 1
  %5 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, %struct.SkPoint*)***
  %6 = load void (%class.SkWriteBuffer*, %struct.SkPoint*)**, void (%class.SkWriteBuffer*, %struct.SkPoint*)*** %5, align 8
  %7 = getelementptr inbounds void (%class.SkWriteBuffer*, %struct.SkPoint*)*, void (%class.SkWriteBuffer*, %struct.SkPoint*)** %6, i64 16
  %8 = load void (%class.SkWriteBuffer*, %struct.SkPoint*)*, void (%class.SkWriteBuffer*, %struct.SkPoint*)** %7, align 8
  tail call void %8(%class.SkWriteBuffer* %1, %struct.SkPoint* dereferenceable(8) %4) #13
  %9 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 2
  %10 = load void (%class.SkWriteBuffer*, %struct.SkPoint*)**, void (%class.SkWriteBuffer*, %struct.SkPoint*)*** %5, align 8
  %11 = getelementptr inbounds void (%class.SkWriteBuffer*, %struct.SkPoint*)*, void (%class.SkWriteBuffer*, %struct.SkPoint*)** %10, i64 16
  %12 = load void (%class.SkWriteBuffer*, %struct.SkPoint*)*, void (%class.SkWriteBuffer*, %struct.SkPoint*)** %11, align 8
  tail call void %12(%class.SkWriteBuffer* %1, %struct.SkPoint* dereferenceable(8) %9) #13
  %13 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 3
  %14 = load float, float* %13, align 4
  %15 = bitcast %class.SkWriteBuffer* %1 to void (%class.SkWriteBuffer*, float)***
  %16 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %15, align 8
  %17 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %16, i64 5
  %18 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %17, align 8
  tail call void %18(%class.SkWriteBuffer* %1, float %14) #13
  %19 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 4
  %20 = load float, float* %19, align 8
  %21 = load void (%class.SkWriteBuffer*, float)**, void (%class.SkWriteBuffer*, float)*** %15, align 8
  %22 = getelementptr inbounds void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %21, i64 5
  %23 = load void (%class.SkWriteBuffer*, float)*, void (%class.SkWriteBuffer*, float)** %22, align 8
  tail call void %23(%class.SkWriteBuffer* %1, float %20) #13
  ret void
}

declare void @_ZNK20SkGradientShaderBase7flattenER13SkWriteBuffer(%class.SkGradientShaderBase*, %class.SkWriteBuffer* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK25SkTwoPointConicalGradient20appendGradientStagesEP12SkArenaAllocP16SkRasterPipelineS3_(%class.SkTwoPointConicalGradient* nocapture readonly, %class.SkArenaAlloc*, %class.SkRasterPipeline*, %class.SkRasterPipeline*) unnamed_addr #0 align 2 {
  %5 = alloca %class.SkMatrix, align 16
  %6 = alloca %class.SkMatrix, align 16
  %7 = alloca %class.SkMatrix, align 16
  %8 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 4
  %9 = load float, float* %8, align 8
  %10 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 3
  %11 = load float, float* %10, align 4
  %12 = fsub float %9, %11
  %13 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 5
  %14 = load i32, i32* %13, align 4
  switch i32 %14, label %82 [
    i32 0, label %15
    i32 1, label %44
  ]

15:                                               ; preds = %4
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %2, i32 170, i8* null) #13
  %16 = load float, float* %10, align 4
  %17 = load float, float* %8, align 4
  %18 = fcmp olt float %16, %17
  %19 = select i1 %18, float %17, float %16
  %20 = fdiv float %19, %12
  %21 = fsub float -0.000000e+00, %16
  %22 = fdiv float %21, %12
  %23 = bitcast %class.SkMatrix* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %23) #13
  %24 = bitcast %class.SkMatrix* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %24) #13
  %25 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 1
  %26 = bitcast %class.SkMatrix* %6 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %26, align 16, !alias.scope !6
  %27 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 4
  %28 = bitcast float* %27 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %28, align 16, !alias.scope !6
  %29 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %6, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %29, align 16, !alias.scope !6
  store i32 16, i32* %25, align 4, !alias.scope !6
  %30 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix* nonnull %6, float %22, float 0.000000e+00) #13
  %31 = bitcast %class.SkMatrix* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %31) #13
  %32 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 1
  %33 = bitcast %class.SkMatrix* %7 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %33, align 16, !alias.scope !9
  %34 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 4
  %35 = bitcast float* %34 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %35, align 16, !alias.scope !9
  %36 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %7, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %36, align 16, !alias.scope !9
  store i32 16, i32* %32, align 4, !alias.scope !9
  %37 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix* nonnull %7, float %20, float 1.000000e+00) #13
  %38 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 1
  %39 = bitcast %class.SkMatrix* %5 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %39, align 16, !alias.scope !12
  %40 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 4
  %41 = bitcast float* %40 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 0.000000e+00>, <4 x float>* %41, align 16, !alias.scope !12
  %42 = getelementptr inbounds %class.SkMatrix, %class.SkMatrix* %5, i64 0, i32 0, i64 8
  store float 1.000000e+00, float* %42, align 16, !alias.scope !12
  store i32 16, i32* %38, align 4, !alias.scope !12
  %43 = call dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix* nonnull %5, %class.SkMatrix* nonnull dereferenceable(40) %6, %class.SkMatrix* nonnull dereferenceable(40) %7) #13
  call void @_ZN16SkRasterPipeline13append_matrixEP12SkArenaAllocRK8SkMatrix(%class.SkRasterPipeline* %2, %class.SkArenaAlloc* %1, %class.SkMatrix* nonnull dereferenceable(40) %5) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %31) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %24) #13
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %23) #13
  br label %164

44:                                               ; preds = %4
  %45 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %1, i64 0, i32 1
  %46 = bitcast i8** %45 to i64*
  %47 = load i64, i64* %46, align 8
  %48 = sub i64 0, %47
  %49 = and i64 %48, 3
  %50 = or i64 %49, 72
  %51 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %1, i64 0, i32 2
  %52 = bitcast i8** %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = sub i64 %53, %47
  %55 = icmp ugt i64 %50, %54
  br i1 %55, label %56, label %60

56:                                               ; preds = %44
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %1, i32 72, i32 4) #13
  %57 = load i64, i64* %46, align 8
  %58 = sub i64 0, %57
  %59 = and i64 %58, 3
  br label %60

60:                                               ; preds = %44, %56
  %61 = phi i64 [ %57, %56 ], [ %47, %44 ]
  %62 = phi i64 [ %59, %56 ], [ %49, %44 ]
  %63 = inttoptr i64 %61 to i8*
  %64 = getelementptr inbounds i8, i8* %63, i64 %62
  %65 = getelementptr inbounds i8, i8* %64, i64 72
  store i8* %65, i8** %45, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %64, i8 0, i64 72, i1 false) #13
  %66 = load float, float* %10, align 4
  %67 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 1, i32 0
  %68 = load float, float* %67, align 4
  %69 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 2, i32 0
  %70 = load float, float* %69, align 4
  %71 = fsub float %68, %70
  %72 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 1, i32 1
  %73 = load float, float* %72, align 4
  %74 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 2, i32 1
  %75 = load float, float* %74, align 4
  %76 = fsub float %73, %75
  %77 = tail call float @_ZN7SkPoint6LengthEff(float %71, float %76) #13
  %78 = fdiv float %66, %77
  %79 = fmul float %78, %78
  %80 = getelementptr inbounds i8, i8* %64, i64 64
  %81 = bitcast i8* %80 to float*
  store float %79, float* %81, align 4
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %2, i32 171, i8* %64) #13
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %2, i32 178, i8* %64) #13
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %3, i32 180, i8* %64) #13
  br label %164

82:                                               ; preds = %4
  %83 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %1, i64 0, i32 1
  %84 = bitcast i8** %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = sub i64 0, %85
  %87 = and i64 %86, 3
  %88 = or i64 %87, 72
  %89 = getelementptr inbounds %class.SkArenaAlloc, %class.SkArenaAlloc* %1, i64 0, i32 2
  %90 = bitcast i8** %89 to i64*
  %91 = load i64, i64* %90, align 8
  %92 = sub i64 %91, %85
  %93 = icmp ugt i64 %88, %92
  br i1 %93, label %94, label %98

94:                                               ; preds = %82
  tail call void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc* %1, i32 72, i32 4) #13
  %95 = load i64, i64* %84, align 8
  %96 = sub i64 0, %95
  %97 = and i64 %96, 3
  br label %98

98:                                               ; preds = %82, %94
  %99 = phi i64 [ %95, %94 ], [ %85, %82 ]
  %100 = phi i64 [ %97, %94 ], [ %87, %82 ]
  %101 = inttoptr i64 %99 to i8*
  %102 = getelementptr inbounds i8, i8* %101, i64 %100
  %103 = getelementptr inbounds i8, i8* %102, i64 72
  store i8* %103, i8** %83, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %102, i8 0, i64 72, i1 false) #13
  %104 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 6, i32 0
  %105 = load float, float* %104, align 8
  %106 = fdiv float 1.000000e+00, %105
  %107 = getelementptr inbounds i8, i8* %102, i64 64
  %108 = bitcast i8* %107 to float*
  store float %106, float* %108, align 4
  %109 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 6, i32 1
  %110 = bitcast float* %109 to i32*
  %111 = load i32, i32* %110, align 4
  %112 = getelementptr inbounds i8, i8* %102, i64 68
  %113 = bitcast i8* %112 to i32*
  store i32 %111, i32* %113, align 4
  %114 = load float, float* %104, align 4
  %115 = fsub float 1.000000e+00, %114
  %116 = tail call float @llvm.fabs.f32(float %115) #13
  %117 = fcmp ugt float %116, 0x3F30000000000000
  br i1 %117, label %119, label %118

118:                                              ; preds = %98
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %2, i32 172, i8* null) #13
  br label %132

119:                                              ; preds = %98
  %120 = fcmp ogt float %114, 1.000000e+00
  br i1 %120, label %121, label %122

121:                                              ; preds = %119
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %2, i32 173, i8* %102) #13
  br label %132

122:                                              ; preds = %119
  %123 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 6, i32 2
  %124 = load i8, i8* %123, align 4, !range !5
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %126, label %130

126:                                              ; preds = %122
  %127 = load float, float* %109, align 4
  %128 = fsub float 1.000000e+00, %127
  %129 = fcmp olt float %128, 0.000000e+00
  br i1 %129, label %130, label %131

130:                                              ; preds = %122, %126
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %2, i32 174, i8* %102) #13
  br label %132

131:                                              ; preds = %126
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %2, i32 175, i8* %102) #13
  br label %132

132:                                              ; preds = %121, %131, %130, %118
  %133 = load float, float* %104, align 4
  %134 = fsub float 1.000000e+00, %133
  %135 = tail call float @llvm.fabs.f32(float %134) #13
  %136 = fcmp ugt float %135, 0x3F30000000000000
  %137 = fcmp ogt float %133, 1.000000e+00
  %138 = and i1 %137, %136
  br i1 %138, label %140, label %139

139:                                              ; preds = %132
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %2, i32 179, i8* %102) #13
  br label %140

140:                                              ; preds = %139, %132
  %141 = load float, float* %109, align 4
  %142 = fsub float 1.000000e+00, %141
  %143 = fcmp olt float %142, 0.000000e+00
  br i1 %143, label %144, label %146

144:                                              ; preds = %140
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %2, i32 146, i8* null) #13
  %145 = load float, float* %109, align 4
  br label %146

146:                                              ; preds = %144, %140
  %147 = phi float [ %145, %144 ], [ %141, %140 ]
  %148 = tail call float @llvm.fabs.f32(float %147) #13
  %149 = fcmp ugt float %148, 0x3F30000000000000
  br i1 %149, label %150, label %151

150:                                              ; preds = %146
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %2, i32 176, i8* %102) #13
  br label %151

151:                                              ; preds = %146, %150
  %152 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 6, i32 2
  %153 = load i8, i8* %152, align 4, !range !5
  %154 = icmp eq i8 %153, 0
  br i1 %154, label %156, label %155

155:                                              ; preds = %151
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %2, i32 177, i8* null) #13
  br label %156

156:                                              ; preds = %151, %155
  %157 = load float, float* %104, align 4
  %158 = fsub float 1.000000e+00, %157
  %159 = tail call float @llvm.fabs.f32(float %158) #13
  %160 = fcmp ugt float %159, 0x3F30000000000000
  %161 = fcmp ogt float %157, 1.000000e+00
  %162 = and i1 %161, %160
  br i1 %162, label %164, label %163

163:                                              ; preds = %156
  tail call void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline* %3, i32 180, i8* %102) #13
  br label %164

164:                                              ; preds = %156, %163, %60, %15
  ret void
}

declare void @_ZN16SkRasterPipeline6appendENS_10StockStageEPv(%class.SkRasterPipeline*, i32, i8*) local_unnamed_addr #1

declare void @_ZN16SkRasterPipeline13append_matrixEP12SkArenaAllocRK8SkMatrix(%class.SkRasterPipeline*, %class.SkArenaAlloc*, %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { %"class.skvm::Builder"*, i32 } @_ZNK25SkTwoPointConicalGradient10transformTEPN4skvm7BuilderEPNS0_8UniformsENS0_5CoordEPNS0_3I32E(%class.SkTwoPointConicalGradient* nocapture readonly, %"class.skvm::Builder"*, %"struct.skvm::Uniforms"*, %"struct.skvm::Coord"* nocapture readonly byval(%"struct.skvm::Coord") align 8, %"struct.skvm::I32"* nocapture) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %3, i64 0, i32 0, i32 0
  %7 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %6, align 8
  %8 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %3, i64 0, i32 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %3, i64 0, i32 1, i32 0
  %11 = load %"class.skvm::Builder"*, %"class.skvm::Builder"** %10, align 8
  %12 = getelementptr inbounds %"struct.skvm::Coord", %"struct.skvm::Coord"* %3, i64 0, i32 1, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 5
  %15 = load i32, i32* %14, align 4
  switch i32 %15, label %97 [
    i32 0, label %16
    i32 1, label %60
  ]

16:                                               ; preds = %5
  %17 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 4
  %18 = load float, float* %17, align 8
  %19 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 3
  %20 = load float, float* %19, align 4
  %21 = fsub float %18, %20
  %22 = fdiv float 1.000000e+00, %21
  %23 = fcmp olt float %20, %18
  %24 = select i1 %23, float %18, float %20
  %25 = fmul float %24, %22
  %26 = fmul float %20, %22
  %27 = fsub float -0.000000e+00, %26
  %28 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %7, %"class.skvm::Builder"* %7, i32 %9, %"class.skvm::Builder"* %7, i32 %9) #13
  %29 = extractvalue { %"class.skvm::Builder"*, i32 } %28, 0
  %30 = extractvalue { %"class.skvm::Builder"*, i32 } %28, 1
  %31 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %11, %"class.skvm::Builder"* %11, i32 %13, %"class.skvm::Builder"* %11, i32 %13) #13
  %32 = extractvalue { %"class.skvm::Builder"*, i32 } %31, 0
  %33 = extractvalue { %"class.skvm::Builder"*, i32 } %31, 1
  %34 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %29, %"class.skvm::Builder"* %29, i32 %30, %"class.skvm::Builder"* %32, i32 %33) #13
  %35 = extractvalue { %"class.skvm::Builder"*, i32 } %34, 0
  %36 = extractvalue { %"class.skvm::Builder"*, i32 } %34, 1
  %37 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder4sqrtENS_3F32E(%"class.skvm::Builder"* %35, %"class.skvm::Builder"* %35, i32 %36) #13
  %38 = extractvalue { %"class.skvm::Builder"*, i32 } %37, 0
  %39 = extractvalue { %"class.skvm::Builder"*, i32 } %37, 1
  %40 = tail call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %2, float %25)
  %41 = trunc i64 %40 to i32
  %42 = lshr i64 %40, 32
  %43 = trunc i64 %42 to i32
  %44 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %1, i32 %41, i32 %43) #13
  %45 = extractvalue { %"class.skvm::Builder"*, i32 } %44, 0
  %46 = extractvalue { %"class.skvm::Builder"*, i32 } %44, 1
  %47 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %38, %"class.skvm::Builder"* %38, i32 %39, %"class.skvm::Builder"* %45, i32 %46) #13
  %48 = extractvalue { %"class.skvm::Builder"*, i32 } %47, 0
  %49 = extractvalue { %"class.skvm::Builder"*, i32 } %47, 1
  %50 = tail call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %2, float %27)
  %51 = trunc i64 %50 to i32
  %52 = lshr i64 %50, 32
  %53 = trunc i64 %52 to i32
  %54 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %1, i32 %51, i32 %53) #13
  %55 = extractvalue { %"class.skvm::Builder"*, i32 } %54, 0
  %56 = extractvalue { %"class.skvm::Builder"*, i32 } %54, 1
  %57 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %48, %"class.skvm::Builder"* %48, i32 %49, %"class.skvm::Builder"* %55, i32 %56) #13
  %58 = extractvalue { %"class.skvm::Builder"*, i32 } %57, 0
  %59 = extractvalue { %"class.skvm::Builder"*, i32 } %57, 1
  br label %231

60:                                               ; preds = %5
  %61 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 3
  %62 = load float, float* %61, align 4
  %63 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 1, i32 0
  %64 = load float, float* %63, align 4
  %65 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 2, i32 0
  %66 = load float, float* %65, align 4
  %67 = fsub float %64, %66
  %68 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 1, i32 1
  %69 = load float, float* %68, align 4
  %70 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 2, i32 1
  %71 = load float, float* %70, align 4
  %72 = fsub float %69, %71
  %73 = tail call float @_ZN7SkPoint6LengthEff(float %67, float %72) #13
  %74 = fdiv float %62, %73
  %75 = fmul float %74, %74
  %76 = bitcast float %75 to i32
  %77 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %1, i32 %76) #13
  %78 = extractvalue { %"class.skvm::Builder"*, i32 } %77, 0
  %79 = extractvalue { %"class.skvm::Builder"*, i32 } %77, 1
  %80 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %11, %"class.skvm::Builder"* %11, i32 %13, %"class.skvm::Builder"* %11, i32 %13) #13
  %81 = extractvalue { %"class.skvm::Builder"*, i32 } %80, 0
  %82 = extractvalue { %"class.skvm::Builder"*, i32 } %80, 1
  %83 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %78, %"class.skvm::Builder"* %78, i32 %79, %"class.skvm::Builder"* %81, i32 %82) #13
  %84 = extractvalue { %"class.skvm::Builder"*, i32 } %83, 0
  %85 = extractvalue { %"class.skvm::Builder"*, i32 } %83, 1
  %86 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder4sqrtENS_3F32E(%"class.skvm::Builder"* %84, %"class.skvm::Builder"* %84, i32 %85) #13
  %87 = extractvalue { %"class.skvm::Builder"*, i32 } %86, 0
  %88 = extractvalue { %"class.skvm::Builder"*, i32 } %86, 1
  %89 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %7, %"class.skvm::Builder"* %7, i32 %9, %"class.skvm::Builder"* %87, i32 %88) #13
  %90 = extractvalue { %"class.skvm::Builder"*, i32 } %89, 0
  %91 = extractvalue { %"class.skvm::Builder"*, i32 } %89, 1
  %92 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder2eqENS_3F32ES1_(%"class.skvm::Builder"* %90, %"class.skvm::Builder"* %90, i32 %91, %"class.skvm::Builder"* %90, i32 %91) #13
  %93 = extractvalue { %"class.skvm::Builder"*, i32 } %92, 0
  %94 = extractvalue { %"class.skvm::Builder"*, i32 } %92, 1
  %95 = getelementptr inbounds %"struct.skvm::I32", %"struct.skvm::I32"* %4, i64 0, i32 0
  store %"class.skvm::Builder"* %93, %"class.skvm::Builder"** %95, align 8
  %96 = getelementptr inbounds %"struct.skvm::I32", %"struct.skvm::I32"* %4, i64 0, i32 1
  store i32 %94, i32* %96, align 8
  br label %231

97:                                               ; preds = %5
  %98 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 6, i32 0
  %99 = load float, float* %98, align 8
  %100 = fdiv float 1.000000e+00, %99
  %101 = tail call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %2, float %100)
  %102 = trunc i64 %101 to i32
  %103 = lshr i64 %101, 32
  %104 = trunc i64 %103 to i32
  %105 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %1, i32 %102, i32 %104) #13
  %106 = extractvalue { %"class.skvm::Builder"*, i32 } %105, 0
  %107 = extractvalue { %"class.skvm::Builder"*, i32 } %105, 1
  %108 = load float, float* %98, align 4
  %109 = fsub float 1.000000e+00, %108
  %110 = tail call float @llvm.fabs.f32(float %109) #13
  %111 = fcmp ugt float %110, 0x3F30000000000000
  br i1 %111, label %120, label %112

112:                                              ; preds = %97
  %113 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3divENS_3F32ES1_(%"class.skvm::Builder"* %11, %"class.skvm::Builder"* %11, i32 %13, %"class.skvm::Builder"* %7, i32 %9) #13
  %114 = extractvalue { %"class.skvm::Builder"*, i32 } %113, 0
  %115 = extractvalue { %"class.skvm::Builder"*, i32 } %113, 1
  %116 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %114, %"class.skvm::Builder"* %114, i32 %115, %"class.skvm::Builder"* %11, i32 %13) #13
  %117 = extractvalue { %"class.skvm::Builder"*, i32 } %116, 0
  %118 = extractvalue { %"class.skvm::Builder"*, i32 } %116, 1
  %119 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %117, %"class.skvm::Builder"* %117, i32 %118, %"class.skvm::Builder"* %7, i32 %9) #13
  br label %168

120:                                              ; preds = %97
  %121 = fcmp ogt float %108, 1.000000e+00
  %122 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %7, %"class.skvm::Builder"* %7, i32 %9, %"class.skvm::Builder"* %7, i32 %9) #13
  %123 = extractvalue { %"class.skvm::Builder"*, i32 } %122, 0
  %124 = extractvalue { %"class.skvm::Builder"*, i32 } %122, 1
  %125 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %11, %"class.skvm::Builder"* %11, i32 %13, %"class.skvm::Builder"* %11, i32 %13) #13
  %126 = extractvalue { %"class.skvm::Builder"*, i32 } %125, 0
  %127 = extractvalue { %"class.skvm::Builder"*, i32 } %125, 1
  br i1 %121, label %128, label %139

128:                                              ; preds = %120
  %129 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %123, %"class.skvm::Builder"* %123, i32 %124, %"class.skvm::Builder"* %126, i32 %127) #13
  %130 = extractvalue { %"class.skvm::Builder"*, i32 } %129, 0
  %131 = extractvalue { %"class.skvm::Builder"*, i32 } %129, 1
  %132 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder4sqrtENS_3F32E(%"class.skvm::Builder"* %130, %"class.skvm::Builder"* %130, i32 %131) #13
  %133 = extractvalue { %"class.skvm::Builder"*, i32 } %132, 0
  %134 = extractvalue { %"class.skvm::Builder"*, i32 } %132, 1
  %135 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %7, %"class.skvm::Builder"* %7, i32 %9, %"class.skvm::Builder"* %106, i32 %107) #13
  %136 = extractvalue { %"class.skvm::Builder"*, i32 } %135, 0
  %137 = extractvalue { %"class.skvm::Builder"*, i32 } %135, 1
  %138 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %133, %"class.skvm::Builder"* %133, i32 %134, %"class.skvm::Builder"* %136, i32 %137) #13
  br label %168

139:                                              ; preds = %120
  %140 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %123, %"class.skvm::Builder"* %123, i32 %124, %"class.skvm::Builder"* %126, i32 %127) #13
  %141 = extractvalue { %"class.skvm::Builder"*, i32 } %140, 0
  %142 = extractvalue { %"class.skvm::Builder"*, i32 } %140, 1
  %143 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder4sqrtENS_3F32E(%"class.skvm::Builder"* %141, %"class.skvm::Builder"* %141, i32 %142) #13
  %144 = extractvalue { %"class.skvm::Builder"*, i32 } %143, 0
  %145 = extractvalue { %"class.skvm::Builder"*, i32 } %143, 1
  %146 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 6, i32 2
  %147 = load i8, i8* %146, align 4, !range !5
  %148 = icmp eq i8 %147, 0
  br i1 %148, label %149, label %154

149:                                              ; preds = %139
  %150 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 6, i32 1
  %151 = load float, float* %150, align 4
  %152 = fsub float 1.000000e+00, %151
  %153 = fcmp olt float %152, 0.000000e+00
  br i1 %153, label %154, label %161

154:                                              ; preds = %139, %149
  %155 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %144, i32 0) #13
  %156 = extractvalue { %"class.skvm::Builder"*, i32 } %155, 0
  %157 = extractvalue { %"class.skvm::Builder"*, i32 } %155, 1
  %158 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %144, %"class.skvm::Builder"* %156, i32 %157, %"class.skvm::Builder"* %144, i32 %145) #13
  %159 = extractvalue { %"class.skvm::Builder"*, i32 } %158, 0
  %160 = extractvalue { %"class.skvm::Builder"*, i32 } %158, 1
  br label %161

161:                                              ; preds = %154, %149
  %162 = phi %"class.skvm::Builder"* [ %159, %154 ], [ %144, %149 ]
  %163 = phi i32 [ %160, %154 ], [ %145, %149 ]
  %164 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"* %7, %"class.skvm::Builder"* %7, i32 %9, %"class.skvm::Builder"* %106, i32 %107) #13
  %165 = extractvalue { %"class.skvm::Builder"*, i32 } %164, 0
  %166 = extractvalue { %"class.skvm::Builder"*, i32 } %164, 1
  %167 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %162, %"class.skvm::Builder"* %162, i32 %163, %"class.skvm::Builder"* %165, i32 %166) #13
  br label %168

168:                                              ; preds = %128, %161, %112
  %169 = phi { %"class.skvm::Builder"*, i32 } [ %138, %128 ], [ %167, %161 ], [ %119, %112 ]
  %170 = extractvalue { %"class.skvm::Builder"*, i32 } %169, 0
  %171 = extractvalue { %"class.skvm::Builder"*, i32 } %169, 1
  %172 = load float, float* %98, align 4
  %173 = fsub float 1.000000e+00, %172
  %174 = tail call float @llvm.fabs.f32(float %173) #13
  %175 = fcmp ugt float %174, 0x3F30000000000000
  %176 = fcmp ogt float %172, 1.000000e+00
  %177 = and i1 %176, %175
  br i1 %177, label %187, label %178

178:                                              ; preds = %168
  %179 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %170, i32 0) #13
  %180 = extractvalue { %"class.skvm::Builder"*, i32 } %179, 0
  %181 = extractvalue { %"class.skvm::Builder"*, i32 } %179, 1
  %182 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder2gtENS_3F32ES1_(%"class.skvm::Builder"* %170, %"class.skvm::Builder"* %170, i32 %171, %"class.skvm::Builder"* %180, i32 %181) #13
  %183 = extractvalue { %"class.skvm::Builder"*, i32 } %182, 0
  %184 = extractvalue { %"class.skvm::Builder"*, i32 } %182, 1
  %185 = getelementptr inbounds %"struct.skvm::I32", %"struct.skvm::I32"* %4, i64 0, i32 0
  store %"class.skvm::Builder"* %183, %"class.skvm::Builder"** %185, align 8
  %186 = getelementptr inbounds %"struct.skvm::I32", %"struct.skvm::I32"* %4, i64 0, i32 1
  store i32 %184, i32* %186, align 8
  br label %187

187:                                              ; preds = %178, %168
  %188 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 6, i32 1
  %189 = load float, float* %188, align 4
  %190 = tail call i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"* %2, float %189)
  %191 = trunc i64 %190 to i32
  %192 = lshr i64 %190, 32
  %193 = trunc i64 %192 to i32
  %194 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"* %1, i32 %191, i32 %193) #13
  %195 = extractvalue { %"class.skvm::Builder"*, i32 } %194, 0
  %196 = extractvalue { %"class.skvm::Builder"*, i32 } %194, 1
  %197 = load float, float* %188, align 4
  %198 = fsub float 1.000000e+00, %197
  %199 = fcmp olt float %198, 0.000000e+00
  br i1 %199, label %200, label %208

200:                                              ; preds = %187
  %201 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %170, i32 0) #13
  %202 = extractvalue { %"class.skvm::Builder"*, i32 } %201, 0
  %203 = extractvalue { %"class.skvm::Builder"*, i32 } %201, 1
  %204 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %170, %"class.skvm::Builder"* %202, i32 %203, %"class.skvm::Builder"* %170, i32 %171) #13
  %205 = extractvalue { %"class.skvm::Builder"*, i32 } %204, 0
  %206 = extractvalue { %"class.skvm::Builder"*, i32 } %204, 1
  %207 = load float, float* %188, align 4
  br label %208

208:                                              ; preds = %200, %187
  %209 = phi float [ %207, %200 ], [ %197, %187 ]
  %210 = phi i32 [ %206, %200 ], [ %171, %187 ]
  %211 = phi %"class.skvm::Builder"* [ %205, %200 ], [ %170, %187 ]
  %212 = tail call float @llvm.fabs.f32(float %209) #13
  %213 = fcmp ugt float %212, 0x3F30000000000000
  br i1 %213, label %214, label %218

214:                                              ; preds = %208
  %215 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"* %211, %"class.skvm::Builder"* %211, i32 %210, %"class.skvm::Builder"* %195, i32 %196) #13
  %216 = extractvalue { %"class.skvm::Builder"*, i32 } %215, 0
  %217 = extractvalue { %"class.skvm::Builder"*, i32 } %215, 1
  br label %218

218:                                              ; preds = %208, %214
  %219 = phi i32 [ %210, %208 ], [ %217, %214 ]
  %220 = phi %"class.skvm::Builder"* [ %211, %208 ], [ %216, %214 ]
  %221 = getelementptr inbounds %class.SkTwoPointConicalGradient, %class.SkTwoPointConicalGradient* %0, i64 0, i32 6, i32 2
  %222 = load i8, i8* %221, align 4, !range !5
  %223 = icmp eq i8 %222, 0
  br i1 %223, label %231, label %224

224:                                              ; preds = %218
  %225 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"* %220, i32 1065353216) #13
  %226 = extractvalue { %"class.skvm::Builder"*, i32 } %225, 0
  %227 = extractvalue { %"class.skvm::Builder"*, i32 } %225, 1
  %228 = tail call { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"* %220, %"class.skvm::Builder"* %226, i32 %227, %"class.skvm::Builder"* %220, i32 %219) #13
  %229 = extractvalue { %"class.skvm::Builder"*, i32 } %228, 0
  %230 = extractvalue { %"class.skvm::Builder"*, i32 } %228, 1
  br label %231

231:                                              ; preds = %218, %224, %60, %16
  %232 = phi %"class.skvm::Builder"* [ %58, %16 ], [ %90, %60 ], [ %229, %224 ], [ %220, %218 ]
  %233 = phi i32 [ %59, %16 ], [ %91, %60 ], [ %230, %224 ], [ %219, %218 ]
  %234 = insertvalue { %"class.skvm::Builder"*, i32 } undef, %"class.skvm::Builder"* %232, 0
  %235 = insertvalue { %"class.skvm::Builder"*, i32 } %234, i32 %233, 1
  ret { %"class.skvm::Builder"*, i32 } %235
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN4skvm8Uniforms5pushFEf(%"struct.skvm::Uniforms"*, float) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %0, i64 0, i32 1
  %4 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %0, i64 0, i32 1, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8
  %6 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %7 = load i32*, i32** %6, align 8
  %8 = icmp eq i32* %5, %7
  %9 = ptrtoint i32* %7 to i64
  br i1 %8, label %16, label %10

10:                                               ; preds = %2
  %11 = bitcast i32* %5 to float*
  store float %1, float* %11, align 4
  %12 = getelementptr inbounds i32, i32* %5, i64 1
  %13 = ptrtoint i32* %12 to i64
  %14 = bitcast i32** %4 to i64*
  store i64 %13, i64* %14, align 8
  %15 = bitcast %"class.std::__1::vector.33"* %3 to i64*
  br label %74

16:                                               ; preds = %2
  %17 = ptrtoint i32* %5 to i64
  %18 = bitcast i32** %4 to i64*
  %19 = bitcast %"class.std::__1::vector.33"* %3 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %17, %20
  %22 = ashr exact i64 %21, 2
  %23 = add nsw i64 %22, 1
  %24 = icmp ugt i64 %23, 4611686018427387903
  br i1 %24, label %25, label %27

25:                                               ; preds = %16
  %26 = bitcast %"class.std::__1::vector.33"* %3 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %26) #15
  unreachable

27:                                               ; preds = %16
  %28 = bitcast i32** %6 to i64*
  %29 = sub i64 %9, %20
  %30 = ashr exact i64 %29, 2
  %31 = icmp ult i64 %30, 2305843009213693951
  br i1 %31, label %32, label %40

32:                                               ; preds = %27
  %33 = ashr exact i64 %29, 1
  %34 = icmp ult i64 %33, %23
  %35 = select i1 %34, i64 %23, i64 %33
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %45, label %37

37:                                               ; preds = %32
  %38 = icmp ugt i64 %35, 4611686018427387903
  br i1 %38, label %39, label %40

39:                                               ; preds = %37
  tail call void @abort() #15
  unreachable

40:                                               ; preds = %37, %27
  %41 = phi i64 [ %35, %37 ], [ 4611686018427387903, %27 ]
  %42 = shl i64 %41, 2
  %43 = tail call i8* @_Znwm(i64 %42) #14
  %44 = bitcast i8* %43 to i32*
  br label %45

45:                                               ; preds = %40, %32
  %46 = phi i64 [ %41, %40 ], [ 0, %32 ]
  %47 = phi i32* [ %44, %40 ], [ null, %32 ]
  %48 = getelementptr inbounds i32, i32* %47, i64 %22
  %49 = getelementptr inbounds i32, i32* %47, i64 %46
  %50 = ptrtoint i32* %49 to i64
  %51 = bitcast i32* %48 to float*
  store float %1, float* %51, align 4
  %52 = getelementptr inbounds i32, i32* %48, i64 1
  %53 = ptrtoint i32* %52 to i64
  %54 = getelementptr inbounds %"class.std::__1::vector.33", %"class.std::__1::vector.33"* %3, i64 0, i32 0, i32 0
  %55 = load i32*, i32** %54, align 8
  %56 = load i64, i64* %18, align 8
  %57 = ptrtoint i32* %55 to i64
  %58 = sub i64 %56, %57
  %59 = ashr exact i64 %58, 2
  %60 = sub nsw i64 0, %59
  %61 = getelementptr inbounds i32, i32* %48, i64 %60
  %62 = ptrtoint i32* %61 to i64
  %63 = icmp sgt i64 %58, 0
  br i1 %63, label %64, label %68

64:                                               ; preds = %45
  %65 = bitcast i32* %61 to i8*
  %66 = bitcast i32* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %65, i8* align 4 %66, i64 %58, i1 false) #13
  %67 = load i32*, i32** %54, align 8
  br label %68

68:                                               ; preds = %64, %45
  %69 = phi i32* [ %55, %45 ], [ %67, %64 ]
  store i64 %62, i64* %19, align 8
  store i64 %53, i64* %18, align 8
  store i64 %50, i64* %28, align 8
  %70 = icmp eq i32* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %68
  %72 = bitcast i32* %69 to i8*
  tail call void @_ZdlPv(i8* %72) #14
  %73 = load i64, i64* %18, align 8
  br label %74

74:                                               ; preds = %10, %68, %71
  %75 = phi i64* [ %15, %10 ], [ %19, %68 ], [ %19, %71 ]
  %76 = phi i64 [ %13, %10 ], [ %53, %68 ], [ %73, %71 ]
  %77 = getelementptr inbounds %"struct.skvm::Uniforms", %"struct.skvm::Uniforms"* %0, i64 0, i32 0, i32 0
  %78 = load i32, i32* %77, align 8
  %79 = load i64, i64* %75, align 8
  %80 = sub i64 %76, %79
  %81 = shl i64 %80, 32
  %82 = add i64 %81, -17179869184
  %83 = zext i32 %78 to i64
  %84 = or i64 %82, %83
  ret i64 %84
}

; Function Attrs: nounwind ssp uwtable
define hidden %class.GrFragmentProcessor* @_ZNK25SkTwoPointConicalGradient19asFragmentProcessorERK8GrFPArgs(%class.SkTwoPointConicalGradient*, %struct.GrFPArgs* dereferenceable(40)) unnamed_addr #0 align 2 {
  %3 = tail call %class.GrFragmentProcessor* @_ZN16GrGradientShader11MakeConicalERK25SkTwoPointConicalGradientRK8GrFPArgs(%class.SkTwoPointConicalGradient* dereferenceable(272) %0, %struct.GrFPArgs* dereferenceable(40) %1) #13
  ret %class.GrFragmentProcessor* %3
}

declare %class.GrFragmentProcessor* @_ZN16GrGradientShader11MakeConicalERK25SkTwoPointConicalGradientRK8GrFPArgs(%class.SkTwoPointConicalGradient* dereferenceable(272), %struct.GrFPArgs* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN20SkGradientShaderBaseD2Ev(%class.SkGradientShaderBase*) unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN25SkTwoPointConicalGradientD0Ev(%class.SkTwoPointConicalGradient*) unnamed_addr #8 comdat align 2 {
  %2 = bitcast %class.SkTwoPointConicalGradient* %0 to %class.SkGradientShaderBase*
  tail call void @_ZN20SkGradientShaderBaseD2Ev(%class.SkGradientShaderBase* %2) #13
  %3 = bitcast %class.SkTwoPointConicalGradient* %0 to i8*
  tail call void @_ZdlPv(i8* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #13
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void (%class.sk_sp.11*, %class.SkReadBuffer*)* @_ZNK25SkTwoPointConicalGradient10getFactoryEv(%class.SkTwoPointConicalGradient*) unnamed_addr #0 comdat align 2 {
  ret void (%class.sk_sp.11*, %class.SkReadBuffer*)* @_ZN25SkTwoPointConicalGradient10CreateProcER12SkReadBuffer
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZNK25SkTwoPointConicalGradient11getTypeNameEv(%class.SkTwoPointConicalGradient*) unnamed_addr #0 comdat align 2 {
  ret i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.1, i64 0, i64 0)
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK12SkShaderBase18getFlattenableTypeEv(%class.SkShaderBase*) unnamed_addr #0 comdat align 2 {
  ret i32 8
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK12SkShaderBase10isConstantEv(%class.SkShaderBase*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkImage* @_ZNK12SkShaderBase10onIsAImageEP8SkMatrixP10SkTileMode(%class.SkShaderBase*, %class.SkMatrix*, i32*) unnamed_addr #0 comdat align 2 {
  ret %class.SkImage* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkRuntimeEffect* @_ZNK12SkShaderBase15asRuntimeEffectEv(%class.SkShaderBase*) unnamed_addr #0 comdat align 2 {
  ret %class.SkRuntimeEffect* null
}

declare void @_ZNK12SkShaderBase24makeAsALocalMatrixShaderEP8SkMatrix(%class.sk_sp.6* sret, %class.SkShaderBase*, %class.SkMatrix*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.SkShaderBase::Context"* @_ZNK12SkShaderBase13onMakeContextERKNS_10ContextRecEP12SkArenaAlloc(%class.SkShaderBase*, %"struct.SkShaderBase::ContextRec"* dereferenceable(40), %class.SkArenaAlloc*) unnamed_addr #0 comdat align 2 {
  ret %"class.SkShaderBase::Context"* null
}

declare zeroext i1 @_ZNK20SkGradientShaderBase18onAsLuminanceColorEPj(%class.SkGradientShaderBase*, i32*) unnamed_addr #1

declare zeroext i1 @_ZNK20SkGradientShaderBase14onAppendStagesERK10SkStageRec(%class.SkGradientShaderBase*, %struct.SkStageRec* dereferenceable(56)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.SkStageUpdater* @_ZNK12SkShaderBase23onAppendUpdatableStagesERK10SkStageRec(%class.SkShaderBase*, %struct.SkStageRec* dereferenceable(56)) unnamed_addr #0 comdat align 2 {
  ret %class.SkStageUpdater* null
}

declare void @_ZNK20SkGradientShaderBase9onProgramEPN4skvm7BuilderENS0_5CoordES3_NS0_5ColorERK16SkMatrixProviderPK8SkMatrixRK11SkColorInfoPNS0_8UniformsEP12SkArenaAlloc(%"struct.skvm::Color"* sret, %class.SkGradientShaderBase*, %"class.skvm::Builder"*, %"struct.skvm::Coord"* byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Coord"* byval(%"struct.skvm::Coord") align 8, %"struct.skvm::Color"* byval(%"struct.skvm::Color") align 8, %class.SkMatrixProvider*, %class.SkMatrix*, %class.SkColorInfo* dereferenceable(16), %"struct.skvm::Uniforms"*, %class.SkArenaAlloc*) unnamed_addr #1

; Function Attrs: nofree nounwind
declare float @sqrtf(float) local_unnamed_addr #9

declare float @_ZN7SkPoint6LengthEff(float, float) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix12setTranslateEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

declare void @_ZN12SkReadBuffer9readPointEP7SkPoint(%class.SkReadBuffer*, %struct.SkPoint*) local_unnamed_addr #1

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix9setConcatERKS_S1_(%class.SkMatrix*, %class.SkMatrix* dereferenceable(40), %class.SkMatrix* dereferenceable(40)) local_unnamed_addr #1

declare dereferenceable(40) %class.SkMatrix* @_ZN8SkMatrix8setScaleEff(%class.SkMatrix*, float, float) local_unnamed_addr #1

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3addENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #1

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3mulENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #1

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder9uniform32ENS_3PtrEi(%"class.skvm::Builder"*, i32, i32) local_unnamed_addr #1

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #10

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #11

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #12

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder4sqrtENS_3F32E(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32) local_unnamed_addr #1

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3subENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #1

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder5splatEi(%"class.skvm::Builder"*, i32) local_unnamed_addr #1

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder2eqENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #1

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder3divENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #1

declare { %"class.skvm::Builder"*, i32 } @_ZN4skvm7Builder2gtENS_3F32ES1_(%"class.skvm::Builder"*, %"class.skvm::Builder"*, i32, %"class.skvm::Builder"*, i32) local_unnamed_addr #1

declare void @_ZN12SkArenaAlloc11ensureSpaceEjj(%class.SkArenaAlloc*, i32, i32) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="64" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { nounwind }
attributes #14 = { builtin nounwind }
attributes #15 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN8SkMatrix9TranslateEff: argument 0"}
!4 = distinct !{!4, !"_ZN8SkMatrix9TranslateEff"}
!5 = !{i8 0, i8 2}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN8SkMatrix9TranslateEff: argument 0"}
!8 = distinct !{!8, !"_ZN8SkMatrix9TranslateEff"}
!9 = !{!10}
!10 = distinct !{!10, !11, !"_ZN8SkMatrix5ScaleEff: argument 0"}
!11 = distinct !{!11, !"_ZN8SkMatrix5ScaleEff"}
!12 = !{!13, !15}
!13 = distinct !{!13, !14, !"_ZN8SkMatrix6ConcatERKS_S1_: argument 0"}
!14 = distinct !{!14, !"_ZN8SkMatrix6ConcatERKS_S1_"}
!15 = distinct !{!15, !16, !"_ZmlRK8SkMatrixS1_: argument 0"}
!16 = distinct !{!16, !"_ZmlRK8SkMatrixS1_"}
