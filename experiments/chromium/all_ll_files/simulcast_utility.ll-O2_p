; ModuleID = '../../third_party/webrtc/modules/video_coding/utility/simulcast_utility.cc'
source_filename = "../../third_party/webrtc/modules/video_coding/utility/simulcast_utility.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webrtc::VideoCodec" = type { i32, i16, i16, i32, i32, i32, i32, i8, i32, i8, [3 x %"struct.webrtc::SpatialLayer"], [5 x %"struct.webrtc::SpatialLayer"], i32, i8, %"class.absl::optional", %"struct.webrtc::VideoCodec::TimingFrameTriggerThresholds", i8, %"union.webrtc::VideoCodecUnion", %"class.std::__1::basic_string" }
%"struct.webrtc::SpatialLayer" = type { i16, i16, float, i8, i32, i32, i32, i32, i8 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i32 }
%"struct.webrtc::VideoCodec::TimingFrameTriggerThresholds" = type { i64, i16 }
%"union.webrtc::VideoCodecUnion" = type { %"struct.webrtc::VideoCodecVP9" }
%"struct.webrtc::VideoCodecVP9" = type { i32, i8, i8, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.0 }
%union.anon.0 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.webrtc::VideoCodecVP8" = type { i32, i8, i8, i8, i8, i32 }

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6webrtc16SimulcastUtility19SumStreamMaxBitrateEiRKNS_10VideoCodecE(i32, %"class.webrtc::VideoCodec"* nocapture readonly dereferenceable(376)) local_unnamed_addr #0 align 2 {
  %3 = icmp sgt i32 %0, 0
  br i1 %3, label %4, label %39

4:                                                ; preds = %2
  %5 = zext i32 %0 to i64
  %6 = icmp ult i32 %0, 9
  br i1 %6, label %7, label %10

7:                                                ; preds = %32, %4
  %8 = phi i64 [ 0, %4 ], [ %14, %32 ]
  %9 = phi i32 [ 0, %4 ], [ %38, %32 ]
  br label %41

10:                                               ; preds = %4
  %11 = and i64 %5, 7
  %12 = icmp eq i64 %11, 0
  %13 = select i1 %12, i64 8, i64 %11
  %14 = sub nsw i64 %5, %13
  br label %15

15:                                               ; preds = %15, %10
  %16 = phi i64 [ 0, %10 ], [ %30, %15 ]
  %17 = phi <4 x i32> [ zeroinitializer, %10 ], [ %28, %15 ]
  %18 = phi <4 x i32> [ zeroinitializer, %10 ], [ %29, %15 ]
  %19 = or i64 %16, 4
  %20 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 10, i64 %16, i32 4
  %21 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 10, i64 %19, i32 4
  %22 = bitcast i32* %20 to <32 x i32>*
  %23 = bitcast i32* %21 to <32 x i32>*
  %24 = load <32 x i32>, <32 x i32>* %22, align 4
  %25 = load <32 x i32>, <32 x i32>* %23, align 4
  %26 = shufflevector <32 x i32> %24, <32 x i32> undef, <4 x i32> <i32 0, i32 8, i32 16, i32 24>
  %27 = shufflevector <32 x i32> %25, <32 x i32> undef, <4 x i32> <i32 0, i32 8, i32 16, i32 24>
  %28 = add <4 x i32> %26, %17
  %29 = add <4 x i32> %27, %18
  %30 = add i64 %16, 8
  %31 = icmp eq i64 %30, %14
  br i1 %31, label %32, label %15, !llvm.loop !2

32:                                               ; preds = %15
  %33 = add <4 x i32> %29, %28
  %34 = shufflevector <4 x i32> %33, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %35 = add <4 x i32> %33, %34
  %36 = shufflevector <4 x i32> %35, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %37 = add <4 x i32> %35, %36
  %38 = extractelement <4 x i32> %37, i32 0
  br label %7

39:                                               ; preds = %41, %2
  %40 = phi i32 [ 0, %2 ], [ %46, %41 ]
  ret i32 %40

41:                                               ; preds = %7, %41
  %42 = phi i64 [ %47, %41 ], [ %8, %7 ]
  %43 = phi i32 [ %46, %41 ], [ %9, %7 ]
  %44 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 10, i64 %42, i32 4
  %45 = load i32, i32* %44, align 4
  %46 = add i32 %45, %43
  %47 = add nuw nsw i64 %42, 1
  %48 = icmp eq i64 %47, %5
  br i1 %48, label %39, label %41, !llvm.loop !4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZN6webrtc16SimulcastUtility24NumberOfSimulcastStreamsERKNS_10VideoCodecE(%"class.webrtc::VideoCodec"* nocapture readonly dereferenceable(376)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 9
  %3 = load i8, i8* %2, align 8
  %4 = icmp eq i8 %3, 0
  %5 = select i1 %4, i8 1, i8 %3
  %6 = zext i8 %5 to i64
  %7 = icmp ult i8 %5, 9
  br i1 %7, label %37, label %8

8:                                                ; preds = %1
  %9 = and i64 %6, 7
  %10 = icmp eq i64 %9, 0
  %11 = select i1 %10, i64 8, i64 %9
  %12 = sub nsw i64 %6, %11
  br label %13

13:                                               ; preds = %13, %8
  %14 = phi i64 [ 0, %8 ], [ %28, %13 ]
  %15 = phi <4 x i32> [ zeroinitializer, %8 ], [ %26, %13 ]
  %16 = phi <4 x i32> [ zeroinitializer, %8 ], [ %27, %13 ]
  %17 = or i64 %14, 4
  %18 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 10, i64 %14, i32 4
  %19 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 10, i64 %17, i32 4
  %20 = bitcast i32* %18 to <32 x i32>*
  %21 = bitcast i32* %19 to <32 x i32>*
  %22 = load <32 x i32>, <32 x i32>* %20, align 4
  %23 = load <32 x i32>, <32 x i32>* %21, align 4
  %24 = shufflevector <32 x i32> %22, <32 x i32> undef, <4 x i32> <i32 0, i32 8, i32 16, i32 24>
  %25 = shufflevector <32 x i32> %23, <32 x i32> undef, <4 x i32> <i32 0, i32 8, i32 16, i32 24>
  %26 = add <4 x i32> %24, %15
  %27 = add <4 x i32> %25, %16
  %28 = add i64 %14, 8
  %29 = icmp eq i64 %28, %12
  br i1 %29, label %30, label %13, !llvm.loop !6

30:                                               ; preds = %13
  %31 = add <4 x i32> %27, %26
  %32 = shufflevector <4 x i32> %31, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %33 = add <4 x i32> %31, %32
  %34 = shufflevector <4 x i32> %33, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %35 = add <4 x i32> %33, %34
  %36 = extractelement <4 x i32> %35, i32 0
  br label %37

37:                                               ; preds = %30, %1
  %38 = phi i64 [ 0, %1 ], [ %12, %30 ]
  %39 = phi i32 [ 0, %1 ], [ %36, %30 ]
  br label %40

40:                                               ; preds = %37, %40
  %41 = phi i64 [ %46, %40 ], [ %38, %37 ]
  %42 = phi i32 [ %45, %40 ], [ %39, %37 ]
  %43 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 10, i64 %41, i32 4
  %44 = load i32, i32* %43, align 4
  %45 = add i32 %44, %42
  %46 = add nuw nsw i64 %41, 1
  %47 = icmp eq i64 %46, %6
  br i1 %47, label %48, label %40, !llvm.loop !7

48:                                               ; preds = %40
  %49 = zext i8 %5 to i32
  %50 = icmp eq i32 %45, 0
  %51 = select i1 %50, i32 1, i32 %49
  ret i32 %51
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN6webrtc16SimulcastUtility24ValidSimulcastParametersERKNS_10VideoCodecEi(%"class.webrtc::VideoCodec"* nocapture readonly dereferenceable(376), i32) local_unnamed_addr #1 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 1
  %4 = load i16, i16* %3, align 4
  %5 = add nsw i32 %1, -1
  %6 = sext i32 %5 to i64
  %7 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 10, i64 %6, i32 0
  %8 = load i16, i16* %7, align 4
  %9 = icmp eq i16 %4, %8
  br i1 %9, label %10, label %100

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 2
  %12 = load i16, i16* %11, align 2
  %13 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 10, i64 %6, i32 1
  %14 = load i16, i16* %13, align 2
  %15 = icmp eq i16 %12, %14
  br i1 %15, label %16, label %100

16:                                               ; preds = %10
  %17 = icmp sgt i32 %1, 0
  br i1 %17, label %18, label %36

18:                                               ; preds = %16
  %19 = zext i16 %4 to i32
  %20 = zext i16 %12 to i32
  %21 = zext i32 %1 to i64
  br label %24

22:                                               ; preds = %24
  %23 = icmp eq i64 %35, %21
  br i1 %23, label %36, label %24

24:                                               ; preds = %22, %18
  %25 = phi i64 [ 0, %18 ], [ %35, %22 ]
  %26 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 10, i64 %25, i32 1
  %27 = load i16, i16* %26, align 2
  %28 = zext i16 %27 to i32
  %29 = mul nuw nsw i32 %28, %19
  %30 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 10, i64 %25, i32 0
  %31 = load i16, i16* %30, align 4
  %32 = zext i16 %31 to i32
  %33 = mul nuw nsw i32 %32, %20
  %34 = icmp eq i32 %29, %33
  %35 = add nuw nsw i64 %25, 1
  br i1 %34, label %22, label %100

36:                                               ; preds = %22, %16
  %37 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 0
  %38 = load i32, i32* %37, align 8
  %39 = icmp eq i32 %38, 1
  %40 = icmp sgt i32 %1, 1
  br i1 %39, label %46, label %41

41:                                               ; preds = %36
  br i1 %40, label %42, label %73

42:                                               ; preds = %41
  %43 = zext i32 %1 to i64
  %44 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 10, i64 0, i32 0
  %45 = load i16, i16* %44, align 4
  br label %62

46:                                               ; preds = %36
  br i1 %40, label %47, label %73

47:                                               ; preds = %46
  %48 = zext i32 %1 to i64
  %49 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 10, i64 0, i32 0
  %50 = load i16, i16* %49, align 4
  br label %53

51:                                               ; preds = %53
  %52 = icmp eq i64 %59, %48
  br i1 %52, label %72, label %53

53:                                               ; preds = %51, %47
  %54 = phi i16 [ %50, %47 ], [ %57, %51 ]
  %55 = phi i64 [ 1, %47 ], [ %59, %51 ]
  %56 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 10, i64 %55, i32 0
  %57 = load i16, i16* %56, align 4
  %58 = icmp ult i16 %57, %54
  %59 = add nuw nsw i64 %55, 1
  br i1 %58, label %100, label %51

60:                                               ; preds = %62
  %61 = icmp eq i64 %71, %43
  br i1 %61, label %72, label %62

62:                                               ; preds = %60, %42
  %63 = phi i16 [ %45, %42 ], [ %66, %60 ]
  %64 = phi i64 [ 1, %42 ], [ %71, %60 ]
  %65 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 10, i64 %64, i32 0
  %66 = load i16, i16* %65, align 4
  %67 = zext i16 %66 to i32
  %68 = zext i16 %63 to i32
  %69 = shl nuw nsw i32 %68, 1
  %70 = icmp eq i32 %69, %67
  %71 = add nuw nsw i64 %64, 1
  br i1 %70, label %60, label %100

72:                                               ; preds = %60, %51
  br i1 %40, label %74, label %73

73:                                               ; preds = %78, %46, %41, %72
  br label %90

74:                                               ; preds = %72
  %75 = zext i32 %1 to i64
  %76 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 10, i64 0, i32 2
  %77 = load float, float* %76, align 4
  br label %80

78:                                               ; preds = %80
  %79 = icmp eq i64 %89, %75
  br i1 %79, label %73, label %80

80:                                               ; preds = %78, %74
  %81 = phi float [ %77, %74 ], [ %84, %78 ]
  %82 = phi i64 [ 1, %74 ], [ %89, %78 ]
  %83 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 10, i64 %82, i32 2
  %84 = load float, float* %83, align 4
  %85 = fsub float %84, %81
  %86 = tail call float @llvm.fabs.f32(float %85) #5
  %87 = fpext float %86 to double
  %88 = fcmp ogt double %87, 1.000000e-09
  %89 = add nuw nsw i64 %82, 1
  br i1 %88, label %100, label %78

90:                                               ; preds = %73, %93
  %91 = phi i64 [ %96, %93 ], [ 0, %73 ]
  %92 = icmp slt i64 %91, %6
  br i1 %92, label %93, label %100

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 10, i64 %91, i32 3
  %95 = load i8, i8* %94, align 4
  %96 = add nuw nsw i64 %91, 1
  %97 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 10, i64 %96, i32 3
  %98 = load i8, i8* %97, align 4
  %99 = icmp eq i8 %95, %98
  br i1 %99, label %90, label %100

100:                                              ; preds = %24, %62, %53, %80, %90, %93, %10, %2
  %101 = phi i1 [ false, %2 ], [ false, %10 ], [ true, %90 ], [ false, %93 ], [ false, %80 ], [ false, %53 ], [ false, %62 ], [ false, %24 ]
  ret i1 %101
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZN6webrtc16SimulcastUtility27IsConferenceModeScreenshareERKNS_10VideoCodecE(%"class.webrtc::VideoCodec"* nocapture readonly dereferenceable(376)) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 12
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 1
  %5 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 16
  %6 = load i8, i8* %5, align 8
  %7 = icmp ne i8 %6, 0
  %8 = and i1 %4, %7
  ret i1 %8
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc16SimulcastUtility22NumberOfTemporalLayersERKNS_10VideoCodecEi(%"class.webrtc::VideoCodec"* dereferenceable(376), i32) local_unnamed_addr #2 align 2 {
  %3 = tail call dereferenceable(12) %"struct.webrtc::VideoCodecVP8"* @_ZNK6webrtc10VideoCodec3VP8Ev(%"class.webrtc::VideoCodec"* %0) #5
  %4 = getelementptr inbounds %"struct.webrtc::VideoCodecVP8", %"struct.webrtc::VideoCodecVP8"* %3, i64 0, i32 1
  %5 = load i8, i8* %4, align 1
  %6 = icmp ugt i8 %5, 1
  %7 = select i1 %6, i8 %5, i8 1
  %8 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 9
  %9 = load i8, i8* %8, align 8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = sext i32 %1 to i64
  %13 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %0, i64 0, i32 10, i64 %12, i32 3
  %14 = load i8, i8* %13, align 1
  %15 = icmp ult i8 %7, %14
  %16 = select i1 %15, i8 %14, i8 %7
  br label %17

17:                                               ; preds = %2, %11
  %18 = phi i8 [ %7, %2 ], [ %16, %11 ]
  %19 = zext i8 %18 to i32
  ret i32 %19
}

declare dereferenceable(12) %"struct.webrtc::VideoCodecVP8"* @_ZNK6webrtc10VideoCodec3VP8Ev(%"class.webrtc::VideoCodec"*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare float @llvm.fabs.f32(float) #4

attributes #0 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.isvectorized", i32 1}
!4 = distinct !{!4, !5, !3}
!5 = !{!"llvm.loop.unroll.runtime.disable"}
!6 = distinct !{!6, !3}
!7 = distinct !{!7, !5, !3}
