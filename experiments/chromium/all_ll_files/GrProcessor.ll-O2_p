; ModuleID = '../../third_party/skia/src/gpu/GrProcessor.cpp'
source_filename = "../../third_party/skia/src/gpu/GrProcessor.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrMemoryPool = type { %class.GrBlockAllocator }
%class.GrBlockAllocator = type { %"class.GrBlockAllocator::Block"*, i64, %"class.GrBlockAllocator::Block" }
%"class.GrBlockAllocator::Block" = type { %"class.GrBlockAllocator::Block"*, %"class.GrBlockAllocator::Block"*, i32, i32, i32, i32 }
%class.SkSpinlock = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i8 }

@_ZN12_GLOBAL__N_118gProcessorSpinlockE = internal global { { { i8 } } } zeroinitializer, align 1
@_ZZNK12_GLOBAL__N_118MemoryPoolAccessor4poolEvE5gPool = internal unnamed_addr global %class.GrMemoryPool* null, align 8
@_ZGVZNK12_GLOBAL__N_118MemoryPoolAccessor4poolEvE5gPool = internal global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN11GrProcessornwEm(i64) local_unnamed_addr #0 align 2 {
  %2 = atomicrmw xchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZN12_GLOBAL__N_118gProcessorSpinlockE, i64 0, i32 0, i32 0, i32 0), i8 1 acquire
  %3 = and i8 %2, 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN10SkSpinlock16contendedAcquireEv(%class.SkSpinlock* bitcast ({ { { i8 } } }* @_ZN12_GLOBAL__N_118gProcessorSpinlockE to %class.SkSpinlock*)) #3
  br label %6

6:                                                ; preds = %1, %5
  %7 = load atomic i8, i8* bitcast (i64* @_ZGVZNK12_GLOBAL__N_118MemoryPoolAccessor4poolEvE5gPool to i8*) acquire, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %14, !prof !2

9:                                                ; preds = %6
  %10 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK12_GLOBAL__N_118MemoryPoolAccessor4poolEvE5gPool) #3
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %9
  %13 = tail call %class.GrMemoryPool* @_ZN12GrMemoryPool4MakeEmm(i64 4096, i64 4096) #3
  store %class.GrMemoryPool* %13, %class.GrMemoryPool** @_ZZNK12_GLOBAL__N_118MemoryPoolAccessor4poolEvE5gPool, align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK12_GLOBAL__N_118MemoryPoolAccessor4poolEvE5gPool) #3
  br label %14

14:                                               ; preds = %6, %9, %12
  %15 = load %class.GrMemoryPool*, %class.GrMemoryPool** @_ZZNK12_GLOBAL__N_118MemoryPoolAccessor4poolEvE5gPool, align 8
  %16 = tail call i8* @_ZN12GrMemoryPool8allocateEm(%class.GrMemoryPool* %15, i64 %0) #3
  store atomic i8 0, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZN12_GLOBAL__N_118gProcessorSpinlockE, i64 0, i32 0, i32 0, i32 0) release, align 1
  ret i8* %16
}

declare i8* @_ZN12GrMemoryPool8allocateEm(%class.GrMemoryPool*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11GrProcessordlEPv(i8*) local_unnamed_addr #0 align 2 {
  %2 = atomicrmw xchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZN12_GLOBAL__N_118gProcessorSpinlockE, i64 0, i32 0, i32 0, i32 0), i8 1 acquire
  %3 = and i8 %2, 1
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN10SkSpinlock16contendedAcquireEv(%class.SkSpinlock* bitcast ({ { { i8 } } }* @_ZN12_GLOBAL__N_118gProcessorSpinlockE to %class.SkSpinlock*)) #3
  br label %6

6:                                                ; preds = %1, %5
  %7 = load atomic i8, i8* bitcast (i64* @_ZGVZNK12_GLOBAL__N_118MemoryPoolAccessor4poolEvE5gPool to i8*) acquire, align 8
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %14, !prof !2

9:                                                ; preds = %6
  %10 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZNK12_GLOBAL__N_118MemoryPoolAccessor4poolEvE5gPool) #3
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %14, label %12

12:                                               ; preds = %9
  %13 = tail call %class.GrMemoryPool* @_ZN12GrMemoryPool4MakeEmm(i64 4096, i64 4096) #3
  store %class.GrMemoryPool* %13, %class.GrMemoryPool** @_ZZNK12_GLOBAL__N_118MemoryPoolAccessor4poolEvE5gPool, align 8
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZNK12_GLOBAL__N_118MemoryPoolAccessor4poolEvE5gPool) #3
  br label %14

14:                                               ; preds = %6, %9, %12
  %15 = load %class.GrMemoryPool*, %class.GrMemoryPool** @_ZZNK12_GLOBAL__N_118MemoryPoolAccessor4poolEvE5gPool, align 8
  tail call void @_ZN12GrMemoryPool7releaseEPv(%class.GrMemoryPool* %15, i8* %0) #3
  store atomic i8 0, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZN12_GLOBAL__N_118gProcessorSpinlockE, i64 0, i32 0, i32 0, i32 0) release, align 1
  ret void
}

declare void @_ZN12GrMemoryPool7releaseEPv(%class.GrMemoryPool*, i8*) local_unnamed_addr #1

declare void @_ZN10SkSpinlock16contendedAcquireEv(%class.SkSpinlock*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #2

declare %class.GrMemoryPool* @_ZN12GrMemoryPool4MakeEmm(i64, i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree nounwind }
attributes #3 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
