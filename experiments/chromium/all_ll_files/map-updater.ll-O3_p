; ModuleID = '../../v8/src/objects/map-updater.cc'
source_filename = "../../v8/src/objects/map-updater.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.std::__1::locale::id" = type <{ %"struct.std::__1::once_flag", i32, [4 x i8] }>
%"struct.std::__1::once_flag" = type { i64 }
%"class.v8::internal::SoleReadOnlyHeap" = type { %"class.v8::internal::ReadOnlyHeap", [587 x i64] }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.815", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.828", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.838", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.849", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.924", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.967"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.975", i32, i8, i8, i32, i32, %"class.std::__1::vector.981", %"class.std::__1::vector.981", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.988", i64, %"class.std::__1::unordered_map.989", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1045", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1083", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1117", %"class.std::__1::vector.1121", %"class.std::__1::vector.1121", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1152" }
%"class.std::__1::__compressed_pair.1152" = type { %"struct.std::__1::__compressed_pair_elem.1153" }
%"struct.std::__1::__compressed_pair_elem.1153" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.744", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.750", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.750", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.750" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.752", %"class.std::__1::vector.758", %"class.std::__1::unique_ptr.765", %"class.std::__1::vector.772", %"class.std::__1::unique_ptr.779", i64, %"class.std::__1::vector.785", %"class.std::__1::vector.793", %"class.std::__1::vector.801", i8, i8, i32 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.760" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::GlobalHandles::NodeSpace.768"* }
%"class.v8::internal::GlobalHandles::NodeSpace.768" = type opaque
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.774" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"struct.std::__1::pair.787"*, %"struct.std::__1::pair.787"*, %"class.std::__1::__compressed_pair.788" }
%"struct.std::__1::pair.787" = type opaque
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::pair.787"* }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"struct.std::__1::pair.795"*, %"struct.std::__1::pair.795"*, %"class.std::__1::__compressed_pair.796" }
%"struct.std::__1::pair.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::pair.795"* }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.808", %"class.std::__1::vector.815" }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { i64**, i64**, %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i32*, i32*, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.828" = type { %"struct.std::__1::__atomic_base.829" }
%"struct.std::__1::__atomic_base.829" = type { %"struct.std::__1::__cxx_atomic_impl.830" }
%"struct.std::__1::__cxx_atomic_impl.830" = type { %"struct.std::__1::__cxx_atomic_base_impl.831" }
%"struct.std::__1::__cxx_atomic_base_impl.831" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.838" = type { %"struct.std::__1::__atomic_base.839" }
%"struct.std::__1::__atomic_base.839" = type { %"struct.std::__1::__cxx_atomic_impl.840" }
%"struct.std::__1::__cxx_atomic_impl.840" = type { %"struct.std::__1::__cxx_atomic_base_impl.841" }
%"struct.std::__1::__cxx_atomic_base_impl.841" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.845 }
%union.anon.845 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.849" = type { %"class.std::__1::__hash_table.850" }
%"class.std::__1::__hash_table.850" = type <{ %"class.std::__1::unique_ptr.851", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.869", [4 x i8] }>
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853", %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.854"** }
%"struct.std::__1::__hash_node_base.854" = type { %"struct.std::__1::__hash_node_base.854"* }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::__bucket_list_deallocator.856" }
%"class.std::__1::__bucket_list_deallocator.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.std::__1::__hash_node_base.854" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.875", %"class.v8::internal::Handle.881", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.882", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.881" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.883", %"class.std::__1::vector.889", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.903", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"struct.std::__1::pair.923" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"class.std::__1::unique_ptr.891"*, %"class.std::__1::unique_ptr.891"*, %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::unique_ptr.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::unique_ptr.891"* }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"struct.std::__1::pair.917"*, %"struct.std::__1::pair.917"*, %"class.std::__1::__compressed_pair.918" }
%"struct.std::__1::pair.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::pair.917"* }
%"struct.std::__1::pair.923" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.927", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.927" = type { %"class.std::__1::__hash_table.928" }
%"class.std::__1::__hash_table.928" = type <{ %"class.std::__1::unique_ptr.929", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.948", [4 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.932"** }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.std::__1::__bucket_list_deallocator.934" }
%"class.std::__1::__bucket_list_deallocator.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::__hash_node_base.932" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.962" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"class.std::__1::__compressed_pair.957" }
%"struct.std::__1::pair.956" = type opaque
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"struct.std::__1::pair.956"** }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.967" = type { %"class.std::__1::__vector_base.968" }
%"class.std::__1::__vector_base.968" = type { %"class.v8::internal::Handle.969"*, %"class.v8::internal::Handle.969"*, %"class.std::__1::__compressed_pair.970" }
%"class.v8::internal::Handle.969" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.v8::internal::Handle.969"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.833", i32, %"class.v8::Local.0" }
%"class.v8::Local.833" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.808", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.981" = type { %"class.std::__1::__vector_base.982" }
%"class.std::__1::__vector_base.982" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.988" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.989" = type { %"class.std::__1::__hash_table.990" }
%"class.std::__1::__hash_table.990" = type <{ %"class.std::__1::unique_ptr.991", %"class.std::__1::__compressed_pair.1001", %"class.std::__1::__compressed_pair.1006", %"class.std::__1::__compressed_pair.1009", [4 x i8] }>
%"class.std::__1::unique_ptr.991" = type { %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993", %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"struct.std::__1::__hash_node_base.994"** }
%"struct.std::__1::__hash_node_base.994" = type { %"struct.std::__1::__hash_node_base.994"* }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.std::__1::__bucket_list_deallocator.996" }
%"class.std::__1::__bucket_list_deallocator.996" = type { %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"struct.std::__1::__hash_node_base.994" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1013", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1042", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1043", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1013" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1038, %union.anon.1040, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1038 = type { i64 }
%union.anon.1040 = type { i64 }
%"class.std::__1::weak_ptr.1042" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1043" = type { %"class.v8::PersistentBase.1044" }
%"class.v8::PersistentBase.1044" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1014", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1014" = type { %"class.std::__1::__hash_table.1015" }
%"class.std::__1::__hash_table.1015" = type <{ %"class.std::__1::unique_ptr.1016", %"class.std::__1::__compressed_pair.1026", %"class.std::__1::__compressed_pair.1031", %"class.std::__1::__compressed_pair.1034", [4 x i8] }>
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018", %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"struct.std::__1::__hash_node_base.1019"** }
%"struct.std::__1::__hash_node_base.1019" = type { %"struct.std::__1::__hash_node_base.1019"* }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.std::__1::__bucket_list_deallocator.1021" }
%"class.std::__1::__bucket_list_deallocator.1021" = type { %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"struct.std::__1::__hash_node_base.1019" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.1047" }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1074", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1050", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1054", %"class.std::__1::unique_ptr.1060", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1066", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1050" = type { %"struct.std::__1::__atomic_base.1051" }
%"struct.std::__1::__atomic_base.1051" = type { %"struct.std::__1::__cxx_atomic_impl.1052" }
%"struct.std::__1::__cxx_atomic_impl.1052" = type { %"struct.std::__1::__cxx_atomic_base_impl.1053" }
%"struct.std::__1::__cxx_atomic_base_impl.1053" = type { i32 }
%"class.std::__1::unique_ptr.1054" = type { %"class.std::__1::__compressed_pair.1055" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.808" }
%"class.std::__1::unique_ptr.1060" = type { %"class.std::__1::__compressed_pair.1061" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1066" = type { %"class.std::__1::__vector_base.1067" }
%"class.std::__1::__vector_base.1067" = type { %"struct.std::__1::pair.1068"*, %"struct.std::__1::pair.1068"*, %"class.std::__1::__compressed_pair.1069" }
%"struct.std::__1::pair.1068" = type opaque
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.1070" }
%"struct.std::__1::__compressed_pair_elem.1070" = type { %"struct.std::__1::pair.1068"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.834", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.834" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1091" }
%"class.std::__1::unordered_map.1091" = type { %"class.std::__1::__hash_table.1092" }
%"class.std::__1::__hash_table.1092" = type <{ %"class.std::__1::unique_ptr.1093", %"class.std::__1::__compressed_pair.1103", %"class.std::__1::__compressed_pair.1108", %"class.std::__1::__compressed_pair.1111", [4 x i8] }>
%"class.std::__1::unique_ptr.1093" = type { %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095", %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"struct.std::__1::__hash_node_base.1096"** }
%"struct.std::__1::__hash_node_base.1096" = type { %"struct.std::__1::__hash_node_base.1096"* }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"class.std::__1::__bucket_list_deallocator.1098" }
%"class.std::__1::__bucket_list_deallocator.1098" = type { %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"struct.std::__1::__hash_node_base.1096" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.1117" = type { %"struct.std::__1::__atomic_base.1118" }
%"struct.std::__1::__atomic_base.1118" = type { %"struct.std::__1::__cxx_atomic_impl.1119" }
%"struct.std::__1::__cxx_atomic_impl.1119" = type { %"struct.std::__1::__cxx_atomic_base_impl.1120" }
%"struct.std::__1::__cxx_atomic_base_impl.1120" = type { %"class.std::__1::vector.1121"* }
%"class.std::__1::vector.1121" = type { %"class.std::__1::__vector_base.1122" }
%"class.std::__1::__vector_base.1122" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1123" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::MapUpdater" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1128", %"class.v8::internal::Handle.1129", %"class.v8::internal::Handle.1128", %"class.v8::internal::Handle.1128", %"class.v8::internal::Handle.1128", i32, i8, i32, %"class.v8::internal::Handle.1130", %"class.v8::internal::Handle.1128", i32, i8, i8, %"class.v8::internal::InternalIndex", i32, i32, i32, i32, %"class.v8::internal::Representation", %"class.v8::internal::Handle.1131", %"class.v8::internal::Handle.1132" }
%"class.v8::internal::Handle.1129" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1130" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1128" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::InternalIndex" = type { i64 }
%"class.v8::internal::Representation" = type { i8 }
%"class.v8::internal::Handle.1131" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1132" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef" = type { %"class.v8::internal::FieldType" }
%"class.v8::internal::FieldType" = type { %"class.v8::internal::Object" }
%"class.v8::internal::Handle<v8::internal::Map>::ObjectRef" = type { %"class.v8::internal::Map" }
%"class.v8::internal::DependentCode" = type { %"class.v8::internal::WeakFixedArray" }
%"class.v8::internal::WeakFixedArray" = type { %"class.v8::internal::TorqueGeneratedWeakFixedArray" }
%"class.v8::internal::TorqueGeneratedWeakFixedArray" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::TransitionsAccessor" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1128", %"class.v8::internal::Map", %"class.v8::internal::MaybeObject", i32, i8, [3 x i8] }>
%"class.v8::internal::MaybeObject" = type { %"class.v8::internal::TaggedImpl.1134" }
%"class.v8::internal::TaggedImpl.1134" = type { i64 }
%"class.v8::internal::MaybeObjectHandle" = type { i32, %"class.v8::internal::MaybeHandle.1133" }
%"class.v8::internal::MaybeHandle.1133" = type { i64* }
%"class.v8::internal::OFStream" = type { %"class.std::__1::basic_ostream.base", %"class.v8::internal::OFStreamBase", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.v8::internal::OFStreamBase" = type { %"class.std::__1::basic_streambuf", %struct._IO_FILE* }
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.v8::internal::String" = type { %"class.v8::internal::TorqueGeneratedString" }
%"class.v8::internal::TorqueGeneratedString" = type { %"class.v8::internal::Name" }
%"struct.v8::internal::Brief" = type { i64 }
%"class.std::__1::basic_ios" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32, [4 x i8] }>
%"class.v8::internal::Symbol" = type { %"class.v8::internal::TorqueGeneratedSymbol" }
%"class.v8::internal::TorqueGeneratedSymbol" = type { %"class.v8::internal::Name" }
%"class.v8::internal::Descriptor" = type <{ %"class.v8::internal::Handle.1135", %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::PropertyDetails", [4 x i8] }>
%"class.v8::internal::Handle.1135" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::PropertyDetails" = type { i32 }
%"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef" = type { %"class.v8::internal::DescriptorArray" }
%"class.v8::internal::DescriptorArray" = type { %"class.v8::internal::TorqueGeneratedDescriptorArray" }
%"class.v8::internal::TorqueGeneratedDescriptorArray" = type { %"class.v8::internal::HeapObject" }
%"class.std::__1::queue.1139" = type { %"class.std::__1::deque.1140" }
%"class.std::__1::deque.1140" = type { %"class.std::__1::__deque_base.1141" }
%"class.std::__1::__deque_base.1141" = type { %"struct.std::__1::__split_buffer.1142", i64, %"class.std::__1::__compressed_pair.1148" }
%"struct.std::__1::__split_buffer.1142" = type { %"class.v8::internal::Map"**, %"class.v8::internal::Map"**, %"class.v8::internal::Map"**, %"class.std::__1::__compressed_pair.1143" }
%"class.std::__1::__compressed_pair.1143" = type { %"struct.std::__1::__compressed_pair_elem.1144" }
%"struct.std::__1::__compressed_pair_elem.1144" = type { %"class.v8::internal::Map"** }
%"class.std::__1::__compressed_pair.1148" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry" = type { i8, %"class.std::__1::basic_ostream"* }
%"class.std::__1::locale::facet" = type { %"class.std::__1::__shared_count" }
%"class.std::__1::ctype" = type <{ %"class.std::__1::locale::facet", i16*, i8, [7 x i8] }>
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZNK2v88internal10MapUpdater21GetOrComputeFieldTypeENS0_13InternalIndexENS0_16PropertyLocationENS0_14RepresentationE = comdat any

$_ZN2v88internal8OFStreamD1Ev = comdat any

$_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m = comdat any

$_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_ = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD1Ev = comdat any

$_ZN2v88internal8OFStreamD0Ev = comdat any

$_ZTv0_n24_N2v88internal8OFStreamD0Ev = comdat any

$_ZN2v88internal15DescriptorArray3SetENS0_13InternalIndexENS0_4NameENS0_11MaybeObjectENS0_15PropertyDetailsE = comdat any

$_ZNSt3__15dequeIN2v88internal3MapENS_9allocatorIS3_EEE19__add_back_capacityEv = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal3MapENS_9allocatorIS4_EEE9push_backEOS4_ = comdat any

$_ZNSt3__114__split_bufferIPN2v88internal3MapENS_9allocatorIS4_EEE10push_frontEOS4_ = comdat any

$_ZTVN2v88internal8OFStreamE = comdat any

$_ZTTN2v88internal8OFStreamE = comdat any

$_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = comdat any

@_ZN2v88internal25FLAG_trace_generalizationE = external local_unnamed_addr global i8, align 1
@stdout = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [20 x i8] c"uninitialized field\00", align 1
@.str.1 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.2 = private unnamed_addr constant [86 x i8] c"old_map_->NumberOfOwnDescriptors() == integrity_source_map_->NumberOfOwnDescriptors()\00", align 1
@.str.3 = private unnamed_addr constant [24 x i8] c"Normalize_NotEquivalent\00", align 1
@.str.4 = private unnamed_addr constant [40 x i8] c"Normalize_PrivateSymbolsOnNonExtensible\00", align 1
@.str.5 = private unnamed_addr constant [36 x i8] c"Normalize_InvalidElementsTransition\00", align 1
@.str.6 = private unnamed_addr constant [28 x i8] c"Normalize_RootModification1\00", align 1
@.str.7 = private unnamed_addr constant [28 x i8] c"Normalize_RootModification2\00", align 1
@.str.8 = private unnamed_addr constant [28 x i8] c"Normalize_RootModification4\00", align 1
@.str.9 = private unnamed_addr constant [23 x i8] c"Normalize_Incompatible\00", align 1
@.str.10 = private unnamed_addr constant [19 x i8] c"unimplemented code\00", align 1
@.str.11 = private unnamed_addr constant [113 x i8] c"is_transitionable_fast_elements_kind_ implies Map::IsMostGeneralFieldType(next_representation, *next_field_type)\00", align 1
@.str.12 = private unnamed_addr constant [32 x i8] c"has_integrity_level_transition_\00", align 1
@.str.13 = private unnamed_addr constant [34 x i8] c"Normalize_CantHaveMoreTransitions\00", align 1
@.str.14 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.15 = private unnamed_addr constant [25 x i8] c"CopyForPreventExtensions\00", align 1
@.str.16 = private unnamed_addr constant [37 x i8] c"Normalize_AttributesMismatchProtoMap\00", align 1
@.str.17 = private unnamed_addr constant [26 x i8] c"field type generalization\00", align 1
@.str.19 = private unnamed_addr constant [35 x i8] c"static_cast<unsigned>(value) < 256\00", align 1
@.str.20 = private unnamed_addr constant [15 x i8] c"[generalizing]\00", align 1
@.str.21 = private unnamed_addr constant [9 x i8] c"{symbol \00", align 1
@.str.22 = private unnamed_addr constant [2 x i8] c"}\00", align 1
@.str.23 = private unnamed_addr constant [2 x i8] c":\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c"c\00", align 1
@.str.25 = private unnamed_addr constant [2 x i8] c"{\00", align 1
@.str.26 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.27 = private unnamed_addr constant [3 x i8] c"->\00", align 1
@.str.28 = private unnamed_addr constant [4 x i8] c"} (\00", align 1
@.str.29 = private unnamed_addr constant [2 x i8] c"+\00", align 1
@.str.30 = private unnamed_addr constant [6 x i8] c" maps\00", align 1
@.str.31 = private unnamed_addr constant [4 x i8] c") [\00", align 1
@.str.32 = private unnamed_addr constant [3 x i8] c"]\0A\00", align 1
@_ZNSt3__15ctypeIcE2idE = external global %"class.std::__1::locale::id", align 8
@.str.34 = private unnamed_addr constant [2 x i8] c"v\00", align 1
@.str.35 = private unnamed_addr constant [2 x i8] c"t\00", align 1
@.str.36 = private unnamed_addr constant [2 x i8] c"s\00", align 1
@.str.37 = private unnamed_addr constant [2 x i8] c"d\00", align 1
@.str.38 = private unnamed_addr constant [2 x i8] c"h\00", align 1
@.str.39 = private unnamed_addr constant [2 x i8] c"w\00", align 1
@.str.40 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@.str.41 = private unnamed_addr constant [23 x i8] c"(location_) != nullptr\00", align 1
@_ZTVN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZN2v88internal8OFStreamD0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD1Ev to i8*), i8* bitcast (void (%"class.v8::internal::OFStream"*)* @_ZTv0_n24_N2v88internal8OFStreamD0Ev to i8*)] }, comdat, align 8
@_ZTTN2v88internal8OFStreamE = linkonce_odr hidden unnamed_addr constant [4 x i8*] [i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 0, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE, i32 0, inrange i32 1, i32 3) to i8*), i8* bitcast (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i32 0, inrange i32 1, i32 3) to i8*)], comdat, align 8
@_ZTCN2v88internal8OFStreamE0_NSt3__113basic_ostreamIcNS1_11char_traitsIcEEEE = linkonce_odr hidden unnamed_addr constant { [5 x i8*], [5 x i8*] } { [5 x i8*] [i8* inttoptr (i64 80 to i8*), i8* null, i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)], [5 x i8*] [i8* inttoptr (i64 -80 to i8*), i8* inttoptr (i64 -80 to i8*), i8* null, i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev to i8*), i8* bitcast (void (%"class.std::__1::basic_ostream"*)* @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev to i8*)] }, comdat, align 8
@_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E = external local_unnamed_addr global %"class.v8::internal::SoleReadOnlyHeap"*, align 8
@.str.42 = private unnamed_addr constant [16 x i8] c"[reconfiguring]\00", align 1
@.str.43 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.44 = private unnamed_addr constant [6 x i8] c"kData\00", align 1
@.str.45 = private unnamed_addr constant [10 x i8] c"ACCESSORS\00", align 1
@.str.46 = private unnamed_addr constant [10 x i8] c", attrs: \00", align 1
@.str.47 = private unnamed_addr constant [3 x i8] c" [\00", align 1
@switch.table._ZN2v88internal12_GLOBAL__N_119PrintGeneralizationEPNS0_7IsolateENS0_6HandleINS0_3MapEEEP8_IO_FILEPKcNS0_13InternalIndexEiibNS0_14RepresentationESC_NS0_17PropertyConstnessESD_NS0_11MaybeHandleINS0_9FieldTypeEEENSE_INS0_6ObjectEEESG_SI_.48 = private unnamed_addr constant [6 x i8*] [i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.34, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.36, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.37, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.38, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.35, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.39, i64 0, i64 0)], align 8

@_ZN2v88internal10MapUpdaterC1EPNS0_7IsolateENS0_6HandleINS0_3MapEEE = hidden unnamed_addr alias void (%"class.v8::internal::MapUpdater"*, %"class.v8::internal::Isolate"*, i64*), void (%"class.v8::internal::MapUpdater"*, %"class.v8::internal::Isolate"*, i64*)* @_ZN2v88internal10MapUpdaterC2EPNS0_7IsolateENS0_6HandleINS0_3MapEEE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10MapUpdaterC2EPNS0_7IsolateENS0_6HandleINS0_3MapEEE(%"class.v8::internal::MapUpdater"*, %"class.v8::internal::Isolate"*, i64*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 1
  %6 = bitcast %"class.v8::internal::Handle.1128"* %5 to i64*
  %7 = ptrtoint i64* %2 to i64
  store i64 %7, i64* %6, align 8
  %8 = load i64, i64* %2, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %10 = load i64, i64* %9, align 8
  %11 = add i64 %8, 23
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %10, 4294967295
  %15 = icmp eq i64 %14, 0
  tail call void @llvm.assume(i1 %15) #5
  %16 = zext i32 %13 to i64
  %17 = or i64 %10, %16
  %18 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 2, i32 0, i32 0
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 4
  %20 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %19, align 8
  %21 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %20, null
  br i1 %21, label %24, label %22

22:                                               ; preds = %3
  %23 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %20, i64 %17) #5
  br label %37

24:                                               ; preds = %3
  %25 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 0
  %26 = load i64*, i64** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 31, i32 1
  %28 = load i64*, i64** %27, align 8
  %29 = icmp eq i64* %26, %28
  br i1 %29, label %30, label %32

30:                                               ; preds = %24
  %31 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %1) #5
  br label %32

32:                                               ; preds = %30, %24
  %33 = phi i64* [ %31, %30 ], [ %26, %24 ]
  %34 = ptrtoint i64* %33 to i64
  %35 = add i64 %34, 8
  %36 = inttoptr i64 %35 to i64*
  store i64* %36, i64** %25, align 8
  store i64 %17, i64* %33, align 8
  br label %37

37:                                               ; preds = %22, %32
  %38 = phi i64* [ %23, %22 ], [ %33, %32 ]
  store i64* %38, i64** %18, align 8
  %39 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 3, i32 0, i32 0
  %40 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 6
  %41 = getelementptr inbounds %"class.v8::internal::Handle.1128", %"class.v8::internal::Handle.1128"* %5, i64 0, i32 0, i32 0
  %42 = bitcast i64** %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 24, i1 false)
  %43 = load i64*, i64** %41, align 8
  %44 = load i64, i64* %43, align 8
  %45 = add i64 %44, 11
  %46 = inttoptr i64 %45 to i32*
  %47 = load atomic i32, i32* %46 acquire, align 4
  %48 = lshr i32 %47, 10
  %49 = and i32 %48, 1023
  store i32 %49, i32* %40, align 8
  %50 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 7
  store i8 0, i8* %50, align 4
  %51 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 8
  store i32 0, i32* %51, align 8
  %52 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 9, i32 0, i32 0
  %53 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 12
  %54 = bitcast i64** %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %54, i8 0, i64 20, i1 false)
  %55 = load i64*, i64** %41, align 8
  %56 = load i64, i64* %55, align 8
  %57 = add i64 %56, 10
  %58 = inttoptr i64 %57 to i8*
  %59 = load i8, i8* %58, align 1
  %60 = lshr i8 %59, 2
  store i8 %60, i8* %53, align 4
  %61 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 13
  %62 = icmp ult i8 %59, 24
  %63 = icmp ne i8 %60, 3
  %64 = and i1 %62, %63
  %65 = zext i1 %64 to i8
  store i8 %65, i8* %61, align 1
  %66 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 14, i32 0
  store i64 -1, i64* %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 15
  %68 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 20, i32 0, i32 0
  %69 = bitcast i32* %67 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 17, i1 false)
  %70 = bitcast i64** %68 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10MapUpdater22ReconfigureToDataFieldENS0_13InternalIndexENS0_18PropertyAttributesENS0_17PropertyConstnessENS0_14RepresentationENS0_6HandleINS0_9FieldTypeEEE(%"class.v8::internal::MapUpdater"*, i64, i32, i32, i8, i64*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::Object", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", align 8
  %10 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %11, i64 0, i32 20
  tail call void @_ZN2v84base11SharedMutex13LockExclusiveEv(%"class.v8::base::SharedMutex"* %12) #5
  %13 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 14, i32 0
  store i64 %1, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 15
  store i32 0, i32* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 16
  store i32 %2, i32* %15, align 4
  %16 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 18
  store i32 0, i32* %16, align 4
  %17 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 2, i32 0, i32 0
  %18 = load i64*, i64** %17, align 8
  %19 = load i64, i64* %18, align 8
  %20 = mul i64 %1, 51539607552
  %21 = add i64 %20, 68719476736
  %22 = ashr exact i64 %21, 32
  %23 = or i64 %22, 3
  %24 = add i64 %19, %23
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = ashr i32 %26, 1
  %28 = and i32 %26, 2
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %133

30:                                               ; preds = %6
  %31 = lshr i32 %27, 2
  %32 = and i32 %31, 1
  %33 = icmp eq i32 %3, 0
  %34 = select i1 %33, i32 0, i32 %32
  %35 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 17
  store i32 %34, i32* %35, align 8
  %36 = lshr i32 %27, 6
  %37 = trunc i32 %36 to i8
  %38 = and i8 %37, 7
  switch i8 %4, label %41 [
    i8 5, label %43
    i8 3, label %39
  ]

39:                                               ; preds = %30
  %40 = icmp eq i8 %38, 0
  br i1 %40, label %51, label %43

41:                                               ; preds = %30
  %42 = icmp sgt i8 %38, %4
  br i1 %42, label %45, label %51

43:                                               ; preds = %39, %30
  %44 = icmp eq i8 %38, %4
  br i1 %44, label %51, label %45

45:                                               ; preds = %43, %41
  switch i8 %38, label %48 [
    i8 5, label %50
    i8 3, label %46
  ]

46:                                               ; preds = %45
  %47 = icmp eq i8 %4, 0
  br i1 %47, label %51, label %50

48:                                               ; preds = %45
  %49 = icmp sgt i8 %38, %4
  br i1 %49, label %51, label %50

50:                                               ; preds = %48, %46, %45
  br label %51

51:                                               ; preds = %39, %41, %43, %46, %48, %50
  %52 = phi i8 [ 4, %50 ], [ %4, %43 ], [ 3, %46 ], [ %38, %48 ], [ %4, %41 ], [ 3, %39 ]
  %53 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 19, i32 0
  store i8 %52, i8* %53, align 8
  %54 = and i32 %26, 4
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %85

56:                                               ; preds = %51
  %57 = load i64, i64* %18, align 8
  %58 = and i64 %57, -4294967296
  %59 = add nsw i64 %22, 7
  %60 = add i64 %59, %57
  %61 = inttoptr i64 %60 to i32*
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = zext i32 %62 to i64
  %64 = or i64 %58, %63
  %65 = tail call i64 @_ZN2v88internal3Map15UnwrapFieldTypeENS0_11MaybeObjectE(i64 %64) #5
  %66 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %66, i64 0, i32 31, i32 4
  %68 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %67, align 8
  %69 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %56
  %71 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %68, i64 %65) #5
  br label %98

72:                                               ; preds = %56
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %66, i64 0, i32 31, i32 0
  %74 = load i64*, i64** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %66, i64 0, i32 31, i32 1
  %76 = load i64*, i64** %75, align 8
  %77 = icmp eq i64* %74, %76
  br i1 %77, label %78, label %80

78:                                               ; preds = %72
  %79 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %66) #5
  br label %80

80:                                               ; preds = %78, %72
  %81 = phi i64* [ %79, %78 ], [ %74, %72 ]
  %82 = ptrtoint i64* %81 to i64
  %83 = add i64 %82, 8
  %84 = inttoptr i64 %83 to i64*
  store i64* %84, i64** %73, align 8
  store i64 %65, i64* %81, align 8
  br label %98

85:                                               ; preds = %51
  %86 = bitcast %"class.v8::internal::Object"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #5
  %87 = load i64, i64* %18, align 8
  %88 = and i64 %87, -4294967296
  %89 = add nsw i64 %22, 7
  %90 = add i64 %89, %87
  %91 = inttoptr i64 %90 to i32*
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = zext i32 %92 to i64
  %94 = or i64 %88, %93
  %95 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %7, i64 0, i32 0, i32 0
  store i64 %94, i64* %95, align 8
  %96 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %97 = call i64* @_ZN2v88internal6Object11OptimalTypeEPNS0_7IsolateENS0_14RepresentationE(%"class.v8::internal::Object"* nonnull %7, %"class.v8::internal::Isolate"* %96, i8 %52) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #5
  br label %98

98:                                               ; preds = %70, %80, %85
  %99 = phi i64* [ %97, %85 ], [ %71, %70 ], [ %81, %80 ]
  %100 = load i8, i8* %53, align 8
  %101 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %102 = load i64, i64* %99, align 8
  %103 = call i64 @_ZN2v88internal9FieldType4NoneEv() #5
  %104 = trunc i64 %102 to i32
  %105 = trunc i64 %103 to i32
  %106 = icmp eq i32 %104, %105
  %107 = icmp eq i8 %38, 3
  %108 = and i1 %107, %106
  br i1 %108, label %117, label %109

109:                                              ; preds = %98
  %110 = load i64, i64* %5, align 8
  %111 = call i64 @_ZN2v88internal9FieldType4NoneEv() #5
  %112 = trunc i64 %110 to i32
  %113 = trunc i64 %111 to i32
  %114 = icmp eq i32 %112, %113
  %115 = icmp eq i8 %100, 3
  %116 = and i1 %115, %114
  br i1 %116, label %117, label %119

117:                                              ; preds = %109, %98
  %118 = call i64* @_ZN2v88internal9FieldType3AnyEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %101) #5
  br label %136

119:                                              ; preds = %109
  %120 = bitcast %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %120) #5
  %121 = load i64, i64* %99, align 8
  %122 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %121, i64* %122, align 8
  %123 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %8, i64 0, i32 0
  %124 = call zeroext i1 @_ZNK2v88internal9FieldType5NowIsENS0_6HandleIS1_EE(%"class.v8::internal::FieldType"* nonnull %123, i64* %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %120) #5
  br i1 %124, label %136, label %125

125:                                              ; preds = %119
  %126 = bitcast %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #5
  %127 = load i64, i64* %5, align 8
  %128 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %9, i64 0, i32 0
  %130 = call zeroext i1 @_ZNK2v88internal9FieldType5NowIsENS0_6HandleIS1_EE(%"class.v8::internal::FieldType"* nonnull %129, i64* %99) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #5
  br i1 %130, label %136, label %131

131:                                              ; preds = %125
  %132 = call i64* @_ZN2v88internal9FieldType3AnyEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %101) #5
  br label %136

133:                                              ; preds = %6
  %134 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 17
  store i32 0, i32* %134, align 8
  %135 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 19, i32 0
  store i8 %4, i8* %135, align 8
  br label %136

136:                                              ; preds = %131, %125, %119, %117, %133
  %137 = phi i64* [ %5, %133 ], [ %118, %117 ], [ %132, %131 ], [ %5, %119 ], [ %99, %125 ]
  %138 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 20, i32 0, i32 0
  store i64* %137, i64** %138, align 8
  %139 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %140 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 1, i32 0, i32 0
  %141 = load i64*, i64** %140, align 8
  %142 = load i64, i64* %141, align 8
  %143 = add i64 %142, 7
  %144 = inttoptr i64 %143 to i16*
  %145 = load atomic i16, i16* %144 monotonic, align 2
  switch i16 %145, label %150 [
    i16 1085, label %146
    i16 1041, label %146
    i16 1055, label %146
  ]

146:                                              ; preds = %136, %136, %136
  %147 = call i64* @_ZN2v88internal9FieldType3AnyEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %139) #5
  %148 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 20, i32 0, i32 0
  store i64* %147, i64** %148, align 8
  %149 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 19, i32 0
  store i8 4, i8* %149, align 1
  br label %150

150:                                              ; preds = %136, %146
  %151 = call i32 @_ZN2v88internal10MapUpdater32TryReconfigureToDataFieldInplaceEv(%"class.v8::internal::MapUpdater"* %0)
  %152 = icmp eq i32 %151, 4
  br i1 %152, label %164, label %153

153:                                              ; preds = %150
  %154 = call i32 @_ZN2v88internal10MapUpdater11FindRootMapEv(%"class.v8::internal::MapUpdater"* %0)
  %155 = icmp eq i32 %154, 4
  br i1 %155, label %164, label %156

156:                                              ; preds = %153
  %157 = call i32 @_ZN2v88internal10MapUpdater13FindTargetMapEv(%"class.v8::internal::MapUpdater"* %0)
  %158 = icmp eq i32 %157, 4
  br i1 %158, label %164, label %159

159:                                              ; preds = %156
  %160 = call i32 @_ZN2v88internal10MapUpdater15ConstructNewMapEv(%"class.v8::internal::MapUpdater"* %0)
  %161 = icmp eq i32 %160, 3
  br i1 %161, label %162, label %164

162:                                              ; preds = %159
  %163 = call i32 @_ZN2v88internal10MapUpdater43ConstructNewMapWithIntegrityLevelTransitionEv(%"class.v8::internal::MapUpdater"* %0)
  br label %164

164:                                              ; preds = %159, %162, %156, %153, %150
  %165 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 5, i32 0, i32 0
  %166 = load i64*, i64** %165, align 8
  call void @_ZN2v84base11SharedMutex15UnlockExclusiveEv(%"class.v8::base::SharedMutex"* %12) #5
  ret i64* %166
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal10MapUpdater32TryReconfigureToDataFieldInplaceEv(%"class.v8::internal::MapUpdater"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 1
  %3 = getelementptr inbounds %"class.v8::internal::Handle.1128", %"class.v8::internal::Handle.1128"* %2, i64 0, i32 0, i32 0
  %4 = load i64*, i64** %3, align 8
  %5 = load i64, i64* %4, align 8
  %6 = add i64 %5, 11
  %7 = inttoptr i64 %6 to i32*
  %8 = load atomic i32, i32* %7 acquire, align 4
  %9 = and i32 %8, 16777216
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 11
  %13 = load i32, i32* %12, align 8
  br label %138

14:                                               ; preds = %1
  %15 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 19, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %21

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 11
  %20 = load i32, i32* %19, align 8
  br label %138

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64*, i64** %22, align 8
  %24 = load i64, i64* %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 14, i32 0
  %26 = load i64, i64* %25, align 8
  %27 = mul i64 %26, 51539607552
  %28 = add i64 %27, 68719476736
  %29 = ashr exact i64 %28, 32
  %30 = or i64 %29, 3
  %31 = add i64 %30, %24
  %32 = inttoptr i64 %31 to i32*
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = ashr i32 %33, 1
  %35 = lshr i32 %34, 3
  %36 = and i32 %35, 7
  %37 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 16
  %38 = load i32, i32* %37, align 4
  %39 = icmp eq i32 %36, %38
  br i1 %39, label %40, label %51

40:                                               ; preds = %21
  %41 = and i32 %34, 1
  %42 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 15
  %43 = load i32, i32* %42, align 8
  %44 = icmp eq i32 %41, %43
  br i1 %44, label %45, label %51

45:                                               ; preds = %40
  %46 = lshr i32 %34, 1
  %47 = and i32 %46, 1
  %48 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 18
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %47, %49
  br i1 %50, label %54, label %51

51:                                               ; preds = %45, %40, %21
  %52 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 11
  %53 = load i32, i32* %52, align 8
  br label %138

54:                                               ; preds = %45
  %55 = lshr i32 %34, 6
  %56 = trunc i32 %55 to i8
  %57 = and i8 %56, 7
  %58 = icmp eq i8 %57, %16
  br i1 %58, label %72, label %59

59:                                               ; preds = %54
  %60 = icmp eq i8 %57, 5
  %61 = icmp eq i8 %16, 5
  %62 = or i1 %61, %60
  br i1 %62, label %69, label %63

63:                                               ; preds = %59
  %64 = icmp eq i8 %57, 0
  br i1 %64, label %65, label %67

65:                                               ; preds = %63
  %66 = icmp eq i8 %16, 2
  br i1 %66, label %69, label %72

67:                                               ; preds = %63
  %68 = icmp eq i8 %16, 4
  br i1 %68, label %72, label %69

69:                                               ; preds = %65, %59, %67
  %70 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 11
  %71 = load i32, i32* %70, align 8
  br label %138

72:                                               ; preds = %65, %54, %67
  %73 = load i8, i8* @_ZN2v88internal25FLAG_trace_generalizationE, align 1, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %122, label %75

75:                                               ; preds = %72
  %76 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 0
  %77 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 1, i32 0, i32 0
  %79 = load i64*, i64** %78, align 8
  %80 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %81 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 6
  %82 = load i32, i32* %81, align 8
  %83 = lshr i32 %34, 2
  %84 = and i32 %83, 1
  %85 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 17
  %86 = load i32, i32* %85, align 8
  %87 = and i64 %24, -4294967296
  %88 = add i64 %24, 7
  %89 = add i64 %88, %29
  %90 = inttoptr i64 %89 to i32*
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = zext i32 %91 to i64
  %93 = or i64 %87, %92
  %94 = tail call i64 @_ZN2v88internal3Map15UnwrapFieldTypeENS0_11MaybeObjectE(i64 %93) #5
  %95 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %76, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 31, i32 4
  %97 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %96, align 8
  %98 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %97, null
  br i1 %98, label %102, label %99

99:                                               ; preds = %75
  %100 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %97, i64 %94) #5
  %101 = ptrtoint i64* %100 to i64
  br label %115

102:                                              ; preds = %75
  %103 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 31, i32 0
  %104 = load i64*, i64** %103, align 8
  %105 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 31, i32 1
  %106 = load i64*, i64** %105, align 8
  %107 = icmp eq i64* %104, %106
  br i1 %107, label %108, label %110

108:                                              ; preds = %102
  %109 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %95) #5
  br label %110

110:                                              ; preds = %108, %102
  %111 = phi i64* [ %109, %108 ], [ %104, %102 ]
  %112 = ptrtoint i64* %111 to i64
  %113 = add i64 %112, 8
  %114 = inttoptr i64 %113 to i64*
  store i64* %114, i64** %103, align 8
  store i64 %94, i64* %111, align 8
  br label %115

115:                                              ; preds = %99, %110
  %116 = phi i64 [ %101, %99 ], [ %112, %110 ]
  %117 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 20, i32 0, i32 0
  %118 = bitcast i64** %117 to i64*
  %119 = load i64, i64* %118, align 8
  tail call fastcc void @_ZN2v88internal12_GLOBAL__N_119PrintGeneralizationEPNS0_7IsolateENS0_6HandleINS0_3MapEEEP8_IO_FILEPKcNS0_13InternalIndexEiibNS0_14RepresentationESC_NS0_17PropertyConstnessESD_NS0_11MaybeHandleINS0_9FieldTypeEEENSE_INS0_6ObjectEEESG_SI_(%"class.v8::internal::Isolate"* %77, i64* %79, %struct._IO_FILE* %80, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str, i64 0, i64 0), i64 %26, i32 %82, i32 %82, i1 zeroext false, i8 %57, i8 %16, i32 %84, i32 %86, i64 %116, i64 0, i64 %119, i64 0)
  %120 = load i64, i64* %25, align 8
  %121 = load i8, i8* %15, align 8
  br label %122

122:                                              ; preds = %72, %115
  %123 = phi i8 [ %16, %72 ], [ %121, %115 ]
  %124 = phi i64 [ %26, %72 ], [ %120, %115 ]
  %125 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 1, i32 0, i32 0
  %126 = load i64*, i64** %125, align 8
  %127 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 17
  %128 = load i32, i32* %127, align 8
  %129 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 20, i32 0, i32 0
  %130 = load i64*, i64** %129, align 8
  %131 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 0
  %132 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %131, align 8
  tail call void @_ZN2v88internal10MapUpdater15GeneralizeFieldEPNS0_7IsolateENS0_6HandleINS0_3MapEEENS0_13InternalIndexENS0_17PropertyConstnessENS0_14RepresentationENS4_INS0_9FieldTypeEEE(%"class.v8::internal::Isolate"* %132, i64* %126, i64 %124, i32 %128, i8 %123, i64* %130) #5
  %133 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 5
  %134 = bitcast %"class.v8::internal::Handle.1128"* %2 to i64*
  %135 = bitcast %"class.v8::internal::Handle.1128"* %133 to i64*
  %136 = load i64, i64* %134, align 8
  store i64 %136, i64* %135, align 8
  %137 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 11
  store i32 4, i32* %137, align 8
  br label %138

138:                                              ; preds = %51, %122, %69, %18, %11
  %139 = phi i32 [ %13, %11 ], [ %20, %18 ], [ %53, %51 ], [ 4, %122 ], [ %71, %69 ]
  ret i32 %139
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal10MapUpdater11FindRootMapEv(%"class.v8::internal::MapUpdater"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", align 8
  %3 = alloca %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", align 8
  %4 = bitcast %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #5
  %5 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %7, i64* %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %2, i64 0, i32 0
  %10 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 0
  %11 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %12 = call i64 @_ZNK2v88internal3Map11FindRootMapEPNS0_7IsolateE(%"class.v8::internal::Map"* nonnull %9, %"class.v8::internal::Isolate"* %11) #5
  %13 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 4
  %15 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %14, align 8
  %16 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %1
  %18 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %15, i64 %12) #5
  br label %32

19:                                               ; preds = %1
  %20 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 0
  %21 = load i64*, i64** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 31, i32 1
  %23 = load i64*, i64** %22, align 8
  %24 = icmp eq i64* %21, %23
  br i1 %24, label %25, label %27

25:                                               ; preds = %19
  %26 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %13) #5
  br label %27

27:                                               ; preds = %25, %19
  %28 = phi i64* [ %26, %25 ], [ %21, %19 ]
  %29 = ptrtoint i64* %28 to i64
  %30 = add i64 %29, 8
  %31 = inttoptr i64 %30 to i64*
  store i64* %31, i64** %20, align 8
  store i64 %12, i64* %28, align 8
  br label %32

32:                                               ; preds = %17, %27
  %33 = phi i64* [ %18, %17 ], [ %28, %27 ]
  %34 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 3, i32 0, i32 0
  store i64* %33, i64** %34, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #5
  %35 = load i64, i64* %33, align 8
  %36 = add i64 %35, 10
  %37 = inttoptr i64 %36 to i8*
  %38 = load i8, i8* %37, align 1
  %39 = lshr i8 %38, 2
  %40 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 12
  %41 = load i8, i8* %40, align 4
  %42 = add i64 %35, 11
  %43 = inttoptr i64 %42 to i32*
  %44 = load atomic i32, i32* %43 acquire, align 4
  %45 = and i32 %44, 16777216
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %162, label %47

47:                                               ; preds = %32
  %48 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 11
  store i32 4, i32* %48, align 8
  %49 = load i64*, i64** %34, align 8
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, -4294967296
  %52 = add i64 %50, 19
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i64
  %56 = or i64 %51, %55
  %57 = and i64 %55, 1
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %129, label %59

59:                                               ; preds = %47
  %60 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %61 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %60, null
  %62 = and i64 %50, -262144
  %63 = or i64 %62, 16
  %64 = inttoptr i64 %63 to i64*
  br i1 %61, label %94, label %65

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %60, i64 0, i32 0, i32 1
  %67 = load i8, i8* %66, align 8, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %73, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %60, i64 0, i32 1, i64 10
  %71 = load i64, i64* %70, align 8
  %72 = trunc i64 %71 to i32
  br label %115

73:                                               ; preds = %65
  %74 = load i64, i64* %64, align 16
  %75 = add i64 %74, -41416
  %76 = inttoptr i64 %75 to %"class.v8::internal::Isolate"*
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %76, i64 0, i32 0, i32 7, i32 0, i64 10
  %78 = load i64, i64* %77, align 8
  %79 = trunc i64 %78 to i32
  br label %80

80:                                               ; preds = %86, %73
  %81 = phi i64 [ %91, %86 ], [ %56, %73 ]
  %82 = add i64 %81, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = icmp eq i32 %84, %79
  br i1 %85, label %86, label %129

86:                                               ; preds = %80
  %87 = add i64 %81, 19
  %88 = inttoptr i64 %87 to i32*
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i64
  %91 = or i64 %51, %90
  %92 = and i64 %90, 1
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %129, label %80

94:                                               ; preds = %59
  %95 = load i64, i64* %64, align 16
  %96 = add i64 %95, -41416
  %97 = inttoptr i64 %96 to %"class.v8::internal::Isolate"*
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %97, i64 0, i32 0, i32 7, i32 0, i64 10
  %99 = load i64, i64* %98, align 8
  %100 = trunc i64 %99 to i32
  br label %101

101:                                              ; preds = %107, %94
  %102 = phi i64 [ %112, %107 ], [ %56, %94 ]
  %103 = add i64 %102, -1
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = icmp eq i32 %105, %100
  br i1 %106, label %107, label %129

107:                                              ; preds = %101
  %108 = add i64 %102, 19
  %109 = inttoptr i64 %108 to i32*
  %110 = load i32, i32* %109, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %51, %111
  %113 = and i64 %111, 1
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %129, label %101

115:                                              ; preds = %121, %69
  %116 = phi i64 [ %126, %121 ], [ %56, %69 ]
  %117 = add i64 %116, -1
  %118 = inttoptr i64 %117 to i32*
  %119 = load atomic i32, i32* %118 monotonic, align 4
  %120 = icmp eq i32 %119, %72
  br i1 %120, label %121, label %129

121:                                              ; preds = %115
  %122 = add i64 %116, 19
  %123 = inttoptr i64 %122 to i32*
  %124 = load i32, i32* %123, align 4
  %125 = zext i32 %124 to i64
  %126 = or i64 %51, %125
  %127 = and i64 %125, 1
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %115

129:                                              ; preds = %115, %121, %80, %86, %101, %107, %47
  %130 = phi i64 [ %56, %47 ], [ %112, %107 ], [ %102, %101 ], [ %81, %80 ], [ %91, %86 ], [ %116, %115 ], [ %126, %121 ]
  %131 = and i64 %130, -4294967296
  %132 = add i64 %130, 27
  %133 = inttoptr i64 %132 to i32*
  %134 = load atomic i32, i32* %133 acquire, align 4
  %135 = zext i32 %134 to i64
  %136 = or i64 %131, %135
  %137 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %138 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %137, i64 0, i32 31, i32 4
  %139 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %138, align 8
  %140 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %139, null
  br i1 %140, label %143, label %141

141:                                              ; preds = %129
  %142 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %139, i64 %136) #5
  br label %156

143:                                              ; preds = %129
  %144 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %137, i64 0, i32 31, i32 0
  %145 = load i64*, i64** %144, align 8
  %146 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %137, i64 0, i32 31, i32 1
  %147 = load i64*, i64** %146, align 8
  %148 = icmp eq i64* %145, %147
  br i1 %148, label %149, label %151

149:                                              ; preds = %143
  %150 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %137) #5
  br label %151

151:                                              ; preds = %149, %143
  %152 = phi i64* [ %150, %149 ], [ %145, %143 ]
  %153 = ptrtoint i64* %152 to i64
  %154 = add i64 %153, 8
  %155 = inttoptr i64 %154 to i64*
  store i64* %155, i64** %144, align 8
  store i64 %136, i64* %152, align 8
  br label %156

156:                                              ; preds = %141, %151
  %157 = phi i64* [ %142, %141 ], [ %152, %151 ]
  %158 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 5, i32 0, i32 0
  store i64* %157, i64** %158, align 8
  %159 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %160 = call i64* @_ZN2v88internal3Map14AsElementsKindEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindE(%"class.v8::internal::Isolate"* %159, i64* %157, i8 zeroext %41) #5
  store i64* %160, i64** %158, align 8
  %161 = load i32, i32* %48, align 8
  br label %319

162:                                              ; preds = %32
  %163 = bitcast %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %163) #5
  %164 = load i64*, i64** %5, align 8
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %165, i64* %166, align 8
  %167 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %3, i64 0, i32 0
  %168 = load i64*, i64** %34, align 8
  %169 = load i64, i64* %168, align 8
  %170 = call zeroext i1 @_ZNK2v88internal3Map25EquivalentToForTransitionES1_(%"class.v8::internal::Map"* nonnull %167, i64 %169) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %163) #5
  br i1 %170, label %178, label %171

171:                                              ; preds = %162
  %172 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %173 = load i64*, i64** %5, align 8
  %174 = load i8, i8* %40, align 4
  %175 = call i64* @_ZN2v88internal3Map9NormalizeEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindENS0_25PropertyNormalizationModeEPKc(%"class.v8::internal::Isolate"* %172, i64* %173, i8 zeroext %174, i32 0, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.3, i64 0, i64 0)) #5
  %176 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 5, i32 0, i32 0
  store i64* %175, i64** %176, align 8
  %177 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 11
  store i32 4, i32* %177, align 8
  br label %319

178:                                              ; preds = %162
  %179 = load i64*, i64** %5, align 8
  %180 = load i64, i64* %179, align 8
  %181 = add i64 %180, 11
  %182 = inttoptr i64 %181 to i32*
  %183 = load atomic i32, i32* %182 monotonic, align 4
  %184 = and i32 %183, 134217728
  %185 = icmp ne i32 %184, 0
  %186 = load i64*, i64** %34, align 8
  %187 = load i64, i64* %186, align 8
  %188 = add i64 %187, 11
  %189 = inttoptr i64 %188 to i32*
  %190 = load atomic i32, i32* %189 monotonic, align 4
  %191 = and i32 %190, 134217728
  %192 = icmp ne i32 %191, 0
  %193 = xor i1 %185, %192
  br i1 %193, label %194, label %211

194:                                              ; preds = %178
  %195 = call zeroext i1 @_ZN2v88internal10MapUpdater32TrySaveIntegrityLevelTransitionsEv(%"class.v8::internal::MapUpdater"* %0)
  br i1 %195, label %203, label %196

196:                                              ; preds = %194
  %197 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %198 = load i64*, i64** %5, align 8
  %199 = load i8, i8* %40, align 4
  %200 = call i64* @_ZN2v88internal3Map9NormalizeEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindENS0_25PropertyNormalizationModeEPKc(%"class.v8::internal::Isolate"* %197, i64* %198, i8 zeroext %199, i32 0, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.4, i64 0, i64 0)) #5
  %201 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 5, i32 0, i32 0
  store i64* %200, i64** %201, align 8
  %202 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 11
  store i32 4, i32* %202, align 8
  br label %319

203:                                              ; preds = %194
  %204 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 10, i32 0, i32 0
  %205 = load i64*, i64** %204, align 8
  %206 = load i64, i64* %205, align 8
  %207 = add i64 %206, 10
  %208 = inttoptr i64 %207 to i8*
  %209 = load i8, i8* %208, align 1
  %210 = lshr i8 %209, 2
  br label %211

211:                                              ; preds = %178, %203
  %212 = phi i8 [ %210, %203 ], [ %41, %178 ]
  %213 = icmp eq i8 %39, %212
  br i1 %213, label %228, label %214

214:                                              ; preds = %211
  switch i8 %212, label %215 [
    i8 16, label %228
    i8 14, label %228
    i8 12, label %228
  ]

215:                                              ; preds = %214
  %216 = icmp ult i8 %38, 24
  %217 = icmp ne i8 %39, 3
  %218 = and i1 %216, %217
  br i1 %218, label %219, label %221

219:                                              ; preds = %215
  %220 = call zeroext i1 @_ZN2v88internal35IsMoreGeneralElementsKindTransitionENS0_12ElementsKindES1_(i8 zeroext %39, i8 zeroext %212) #5
  br i1 %220, label %228, label %221

221:                                              ; preds = %219, %215
  %222 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %223 = load i64*, i64** %5, align 8
  %224 = load i8, i8* %40, align 4
  %225 = call i64* @_ZN2v88internal3Map9NormalizeEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindENS0_25PropertyNormalizationModeEPKc(%"class.v8::internal::Isolate"* %222, i64* %223, i8 zeroext %224, i32 0, i8* getelementptr inbounds ([36 x i8], [36 x i8]* @.str.5, i64 0, i64 0)) #5
  %226 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 5, i32 0, i32 0
  store i64* %225, i64** %226, align 8
  %227 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 11
  store i32 4, i32* %227, align 8
  br label %319

228:                                              ; preds = %214, %214, %214, %211, %219
  %229 = load i64*, i64** %34, align 8
  %230 = load i64, i64* %229, align 8
  %231 = add i64 %230, 11
  %232 = inttoptr i64 %231 to i32*
  %233 = load atomic i32, i32* %232 acquire, align 4
  %234 = lshr i32 %233, 10
  %235 = and i32 %234, 1023
  %236 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 14, i32 0
  %237 = load i64, i64* %236, align 8
  %238 = icmp ne i64 %237, -1
  %239 = trunc i64 %237 to i32
  %240 = icmp sgt i32 %235, %239
  %241 = and i1 %238, %240
  br i1 %241, label %242, label %314

242:                                              ; preds = %228
  %243 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 2, i32 0, i32 0
  %244 = load i64*, i64** %243, align 8
  %245 = load i64, i64* %244, align 8
  %246 = mul i64 %237, 51539607552
  %247 = add i64 %246, 68719476736
  %248 = ashr exact i64 %247, 32
  %249 = or i64 %248, 3
  %250 = add i64 %249, %245
  %251 = inttoptr i64 %250 to i32*
  %252 = load atomic i32, i32* %251 monotonic, align 4
  %253 = ashr i32 %252, 1
  %254 = and i32 %253, 1
  %255 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 15
  %256 = load i32, i32* %255, align 8
  %257 = icmp eq i32 %254, %256
  br i1 %257, label %258, label %264

258:                                              ; preds = %242
  %259 = lshr i32 %253, 3
  %260 = and i32 %259, 7
  %261 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 16
  %262 = load i32, i32* %261, align 4
  %263 = icmp eq i32 %260, %262
  br i1 %263, label %271, label %264

264:                                              ; preds = %258, %242
  %265 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %266 = load i64*, i64** %5, align 8
  %267 = load i8, i8* %40, align 4
  %268 = call i64* @_ZN2v88internal3Map9NormalizeEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindENS0_25PropertyNormalizationModeEPKc(%"class.v8::internal::Isolate"* %265, i64* %266, i8 zeroext %267, i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.6, i64 0, i64 0)) #5
  %269 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 5, i32 0, i32 0
  store i64* %268, i64** %269, align 8
  %270 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 11
  store i32 4, i32* %270, align 8
  br label %319

271:                                              ; preds = %258
  %272 = and i32 %252, 4
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %281, label %274

274:                                              ; preds = %271
  %275 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %276 = load i64*, i64** %5, align 8
  %277 = load i8, i8* %40, align 4
  %278 = call i64* @_ZN2v88internal3Map9NormalizeEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindENS0_25PropertyNormalizationModeEPKc(%"class.v8::internal::Isolate"* %275, i64* %276, i8 zeroext %277, i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.7, i64 0, i64 0)) #5
  %279 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 5, i32 0, i32 0
  store i64* %278, i64** %279, align 8
  %280 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 11
  store i32 4, i32* %280, align 8
  br label %319

281:                                              ; preds = %271
  %282 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 19
  %283 = lshr i32 %253, 6
  %284 = trunc i32 %283 to i8
  %285 = and i8 %284, 7
  switch i8 %285, label %293 [
    i8 5, label %286
    i8 3, label %289
  ]

286:                                              ; preds = %281
  %287 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %282, i64 0, i32 0
  %288 = load i8, i8* %287, align 1
  br label %297

289:                                              ; preds = %281
  %290 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %282, i64 0, i32 0
  %291 = load i8, i8* %290, align 1
  %292 = icmp eq i8 %291, 0
  br i1 %292, label %307, label %297

293:                                              ; preds = %281
  %294 = getelementptr inbounds %"class.v8::internal::Representation", %"class.v8::internal::Representation"* %282, i64 0, i32 0
  %295 = load i8, i8* %294, align 1
  %296 = icmp sgt i8 %285, %295
  br i1 %296, label %307, label %297

297:                                              ; preds = %286, %289, %293
  %298 = phi i8 [ %288, %286 ], [ %291, %289 ], [ %295, %293 ]
  %299 = icmp eq i8 %285, %298
  br i1 %299, label %307, label %300

300:                                              ; preds = %297
  %301 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %302 = load i64*, i64** %5, align 8
  %303 = load i8, i8* %40, align 4
  %304 = call i64* @_ZN2v88internal3Map9NormalizeEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindENS0_25PropertyNormalizationModeEPKc(%"class.v8::internal::Isolate"* %301, i64* %302, i8 zeroext %303, i32 0, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0)) #5
  %305 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 5, i32 0, i32 0
  store i64* %304, i64** %305, align 8
  %306 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 11
  store i32 4, i32* %306, align 8
  br label %319

307:                                              ; preds = %289, %293, %297
  %308 = load i64*, i64** %5, align 8
  %309 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 17
  %310 = load i32, i32* %309, align 8
  %311 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 20, i32 0, i32 0
  %312 = load i64*, i64** %311, align 8
  %313 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  call void @_ZN2v88internal10MapUpdater15GeneralizeFieldEPNS0_7IsolateENS0_6HandleINS0_3MapEEENS0_13InternalIndexENS0_17PropertyConstnessENS0_14RepresentationENS4_INS0_9FieldTypeEEE(%"class.v8::internal::Isolate"* %313, i64* %308, i64 %237, i32 %310, i8 %285, i64* %312) #5
  br label %314

314:                                              ; preds = %307, %228
  %315 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %10, align 8
  %316 = load i64*, i64** %34, align 8
  %317 = call i64* @_ZN2v88internal3Map14AsElementsKindEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindE(%"class.v8::internal::Isolate"* %315, i64* %316, i8 zeroext %212) #5
  store i64* %317, i64** %34, align 8
  %318 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 11
  store i32 1, i32* %318, align 8
  br label %319

319:                                              ; preds = %314, %264, %274, %300, %221, %196, %171, %156
  %320 = phi i32 [ %161, %156 ], [ 4, %171 ], [ 4, %221 ], [ 4, %196 ], [ 1, %314 ], [ 4, %264 ], [ 4, %274 ], [ 4, %300 ]
  ret i32 %320
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal10MapUpdater13FindTargetMapEv(%"class.v8::internal::MapUpdater"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::DependentCode", align 8
  %3 = alloca %"class.v8::internal::TransitionsAccessor", align 8
  %4 = alloca %"class.v8::internal::TransitionsAccessor", align 8
  %5 = alloca %"class.v8::internal::TransitionsAccessor", align 8
  %6 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 3
  %7 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 4
  %8 = bitcast %"class.v8::internal::Handle.1128"* %6 to i64*
  %9 = bitcast %"class.v8::internal::Handle.1128"* %7 to i64*
  %10 = load i64, i64* %8, align 8
  store i64 %10, i64* %9, align 8
  %11 = inttoptr i64 %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = add i64 %12, 11
  %14 = inttoptr i64 %13 to i32*
  %15 = load atomic i32, i32* %14 acquire, align 4
  %16 = lshr i32 %15, 10
  %17 = and i32 %16, 1023
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 6
  %20 = load i32, i32* %19, align 8
  %21 = sext i32 %20 to i64
  %22 = icmp eq i64 %18, %21
  br i1 %22, label %327, label %23

23:                                               ; preds = %1
  %24 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 14, i32 0
  %25 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 2, i32 0, i32 0
  %26 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 16
  %27 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 8
  %28 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 15
  %29 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 18
  %30 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 17
  %31 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 19, i32 0
  %32 = bitcast %"class.v8::internal::TransitionsAccessor"* %3 to i8*
  %33 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 0
  %34 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 4, i32 0, i32 0
  %35 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 0
  %36 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 1
  %37 = bitcast %"class.v8::internal::Handle.1128"* %36 to i64*
  %38 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 3, i32 0, i32 0
  %40 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 5
  %41 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 4
  %42 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 21, i32 0, i32 0
  br label %43

43:                                               ; preds = %23, %316
  %44 = phi i64 [ %18, %23 ], [ %317, %316 ]
  %45 = load i64, i64* %24, align 8
  %46 = icmp eq i64 %45, %44
  br i1 %46, label %47, label %82

47:                                               ; preds = %43
  %48 = load i32, i32* %26, align 4
  %49 = load i32, i32* %27, align 8
  %50 = and i32 %49, -2
  %51 = icmp eq i32 %50, 4
  %52 = and i32 %48, 1
  %53 = icmp eq i32 %52, 0
  %54 = and i1 %53, %51
  br i1 %54, label %55, label %67

55:                                               ; preds = %47
  %56 = load i64*, i64** %25, align 8
  %57 = load i64, i64* %56, align 8
  %58 = mul i64 %44, 51539607552
  %59 = add i64 %58, 68719476736
  %60 = ashr exact i64 %59, 32
  %61 = or i64 %60, 3
  %62 = add i64 %57, %61
  %63 = inttoptr i64 %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = lshr i32 %64, 4
  %66 = and i32 %65, 7
  br label %67

67:                                               ; preds = %55, %47
  %68 = phi i32 [ %66, %55 ], [ %48, %47 ]
  %69 = load i32, i32* %28, align 8
  %70 = load i32, i32* %29, align 4
  %71 = load i32, i32* %30, align 8
  %72 = load i8, i8* %31, align 8
  %73 = shl i32 %68, 3
  %74 = or i32 %73, %69
  %75 = shl i32 %70, 1
  %76 = or i32 %74, %75
  %77 = shl i32 %71, 2
  %78 = or i32 %76, %77
  %79 = zext i8 %72 to i32
  %80 = shl nuw nsw i32 %79, 6
  %81 = or i32 %78, %80
  br label %93

82:                                               ; preds = %43
  %83 = load i64*, i64** %25, align 8
  %84 = load i64, i64* %83, align 8
  %85 = mul i64 %44, 51539607552
  %86 = add i64 %85, 68719476736
  %87 = ashr exact i64 %86, 32
  %88 = or i64 %87, 3
  %89 = add i64 %84, %88
  %90 = inttoptr i64 %89 to i32*
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = ashr i32 %91, 1
  br label %93

93:                                               ; preds = %67, %82
  %94 = phi i32 [ %81, %67 ], [ %92, %82 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %32) #5
  %95 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %96 = load i64*, i64** %34, align 8
  %97 = ptrtoint i64* %96 to i64
  store %"class.v8::internal::Isolate"* %95, %"class.v8::internal::Isolate"** %35, align 8
  store i64 %97, i64* %37, align 8
  %98 = load i64, i64* %96, align 8
  store i64 %98, i64* %38, align 8
  store i64 0, i64* %39, align 8
  store i8 0, i8* %40, align 4
  %99 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 0, i32 4
  %100 = load i64, i64* %99, align 8
  %101 = add i64 %98, 35
  %102 = inttoptr i64 %101 to i32*
  %103 = load atomic i32, i32* %102 acquire, align 4
  %104 = and i64 %100, 4294967295
  %105 = icmp eq i64 %104, 0
  call void @llvm.assume(i1 %105) #5
  %106 = zext i32 %103 to i64
  %107 = or i64 %100, %106
  store i64 %107, i64* %39, align 8
  %108 = and i64 %106, 1
  %109 = icmp eq i64 %108, 0
  %110 = icmp eq i32 %103, 3
  %111 = or i1 %110, %109
  br i1 %111, label %134, label %112

112:                                              ; preds = %93
  %113 = and i64 %106, 3
  switch i64 %113, label %133 [
    i64 3, label %134
    i64 1, label %114
  ]

114:                                              ; preds = %112
  %115 = add i64 %107, -1
  %116 = inttoptr i64 %115 to i32*
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = zext i32 %117 to i64
  %119 = or i64 %100, %118
  %120 = add i64 %119, 7
  %121 = inttoptr i64 %120 to i16*
  %122 = load atomic i16, i16* %121 monotonic, align 2
  %123 = icmp eq i16 %122, 160
  br i1 %123, label %134, label %124

124:                                              ; preds = %114
  %125 = load atomic i32, i32* %116 monotonic, align 4
  %126 = zext i32 %125 to i64
  %127 = or i64 %100, %126
  %128 = add i64 %127, 7
  %129 = inttoptr i64 %128 to i16*
  %130 = load atomic i16, i16* %129 monotonic, align 2
  %131 = icmp eq i16 %130, 110
  %132 = select i1 %131, i32 0, i32 2
  br label %134

133:                                              ; preds = %112
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i64 0, i64 0)) #11
  unreachable

134:                                              ; preds = %124, %114, %112, %93
  %135 = phi i32 [ 1, %93 ], [ 3, %112 ], [ 4, %114 ], [ %132, %124 ]
  store i32 %135, i32* %41, align 8
  %136 = load i64*, i64** %25, align 8
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, -4294967296
  %139 = mul i64 %44, 51539607552
  %140 = add i64 %139, 68719476736
  %141 = ashr exact i64 %140, 32
  %142 = add nsw i64 %141, -1
  %143 = add i64 %142, %137
  %144 = inttoptr i64 %143 to i32*
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = zext i32 %145 to i64
  %147 = or i64 %138, %146
  %148 = and i32 %94, 1
  %149 = lshr i32 %94, 3
  %150 = and i32 %149, 7
  %151 = call i64 @_ZN2v88internal19TransitionsAccessor16SearchTransitionENS0_4NameENS0_12PropertyKindENS0_18PropertyAttributesE(%"class.v8::internal::TransitionsAccessor"* nonnull %3, i64 %147, i32 %148, i32 %150) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %32) #5
  %152 = trunc i64 %151 to i32
  %153 = icmp eq i32 %152, 0
  br i1 %153, label %327, label %154

154:                                              ; preds = %134
  %155 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %156 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %155, i64 0, i32 31, i32 4
  %157 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %156, align 8
  %158 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %157, null
  br i1 %158, label %163, label %159

159:                                              ; preds = %154
  %160 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %157, i64 %151) #5
  %161 = load i64, i64* %160, align 8
  %162 = ptrtoint i64* %160 to i64
  br label %176

163:                                              ; preds = %154
  %164 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %155, i64 0, i32 31, i32 0
  %165 = load i64*, i64** %164, align 8
  %166 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %155, i64 0, i32 31, i32 1
  %167 = load i64*, i64** %166, align 8
  %168 = icmp eq i64* %165, %167
  br i1 %168, label %169, label %171

169:                                              ; preds = %163
  %170 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %155) #5
  br label %171

171:                                              ; preds = %169, %163
  %172 = phi i64* [ %170, %169 ], [ %165, %163 ]
  %173 = ptrtoint i64* %172 to i64
  %174 = add i64 %173, 8
  %175 = inttoptr i64 %174 to i64*
  store i64* %175, i64** %164, align 8
  store i64 %151, i64* %172, align 8
  br label %176

176:                                              ; preds = %159, %171
  %177 = phi i64 [ %162, %159 ], [ %173, %171 ]
  %178 = phi i64 [ %161, %159 ], [ %151, %171 ]
  %179 = phi i64* [ %160, %159 ], [ %172, %171 ]
  %180 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %181 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %180, i64 0, i32 0, i32 4
  %182 = load i64, i64* %181, align 8
  %183 = add i64 %178, 23
  %184 = inttoptr i64 %183 to i32*
  %185 = load i32, i32* %184, align 4
  %186 = and i64 %182, 4294967295
  %187 = icmp eq i64 %186, 0
  call void @llvm.assume(i1 %187) #5
  %188 = zext i32 %185 to i64
  %189 = or i64 %182, %188
  %190 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %180, i64 0, i32 31, i32 4
  %191 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %190, align 8
  %192 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %191, null
  br i1 %192, label %196, label %193

193:                                              ; preds = %176
  %194 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %191, i64 %189) #5
  %195 = load i64, i64* %194, align 8
  br label %209

196:                                              ; preds = %176
  %197 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %180, i64 0, i32 31, i32 0
  %198 = load i64*, i64** %197, align 8
  %199 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %180, i64 0, i32 31, i32 1
  %200 = load i64*, i64** %199, align 8
  %201 = icmp eq i64* %198, %200
  br i1 %201, label %202, label %204

202:                                              ; preds = %196
  %203 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %180) #5
  br label %204

204:                                              ; preds = %202, %196
  %205 = phi i64* [ %203, %202 ], [ %198, %196 ]
  %206 = ptrtoint i64* %205 to i64
  %207 = add i64 %206, 8
  %208 = inttoptr i64 %207 to i64*
  store i64* %208, i64** %197, align 8
  store i64 %189, i64* %205, align 8
  br label %209

209:                                              ; preds = %193, %204
  %210 = phi i64 [ %195, %193 ], [ %189, %204 ]
  %211 = or i64 %141, 3
  %212 = add i64 %210, %211
  %213 = inttoptr i64 %212 to i32*
  %214 = load atomic i32, i32* %213 monotonic, align 4
  %215 = lshr i32 %214, 7
  %216 = icmp eq i32 %148, 0
  br i1 %216, label %240, label %217

217:                                              ; preds = %209
  %218 = load i64, i64* %24, align 8
  %219 = icmp eq i64 %218, %44
  br i1 %219, label %220, label %224

220:                                              ; preds = %217
  %221 = load i64*, i64** %42, align 8
  %222 = load i64, i64* %221, align 8
  %223 = add nsw i64 %141, 7
  br label %232

224:                                              ; preds = %217
  %225 = load i64*, i64** %25, align 8
  %226 = load i64, i64* %225, align 8
  %227 = add nsw i64 %141, 7
  %228 = add i64 %227, %226
  %229 = inttoptr i64 %228 to i32*
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = zext i32 %230 to i64
  br label %232

232:                                              ; preds = %220, %224
  %233 = phi i64 [ %223, %220 ], [ %227, %224 ]
  %234 = phi i64 [ %222, %220 ], [ %231, %224 ]
  %235 = add i64 %233, %210
  %236 = inttoptr i64 %235 to i32*
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = trunc i64 %234 to i32
  %239 = icmp eq i32 %237, %238
  br i1 %239, label %240, label %319

240:                                              ; preds = %209, %232
  %241 = lshr i32 %94, 1
  %242 = and i32 %241, 1
  %243 = and i32 %214, 4
  %244 = icmp eq i32 %243, 0
  %245 = icmp ne i32 %242, 0
  %246 = or i1 %245, %244
  br i1 %246, label %247, label %327

247:                                              ; preds = %240
  %248 = trunc i32 %215 to i8
  %249 = and i8 %248, 7
  %250 = lshr i32 %94, 6
  %251 = trunc i32 %250 to i8
  %252 = and i8 %251, 7
  switch i8 %249, label %255 [
    i8 5, label %257
    i8 3, label %253
  ]

253:                                              ; preds = %247
  %254 = icmp eq i8 %252, 0
  br i1 %254, label %286, label %257

255:                                              ; preds = %247
  %256 = icmp ult i8 %249, %252
  br i1 %256, label %259, label %286

257:                                              ; preds = %253, %247
  %258 = icmp eq i8 %249, %252
  br i1 %258, label %286, label %259

259:                                              ; preds = %255, %257
  switch i8 %249, label %262 [
    i8 5, label %264
    i8 3, label %260
  ]

260:                                              ; preds = %259
  %261 = icmp eq i8 %252, 0
  br i1 %261, label %286, label %264

262:                                              ; preds = %259
  %263 = icmp ult i8 %249, %252
  br i1 %263, label %266, label %286

264:                                              ; preds = %260, %259
  %265 = icmp eq i8 %249, %252
  br i1 %265, label %286, label %266

266:                                              ; preds = %264, %262
  switch i8 %252, label %269 [
    i8 5, label %271
    i8 3, label %267
  ]

267:                                              ; preds = %266
  %268 = icmp eq i8 %249, 0
  br i1 %268, label %275, label %271

269:                                              ; preds = %266
  %270 = icmp ult i8 %249, %252
  br i1 %270, label %272, label %271

271:                                              ; preds = %269, %267, %266
  br label %272

272:                                              ; preds = %269, %271
  %273 = phi i8 [ 4, %271 ], [ %252, %269 ]
  %274 = icmp eq i8 %249, %273
  br i1 %274, label %286, label %275

275:                                              ; preds = %267, %272
  %276 = phi i8 [ %273, %272 ], [ 3, %267 ]
  %277 = icmp eq i8 %249, 5
  %278 = icmp eq i8 %276, 5
  %279 = or i1 %277, %278
  br i1 %279, label %327, label %280

280:                                              ; preds = %275
  %281 = icmp eq i8 %249, 0
  br i1 %281, label %282, label %284

282:                                              ; preds = %280
  %283 = icmp eq i8 %276, 2
  br i1 %283, label %327, label %286

284:                                              ; preds = %280
  %285 = icmp eq i8 %276, 4
  br i1 %285, label %286, label %327

286:                                              ; preds = %264, %255, %282, %260, %262, %272, %253, %284, %257
  %287 = phi i8 [ %249, %257 ], [ 4, %284 ], [ %276, %282 ], [ %249, %255 ], [ 3, %253 ], [ %249, %272 ], [ 3, %260 ], [ %249, %262 ], [ %249, %264 ]
  br i1 %244, label %288, label %293

288:                                              ; preds = %286
  %289 = call i64* @_ZNK2v88internal10MapUpdater21GetOrComputeFieldTypeENS0_13InternalIndexENS0_16PropertyLocationENS0_14RepresentationE(%"class.v8::internal::MapUpdater"* %0, i64 %44, i32 %242, i8 %287)
  %290 = lshr i32 %94, 2
  %291 = and i32 %290, 1
  %292 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  call void @_ZN2v88internal10MapUpdater15GeneralizeFieldEPNS0_7IsolateENS0_6HandleINS0_3MapEEENS0_13InternalIndexENS0_17PropertyConstnessENS0_14RepresentationENS4_INS0_9FieldTypeEEE(%"class.v8::internal::Isolate"* %292, i64* %179, i64 %44, i32 %291, i8 %287, i64* %289) #5
  br label %316

293:                                              ; preds = %286
  %294 = load i64, i64* %24, align 8
  %295 = icmp eq i64 %294, %44
  br i1 %295, label %296, label %300

296:                                              ; preds = %293
  %297 = load i64*, i64** %42, align 8
  %298 = load i64, i64* %297, align 8
  %299 = add nsw i64 %141, 7
  br label %308

300:                                              ; preds = %293
  %301 = load i64*, i64** %25, align 8
  %302 = load i64, i64* %301, align 8
  %303 = add nsw i64 %141, 7
  %304 = add i64 %303, %302
  %305 = inttoptr i64 %304 to i32*
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = zext i32 %306 to i64
  br label %308

308:                                              ; preds = %296, %300
  %309 = phi i64 [ %299, %296 ], [ %303, %300 ]
  %310 = phi i64 [ %298, %296 ], [ %307, %300 ]
  %311 = add i64 %309, %210
  %312 = inttoptr i64 %311 to i32*
  %313 = load atomic i32, i32* %312 monotonic, align 4
  %314 = trunc i64 %310 to i32
  %315 = icmp eq i32 %313, %314
  br i1 %315, label %316, label %327

316:                                              ; preds = %308, %288
  store i64 %177, i64* %9, align 8
  %317 = add i64 %44, 1
  %318 = icmp eq i64 %317, %21
  br i1 %318, label %327, label %43

319:                                              ; preds = %232
  %320 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %33, align 8
  %321 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 1, i32 0, i32 0
  %322 = load i64*, i64** %321, align 8
  %323 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 12
  %324 = load i8, i8* %323, align 4
  %325 = call i64* @_ZN2v88internal3Map9NormalizeEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindENS0_25PropertyNormalizationModeEPKc(%"class.v8::internal::Isolate"* %320, i64* %322, i8 zeroext %324, i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0)) #5
  %326 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 5, i32 0, i32 0
  store i64* %325, i64** %326, align 8
  br label %683

327:                                              ; preds = %308, %240, %134, %284, %275, %316, %282, %1
  %328 = getelementptr inbounds %"class.v8::internal::Handle.1128", %"class.v8::internal::Handle.1128"* %7, i64 0, i32 0, i32 0
  %329 = load i64*, i64** %328, align 8
  %330 = load i64, i64* %329, align 8
  %331 = add i64 %330, 11
  %332 = inttoptr i64 %331 to i32*
  %333 = load atomic i32, i32* %332 acquire, align 4
  %334 = lshr i32 %333, 10
  %335 = and i32 %334, 1023
  %336 = load i32, i32* %19, align 8
  %337 = icmp eq i32 %335, %336
  br i1 %337, label %338, label %461

338:                                              ; preds = %327
  %339 = load i64*, i64** %328, align 8
  %340 = load i64, i64* %339, align 8
  %341 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 1, i32 0, i32 0
  %342 = load i64*, i64** %341, align 8
  %343 = load i64, i64* %342, align 8
  %344 = trunc i64 %340 to i32
  %345 = trunc i64 %343 to i32
  %346 = icmp eq i32 %344, %345
  br i1 %346, label %364, label %347

347:                                              ; preds = %338
  %348 = add i64 %343, 11
  %349 = inttoptr i64 %348 to i32*
  %350 = load atomic i32, i32* %349 acquire, align 4
  %351 = and i32 %350, 33554432
  %352 = icmp eq i32 %351, 0
  br i1 %352, label %353, label %364

353:                                              ; preds = %347
  %354 = load atomic i32, i32* %349 monotonic, align 4
  %355 = or i32 %354, 33554432
  store atomic volatile i32 %355, i32* %349 release, align 4
  %356 = bitcast %"class.v8::internal::DependentCode"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %356) #5
  %357 = and i64 %343, -4294967296
  %358 = add i64 %343, 27
  %359 = inttoptr i64 %358 to i32*
  %360 = load i32, i32* %359, align 4
  %361 = zext i32 %360 to i64
  %362 = or i64 %357, %361
  %363 = getelementptr inbounds %"class.v8::internal::DependentCode", %"class.v8::internal::DependentCode"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %362, i64* %363, align 8
  call void @_ZN2v88internal13DependentCode28DeoptimizeDependentCodeGroupENS1_15DependencyGroupE(%"class.v8::internal::DependentCode"* nonnull %2, i32 1) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %356) #5
  br label %364

364:                                              ; preds = %338, %353, %347
  %365 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 7
  %366 = load i8, i8* %365, align 4, !range !2
  %367 = icmp eq i8 %366, 0
  br i1 %367, label %368, label %372

368:                                              ; preds = %364
  %369 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 5
  %370 = bitcast %"class.v8::internal::Handle.1128"* %369 to i64*
  %371 = load i64, i64* %9, align 8
  store i64 %371, i64* %370, align 8
  br label %683

372:                                              ; preds = %364
  %373 = bitcast %"class.v8::internal::TransitionsAccessor"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %373) #5
  %374 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 0
  %375 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %374, align 8
  %376 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 4, i32 0, i32 0
  %377 = load i64*, i64** %376, align 8
  %378 = ptrtoint i64* %377 to i64
  %379 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %4, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %375, %"class.v8::internal::Isolate"** %379, align 8
  %380 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %4, i64 0, i32 1
  %381 = bitcast %"class.v8::internal::Handle.1128"* %380 to i64*
  store i64 %378, i64* %381, align 8
  %382 = load i64, i64* %377, align 8
  %383 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i64 %382, i64* %383, align 8
  %384 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %4, i64 0, i32 3, i32 0, i32 0
  store i64 0, i64* %384, align 8
  %385 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %4, i64 0, i32 5
  store i8 0, i8* %385, align 4
  %386 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %375, i64 0, i32 0, i32 4
  %387 = load i64, i64* %386, align 8
  %388 = add i64 %382, 35
  %389 = inttoptr i64 %388 to i32*
  %390 = load atomic i32, i32* %389 acquire, align 4
  %391 = and i64 %387, 4294967295
  %392 = icmp eq i64 %391, 0
  call void @llvm.assume(i1 %392) #5
  %393 = zext i32 %390 to i64
  %394 = or i64 %387, %393
  store i64 %394, i64* %384, align 8
  %395 = and i64 %393, 1
  %396 = icmp eq i64 %395, 0
  %397 = icmp eq i32 %390, 3
  %398 = or i1 %397, %396
  br i1 %398, label %399, label %401

399:                                              ; preds = %372
  %400 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %4, i64 0, i32 4
  store i32 1, i32* %400, align 8
  br label %429

401:                                              ; preds = %372
  %402 = and i64 %393, 3
  switch i64 %402, label %428 [
    i64 3, label %403
    i64 1, label %405
  ]

403:                                              ; preds = %401
  %404 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %4, i64 0, i32 4
  store i32 3, i32* %404, align 8
  br label %429

405:                                              ; preds = %401
  %406 = add i64 %394, -1
  %407 = inttoptr i64 %406 to i32*
  %408 = load atomic i32, i32* %407 monotonic, align 4
  %409 = zext i32 %408 to i64
  %410 = or i64 %387, %409
  %411 = add i64 %410, 7
  %412 = inttoptr i64 %411 to i16*
  %413 = load atomic i16, i16* %412 monotonic, align 2
  %414 = icmp eq i16 %413, 160
  br i1 %414, label %415, label %417

415:                                              ; preds = %405
  %416 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %4, i64 0, i32 4
  store i32 4, i32* %416, align 8
  br label %429

417:                                              ; preds = %405
  %418 = load atomic i32, i32* %407 monotonic, align 4
  %419 = zext i32 %418 to i64
  %420 = or i64 %387, %419
  %421 = add i64 %420, 7
  %422 = inttoptr i64 %421 to i16*
  %423 = load atomic i16, i16* %422 monotonic, align 2
  %424 = icmp eq i16 %423, 110
  %425 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %4, i64 0, i32 4
  br i1 %424, label %426, label %427

426:                                              ; preds = %417
  store i32 0, i32* %425, align 8
  br label %429

427:                                              ; preds = %417
  store i32 2, i32* %425, align 8
  br label %429

428:                                              ; preds = %401
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i64 0, i64 0)) #11
  unreachable

429:                                              ; preds = %399, %403, %415, %426, %427
  %430 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 9, i32 0, i32 0
  %431 = load i64*, i64** %430, align 8
  %432 = load i64, i64* %431, align 8
  %433 = call i64 @_ZN2v88internal19TransitionsAccessor13SearchSpecialENS0_6SymbolE(%"class.v8::internal::TransitionsAccessor"* nonnull %4, i64 %432) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %373) #5
  %434 = trunc i64 %433 to i32
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %436, label %438

436:                                              ; preds = %429
  %437 = load i32, i32* %19, align 8
  br label %461

438:                                              ; preds = %429
  %439 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %374, align 8
  %440 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %439, i64 0, i32 31, i32 4
  %441 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %440, align 8
  %442 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %441, null
  br i1 %442, label %445, label %443

443:                                              ; preds = %438
  %444 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %441, i64 %433) #5
  br label %458

445:                                              ; preds = %438
  %446 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %439, i64 0, i32 31, i32 0
  %447 = load i64*, i64** %446, align 8
  %448 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %439, i64 0, i32 31, i32 1
  %449 = load i64*, i64** %448, align 8
  %450 = icmp eq i64* %447, %449
  br i1 %450, label %451, label %453

451:                                              ; preds = %445
  %452 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %439) #5
  br label %453

453:                                              ; preds = %451, %445
  %454 = phi i64* [ %452, %451 ], [ %447, %445 ]
  %455 = ptrtoint i64* %454 to i64
  %456 = add i64 %455, 8
  %457 = inttoptr i64 %456 to i64*
  store i64* %457, i64** %446, align 8
  store i64 %433, i64* %454, align 8
  br label %458

458:                                              ; preds = %443, %453
  %459 = phi i64* [ %444, %443 ], [ %454, %453 ]
  %460 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 5, i32 0, i32 0
  store i64* %459, i64** %460, align 8
  br label %683

461:                                              ; preds = %436, %327
  %462 = phi i32 [ %437, %436 ], [ %336, %327 ]
  %463 = zext i32 %335 to i64
  %464 = sext i32 %462 to i64
  %465 = icmp eq i64 %463, %464
  br i1 %465, label %683, label %466

466:                                              ; preds = %461
  %467 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 14, i32 0
  %468 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 2, i32 0, i32 0
  %469 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 16
  %470 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 8
  %471 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 15
  %472 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 18
  %473 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 17
  %474 = bitcast %"class.v8::internal::TransitionsAccessor"* %5 to i8*
  %475 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 0
  %476 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 4, i32 0, i32 0
  %477 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %5, i64 0, i32 0
  %478 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %5, i64 0, i32 1
  %479 = bitcast %"class.v8::internal::Handle.1128"* %478 to i64*
  %480 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %481 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %5, i64 0, i32 3, i32 0, i32 0
  %482 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %5, i64 0, i32 5
  %483 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %5, i64 0, i32 4
  %484 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 21, i32 0, i32 0
  br label %485

485:                                              ; preds = %466, %672
  %486 = phi i64 [ %463, %466 ], [ %673, %672 ]
  %487 = load i64, i64* %467, align 8
  %488 = icmp eq i64 %487, %486
  br i1 %488, label %489, label %520

489:                                              ; preds = %485
  %490 = load i32, i32* %469, align 4
  %491 = load i32, i32* %470, align 8
  %492 = and i32 %491, -2
  %493 = icmp eq i32 %492, 4
  %494 = and i32 %490, 1
  %495 = icmp eq i32 %494, 0
  %496 = and i1 %495, %493
  br i1 %496, label %497, label %509

497:                                              ; preds = %489
  %498 = load i64*, i64** %468, align 8
  %499 = load i64, i64* %498, align 8
  %500 = mul i64 %486, 51539607552
  %501 = add i64 %500, 68719476736
  %502 = ashr exact i64 %501, 32
  %503 = or i64 %502, 3
  %504 = add i64 %499, %503
  %505 = inttoptr i64 %504 to i32*
  %506 = load atomic i32, i32* %505 monotonic, align 4
  %507 = lshr i32 %506, 4
  %508 = and i32 %507, 7
  br label %509

509:                                              ; preds = %497, %489
  %510 = phi i32 [ %508, %497 ], [ %490, %489 ]
  %511 = load i32, i32* %471, align 8
  %512 = load i32, i32* %472, align 4
  %513 = load i32, i32* %473, align 8
  %514 = shl i32 %510, 3
  %515 = or i32 %514, %511
  %516 = shl i32 %512, 1
  %517 = or i32 %515, %516
  %518 = shl i32 %513, 2
  %519 = or i32 %517, %518
  br label %531

520:                                              ; preds = %485
  %521 = load i64*, i64** %468, align 8
  %522 = load i64, i64* %521, align 8
  %523 = mul i64 %486, 51539607552
  %524 = add i64 %523, 68719476736
  %525 = ashr exact i64 %524, 32
  %526 = or i64 %525, 3
  %527 = add i64 %522, %526
  %528 = inttoptr i64 %527 to i32*
  %529 = load atomic i32, i32* %528 monotonic, align 4
  %530 = ashr i32 %529, 1
  br label %531

531:                                              ; preds = %509, %520
  %532 = phi i32 [ %519, %509 ], [ %530, %520 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %474) #5
  %533 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %475, align 8
  %534 = load i64*, i64** %476, align 8
  %535 = ptrtoint i64* %534 to i64
  store %"class.v8::internal::Isolate"* %533, %"class.v8::internal::Isolate"** %477, align 8
  store i64 %535, i64* %479, align 8
  %536 = load i64, i64* %534, align 8
  store i64 %536, i64* %480, align 8
  store i64 0, i64* %481, align 8
  store i8 0, i8* %482, align 4
  %537 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %533, i64 0, i32 0, i32 4
  %538 = load i64, i64* %537, align 8
  %539 = add i64 %536, 35
  %540 = inttoptr i64 %539 to i32*
  %541 = load atomic i32, i32* %540 acquire, align 4
  %542 = and i64 %538, 4294967295
  %543 = icmp eq i64 %542, 0
  call void @llvm.assume(i1 %543) #5
  %544 = zext i32 %541 to i64
  %545 = or i64 %538, %544
  store i64 %545, i64* %481, align 8
  %546 = and i64 %544, 1
  %547 = icmp eq i64 %546, 0
  %548 = icmp eq i32 %541, 3
  %549 = or i1 %548, %547
  br i1 %549, label %572, label %550

550:                                              ; preds = %531
  %551 = and i64 %544, 3
  switch i64 %551, label %571 [
    i64 3, label %572
    i64 1, label %552
  ]

552:                                              ; preds = %550
  %553 = add i64 %545, -1
  %554 = inttoptr i64 %553 to i32*
  %555 = load atomic i32, i32* %554 monotonic, align 4
  %556 = zext i32 %555 to i64
  %557 = or i64 %538, %556
  %558 = add i64 %557, 7
  %559 = inttoptr i64 %558 to i16*
  %560 = load atomic i16, i16* %559 monotonic, align 2
  %561 = icmp eq i16 %560, 160
  br i1 %561, label %572, label %562

562:                                              ; preds = %552
  %563 = load atomic i32, i32* %554 monotonic, align 4
  %564 = zext i32 %563 to i64
  %565 = or i64 %538, %564
  %566 = add i64 %565, 7
  %567 = inttoptr i64 %566 to i16*
  %568 = load atomic i16, i16* %567 monotonic, align 2
  %569 = icmp eq i16 %568, 110
  %570 = select i1 %569, i32 0, i32 2
  br label %572

571:                                              ; preds = %550
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i64 0, i64 0)) #11
  unreachable

572:                                              ; preds = %562, %552, %550, %531
  %573 = phi i32 [ 1, %531 ], [ 3, %550 ], [ 4, %552 ], [ %570, %562 ]
  store i32 %573, i32* %483, align 8
  %574 = load i64*, i64** %468, align 8
  %575 = load i64, i64* %574, align 8
  %576 = and i64 %575, -4294967296
  %577 = mul i64 %486, 51539607552
  %578 = add i64 %577, 68719476736
  %579 = ashr exact i64 %578, 32
  %580 = add nsw i64 %579, -1
  %581 = add i64 %580, %575
  %582 = inttoptr i64 %581 to i32*
  %583 = load atomic i32, i32* %582 monotonic, align 4
  %584 = zext i32 %583 to i64
  %585 = or i64 %576, %584
  %586 = and i32 %532, 1
  %587 = lshr i32 %532, 3
  %588 = and i32 %587, 7
  %589 = call i64 @_ZN2v88internal19TransitionsAccessor16SearchTransitionENS0_4NameENS0_12PropertyKindENS0_18PropertyAttributesE(%"class.v8::internal::TransitionsAccessor"* nonnull %5, i64 %585, i32 %586, i32 %588) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %474) #5
  %590 = trunc i64 %589 to i32
  %591 = icmp eq i32 %590, 0
  br i1 %591, label %683, label %592

592:                                              ; preds = %572
  %593 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %475, align 8
  %594 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %593, i64 0, i32 31, i32 4
  %595 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %594, align 8
  %596 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %595, null
  br i1 %596, label %601, label %597

597:                                              ; preds = %592
  %598 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %595, i64 %589) #5
  %599 = load i64, i64* %598, align 8
  %600 = ptrtoint i64* %598 to i64
  br label %614

601:                                              ; preds = %592
  %602 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %593, i64 0, i32 31, i32 0
  %603 = load i64*, i64** %602, align 8
  %604 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %593, i64 0, i32 31, i32 1
  %605 = load i64*, i64** %604, align 8
  %606 = icmp eq i64* %603, %605
  br i1 %606, label %607, label %609

607:                                              ; preds = %601
  %608 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %593) #5
  br label %609

609:                                              ; preds = %607, %601
  %610 = phi i64* [ %608, %607 ], [ %603, %601 ]
  %611 = ptrtoint i64* %610 to i64
  %612 = add i64 %611, 8
  %613 = inttoptr i64 %612 to i64*
  store i64* %613, i64** %602, align 8
  store i64 %589, i64* %610, align 8
  br label %614

614:                                              ; preds = %597, %609
  %615 = phi i64 [ %600, %597 ], [ %611, %609 ]
  %616 = phi i64 [ %599, %597 ], [ %589, %609 ]
  %617 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %475, align 8
  %618 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %617, i64 0, i32 0, i32 4
  %619 = load i64, i64* %618, align 8
  %620 = add i64 %616, 23
  %621 = inttoptr i64 %620 to i32*
  %622 = load i32, i32* %621, align 4
  %623 = and i64 %619, 4294967295
  %624 = icmp eq i64 %623, 0
  call void @llvm.assume(i1 %624) #5
  %625 = zext i32 %622 to i64
  %626 = or i64 %619, %625
  %627 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %617, i64 0, i32 31, i32 4
  %628 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %627, align 8
  %629 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %628, null
  br i1 %629, label %632, label %630

630:                                              ; preds = %614
  %631 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %628, i64 %626) #5
  br label %645

632:                                              ; preds = %614
  %633 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %617, i64 0, i32 31, i32 0
  %634 = load i64*, i64** %633, align 8
  %635 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %617, i64 0, i32 31, i32 1
  %636 = load i64*, i64** %635, align 8
  %637 = icmp eq i64* %634, %636
  br i1 %637, label %638, label %640

638:                                              ; preds = %632
  %639 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %617) #5
  br label %640

640:                                              ; preds = %638, %632
  %641 = phi i64* [ %639, %638 ], [ %634, %632 ]
  %642 = ptrtoint i64* %641 to i64
  %643 = add i64 %642, 8
  %644 = inttoptr i64 %643 to i64*
  store i64* %644, i64** %633, align 8
  store i64 %626, i64* %641, align 8
  br label %645

645:                                              ; preds = %630, %640
  %646 = phi i64* [ %631, %630 ], [ %641, %640 ]
  %647 = icmp eq i32 %586, 0
  br i1 %647, label %672, label %648

648:                                              ; preds = %645
  %649 = load i64, i64* %467, align 8
  %650 = icmp eq i64 %649, %486
  br i1 %650, label %651, label %655

651:                                              ; preds = %648
  %652 = load i64*, i64** %484, align 8
  %653 = load i64, i64* %652, align 8
  %654 = add nsw i64 %579, 7
  br label %663

655:                                              ; preds = %648
  %656 = load i64*, i64** %468, align 8
  %657 = load i64, i64* %656, align 8
  %658 = add nsw i64 %579, 7
  %659 = add i64 %658, %657
  %660 = inttoptr i64 %659 to i32*
  %661 = load atomic i32, i32* %660 monotonic, align 4
  %662 = zext i32 %661 to i64
  br label %663

663:                                              ; preds = %651, %655
  %664 = phi i64 [ %654, %651 ], [ %658, %655 ]
  %665 = phi i64 [ %653, %651 ], [ %662, %655 ]
  %666 = load i64, i64* %646, align 8
  %667 = add i64 %664, %666
  %668 = inttoptr i64 %667 to i32*
  %669 = load atomic i32, i32* %668 monotonic, align 4
  %670 = trunc i64 %665 to i32
  %671 = icmp eq i32 %669, %670
  br i1 %671, label %672, label %675

672:                                              ; preds = %645, %663
  store i64 %615, i64* %9, align 8
  %673 = add i64 %486, 1
  %674 = icmp eq i64 %673, %464
  br i1 %674, label %683, label %485

675:                                              ; preds = %663
  %676 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %475, align 8
  %677 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 1, i32 0, i32 0
  %678 = load i64*, i64** %677, align 8
  %679 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 12
  %680 = load i8, i8* %679, align 4
  %681 = call i64* @_ZN2v88internal3Map9NormalizeEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindENS0_25PropertyNormalizationModeEPKc(%"class.v8::internal::Isolate"* %676, i64* %678, i8 zeroext %680, i32 0, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.9, i64 0, i64 0)) #5
  %682 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 5, i32 0, i32 0
  store i64* %681, i64** %682, align 8
  br label %683

683:                                              ; preds = %672, %572, %461, %675, %319, %368, %458
  %684 = phi i32 [ 4, %675 ], [ 4, %319 ], [ 4, %368 ], [ 4, %458 ], [ 2, %461 ], [ 2, %572 ], [ 2, %672 ]
  %685 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 11
  store i32 %684, i32* %685, align 8
  ret i32 %684
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal10MapUpdater15ConstructNewMapEv(%"class.v8::internal::MapUpdater"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::DependentCode", align 8
  %3 = alloca %"class.v8::internal::TransitionsAccessor", align 8
  %4 = alloca %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", align 8
  %6 = tail call i64* @_ZN2v88internal10MapUpdater20BuildDescriptorArrayEv(%"class.v8::internal::MapUpdater"* %0)
  %7 = tail call i64* @_ZN2v88internal10MapUpdater12FindSplitMapENS0_6HandleINS0_15DescriptorArrayEEE(%"class.v8::internal::MapUpdater"* %0, i64* %6)
  %8 = load i64, i64* %7, align 8
  %9 = add i64 %8, 11
  %10 = inttoptr i64 %9 to i32*
  %11 = load atomic i32, i32* %10 acquire, align 4
  %12 = lshr i32 %11, 10
  %13 = and i32 %12, 1023
  %14 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 6
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, %13
  br i1 %16, label %17, label %24

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 7
  %19 = load i8, i8* %18, align 4, !range !2
  %20 = icmp eq i8 %19, 1
  br i1 %20, label %22, label %21, !prof !3

21:                                               ; preds = %17
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.12, i64 0, i64 0)) #11
  unreachable

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 11
  store i32 3, i32* %23, align 8
  br label %394

24:                                               ; preds = %1
  %25 = zext i32 %13 to i64
  %26 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 14, i32 0
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq i64 %27, %25
  br i1 %28, label %29, label %66

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 16
  %31 = load i32, i32* %30, align 4
  %32 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 8
  %33 = load i32, i32* %32, align 8
  %34 = and i32 %33, -2
  %35 = icmp eq i32 %34, 4
  %36 = and i32 %31, 1
  %37 = icmp eq i32 %36, 0
  %38 = and i1 %37, %35
  br i1 %38, label %39, label %52

39:                                               ; preds = %29
  %40 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 2, i32 0, i32 0
  %41 = load i64*, i64** %40, align 8
  %42 = load i64, i64* %41, align 8
  %43 = mul nuw nsw i64 %25, 51539607552
  %44 = add nuw nsw i64 %43, 68719476736
  %45 = lshr exact i64 %44, 32
  %46 = or i64 %45, 3
  %47 = add i64 %42, %46
  %48 = inttoptr i64 %47 to i32*
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = lshr i32 %49, 4
  %51 = and i32 %50, 7
  br label %52

52:                                               ; preds = %39, %29
  %53 = phi i32 [ %51, %39 ], [ %31, %29 ]
  %54 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 15
  %55 = load i32, i32* %54, align 8
  %56 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 18
  %57 = load i32, i32* %56, align 4
  %58 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 17
  %59 = load i32, i32* %58, align 8
  %60 = shl i32 %53, 3
  %61 = or i32 %60, %55
  %62 = shl i32 %57, 1
  %63 = or i32 %61, %62
  %64 = shl i32 %59, 2
  %65 = or i32 %63, %64
  br label %78

66:                                               ; preds = %24
  %67 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 2, i32 0, i32 0
  %68 = load i64*, i64** %67, align 8
  %69 = load i64, i64* %68, align 8
  %70 = mul nuw nsw i64 %25, 51539607552
  %71 = add nuw nsw i64 %70, 68719476736
  %72 = lshr exact i64 %71, 32
  %73 = or i64 %72, 3
  %74 = add i64 %69, %73
  %75 = inttoptr i64 %74 to i32*
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = ashr i32 %76, 1
  br label %78

78:                                               ; preds = %52, %66
  %79 = phi i32 [ %65, %52 ], [ %77, %66 ]
  %80 = bitcast %"class.v8::internal::TransitionsAccessor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %80) #5
  %81 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 0
  %82 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %81, align 8
  %83 = ptrtoint i64* %7 to i64
  %84 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %82, %"class.v8::internal::Isolate"** %84, align 8
  %85 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 1
  %86 = bitcast %"class.v8::internal::Handle.1128"* %85 to i64*
  store i64 %83, i64* %86, align 8
  %87 = load i64, i64* %7, align 8
  %88 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i64 %87, i64* %88, align 8
  %89 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 3, i32 0, i32 0
  store i64 0, i64* %89, align 8
  %90 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 5
  store i8 0, i8* %90, align 4
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %82, i64 0, i32 0, i32 4
  %92 = load i64, i64* %91, align 8
  %93 = add i64 %87, 35
  %94 = inttoptr i64 %93 to i32*
  %95 = load atomic i32, i32* %94 acquire, align 4
  %96 = and i64 %92, 4294967295
  %97 = icmp eq i64 %96, 0
  tail call void @llvm.assume(i1 %97) #5
  %98 = zext i32 %95 to i64
  %99 = or i64 %92, %98
  store i64 %99, i64* %89, align 8
  %100 = and i64 %98, 1
  %101 = icmp eq i64 %100, 0
  %102 = icmp eq i32 %95, 3
  %103 = or i1 %102, %101
  br i1 %103, label %104, label %106

104:                                              ; preds = %78
  %105 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 4
  store i32 1, i32* %105, align 8
  br label %134

106:                                              ; preds = %78
  %107 = and i64 %98, 3
  switch i64 %107, label %133 [
    i64 3, label %108
    i64 1, label %110
  ]

108:                                              ; preds = %106
  %109 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 4
  store i32 3, i32* %109, align 8
  br label %134

110:                                              ; preds = %106
  %111 = add i64 %99, -1
  %112 = inttoptr i64 %111 to i32*
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = zext i32 %113 to i64
  %115 = or i64 %92, %114
  %116 = add i64 %115, 7
  %117 = inttoptr i64 %116 to i16*
  %118 = load atomic i16, i16* %117 monotonic, align 2
  %119 = icmp eq i16 %118, 160
  br i1 %119, label %120, label %122

120:                                              ; preds = %110
  %121 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 4
  store i32 4, i32* %121, align 8
  br label %134

122:                                              ; preds = %110
  %123 = load atomic i32, i32* %112 monotonic, align 4
  %124 = zext i32 %123 to i64
  %125 = or i64 %92, %124
  %126 = add i64 %125, 7
  %127 = inttoptr i64 %126 to i16*
  %128 = load atomic i16, i16* %127 monotonic, align 2
  %129 = icmp eq i16 %128, 110
  %130 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 4
  br i1 %129, label %131, label %132

131:                                              ; preds = %122
  store i32 0, i32* %130, align 8
  br label %134

132:                                              ; preds = %122
  store i32 2, i32* %130, align 8
  br label %134

133:                                              ; preds = %106
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i64 0, i64 0)) #11
  unreachable

134:                                              ; preds = %104, %108, %120, %131, %132
  %135 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 2, i32 0, i32 0
  %136 = load i64*, i64** %135, align 8
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, -4294967296
  %139 = mul nuw nsw i64 %25, 51539607552
  %140 = add nuw nsw i64 %139, 68719476736
  %141 = lshr exact i64 %140, 32
  %142 = add nsw i64 %141, -1
  %143 = add i64 %142, %137
  %144 = inttoptr i64 %143 to i32*
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = zext i32 %145 to i64
  %147 = or i64 %138, %146
  %148 = and i32 %79, 1
  %149 = lshr i32 %79, 3
  %150 = and i32 %149, 7
  %151 = call i64 @_ZN2v88internal19TransitionsAccessor16SearchTransitionENS0_4NameENS0_12PropertyKindENS0_18PropertyAttributesE(%"class.v8::internal::TransitionsAccessor"* nonnull %3, i64 %147, i32 %148, i32 %150) #5
  %152 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %81, align 8
  %153 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %152, i64 0, i32 31, i32 4
  %154 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %153, align 8
  %155 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %154, null
  br i1 %155, label %159, label %156

156:                                              ; preds = %134
  %157 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %154, i64 %151) #5
  %158 = load i64, i64* %157, align 8
  br label %172

159:                                              ; preds = %134
  %160 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %152, i64 0, i32 31, i32 0
  %161 = load i64*, i64** %160, align 8
  %162 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %152, i64 0, i32 31, i32 1
  %163 = load i64*, i64** %162, align 8
  %164 = icmp eq i64* %161, %163
  br i1 %164, label %165, label %167

165:                                              ; preds = %159
  %166 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %152) #5
  br label %167

167:                                              ; preds = %165, %159
  %168 = phi i64* [ %166, %165 ], [ %161, %159 ]
  %169 = ptrtoint i64* %168 to i64
  %170 = add i64 %169, 8
  %171 = inttoptr i64 %170 to i64*
  store i64* %171, i64** %160, align 8
  store i64 %151, i64* %168, align 8
  br label %172

172:                                              ; preds = %156, %167
  %173 = phi i64 [ %158, %156 ], [ %151, %167 ]
  %174 = phi i64* [ %157, %156 ], [ %168, %167 ]
  %175 = trunc i64 %173 to i32
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %183, label %177

177:                                              ; preds = %172
  %178 = bitcast %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178) #5
  %179 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %173, i64* %179, align 8
  %180 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %4, i64 0, i32 0
  %181 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %81, align 8
  call void @_ZN2v88internal3Map23DeprecateTransitionTreeEPNS0_7IsolateE(%"class.v8::internal::Map"* nonnull %180, %"class.v8::internal::Isolate"* %181) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178) #5
  %182 = load i64, i64* %174, align 8
  br label %183

183:                                              ; preds = %172, %177
  %184 = phi i64 [ %173, %172 ], [ %182, %177 ]
  %185 = trunc i64 %184 to i32
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %187, label %197

187:                                              ; preds = %183
  %188 = call zeroext i1 @_ZN2v88internal19TransitionsAccessor22CanHaveMoreTransitionsEv(%"class.v8::internal::TransitionsAccessor"* nonnull %3) #5
  br i1 %188, label %197, label %189

189:                                              ; preds = %187
  %190 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %81, align 8
  %191 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 1, i32 0, i32 0
  %192 = load i64*, i64** %191, align 8
  %193 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 12
  %194 = load i8, i8* %193, align 4
  %195 = call i64* @_ZN2v88internal3Map9NormalizeEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindENS0_25PropertyNormalizationModeEPKc(%"class.v8::internal::Isolate"* %190, i64* %192, i8 zeroext %194, i32 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i64 0, i64 0)) #5
  %196 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 5, i32 0, i32 0
  store i64* %195, i64** %196, align 8
  br label %391

197:                                              ; preds = %183, %187
  %198 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 1, i32 0, i32 0
  %199 = load i64*, i64** %198, align 8
  %200 = load i64, i64* %199, align 8
  %201 = add i64 %200, 11
  %202 = inttoptr i64 %201 to i32*
  %203 = load atomic i32, i32* %202 acquire, align 4
  %204 = and i32 %203, 33554432
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %217

206:                                              ; preds = %197
  %207 = load atomic i32, i32* %202 monotonic, align 4
  %208 = or i32 %207, 33554432
  store atomic volatile i32 %208, i32* %202 release, align 4
  %209 = bitcast %"class.v8::internal::DependentCode"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %209) #5
  %210 = and i64 %200, -4294967296
  %211 = add i64 %200, 27
  %212 = inttoptr i64 %211 to i32*
  %213 = load i32, i32* %212, align 4
  %214 = zext i32 %213 to i64
  %215 = or i64 %210, %214
  %216 = getelementptr inbounds %"class.v8::internal::DependentCode", %"class.v8::internal::DependentCode"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %215, i64* %216, align 8
  call void @_ZN2v88internal13DependentCode28DeoptimizeDependentCodeGroupENS1_15DependencyGroupE(%"class.v8::internal::DependentCode"* nonnull %2, i32 1) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %209) #5
  br label %217

217:                                              ; preds = %197, %206
  %218 = load i8, i8* @_ZN2v88internal25FLAG_trace_generalizationE, align 1, !range !2
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %375, label %220

220:                                              ; preds = %217
  %221 = load i64, i64* %26, align 8
  %222 = icmp eq i64 %221, -1
  br i1 %222, label %375, label %223

223:                                              ; preds = %220
  %224 = load i64*, i64** %135, align 8
  %225 = load i64, i64* %224, align 8
  %226 = mul i64 %221, 51539607552
  %227 = add i64 %226, 68719476736
  %228 = ashr exact i64 %227, 32
  %229 = or i64 %228, 3
  %230 = add i64 %229, %225
  %231 = inttoptr i64 %230 to i32*
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = ashr i32 %232, 1
  %234 = load i64, i64* %6, align 8
  %235 = add i64 %229, %234
  %236 = inttoptr i64 %235 to i32*
  %237 = load atomic i32, i32* %236 monotonic, align 4
  %238 = ashr i32 %237, 1
  %239 = and i32 %232, 4
  %240 = icmp eq i32 %239, 0
  %241 = and i64 %225, -4294967296
  %242 = add i64 %225, 7
  %243 = add i64 %242, %228
  %244 = inttoptr i64 %243 to i32*
  %245 = load atomic i32, i32* %244 monotonic, align 4
  %246 = zext i32 %245 to i64
  %247 = or i64 %241, %246
  br i1 %240, label %248, label %270

248:                                              ; preds = %223
  %249 = call i64 @_ZN2v88internal3Map15UnwrapFieldTypeENS0_11MaybeObjectE(i64 %247) #5
  %250 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %81, align 8
  %251 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %250, i64 0, i32 31, i32 4
  %252 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %251, align 8
  %253 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %252, null
  br i1 %253, label %257, label %254

254:                                              ; preds = %248
  %255 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %252, i64 %249) #5
  %256 = ptrtoint i64* %255 to i64
  br label %291

257:                                              ; preds = %248
  %258 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %250, i64 0, i32 31, i32 0
  %259 = load i64*, i64** %258, align 8
  %260 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %250, i64 0, i32 31, i32 1
  %261 = load i64*, i64** %260, align 8
  %262 = icmp eq i64* %259, %261
  br i1 %262, label %263, label %265

263:                                              ; preds = %257
  %264 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %250) #5
  br label %265

265:                                              ; preds = %263, %257
  %266 = phi i64* [ %264, %263 ], [ %259, %257 ]
  %267 = ptrtoint i64* %266 to i64
  %268 = add i64 %267, 8
  %269 = inttoptr i64 %268 to i64*
  store i64* %269, i64** %258, align 8
  store i64 %249, i64* %266, align 8
  br label %291

270:                                              ; preds = %223
  %271 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %81, align 8
  %272 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %271, i64 0, i32 31, i32 4
  %273 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %272, align 8
  %274 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %273, null
  br i1 %274, label %278, label %275

275:                                              ; preds = %270
  %276 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %273, i64 %247) #5
  %277 = ptrtoint i64* %276 to i64
  br label %291

278:                                              ; preds = %270
  %279 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %271, i64 0, i32 31, i32 0
  %280 = load i64*, i64** %279, align 8
  %281 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %271, i64 0, i32 31, i32 1
  %282 = load i64*, i64** %281, align 8
  %283 = icmp eq i64* %280, %282
  br i1 %283, label %284, label %286

284:                                              ; preds = %278
  %285 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %271) #5
  br label %286

286:                                              ; preds = %284, %278
  %287 = phi i64* [ %285, %284 ], [ %280, %278 ]
  %288 = ptrtoint i64* %287 to i64
  %289 = add i64 %288, 8
  %290 = inttoptr i64 %289 to i64*
  store i64* %290, i64** %279, align 8
  store i64 %247, i64* %287, align 8
  br label %291

291:                                              ; preds = %286, %275, %265, %254
  %292 = phi i64 [ 0, %254 ], [ 0, %265 ], [ %277, %275 ], [ %288, %286 ]
  %293 = phi i64 [ %256, %254 ], [ %267, %265 ], [ 0, %275 ], [ 0, %286 ]
  %294 = and i32 %237, 4
  %295 = icmp eq i32 %294, 0
  %296 = load i64, i64* %6, align 8
  %297 = load i64, i64* %26, align 8
  %298 = and i64 %296, -4294967296
  %299 = mul i64 %297, 51539607552
  %300 = add i64 %299, 68719476736
  %301 = ashr exact i64 %300, 32
  %302 = add i64 %296, 7
  %303 = add i64 %302, %301
  %304 = inttoptr i64 %303 to i32*
  %305 = load atomic i32, i32* %304 monotonic, align 4
  %306 = zext i32 %305 to i64
  %307 = or i64 %298, %306
  br i1 %295, label %308, label %330

308:                                              ; preds = %291
  %309 = call i64 @_ZN2v88internal3Map15UnwrapFieldTypeENS0_11MaybeObjectE(i64 %307) #5
  %310 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %81, align 8
  %311 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %310, i64 0, i32 31, i32 4
  %312 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %311, align 8
  %313 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %312, null
  br i1 %313, label %317, label %314

314:                                              ; preds = %308
  %315 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %312, i64 %309) #5
  %316 = ptrtoint i64* %315 to i64
  br label %351

317:                                              ; preds = %308
  %318 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %310, i64 0, i32 31, i32 0
  %319 = load i64*, i64** %318, align 8
  %320 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %310, i64 0, i32 31, i32 1
  %321 = load i64*, i64** %320, align 8
  %322 = icmp eq i64* %319, %321
  br i1 %322, label %323, label %325

323:                                              ; preds = %317
  %324 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %310) #5
  br label %325

325:                                              ; preds = %323, %317
  %326 = phi i64* [ %324, %323 ], [ %319, %317 ]
  %327 = ptrtoint i64* %326 to i64
  %328 = add i64 %327, 8
  %329 = inttoptr i64 %328 to i64*
  store i64* %329, i64** %318, align 8
  store i64 %309, i64* %326, align 8
  br label %351

330:                                              ; preds = %291
  %331 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %81, align 8
  %332 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %331, i64 0, i32 31, i32 4
  %333 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %332, align 8
  %334 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %333, null
  br i1 %334, label %338, label %335

335:                                              ; preds = %330
  %336 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %333, i64 %307) #5
  %337 = ptrtoint i64* %336 to i64
  br label %351

338:                                              ; preds = %330
  %339 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %331, i64 0, i32 31, i32 0
  %340 = load i64*, i64** %339, align 8
  %341 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %331, i64 0, i32 31, i32 1
  %342 = load i64*, i64** %341, align 8
  %343 = icmp eq i64* %340, %342
  br i1 %343, label %344, label %346

344:                                              ; preds = %338
  %345 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %331) #5
  br label %346

346:                                              ; preds = %344, %338
  %347 = phi i64* [ %345, %344 ], [ %340, %338 ]
  %348 = ptrtoint i64* %347 to i64
  %349 = add i64 %348, 8
  %350 = inttoptr i64 %349 to i64*
  store i64* %350, i64** %339, align 8
  store i64 %307, i64* %347, align 8
  br label %351

351:                                              ; preds = %346, %335, %325, %314
  %352 = phi i64 [ 0, %314 ], [ 0, %325 ], [ %337, %335 ], [ %348, %346 ]
  %353 = phi i64 [ %316, %314 ], [ %327, %325 ], [ 0, %335 ], [ 0, %346 ]
  %354 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %81, align 8
  %355 = load i64*, i64** %198, align 8
  %356 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %357 = load i64, i64* %26, align 8
  %358 = load i32, i32* %14, align 8
  br i1 %240, label %363, label %359

359:                                              ; preds = %351
  %360 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 18
  %361 = load i32, i32* %360, align 4
  %362 = icmp eq i32 %361, 0
  br label %363

363:                                              ; preds = %351, %359
  %364 = phi i1 [ false, %351 ], [ %362, %359 ]
  %365 = lshr i32 %233, 6
  %366 = trunc i32 %365 to i8
  %367 = and i8 %366, 7
  %368 = lshr i32 %238, 6
  %369 = trunc i32 %368 to i8
  %370 = and i8 %369, 7
  %371 = lshr i32 %233, 2
  %372 = and i32 %371, 1
  %373 = lshr i32 %238, 2
  %374 = and i32 %373, 1
  call fastcc void @_ZN2v88internal12_GLOBAL__N_119PrintGeneralizationEPNS0_7IsolateENS0_6HandleINS0_3MapEEEP8_IO_FILEPKcNS0_13InternalIndexEiibNS0_14RepresentationESC_NS0_17PropertyConstnessESD_NS0_11MaybeHandleINS0_9FieldTypeEEENSE_INS0_6ObjectEEESG_SI_(%"class.v8::internal::Isolate"* %354, i64* %355, %struct._IO_FILE* %356, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.14, i64 0, i64 0), i64 %357, i32 %13, i32 %358, i1 zeroext %364, i8 %367, i8 %370, i32 %372, i32 %374, i64 %293, i64 %292, i64 %353, i64 %352)
  br label %375

375:                                              ; preds = %220, %217, %363
  %376 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %81, align 8
  %377 = call i64* @_ZN2v88internal3Map21AddMissingTransitionsEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_15DescriptorArrayEEE(%"class.v8::internal::Isolate"* %376, i64* %7, i64* %6) #5
  %378 = bitcast %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %378) #5
  %379 = load i64, i64* %7, align 8
  %380 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %379, i64* %380, align 8
  %381 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %5, i64 0, i32 0
  %382 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %81, align 8
  %383 = load i64, i64* %6, align 8
  call void @_ZN2v88internal3Map18ReplaceDescriptorsEPNS0_7IsolateENS0_15DescriptorArrayE(%"class.v8::internal::Map"* nonnull %381, %"class.v8::internal::Isolate"* %382, i64 %383) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %378) #5
  %384 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 7
  %385 = load i8, i8* %384, align 4, !range !2
  %386 = icmp eq i8 %385, 0
  %387 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 5, i32 0, i32 0
  %388 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 4, i32 0, i32 0
  %389 = select i1 %386, i64** %387, i64** %388
  %390 = select i1 %386, i32 4, i32 3
  store i64* %377, i64** %389, align 8
  br label %391

391:                                              ; preds = %375, %189
  %392 = phi i32 [ %390, %375 ], [ 4, %189 ]
  %393 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 11
  store i32 %392, i32* %393, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %80) #5
  br label %394

394:                                              ; preds = %391, %22
  %395 = phi i32 [ 3, %22 ], [ %392, %391 ]
  ret i32 %395
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal10MapUpdater43ConstructNewMapWithIntegrityLevelTransitionEv(%"class.v8::internal::MapUpdater"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::TransitionsAccessor", align 8
  %3 = bitcast %"class.v8::internal::TransitionsAccessor"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %3) #5
  %4 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 0
  %5 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 4, i32 0, i32 0
  %7 = load i64*, i64** %6, align 8
  %8 = ptrtoint i64* %7 to i64
  %9 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %2, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %5, %"class.v8::internal::Isolate"** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %2, i64 0, i32 1
  %11 = bitcast %"class.v8::internal::Handle.1128"* %10 to i64*
  store i64 %8, i64* %11, align 8
  %12 = load i64, i64* %7, align 8
  %13 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %2, i64 0, i32 3, i32 0, i32 0
  store i64 0, i64* %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %2, i64 0, i32 5
  store i8 0, i8* %15, align 4
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %5, i64 0, i32 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = add i64 %12, 35
  %19 = inttoptr i64 %18 to i32*
  %20 = load atomic i32, i32* %19 acquire, align 4
  %21 = and i64 %17, 4294967295
  %22 = icmp eq i64 %21, 0
  tail call void @llvm.assume(i1 %22) #5
  %23 = zext i32 %20 to i64
  %24 = or i64 %17, %23
  store i64 %24, i64* %14, align 8
  %25 = and i64 %23, 1
  %26 = icmp eq i64 %25, 0
  %27 = icmp eq i32 %20, 3
  %28 = or i1 %27, %26
  br i1 %28, label %29, label %31

29:                                               ; preds = %1
  %30 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %2, i64 0, i32 4
  store i32 1, i32* %30, align 8
  br label %59

31:                                               ; preds = %1
  %32 = and i64 %23, 3
  switch i64 %32, label %58 [
    i64 3, label %33
    i64 1, label %35
  ]

33:                                               ; preds = %31
  %34 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %2, i64 0, i32 4
  store i32 3, i32* %34, align 8
  br label %59

35:                                               ; preds = %31
  %36 = add i64 %24, -1
  %37 = inttoptr i64 %36 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = zext i32 %38 to i64
  %40 = or i64 %17, %39
  %41 = add i64 %40, 7
  %42 = inttoptr i64 %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = icmp eq i16 %43, 160
  br i1 %44, label %45, label %47

45:                                               ; preds = %35
  %46 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %2, i64 0, i32 4
  store i32 4, i32* %46, align 8
  br label %59

47:                                               ; preds = %35
  %48 = load atomic i32, i32* %37 monotonic, align 4
  %49 = zext i32 %48 to i64
  %50 = or i64 %17, %49
  %51 = add i64 %50, 7
  %52 = inttoptr i64 %51 to i16*
  %53 = load atomic i16, i16* %52 monotonic, align 2
  %54 = icmp eq i16 %53, 110
  %55 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %2, i64 0, i32 4
  br i1 %54, label %56, label %57

56:                                               ; preds = %47
  store i32 0, i32* %55, align 8
  br label %59

57:                                               ; preds = %47
  store i32 2, i32* %55, align 8
  br label %59

58:                                               ; preds = %31
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i64 0, i64 0)) #11
  unreachable

59:                                               ; preds = %29, %33, %45, %56, %57
  %60 = call zeroext i1 @_ZN2v88internal19TransitionsAccessor22CanHaveMoreTransitionsEv(%"class.v8::internal::TransitionsAccessor"* nonnull %2) #5
  %61 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %4, align 8
  br i1 %60, label %68, label %62

62:                                               ; preds = %59
  %63 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 1, i32 0, i32 0
  %64 = load i64*, i64** %63, align 8
  %65 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 12
  %66 = load i8, i8* %65, align 4
  %67 = call i64* @_ZN2v88internal3Map9NormalizeEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindENS0_25PropertyNormalizationModeEPKc(%"class.v8::internal::Isolate"* %61, i64* %64, i8 zeroext %66, i32 0, i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.13, i64 0, i64 0)) #5
  br label %83

68:                                               ; preds = %59
  %69 = load i64*, i64** %6, align 8
  %70 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 8
  %71 = load i32, i32* %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 9, i32 0, i32 0
  %73 = load i64*, i64** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 1, i32 0, i32 0
  %75 = load i64*, i64** %74, align 8
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, 10
  %78 = inttoptr i64 %77 to i8*
  %79 = load i8, i8* %78, align 1
  %80 = and i8 %79, -4
  %81 = icmp eq i8 %80, 48
  %82 = call i64* @_ZN2v88internal3Map24CopyForPreventExtensionsEPNS0_7IsolateENS0_6HandleIS1_EENS0_18PropertyAttributesENS4_INS0_6SymbolEEEPKcb(%"class.v8::internal::Isolate"* %61, i64* %69, i32 %71, i64* %73, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.15, i64 0, i64 0), i1 zeroext %81) #5
  br label %83

83:                                               ; preds = %68, %62
  %84 = phi i64* [ %82, %68 ], [ %67, %62 ]
  %85 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 5, i32 0, i32 0
  store i64* %84, i64** %85, align 8
  %86 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 11
  store i32 4, i32* %86, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %3) #5
  ret i32 4
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10MapUpdater23ReconfigureElementsKindENS0_12ElementsKindE(%"class.v8::internal::MapUpdater"*, i8 zeroext) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %4, i64 0, i32 20
  tail call void @_ZN2v84base11SharedMutex13LockExclusiveEv(%"class.v8::base::SharedMutex"* %5) #5
  %6 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 12
  store i8 %1, i8* %6, align 4
  %7 = icmp ult i8 %1, 6
  %8 = icmp ne i8 %1, 3
  %9 = and i1 %7, %8
  %10 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 13
  %11 = zext i1 %9 to i8
  store i8 %11, i8* %10, align 1
  %12 = tail call i32 @_ZN2v88internal10MapUpdater11FindRootMapEv(%"class.v8::internal::MapUpdater"* %0)
  %13 = icmp eq i32 %12, 4
  br i1 %13, label %22, label %14

14:                                               ; preds = %2
  %15 = tail call i32 @_ZN2v88internal10MapUpdater13FindTargetMapEv(%"class.v8::internal::MapUpdater"* %0)
  %16 = icmp eq i32 %15, 4
  br i1 %16, label %22, label %17

17:                                               ; preds = %14
  %18 = tail call i32 @_ZN2v88internal10MapUpdater15ConstructNewMapEv(%"class.v8::internal::MapUpdater"* %0)
  %19 = icmp eq i32 %18, 3
  br i1 %19, label %20, label %22

20:                                               ; preds = %17
  %21 = tail call i32 @_ZN2v88internal10MapUpdater43ConstructNewMapWithIntegrityLevelTransitionEv(%"class.v8::internal::MapUpdater"* %0)
  br label %22

22:                                               ; preds = %17, %20, %14, %2
  %23 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 5, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  tail call void @_ZN2v84base11SharedMutex15UnlockExclusiveEv(%"class.v8::base::SharedMutex"* %5) #5
  ret i64* %24
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10MapUpdater6UpdateEv(%"class.v8::internal::MapUpdater"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 0
  %3 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3, i64 0, i32 20
  tail call void @_ZN2v84base11SharedMutex13LockExclusiveEv(%"class.v8::base::SharedMutex"* %4) #5
  %5 = tail call i32 @_ZN2v88internal10MapUpdater11FindRootMapEv(%"class.v8::internal::MapUpdater"* %0) #5
  %6 = icmp eq i32 %5, 4
  br i1 %6, label %15, label %7

7:                                                ; preds = %1
  %8 = tail call i32 @_ZN2v88internal10MapUpdater13FindTargetMapEv(%"class.v8::internal::MapUpdater"* %0) #5
  %9 = icmp eq i32 %8, 4
  br i1 %9, label %15, label %10

10:                                               ; preds = %7
  %11 = tail call i32 @_ZN2v88internal10MapUpdater15ConstructNewMapEv(%"class.v8::internal::MapUpdater"* %0) #5
  %12 = icmp eq i32 %11, 3
  br i1 %12, label %13, label %15

13:                                               ; preds = %10
  %14 = tail call i32 @_ZN2v88internal10MapUpdater43ConstructNewMapWithIntegrityLevelTransitionEv(%"class.v8::internal::MapUpdater"* %0) #5
  br label %15

15:                                               ; preds = %1, %7, %10, %13
  %16 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 5, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  tail call void @_ZN2v84base11SharedMutex15UnlockExclusiveEv(%"class.v8::base::SharedMutex"* %4) #5
  ret i64* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10MapUpdater10UpdateImplEv(%"class.v8::internal::MapUpdater"*) local_unnamed_addr #0 align 2 {
  %2 = tail call i32 @_ZN2v88internal10MapUpdater11FindRootMapEv(%"class.v8::internal::MapUpdater"* %0)
  %3 = icmp eq i32 %2, 4
  br i1 %3, label %12, label %4

4:                                                ; preds = %1
  %5 = tail call i32 @_ZN2v88internal10MapUpdater13FindTargetMapEv(%"class.v8::internal::MapUpdater"* %0)
  %6 = icmp eq i32 %5, 4
  br i1 %6, label %12, label %7

7:                                                ; preds = %4
  %8 = tail call i32 @_ZN2v88internal10MapUpdater15ConstructNewMapEv(%"class.v8::internal::MapUpdater"* %0)
  %9 = icmp eq i32 %8, 3
  br i1 %9, label %10, label %12

10:                                               ; preds = %7
  %11 = tail call i32 @_ZN2v88internal10MapUpdater43ConstructNewMapWithIntegrityLevelTransitionEv(%"class.v8::internal::MapUpdater"* %0)
  br label %12

12:                                               ; preds = %7, %10, %4, %1
  %13 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 5, i32 0, i32 0
  %14 = load i64*, i64** %13, align 8
  ret i64* %14
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10MapUpdater15GeneralizeFieldENS0_6HandleINS0_3MapEEENS0_13InternalIndexENS0_17PropertyConstnessENS0_14RepresentationENS2_INS0_9FieldTypeEEE(%"class.v8::internal::MapUpdater"* nocapture readonly, i64*, i64, i32, i8, i64*) local_unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 0
  %8 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %7, align 8
  tail call void @_ZN2v88internal10MapUpdater15GeneralizeFieldEPNS0_7IsolateENS0_6HandleINS0_3MapEEENS0_13InternalIndexENS0_17PropertyConstnessENS0_14RepresentationENS4_INS0_9FieldTypeEEE(%"class.v8::internal::Isolate"* %8, i64* %1, i64 %2, i32 %3, i8 %4, i64* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10MapUpdater15GeneralizeFieldEPNS0_7IsolateENS0_6HandleINS0_3MapEEENS0_13InternalIndexENS0_17PropertyConstnessENS0_14RepresentationENS4_INS0_9FieldTypeEEE(%"class.v8::internal::Isolate"*, i64*, i64, i32, i8, i64*) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", align 8
  %9 = alloca %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", align 8
  %10 = alloca %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", align 8
  %11 = alloca %"class.v8::internal::MaybeObjectHandle", align 8
  %12 = alloca %"class.v8::internal::DependentCode", align 8
  %13 = alloca %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", align 8
  %14 = alloca %"class.v8::internal::DependentCode", align 8
  %15 = alloca %"class.v8::internal::DependentCode", align 8
  %16 = load i64, i64* %1, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %18 = load i64, i64* %17, align 8
  %19 = add i64 %16, 23
  %20 = inttoptr i64 %19 to i32*
  %21 = load i32, i32* %20, align 4
  %22 = and i64 %18, 4294967295
  %23 = icmp eq i64 %22, 0
  tail call void @llvm.assume(i1 %23) #5
  %24 = zext i32 %21 to i64
  %25 = or i64 %18, %24
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %27 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %28 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %6
  %30 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %27, i64 %25) #5
  %31 = load i64, i64* %30, align 8
  br label %45

32:                                               ; preds = %6
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %34 = load i64*, i64** %33, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %36 = load i64*, i64** %35, align 8
  %37 = icmp eq i64* %34, %36
  br i1 %37, label %38, label %40

38:                                               ; preds = %32
  %39 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #5
  br label %40

40:                                               ; preds = %38, %32
  %41 = phi i64* [ %39, %38 ], [ %34, %32 ]
  %42 = ptrtoint i64* %41 to i64
  %43 = add i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  store i64* %44, i64** %33, align 8
  store i64 %25, i64* %41, align 8
  br label %45

45:                                               ; preds = %29, %40
  %46 = phi i64 [ %31, %29 ], [ %25, %40 ]
  %47 = mul i64 %2, 51539607552
  %48 = add i64 %47, 68719476736
  %49 = ashr exact i64 %48, 32
  %50 = or i64 %49, 3
  %51 = add i64 %46, %50
  %52 = inttoptr i64 %51 to i32*
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = ashr i32 %53, 1
  %55 = lshr i32 %54, 2
  %56 = and i32 %55, 1
  %57 = lshr i32 %54, 6
  %58 = trunc i32 %57 to i8
  %59 = and i8 %58, 7
  %60 = and i64 %46, -4294967296
  %61 = add nsw i64 %49, 7
  %62 = add i64 %61, %46
  %63 = inttoptr i64 %62 to i32*
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %60, %65
  %67 = tail call i64 @_ZN2v88internal3Map15UnwrapFieldTypeENS0_11MaybeObjectE(i64 %66) #5
  %68 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %69 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %45
  %71 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %68, i64 %67) #5
  br label %85

72:                                               ; preds = %45
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %74 = load i64*, i64** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %76 = load i64*, i64** %75, align 8
  %77 = icmp eq i64* %74, %76
  br i1 %77, label %78, label %80

78:                                               ; preds = %72
  %79 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #5
  br label %80

80:                                               ; preds = %78, %72
  %81 = phi i64* [ %79, %78 ], [ %74, %72 ]
  %82 = ptrtoint i64* %81 to i64
  %83 = add i64 %82, 8
  %84 = inttoptr i64 %83 to i64*
  store i64* %84, i64** %73, align 8
  store i64 %67, i64* %81, align 8
  br label %85

85:                                               ; preds = %70, %80
  %86 = phi i64* [ %71, %70 ], [ %81, %80 ]
  %87 = icmp eq i32 %56, 0
  %88 = icmp eq i32 %3, 1
  %89 = or i1 %88, %87
  %90 = bitcast %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %90) #5
  %91 = icmp eq i8 %59, %4
  %92 = and i1 %89, %91
  br i1 %92, label %93, label %106

93:                                               ; preds = %85
  %94 = load i64, i64* %5, align 8
  %95 = tail call i64 @_ZN2v88internal9FieldType4NoneEv() #5
  %96 = trunc i64 %94 to i32
  %97 = trunc i64 %95 to i32
  %98 = icmp eq i32 %96, %97
  %99 = icmp eq i8 %4, 3
  %100 = and i1 %99, %98
  br i1 %100, label %106, label %101

101:                                              ; preds = %93
  %102 = load i64, i64* %5, align 8
  %103 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %9, i64 0, i32 0
  %105 = call zeroext i1 @_ZNK2v88internal9FieldType5NowIsENS0_6HandleIS1_EE(%"class.v8::internal::FieldType"* nonnull %104, i64* %86) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #5
  br i1 %105, label %300, label %107

106:                                              ; preds = %85, %93
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %90) #5
  br label %107

107:                                              ; preds = %106, %101
  %108 = bitcast %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #5
  %109 = load i64, i64* %1, align 8
  %110 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Map>::ObjectRef"* %10, i64 0, i32 0
  %112 = call i64 @_ZNK2v88internal3Map14FindFieldOwnerEPNS0_7IsolateENS0_13InternalIndexE(%"class.v8::internal::Map"* nonnull %111, %"class.v8::internal::Isolate"* %0, i64 %2) #5
  %113 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %114 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %113, null
  br i1 %114, label %117, label %115

115:                                              ; preds = %107
  %116 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %113, i64 %112) #5
  br label %130

117:                                              ; preds = %107
  %118 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %119 = load i64*, i64** %118, align 8
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %121 = load i64*, i64** %120, align 8
  %122 = icmp eq i64* %119, %121
  br i1 %122, label %123, label %125

123:                                              ; preds = %117
  %124 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #5
  br label %125

125:                                              ; preds = %123, %117
  %126 = phi i64* [ %124, %123 ], [ %119, %117 ]
  %127 = ptrtoint i64* %126 to i64
  %128 = add i64 %127, 8
  %129 = inttoptr i64 %128 to i64*
  store i64* %129, i64** %118, align 8
  store i64 %112, i64* %126, align 8
  br label %130

130:                                              ; preds = %115, %125
  %131 = phi i64* [ %116, %115 ], [ %126, %125 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #5
  %132 = load i64, i64* %131, align 8
  %133 = load i64, i64* %17, align 8
  %134 = add i64 %132, 23
  %135 = inttoptr i64 %134 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = and i64 %133, 4294967295
  %138 = icmp eq i64 %137, 0
  call void @llvm.assume(i1 %138) #5
  %139 = zext i32 %136 to i64
  %140 = or i64 %133, %139
  %141 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %142 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %141, null
  br i1 %142, label %145, label %143

143:                                              ; preds = %130
  %144 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %141, i64 %140) #5
  br label %158

145:                                              ; preds = %130
  %146 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %147 = load i64*, i64** %146, align 8
  %148 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %149 = load i64*, i64** %148, align 8
  %150 = icmp eq i64* %147, %149
  br i1 %150, label %151, label %153

151:                                              ; preds = %145
  %152 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #5
  br label %153

153:                                              ; preds = %151, %145
  %154 = phi i64* [ %152, %151 ], [ %147, %145 ]
  %155 = ptrtoint i64* %154 to i64
  %156 = add i64 %155, 8
  %157 = inttoptr i64 %156 to i64*
  store i64* %157, i64** %146, align 8
  store i64 %140, i64* %154, align 8
  br label %158

158:                                              ; preds = %143, %153
  %159 = phi i64* [ %144, %143 ], [ %154, %153 ]
  %160 = load i64, i64* %86, align 8
  %161 = call i64 @_ZN2v88internal9FieldType4NoneEv() #5
  %162 = trunc i64 %160 to i32
  %163 = trunc i64 %161 to i32
  %164 = icmp eq i32 %162, %163
  %165 = icmp eq i8 %59, 3
  %166 = and i1 %165, %164
  br i1 %166, label %175, label %167

167:                                              ; preds = %158
  %168 = load i64, i64* %5, align 8
  %169 = call i64 @_ZN2v88internal9FieldType4NoneEv() #5
  %170 = trunc i64 %168 to i32
  %171 = trunc i64 %169 to i32
  %172 = icmp eq i32 %170, %171
  %173 = icmp eq i8 %4, 3
  %174 = and i1 %173, %172
  br i1 %174, label %175, label %177

175:                                              ; preds = %167, %158
  %176 = call i64* @_ZN2v88internal9FieldType3AnyEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #5
  br label %191

177:                                              ; preds = %167
  %178 = bitcast %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %178) #5
  %179 = load i64, i64* %86, align 8
  %180 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %179, i64* %180, align 8
  %181 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %7, i64 0, i32 0
  %182 = call zeroext i1 @_ZNK2v88internal9FieldType5NowIsENS0_6HandleIS1_EE(%"class.v8::internal::FieldType"* nonnull %181, i64* %5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %178) #5
  br i1 %182, label %191, label %183

183:                                              ; preds = %177
  %184 = bitcast %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #5
  %185 = load i64, i64* %5, align 8
  %186 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %185, i64* %186, align 8
  %187 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %8, i64 0, i32 0
  %188 = call zeroext i1 @_ZNK2v88internal9FieldType5NowIsENS0_6HandleIS1_EE(%"class.v8::internal::FieldType"* nonnull %187, i64* %86) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #5
  br i1 %188, label %191, label %189

189:                                              ; preds = %183
  %190 = call i64* @_ZN2v88internal9FieldType3AnyEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #5
  br label %191

191:                                              ; preds = %175, %177, %183, %189
  %192 = phi i64* [ %176, %175 ], [ %190, %189 ], [ %5, %177 ], [ %86, %183 ]
  %193 = select i1 %87, i32 0, i32 %3
  %194 = load i64, i64* %159, align 8
  %195 = add i64 %194, %50
  %196 = inttoptr i64 %195 to i32*
  %197 = load atomic i32, i32* %196 monotonic, align 4
  %198 = lshr i32 %197, 7
  %199 = and i64 %194, -4294967296
  %200 = add nsw i64 %49, -1
  %201 = add i64 %200, %194
  %202 = inttoptr i64 %201 to i32*
  %203 = load atomic i32, i32* %202 monotonic, align 4
  %204 = zext i32 %203 to i64
  %205 = or i64 %199, %204
  %206 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %207 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %206, null
  br i1 %207, label %210, label %208

208:                                              ; preds = %191
  %209 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %206, i64 %205) #5
  br label %223

210:                                              ; preds = %191
  %211 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %212 = load i64*, i64** %211, align 8
  %213 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %214 = load i64*, i64** %213, align 8
  %215 = icmp eq i64* %212, %214
  br i1 %215, label %216, label %218

216:                                              ; preds = %210
  %217 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #5
  br label %218

218:                                              ; preds = %216, %210
  %219 = phi i64* [ %217, %216 ], [ %212, %210 ]
  %220 = ptrtoint i64* %219 to i64
  %221 = add i64 %220, 8
  %222 = inttoptr i64 %221 to i64*
  store i64* %222, i64** %211, align 8
  store i64 %205, i64* %219, align 8
  br label %223

223:                                              ; preds = %208, %218
  %224 = phi i64* [ %209, %208 ], [ %219, %218 ]
  %225 = bitcast %"class.v8::internal::MaybeObjectHandle"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %225) #5
  %226 = call { i32, i64* } @_ZN2v88internal3Map13WrapFieldTypeEPNS0_7IsolateENS0_6HandleINS0_9FieldTypeEEE(%"class.v8::internal::Isolate"* %0, i64* %192) #5
  %227 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %11, i64 0, i32 0
  %228 = extractvalue { i32, i64* } %226, 0
  store i32 %228, i32* %227, align 8
  %229 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %11, i64 0, i32 1, i32 0
  %230 = extractvalue { i32, i64* } %226, 1
  store i64* %230, i64** %229, align 8
  call void @_ZN2v88internal10MapUpdater15UpdateFieldTypeEPNS0_7IsolateENS0_6HandleINS0_3MapEEENS0_13InternalIndexENS4_INS0_4NameEEENS0_17PropertyConstnessENS0_14RepresentationERKNS0_17MaybeObjectHandleE(%"class.v8::internal::Isolate"* %0, i64* %131, i64 %2, i64* %224, i32 %193, i8 %4, %"class.v8::internal::MaybeObjectHandle"* nonnull dereferenceable(16) %11)
  %231 = icmp eq i32 %193, %56
  br i1 %231, label %242, label %232

232:                                              ; preds = %223
  %233 = bitcast %"class.v8::internal::DependentCode"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %233) #5
  %234 = load i64, i64* %131, align 8
  %235 = and i64 %234, -4294967296
  %236 = add i64 %234, 27
  %237 = inttoptr i64 %236 to i32*
  %238 = load i32, i32* %237, align 4
  %239 = zext i32 %238 to i64
  %240 = or i64 %235, %239
  %241 = getelementptr inbounds %"class.v8::internal::DependentCode", %"class.v8::internal::DependentCode"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %240, i64* %241, align 8
  call void @_ZN2v88internal13DependentCode28DeoptimizeDependentCodeGroupENS1_15DependencyGroupE(%"class.v8::internal::DependentCode"* nonnull %12, i32 4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233) #5
  br label %242

242:                                              ; preds = %223, %232
  %243 = bitcast %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %243) #5
  %244 = load i64, i64* %192, align 8
  %245 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %13, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %244, i64* %245, align 8
  %246 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %13, i64 0, i32 0
  %247 = load i64, i64* %86, align 8
  %248 = call zeroext i1 @_ZNK2v88internal9FieldType6EqualsES1_(%"class.v8::internal::FieldType"* nonnull %246, i64 %247) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %243) #5
  br i1 %248, label %259, label %249

249:                                              ; preds = %242
  %250 = bitcast %"class.v8::internal::DependentCode"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %250) #5
  %251 = load i64, i64* %131, align 8
  %252 = and i64 %251, -4294967296
  %253 = add i64 %251, 27
  %254 = inttoptr i64 %253 to i32*
  %255 = load i32, i32* %254, align 4
  %256 = zext i32 %255 to i64
  %257 = or i64 %252, %256
  %258 = getelementptr inbounds %"class.v8::internal::DependentCode", %"class.v8::internal::DependentCode"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %257, i64* %258, align 8
  call void @_ZN2v88internal13DependentCode28DeoptimizeDependentCodeGroupENS1_15DependencyGroupE(%"class.v8::internal::DependentCode"* nonnull %14, i32 3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %250) #5
  br label %259

259:                                              ; preds = %242, %249
  %260 = icmp eq i8 %59, %4
  br i1 %260, label %271, label %261

261:                                              ; preds = %259
  %262 = bitcast %"class.v8::internal::DependentCode"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %262) #5
  %263 = load i64, i64* %131, align 8
  %264 = and i64 %263, -4294967296
  %265 = add i64 %263, 27
  %266 = inttoptr i64 %265 to i32*
  %267 = load i32, i32* %266, align 4
  %268 = zext i32 %267 to i64
  %269 = or i64 %264, %268
  %270 = getelementptr inbounds %"class.v8::internal::DependentCode", %"class.v8::internal::DependentCode"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %269, i64* %270, align 8
  call void @_ZN2v88internal13DependentCode28DeoptimizeDependentCodeGroupENS1_15DependencyGroupE(%"class.v8::internal::DependentCode"* nonnull %15, i32 5) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %262) #5
  br label %271

271:                                              ; preds = %261, %259
  %272 = load i8, i8* @_ZN2v88internal25FLAG_trace_generalizationE, align 1, !range !2
  %273 = icmp eq i8 %272, 0
  br i1 %273, label %299, label %274

274:                                              ; preds = %271
  %275 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %276 = load i64, i64* %1, align 8
  %277 = add i64 %276, 11
  %278 = inttoptr i64 %277 to i32*
  %279 = load atomic i32, i32* %278 acquire, align 4
  %280 = lshr i32 %279, 10
  %281 = and i32 %280, 1023
  %282 = load i64, i64* %1, align 8
  %283 = add i64 %282, 11
  %284 = inttoptr i64 %283 to i32*
  %285 = load atomic i32, i32* %284 acquire, align 4
  %286 = lshr i32 %285, 10
  %287 = and i32 %286, 1023
  %288 = trunc i32 %198 to i8
  %289 = and i8 %288, 7
  %290 = load i64, i64* %159, align 8
  %291 = add i64 %290, %50
  %292 = inttoptr i64 %291 to i32*
  %293 = load atomic i32, i32* %292 monotonic, align 4
  %294 = lshr i32 %293, 7
  %295 = trunc i32 %294 to i8
  %296 = and i8 %295, 7
  %297 = ptrtoint i64* %86 to i64
  %298 = ptrtoint i64* %192 to i64
  call fastcc void @_ZN2v88internal12_GLOBAL__N_119PrintGeneralizationEPNS0_7IsolateENS0_6HandleINS0_3MapEEEP8_IO_FILEPKcNS0_13InternalIndexEiibNS0_14RepresentationESC_NS0_17PropertyConstnessESD_NS0_11MaybeHandleINS0_9FieldTypeEEENSE_INS0_6ObjectEEESG_SI_(%"class.v8::internal::Isolate"* %0, i64* %1, %struct._IO_FILE* %275, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.17, i64 0, i64 0), i64 %2, i32 %281, i32 %287, i1 zeroext false, i8 %289, i8 %296, i32 %56, i32 %193, i64 %297, i64 0, i64 %298, i64 0)
  br label %299

299:                                              ; preds = %271, %274
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %225) #5
  br label %300

300:                                              ; preds = %101, %299
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal10MapUpdater9NormalizeEPKc(%"class.v8::internal::MapUpdater"* nocapture, i8*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 0
  %4 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 12
  %8 = load i8, i8* %7, align 4
  %9 = tail call i64* @_ZN2v88internal3Map9NormalizeEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindENS0_25PropertyNormalizationModeEPKc(%"class.v8::internal::Isolate"* %4, i64* %6, i8 zeroext %8, i32 0, i8* %1) #5
  %10 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 5, i32 0, i32 0
  store i64* %9, i64** %10, align 8
  %11 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 11
  store i32 4, i32* %11, align 8
  ret i32 4
}

declare i64* @_ZN2v88internal3Map9NormalizeEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindENS0_25PropertyNormalizationModeEPKc(%"class.v8::internal::Isolate"*, i64*, i8 zeroext, i32, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10MapUpdater18ShrinkInstanceSizeEPNS_4base11SharedMutexENS0_3MapEi(%"class.v8::base::SharedMutex"*, i64, i32) local_unnamed_addr #0 align 2 {
  tail call void @_ZN2v84base11SharedMutex13LockExclusiveEv(%"class.v8::base::SharedMutex"* %0) #5
  %4 = add i64 %1, 3
  %5 = inttoptr i64 %4 to i8*
  %6 = load atomic i8, i8* %5 monotonic, align 1
  %7 = zext i8 %6 to i32
  %8 = sub i32 %7, %2
  %9 = shl i32 %8, 2
  %10 = ashr exact i32 %9, 2
  %11 = icmp ult i32 %10, 256
  br i1 %11, label %13, label %12, !prof !3

12:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.19, i64 0, i64 0)) #11
  unreachable

13:                                               ; preds = %3
  %14 = trunc i32 %10 to i8
  store atomic volatile i8 %14, i8* %5 monotonic, align 1
  tail call void @_ZN2v84base11SharedMutex15UnlockExclusiveEv(%"class.v8::base::SharedMutex"* %0) #5
  %15 = add i64 %1, 11
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 536870911
  store atomic volatile i32 %18, i32* %16 monotonic, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN2v88internal12_GLOBAL__N_119PrintGeneralizationEPNS0_7IsolateENS0_6HandleINS0_3MapEEEP8_IO_FILEPKcNS0_13InternalIndexEiibNS0_14RepresentationESC_NS0_17PropertyConstnessESD_NS0_11MaybeHandleINS0_9FieldTypeEEENSE_INS0_6ObjectEEESG_SI_(%"class.v8::internal::Isolate"*, i64*, %struct._IO_FILE*, i8*, i64, i32, i32, i1 zeroext, i8, i8, i32, i32, i64, i64, i64, i64) unnamed_addr #0 {
  %17 = alloca %"class.v8::internal::OFStream", align 8
  %18 = alloca %"class.v8::internal::String", align 8
  %19 = alloca %"struct.v8::internal::Brief", align 8
  %20 = alloca %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", align 8
  %21 = alloca %"struct.v8::internal::Brief", align 8
  %22 = alloca %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", align 8
  %23 = inttoptr i64 %12 to i64*
  %24 = inttoptr i64 %13 to i64*
  %25 = inttoptr i64 %14 to i64*
  %26 = inttoptr i64 %15 to i64*
  %27 = bitcast %"class.v8::internal::OFStream"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %27) #5
  call void @_ZN2v88internal8OFStreamC1EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %17, %struct._IO_FILE* %2) #5
  %28 = bitcast %"class.v8::internal::OFStream"* %17 to %"class.std::__1::basic_ostream"*
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %28, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.20, i64 0, i64 0), i64 14) #5
  %30 = load i64, i64* %1, align 8
  %31 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %32 = load i64, i64* %31, align 8
  %33 = add i64 %30, 23
  %34 = inttoptr i64 %33 to i32*
  %35 = load i32, i32* %34, align 4
  %36 = and i64 %32, 4294967295
  %37 = icmp eq i64 %36, 0
  call void @llvm.assume(i1 %37) #5
  %38 = zext i32 %35 to i64
  %39 = or i64 %32, %38
  %40 = mul i64 %4, 51539607552
  %41 = add i64 %40, 68719476736
  %42 = ashr exact i64 %41, 32
  %43 = add nsw i64 %42, -1
  %44 = add i64 %43, %39
  %45 = inttoptr i64 %44 to i32*
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = zext i32 %46 to i64
  %48 = or i64 %32, %47
  %49 = add i64 %48, -1
  %50 = inttoptr i64 %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = zext i32 %51 to i64
  %53 = or i64 %32, %52
  %54 = add i64 %53, 7
  %55 = inttoptr i64 %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = icmp ult i16 %56, 64
  br i1 %57, label %58, label %61

58:                                               ; preds = %16
  %59 = bitcast %"class.v8::internal::String"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %59) #5
  %60 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %48, i64* %60, align 8
  call void @_ZN2v88internal6String7PrintOnEP8_IO_FILE(%"class.v8::internal::String"* nonnull %18, %struct._IO_FILE* %2) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %59) #5
  br label %66

61:                                               ; preds = %16
  %62 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %28, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i64 0, i64 0), i64 8) #5
  %63 = inttoptr i64 %48 to i8*
  %64 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %62, i8* %63) #5
  %65 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %64, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0), i64 1) #5
  br label %66

66:                                               ; preds = %61, %58
  %67 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.23, i64 0, i64 0), i64 1) #5
  br i1 %7, label %68, label %70

68:                                               ; preds = %66
  %69 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0), i64 1) #5
  br label %98

70:                                               ; preds = %66
  %71 = icmp ult i8 %8, 6
  br i1 %71, label %73, label %72

72:                                               ; preds = %70
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i64 0, i64 0)) #11
  unreachable

73:                                               ; preds = %70
  %74 = sext i8 %8 to i64
  %75 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table._ZN2v88internal12_GLOBAL__N_119PrintGeneralizationEPNS0_7IsolateENS0_6HandleINS0_3MapEEEP8_IO_FILEPKcNS0_13InternalIndexEiibNS0_14RepresentationESC_NS0_17PropertyConstnessESD_NS0_11MaybeHandleINS0_9FieldTypeEEENSE_INS0_6ObjectEEESG_SI_.48, i64 0, i64 %74
  %76 = load i8*, i8** %75, align 8
  %77 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %28, i8* nonnull %76, i64 1) #5
  %78 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %77, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0), i64 1) #5
  %79 = icmp eq i64 %12, 0
  br i1 %79, label %80, label %88

80:                                               ; preds = %73
  %81 = bitcast %"struct.v8::internal::Brief"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #5
  %82 = icmp eq i64 %13, 0
  br i1 %82, label %83, label %84, !prof !4

83:                                               ; preds = %80
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.41, i64 0, i64 0)) #11
  unreachable

84:                                               ; preds = %80
  %85 = load i64, i64* %24, align 8
  %86 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %19, i64 0, i32 0
  store i64 %85, i64* %86, align 8
  %87 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %28, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %19) #5
  br label %93

88:                                               ; preds = %73
  %89 = bitcast %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %89) #5
  %90 = load i64, i64* %23, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %20, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %90, i64* %91, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %20, i64 0, i32 0
  call void @_ZNK2v88internal9FieldType7PrintToERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::FieldType"* nonnull %92, %"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %28) #5
  br label %93

93:                                               ; preds = %88, %84
  %94 = phi i8* [ %89, %88 ], [ %81, %84 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #5
  %95 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26, i64 0, i64 0), i64 1) #5
  %96 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEENS0_17PropertyConstnessE(%"class.std::__1::basic_ostream"* dereferenceable(160) %95, i32 %10) #5
  %97 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %96, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0), i64 1) #5
  br label %98

98:                                               ; preds = %93, %68
  %99 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.27, i64 0, i64 0), i64 2) #5
  %100 = icmp ult i8 %9, 6
  br i1 %100, label %102, label %101

101:                                              ; preds = %98
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i64 0, i64 0)) #11
  unreachable

102:                                              ; preds = %98
  %103 = sext i8 %9 to i64
  %104 = getelementptr inbounds [6 x i8*], [6 x i8*]* @switch.table._ZN2v88internal12_GLOBAL__N_119PrintGeneralizationEPNS0_7IsolateENS0_6HandleINS0_3MapEEEP8_IO_FILEPKcNS0_13InternalIndexEiibNS0_14RepresentationESC_NS0_17PropertyConstnessESD_NS0_11MaybeHandleINS0_9FieldTypeEEENSE_INS0_6ObjectEEESG_SI_.48, i64 0, i64 %103
  %105 = load i8*, i8** %104, align 8
  %106 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %99, i8* nonnull %105, i64 1) #5
  %107 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %106, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.25, i64 0, i64 0), i64 1) #5
  %108 = icmp eq i64 %14, 0
  br i1 %108, label %109, label %117

109:                                              ; preds = %102
  %110 = bitcast %"struct.v8::internal::Brief"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #5
  %111 = icmp eq i64 %15, 0
  br i1 %111, label %112, label %113, !prof !4

112:                                              ; preds = %109
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.41, i64 0, i64 0)) #11
  unreachable

113:                                              ; preds = %109
  %114 = load i64, i64* %26, align 8
  %115 = getelementptr inbounds %"struct.v8::internal::Brief", %"struct.v8::internal::Brief"* %21, i64 0, i32 0
  store i64 %114, i64* %115, align 8
  %116 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %28, %"struct.v8::internal::Brief"* nonnull dereferenceable(8) %21) #5
  br label %122

117:                                              ; preds = %102
  %118 = bitcast %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %118) #5
  %119 = load i64, i64* %25, align 8
  %120 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %22, i64 0, i32 0
  call void @_ZNK2v88internal9FieldType7PrintToERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::FieldType"* nonnull %121, %"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %28) #5
  br label %122

122:                                              ; preds = %117, %113
  %123 = phi i8* [ %118, %117 ], [ %110, %113 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %123) #5
  %124 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.26, i64 0, i64 0), i64 1) #5
  %125 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEENS0_17PropertyConstnessE(%"class.std::__1::basic_ostream"* dereferenceable(160) %124, i32 %11) #5
  %126 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %125, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.28, i64 0, i64 0), i64 3) #5
  %127 = load i8, i8* %3, align 1
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %132, label %129

129:                                              ; preds = %122
  %130 = call i64 @strlen(i8* %3) #5
  %131 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %28, i8* %3, i64 %130) #5
  br label %137

132:                                              ; preds = %122
  %133 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %28, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.29, i64 0, i64 0), i64 1) #5
  %134 = sub nsw i32 %6, %5
  %135 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"* %133, i32 %134) #5
  %136 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %135, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.30, i64 0, i64 0), i64 5) #5
  br label %137

137:                                              ; preds = %132, %129
  %138 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %28, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.31, i64 0, i64 0), i64 3) #5
  call void @_ZN2v88internal15JavaScriptFrame8PrintTopEPNS0_7IsolateEP8_IO_FILEbb(%"class.v8::internal::Isolate"* %0, %struct._IO_FILE* %2, i1 zeroext false, i1 zeroext true) #5
  %139 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %28, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32, i64 0, i64 0), i64 2) #5
  %140 = bitcast %"class.v8::internal::OFStream"* %17 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %140, align 8
  %141 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %17, i64 0, i32 2
  %142 = bitcast %"class.std::__1::basic_ios.base"* %141 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %142, align 8
  %143 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %17, i64 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %143) #5
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %28, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #5
  %144 = bitcast %"class.std::__1::basic_ios.base"* %141 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %144) #5
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %27) #5
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN2v88internal10MapUpdater32TrySaveIntegrityLevelTransitionsEv(%"class.v8::internal::MapUpdater"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Symbol", align 8
  %3 = alloca %"class.v8::internal::TransitionsAccessor", align 8
  %4 = alloca %"class.v8::internal::TransitionsAccessor", align 8
  %5 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 1, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, -4294967296
  %9 = add i64 %7, 19
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = or i64 %8, %12
  %14 = and i64 %12, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %18

16:                                               ; preds = %1
  %17 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br label %44

18:                                               ; preds = %1
  %19 = add i64 %13, -1
  %20 = inttoptr i64 %19 to i32*
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %23 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %22, null
  br i1 %23, label %30, label %24

24:                                               ; preds = %18
  %25 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %22, i64 0, i32 0, i32 1
  %26 = load i8, i8* %25, align 8, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %22, i64 0, i32 1, i64 0
  br label %38

30:                                               ; preds = %24, %18
  %31 = and i64 %7, -262144
  %32 = or i64 %31, 16
  %33 = inttoptr i64 %32 to i64*
  %34 = load i64, i64* %33, align 16
  %35 = add i64 %34, -41416
  %36 = inttoptr i64 %35 to %"class.v8::internal::Isolate"*
  %37 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %36, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %38

38:                                               ; preds = %30, %28
  %39 = phi i64* [ %37, %30 ], [ %29, %28 ]
  %40 = getelementptr inbounds i64, i64* %39, i64 10
  %41 = load i64, i64* %40, align 8
  %42 = trunc i64 %41 to i32
  %43 = icmp eq i32 %21, %42
  br i1 %43, label %65, label %44

44:                                               ; preds = %38, %16
  %45 = phi %"class.v8::internal::SoleReadOnlyHeap"* [ %17, %16 ], [ %22, %38 ]
  %46 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %45, null
  br i1 %46, label %53, label %47

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %45, i64 0, i32 0, i32 1
  %49 = load i8, i8* %48, align 8, !range !2
  %50 = icmp eq i8 %49, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %45, i64 0, i32 1, i64 0
  br label %61

53:                                               ; preds = %47, %44
  %54 = and i64 %7, -262144
  %55 = or i64 %54, 16
  %56 = inttoptr i64 %55 to i64*
  %57 = load i64, i64* %56, align 16
  %58 = add i64 %57, -41416
  %59 = inttoptr i64 %58 to %"class.v8::internal::Isolate"*
  %60 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %59, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %61

61:                                               ; preds = %53, %51
  %62 = phi i64* [ %60, %53 ], [ %52, %51 ]
  %63 = getelementptr inbounds i64, i64* %62, i64 4
  %64 = load i64, i64* %63, align 8
  br label %65

65:                                               ; preds = %38, %61
  %66 = phi i64 [ %64, %61 ], [ %13, %38 ]
  %67 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 0
  %68 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %67, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %68, i64 0, i32 31, i32 4
  %70 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %69, align 8
  %71 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %70, null
  br i1 %71, label %75, label %72

72:                                               ; preds = %65
  %73 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %70, i64 %66) #5
  %74 = ptrtoint i64* %73 to i64
  br label %88

75:                                               ; preds = %65
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %68, i64 0, i32 31, i32 0
  %77 = load i64*, i64** %76, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %68, i64 0, i32 31, i32 1
  %79 = load i64*, i64** %78, align 8
  %80 = icmp eq i64* %77, %79
  br i1 %80, label %81, label %83

81:                                               ; preds = %75
  %82 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %68) #5
  br label %83

83:                                               ; preds = %81, %75
  %84 = phi i64* [ %82, %81 ], [ %77, %75 ]
  %85 = ptrtoint i64* %84 to i64
  %86 = add i64 %85, 8
  %87 = inttoptr i64 %86 to i64*
  store i64* %87, i64** %76, align 8
  store i64 %66, i64* %84, align 8
  br label %88

88:                                               ; preds = %72, %83
  %89 = phi i64 [ %74, %72 ], [ %85, %83 ]
  %90 = phi i64* [ %73, %72 ], [ %84, %83 ]
  %91 = bitcast %"class.v8::internal::Symbol"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #5
  %92 = getelementptr inbounds %"class.v8::internal::Symbol", %"class.v8::internal::Symbol"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %92, align 8
  %93 = bitcast %"class.v8::internal::TransitionsAccessor"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %93) #5
  %94 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %67, align 8
  %95 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %94, %"class.v8::internal::Isolate"** %95, align 8
  %96 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 1
  %97 = bitcast %"class.v8::internal::Handle.1128"* %96 to i64*
  store i64 %89, i64* %97, align 8
  %98 = load i64, i64* %90, align 8
  %99 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 3, i32 0, i32 0
  store i64 0, i64* %100, align 8
  %101 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 5
  store i8 0, i8* %101, align 4
  %102 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %94, i64 0, i32 0, i32 4
  %103 = load i64, i64* %102, align 8
  %104 = add i64 %98, 35
  %105 = inttoptr i64 %104 to i32*
  %106 = load atomic i32, i32* %105 acquire, align 4
  %107 = and i64 %103, 4294967295
  %108 = icmp eq i64 %107, 0
  tail call void @llvm.assume(i1 %108) #5
  %109 = zext i32 %106 to i64
  %110 = or i64 %103, %109
  store i64 %110, i64* %100, align 8
  %111 = and i64 %109, 1
  %112 = icmp eq i64 %111, 0
  %113 = icmp eq i32 %106, 3
  %114 = or i1 %113, %112
  br i1 %114, label %115, label %117

115:                                              ; preds = %88
  %116 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 4
  store i32 1, i32* %116, align 8
  br label %145

117:                                              ; preds = %88
  %118 = and i64 %109, 3
  switch i64 %118, label %144 [
    i64 3, label %119
    i64 1, label %121
  ]

119:                                              ; preds = %117
  %120 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 4
  store i32 3, i32* %120, align 8
  br label %145

121:                                              ; preds = %117
  %122 = add i64 %110, -1
  %123 = inttoptr i64 %122 to i32*
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = zext i32 %124 to i64
  %126 = or i64 %103, %125
  %127 = add i64 %126, 7
  %128 = inttoptr i64 %127 to i16*
  %129 = load atomic i16, i16* %128 monotonic, align 2
  %130 = icmp eq i16 %129, 160
  br i1 %130, label %131, label %133

131:                                              ; preds = %121
  %132 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 4
  store i32 4, i32* %132, align 8
  br label %145

133:                                              ; preds = %121
  %134 = load atomic i32, i32* %123 monotonic, align 4
  %135 = zext i32 %134 to i64
  %136 = or i64 %103, %135
  %137 = add i64 %136, 7
  %138 = inttoptr i64 %137 to i16*
  %139 = load atomic i16, i16* %138 monotonic, align 2
  %140 = icmp eq i16 %139, 110
  %141 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 4
  br i1 %140, label %142, label %143

142:                                              ; preds = %133
  store i32 0, i32* %141, align 8
  br label %145

143:                                              ; preds = %133
  store i32 2, i32* %141, align 8
  br label %145

144:                                              ; preds = %117
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i64 0, i64 0)) #11
  unreachable

145:                                              ; preds = %115, %119, %131, %142, %143
  %146 = load i64*, i64** %5, align 8
  %147 = load i64, i64* %146, align 8
  %148 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 8
  %149 = call zeroext i1 @_ZN2v88internal19TransitionsAccessor29HasIntegrityLevelTransitionToENS0_3MapEPNS0_6SymbolEPNS0_18PropertyAttributesE(%"class.v8::internal::TransitionsAccessor"* nonnull %3, i64 %147, %"class.v8::internal::Symbol"* nonnull %2, i32* %148) #5
  br i1 %149, label %150, label %374

150:                                              ; preds = %145
  %151 = load i64, i64* %92, align 8
  %152 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %67, align 8
  %153 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %152, i64 0, i32 31, i32 4
  %154 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %153, align 8
  %155 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %154, null
  br i1 %155, label %158, label %156

156:                                              ; preds = %150
  %157 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %154, i64 %151) #5
  br label %171

158:                                              ; preds = %150
  %159 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %152, i64 0, i32 31, i32 0
  %160 = load i64*, i64** %159, align 8
  %161 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %152, i64 0, i32 31, i32 1
  %162 = load i64*, i64** %161, align 8
  %163 = icmp eq i64* %160, %162
  br i1 %163, label %164, label %166

164:                                              ; preds = %158
  %165 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %152) #5
  br label %166

166:                                              ; preds = %164, %158
  %167 = phi i64* [ %165, %164 ], [ %160, %158 ]
  %168 = ptrtoint i64* %167 to i64
  %169 = add i64 %168, 8
  %170 = inttoptr i64 %169 to i64*
  store i64* %170, i64** %159, align 8
  store i64 %151, i64* %167, align 8
  br label %171

171:                                              ; preds = %156, %166
  %172 = phi i64* [ %157, %156 ], [ %167, %166 ]
  %173 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 9, i32 0, i32 0
  store i64* %172, i64** %173, align 8
  %174 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 10, i32 0, i32 0
  store i64* %90, i64** %174, align 8
  %175 = load i64, i64* %90, align 8
  %176 = add i64 %175, 11
  %177 = inttoptr i64 %176 to i32*
  %178 = load atomic i32, i32* %177 monotonic, align 4
  %179 = and i32 %178, 134217728
  %180 = icmp eq i32 %179, 0
  br i1 %180, label %181, label %324

181:                                              ; preds = %171
  %182 = bitcast %"class.v8::internal::TransitionsAccessor"* %4 to i8*
  %183 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %4, i64 0, i32 0
  %184 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %4, i64 0, i32 1
  %185 = bitcast %"class.v8::internal::Handle.1128"* %184 to i64*
  %186 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %187 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %4, i64 0, i32 3, i32 0, i32 0
  %188 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %4, i64 0, i32 5
  %189 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %4, i64 0, i32 4
  br label %190

190:                                              ; preds = %181, %316
  %191 = phi i64 [ %175, %181 ], [ %317, %316 ]
  %192 = and i64 %191, -4294967296
  %193 = add i64 %191, 19
  %194 = inttoptr i64 %193 to i32*
  %195 = load i32, i32* %194, align 4
  %196 = zext i32 %195 to i64
  %197 = or i64 %192, %196
  %198 = and i64 %196, 1
  %199 = icmp eq i64 %198, 0
  br i1 %199, label %200, label %202

200:                                              ; preds = %190
  %201 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br label %228

202:                                              ; preds = %190
  %203 = add i64 %197, -1
  %204 = inttoptr i64 %203 to i32*
  %205 = load atomic i32, i32* %204 monotonic, align 4
  %206 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %207 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %206, null
  br i1 %207, label %214, label %208

208:                                              ; preds = %202
  %209 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %206, i64 0, i32 0, i32 1
  %210 = load i8, i8* %209, align 8, !range !2
  %211 = icmp eq i8 %210, 0
  br i1 %211, label %214, label %212

212:                                              ; preds = %208
  %213 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %206, i64 0, i32 1, i64 0
  br label %222

214:                                              ; preds = %208, %202
  %215 = and i64 %191, -262144
  %216 = or i64 %215, 16
  %217 = inttoptr i64 %216 to i64*
  %218 = load i64, i64* %217, align 16
  %219 = add i64 %218, -41416
  %220 = inttoptr i64 %219 to %"class.v8::internal::Isolate"*
  %221 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %220, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %222

222:                                              ; preds = %214, %212
  %223 = phi i64* [ %221, %214 ], [ %213, %212 ]
  %224 = getelementptr inbounds i64, i64* %223, i64 10
  %225 = load i64, i64* %224, align 8
  %226 = trunc i64 %225 to i32
  %227 = icmp eq i32 %205, %226
  br i1 %227, label %249, label %228

228:                                              ; preds = %222, %200
  %229 = phi %"class.v8::internal::SoleReadOnlyHeap"* [ %201, %200 ], [ %206, %222 ]
  %230 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %229, null
  br i1 %230, label %237, label %231

231:                                              ; preds = %228
  %232 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %229, i64 0, i32 0, i32 1
  %233 = load i8, i8* %232, align 8, !range !2
  %234 = icmp eq i8 %233, 0
  br i1 %234, label %237, label %235

235:                                              ; preds = %231
  %236 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %229, i64 0, i32 1, i64 0
  br label %245

237:                                              ; preds = %231, %228
  %238 = and i64 %191, -262144
  %239 = or i64 %238, 16
  %240 = inttoptr i64 %239 to i64*
  %241 = load i64, i64* %240, align 16
  %242 = add i64 %241, -41416
  %243 = inttoptr i64 %242 to %"class.v8::internal::Isolate"*
  %244 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %243, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %245

245:                                              ; preds = %237, %235
  %246 = phi i64* [ %244, %237 ], [ %236, %235 ]
  %247 = getelementptr inbounds i64, i64* %246, i64 4
  %248 = load i64, i64* %247, align 8
  br label %249

249:                                              ; preds = %222, %245
  %250 = phi i64 [ %248, %245 ], [ %197, %222 ]
  %251 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %67, align 8
  %252 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %251, i64 0, i32 31, i32 4
  %253 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %252, align 8
  %254 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %253, null
  br i1 %254, label %258, label %255

255:                                              ; preds = %249
  %256 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %253, i64 %250) #5
  %257 = ptrtoint i64* %256 to i64
  br label %271

258:                                              ; preds = %249
  %259 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %251, i64 0, i32 31, i32 0
  %260 = load i64*, i64** %259, align 8
  %261 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %251, i64 0, i32 31, i32 1
  %262 = load i64*, i64** %261, align 8
  %263 = icmp eq i64* %260, %262
  br i1 %263, label %264, label %266

264:                                              ; preds = %258
  %265 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %251) #5
  br label %266

266:                                              ; preds = %264, %258
  %267 = phi i64* [ %265, %264 ], [ %260, %258 ]
  %268 = ptrtoint i64* %267 to i64
  %269 = add i64 %268, 8
  %270 = inttoptr i64 %269 to i64*
  store i64* %270, i64** %259, align 8
  store i64 %250, i64* %267, align 8
  br label %271

271:                                              ; preds = %255, %266
  %272 = phi i64 [ %257, %255 ], [ %268, %266 ]
  %273 = phi i64* [ %256, %255 ], [ %267, %266 ]
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %182) #5
  %274 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %67, align 8
  store %"class.v8::internal::Isolate"* %274, %"class.v8::internal::Isolate"** %183, align 8
  store i64 %272, i64* %185, align 8
  %275 = load i64, i64* %273, align 8
  store i64 %275, i64* %186, align 8
  store i64 0, i64* %187, align 8
  store i8 0, i8* %188, align 4
  %276 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %274, i64 0, i32 0, i32 4
  %277 = load i64, i64* %276, align 8
  %278 = add i64 %275, 35
  %279 = inttoptr i64 %278 to i32*
  %280 = load atomic i32, i32* %279 acquire, align 4
  %281 = and i64 %277, 4294967295
  %282 = icmp eq i64 %281, 0
  call void @llvm.assume(i1 %282) #5
  %283 = zext i32 %280 to i64
  %284 = or i64 %277, %283
  store i64 %284, i64* %187, align 8
  %285 = and i64 %283, 1
  %286 = icmp eq i64 %285, 0
  %287 = icmp eq i32 %280, 3
  %288 = or i1 %287, %286
  br i1 %288, label %311, label %289

289:                                              ; preds = %271
  %290 = and i64 %283, 3
  switch i64 %290, label %310 [
    i64 3, label %311
    i64 1, label %291
  ]

291:                                              ; preds = %289
  %292 = add i64 %284, -1
  %293 = inttoptr i64 %292 to i32*
  %294 = load atomic i32, i32* %293 monotonic, align 4
  %295 = zext i32 %294 to i64
  %296 = or i64 %277, %295
  %297 = add i64 %296, 7
  %298 = inttoptr i64 %297 to i16*
  %299 = load atomic i16, i16* %298 monotonic, align 2
  %300 = icmp eq i16 %299, 160
  br i1 %300, label %311, label %301

301:                                              ; preds = %291
  %302 = load atomic i32, i32* %293 monotonic, align 4
  %303 = zext i32 %302 to i64
  %304 = or i64 %277, %303
  %305 = add i64 %304, 7
  %306 = inttoptr i64 %305 to i16*
  %307 = load atomic i16, i16* %306 monotonic, align 2
  %308 = icmp eq i16 %307, 110
  %309 = select i1 %308, i32 0, i32 2
  br label %311

310:                                              ; preds = %289
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i64 0, i64 0)) #11
  unreachable

311:                                              ; preds = %301, %291, %289, %271
  %312 = phi i32 [ 1, %271 ], [ 3, %289 ], [ 4, %291 ], [ %309, %301 ]
  store i32 %312, i32* %189, align 8
  %313 = load i64*, i64** %174, align 8
  %314 = load i64, i64* %313, align 8
  %315 = call zeroext i1 @_ZN2v88internal19TransitionsAccessor29HasIntegrityLevelTransitionToENS0_3MapEPNS0_6SymbolEPNS0_18PropertyAttributesE(%"class.v8::internal::TransitionsAccessor"* nonnull %4, i64 %314, %"class.v8::internal::Symbol"* null, i32* null) #5
  br i1 %315, label %316, label %323

316:                                              ; preds = %311
  store i64* %273, i64** %174, align 8
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %182) #5
  %317 = load i64, i64* %273, align 8
  %318 = add i64 %317, 11
  %319 = inttoptr i64 %318 to i32*
  %320 = load atomic i32, i32* %319 monotonic, align 4
  %321 = and i32 %320, 134217728
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %190, label %324

323:                                              ; preds = %311
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %182) #5
  br label %374

324:                                              ; preds = %316, %171
  %325 = load i64*, i64** %5, align 8
  %326 = load i64, i64* %325, align 8
  %327 = add i64 %326, 11
  %328 = inttoptr i64 %327 to i32*
  %329 = load atomic i32, i32* %328 acquire, align 4
  %330 = load i64*, i64** %174, align 8
  %331 = load i64, i64* %330, align 8
  %332 = add i64 %331, 11
  %333 = inttoptr i64 %332 to i32*
  %334 = load atomic i32, i32* %333 acquire, align 4
  %335 = xor i32 %334, %329
  %336 = and i32 %335, 1047552
  %337 = icmp eq i32 %336, 0
  br i1 %337, label %339, label %338, !prof !3

338:                                              ; preds = %324
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([86 x i8], [86 x i8]* @.str.2, i64 0, i64 0)) #11
  unreachable

339:                                              ; preds = %324
  %340 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 7
  store i8 1, i8* %340, align 4
  %341 = load i64*, i64** %174, align 8
  %342 = load i64, i64* %341, align 8
  %343 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %67, align 8
  %344 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %343, i64 0, i32 0, i32 4
  %345 = load i64, i64* %344, align 8
  %346 = add i64 %342, 23
  %347 = inttoptr i64 %346 to i32*
  %348 = load i32, i32* %347, align 4
  %349 = and i64 %345, 4294967295
  %350 = icmp eq i64 %349, 0
  call void @llvm.assume(i1 %350) #5
  %351 = zext i32 %348 to i64
  %352 = or i64 %345, %351
  %353 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %343, i64 0, i32 31, i32 4
  %354 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %353, align 8
  %355 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %354, null
  br i1 %355, label %358, label %356

356:                                              ; preds = %339
  %357 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %354, i64 %352) #5
  br label %371

358:                                              ; preds = %339
  %359 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %343, i64 0, i32 31, i32 0
  %360 = load i64*, i64** %359, align 8
  %361 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %343, i64 0, i32 31, i32 1
  %362 = load i64*, i64** %361, align 8
  %363 = icmp eq i64* %360, %362
  br i1 %363, label %364, label %366

364:                                              ; preds = %358
  %365 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %343) #5
  br label %366

366:                                              ; preds = %364, %358
  %367 = phi i64* [ %365, %364 ], [ %360, %358 ]
  %368 = ptrtoint i64* %367 to i64
  %369 = add i64 %368, 8
  %370 = inttoptr i64 %369 to i64*
  store i64* %370, i64** %359, align 8
  store i64 %352, i64* %367, align 8
  br label %371

371:                                              ; preds = %356, %366
  %372 = phi i64* [ %357, %356 ], [ %367, %366 ]
  %373 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 2, i32 0, i32 0
  store i64* %372, i64** %373, align 8
  br label %374

374:                                              ; preds = %323, %145, %371
  %375 = phi i1 [ false, %323 ], [ true, %371 ], [ false, %145 ]
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %93) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #5
  ret i1 %375
}

declare zeroext i1 @_ZN2v88internal19TransitionsAccessor29HasIntegrityLevelTransitionToENS0_3MapEPNS0_6SymbolEPNS0_18PropertyAttributesE(%"class.v8::internal::TransitionsAccessor"*, i64, %"class.v8::internal::Symbol"*, i32*) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #3

declare i64 @_ZNK2v88internal3Map11FindRootMapEPNS0_7IsolateE(%"class.v8::internal::Map"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal3Map14AsElementsKindEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal3Map25EquivalentToForTransitionES1_(%"class.v8::internal::Map"*, i64) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal35IsMoreGeneralElementsKindTransitionENS0_12ElementsKindES1_(i8 zeroext, i8 zeroext) local_unnamed_addr #2

declare i64 @_ZN2v88internal19TransitionsAccessor16SearchTransitionENS0_4NameENS0_12PropertyKindENS0_18PropertyAttributesE(%"class.v8::internal::TransitionsAccessor"*, i64, i32, i32) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64* @_ZNK2v88internal10MapUpdater21GetOrComputeFieldTypeENS0_13InternalIndexENS0_16PropertyLocationENS0_14RepresentationE(%"class.v8::internal::MapUpdater"*, i64, i32, i8) local_unnamed_addr #4 comdat align 2 {
  %5 = alloca %"class.v8::internal::Object", align 8
  %6 = icmp eq i32 %2, 0
  br i1 %6, label %7, label %52

7:                                                ; preds = %4
  %8 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 14, i32 0
  %9 = load i64, i64* %8, align 8
  %10 = icmp eq i64 %9, %1
  br i1 %10, label %11, label %15

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 20, i32 0, i32 0
  %13 = load i64*, i64** %12, align 8
  %14 = load i64, i64* %13, align 8
  br label %30

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 2, i32 0, i32 0
  %17 = load i64*, i64** %16, align 8
  %18 = load i64, i64* %17, align 8
  %19 = and i64 %18, -4294967296
  %20 = mul i64 %1, 51539607552
  %21 = add i64 %20, 68719476736
  %22 = ashr exact i64 %21, 32
  %23 = add nsw i64 %22, 7
  %24 = add i64 %23, %18
  %25 = inttoptr i64 %24 to i32*
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = zext i32 %26 to i64
  %28 = or i64 %19, %27
  %29 = tail call i64 @_ZN2v88internal3Map15UnwrapFieldTypeENS0_11MaybeObjectE(i64 %28) #5
  br label %30

30:                                               ; preds = %11, %15
  %31 = phi i64 [ %14, %11 ], [ %29, %15 ]
  %32 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 0
  %33 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %33, i64 0, i32 31, i32 4
  %35 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %34, align 8
  %36 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %30
  %38 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %35, i64 %31) #5
  br label %81

39:                                               ; preds = %30
  %40 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %33, i64 0, i32 31, i32 0
  %41 = load i64*, i64** %40, align 8
  %42 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %33, i64 0, i32 31, i32 1
  %43 = load i64*, i64** %42, align 8
  %44 = icmp eq i64* %41, %43
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %33) #5
  br label %47

47:                                               ; preds = %45, %39
  %48 = phi i64* [ %46, %45 ], [ %41, %39 ]
  %49 = ptrtoint i64* %48 to i64
  %50 = add i64 %49, 8
  %51 = inttoptr i64 %50 to i64*
  store i64* %51, i64** %40, align 8
  store i64 %31, i64* %48, align 8
  br label %81

52:                                               ; preds = %4
  %53 = bitcast %"class.v8::internal::Object"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #5
  %54 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 14, i32 0
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %55, %1
  br i1 %56, label %57, label %61

57:                                               ; preds = %52
  %58 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 21, i32 0, i32 0
  %59 = load i64*, i64** %58, align 8
  %60 = load i64, i64* %59, align 8
  br label %75

61:                                               ; preds = %52
  %62 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 2, i32 0, i32 0
  %63 = load i64*, i64** %62, align 8
  %64 = load i64, i64* %63, align 8
  %65 = and i64 %64, -4294967296
  %66 = mul i64 %1, 51539607552
  %67 = add i64 %66, 68719476736
  %68 = ashr exact i64 %67, 32
  %69 = add nsw i64 %68, 7
  %70 = add i64 %69, %64
  %71 = inttoptr i64 %70 to i32*
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = zext i32 %72 to i64
  %74 = or i64 %65, %73
  br label %75

75:                                               ; preds = %57, %61
  %76 = phi i64 [ %60, %57 ], [ %74, %61 ]
  %77 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %5, i64 0, i32 0, i32 0
  store i64 %76, i64* %77, align 8
  %78 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 0
  %79 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %78, align 8
  %80 = call i64* @_ZN2v88internal6Object11OptimalTypeEPNS0_7IsolateENS0_14RepresentationE(%"class.v8::internal::Object"* nonnull %5, %"class.v8::internal::Isolate"* %79, i8 %3) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #5
  br label %81

81:                                               ; preds = %47, %37, %75
  %82 = phi i64* [ %80, %75 ], [ %38, %37 ], [ %48, %47 ]
  ret i64* %82
}

declare i64 @_ZN2v88internal19TransitionsAccessor13SearchSpecialENS0_6SymbolE(%"class.v8::internal::TransitionsAccessor"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10MapUpdater20BuildDescriptorArrayEv(%"class.v8::internal::MapUpdater"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::Object", align 8
  %3 = alloca %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", align 8
  %4 = alloca %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", align 8
  %5 = alloca %"class.v8::internal::Descriptor", align 8
  %6 = alloca %"class.v8::internal::MaybeObjectHandle", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::MaybeObjectHandle", align 8
  %9 = alloca %"class.v8::internal::Descriptor", align 8
  %10 = alloca %"class.v8::internal::Descriptor", align 8
  %11 = alloca %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", align 8
  %12 = alloca %"class.v8::internal::Descriptor", align 8
  %13 = alloca %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", align 8
  %14 = alloca %"class.v8::internal::Descriptor", align 8
  %15 = alloca %"class.v8::internal::MaybeObjectHandle", align 8
  %16 = alloca %"class.v8::internal::Descriptor", align 8
  %17 = alloca %"class.v8::internal::Descriptor", align 8
  %18 = alloca %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", align 8
  %19 = alloca %"class.v8::internal::Descriptor", align 8
  %20 = alloca %"class.v8::internal::Descriptor", align 8
  %21 = alloca %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", align 8
  %22 = alloca %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", align 8
  %23 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 1, i32 0, i32 0
  %24 = load i64*, i64** %23, align 8
  %25 = load i64, i64* %24, align 8
  %26 = add i64 %25, 7
  %27 = inttoptr i64 %26 to i16*
  %28 = load atomic i16, i16* %27 monotonic, align 2
  %29 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 4, i32 0, i32 0
  %30 = load i64*, i64** %29, align 8
  %31 = load i64, i64* %30, align 8
  %32 = add i64 %31, 11
  %33 = inttoptr i64 %32 to i32*
  %34 = load atomic i32, i32* %33 acquire, align 4
  %35 = lshr i32 %34, 10
  %36 = and i32 %35, 1023
  %37 = load i64*, i64** %29, align 8
  %38 = load i64, i64* %37, align 8
  %39 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 0
  %40 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %39, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 0, i32 4
  %42 = load i64, i64* %41, align 8
  %43 = add i64 %38, 23
  %44 = inttoptr i64 %43 to i32*
  %45 = load i32, i32* %44, align 4
  %46 = and i64 %42, 4294967295
  %47 = icmp eq i64 %46, 0
  tail call void @llvm.assume(i1 %47) #5
  %48 = zext i32 %45 to i64
  %49 = or i64 %42, %48
  %50 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 31, i32 4
  %51 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %50, align 8
  %52 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %51, null
  br i1 %52, label %55, label %53

53:                                               ; preds = %1
  %54 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %51, i64 %49) #5
  br label %68

55:                                               ; preds = %1
  %56 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 31, i32 0
  %57 = load i64*, i64** %56, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 31, i32 1
  %59 = load i64*, i64** %58, align 8
  %60 = icmp eq i64* %57, %59
  br i1 %60, label %61, label %63

61:                                               ; preds = %55
  %62 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %40) #5
  br label %63

63:                                               ; preds = %61, %55
  %64 = phi i64* [ %62, %61 ], [ %57, %55 ]
  %65 = ptrtoint i64* %64 to i64
  %66 = add i64 %65, 8
  %67 = inttoptr i64 %66 to i64*
  store i64* %67, i64** %56, align 8
  store i64 %49, i64* %64, align 8
  br label %68

68:                                               ; preds = %53, %63
  %69 = phi i64* [ %54, %53 ], [ %64, %63 ]
  %70 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 6
  %71 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 2, i32 0, i32 0
  %72 = load i64*, i64** %71, align 8
  %73 = load i64, i64* %72, align 8
  %74 = add i64 %73, 5
  %75 = inttoptr i64 %74 to i16*
  %76 = load atomic i16, i16* %75 monotonic, align 2
  %77 = sext i16 %76 to i32
  %78 = load i32, i32* %70, align 4
  %79 = icmp slt i32 %78, %77
  %80 = select i1 %79, i32 %77, i32 %78
  %81 = sub nsw i32 %80, %78
  %82 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %39, align 8
  %83 = tail call i64* @_ZN2v88internal15DescriptorArray8AllocateINS0_7IsolateEEENS0_6HandleIS1_EEPT_iiNS0_14AllocationTypeE(%"class.v8::internal::Isolate"* %82, i32 %78, i32 %81, i8 zeroext 0) #5
  %84 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 3, i32 0, i32 0
  %85 = load i64*, i64** %84, align 8
  %86 = load i64, i64* %85, align 8
  %87 = add i64 %86, 11
  %88 = inttoptr i64 %87 to i32*
  %89 = load atomic i32, i32* %88 acquire, align 4
  %90 = lshr i32 %89, 10
  %91 = and i32 %90, 1023
  %92 = zext i32 %91 to i64
  %93 = icmp eq i32 %91, 0
  br i1 %93, label %108, label %94

94:                                               ; preds = %68
  %95 = bitcast %"class.v8::internal::Descriptor"* %5 to i8*
  %96 = bitcast %"class.v8::internal::MaybeObjectHandle"* %6 to i8*
  %97 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %6, i64 0, i32 1
  %98 = getelementptr inbounds %"class.v8::internal::MaybeHandle.1133", %"class.v8::internal::MaybeHandle.1133"* %97, i64 0, i32 0
  %99 = bitcast %"class.v8::internal::MaybeHandle.1133"* %97 to i64*
  %100 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %6, i64 0, i32 0
  %101 = bitcast %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %7 to i8*
  %102 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %103 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %7, i64 0, i32 0
  %104 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %5, i64 0, i32 0, i32 0, i32 0
  %105 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %5, i64 0, i32 1, i32 0
  %106 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %5, i64 0, i32 1, i32 1, i32 0
  %107 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %5, i64 0, i32 2, i32 0
  br label %149

108:                                              ; preds = %268, %68
  %109 = phi i32 [ 0, %68 ], [ %165, %268 ]
  %110 = zext i32 %36 to i64
  %111 = icmp eq i32 %91, %36
  br i1 %111, label %273, label %112

112:                                              ; preds = %108
  %113 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 14, i32 0
  %114 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 16
  %115 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 8
  %116 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 15
  %117 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 18
  %118 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 17
  %119 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 19, i32 0
  %120 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 21, i32 0, i32 0
  %121 = bitcast %"class.v8::internal::Descriptor"* %12 to i8*
  %122 = bitcast %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %13 to i8*
  %123 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %13, i64 0, i32 0
  %125 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %12, i64 0, i32 0, i32 0, i32 0
  %126 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %12, i64 0, i32 1, i32 0
  %127 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %12, i64 0, i32 1, i32 1, i32 0
  %128 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %12, i64 0, i32 2, i32 0
  %129 = bitcast %"class.v8::internal::Object"* %2 to i8*
  %130 = getelementptr inbounds %"class.v8::internal::Object", %"class.v8::internal::Object"* %2, i64 0, i32 0, i32 0
  %131 = bitcast %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %3 to i8*
  %132 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %133 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %3, i64 0, i32 0
  %134 = bitcast %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %4 to i8*
  %135 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %136 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef", %"class.v8::internal::Handle<v8::internal::FieldType>::ObjectRef"* %4, i64 0, i32 0
  %137 = bitcast %"class.v8::internal::MaybeObjectHandle"* %8 to i8*
  %138 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %8, i64 0, i32 0
  %139 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %8, i64 0, i32 1, i32 0
  %140 = bitcast %"class.v8::internal::Descriptor"* %9 to i8*
  %141 = bitcast %"class.v8::internal::Descriptor"* %10 to i8*
  %142 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %9, i64 0, i32 2, i32 0
  %143 = bitcast %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %11 to i8*
  %144 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %145 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %11, i64 0, i32 0
  %146 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %9, i64 0, i32 0, i32 0, i32 0
  %147 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %9, i64 0, i32 1, i32 0
  %148 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %9, i64 0, i32 1, i32 1, i32 0
  br label %310

149:                                              ; preds = %94, %268
  %150 = phi i32 [ 0, %94 ], [ %165, %268 ]
  %151 = phi i64 [ 0, %94 ], [ %271, %268 ]
  %152 = load i64*, i64** %71, align 8
  %153 = load i64, i64* %152, align 8
  %154 = mul nuw nsw i64 %151, 51539607552
  %155 = add nuw nsw i64 %154, 68719476736
  %156 = lshr exact i64 %155, 32
  %157 = or i64 %156, 3
  %158 = add i64 %153, %157
  %159 = inttoptr i64 %158 to i32*
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = ashr i32 %160, 1
  %162 = lshr i32 %160, 2
  %163 = and i32 %162, 1
  %164 = xor i32 %163, 1
  %165 = add nuw nsw i32 %164, %150
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %95) #5
  %166 = and i64 %153, -4294967296
  %167 = add nsw i64 %156, -1
  %168 = add i64 %167, %153
  %169 = inttoptr i64 %168 to i32*
  %170 = load atomic i32, i32* %169 monotonic, align 4
  %171 = zext i32 %170 to i64
  %172 = or i64 %166, %171
  %173 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %39, align 8
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %173, i64 0, i32 31, i32 4
  %175 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %174, align 8
  %176 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %175, null
  br i1 %176, label %179, label %177

177:                                              ; preds = %149
  %178 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %175, i64 %172) #5
  br label %192

179:                                              ; preds = %149
  %180 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %173, i64 0, i32 31, i32 0
  %181 = load i64*, i64** %180, align 8
  %182 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %173, i64 0, i32 31, i32 1
  %183 = load i64*, i64** %182, align 8
  %184 = icmp eq i64* %181, %183
  br i1 %184, label %185, label %187

185:                                              ; preds = %179
  %186 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %173) #5
  br label %187

187:                                              ; preds = %185, %179
  %188 = phi i64* [ %186, %185 ], [ %181, %179 ]
  %189 = ptrtoint i64* %188 to i64
  %190 = add i64 %189, 8
  %191 = inttoptr i64 %190 to i64*
  store i64* %191, i64** %180, align 8
  store i64 %172, i64* %188, align 8
  br label %192

192:                                              ; preds = %177, %187
  %193 = phi i64* [ %178, %177 ], [ %188, %187 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %96) #5
  %194 = load i64*, i64** %71, align 8
  %195 = load i64, i64* %194, align 8
  %196 = and i64 %195, -4294967296
  %197 = add nuw nsw i64 %156, 7
  %198 = add i64 %197, %195
  %199 = inttoptr i64 %198 to i32*
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = zext i32 %200 to i64
  %202 = or i64 %196, %201
  %203 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %39, align 8
  store i64* null, i64** %98, align 8
  %204 = and i64 %201, 3
  %205 = icmp eq i64 %204, 3
  %206 = icmp ne i32 %200, 3
  %207 = and i1 %206, %205
  br i1 %207, label %208, label %229

208:                                              ; preds = %192
  %209 = and i64 %202, -3
  %210 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %203, i64 0, i32 31, i32 4
  %211 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %210, align 8
  %212 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %211, null
  br i1 %212, label %216, label %213

213:                                              ; preds = %208
  %214 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %211, i64 %209) #5
  %215 = ptrtoint i64* %214 to i64
  br label %249

216:                                              ; preds = %208
  %217 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %203, i64 0, i32 31, i32 0
  %218 = load i64*, i64** %217, align 8
  %219 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %203, i64 0, i32 31, i32 1
  %220 = load i64*, i64** %219, align 8
  %221 = icmp eq i64* %218, %220
  br i1 %221, label %222, label %224

222:                                              ; preds = %216
  %223 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %203) #5
  br label %224

224:                                              ; preds = %222, %216
  %225 = phi i64* [ %223, %222 ], [ %218, %216 ]
  %226 = ptrtoint i64* %225 to i64
  %227 = add i64 %226, 8
  %228 = inttoptr i64 %227 to i64*
  store i64* %228, i64** %217, align 8
  store i64 %209, i64* %225, align 8
  br label %249

229:                                              ; preds = %192
  %230 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %203, i64 0, i32 31, i32 4
  %231 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %230, align 8
  %232 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %231, null
  br i1 %232, label %236, label %233

233:                                              ; preds = %229
  %234 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %231, i64 %202) #5
  %235 = ptrtoint i64* %234 to i64
  br label %249

236:                                              ; preds = %229
  %237 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %203, i64 0, i32 31, i32 0
  %238 = load i64*, i64** %237, align 8
  %239 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %203, i64 0, i32 31, i32 1
  %240 = load i64*, i64** %239, align 8
  %241 = icmp eq i64* %238, %240
  br i1 %241, label %242, label %244

242:                                              ; preds = %236
  %243 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %203) #5
  br label %244

244:                                              ; preds = %242, %236
  %245 = phi i64* [ %243, %242 ], [ %238, %236 ]
  %246 = ptrtoint i64* %245 to i64
  %247 = add i64 %246, 8
  %248 = inttoptr i64 %247 to i64*
  store i64* %248, i64** %237, align 8
  store i64 %202, i64* %245, align 8
  br label %249

249:                                              ; preds = %233, %244, %213, %224
  %250 = phi i64 [ %215, %213 ], [ %226, %224 ], [ %235, %233 ], [ %246, %244 ]
  %251 = phi i32 [ 0, %213 ], [ 0, %224 ], [ 1, %233 ], [ 1, %244 ]
  store i64 %250, i64* %99, align 8
  store i32 %251, i32* %100, align 8
  call void @_ZN2v88internal10DescriptorC1ENS0_6HandleINS0_4NameEEERKNS0_17MaybeObjectHandleENS0_15PropertyDetailsE(%"class.v8::internal::Descriptor"* nonnull %5, i64* %193, %"class.v8::internal::MaybeObjectHandle"* nonnull dereferenceable(16) %6, i32 %161) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %96) #5
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %101) #5
  %252 = load i64, i64* %83, align 8
  store i64 %252, i64* %102, align 8
  %253 = load i64*, i64** %104, align 8
  %254 = load i64, i64* %253, align 8
  %255 = load i32, i32* %105, align 8
  %256 = load i64*, i64** %106, align 8
  %257 = icmp eq i32 %255, 0
  %258 = icmp eq i64* %256, null
  br i1 %257, label %259, label %264

259:                                              ; preds = %249
  br i1 %258, label %260, label %261, !prof !4

260:                                              ; preds = %259
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.41, i64 0, i64 0)) #11
  unreachable

261:                                              ; preds = %259
  %262 = load i64, i64* %256, align 8
  %263 = or i64 %262, 2
  br label %268

264:                                              ; preds = %249
  br i1 %258, label %265, label %266, !prof !4

265:                                              ; preds = %264
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.41, i64 0, i64 0)) #11
  unreachable

266:                                              ; preds = %264
  %267 = load i64, i64* %256, align 8
  br label %268

268:                                              ; preds = %261, %266
  %269 = phi i64 [ %263, %261 ], [ %267, %266 ]
  %270 = load i32, i32* %107, align 8
  call void @_ZN2v88internal15DescriptorArray3SetENS0_13InternalIndexENS0_4NameENS0_11MaybeObjectENS0_15PropertyDetailsE(%"class.v8::internal::DescriptorArray"* nonnull %103, i64 %151, i64 %254, i64 %269, i32 %270) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %101) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %95) #5
  %271 = add nuw nsw i64 %151, 1
  %272 = icmp eq i64 %271, %92
  br i1 %272, label %108, label %149

273:                                              ; preds = %615, %108
  %274 = phi i32 [ %109, %108 ], [ %616, %615 ]
  %275 = load i32, i32* %70, align 8
  %276 = sext i32 %275 to i64
  %277 = icmp eq i64 %110, %276
  br i1 %277, label %619, label %278

278:                                              ; preds = %273
  %279 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 14, i32 0
  %280 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 16
  %281 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 8
  %282 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 15
  %283 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 18
  %284 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 17
  %285 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 19, i32 0
  %286 = bitcast %"class.v8::internal::Descriptor"* %14 to i8*
  %287 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 21, i32 0, i32 0
  %288 = bitcast %"class.v8::internal::Descriptor"* %20 to i8*
  %289 = bitcast %"class.v8::internal::Descriptor"* %19 to i8*
  %290 = bitcast %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %21 to i8*
  %291 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %292 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %21, i64 0, i32 0
  %293 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %14, i64 0, i32 0, i32 0, i32 0
  %294 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %14, i64 0, i32 1, i32 0
  %295 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %14, i64 0, i32 1, i32 1, i32 0
  %296 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %14, i64 0, i32 2, i32 0
  %297 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 13
  %298 = bitcast %"class.v8::internal::MaybeObjectHandle"* %15 to i8*
  %299 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %15, i64 0, i32 0
  %300 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %15, i64 0, i32 1, i32 0
  %301 = bitcast %"class.v8::internal::Descriptor"* %16 to i8*
  %302 = bitcast %"class.v8::internal::Descriptor"* %17 to i8*
  %303 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %16, i64 0, i32 2, i32 0
  %304 = bitcast %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %18 to i8*
  %305 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %18, i64 0, i32 0
  %307 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %16, i64 0, i32 0, i32 0, i32 0
  %308 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %16, i64 0, i32 1, i32 0
  %309 = getelementptr inbounds %"class.v8::internal::Descriptor", %"class.v8::internal::Descriptor"* %16, i64 0, i32 1, i32 1, i32 0
  br label %624

310:                                              ; preds = %112, %615
  %311 = phi i32 [ %109, %112 ], [ %616, %615 ]
  %312 = phi i64 [ %92, %112 ], [ %617, %615 ]
  %313 = load i64*, i64** %71, align 8
  %314 = load i64, i64* %313, align 8
  %315 = and i64 %314, -4294967296
  %316 = mul i64 %312, 51539607552
  %317 = add i64 %316, 68719476736
  %318 = ashr exact i64 %317, 32
  %319 = add nsw i64 %318, -1
  %320 = add i64 %319, %314
  %321 = inttoptr i64 %320 to i32*
  %322 = load atomic i32, i32* %321 monotonic, align 4
  %323 = zext i32 %322 to i64
  %324 = or i64 %315, %323
  %325 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %39, align 8
  %326 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %325, i64 0, i32 31, i32 4
  %327 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %326, align 8
  %328 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %327, null
  br i1 %328, label %331, label %329

329:                                              ; preds = %310
  %330 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %327, i64 %324) #5
  br label %344

331:                                              ; preds = %310
  %332 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %325, i64 0, i32 31, i32 0
  %333 = load i64*, i64** %332, align 8
  %334 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %325, i64 0, i32 31, i32 1
  %335 = load i64*, i64** %334, align 8
  %336 = icmp eq i64* %333, %335
  br i1 %336, label %337, label %339

337:                                              ; preds = %331
  %338 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %325) #5
  br label %339

339:                                              ; preds = %337, %331
  %340 = phi i64* [ %338, %337 ], [ %333, %331 ]
  %341 = ptrtoint i64* %340 to i64
  %342 = add i64 %341, 8
  %343 = inttoptr i64 %342 to i64*
  store i64* %343, i64** %332, align 8
  store i64 %324, i64* %340, align 8
  br label %344

344:                                              ; preds = %329, %339
  %345 = phi i64* [ %330, %329 ], [ %340, %339 ]
  %346 = load i64, i64* %113, align 8
  %347 = icmp eq i64 %346, %312
  br i1 %347, label %348, label %383

348:                                              ; preds = %344
  %349 = load i32, i32* %114, align 4
  %350 = load i32, i32* %115, align 8
  %351 = and i32 %350, -2
  %352 = icmp eq i32 %351, 4
  %353 = and i32 %349, 1
  %354 = icmp eq i32 %353, 0
  %355 = and i1 %354, %352
  br i1 %355, label %358, label %356

356:                                              ; preds = %348
  %357 = or i64 %318, 3
  br label %367

358:                                              ; preds = %348
  %359 = load i64*, i64** %71, align 8
  %360 = load i64, i64* %359, align 8
  %361 = or i64 %318, 3
  %362 = add i64 %360, %361
  %363 = inttoptr i64 %362 to i32*
  %364 = load atomic i32, i32* %363 monotonic, align 4
  %365 = lshr i32 %364, 4
  %366 = and i32 %365, 7
  br label %367

367:                                              ; preds = %356, %358
  %368 = phi i64 [ %357, %356 ], [ %361, %358 ]
  %369 = phi i32 [ %349, %356 ], [ %366, %358 ]
  %370 = load i32, i32* %116, align 8
  %371 = load i32, i32* %117, align 4
  %372 = load i32, i32* %118, align 8
  %373 = load i8, i8* %119, align 8
  %374 = shl i32 %369, 3
  %375 = or i32 %374, %370
  %376 = shl i32 %371, 1
  %377 = or i32 %375, %376
  %378 = shl i32 %372, 2
  %379 = or i32 %377, %378
  %380 = zext i8 %373 to i32
  %381 = shl nuw nsw i32 %380, 6
  %382 = or i32 %379, %381
  br label %391

383:                                              ; preds = %344
  %384 = load i64*, i64** %71, align 8
  %385 = load i64, i64* %384, align 8
  %386 = or i64 %318, 3
  %387 = add i64 %385, %386
  %388 = inttoptr i64 %387 to i32*
  %389 = load atomic i32, i32* %388 monotonic, align 4
  %390 = ashr i32 %389, 1
  br label %391

391:                                              ; preds = %367, %383
  %392 = phi i64 [ %368, %367 ], [ %386, %383 ]
  %393 = phi i32 [ %382, %367 ], [ %390, %383 ]
  %394 = load i64, i64* %69, align 8
  %395 = add i64 %394, %392
  %396 = inttoptr i64 %395 to i32*
  %397 = load atomic i32, i32* %396 monotonic, align 4
  %398 = ashr i32 %397, 1
  %399 = and i32 %393, 1
  %400 = lshr i32 %393, 3
  %401 = and i32 %400, 7
  %402 = and i32 %393, 4
  %403 = lshr i32 %398, 2
  %404 = and i32 %403, 1
  %405 = icmp eq i32 %402, 0
  %406 = select i1 %405, i32 0, i32 %404
  %407 = lshr i32 %393, 1
  %408 = and i32 %407, 1
  %409 = icmp eq i32 %408, 0
  %410 = and i32 %397, 4
  %411 = icmp eq i32 %410, 0
  %412 = or i1 %409, %411
  br i1 %412, label %432, label %413

413:                                              ; preds = %391
  %414 = add nsw i64 %318, 7
  %415 = add i64 %394, %414
  %416 = inttoptr i64 %415 to i32*
  %417 = load atomic i32, i32* %416 monotonic, align 4
  br i1 %347, label %418, label %421

418:                                              ; preds = %413
  %419 = load i64*, i64** %120, align 8
  %420 = load i64, i64* %419, align 8
  br label %428

421:                                              ; preds = %413
  %422 = load i64*, i64** %71, align 8
  %423 = load i64, i64* %422, align 8
  %424 = add i64 %423, %414
  %425 = inttoptr i64 %424 to i32*
  %426 = load atomic i32, i32* %425 monotonic, align 4
  %427 = zext i32 %426 to i64
  br label %428

428:                                              ; preds = %418, %421
  %429 = phi i64 [ %420, %418 ], [ %427, %421 ]
  %430 = trunc i64 %429 to i32
  %431 = icmp ne i32 %417, %430
  br label %432

432:                                              ; preds = %428, %391
  %433 = phi i1 [ true, %391 ], [ %431, %428 ]
  %434 = lshr i32 %393, 6
  %435 = trunc i32 %434 to i8
  %436 = and i8 %435, 7
  %437 = lshr i32 %398, 6
  %438 = trunc i32 %437 to i8
  %439 = and i8 %438, 7
  switch i8 %436, label %442 [
    i8 5, label %444
    i8 3, label %440
  ]

440:                                              ; preds = %432
  %441 = icmp eq i8 %439, 0
  br i1 %441, label %452, label %444

442:                                              ; preds = %432
  %443 = icmp ult i8 %436, %439
  br i1 %443, label %446, label %452

444:                                              ; preds = %440, %432
  %445 = icmp eq i8 %436, %439
  br i1 %445, label %452, label %446

446:                                              ; preds = %444, %442
  switch i8 %439, label %449 [
    i8 5, label %451
    i8 3, label %447
  ]

447:                                              ; preds = %446
  %448 = icmp eq i8 %436, 0
  br i1 %448, label %452, label %451

449:                                              ; preds = %446
  %450 = icmp ult i8 %436, %439
  br i1 %450, label %452, label %451

451:                                              ; preds = %449, %447, %446
  br label %452

452:                                              ; preds = %440, %442, %444, %447, %449, %451
  %453 = phi i8 [ 4, %451 ], [ %436, %444 ], [ 3, %447 ], [ %439, %449 ], [ %436, %442 ], [ 3, %440 ]
  br i1 %433, label %454, label %559

454:                                              ; preds = %452
  %455 = call i64* @_ZNK2v88internal10MapUpdater21GetOrComputeFieldTypeENS0_13InternalIndexENS0_16PropertyLocationENS0_14RepresentationE(%"class.v8::internal::MapUpdater"* %0, i64 %312, i32 %408, i8 %453)
  br i1 %411, label %456, label %485

456:                                              ; preds = %454
  %457 = load i64, i64* %69, align 8
  %458 = and i64 %457, -4294967296
  %459 = add nsw i64 %318, 7
  %460 = add i64 %459, %457
  %461 = inttoptr i64 %460 to i32*
  %462 = load atomic i32, i32* %461 monotonic, align 4
  %463 = zext i32 %462 to i64
  %464 = or i64 %458, %463
  %465 = call i64 @_ZN2v88internal3Map15UnwrapFieldTypeENS0_11MaybeObjectE(i64 %464) #5
  %466 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %39, align 8
  %467 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %466, i64 0, i32 31, i32 4
  %468 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %467, align 8
  %469 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %468, null
  br i1 %469, label %472, label %470

470:                                              ; preds = %456
  %471 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %468, i64 %465) #5
  br label %496

472:                                              ; preds = %456
  %473 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %466, i64 0, i32 31, i32 0
  %474 = load i64*, i64** %473, align 8
  %475 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %466, i64 0, i32 31, i32 1
  %476 = load i64*, i64** %475, align 8
  %477 = icmp eq i64* %474, %476
  br i1 %477, label %478, label %480

478:                                              ; preds = %472
  %479 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %466) #5
  br label %480

480:                                              ; preds = %478, %472
  %481 = phi i64* [ %479, %478 ], [ %474, %472 ]
  %482 = ptrtoint i64* %481 to i64
  %483 = add i64 %482, 8
  %484 = inttoptr i64 %483 to i64*
  store i64* %484, i64** %473, align 8
  store i64 %465, i64* %481, align 8
  br label %496

485:                                              ; preds = %454
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %129) #5
  %486 = load i64, i64* %69, align 8
  %487 = and i64 %486, -4294967296
  %488 = add nsw i64 %318, 7
  %489 = add i64 %488, %486
  %490 = inttoptr i64 %489 to i32*
  %491 = load atomic i32, i32* %490 monotonic, align 4
  %492 = zext i32 %491 to i64
  %493 = or i64 %487, %492
  store i64 %493, i64* %130, align 8
  %494 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %39, align 8
  %495 = call i64* @_ZN2v88internal6Object11OptimalTypeEPNS0_7IsolateENS0_14RepresentationE(%"class.v8::internal::Object"* nonnull %2, %"class.v8::internal::Isolate"* %494, i8 %453) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %129) #5
  br label %496

496:                                              ; preds = %470, %480, %485
  %497 = phi i64* [ %495, %485 ], [ %471, %470 ], [ %481, %480 ]
  %498 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %39, align 8
  %499 = load i64, i64* %455, align 8
  %500 = call i64 @_ZN2v88internal9FieldType4NoneEv() #5
  %501 = trunc i64 %499 to i32
  %502 = trunc i64 %500 to i32
  %503 = icmp eq i32 %501, %502
  %504 = icmp eq i8 %436, 3
  %505 = and i1 %504, %503
  br i1 %505, label %514, label %506

506:                                              ; preds = %496
  %507 = load i64, i64* %497, align 8
  %508 = call i64 @_ZN2v88internal9FieldType4NoneEv() #5
  %509 = trunc i64 %507 to i32
  %510 = trunc i64 %508 to i32
  %511 = icmp eq i32 %509, %510
  %512 = icmp eq i8 %453, 3
  %513 = and i1 %512, %511
  br i1 %513, label %514, label %516

514:                                              ; preds = %506, %496
  %515 = call i64* @_ZN2v88internal9FieldType3AnyEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %498) #5
  br label %524

516:                                              ; preds = %506
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %131) #5
  %517 = load i64, i64* %455, align 8
  store i64 %517, i64* %132, align 8
  %518 = call zeroext i1 @_ZNK2v88internal9FieldType5NowIsENS0_6HandleIS1_EE(%"class.v8::internal::FieldType"* nonnull %133, i64* %497) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %131) #5
  br i1 %518, label %524, label %519

519:                                              ; preds = %516
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %134) #5
  %520 = load i64, i64* %497, align 8
  store i64 %520, i64* %135, align 8
  %521 = call zeroext i1 @_ZNK2v88internal9FieldType5NowIsENS0_6HandleIS1_EE(%"class.v8::internal::FieldType"* nonnull %136, i64* %455) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %134) #5
  br i1 %521, label %524, label %522

522:                                              ; preds = %519
  %523 = call i64* @_ZN2v88internal9FieldType3AnyEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %498) #5
  br label %524

524:                                              ; preds = %514, %516, %519, %522
  %525 = phi i64* [ %515, %514 ], [ %523, %522 ], [ %497, %516 ], [ %455, %519 ]
  switch i16 %28, label %529 [
    i16 1085, label %526
    i16 1041, label %526
    i16 1055, label %526
  ]

526:                                              ; preds = %524, %524, %524
  %527 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %39, align 8
  %528 = call i64* @_ZN2v88internal9FieldType3AnyEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %527) #5
  br label %529

529:                                              ; preds = %524, %526
  %530 = phi i64* [ %525, %524 ], [ %528, %526 ]
  %531 = phi i8 [ %453, %524 ], [ 4, %526 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %137) #5
  %532 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %39, align 8
  %533 = call { i32, i64* } @_ZN2v88internal3Map13WrapFieldTypeEPNS0_7IsolateENS0_6HandleINS0_9FieldTypeEEE(%"class.v8::internal::Isolate"* %532, i64* %530) #5
  %534 = extractvalue { i32, i64* } %533, 0
  store i32 %534, i32* %138, align 8
  %535 = extractvalue { i32, i64* } %533, 1
  store i64* %535, i64** %139, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %140) #5
  call void @_ZN2v88internal10DescriptorC1Ev(%"class.v8::internal::Descriptor"* nonnull %9) #5
  %536 = icmp eq i32 %399, 0
  br i1 %536, label %537, label %558

537:                                              ; preds = %529
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %141) #5
  call void @_ZN2v88internal10Descriptor9DataFieldENS0_6HandleINS0_4NameEEEiNS0_18PropertyAttributesENS0_17PropertyConstnessENS0_14RepresentationERKNS0_17MaybeObjectHandleE(%"class.v8::internal::Descriptor"* nonnull sret %10, i64* %345, i32 %311, i32 %401, i32 %406, i8 %531, %"class.v8::internal::MaybeObjectHandle"* nonnull dereferenceable(16) %8) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %140, i8* nonnull align 8 %141, i64 28, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %141) #5
  %538 = add nsw i32 %311, 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #5
  %539 = load i64, i64* %83, align 8
  store i64 %539, i64* %144, align 8
  %540 = load i64*, i64** %146, align 8
  %541 = load i64, i64* %540, align 8
  %542 = load i32, i32* %147, align 8
  %543 = load i64*, i64** %148, align 8
  %544 = icmp eq i32 %542, 0
  %545 = icmp eq i64* %543, null
  br i1 %544, label %546, label %551

546:                                              ; preds = %537
  br i1 %545, label %547, label %548, !prof !4

547:                                              ; preds = %546
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.41, i64 0, i64 0)) #11
  unreachable

548:                                              ; preds = %546
  %549 = load i64, i64* %543, align 8
  %550 = or i64 %549, 2
  br label %555

551:                                              ; preds = %537
  br i1 %545, label %552, label %553, !prof !4

552:                                              ; preds = %551
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.41, i64 0, i64 0)) #11
  unreachable

553:                                              ; preds = %551
  %554 = load i64, i64* %543, align 8
  br label %555

555:                                              ; preds = %548, %553
  %556 = phi i64 [ %550, %548 ], [ %554, %553 ]
  %557 = load i32, i32* %142, align 8
  call void @_ZN2v88internal15DescriptorArray3SetENS0_13InternalIndexENS0_4NameENS0_11MaybeObjectENS0_15PropertyDetailsE(%"class.v8::internal::DescriptorArray"* nonnull %145, i64 %312, i64 %541, i64 %556, i32 %557) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %140) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %137) #5
  br label %615

558:                                              ; preds = %529
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0)) #11
  unreachable

559:                                              ; preds = %452
  br i1 %347, label %560, label %563

560:                                              ; preds = %559
  %561 = load i64*, i64** %120, align 8
  %562 = load i64, i64* %561, align 8
  br label %573

563:                                              ; preds = %559
  %564 = load i64*, i64** %71, align 8
  %565 = load i64, i64* %564, align 8
  %566 = and i64 %565, -4294967296
  %567 = add nsw i64 %318, 7
  %568 = add i64 %567, %565
  %569 = inttoptr i64 %568 to i32*
  %570 = load atomic i32, i32* %569 monotonic, align 4
  %571 = zext i32 %570 to i64
  %572 = or i64 %566, %571
  br label %573

573:                                              ; preds = %560, %563
  %574 = phi i64 [ %562, %560 ], [ %572, %563 ]
  %575 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %39, align 8
  %576 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %575, i64 0, i32 31, i32 4
  %577 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %576, align 8
  %578 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %577, null
  br i1 %578, label %581, label %579

579:                                              ; preds = %573
  %580 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %577, i64 %574) #5
  br label %594

581:                                              ; preds = %573
  %582 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %575, i64 0, i32 31, i32 0
  %583 = load i64*, i64** %582, align 8
  %584 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %575, i64 0, i32 31, i32 1
  %585 = load i64*, i64** %584, align 8
  %586 = icmp eq i64* %583, %585
  br i1 %586, label %587, label %589

587:                                              ; preds = %581
  %588 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %575) #5
  br label %589

589:                                              ; preds = %587, %581
  %590 = phi i64* [ %588, %587 ], [ %583, %581 ]
  %591 = ptrtoint i64* %590 to i64
  %592 = add i64 %591, 8
  %593 = inttoptr i64 %592 to i64*
  store i64* %593, i64** %582, align 8
  store i64 %574, i64* %590, align 8
  br label %594

594:                                              ; preds = %579, %589
  %595 = phi i64* [ %580, %579 ], [ %590, %589 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %121) #5
  call void @_ZN2v88internal10Descriptor16AccessorConstantENS0_6HandleINS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Descriptor"* nonnull sret %12, i64* %345, i64* %595, i32 %401) #5
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %122) #5
  %596 = load i64, i64* %83, align 8
  store i64 %596, i64* %123, align 8
  %597 = load i64*, i64** %125, align 8
  %598 = load i64, i64* %597, align 8
  %599 = load i32, i32* %126, align 8
  %600 = load i64*, i64** %127, align 8
  %601 = icmp eq i32 %599, 0
  %602 = icmp eq i64* %600, null
  br i1 %601, label %603, label %608

603:                                              ; preds = %594
  br i1 %602, label %604, label %605, !prof !4

604:                                              ; preds = %603
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.41, i64 0, i64 0)) #11
  unreachable

605:                                              ; preds = %603
  %606 = load i64, i64* %600, align 8
  %607 = or i64 %606, 2
  br label %612

608:                                              ; preds = %594
  br i1 %602, label %609, label %610, !prof !4

609:                                              ; preds = %608
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.41, i64 0, i64 0)) #11
  unreachable

610:                                              ; preds = %608
  %611 = load i64, i64* %600, align 8
  br label %612

612:                                              ; preds = %605, %610
  %613 = phi i64 [ %607, %605 ], [ %611, %610 ]
  %614 = load i32, i32* %128, align 8
  call void @_ZN2v88internal15DescriptorArray3SetENS0_13InternalIndexENS0_4NameENS0_11MaybeObjectENS0_15PropertyDetailsE(%"class.v8::internal::DescriptorArray"* nonnull %124, i64 %312, i64 %598, i64 %613, i32 %614) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %122) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %121) #5
  br label %615

615:                                              ; preds = %612, %555
  %616 = phi i32 [ %538, %555 ], [ %311, %612 ]
  %617 = add i64 %312, 1
  %618 = icmp eq i64 %617, %110
  br i1 %618, label %273, label %310

619:                                              ; preds = %821, %273
  %620 = bitcast %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %620) #5
  %621 = load i64, i64* %83, align 8
  %622 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %621, i64* %622, align 8
  %623 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef", %"class.v8::internal::Handle<v8::internal::DescriptorArray>::ObjectRef"* %22, i64 0, i32 0
  call void @_ZN2v88internal15DescriptorArray4SortEv(%"class.v8::internal::DescriptorArray"* nonnull %623) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %620) #5
  ret i64* %83

624:                                              ; preds = %278, %821
  %625 = phi i32 [ %274, %278 ], [ %822, %821 ]
  %626 = phi i64 [ %110, %278 ], [ %823, %821 ]
  %627 = load i64, i64* %279, align 8
  %628 = icmp eq i64 %627, %626
  br i1 %628, label %629, label %664

629:                                              ; preds = %624
  %630 = load i32, i32* %280, align 4
  %631 = load i32, i32* %281, align 8
  %632 = and i32 %631, -2
  %633 = icmp eq i32 %632, 4
  %634 = and i32 %630, 1
  %635 = icmp eq i32 %634, 0
  %636 = and i1 %635, %633
  %637 = load i64*, i64** %71, align 8
  %638 = load i64, i64* %637, align 8
  %639 = mul i64 %626, 51539607552
  %640 = add i64 %639, 68719476736
  %641 = ashr exact i64 %640, 32
  br i1 %636, label %642, label %649

642:                                              ; preds = %629
  %643 = or i64 %641, 3
  %644 = add i64 %638, %643
  %645 = inttoptr i64 %644 to i32*
  %646 = load atomic i32, i32* %645 monotonic, align 4
  %647 = lshr i32 %646, 4
  %648 = and i32 %647, 7
  br label %649

649:                                              ; preds = %629, %642
  %650 = phi i32 [ %648, %642 ], [ %630, %629 ]
  %651 = load i32, i32* %282, align 8
  %652 = load i32, i32* %283, align 4
  %653 = load i32, i32* %284, align 8
  %654 = load i8, i8* %285, align 8
  %655 = shl i32 %650, 3
  %656 = or i32 %655, %651
  %657 = shl i32 %652, 1
  %658 = or i32 %656, %657
  %659 = shl i32 %653, 2
  %660 = or i32 %658, %659
  %661 = zext i8 %654 to i32
  %662 = shl nuw nsw i32 %661, 6
  %663 = or i32 %660, %662
  br label %675

664:                                              ; preds = %624
  %665 = load i64*, i64** %71, align 8
  %666 = load i64, i64* %665, align 8
  %667 = mul i64 %626, 51539607552
  %668 = add i64 %667, 68719476736
  %669 = ashr exact i64 %668, 32
  %670 = or i64 %669, 3
  %671 = add i64 %666, %670
  %672 = inttoptr i64 %671 to i32*
  %673 = load atomic i32, i32* %672 monotonic, align 4
  %674 = ashr i32 %673, 1
  br label %675

675:                                              ; preds = %649, %664
  %676 = phi i64 [ %641, %649 ], [ %669, %664 ]
  %677 = phi i64 [ %638, %649 ], [ %666, %664 ]
  %678 = phi i32 [ %663, %649 ], [ %674, %664 ]
  %679 = and i64 %677, -4294967296
  %680 = add nsw i64 %676, -1
  %681 = add i64 %680, %677
  %682 = inttoptr i64 %681 to i32*
  %683 = load atomic i32, i32* %682 monotonic, align 4
  %684 = zext i32 %683 to i64
  %685 = or i64 %679, %684
  %686 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %39, align 8
  %687 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %686, i64 0, i32 31, i32 4
  %688 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %687, align 8
  %689 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %688, null
  br i1 %689, label %692, label %690

690:                                              ; preds = %675
  %691 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %688, i64 %685) #5
  br label %705

692:                                              ; preds = %675
  %693 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %686, i64 0, i32 31, i32 0
  %694 = load i64*, i64** %693, align 8
  %695 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %686, i64 0, i32 31, i32 1
  %696 = load i64*, i64** %695, align 8
  %697 = icmp eq i64* %694, %696
  br i1 %697, label %698, label %700

698:                                              ; preds = %692
  %699 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %686) #5
  br label %700

700:                                              ; preds = %698, %692
  %701 = phi i64* [ %699, %698 ], [ %694, %692 ]
  %702 = ptrtoint i64* %701 to i64
  %703 = add i64 %702, 8
  %704 = inttoptr i64 %703 to i64*
  store i64* %704, i64** %693, align 8
  store i64 %685, i64* %701, align 8
  br label %705

705:                                              ; preds = %690, %700
  %706 = phi i64* [ %691, %690 ], [ %701, %700 ]
  %707 = and i32 %678, 1
  %708 = lshr i32 %678, 3
  %709 = and i32 %708, 7
  %710 = lshr i32 %678, 2
  %711 = and i32 %710, 1
  %712 = and i32 %678, 2
  %713 = lshr i32 %678, 6
  %714 = trunc i32 %713 to i8
  %715 = and i8 %714, 7
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %286) #5
  call void @_ZN2v88internal10DescriptorC1Ev(%"class.v8::internal::Descriptor"* nonnull %14) #5
  %716 = icmp eq i32 %712, 0
  br i1 %716, label %717, label %758

717:                                              ; preds = %705
  %718 = call i64* @_ZNK2v88internal10MapUpdater21GetOrComputeFieldTypeENS0_13InternalIndexENS0_16PropertyLocationENS0_14RepresentationE(%"class.v8::internal::MapUpdater"* %0, i64 %626, i32 0, i8 %715)
  %719 = load i8, i8* %297, align 1, !range !2
  %720 = icmp ne i8 %719, 0
  %721 = icmp eq i8 %715, 3
  %722 = and i1 %721, %720
  br i1 %722, label %723, label %730

723:                                              ; preds = %717
  %724 = load i64, i64* %718, align 8
  %725 = call i64 @_ZN2v88internal9FieldType3AnyEv() #5
  %726 = trunc i64 %724 to i32
  %727 = trunc i64 %725 to i32
  %728 = icmp eq i32 %726, %727
  br i1 %728, label %730, label %729, !prof !3

729:                                              ; preds = %723
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.11, i64 0, i64 0)) #11
  unreachable

730:                                              ; preds = %717, %723
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %298) #5
  %731 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %39, align 8
  %732 = call { i32, i64* } @_ZN2v88internal3Map13WrapFieldTypeEPNS0_7IsolateENS0_6HandleINS0_9FieldTypeEEE(%"class.v8::internal::Isolate"* %731, i64* %718) #5
  %733 = extractvalue { i32, i64* } %732, 0
  store i32 %733, i32* %299, align 8
  %734 = extractvalue { i32, i64* } %732, 1
  store i64* %734, i64** %300, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %301) #5
  call void @_ZN2v88internal10DescriptorC1Ev(%"class.v8::internal::Descriptor"* nonnull %16) #5
  %735 = icmp eq i32 %707, 0
  br i1 %735, label %736, label %757

736:                                              ; preds = %730
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %302) #5
  call void @_ZN2v88internal10Descriptor9DataFieldENS0_6HandleINS0_4NameEEEiNS0_18PropertyAttributesENS0_17PropertyConstnessENS0_14RepresentationERKNS0_17MaybeObjectHandleE(%"class.v8::internal::Descriptor"* nonnull sret %17, i64* %706, i32 %625, i32 %709, i32 %711, i8 %715, %"class.v8::internal::MaybeObjectHandle"* nonnull dereferenceable(16) %15) #5
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %301, i8* nonnull align 8 %302, i64 28, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %302) #5
  %737 = add nsw i32 %625, 1
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %304) #5
  %738 = load i64, i64* %83, align 8
  store i64 %738, i64* %305, align 8
  %739 = load i64*, i64** %307, align 8
  %740 = load i64, i64* %739, align 8
  %741 = load i32, i32* %308, align 8
  %742 = load i64*, i64** %309, align 8
  %743 = icmp eq i32 %741, 0
  %744 = icmp eq i64* %742, null
  br i1 %743, label %745, label %750

745:                                              ; preds = %736
  br i1 %744, label %746, label %747, !prof !4

746:                                              ; preds = %745
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.41, i64 0, i64 0)) #11
  unreachable

747:                                              ; preds = %745
  %748 = load i64, i64* %742, align 8
  %749 = or i64 %748, 2
  br label %754

750:                                              ; preds = %736
  br i1 %744, label %751, label %752, !prof !4

751:                                              ; preds = %750
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.41, i64 0, i64 0)) #11
  unreachable

752:                                              ; preds = %750
  %753 = load i64, i64* %742, align 8
  br label %754

754:                                              ; preds = %747, %752
  %755 = phi i64 [ %749, %747 ], [ %753, %752 ]
  %756 = load i32, i32* %303, align 8
  call void @_ZN2v88internal15DescriptorArray3SetENS0_13InternalIndexENS0_4NameENS0_11MaybeObjectENS0_15PropertyDetailsE(%"class.v8::internal::DescriptorArray"* nonnull %306, i64 %626, i64 %740, i64 %755, i32 %756) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %304) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %301) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %298) #5
  br label %821

757:                                              ; preds = %730
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([19 x i8], [19 x i8]* @.str.10, i64 0, i64 0)) #11
  unreachable

758:                                              ; preds = %705
  %759 = load i64, i64* %279, align 8
  %760 = icmp eq i64 %759, %626
  br i1 %760, label %761, label %764

761:                                              ; preds = %758
  %762 = load i64*, i64** %287, align 8
  %763 = load i64, i64* %762, align 8
  br label %774

764:                                              ; preds = %758
  %765 = load i64*, i64** %71, align 8
  %766 = load i64, i64* %765, align 8
  %767 = and i64 %766, -4294967296
  %768 = add nsw i64 %676, 7
  %769 = add i64 %768, %766
  %770 = inttoptr i64 %769 to i32*
  %771 = load atomic i32, i32* %770 monotonic, align 4
  %772 = zext i32 %771 to i64
  %773 = or i64 %767, %772
  br label %774

774:                                              ; preds = %761, %764
  %775 = phi i64 [ %763, %761 ], [ %773, %764 ]
  %776 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %39, align 8
  %777 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %776, i64 0, i32 31, i32 4
  %778 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %777, align 8
  %779 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %778, null
  br i1 %779, label %782, label %780

780:                                              ; preds = %774
  %781 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %778, i64 %775) #5
  br label %795

782:                                              ; preds = %774
  %783 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %776, i64 0, i32 31, i32 0
  %784 = load i64*, i64** %783, align 8
  %785 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %776, i64 0, i32 31, i32 1
  %786 = load i64*, i64** %785, align 8
  %787 = icmp eq i64* %784, %786
  br i1 %787, label %788, label %790

788:                                              ; preds = %782
  %789 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %776) #5
  br label %790

790:                                              ; preds = %788, %782
  %791 = phi i64* [ %789, %788 ], [ %784, %782 ]
  %792 = ptrtoint i64* %791 to i64
  %793 = add i64 %792, 8
  %794 = inttoptr i64 %793 to i64*
  store i64* %794, i64** %783, align 8
  store i64 %775, i64* %791, align 8
  br label %795

795:                                              ; preds = %780, %790
  %796 = phi i64* [ %781, %780 ], [ %791, %790 ]
  %797 = icmp eq i32 %707, 0
  br i1 %797, label %798, label %799

798:                                              ; preds = %795
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %289) #5
  call void @_ZN2v88internal10Descriptor12DataConstantENS0_6HandleINS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Descriptor"* nonnull sret %19, i64* %706, i64* %796, i32 %709) #5
  br label %800

799:                                              ; preds = %795
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %288) #5
  call void @_ZN2v88internal10Descriptor16AccessorConstantENS0_6HandleINS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Descriptor"* nonnull sret %20, i64* %706, i64* %796, i32 %709) #5
  br label %800

800:                                              ; preds = %799, %798
  %801 = phi i8* [ %288, %799 ], [ %289, %798 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %286, i8* nonnull align 8 %801, i64 28, i1 false)
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %801) #5
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %290) #5
  %802 = load i64, i64* %83, align 8
  store i64 %802, i64* %291, align 8
  %803 = load i64*, i64** %293, align 8
  %804 = load i64, i64* %803, align 8
  %805 = load i32, i32* %294, align 8
  %806 = load i64*, i64** %295, align 8
  %807 = icmp eq i32 %805, 0
  %808 = icmp eq i64* %806, null
  br i1 %807, label %809, label %814

809:                                              ; preds = %800
  br i1 %808, label %810, label %811, !prof !4

810:                                              ; preds = %809
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.41, i64 0, i64 0)) #11
  unreachable

811:                                              ; preds = %809
  %812 = load i64, i64* %806, align 8
  %813 = or i64 %812, 2
  br label %818

814:                                              ; preds = %800
  br i1 %808, label %815, label %816, !prof !4

815:                                              ; preds = %814
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.41, i64 0, i64 0)) #11
  unreachable

816:                                              ; preds = %814
  %817 = load i64, i64* %806, align 8
  br label %818

818:                                              ; preds = %811, %816
  %819 = phi i64 [ %813, %811 ], [ %817, %816 ]
  %820 = load i32, i32* %296, align 8
  call void @_ZN2v88internal15DescriptorArray3SetENS0_13InternalIndexENS0_4NameENS0_11MaybeObjectENS0_15PropertyDetailsE(%"class.v8::internal::DescriptorArray"* nonnull %292, i64 %626, i64 %804, i64 %819, i32 %820) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %290) #5
  br label %821

821:                                              ; preds = %818, %754
  %822 = phi i32 [ %737, %754 ], [ %625, %818 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %286) #5
  %823 = add i64 %626, 1
  %824 = icmp eq i64 %823, %276
  br i1 %824, label %619, label %624
}

declare i64* @_ZN2v88internal15DescriptorArray8AllocateINS0_7IsolateEEENS0_6HandleIS1_EEPT_iiNS0_14AllocationTypeE(%"class.v8::internal::Isolate"*, i32, i32, i8 zeroext) local_unnamed_addr #2

declare void @_ZN2v88internal10DescriptorC1ENS0_6HandleINS0_4NameEEERKNS0_17MaybeObjectHandleENS0_15PropertyDetailsE(%"class.v8::internal::Descriptor"*, i64*, %"class.v8::internal::MaybeObjectHandle"* dereferenceable(16), i32) unnamed_addr #2

declare { i32, i64* } @_ZN2v88internal3Map13WrapFieldTypeEPNS0_7IsolateENS0_6HandleINS0_9FieldTypeEEE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal10DescriptorC1Ev(%"class.v8::internal::Descriptor"*) unnamed_addr #2

declare void @_ZN2v88internal10Descriptor9DataFieldENS0_6HandleINS0_4NameEEEiNS0_18PropertyAttributesENS0_17PropertyConstnessENS0_14RepresentationERKNS0_17MaybeObjectHandleE(%"class.v8::internal::Descriptor"* sret, i64*, i32, i32, i32, i8, %"class.v8::internal::MaybeObjectHandle"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZN2v88internal10Descriptor16AccessorConstantENS0_6HandleINS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Descriptor"* sret, i64*, i64*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal10Descriptor12DataConstantENS0_6HandleINS0_4NameEEENS2_INS0_6ObjectEEENS0_18PropertyAttributesE(%"class.v8::internal::Descriptor"* sret, i64*, i64*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal15DescriptorArray4SortEv(%"class.v8::internal::DescriptorArray"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10MapUpdater12FindSplitMapENS0_6HandleINS0_15DescriptorArrayEEE(%"class.v8::internal::MapUpdater"* nocapture readonly, i64*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::TransitionsAccessor", align 8
  %4 = alloca %"class.v8::internal::FieldType", align 8
  %5 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load i64*, i64** %5, align 8
  %7 = load i64, i64* %6, align 8
  %8 = add i64 %7, 11
  %9 = inttoptr i64 %8 to i32*
  %10 = load atomic i32, i32* %9 acquire, align 4
  %11 = lshr i32 %10, 10
  %12 = and i32 %11, 1023
  %13 = load i64*, i64** %5, align 8
  %14 = load i64, i64* %13, align 8
  %15 = zext i32 %12 to i64
  %16 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 6
  %17 = load i32, i32* %16, align 8
  %18 = sext i32 %17 to i64
  %19 = icmp eq i64 %15, %18
  br i1 %19, label %153, label %20

20:                                               ; preds = %2
  %21 = bitcast %"class.v8::internal::TransitionsAccessor"* %3 to i8*
  %22 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 0
  %23 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 1, i32 0, i32 0
  %25 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 3, i32 0, i32 0
  %27 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 5
  %28 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %3, i64 0, i32 4
  %29 = bitcast %"class.v8::internal::FieldType"* %4 to i8*
  %30 = getelementptr inbounds %"class.v8::internal::FieldType", %"class.v8::internal::FieldType"* %4, i64 0, i32 0, i32 0, i32 0
  br label %31

31:                                               ; preds = %20, %150
  %32 = phi i64 [ %14, %20 ], [ %91, %150 ]
  %33 = phi i64 [ %15, %20 ], [ %151, %150 ]
  %34 = load i64, i64* %1, align 8
  %35 = and i64 %34, -4294967296
  %36 = mul i64 %33, 51539607552
  %37 = add i64 %36, 68719476736
  %38 = ashr exact i64 %37, 32
  %39 = add nsw i64 %38, -1
  %40 = add i64 %39, %34
  %41 = inttoptr i64 %40 to i32*
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = zext i32 %42 to i64
  %44 = or i64 %35, %43
  %45 = or i64 %38, 3
  %46 = add i64 %34, %45
  %47 = inttoptr i64 %46 to i32*
  %48 = load atomic i32, i32* %47 monotonic, align 4
  %49 = ashr i32 %48, 1
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %21) #5
  %50 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %22, align 8
  store %"class.v8::internal::Isolate"* %50, %"class.v8::internal::Isolate"** %23, align 8
  store i64* null, i64** %24, align 8
  store i64 %32, i64* %25, align 8
  store i64 0, i64* %26, align 8
  store i8 0, i8* %27, align 4
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %50, i64 0, i32 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = add i64 %32, 35
  %54 = inttoptr i64 %53 to i32*
  %55 = load atomic i32, i32* %54 acquire, align 4
  %56 = and i64 %52, 4294967295
  %57 = icmp eq i64 %56, 0
  call void @llvm.assume(i1 %57) #5
  %58 = zext i32 %55 to i64
  %59 = or i64 %52, %58
  store i64 %59, i64* %26, align 8
  %60 = and i64 %58, 1
  %61 = icmp eq i64 %60, 0
  %62 = icmp eq i32 %55, 3
  %63 = or i1 %62, %61
  br i1 %63, label %86, label %64

64:                                               ; preds = %31
  %65 = and i64 %58, 3
  switch i64 %65, label %85 [
    i64 3, label %86
    i64 1, label %66
  ]

66:                                               ; preds = %64
  %67 = add i64 %59, -1
  %68 = inttoptr i64 %67 to i32*
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = zext i32 %69 to i64
  %71 = or i64 %52, %70
  %72 = add i64 %71, 7
  %73 = inttoptr i64 %72 to i16*
  %74 = load atomic i16, i16* %73 monotonic, align 2
  %75 = icmp eq i16 %74, 160
  br i1 %75, label %86, label %76

76:                                               ; preds = %66
  %77 = load atomic i32, i32* %68 monotonic, align 4
  %78 = zext i32 %77 to i64
  %79 = or i64 %52, %78
  %80 = add i64 %79, 7
  %81 = inttoptr i64 %80 to i16*
  %82 = load atomic i16, i16* %81 monotonic, align 2
  %83 = icmp eq i16 %82, 110
  %84 = select i1 %83, i32 0, i32 2
  br label %86

85:                                               ; preds = %64
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i64 0, i64 0)) #11
  unreachable

86:                                               ; preds = %76, %66, %64, %31
  %87 = phi i32 [ 1, %31 ], [ 3, %64 ], [ 4, %66 ], [ %84, %76 ]
  store i32 %87, i32* %28, align 8
  %88 = and i32 %49, 1
  %89 = lshr i32 %49, 3
  %90 = and i32 %89, 7
  %91 = call i64 @_ZN2v88internal19TransitionsAccessor16SearchTransitionENS0_4NameENS0_12PropertyKindENS0_18PropertyAttributesE(%"class.v8::internal::TransitionsAccessor"* nonnull %3, i64 %44, i32 %88, i32 %90) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %21) #5
  %92 = trunc i64 %91 to i32
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %153, label %94

94:                                               ; preds = %86
  %95 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %22, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %95, i64 0, i32 0, i32 4
  %97 = load i64, i64* %96, align 8
  %98 = add i64 %91, 23
  %99 = inttoptr i64 %98 to i32*
  %100 = load i32, i32* %99, align 4
  %101 = and i64 %97, 4294967295
  %102 = icmp eq i64 %101, 0
  call void @llvm.assume(i1 %102) #5
  %103 = zext i32 %100 to i64
  %104 = or i64 %97, %103
  %105 = add i64 %104, %45
  %106 = inttoptr i64 %105 to i32*
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = ashr i32 %107, 1
  %109 = xor i32 %108, %49
  %110 = and i32 %109, 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %153

112:                                              ; preds = %94
  %113 = lshr i32 %49, 1
  %114 = and i32 %113, 1
  %115 = lshr i32 %108, 1
  %116 = and i32 %115, 1
  %117 = icmp eq i32 %114, %116
  %118 = and i32 %109, 448
  %119 = icmp eq i32 %118, 0
  %120 = and i1 %117, %119
  br i1 %120, label %121, label %153

121:                                              ; preds = %112
  %122 = icmp eq i32 %114, 0
  br i1 %122, label %123, label %140

123:                                              ; preds = %121
  %124 = add nsw i64 %38, 7
  %125 = add i64 %104, %124
  %126 = inttoptr i64 %125 to i32*
  %127 = load atomic i32, i32* %126 monotonic, align 4
  %128 = zext i32 %127 to i64
  %129 = or i64 %97, %128
  %130 = call i64 @_ZN2v88internal3Map15UnwrapFieldTypeENS0_11MaybeObjectE(i64 %129) #5
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #5
  %131 = load i64, i64* %1, align 8
  %132 = and i64 %131, -4294967296
  %133 = add i64 %131, %124
  %134 = inttoptr i64 %133 to i32*
  %135 = load atomic i32, i32* %134 monotonic, align 4
  %136 = zext i32 %135 to i64
  %137 = or i64 %132, %136
  %138 = call i64 @_ZN2v88internal3Map15UnwrapFieldTypeENS0_11MaybeObjectE(i64 %137) #5
  store i64 %138, i64* %30, align 8
  %139 = call zeroext i1 @_ZNK2v88internal9FieldType5NowIsES1_(%"class.v8::internal::FieldType"* nonnull %4, i64 %130) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #5
  br i1 %139, label %150, label %153

140:                                              ; preds = %121
  %141 = load i64, i64* %1, align 8
  %142 = add nsw i64 %38, 7
  %143 = add i64 %141, %142
  %144 = inttoptr i64 %143 to i32*
  %145 = load atomic i32, i32* %144 monotonic, align 4
  %146 = add i64 %104, %142
  %147 = inttoptr i64 %146 to i32*
  %148 = load atomic i32, i32* %147 monotonic, align 4
  %149 = icmp eq i32 %145, %148
  br i1 %149, label %150, label %153

150:                                              ; preds = %140, %123
  %151 = add i64 %33, 1
  %152 = icmp eq i64 %151, %18
  br i1 %152, label %153, label %31

153:                                              ; preds = %86, %94, %112, %140, %123, %150, %2
  %154 = phi i64 [ %14, %2 ], [ %91, %150 ], [ %32, %123 ], [ %32, %140 ], [ %32, %112 ], [ %32, %94 ], [ %32, %86 ]
  %155 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %0, i64 0, i32 0
  %156 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %155, align 8
  %157 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %156, i64 0, i32 31, i32 4
  %158 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %157, align 8
  %159 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %158, null
  br i1 %159, label %162, label %160

160:                                              ; preds = %153
  %161 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %158, i64 %154) #5
  br label %175

162:                                              ; preds = %153
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %156, i64 0, i32 31, i32 0
  %164 = load i64*, i64** %163, align 8
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %156, i64 0, i32 31, i32 1
  %166 = load i64*, i64** %165, align 8
  %167 = icmp eq i64* %164, %166
  br i1 %167, label %168, label %170

168:                                              ; preds = %162
  %169 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %156) #5
  br label %170

170:                                              ; preds = %168, %162
  %171 = phi i64* [ %169, %168 ], [ %164, %162 ]
  %172 = ptrtoint i64* %171 to i64
  %173 = add i64 %172, 8
  %174 = inttoptr i64 %173 to i64*
  store i64* %174, i64** %163, align 8
  store i64 %154, i64* %171, align 8
  br label %175

175:                                              ; preds = %160, %170
  %176 = phi i64* [ %161, %160 ], [ %171, %170 ]
  ret i64* %176
}

declare zeroext i1 @_ZNK2v88internal9FieldType5NowIsES1_(%"class.v8::internal::FieldType"*, i64) local_unnamed_addr #2

declare void @_ZN2v88internal3Map23DeprecateTransitionTreeEPNS0_7IsolateE(%"class.v8::internal::Map"*, %"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare zeroext i1 @_ZN2v88internal19TransitionsAccessor22CanHaveMoreTransitionsEv(%"class.v8::internal::TransitionsAccessor"*) local_unnamed_addr #2

declare i64* @_ZN2v88internal3Map21AddMissingTransitionsEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_15DescriptorArrayEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #2

declare void @_ZN2v88internal3Map18ReplaceDescriptorsEPNS0_7IsolateENS0_15DescriptorArrayE(%"class.v8::internal::Map"*, %"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal3Map24CopyForPreventExtensionsEPNS0_7IsolateENS0_6HandleIS1_EENS0_18PropertyAttributesENS4_INS0_6SymbolEEEPKcb(%"class.v8::internal::Isolate"*, i64*, i32, i64*, i8*, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64* @_ZN2v88internal10MapUpdater27ReconfigureExistingPropertyEPNS0_7IsolateENS0_6HandleINS0_3MapEEENS0_13InternalIndexENS0_12PropertyKindENS0_18PropertyAttributesENS0_17PropertyConstnessE(%"class.v8::internal::Isolate"*, i64*, i64, i32, i32, i32) local_unnamed_addr #0 align 2 {
  %7 = alloca i32, align 4
  %8 = alloca %"class.v8::internal::OFStream", align 8
  %9 = alloca %"class.v8::internal::String", align 8
  %10 = alloca %"class.v8::internal::MapUpdater", align 8
  %11 = load i64, i64* %1, align 8
  %12 = and i64 %11, -4294967296
  %13 = add i64 %11, 19
  %14 = inttoptr i64 %13 to i32*
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i64
  %17 = or i64 %12, %16
  %18 = and i64 %16, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %20, label %22

20:                                               ; preds = %6
  %21 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  br label %48

22:                                               ; preds = %6
  %23 = add i64 %17, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = load %"class.v8::internal::SoleReadOnlyHeap"*, %"class.v8::internal::SoleReadOnlyHeap"** @_ZN2v88internal16SoleReadOnlyHeap15shared_ro_heap_E, align 8
  %27 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %26, null
  br i1 %27, label %34, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %26, i64 0, i32 0, i32 1
  %30 = load i8, i8* %29, align 8, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %34, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %26, i64 0, i32 1, i64 0
  br label %42

34:                                               ; preds = %28, %22
  %35 = and i64 %11, -262144
  %36 = or i64 %35, 16
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 16
  %39 = add i64 %38, -41416
  %40 = inttoptr i64 %39 to %"class.v8::internal::Isolate"*
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %40, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %42

42:                                               ; preds = %34, %32
  %43 = phi i64* [ %41, %34 ], [ %33, %32 ]
  %44 = getelementptr inbounds i64, i64* %43, i64 10
  %45 = load i64, i64* %44, align 8
  %46 = trunc i64 %45 to i32
  %47 = icmp eq i32 %25, %46
  br i1 %47, label %71, label %48

48:                                               ; preds = %42, %20
  %49 = phi %"class.v8::internal::SoleReadOnlyHeap"* [ %21, %20 ], [ %26, %42 ]
  %50 = icmp eq %"class.v8::internal::SoleReadOnlyHeap"* %49, null
  br i1 %50, label %57, label %51

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %49, i64 0, i32 0, i32 1
  %53 = load i8, i8* %52, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %57, label %55

55:                                               ; preds = %51
  %56 = getelementptr inbounds %"class.v8::internal::SoleReadOnlyHeap", %"class.v8::internal::SoleReadOnlyHeap"* %49, i64 0, i32 1, i64 0
  br label %65

57:                                               ; preds = %51, %48
  %58 = and i64 %11, -262144
  %59 = or i64 %58, 16
  %60 = inttoptr i64 %59 to i64*
  %61 = load i64, i64* %60, align 16
  %62 = add i64 %61, -41416
  %63 = inttoptr i64 %62 to %"class.v8::internal::Isolate"*
  %64 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %63, i64 0, i32 0, i32 7, i32 0, i64 0
  br label %65

65:                                               ; preds = %57, %55
  %66 = phi i64* [ %64, %57 ], [ %56, %55 ]
  %67 = getelementptr inbounds i64, i64* %66, i64 4
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %68, -1
  %70 = inttoptr i64 %69 to i32*
  br label %71

71:                                               ; preds = %42, %65
  %72 = phi i32* [ %24, %42 ], [ %70, %65 ]
  %73 = phi i64 [ %17, %42 ], [ %68, %65 ]
  %74 = and i64 %73, -4294967296
  %75 = load atomic i32, i32* %72 monotonic, align 4
  %76 = zext i32 %75 to i64
  %77 = or i64 %74, %76
  %78 = add i64 %77, 7
  %79 = inttoptr i64 %78 to i16*
  %80 = load atomic i16, i16* %79 monotonic, align 2
  %81 = icmp eq i16 %80, 172
  br i1 %81, label %88, label %82

82:                                               ; preds = %71
  %83 = add i64 %11, 10
  %84 = inttoptr i64 %83 to i8*
  %85 = load i8, i8* %84, align 1
  %86 = lshr i8 %85, 2
  %87 = tail call i64* @_ZN2v88internal3Map9NormalizeEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindENS0_25PropertyNormalizationModeEPKc(%"class.v8::internal::Isolate"* %0, i64* %1, i8 zeroext %86, i32 0, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.16, i64 0, i64 0)) #5
  br label %220

88:                                               ; preds = %71
  %89 = load i8, i8* @_ZN2v88internal25FLAG_trace_generalizationE, align 1, !range !2
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %149, label %91

91:                                               ; preds = %88
  %92 = load %struct._IO_FILE*, %struct._IO_FILE** @stdout, align 8
  %93 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %93)
  store i32 %4, i32* %7, align 4
  %94 = bitcast %"class.v8::internal::OFStream"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 232, i8* nonnull %94) #5
  call void @_ZN2v88internal8OFStreamC1EP8_IO_FILE(%"class.v8::internal::OFStream"* nonnull %8, %struct._IO_FILE* %92) #5
  %95 = bitcast %"class.v8::internal::OFStream"* %8 to %"class.std::__1::basic_ostream"*
  %96 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %95, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.42, i64 0, i64 0), i64 15) #5
  %97 = load i64, i64* %1, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %97, 23
  %101 = inttoptr i64 %100 to i32*
  %102 = load i32, i32* %101, align 4
  %103 = and i64 %99, 4294967295
  %104 = icmp eq i64 %103, 0
  call void @llvm.assume(i1 %104) #5
  %105 = zext i32 %102 to i64
  %106 = or i64 %99, %105
  %107 = mul i64 %2, 51539607552
  %108 = add i64 %107, 68719476736
  %109 = ashr exact i64 %108, 32
  %110 = add nsw i64 %109, -1
  %111 = add i64 %110, %106
  %112 = inttoptr i64 %111 to i32*
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = zext i32 %113 to i64
  %115 = or i64 %99, %114
  %116 = add i64 %115, -1
  %117 = inttoptr i64 %116 to i32*
  %118 = load atomic i32, i32* %117 monotonic, align 4
  %119 = zext i32 %118 to i64
  %120 = or i64 %99, %119
  %121 = add i64 %120, 7
  %122 = inttoptr i64 %121 to i16*
  %123 = load atomic i16, i16* %122 monotonic, align 2
  %124 = icmp ult i16 %123, 64
  br i1 %124, label %125, label %128

125:                                              ; preds = %91
  %126 = bitcast %"class.v8::internal::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %126) #5
  %127 = getelementptr inbounds %"class.v8::internal::String", %"class.v8::internal::String"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %115, i64* %127, align 8
  call void @_ZN2v88internal6String7PrintOnEP8_IO_FILE(%"class.v8::internal::String"* nonnull %9, %struct._IO_FILE* %92) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #5
  br label %133

128:                                              ; preds = %91
  %129 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %95, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.21, i64 0, i64 0), i64 8) #5
  %130 = inttoptr i64 %115 to i8*
  %131 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"* %129, i8* %130) #5
  %132 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %131, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.22, i64 0, i64 0), i64 1) #5
  br label %133

133:                                              ; preds = %125, %128
  %134 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %95, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.43, i64 0, i64 0), i64 2) #5
  %135 = icmp eq i32 %3, 0
  %136 = select i1 %135, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.44, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.45, i64 0, i64 0)
  %137 = select i1 %135, i64 5, i64 9
  %138 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %134, i8* %136, i64 %137) #5
  %139 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %138, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.46, i64 0, i64 0), i64 9) #5
  %140 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_18PropertyAttributesE(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %95, i32* nonnull dereferenceable(4) %7) #5
  %141 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160) %140, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.47, i64 0, i64 0), i64 2) #5
  call void @_ZN2v88internal15JavaScriptFrame8PrintTopEPNS0_7IsolateEP8_IO_FILEbb(%"class.v8::internal::Isolate"* %0, %struct._IO_FILE* %92, i1 zeroext false, i1 zeroext true) #5
  %142 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* nonnull dereferenceable(160) %95, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.32, i64 0, i64 0), i64 2) #5
  %143 = bitcast %"class.v8::internal::OFStream"* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %143, align 8
  %144 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %8, i64 0, i32 2
  %145 = bitcast %"class.std::__1::basic_ios.base"* %144 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %8, i64 0, i32 1, i32 0
  call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %146) #5
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* nonnull %95, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #5
  %147 = bitcast %"class.std::__1::basic_ios.base"* %144 to %"class.std::__1::basic_ios"*
  call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %147) #5
  call void @llvm.lifetime.end.p0i8(i64 232, i8* nonnull %94) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %93)
  %148 = load i64, i64* %1, align 8
  br label %149

149:                                              ; preds = %88, %133
  %150 = phi i64 [ %11, %88 ], [ %148, %133 ]
  %151 = bitcast %"class.v8::internal::MapUpdater"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 136, i8* nonnull %151) #5
  %152 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %10, i64 0, i32 0
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %152, align 8
  %153 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %10, i64 0, i32 1
  %154 = bitcast %"class.v8::internal::Handle.1128"* %153 to i64*
  %155 = ptrtoint i64* %1 to i64
  store i64 %155, i64* %154, align 8
  %156 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %157 = load i64, i64* %156, align 8
  %158 = add i64 %150, 23
  %159 = inttoptr i64 %158 to i32*
  %160 = load i32, i32* %159, align 4
  %161 = and i64 %157, 4294967295
  %162 = icmp eq i64 %161, 0
  call void @llvm.assume(i1 %162) #5
  %163 = zext i32 %160 to i64
  %164 = or i64 %157, %163
  %165 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %10, i64 0, i32 2, i32 0, i32 0
  %166 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 4
  %167 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %166, align 8
  %168 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %167, null
  br i1 %168, label %171, label %169

169:                                              ; preds = %149
  %170 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %167, i64 %164) #5
  br label %184

171:                                              ; preds = %149
  %172 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 0
  %173 = load i64*, i64** %172, align 8
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 31, i32 1
  %175 = load i64*, i64** %174, align 8
  %176 = icmp eq i64* %173, %175
  br i1 %176, label %177, label %179

177:                                              ; preds = %171
  %178 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #5
  br label %179

179:                                              ; preds = %177, %171
  %180 = phi i64* [ %178, %177 ], [ %173, %171 ]
  %181 = ptrtoint i64* %180 to i64
  %182 = add i64 %181, 8
  %183 = inttoptr i64 %182 to i64*
  store i64* %183, i64** %172, align 8
  store i64 %164, i64* %180, align 8
  br label %184

184:                                              ; preds = %169, %179
  %185 = phi i64* [ %170, %169 ], [ %180, %179 ]
  store i64* %185, i64** %165, align 8
  %186 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %10, i64 0, i32 3, i32 0, i32 0
  %187 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %10, i64 0, i32 6
  %188 = getelementptr inbounds %"class.v8::internal::Handle.1128", %"class.v8::internal::Handle.1128"* %153, i64 0, i32 0, i32 0
  %189 = bitcast i64** %186 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %189, i8 0, i64 24, i1 false) #5
  %190 = load i64*, i64** %188, align 8
  %191 = load i64, i64* %190, align 8
  %192 = add i64 %191, 11
  %193 = inttoptr i64 %192 to i32*
  %194 = load atomic i32, i32* %193 acquire, align 4
  %195 = lshr i32 %194, 10
  %196 = and i32 %195, 1023
  store i32 %196, i32* %187, align 8
  %197 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %10, i64 0, i32 7
  store i8 0, i8* %197, align 4
  %198 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %10, i64 0, i32 8
  store i32 0, i32* %198, align 8
  %199 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %10, i64 0, i32 9, i32 0, i32 0
  %200 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %10, i64 0, i32 12
  %201 = bitcast i64** %199 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %201, i8 0, i64 20, i1 false) #5
  %202 = load i64*, i64** %188, align 8
  %203 = load i64, i64* %202, align 8
  %204 = add i64 %203, 10
  %205 = inttoptr i64 %204 to i8*
  %206 = load i8, i8* %205, align 1
  %207 = lshr i8 %206, 2
  store i8 %207, i8* %200, align 4
  %208 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %10, i64 0, i32 13
  %209 = icmp ult i8 %206, 24
  %210 = icmp ne i8 %207, 3
  %211 = and i1 %209, %210
  %212 = zext i1 %211 to i8
  store i8 %212, i8* %208, align 1
  %213 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %10, i64 0, i32 14, i32 0
  store i64 -1, i64* %213, align 8
  %214 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %10, i64 0, i32 15
  %215 = getelementptr inbounds %"class.v8::internal::MapUpdater", %"class.v8::internal::MapUpdater"* %10, i64 0, i32 20, i32 0, i32 0
  %216 = bitcast i32* %214 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %216, i8 0, i64 17, i1 false) #5
  %217 = bitcast i64** %215 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %217, i8 0, i64 16, i1 false) #5
  %218 = call i64* @_ZN2v88internal9FieldType4NoneEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %0) #5
  %219 = call i64* @_ZN2v88internal10MapUpdater22ReconfigureToDataFieldENS0_13InternalIndexENS0_18PropertyAttributesENS0_17PropertyConstnessENS0_14RepresentationENS0_6HandleINS0_9FieldTypeEEE(%"class.v8::internal::MapUpdater"* nonnull %10, i64 %2, i32 %4, i32 %5, i8 0, i64* %218)
  call void @llvm.lifetime.end.p0i8(i64 136, i8* nonnull %151) #5
  br label %220

220:                                              ; preds = %184, %82
  %221 = phi i64* [ %87, %82 ], [ %219, %184 ]
  ret i64* %221
}

declare i64* @_ZN2v88internal9FieldType4NoneEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal10MapUpdater15UpdateFieldTypeEPNS0_7IsolateENS0_6HandleINS0_3MapEEENS0_13InternalIndexENS4_INS0_4NameEEENS0_17PropertyConstnessENS0_14RepresentationERKNS0_17MaybeObjectHandleE(%"class.v8::internal::Isolate"*, i64*, i64, i64*, i32, i8, %"class.v8::internal::MaybeObjectHandle"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %8 = alloca %"class.std::__1::queue.1139", align 8
  %9 = alloca %"class.v8::internal::TransitionsAccessor", align 8
  %10 = alloca %"class.v8::internal::DescriptorArray", align 8
  %11 = alloca %"class.v8::internal::Descriptor", align 8
  %12 = load i64, i64* %1, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %0, i64 0, i32 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %12, 23
  %16 = inttoptr i64 %15 to i32*
  %17 = load i32, i32* %16, align 4
  %18 = and i64 %14, 4294967295
  %19 = icmp eq i64 %18, 0
  tail call void @llvm.assume(i1 %19) #5
  %20 = zext i32 %17 to i64
  %21 = or i64 %14, %20
  %22 = mul i64 %2, 51539607552
  %23 = add i64 %22, 68719476736
  %24 = ashr exact i64 %23, 32
  %25 = or i64 %24, 3
  %26 = add i64 %21, %25
  %27 = inttoptr i64 %26 to i32*
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %313

31:                                               ; preds = %7
  %32 = lshr i32 %28, 3
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, %4
  br i1 %34, label %44, label %35

35:                                               ; preds = %31
  %36 = add i64 %12, 11
  %37 = inttoptr i64 %36 to i32*
  %38 = load atomic i32, i32* %37 acquire, align 4
  %39 = and i32 %38, 1048576
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %44, label %41

41:                                               ; preds = %35
  %42 = load i64, i64* %1, align 8
  %43 = tail call i64 @_ZN2v88internal8JSObject25InvalidatePrototypeChainsENS0_3MapE(i64 %42) #5
  br label %44

44:                                               ; preds = %35, %31, %41
  %45 = bitcast %"class.std::__1::queue.1139"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %45) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 48, i1 false) #5
  %46 = load i64, i64* %1, align 8
  %47 = getelementptr inbounds %"class.std::__1::queue.1139", %"class.std::__1::queue.1139"* %8, i64 0, i32 0, i32 0, i32 0, i32 2
  %48 = bitcast %"class.v8::internal::Map"*** %47 to i64*
  %49 = getelementptr inbounds %"class.std::__1::queue.1139", %"class.std::__1::queue.1139"* %8, i64 0, i32 0, i32 0, i32 0, i32 1
  %50 = bitcast %"class.v8::internal::Map"*** %49 to i64*
  %51 = getelementptr inbounds %"class.std::__1::queue.1139", %"class.std::__1::queue.1139"* %8, i64 0, i32 0, i32 0, i32 1
  %52 = getelementptr inbounds %"class.std::__1::queue.1139", %"class.std::__1::queue.1139"* %8, i64 0, i32 0, i32 0, i32 2, i32 0, i32 0
  %53 = getelementptr inbounds %"class.std::__1::queue.1139", %"class.std::__1::queue.1139"* %8, i64 0, i32 0
  call void @_ZNSt3__15dequeIN2v88internal3MapENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.1140"* nonnull %53) #5
  %54 = load i64, i64* %52, align 8
  %55 = load i64, i64* %51, align 8
  %56 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %49, align 8
  %57 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %47, align 8
  %58 = add i64 %55, %54
  %59 = icmp eq %"class.v8::internal::Map"** %57, %56
  br i1 %59, label %66, label %60

60:                                               ; preds = %44
  %61 = lshr i64 %58, 9
  %62 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %56, i64 %61
  %63 = load %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %62, align 8
  %64 = and i64 %58, 511
  %65 = getelementptr inbounds %"class.v8::internal::Map", %"class.v8::internal::Map"* %63, i64 %64
  br label %66

66:                                               ; preds = %44, %60
  %67 = phi %"class.v8::internal::Map"* [ %65, %60 ], [ null, %44 ]
  %68 = getelementptr inbounds %"class.v8::internal::Map", %"class.v8::internal::Map"* %67, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %46, i64* %68, align 8
  %69 = load i64, i64* %52, align 8
  %70 = add i64 %69, 1
  store i64 %70, i64* %52, align 8
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %258, label %72

72:                                               ; preds = %66
  %73 = bitcast %"class.v8::internal::TransitionsAccessor"* %9 to i8*
  %74 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %9, i64 0, i32 0
  %75 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %9, i64 0, i32 1, i32 0, i32 0
  %76 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %9, i64 0, i32 3, i32 0, i32 0
  %78 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %9, i64 0, i32 5
  %79 = getelementptr inbounds %"class.v8::internal::TransitionsAccessor", %"class.v8::internal::TransitionsAccessor"* %9, i64 0, i32 4
  %80 = getelementptr inbounds %"class.std::__1::queue.1139", %"class.std::__1::queue.1139"* %8, i64 0, i32 0
  %81 = bitcast %"class.v8::internal::DescriptorArray"* %10 to i8*
  %82 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = add nsw i64 %24, 7
  %84 = getelementptr inbounds %"class.v8::internal::MaybeObjectHandle", %"class.v8::internal::MaybeObjectHandle"* %6, i64 0, i32 1, i32 0
  %85 = bitcast %"class.v8::internal::Descriptor"* %11 to i8*
  br label %86

86:                                               ; preds = %72, %255
  %87 = phi i64 [ %70, %72 ], [ %256, %255 ]
  %88 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %49, align 8
  %89 = load i64, i64* %51, align 8
  %90 = lshr i64 %89, 9
  %91 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %88, i64 %90
  %92 = load %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %91, align 8
  %93 = and i64 %89, 511
  %94 = getelementptr inbounds %"class.v8::internal::Map", %"class.v8::internal::Map"* %92, i64 %93, i32 0, i32 0, i32 0, i32 0
  %95 = load i64, i64* %94, align 8
  %96 = add i64 %87, -1
  store i64 %96, i64* %52, align 8
  %97 = add i64 %89, 1
  store i64 %97, i64* %51, align 8
  %98 = icmp ult i64 %97, 1024
  br i1 %98, label %106, label %99

99:                                               ; preds = %86
  %100 = bitcast %"class.v8::internal::Map"** %88 to i8**
  %101 = load i8*, i8** %100, align 8
  call void @_ZdlPv(i8* %101) #12
  %102 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %49, align 8
  %103 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %102, i64 1
  store %"class.v8::internal::Map"** %103, %"class.v8::internal::Map"*** %49, align 8
  %104 = load i64, i64* %51, align 8
  %105 = add i64 %104, -512
  store i64 %105, i64* %51, align 8
  br label %106

106:                                              ; preds = %86, %99
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %73) #5
  store %"class.v8::internal::Isolate"* %0, %"class.v8::internal::Isolate"** %74, align 8
  store i64* null, i64** %75, align 8
  store i64 %95, i64* %76, align 8
  store i64 0, i64* %77, align 8
  store i8 0, i8* %78, align 4
  %107 = load i64, i64* %13, align 8
  %108 = add i64 %95, 35
  %109 = inttoptr i64 %108 to i32*
  %110 = load atomic i32, i32* %109 acquire, align 4
  %111 = and i64 %107, 4294967295
  %112 = icmp eq i64 %111, 0
  call void @llvm.assume(i1 %112) #5
  %113 = zext i32 %110 to i64
  %114 = or i64 %107, %113
  store i64 %114, i64* %77, align 8
  %115 = and i64 %113, 1
  %116 = icmp eq i64 %115, 0
  %117 = icmp eq i32 %110, 3
  %118 = or i1 %117, %116
  br i1 %118, label %141, label %119

119:                                              ; preds = %106
  %120 = and i64 %113, 3
  switch i64 %120, label %140 [
    i64 3, label %141
    i64 1, label %121
  ]

121:                                              ; preds = %119
  %122 = add i64 %114, -1
  %123 = inttoptr i64 %122 to i32*
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = zext i32 %124 to i64
  %126 = or i64 %107, %125
  %127 = add i64 %126, 7
  %128 = inttoptr i64 %127 to i16*
  %129 = load atomic i16, i16* %128 monotonic, align 2
  %130 = icmp eq i16 %129, 160
  br i1 %130, label %141, label %131

131:                                              ; preds = %121
  %132 = load atomic i32, i32* %123 monotonic, align 4
  %133 = zext i32 %132 to i64
  %134 = or i64 %107, %133
  %135 = add i64 %134, 7
  %136 = inttoptr i64 %135 to i16*
  %137 = load atomic i16, i16* %136 monotonic, align 2
  %138 = icmp eq i16 %137, 110
  %139 = select i1 %138, i32 0, i32 2
  br label %141

140:                                              ; preds = %119
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i64 0, i64 0)) #11
  unreachable

141:                                              ; preds = %131, %121, %119, %106
  %142 = phi i32 [ 1, %106 ], [ 3, %119 ], [ 4, %121 ], [ %139, %131 ]
  store i32 %142, i32* %79, align 8
  %143 = call i32 @_ZN2v88internal19TransitionsAccessor19NumberOfTransitionsEv(%"class.v8::internal::TransitionsAccessor"* nonnull %9) #5
  %144 = icmp sgt i32 %143, 0
  br i1 %144, label %145, label %147

145:                                              ; preds = %141
  %146 = zext i32 %143 to i64
  br label %163

147:                                              ; preds = %217, %141
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %81) #5
  %148 = load i64, i64* %13, align 8
  %149 = add i64 %95, 23
  %150 = inttoptr i64 %149 to i32*
  %151 = load i32, i32* %150, align 4
  %152 = and i64 %148, 4294967295
  %153 = icmp eq i64 %152, 0
  call void @llvm.assume(i1 %153) #5
  %154 = zext i32 %151 to i64
  %155 = or i64 %148, %154
  store i64 %155, i64* %82, align 8
  %156 = add i64 %155, %25
  %157 = inttoptr i64 %156 to i32*
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = ashr i32 %158, 1
  %160 = lshr i32 %159, 2
  %161 = and i32 %160, 1
  %162 = icmp eq i32 %161, %4
  br i1 %162, label %224, label %248

163:                                              ; preds = %217, %145
  %164 = phi i64 [ 0, %145 ], [ %222, %217 ]
  %165 = load i32, i32* %79, align 8
  switch i32 %165, label %184 [
    i32 0, label %166
    i32 1, label %166
    i32 2, label %166
    i32 3, label %167
    i32 4, label %170
  ]

166:                                              ; preds = %163, %163, %163
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i64 0, i64 0)) #11
  unreachable

167:                                              ; preds = %163
  %168 = load i64, i64* %77, align 8
  %169 = and i64 %168, -3
  br label %185

170:                                              ; preds = %163
  %171 = load i64, i64* %77, align 8
  %172 = trunc i64 %164 to i32
  %173 = shl i32 %172, 3
  %174 = and i64 %171, -4294967296
  %175 = add i32 %173, 12
  %176 = sext i32 %175 to i64
  %177 = add nsw i64 %176, 7
  %178 = add i64 %177, %171
  %179 = inttoptr i64 %178 to i32*
  %180 = load atomic i32, i32* %179 monotonic, align 4
  %181 = and i32 %180, -3
  %182 = zext i32 %181 to i64
  %183 = or i64 %174, %182
  br label %185

184:                                              ; preds = %163
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.40, i64 0, i64 0)) #11
  unreachable

185:                                              ; preds = %167, %170
  %186 = phi i64 [ %183, %170 ], [ %169, %167 ]
  %187 = load i64, i64* %48, align 8
  %188 = load i64, i64* %50, align 8
  %189 = sub i64 %187, %188
  %190 = icmp eq i64 %189, 0
  %191 = shl i64 %189, 6
  %192 = add i64 %191, -1
  %193 = select i1 %190, i64 0, i64 %192
  %194 = load i64, i64* %51, align 8
  %195 = load i64, i64* %52, align 8
  %196 = add i64 %195, %194
  %197 = icmp eq i64 %193, %196
  %198 = inttoptr i64 %188 to %"class.v8::internal::Map"**
  %199 = inttoptr i64 %187 to %"class.v8::internal::Map"**
  br i1 %197, label %200, label %206

200:                                              ; preds = %185
  call void @_ZNSt3__15dequeIN2v88internal3MapENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.1140"* nonnull %80) #5
  %201 = load i64, i64* %52, align 8
  %202 = load i64, i64* %51, align 8
  %203 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %49, align 8
  %204 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %47, align 8
  %205 = add i64 %202, %201
  br label %206

206:                                              ; preds = %200, %185
  %207 = phi i64 [ %205, %200 ], [ %196, %185 ]
  %208 = phi %"class.v8::internal::Map"** [ %204, %200 ], [ %199, %185 ]
  %209 = phi %"class.v8::internal::Map"** [ %203, %200 ], [ %198, %185 ]
  %210 = icmp eq %"class.v8::internal::Map"** %208, %209
  br i1 %210, label %217, label %211

211:                                              ; preds = %206
  %212 = lshr i64 %207, 9
  %213 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %209, i64 %212
  %214 = load %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %213, align 8
  %215 = and i64 %207, 511
  %216 = getelementptr inbounds %"class.v8::internal::Map", %"class.v8::internal::Map"* %214, i64 %215
  br label %217

217:                                              ; preds = %206, %211
  %218 = phi %"class.v8::internal::Map"* [ %216, %211 ], [ null, %206 ]
  %219 = getelementptr inbounds %"class.v8::internal::Map", %"class.v8::internal::Map"* %218, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %186, i64* %219, align 8
  %220 = load i64, i64* %52, align 8
  %221 = add i64 %220, 1
  store i64 %221, i64* %52, align 8
  %222 = add nuw nsw i64 %164, 1
  %223 = icmp eq i64 %222, %146
  br i1 %223, label %147, label %163

224:                                              ; preds = %147
  %225 = lshr i32 %159, 6
  %226 = trunc i32 %225 to i8
  %227 = and i8 %226, 7
  %228 = icmp eq i8 %227, %5
  br i1 %228, label %229, label %248

229:                                              ; preds = %224
  %230 = add i64 %83, %155
  %231 = inttoptr i64 %230 to i32*
  %232 = load atomic i32, i32* %231 monotonic, align 4
  %233 = zext i32 %232 to i64
  %234 = or i64 %148, %233
  %235 = call i64 @_ZN2v88internal3Map15UnwrapFieldTypeENS0_11MaybeObjectE(i64 %234) #5
  %236 = load i64*, i64** %84, align 8
  %237 = icmp eq i64* %236, null
  br i1 %237, label %238, label %239, !prof !4

238:                                              ; preds = %229
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.1, i64 0, i64 0), i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.41, i64 0, i64 0)) #11
  unreachable

239:                                              ; preds = %229
  %240 = load i64, i64* %236, align 8
  %241 = trunc i64 %235 to i32
  %242 = trunc i64 %240 to i32
  %243 = icmp eq i32 %241, %242
  br i1 %243, label %255, label %244

244:                                              ; preds = %239
  %245 = load i64, i64* %82, align 8
  %246 = add i64 %245, %25
  %247 = inttoptr i64 %246 to i32*
  br label %248

248:                                              ; preds = %244, %147, %224
  %249 = phi i32* [ %247, %244 ], [ %157, %147 ], [ %157, %224 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %85) #5
  %250 = load atomic i32, i32* %249 monotonic, align 4
  %251 = lshr i32 %250, 20
  %252 = and i32 %251, 1023
  %253 = lshr i32 %159, 3
  %254 = and i32 %253, 7
  call void @_ZN2v88internal10Descriptor9DataFieldENS0_6HandleINS0_4NameEEEiNS0_18PropertyAttributesENS0_17PropertyConstnessENS0_14RepresentationERKNS0_17MaybeObjectHandleE(%"class.v8::internal::Descriptor"* nonnull sret %11, i64* %3, i32 %252, i32 %254, i32 %4, i8 %5, %"class.v8::internal::MaybeObjectHandle"* dereferenceable(16) %6) #5
  call void @_ZN2v88internal15DescriptorArray7ReplaceENS0_13InternalIndexEPNS0_10DescriptorE(%"class.v8::internal::DescriptorArray"* nonnull %10, i64 %2, %"class.v8::internal::Descriptor"* nonnull %11) #5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %85) #5
  br label %255

255:                                              ; preds = %239, %248
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %81) #5
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %73) #5
  %256 = load i64, i64* %52, align 8
  %257 = icmp eq i64 %256, 0
  br i1 %257, label %258, label %86

258:                                              ; preds = %255, %66
  %259 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %49, align 8
  %260 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %47, align 8
  %261 = ptrtoint %"class.v8::internal::Map"** %260 to i64
  %262 = ptrtoint %"class.v8::internal::Map"** %259 to i64
  store i64 0, i64* %52, align 8
  %263 = sub i64 %261, %262
  %264 = ashr exact i64 %263, 3
  %265 = icmp ugt i64 %264, 2
  br i1 %265, label %266, label %279

266:                                              ; preds = %258, %266
  %267 = phi %"class.v8::internal::Map"** [ %271, %266 ], [ %259, %258 ]
  %268 = bitcast %"class.v8::internal::Map"** %267 to i8**
  %269 = load i8*, i8** %268, align 8
  call void @_ZdlPv(i8* %269) #12
  %270 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %49, align 8
  %271 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %270, i64 1
  store %"class.v8::internal::Map"** %271, %"class.v8::internal::Map"*** %49, align 8
  %272 = load i64, i64* %48, align 8
  %273 = ptrtoint %"class.v8::internal::Map"** %271 to i64
  %274 = sub i64 %272, %273
  %275 = ashr exact i64 %274, 3
  %276 = icmp ugt i64 %275, 2
  br i1 %276, label %266, label %277

277:                                              ; preds = %266
  %278 = inttoptr i64 %272 to %"class.v8::internal::Map"**
  br label %279

279:                                              ; preds = %277, %258
  %280 = phi %"class.v8::internal::Map"** [ %260, %258 ], [ %278, %277 ]
  %281 = phi %"class.v8::internal::Map"** [ %259, %258 ], [ %271, %277 ]
  %282 = phi i64 [ %264, %258 ], [ %275, %277 ]
  switch i64 %282, label %286 [
    i64 1, label %284
    i64 2, label %283
  ]

283:                                              ; preds = %279
  br label %284

284:                                              ; preds = %279, %283
  %285 = phi i64 [ 512, %283 ], [ 256, %279 ]
  store i64 %285, i64* %51, align 8
  br label %286

286:                                              ; preds = %284, %279
  %287 = icmp eq %"class.v8::internal::Map"** %281, %280
  br i1 %287, label %306, label %288

288:                                              ; preds = %286, %288
  %289 = phi %"class.v8::internal::Map"** [ %292, %288 ], [ %281, %286 ]
  %290 = bitcast %"class.v8::internal::Map"** %289 to i8**
  %291 = load i8*, i8** %290, align 8
  call void @_ZdlPv(i8* %291) #12
  %292 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %289, i64 1
  %293 = icmp eq %"class.v8::internal::Map"** %292, %280
  br i1 %293, label %294, label %288

294:                                              ; preds = %288
  %295 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %49, align 8
  %296 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %47, align 8
  %297 = icmp eq %"class.v8::internal::Map"** %296, %295
  br i1 %297, label %306, label %298

298:                                              ; preds = %294
  %299 = ptrtoint %"class.v8::internal::Map"** %295 to i64
  %300 = getelementptr %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %296, i64 -1
  %301 = ptrtoint %"class.v8::internal::Map"** %300 to i64
  %302 = sub i64 %301, %299
  %303 = lshr i64 %302, 3
  %304 = xor i64 %303, -1
  %305 = getelementptr %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %296, i64 %304
  store %"class.v8::internal::Map"** %305, %"class.v8::internal::Map"*** %47, align 8
  br label %306

306:                                              ; preds = %298, %294, %286
  %307 = getelementptr inbounds %"class.std::__1::queue.1139", %"class.std::__1::queue.1139"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %308 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %307, align 8
  %309 = icmp eq %"class.v8::internal::Map"** %308, null
  br i1 %309, label %312, label %310

310:                                              ; preds = %306
  %311 = bitcast %"class.v8::internal::Map"** %308 to i8*
  call void @_ZdlPv(i8* %311) #12
  br label %312

312:                                              ; preds = %306, %310
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %45) #5
  br label %313

313:                                              ; preds = %7, %312
  ret void
}

declare i64 @_ZN2v88internal8JSObject25InvalidatePrototypeChainsENS0_3MapE(i64) local_unnamed_addr #2

declare i32 @_ZN2v88internal19TransitionsAccessor19NumberOfTransitionsEv(%"class.v8::internal::TransitionsAccessor"*) local_unnamed_addr #2

declare void @_ZN2v88internal15DescriptorArray7ReplaceENS0_13InternalIndexEPNS0_10DescriptorE(%"class.v8::internal::DescriptorArray"*, i64, %"class.v8::internal::Descriptor"*) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal9FieldType5NowIsENS0_6HandleIS1_EE(%"class.v8::internal::FieldType"*, i64*) local_unnamed_addr #2

declare i64 @_ZNK2v88internal3Map14FindFieldOwnerEPNS0_7IsolateENS0_13InternalIndexE(%"class.v8::internal::Map"*, %"class.v8::internal::Isolate"*, i64) local_unnamed_addr #2

declare void @_ZN2v88internal13DependentCode28DeoptimizeDependentCodeGroupENS1_15DependencyGroupE(%"class.v8::internal::DependentCode"*, i32) local_unnamed_addr #2

declare zeroext i1 @_ZNK2v88internal9FieldType6EqualsES1_(%"class.v8::internal::FieldType"*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @llvm.assume(i1) #5

declare i64* @_ZN2v88internal6Object11OptimalTypeEPNS0_7IsolateENS0_14RepresentationE(%"class.v8::internal::Object"*, %"class.v8::internal::Isolate"*, i8) local_unnamed_addr #2

declare i64* @_ZN2v88internal9FieldType3AnyEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

declare void @_ZN2v88internal8OFStreamC1EP8_IO_FILE(%"class.v8::internal::OFStream"*, %struct._IO_FILE*) unnamed_addr #2

declare void @_ZN2v88internal6String7PrintOnEP8_IO_FILE(%"class.v8::internal::String"*, %struct._IO_FILE*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEPKv(%"class.std::__1::basic_ostream"*, i8*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_5BriefE(%"class.std::__1::basic_ostream"* dereferenceable(160), %"struct.v8::internal::Brief"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZNK2v88internal9FieldType7PrintToERNSt3__113basic_ostreamIcNS2_11char_traitsIcEEEE(%"class.v8::internal::FieldType"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEENS0_17PropertyConstnessE(%"class.std::__1::basic_ostream"* dereferenceable(160), i32) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #6

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEElsEi(%"class.std::__1::basic_ostream"*, i32) local_unnamed_addr #2

declare void @_ZN2v88internal15JavaScriptFrame8PrintTopEPNS0_7IsolateEP8_IO_FILEbb(%"class.v8::internal::Isolate"*, %struct._IO_FILE*, i1 zeroext, i1 zeroext) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #5
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #5
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZNSt3__124__put_character_sequenceIcNS_11char_traitsIcEEEERNS_13basic_ostreamIT_T0_EES7_PKS4_m(%"class.std::__1::basic_ostream"* dereferenceable(160), i8*, i64) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.std::__1::locale", align 8
  %5 = alloca %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", align 8
  %6 = getelementptr inbounds %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry", %"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #5
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5, %"class.std::__1::basic_ostream"* dereferenceable(160) %0) #5
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %58, label %9

9:                                                ; preds = %3
  %10 = bitcast %"class.std::__1::basic_ostream"* %0 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr i8, i8* %11, i64 -24
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = bitcast %"class.std::__1::basic_ostream"* %0 to i8*
  %16 = getelementptr inbounds i8, i8* %15, i64 %14
  %17 = getelementptr inbounds i8, i8* %16, i64 40
  %18 = bitcast i8* %17 to %"class.std::__1::basic_streambuf"**
  %19 = load %"class.std::__1::basic_streambuf"*, %"class.std::__1::basic_streambuf"** %18, align 8
  %20 = bitcast i8* %16 to %"class.std::__1::ios_base"*
  %21 = getelementptr inbounds i8, i8* %16, i64 8
  %22 = bitcast i8* %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = and i32 %23, 176
  %25 = icmp eq i32 %24, 32
  %26 = getelementptr inbounds i8, i8* %1, i64 %2
  %27 = select i1 %25, i8* %26, i8* %1
  %28 = getelementptr inbounds i8, i8* %16, i64 144
  %29 = bitcast i8* %28 to i32*
  %30 = load i32, i32* %29, align 8
  %31 = icmp eq i32 %30, -1
  br i1 %31, label %32, label %42

32:                                               ; preds = %9
  %33 = bitcast %"class.std::__1::locale"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #5
  call void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* nonnull sret %4, %"class.std::__1::ios_base"* %20) #5
  %34 = call %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"* nonnull %4, %"class.std::__1::locale::id"* nonnull dereferenceable(16) @_ZNSt3__15ctypeIcE2idE) #5
  %35 = bitcast %"class.std::__1::locale::facet"* %34 to %"class.std::__1::ctype"*
  %36 = bitcast %"class.std::__1::locale::facet"* %34 to i8 (%"class.std::__1::ctype"*, i8)***
  %37 = load i8 (%"class.std::__1::ctype"*, i8)**, i8 (%"class.std::__1::ctype"*, i8)*** %36, align 8
  %38 = getelementptr inbounds i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %37, i64 7
  %39 = load i8 (%"class.std::__1::ctype"*, i8)*, i8 (%"class.std::__1::ctype"*, i8)** %38, align 8
  %40 = call signext i8 %39(%"class.std::__1::ctype"* %35, i8 signext 32) #5
  call void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"* nonnull %4) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #5
  %41 = sext i8 %40 to i32
  store i32 %41, i32* %29, align 8
  br label %42

42:                                               ; preds = %9, %32
  %43 = phi i32 [ %41, %32 ], [ %30, %9 ]
  %44 = trunc i32 %43 to i8
  %45 = call %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"* %19, i8* %1, i8* %27, i8* %26, %"class.std::__1::ios_base"* dereferenceable(136) %20, i8 signext %44)
  %46 = icmp eq %"class.std::__1::basic_streambuf"* %45, null
  br i1 %46, label %47, label %58

47:                                               ; preds = %42
  %48 = load i8*, i8** %10, align 8
  %49 = getelementptr i8, i8* %48, i64 -24
  %50 = bitcast i8* %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = getelementptr inbounds i8, i8* %15, i64 %51
  %53 = bitcast i8* %52 to %"class.std::__1::ios_base"*
  %54 = getelementptr inbounds i8, i8* %52, i64 32
  %55 = bitcast i8* %54 to i32*
  %56 = load i32, i32* %55, align 8
  %57 = or i32 %56, 5
  call void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"* %53, i32 %57) #5
  br label %58

58:                                               ; preds = %3, %42, %47
  call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #5
  ret %"class.std::__1::basic_ostream"* %0
}

declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryC1ERS3_(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*, %"class.std::__1::basic_ostream"* dereferenceable(160)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::basic_streambuf"* @_ZNSt3__116__pad_and_outputIcNS_11char_traitsIcEEEENS_19ostreambuf_iteratorIT_T0_EES6_PKS4_S8_S8_RNS_8ios_baseES4_(%"class.std::__1::basic_streambuf"*, i8*, i8*, i8*, %"class.std::__1::ios_base"* dereferenceable(136), i8 signext) local_unnamed_addr #0 comdat {
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = icmp eq %"class.std::__1::basic_streambuf"* %0, null
  br i1 %8, label %78, label %9

9:                                                ; preds = %6
  %10 = ptrtoint i8* %3 to i64
  %11 = ptrtoint i8* %1 to i64
  %12 = sub i64 %10, %11
  %13 = getelementptr inbounds %"class.std::__1::ios_base", %"class.std::__1::ios_base"* %4, i64 0, i32 3
  %14 = load i64, i64* %13, align 8
  %15 = icmp sgt i64 %14, %12
  %16 = sub nsw i64 %14, %12
  %17 = select i1 %15, i64 %16, i64 0
  %18 = ptrtoint i8* %2 to i64
  %19 = sub i64 %18, %11
  %20 = icmp sgt i64 %19, 0
  br i1 %20, label %21, label %28

21:                                               ; preds = %9
  %22 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %23 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %22, align 8
  %24 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %23, i64 12
  %25 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %24, align 8
  %26 = tail call i64 %25(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %1, i64 %19) #5
  %27 = icmp eq i64 %26, %19
  br i1 %27, label %28, label %78

28:                                               ; preds = %21, %9
  %29 = icmp sgt i64 %17, 0
  br i1 %29, label %30, label %67

30:                                               ; preds = %28
  %31 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #5
  %32 = icmp ult i64 %17, 23
  br i1 %32, label %42, label %33

33:                                               ; preds = %30
  %34 = add nuw i64 %17, 16
  %35 = and i64 %34, -16
  %36 = tail call i8* @_Znwm(i64 %35) #12
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %36, i8** %37, align 8
  %38 = or i64 %35, -9223372036854775808
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %38, i64* %39, align 8
  %40 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %17, i64* %40, align 8
  %41 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  br label %46

42:                                               ; preds = %30
  %43 = trunc i64 %17 to i8
  %44 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %45 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %44, i64 0, i32 1, i32 0
  store i8 %43, i8* %45, align 1
  br label %46

46:                                               ; preds = %33, %42
  %47 = phi %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* [ %41, %33 ], [ %44, %42 ]
  %48 = phi i8* [ %36, %33 ], [ %31, %42 ]
  call void @llvm.memset.p0i8.i64(i8* nonnull align 1 %48, i8 %5, i64 %17, i1 false) #5
  %49 = getelementptr inbounds i8, i8* %48, i64 %17
  store i8 0, i8* %49, align 1
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %47, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  %55 = select i1 %52, i8* %54, i8* %31
  %56 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %57 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %56, align 8
  %58 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %57, i64 12
  %59 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %58, align 8
  %60 = call i64 %59(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %55, i64 %17) #5
  %61 = icmp eq i64 %60, %17
  %62 = load i8, i8* %50, align 1
  %63 = icmp slt i8 %62, 0
  br i1 %63, label %64, label %66

64:                                               ; preds = %46
  %65 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %65) #12
  br label %66

66:                                               ; preds = %46, %64
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #5
  br i1 %61, label %67, label %78

67:                                               ; preds = %66, %28
  %68 = sub i64 %10, %18
  %69 = icmp sgt i64 %68, 0
  br i1 %69, label %70, label %77

70:                                               ; preds = %67
  %71 = bitcast %"class.std::__1::basic_streambuf"* %0 to i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)***
  %72 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)**, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*** %71, align 8
  %73 = getelementptr inbounds i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %72, i64 12
  %74 = load i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)*, i64 (%"class.std::__1::basic_streambuf"*, i8*, i64)** %73, align 8
  %75 = call i64 %74(%"class.std::__1::basic_streambuf"* nonnull %0, i8* %2, i64 %68) #5
  %76 = icmp eq i64 %75, %68
  br i1 %76, label %77, label %78

77:                                               ; preds = %70, %67
  store i64 0, i64* %13, align 8
  br label %78

78:                                               ; preds = %77, %66, %21, %70, %6
  %79 = phi %"class.std::__1::basic_streambuf"* [ null, %6 ], [ %0, %77 ], [ null, %66 ], [ null, %21 ], [ null, %70 ]
  ret %"class.std::__1::basic_streambuf"* %79
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEE6sentryD1Ev(%"class.std::__1::basic_ostream<char, std::__1::char_traits<char> >::sentry"*) unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

declare void @_ZNKSt3__18ios_base6getlocEv(%"class.std::__1::locale"* sret, %"class.std::__1::ios_base"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__16localeD1Ev(%"class.std::__1::locale"*) unnamed_addr #7

declare %"class.std::__1::locale::facet"* @_ZNKSt3__16locale9use_facetERNS0_2idE(%"class.std::__1::locale"*, %"class.std::__1::locale::id"* dereferenceable(16)) local_unnamed_addr #2

declare void @_ZNSt3__18ios_base5clearEj(%"class.std::__1::ios_base"*, i32) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD1Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #5
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #5
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #5
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED1Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
declare void @_ZTv0_n24_NSt3__113basic_ostreamIcNS_11char_traitsIcEEED0Ev(%"class.std::__1::basic_ostream"*) unnamed_addr #0 align 2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 2
  %4 = bitcast %"class.std::__1::basic_ios.base"* %3 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %4, align 8
  %5 = getelementptr inbounds %"class.v8::internal::OFStream", %"class.v8::internal::OFStream"* %0, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %5) #5
  %6 = bitcast %"class.v8::internal::OFStream"* %0 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %6, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #5
  %7 = bitcast %"class.std::__1::basic_ios.base"* %3 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %7) #5
  %8 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  tail call void @_ZdlPv(i8* %8) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZTv0_n24_N2v88internal8OFStreamD0Ev(%"class.v8::internal::OFStream"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.v8::internal::OFStream"* %0 to i8*
  %3 = bitcast %"class.v8::internal::OFStream"* %0 to i8**
  %4 = load i8*, i8** %3, align 8
  %5 = getelementptr inbounds i8, i8* %4, i64 -24
  %6 = bitcast i8* %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds i8, i8* %2, i64 %7
  %9 = bitcast i8* %8 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 0, i64 3) to i64), i64* %9, align 8
  %10 = getelementptr inbounds i8, i8* %8, i64 80
  %11 = bitcast i8* %10 to i64*
  store i64 ptrtoint (i8** getelementptr inbounds ({ [5 x i8*], [5 x i8*] }, { [5 x i8*], [5 x i8*] }* @_ZTVN2v88internal8OFStreamE, i64 0, inrange i32 1, i64 3) to i64), i64* %11, align 8
  %12 = getelementptr inbounds i8, i8* %8, i64 8
  %13 = bitcast i8* %12 to %"class.std::__1::basic_streambuf"*
  tail call void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"* %13) #5
  %14 = bitcast i8* %8 to %"class.std::__1::basic_ostream"*
  tail call void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"* %14, i8** getelementptr inbounds ([4 x i8*], [4 x i8*]* @_ZTTN2v88internal8OFStreamE, i64 0, i64 1)) #5
  %15 = bitcast i8* %10 to %"class.std::__1::basic_ios"*
  tail call void @_ZNSt3__19basic_iosIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ios"* %15) #5
  tail call void @_ZdlPv(i8* %8) #12
  ret void
}

; Function Attrs: nounwind
declare void @_ZNSt3__115basic_streambufIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_streambuf"*) unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZNSt3__113basic_ostreamIcNS_11char_traitsIcEEED2Ev(%"class.std::__1::basic_ostream"*, i8**) unnamed_addr #7

declare i64 @_ZN2v88internal3Map15UnwrapFieldTypeENS0_11MaybeObjectE(i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #2

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15DescriptorArray3SetENS0_13InternalIndexENS0_4NameENS0_11MaybeObjectENS0_15PropertyDetailsE(%"class.v8::internal::DescriptorArray"*, i64, i64, i64, i32) local_unnamed_addr #4 comdat align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::DescriptorArray", %"class.v8::internal::DescriptorArray"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = mul i64 %1, 51539607552
  %9 = add i64 %8, 68719476736
  %10 = ashr exact i64 %9, 32
  %11 = add nsw i64 %10, -1
  %12 = add i64 %7, %11
  %13 = inttoptr i64 %12 to i32*
  %14 = trunc i64 %2 to i32
  store atomic volatile i32 %14, i32* %13 monotonic, align 4
  %15 = load i64, i64* %6, align 8
  %16 = add i64 %15, %11
  %17 = and i64 %2, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %32, label %19

19:                                               ; preds = %5
  %20 = and i64 %15, -262144
  %21 = or i64 %20, 8
  %22 = inttoptr i64 %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, 262144
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %32, label %26

26:                                               ; preds = %19
  %27 = or i64 %20, 16
  %28 = inttoptr i64 %27 to %"class.v8::internal::Heap"**
  %29 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %28, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %29, i64 %15, i64 %16, i64 %2) #5
  %30 = load i64, i64* %6, align 8
  %31 = add i64 %30, %11
  br label %32

32:                                               ; preds = %26, %19, %5
  %33 = phi i64 [ %16, %5 ], [ %16, %19 ], [ %31, %26 ]
  %34 = phi i64 [ %15, %5 ], [ %15, %19 ], [ %30, %26 ]
  %35 = and i64 %2, -262144
  %36 = or i64 %35, 8
  %37 = inttoptr i64 %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 24
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %50, label %41

41:                                               ; preds = %32
  %42 = and i64 %34, -262144
  %43 = or i64 %42, 8
  %44 = inttoptr i64 %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = and i64 %45, 24
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %41
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %34, i64 %33, i64 %2) #5
  %49 = load i64, i64* %6, align 8
  br label %50

50:                                               ; preds = %32, %41, %48
  %51 = phi i64 [ %34, %32 ], [ %34, %41 ], [ %49, %48 ]
  %52 = shl i32 %4, 1
  %53 = or i64 %10, 3
  %54 = add i64 %51, %53
  %55 = inttoptr i64 %54 to i32*
  store atomic volatile i32 %52, i32* %55 monotonic, align 4
  %56 = load i64, i64* %6, align 8
  %57 = ashr exact i64 %8, 32
  %58 = add nsw i64 %57, 23
  %59 = add i64 %56, %58
  %60 = inttoptr i64 %59 to i32*
  %61 = trunc i64 %3 to i32
  store atomic volatile i32 %61, i32* %60 monotonic, align 4
  %62 = load i64, i64* %6, align 8
  %63 = add i64 %62, %58
  %64 = and i64 %3, 1
  %65 = icmp ne i64 %64, 0
  %66 = icmp ne i32 %61, 3
  %67 = and i1 %66, %65
  br i1 %67, label %68, label %99

68:                                               ; preds = %50
  %69 = and i64 %62, -262144
  %70 = or i64 %69, 8
  %71 = inttoptr i64 %70 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = and i64 %72, 262144
  %74 = icmp eq i64 %73, 0
  %75 = and i64 %3, -3
  br i1 %74, label %82, label %76

76:                                               ; preds = %68
  %77 = or i64 %69, 16
  %78 = inttoptr i64 %77 to %"class.v8::internal::Heap"**
  %79 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %78, align 16
  tail call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"* %79, i64 %62, i64 %63, i64 %75) #5
  %80 = load i64, i64* %6, align 8
  %81 = add i64 %80, %58
  br label %82

82:                                               ; preds = %76, %68
  %83 = phi i64 [ %81, %76 ], [ %63, %68 ]
  %84 = phi i64 [ %80, %76 ], [ %62, %68 ]
  %85 = and i64 %3, -262144
  %86 = or i64 %85, 8
  %87 = inttoptr i64 %86 to i64*
  %88 = load i64, i64* %87, align 8
  %89 = and i64 %88, 24
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %99, label %91

91:                                               ; preds = %82
  %92 = and i64 %84, -262144
  %93 = or i64 %92, 8
  %94 = inttoptr i64 %93 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = and i64 %95, 24
  %97 = icmp eq i64 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %91
  tail call void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64 %84, i64 %83, i64 %75) #5
  br label %99

99:                                               ; preds = %50, %82, %91, %98
  ret void
}

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_10HeapObjectENS0_24CompressedHeapObjectSlotES4_(%"class.v8::internal::Heap"*, i64, i64, i64) local_unnamed_addr #2

declare void @_ZN2v88internal28Heap_GenerationalBarrierSlowENS0_10HeapObjectEmS1_(i64, i64, i64) local_unnamed_addr #2

declare i64 @_ZN2v88internal9FieldType3AnyEv() local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN2v88internallsERNSt3__113basic_ostreamIcNS1_11char_traitsIcEEEERKNS0_18PropertyAttributesE(%"class.std::__1::basic_ostream"* dereferenceable(160), i32* dereferenceable(4)) local_unnamed_addr #2

declare i64 @_ZN2v88internal9FieldType4NoneEv() local_unnamed_addr #2

declare void @_ZN2v84base11SharedMutex13LockExclusiveEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #2

declare void @_ZN2v84base11SharedMutex15UnlockExclusiveEv(%"class.v8::base::SharedMutex"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__15dequeIN2v88internal3MapENS_9allocatorIS3_EEE19__add_back_capacityEv(%"class.std::__1::deque.1140"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.v8::internal::Map"*, align 8
  %3 = alloca %"class.v8::internal::Map"*, align 8
  %4 = getelementptr inbounds %"class.std::__1::deque.1140", %"class.std::__1::deque.1140"* %0, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, 511
  br i1 %6, label %7, label %161

7:                                                ; preds = %1
  %8 = add i64 %5, -512
  store i64 %8, i64* %4, align 8
  %9 = getelementptr inbounds %"class.std::__1::deque.1140", %"class.std::__1::deque.1140"* %0, i64 0, i32 0, i32 0, i32 1
  %10 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %9, align 8
  %11 = bitcast %"class.v8::internal::Map"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %10, i64 1
  store %"class.v8::internal::Map"** %13, %"class.v8::internal::Map"*** %9, align 8
  %14 = getelementptr inbounds %"class.std::__1::deque.1140", %"class.std::__1::deque.1140"* %0, i64 0, i32 0, i32 0, i32 2
  %15 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %14, align 8
  %16 = getelementptr inbounds %"class.std::__1::deque.1140", %"class.std::__1::deque.1140"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %17 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %16, align 8
  %18 = icmp eq %"class.v8::internal::Map"** %15, %17
  %19 = ptrtoint %"class.v8::internal::Map"** %17 to i64
  %20 = bitcast %"class.v8::internal::Map"** %15 to i64*
  br i1 %18, label %21, label %157

21:                                               ; preds = %7
  %22 = getelementptr inbounds %"class.std::__1::deque.1140", %"class.std::__1::deque.1140"* %0, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %22, align 8
  %24 = icmp ugt %"class.v8::internal::Map"** %13, %23
  %25 = ptrtoint %"class.v8::internal::Map"** %23 to i64
  br i1 %24, label %26, label %46

26:                                               ; preds = %21
  %27 = ptrtoint %"class.v8::internal::Map"** %13 to i64
  %28 = sub i64 %27, %25
  %29 = ashr exact i64 %28, 3
  %30 = add nsw i64 %29, 1
  %31 = sdiv i64 %30, -2
  %32 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %13, i64 %31
  %33 = ptrtoint %"class.v8::internal::Map"** %15 to i64
  %34 = sub i64 %33, %27
  %35 = ashr exact i64 %34, 3
  %36 = icmp eq i64 %34, 0
  br i1 %36, label %41, label %37

37:                                               ; preds = %26
  %38 = bitcast %"class.v8::internal::Map"** %32 to i8*
  %39 = bitcast %"class.v8::internal::Map"** %13 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 %34, i1 false) #5
  %40 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %9, align 8
  br label %41

41:                                               ; preds = %37, %26
  %42 = phi %"class.v8::internal::Map"** [ %13, %26 ], [ %40, %37 ]
  %43 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %32, i64 %35
  store %"class.v8::internal::Map"** %43, %"class.v8::internal::Map"*** %14, align 8
  %44 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %42, i64 %31
  store %"class.v8::internal::Map"** %44, %"class.v8::internal::Map"*** %9, align 8
  %45 = bitcast %"class.v8::internal::Map"** %43 to i64*
  br label %157

46:                                               ; preds = %21
  %47 = bitcast %"class.v8::internal::Map"*** %16 to i64*
  %48 = bitcast %"class.std::__1::deque.1140"* %0 to i64*
  %49 = sub i64 %19, %25
  %50 = ashr exact i64 %49, 2
  %51 = icmp eq i64 %49, 0
  %52 = select i1 %51, i64 1, i64 %50
  %53 = icmp ugt i64 %52, 2305843009213693951
  br i1 %53, label %54, label %55

54:                                               ; preds = %46
  tail call void @abort() #11
  unreachable

55:                                               ; preds = %46
  %56 = lshr i64 %52, 2
  %57 = shl i64 %52, 3
  %58 = tail call i8* @_Znwm(i64 %57) #12
  %59 = bitcast i8* %58 to %"class.v8::internal::Map"**
  %60 = ptrtoint i8* %58 to i64
  %61 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %59, i64 %56
  %62 = ptrtoint %"class.v8::internal::Map"** %61 to i64
  %63 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %59, i64 %52
  %64 = ptrtoint %"class.v8::internal::Map"** %63 to i64
  %65 = ptrtoint %"class.v8::internal::Map"** %13 to i64
  %66 = ptrtoint %"class.v8::internal::Map"** %15 to i64
  %67 = sub i64 %66, %65
  %68 = ashr exact i64 %67, 3
  %69 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %61, i64 %68
  %70 = icmp eq i64 %67, 0
  br i1 %70, label %146, label %71

71:                                               ; preds = %55
  %72 = add i64 %67, -8
  %73 = lshr i64 %72, 3
  %74 = add nuw nsw i64 %73, 1
  %75 = and i64 %74, 7
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %92, label %77

77:                                               ; preds = %71, %77
  %78 = phi %"class.v8::internal::Map"** [ %85, %77 ], [ %61, %71 ]
  %79 = phi i64 [ %86, %77 ], [ %62, %71 ]
  %80 = phi %"class.v8::internal::Map"** [ %87, %77 ], [ %13, %71 ]
  %81 = phi i64 [ %88, %77 ], [ %75, %71 ]
  %82 = bitcast %"class.v8::internal::Map"** %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = inttoptr i64 %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %78, i64 1
  %86 = ptrtoint %"class.v8::internal::Map"** %85 to i64
  %87 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %80, i64 1
  %88 = add i64 %81, -1
  %89 = icmp eq i64 %88, 0
  br i1 %89, label %90, label %77, !llvm.loop !5

90:                                               ; preds = %77
  %91 = ptrtoint %"class.v8::internal::Map"** %85 to i64
  br label %92

92:                                               ; preds = %71, %90
  %93 = phi %"class.v8::internal::Map"** [ %61, %71 ], [ %85, %90 ]
  %94 = phi i64 [ %62, %71 ], [ %91, %90 ]
  %95 = phi %"class.v8::internal::Map"** [ %13, %71 ], [ %87, %90 ]
  %96 = icmp ult i64 %72, 56
  br i1 %96, label %143, label %97

97:                                               ; preds = %92, %97
  %98 = phi %"class.v8::internal::Map"** [ %139, %97 ], [ %93, %92 ]
  %99 = phi i64 [ %140, %97 ], [ %94, %92 ]
  %100 = phi %"class.v8::internal::Map"** [ %141, %97 ], [ %95, %92 ]
  %101 = bitcast %"class.v8::internal::Map"** %100 to i64*
  %102 = load i64, i64* %101, align 8
  %103 = inttoptr i64 %99 to i64*
  store i64 %102, i64* %103, align 8
  %104 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %98, i64 1
  %105 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %100, i64 1
  %106 = bitcast %"class.v8::internal::Map"** %105 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.v8::internal::Map"** %104 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %98, i64 2
  %110 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %100, i64 2
  %111 = bitcast %"class.v8::internal::Map"** %110 to i64*
  %112 = load i64, i64* %111, align 8
  %113 = bitcast %"class.v8::internal::Map"** %109 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %98, i64 3
  %115 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %100, i64 3
  %116 = bitcast %"class.v8::internal::Map"** %115 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = bitcast %"class.v8::internal::Map"** %114 to i64*
  store i64 %117, i64* %118, align 8
  %119 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %98, i64 4
  %120 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %100, i64 4
  %121 = bitcast %"class.v8::internal::Map"** %120 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = bitcast %"class.v8::internal::Map"** %119 to i64*
  store i64 %122, i64* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %98, i64 5
  %125 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %100, i64 5
  %126 = bitcast %"class.v8::internal::Map"** %125 to i64*
  %127 = load i64, i64* %126, align 8
  %128 = bitcast %"class.v8::internal::Map"** %124 to i64*
  store i64 %127, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %98, i64 6
  %130 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %100, i64 6
  %131 = bitcast %"class.v8::internal::Map"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast %"class.v8::internal::Map"** %129 to i64*
  store i64 %132, i64* %133, align 8
  %134 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %98, i64 7
  %135 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %100, i64 7
  %136 = bitcast %"class.v8::internal::Map"** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = bitcast %"class.v8::internal::Map"** %134 to i64*
  store i64 %137, i64* %138, align 8
  %139 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %98, i64 8
  %140 = ptrtoint %"class.v8::internal::Map"** %139 to i64
  %141 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %100, i64 8
  %142 = icmp eq %"class.v8::internal::Map"** %69, %139
  br i1 %142, label %143, label %97

143:                                              ; preds = %97, %92
  %144 = ptrtoint %"class.v8::internal::Map"** %69 to i64
  %145 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %22, align 8
  br label %146

146:                                              ; preds = %143, %55
  %147 = phi %"class.v8::internal::Map"** [ %145, %143 ], [ %23, %55 ]
  %148 = phi i64 [ %144, %143 ], [ %62, %55 ]
  store i64 %60, i64* %48, align 8
  %149 = bitcast %"class.v8::internal::Map"*** %9 to i64*
  store i64 %62, i64* %149, align 8
  %150 = bitcast %"class.v8::internal::Map"*** %14 to i64*
  store i64 %148, i64* %150, align 8
  store i64 %64, i64* %47, align 8
  %151 = icmp eq %"class.v8::internal::Map"** %147, null
  %152 = inttoptr i64 %148 to i64*
  br i1 %151, label %157, label %153

153:                                              ; preds = %146
  %154 = bitcast %"class.v8::internal::Map"** %147 to i8*
  tail call void @_ZdlPv(i8* %154) #12
  %155 = bitcast %"class.v8::internal::Map"*** %14 to i64**
  %156 = load i64*, i64** %155, align 8
  br label %157

157:                                              ; preds = %7, %41, %146, %153
  %158 = phi i64* [ %156, %153 ], [ %152, %146 ], [ %45, %41 ], [ %20, %7 ]
  store i64 %12, i64* %158, align 8
  %159 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %14, align 8
  %160 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %159, i64 1
  store %"class.v8::internal::Map"** %160, %"class.v8::internal::Map"*** %14, align 8
  br label %549

161:                                              ; preds = %1
  %162 = getelementptr inbounds %"class.std::__1::deque.1140", %"class.std::__1::deque.1140"* %0, i64 0, i32 0, i32 0
  %163 = getelementptr inbounds %"class.std::__1::deque.1140", %"class.std::__1::deque.1140"* %0, i64 0, i32 0, i32 0, i32 2
  %164 = bitcast %"class.v8::internal::Map"*** %163 to i64*
  %165 = load i64, i64* %164, align 8
  %166 = getelementptr inbounds %"class.std::__1::deque.1140", %"class.std::__1::deque.1140"* %0, i64 0, i32 0, i32 0, i32 1
  %167 = bitcast %"class.v8::internal::Map"*** %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = sub i64 %165, %168
  %170 = ashr exact i64 %169, 3
  %171 = getelementptr inbounds %"class.std::__1::deque.1140", %"class.std::__1::deque.1140"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %172 = bitcast %"class.v8::internal::Map"*** %171 to i64*
  %173 = load i64, i64* %172, align 8
  %174 = bitcast %"class.std::__1::deque.1140"* %0 to i64*
  %175 = load i64, i64* %174, align 8
  %176 = sub i64 %173, %175
  %177 = ashr exact i64 %176, 3
  %178 = icmp ult i64 %170, %177
  %179 = inttoptr i64 %165 to %"class.v8::internal::Map"**
  %180 = inttoptr i64 %168 to %"class.v8::internal::Map"**
  br i1 %178, label %181, label %336

181:                                              ; preds = %161
  %182 = icmp eq i64 %173, %165
  br i1 %182, label %187, label %183

183:                                              ; preds = %181
  %184 = bitcast %"class.v8::internal::Map"** %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %184) #5
  %185 = tail call i8* @_Znwm(i64 4096) #12
  %186 = bitcast %"class.v8::internal::Map"** %2 to i8**
  store i8* %185, i8** %186, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal3MapENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer.1142"* %162, %"class.v8::internal::Map"** nonnull dereferenceable(8) %2)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %184) #5
  br label %549

187:                                              ; preds = %181
  %188 = bitcast %"class.v8::internal::Map"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %188) #5
  %189 = tail call i8* @_Znwm(i64 4096) #12
  %190 = bitcast %"class.v8::internal::Map"** %3 to i8**
  store i8* %189, i8** %190, align 8
  call void @_ZNSt3__114__split_bufferIPN2v88internal3MapENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer.1142"* %162, %"class.v8::internal::Map"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %188) #5
  %191 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %166, align 8
  %192 = bitcast %"class.v8::internal::Map"** %191 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %191, i64 1
  store %"class.v8::internal::Map"** %194, %"class.v8::internal::Map"*** %166, align 8
  %195 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %163, align 8
  %196 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %171, align 8
  %197 = icmp eq %"class.v8::internal::Map"** %195, %196
  %198 = ptrtoint %"class.v8::internal::Map"** %196 to i64
  %199 = bitcast %"class.v8::internal::Map"** %195 to i64*
  br i1 %197, label %200, label %332

200:                                              ; preds = %187
  %201 = getelementptr inbounds %"class.std::__1::deque.1140", %"class.std::__1::deque.1140"* %0, i64 0, i32 0, i32 0, i32 0
  %202 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %201, align 8
  %203 = icmp ugt %"class.v8::internal::Map"** %194, %202
  %204 = ptrtoint %"class.v8::internal::Map"** %202 to i64
  br i1 %203, label %205, label %225

205:                                              ; preds = %200
  %206 = ptrtoint %"class.v8::internal::Map"** %194 to i64
  %207 = sub i64 %206, %204
  %208 = ashr exact i64 %207, 3
  %209 = add nsw i64 %208, 1
  %210 = sdiv i64 %209, -2
  %211 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %194, i64 %210
  %212 = ptrtoint %"class.v8::internal::Map"** %195 to i64
  %213 = sub i64 %212, %206
  %214 = ashr exact i64 %213, 3
  %215 = icmp eq i64 %213, 0
  br i1 %215, label %220, label %216

216:                                              ; preds = %205
  %217 = bitcast %"class.v8::internal::Map"** %211 to i8*
  %218 = bitcast %"class.v8::internal::Map"** %194 to i8*
  call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %218, i64 %213, i1 false) #5
  %219 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %166, align 8
  br label %220

220:                                              ; preds = %216, %205
  %221 = phi %"class.v8::internal::Map"** [ %194, %205 ], [ %219, %216 ]
  %222 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %211, i64 %214
  store %"class.v8::internal::Map"** %222, %"class.v8::internal::Map"*** %163, align 8
  %223 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %221, i64 %210
  store %"class.v8::internal::Map"** %223, %"class.v8::internal::Map"*** %166, align 8
  %224 = bitcast %"class.v8::internal::Map"** %222 to i64*
  br label %332

225:                                              ; preds = %200
  %226 = sub i64 %198, %204
  %227 = ashr exact i64 %226, 2
  %228 = icmp eq i64 %226, 0
  %229 = select i1 %228, i64 1, i64 %227
  %230 = icmp ugt i64 %229, 2305843009213693951
  br i1 %230, label %231, label %232

231:                                              ; preds = %225
  call void @abort() #11
  unreachable

232:                                              ; preds = %225
  %233 = lshr i64 %229, 2
  %234 = shl i64 %229, 3
  %235 = call i8* @_Znwm(i64 %234) #12
  %236 = bitcast i8* %235 to %"class.v8::internal::Map"**
  %237 = ptrtoint i8* %235 to i64
  %238 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %236, i64 %233
  %239 = ptrtoint %"class.v8::internal::Map"** %238 to i64
  %240 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %236, i64 %229
  %241 = ptrtoint %"class.v8::internal::Map"** %240 to i64
  %242 = ptrtoint %"class.v8::internal::Map"** %194 to i64
  %243 = ptrtoint %"class.v8::internal::Map"** %195 to i64
  %244 = sub i64 %243, %242
  %245 = ashr exact i64 %244, 3
  %246 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %238, i64 %245
  %247 = icmp eq i64 %244, 0
  br i1 %247, label %323, label %248

248:                                              ; preds = %232
  %249 = add i64 %244, -8
  %250 = lshr i64 %249, 3
  %251 = add nuw nsw i64 %250, 1
  %252 = and i64 %251, 7
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %269, label %254

254:                                              ; preds = %248, %254
  %255 = phi %"class.v8::internal::Map"** [ %262, %254 ], [ %238, %248 ]
  %256 = phi i64 [ %263, %254 ], [ %239, %248 ]
  %257 = phi %"class.v8::internal::Map"** [ %264, %254 ], [ %194, %248 ]
  %258 = phi i64 [ %265, %254 ], [ %252, %248 ]
  %259 = bitcast %"class.v8::internal::Map"** %257 to i64*
  %260 = load i64, i64* %259, align 8
  %261 = inttoptr i64 %256 to i64*
  store i64 %260, i64* %261, align 8
  %262 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %255, i64 1
  %263 = ptrtoint %"class.v8::internal::Map"** %262 to i64
  %264 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %257, i64 1
  %265 = add i64 %258, -1
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %254, !llvm.loop !7

267:                                              ; preds = %254
  %268 = ptrtoint %"class.v8::internal::Map"** %262 to i64
  br label %269

269:                                              ; preds = %248, %267
  %270 = phi %"class.v8::internal::Map"** [ %238, %248 ], [ %262, %267 ]
  %271 = phi i64 [ %239, %248 ], [ %268, %267 ]
  %272 = phi %"class.v8::internal::Map"** [ %194, %248 ], [ %264, %267 ]
  %273 = icmp ult i64 %249, 56
  br i1 %273, label %320, label %274

274:                                              ; preds = %269, %274
  %275 = phi %"class.v8::internal::Map"** [ %316, %274 ], [ %270, %269 ]
  %276 = phi i64 [ %317, %274 ], [ %271, %269 ]
  %277 = phi %"class.v8::internal::Map"** [ %318, %274 ], [ %272, %269 ]
  %278 = bitcast %"class.v8::internal::Map"** %277 to i64*
  %279 = load i64, i64* %278, align 8
  %280 = inttoptr i64 %276 to i64*
  store i64 %279, i64* %280, align 8
  %281 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %275, i64 1
  %282 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %277, i64 1
  %283 = bitcast %"class.v8::internal::Map"** %282 to i64*
  %284 = load i64, i64* %283, align 8
  %285 = bitcast %"class.v8::internal::Map"** %281 to i64*
  store i64 %284, i64* %285, align 8
  %286 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %275, i64 2
  %287 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %277, i64 2
  %288 = bitcast %"class.v8::internal::Map"** %287 to i64*
  %289 = load i64, i64* %288, align 8
  %290 = bitcast %"class.v8::internal::Map"** %286 to i64*
  store i64 %289, i64* %290, align 8
  %291 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %275, i64 3
  %292 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %277, i64 3
  %293 = bitcast %"class.v8::internal::Map"** %292 to i64*
  %294 = load i64, i64* %293, align 8
  %295 = bitcast %"class.v8::internal::Map"** %291 to i64*
  store i64 %294, i64* %295, align 8
  %296 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %275, i64 4
  %297 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %277, i64 4
  %298 = bitcast %"class.v8::internal::Map"** %297 to i64*
  %299 = load i64, i64* %298, align 8
  %300 = bitcast %"class.v8::internal::Map"** %296 to i64*
  store i64 %299, i64* %300, align 8
  %301 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %275, i64 5
  %302 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %277, i64 5
  %303 = bitcast %"class.v8::internal::Map"** %302 to i64*
  %304 = load i64, i64* %303, align 8
  %305 = bitcast %"class.v8::internal::Map"** %301 to i64*
  store i64 %304, i64* %305, align 8
  %306 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %275, i64 6
  %307 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %277, i64 6
  %308 = bitcast %"class.v8::internal::Map"** %307 to i64*
  %309 = load i64, i64* %308, align 8
  %310 = bitcast %"class.v8::internal::Map"** %306 to i64*
  store i64 %309, i64* %310, align 8
  %311 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %275, i64 7
  %312 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %277, i64 7
  %313 = bitcast %"class.v8::internal::Map"** %312 to i64*
  %314 = load i64, i64* %313, align 8
  %315 = bitcast %"class.v8::internal::Map"** %311 to i64*
  store i64 %314, i64* %315, align 8
  %316 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %275, i64 8
  %317 = ptrtoint %"class.v8::internal::Map"** %316 to i64
  %318 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %277, i64 8
  %319 = icmp eq %"class.v8::internal::Map"** %246, %316
  br i1 %319, label %320, label %274

320:                                              ; preds = %274, %269
  %321 = ptrtoint %"class.v8::internal::Map"** %246 to i64
  %322 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %201, align 8
  br label %323

323:                                              ; preds = %320, %232
  %324 = phi %"class.v8::internal::Map"** [ %322, %320 ], [ %202, %232 ]
  %325 = phi i64 [ %321, %320 ], [ %239, %232 ]
  store i64 %237, i64* %174, align 8
  store i64 %239, i64* %167, align 8
  store i64 %325, i64* %164, align 8
  store i64 %241, i64* %172, align 8
  %326 = icmp eq %"class.v8::internal::Map"** %324, null
  %327 = inttoptr i64 %325 to i64*
  br i1 %326, label %332, label %328

328:                                              ; preds = %323
  %329 = bitcast %"class.v8::internal::Map"** %324 to i8*
  call void @_ZdlPv(i8* %329) #12
  %330 = bitcast %"class.v8::internal::Map"*** %163 to i64**
  %331 = load i64*, i64** %330, align 8
  br label %332

332:                                              ; preds = %187, %220, %323, %328
  %333 = phi i64* [ %331, %328 ], [ %327, %323 ], [ %224, %220 ], [ %199, %187 ]
  store i64 %193, i64* %333, align 8
  %334 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %163, align 8
  %335 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %334, i64 1
  store %"class.v8::internal::Map"** %335, %"class.v8::internal::Map"*** %163, align 8
  br label %549

336:                                              ; preds = %161
  %337 = ashr exact i64 %176, 2
  %338 = icmp eq i64 %176, 0
  %339 = select i1 %338, i64 1, i64 %337
  %340 = icmp ugt i64 %339, 2305843009213693951
  br i1 %340, label %341, label %342

341:                                              ; preds = %336
  tail call void @abort() #11
  unreachable

342:                                              ; preds = %336
  %343 = shl i64 %339, 3
  %344 = tail call i8* @_Znwm(i64 %343) #12
  %345 = bitcast i8* %344 to %"class.v8::internal::Map"**
  %346 = ptrtoint i8* %344 to i64
  %347 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %345, i64 %170
  %348 = ptrtoint %"class.v8::internal::Map"** %347 to i64
  %349 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %345, i64 %339
  %350 = ptrtoint %"class.v8::internal::Map"** %349 to i64
  %351 = tail call i8* @_Znwm(i64 4096) #12
  %352 = ptrtoint i8* %351 to i64
  %353 = icmp eq i64 %170, %339
  br i1 %353, label %354, label %382

354:                                              ; preds = %342
  %355 = icmp ugt %"class.v8::internal::Map"** %347, %345
  br i1 %355, label %356, label %363

356:                                              ; preds = %354
  %357 = sub i64 %348, %346
  %358 = ashr exact i64 %357, 3
  %359 = add nsw i64 %358, 1
  %360 = sdiv i64 %359, -2
  %361 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %347, i64 %360
  %362 = ptrtoint %"class.v8::internal::Map"** %361 to i64
  br label %382

363:                                              ; preds = %354
  %364 = sub i64 %350, %346
  %365 = ashr exact i64 %364, 2
  %366 = icmp eq i64 %364, 0
  %367 = select i1 %366, i64 1, i64 %365
  %368 = icmp ugt i64 %367, 2305843009213693951
  br i1 %368, label %369, label %370

369:                                              ; preds = %363
  tail call void @abort() #11
  unreachable

370:                                              ; preds = %363
  %371 = lshr i64 %367, 2
  %372 = shl i64 %367, 3
  %373 = tail call i8* @_Znwm(i64 %372) #12
  %374 = bitcast i8* %373 to %"class.v8::internal::Map"**
  %375 = ptrtoint i8* %373 to i64
  %376 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %374, i64 %371
  %377 = ptrtoint %"class.v8::internal::Map"** %376 to i64
  %378 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %374, i64 %367
  %379 = ptrtoint %"class.v8::internal::Map"** %378 to i64
  tail call void @_ZdlPv(i8* nonnull %344) #12
  %380 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %163, align 8
  %381 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %166, align 8
  br label %382

382:                                              ; preds = %342, %356, %370
  %383 = phi %"class.v8::internal::Map"** [ %180, %356 ], [ %381, %370 ], [ %180, %342 ]
  %384 = phi %"class.v8::internal::Map"** [ %179, %356 ], [ %380, %370 ], [ %179, %342 ]
  %385 = phi i64 [ %346, %356 ], [ %375, %370 ], [ %346, %342 ]
  %386 = phi i64 [ %362, %356 ], [ %377, %370 ], [ %348, %342 ]
  %387 = phi %"class.v8::internal::Map"** [ %361, %356 ], [ %376, %370 ], [ %347, %342 ]
  %388 = phi i64 [ %350, %356 ], [ %379, %370 ], [ %350, %342 ]
  %389 = bitcast %"class.v8::internal::Map"** %387 to i64*
  store i64 %352, i64* %389, align 8
  %390 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %387, i64 1
  %391 = ptrtoint %"class.v8::internal::Map"** %390 to i64
  %392 = icmp eq %"class.v8::internal::Map"** %384, %383
  br i1 %392, label %395, label %405

393:                                              ; preds = %537
  %394 = ptrtoint %"class.v8::internal::Map"** %542 to i64
  br label %395

395:                                              ; preds = %393, %382
  %396 = phi i64 [ %385, %382 ], [ %538, %393 ]
  %397 = phi i64 [ %386, %382 ], [ %394, %393 ]
  %398 = phi i64 [ %391, %382 ], [ %539, %393 ]
  %399 = phi i64 [ %388, %382 ], [ %540, %393 ]
  %400 = getelementptr inbounds %"class.std::__1::deque.1140", %"class.std::__1::deque.1140"* %0, i64 0, i32 0, i32 0, i32 0
  %401 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %400, align 8
  store i64 %396, i64* %174, align 8
  store i64 %397, i64* %167, align 8
  store i64 %398, i64* %164, align 8
  store i64 %399, i64* %172, align 8
  %402 = icmp eq %"class.v8::internal::Map"** %401, null
  br i1 %402, label %549, label %403

403:                                              ; preds = %395
  %404 = bitcast %"class.v8::internal::Map"** %401 to i8*
  tail call void @_ZdlPv(i8* %404) #12
  br label %549

405:                                              ; preds = %382, %537
  %406 = phi %"class.v8::internal::Map"** [ %411, %537 ], [ %384, %382 ]
  %407 = phi i64 [ %540, %537 ], [ %388, %382 ]
  %408 = phi i64 [ %539, %537 ], [ %391, %382 ]
  %409 = phi i64 [ %546, %537 ], [ %386, %382 ]
  %410 = phi i64 [ %538, %537 ], [ %385, %382 ]
  %411 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %406, i64 -1
  %412 = inttoptr i64 %409 to %"class.v8::internal::Map"**
  %413 = inttoptr i64 %410 to %"class.v8::internal::Map"**
  %414 = icmp eq %"class.v8::internal::Map"** %412, %413
  br i1 %414, label %415, label %537

415:                                              ; preds = %405
  %416 = inttoptr i64 %408 to %"class.v8::internal::Map"**
  %417 = inttoptr i64 %407 to %"class.v8::internal::Map"**
  %418 = icmp ult %"class.v8::internal::Map"** %416, %417
  br i1 %418, label %419, label %436

419:                                              ; preds = %415
  %420 = sub i64 %407, %408
  %421 = ashr exact i64 %420, 3
  %422 = add nsw i64 %421, 1
  %423 = sdiv i64 %422, 2
  %424 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %416, i64 %423
  %425 = sub i64 %408, %409
  %426 = icmp eq i64 %425, 0
  br i1 %426, label %433, label %427

427:                                              ; preds = %419
  %428 = ashr exact i64 %425, 3
  %429 = sub nsw i64 0, %428
  %430 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %424, i64 %429
  %431 = bitcast %"class.v8::internal::Map"** %430 to i8*
  %432 = inttoptr i64 %409 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %431, i8* align 8 %432, i64 %425, i1 false) #5
  br label %433

433:                                              ; preds = %427, %419
  %434 = phi %"class.v8::internal::Map"** [ %430, %427 ], [ %424, %419 ]
  %435 = ptrtoint %"class.v8::internal::Map"** %424 to i64
  br label %537

436:                                              ; preds = %415
  %437 = sub i64 %407, %410
  %438 = ashr exact i64 %437, 2
  %439 = icmp eq i64 %437, 0
  %440 = select i1 %439, i64 1, i64 %438
  %441 = icmp ugt i64 %440, 2305843009213693951
  br i1 %441, label %442, label %443

442:                                              ; preds = %436
  tail call void @abort() #11
  unreachable

443:                                              ; preds = %436
  %444 = add nuw nsw i64 %440, 3
  %445 = lshr i64 %444, 2
  %446 = shl i64 %440, 3
  %447 = tail call i8* @_Znwm(i64 %446) #12
  %448 = bitcast i8* %447 to %"class.v8::internal::Map"**
  %449 = ptrtoint i8* %447 to i64
  %450 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %448, i64 %445
  %451 = ptrtoint %"class.v8::internal::Map"** %450 to i64
  %452 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %448, i64 %440
  %453 = ptrtoint %"class.v8::internal::Map"** %452 to i64
  %454 = sub i64 %408, %409
  %455 = ashr exact i64 %454, 3
  %456 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %450, i64 %455
  %457 = icmp eq i64 %454, 0
  br i1 %457, label %532, label %458

458:                                              ; preds = %443
  %459 = add i64 %454, -8
  %460 = lshr i64 %459, 3
  %461 = add nuw nsw i64 %460, 1
  %462 = and i64 %461, 7
  %463 = icmp eq i64 %462, 0
  br i1 %463, label %479, label %464

464:                                              ; preds = %458, %464
  %465 = phi %"class.v8::internal::Map"** [ %472, %464 ], [ %450, %458 ]
  %466 = phi i64 [ %473, %464 ], [ %451, %458 ]
  %467 = phi %"class.v8::internal::Map"** [ %474, %464 ], [ %412, %458 ]
  %468 = phi i64 [ %475, %464 ], [ %462, %458 ]
  %469 = bitcast %"class.v8::internal::Map"** %467 to i64*
  %470 = load i64, i64* %469, align 8
  %471 = inttoptr i64 %466 to i64*
  store i64 %470, i64* %471, align 8
  %472 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %465, i64 1
  %473 = ptrtoint %"class.v8::internal::Map"** %472 to i64
  %474 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %467, i64 1
  %475 = add i64 %468, -1
  %476 = icmp eq i64 %475, 0
  br i1 %476, label %477, label %464, !llvm.loop !8

477:                                              ; preds = %464
  %478 = ptrtoint %"class.v8::internal::Map"** %472 to i64
  br label %479

479:                                              ; preds = %458, %477
  %480 = phi %"class.v8::internal::Map"** [ %450, %458 ], [ %472, %477 ]
  %481 = phi i64 [ %451, %458 ], [ %478, %477 ]
  %482 = phi %"class.v8::internal::Map"** [ %412, %458 ], [ %474, %477 ]
  %483 = icmp ult i64 %459, 56
  br i1 %483, label %530, label %484

484:                                              ; preds = %479, %484
  %485 = phi %"class.v8::internal::Map"** [ %526, %484 ], [ %480, %479 ]
  %486 = phi i64 [ %527, %484 ], [ %481, %479 ]
  %487 = phi %"class.v8::internal::Map"** [ %528, %484 ], [ %482, %479 ]
  %488 = bitcast %"class.v8::internal::Map"** %487 to i64*
  %489 = load i64, i64* %488, align 8
  %490 = inttoptr i64 %486 to i64*
  store i64 %489, i64* %490, align 8
  %491 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %485, i64 1
  %492 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %487, i64 1
  %493 = bitcast %"class.v8::internal::Map"** %492 to i64*
  %494 = load i64, i64* %493, align 8
  %495 = bitcast %"class.v8::internal::Map"** %491 to i64*
  store i64 %494, i64* %495, align 8
  %496 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %485, i64 2
  %497 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %487, i64 2
  %498 = bitcast %"class.v8::internal::Map"** %497 to i64*
  %499 = load i64, i64* %498, align 8
  %500 = bitcast %"class.v8::internal::Map"** %496 to i64*
  store i64 %499, i64* %500, align 8
  %501 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %485, i64 3
  %502 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %487, i64 3
  %503 = bitcast %"class.v8::internal::Map"** %502 to i64*
  %504 = load i64, i64* %503, align 8
  %505 = bitcast %"class.v8::internal::Map"** %501 to i64*
  store i64 %504, i64* %505, align 8
  %506 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %485, i64 4
  %507 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %487, i64 4
  %508 = bitcast %"class.v8::internal::Map"** %507 to i64*
  %509 = load i64, i64* %508, align 8
  %510 = bitcast %"class.v8::internal::Map"** %506 to i64*
  store i64 %509, i64* %510, align 8
  %511 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %485, i64 5
  %512 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %487, i64 5
  %513 = bitcast %"class.v8::internal::Map"** %512 to i64*
  %514 = load i64, i64* %513, align 8
  %515 = bitcast %"class.v8::internal::Map"** %511 to i64*
  store i64 %514, i64* %515, align 8
  %516 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %485, i64 6
  %517 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %487, i64 6
  %518 = bitcast %"class.v8::internal::Map"** %517 to i64*
  %519 = load i64, i64* %518, align 8
  %520 = bitcast %"class.v8::internal::Map"** %516 to i64*
  store i64 %519, i64* %520, align 8
  %521 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %485, i64 7
  %522 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %487, i64 7
  %523 = bitcast %"class.v8::internal::Map"** %522 to i64*
  %524 = load i64, i64* %523, align 8
  %525 = bitcast %"class.v8::internal::Map"** %521 to i64*
  store i64 %524, i64* %525, align 8
  %526 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %485, i64 8
  %527 = ptrtoint %"class.v8::internal::Map"** %526 to i64
  %528 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %487, i64 8
  %529 = icmp eq %"class.v8::internal::Map"** %456, %526
  br i1 %529, label %530, label %484

530:                                              ; preds = %484, %479
  %531 = ptrtoint %"class.v8::internal::Map"** %456 to i64
  br label %532

532:                                              ; preds = %530, %443
  %533 = phi i64 [ %531, %530 ], [ %451, %443 ]
  %534 = icmp eq i64 %409, 0
  br i1 %534, label %537, label %535

535:                                              ; preds = %532
  %536 = inttoptr i64 %409 to i8*
  tail call void @_ZdlPv(i8* %536) #12
  br label %537

537:                                              ; preds = %405, %433, %532, %535
  %538 = phi i64 [ %410, %433 ], [ %449, %532 ], [ %449, %535 ], [ %410, %405 ]
  %539 = phi i64 [ %435, %433 ], [ %533, %532 ], [ %533, %535 ], [ %408, %405 ]
  %540 = phi i64 [ %407, %433 ], [ %453, %532 ], [ %453, %535 ], [ %407, %405 ]
  %541 = phi %"class.v8::internal::Map"** [ %434, %433 ], [ %450, %532 ], [ %450, %535 ], [ %412, %405 ]
  %542 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %541, i64 -1
  %543 = bitcast %"class.v8::internal::Map"** %411 to i64*
  %544 = load i64, i64* %543, align 8
  %545 = bitcast %"class.v8::internal::Map"** %542 to i64*
  store i64 %544, i64* %545, align 8
  %546 = ptrtoint %"class.v8::internal::Map"** %542 to i64
  %547 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %166, align 8
  %548 = icmp eq %"class.v8::internal::Map"** %411, %547
  br i1 %548, label %393, label %405

549:                                              ; preds = %403, %395, %332, %183, %157
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal3MapENS_9allocatorIS4_EEE9push_backEOS4_(%"struct.std::__1::__split_buffer.1142"*, %"class.v8::internal::Map"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1142", %"struct.std::__1::__split_buffer.1142"* %0, i64 0, i32 2
  %4 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1142", %"struct.std::__1::__split_buffer.1142"* %0, i64 0, i32 3, i32 0, i32 0
  %6 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::Map"** %4, %6
  %8 = ptrtoint %"class.v8::internal::Map"** %6 to i64
  %9 = bitcast %"class.v8::internal::Map"** %4 to i64*
  br i1 %7, label %10, label %148

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"struct.std::__1::__split_buffer.1142", %"struct.std::__1::__split_buffer.1142"* %0, i64 0, i32 1
  %12 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %11, align 8
  %13 = getelementptr inbounds %"struct.std::__1::__split_buffer.1142", %"struct.std::__1::__split_buffer.1142"* %0, i64 0, i32 0
  %14 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %13, align 8
  %15 = icmp ugt %"class.v8::internal::Map"** %12, %14
  %16 = ptrtoint %"class.v8::internal::Map"** %14 to i64
  br i1 %15, label %17, label %37

17:                                               ; preds = %10
  %18 = ptrtoint %"class.v8::internal::Map"** %12 to i64
  %19 = sub i64 %18, %16
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, -2
  %23 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %12, i64 %22
  %24 = ptrtoint %"class.v8::internal::Map"** %4 to i64
  %25 = sub i64 %24, %18
  %26 = ashr exact i64 %25, 3
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %32, label %28

28:                                               ; preds = %17
  %29 = bitcast %"class.v8::internal::Map"** %23 to i8*
  %30 = bitcast %"class.v8::internal::Map"** %12 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %29, i8* align 8 %30, i64 %25, i1 false) #5
  %31 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %11, align 8
  br label %32

32:                                               ; preds = %17, %28
  %33 = phi %"class.v8::internal::Map"** [ %12, %17 ], [ %31, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %23, i64 %26
  store %"class.v8::internal::Map"** %34, %"class.v8::internal::Map"*** %3, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %33, i64 %22
  store %"class.v8::internal::Map"** %35, %"class.v8::internal::Map"*** %11, align 8
  %36 = bitcast %"class.v8::internal::Map"** %34 to i64*
  br label %148

37:                                               ; preds = %10
  %38 = bitcast %"class.v8::internal::Map"*** %5 to i64*
  %39 = bitcast %"struct.std::__1::__split_buffer.1142"* %0 to i64*
  %40 = sub i64 %8, %16
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %37
  tail call void @abort() #11
  unreachable

46:                                               ; preds = %37
  %47 = lshr i64 %43, 2
  %48 = shl i64 %43, 3
  %49 = tail call i8* @_Znwm(i64 %48) #12
  %50 = bitcast i8* %49 to %"class.v8::internal::Map"**
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %50, i64 %47
  %53 = ptrtoint %"class.v8::internal::Map"** %52 to i64
  %54 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %50, i64 %43
  %55 = ptrtoint %"class.v8::internal::Map"** %54 to i64
  %56 = ptrtoint %"class.v8::internal::Map"** %12 to i64
  %57 = ptrtoint %"class.v8::internal::Map"** %4 to i64
  %58 = sub i64 %57, %56
  %59 = ashr exact i64 %58, 3
  %60 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %52, i64 %59
  %61 = icmp eq i64 %58, 0
  br i1 %61, label %137, label %62

62:                                               ; preds = %46
  %63 = add i64 %58, -8
  %64 = lshr i64 %63, 3
  %65 = add nuw nsw i64 %64, 1
  %66 = and i64 %65, 7
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %83, label %68

68:                                               ; preds = %62, %68
  %69 = phi %"class.v8::internal::Map"** [ %76, %68 ], [ %52, %62 ]
  %70 = phi i64 [ %77, %68 ], [ %53, %62 ]
  %71 = phi %"class.v8::internal::Map"** [ %78, %68 ], [ %12, %62 ]
  %72 = phi i64 [ %79, %68 ], [ %66, %62 ]
  %73 = bitcast %"class.v8::internal::Map"** %71 to i64*
  %74 = load i64, i64* %73, align 8
  %75 = inttoptr i64 %70 to i64*
  store i64 %74, i64* %75, align 8
  %76 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %69, i64 1
  %77 = ptrtoint %"class.v8::internal::Map"** %76 to i64
  %78 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %71, i64 1
  %79 = add i64 %72, -1
  %80 = icmp eq i64 %79, 0
  br i1 %80, label %81, label %68, !llvm.loop !9

81:                                               ; preds = %68
  %82 = ptrtoint %"class.v8::internal::Map"** %76 to i64
  br label %83

83:                                               ; preds = %62, %81
  %84 = phi %"class.v8::internal::Map"** [ %52, %62 ], [ %76, %81 ]
  %85 = phi i64 [ %53, %62 ], [ %82, %81 ]
  %86 = phi %"class.v8::internal::Map"** [ %12, %62 ], [ %78, %81 ]
  %87 = icmp ult i64 %63, 56
  br i1 %87, label %134, label %88

88:                                               ; preds = %83, %88
  %89 = phi %"class.v8::internal::Map"** [ %130, %88 ], [ %84, %83 ]
  %90 = phi i64 [ %131, %88 ], [ %85, %83 ]
  %91 = phi %"class.v8::internal::Map"** [ %132, %88 ], [ %86, %83 ]
  %92 = bitcast %"class.v8::internal::Map"** %91 to i64*
  %93 = load i64, i64* %92, align 8
  %94 = inttoptr i64 %90 to i64*
  store i64 %93, i64* %94, align 8
  %95 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %89, i64 1
  %96 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %91, i64 1
  %97 = bitcast %"class.v8::internal::Map"** %96 to i64*
  %98 = load i64, i64* %97, align 8
  %99 = bitcast %"class.v8::internal::Map"** %95 to i64*
  store i64 %98, i64* %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %89, i64 2
  %101 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %91, i64 2
  %102 = bitcast %"class.v8::internal::Map"** %101 to i64*
  %103 = load i64, i64* %102, align 8
  %104 = bitcast %"class.v8::internal::Map"** %100 to i64*
  store i64 %103, i64* %104, align 8
  %105 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %89, i64 3
  %106 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %91, i64 3
  %107 = bitcast %"class.v8::internal::Map"** %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.v8::internal::Map"** %105 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %89, i64 4
  %111 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %91, i64 4
  %112 = bitcast %"class.v8::internal::Map"** %111 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.v8::internal::Map"** %110 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %89, i64 5
  %116 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %91, i64 5
  %117 = bitcast %"class.v8::internal::Map"** %116 to i64*
  %118 = load i64, i64* %117, align 8
  %119 = bitcast %"class.v8::internal::Map"** %115 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %89, i64 6
  %121 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %91, i64 6
  %122 = bitcast %"class.v8::internal::Map"** %121 to i64*
  %123 = load i64, i64* %122, align 8
  %124 = bitcast %"class.v8::internal::Map"** %120 to i64*
  store i64 %123, i64* %124, align 8
  %125 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %89, i64 7
  %126 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %91, i64 7
  %127 = bitcast %"class.v8::internal::Map"** %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.v8::internal::Map"** %125 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %89, i64 8
  %131 = ptrtoint %"class.v8::internal::Map"** %130 to i64
  %132 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %91, i64 8
  %133 = icmp eq %"class.v8::internal::Map"** %60, %130
  br i1 %133, label %134, label %88

134:                                              ; preds = %88, %83
  %135 = ptrtoint %"class.v8::internal::Map"** %60 to i64
  %136 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %13, align 8
  br label %137

137:                                              ; preds = %46, %134
  %138 = phi %"class.v8::internal::Map"** [ %136, %134 ], [ %14, %46 ]
  %139 = phi i64 [ %135, %134 ], [ %53, %46 ]
  store i64 %51, i64* %39, align 8
  %140 = bitcast %"class.v8::internal::Map"*** %11 to i64*
  store i64 %53, i64* %140, align 8
  %141 = bitcast %"class.v8::internal::Map"*** %3 to i64*
  store i64 %139, i64* %141, align 8
  store i64 %55, i64* %38, align 8
  %142 = icmp eq %"class.v8::internal::Map"** %138, null
  %143 = inttoptr i64 %139 to i64*
  br i1 %142, label %148, label %144

144:                                              ; preds = %137
  %145 = bitcast %"class.v8::internal::Map"** %138 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = bitcast %"class.v8::internal::Map"*** %3 to i64**
  %147 = load i64*, i64** %146, align 8
  br label %148

148:                                              ; preds = %144, %137, %32, %2
  %149 = phi i64* [ %147, %144 ], [ %143, %137 ], [ %36, %32 ], [ %9, %2 ]
  %150 = bitcast %"class.v8::internal::Map"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  store i64 %151, i64* %149, align 8
  %152 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %3, align 8
  %153 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %152, i64 1
  store %"class.v8::internal::Map"** %153, %"class.v8::internal::Map"*** %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__114__split_bufferIPN2v88internal3MapENS_9allocatorIS4_EEE10push_frontEOS4_(%"struct.std::__1::__split_buffer.1142"*, %"class.v8::internal::Map"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::__split_buffer.1142", %"struct.std::__1::__split_buffer.1142"* %0, i64 0, i32 1
  %4 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %3, align 8
  %5 = getelementptr inbounds %"struct.std::__1::__split_buffer.1142", %"struct.std::__1::__split_buffer.1142"* %0, i64 0, i32 0
  %6 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %5, align 8
  %7 = icmp eq %"class.v8::internal::Map"** %4, %6
  %8 = ptrtoint %"class.v8::internal::Map"** %6 to i64
  br i1 %7, label %9, label %147

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"struct.std::__1::__split_buffer.1142", %"struct.std::__1::__split_buffer.1142"* %0, i64 0, i32 2
  %11 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %10, align 8
  %12 = getelementptr inbounds %"struct.std::__1::__split_buffer.1142", %"struct.std::__1::__split_buffer.1142"* %0, i64 0, i32 3, i32 0, i32 0
  %13 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %12, align 8
  %14 = icmp ult %"class.v8::internal::Map"** %11, %13
  %15 = bitcast %"class.v8::internal::Map"*** %12 to i64*
  %16 = ptrtoint %"class.v8::internal::Map"** %13 to i64
  br i1 %14, label %17, label %38

17:                                               ; preds = %9
  %18 = ptrtoint %"class.v8::internal::Map"** %11 to i64
  %19 = sub i64 %16, %18
  %20 = ashr exact i64 %19, 3
  %21 = add nsw i64 %20, 1
  %22 = sdiv i64 %21, 2
  %23 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %11, i64 %22
  %24 = ptrtoint %"class.v8::internal::Map"** %4 to i64
  %25 = sub i64 %18, %24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %34, label %27

27:                                               ; preds = %17
  %28 = ashr exact i64 %25, 3
  %29 = sub nsw i64 0, %28
  %30 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %23, i64 %29
  %31 = bitcast %"class.v8::internal::Map"** %30 to i8*
  %32 = bitcast %"class.v8::internal::Map"** %4 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 8 %31, i8* align 8 %32, i64 %25, i1 false) #5
  %33 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %10, align 8
  br label %34

34:                                               ; preds = %17, %27
  %35 = phi %"class.v8::internal::Map"** [ %33, %27 ], [ %11, %17 ]
  %36 = phi %"class.v8::internal::Map"** [ %30, %27 ], [ %23, %17 ]
  store %"class.v8::internal::Map"** %36, %"class.v8::internal::Map"*** %3, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %35, i64 %22
  store %"class.v8::internal::Map"** %37, %"class.v8::internal::Map"*** %10, align 8
  br label %147

38:                                               ; preds = %9
  %39 = bitcast %"struct.std::__1::__split_buffer.1142"* %0 to i64*
  %40 = sub i64 %16, %8
  %41 = ashr exact i64 %40, 2
  %42 = icmp eq i64 %40, 0
  %43 = select i1 %42, i64 1, i64 %41
  %44 = icmp ugt i64 %43, 2305843009213693951
  br i1 %44, label %45, label %46

45:                                               ; preds = %38
  tail call void @abort() #11
  unreachable

46:                                               ; preds = %38
  %47 = add nuw nsw i64 %43, 3
  %48 = lshr i64 %47, 2
  %49 = shl i64 %43, 3
  %50 = tail call i8* @_Znwm(i64 %49) #12
  %51 = bitcast i8* %50 to %"class.v8::internal::Map"**
  %52 = ptrtoint i8* %50 to i64
  %53 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %51, i64 %48
  %54 = ptrtoint %"class.v8::internal::Map"** %53 to i64
  %55 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %51, i64 %43
  %56 = ptrtoint %"class.v8::internal::Map"** %55 to i64
  %57 = ptrtoint %"class.v8::internal::Map"** %4 to i64
  %58 = ptrtoint %"class.v8::internal::Map"** %11 to i64
  %59 = sub i64 %58, %57
  %60 = ashr exact i64 %59, 3
  %61 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %53, i64 %60
  %62 = icmp eq i64 %59, 0
  br i1 %62, label %138, label %63

63:                                               ; preds = %46
  %64 = add i64 %59, -8
  %65 = lshr i64 %64, 3
  %66 = add nuw nsw i64 %65, 1
  %67 = and i64 %66, 7
  %68 = icmp eq i64 %67, 0
  br i1 %68, label %84, label %69

69:                                               ; preds = %63, %69
  %70 = phi %"class.v8::internal::Map"** [ %77, %69 ], [ %53, %63 ]
  %71 = phi i64 [ %78, %69 ], [ %54, %63 ]
  %72 = phi %"class.v8::internal::Map"** [ %79, %69 ], [ %4, %63 ]
  %73 = phi i64 [ %80, %69 ], [ %67, %63 ]
  %74 = bitcast %"class.v8::internal::Map"** %72 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = inttoptr i64 %71 to i64*
  store i64 %75, i64* %76, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %70, i64 1
  %78 = ptrtoint %"class.v8::internal::Map"** %77 to i64
  %79 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %72, i64 1
  %80 = add i64 %73, -1
  %81 = icmp eq i64 %80, 0
  br i1 %81, label %82, label %69, !llvm.loop !10

82:                                               ; preds = %69
  %83 = ptrtoint %"class.v8::internal::Map"** %77 to i64
  br label %84

84:                                               ; preds = %63, %82
  %85 = phi %"class.v8::internal::Map"** [ %53, %63 ], [ %77, %82 ]
  %86 = phi i64 [ %54, %63 ], [ %83, %82 ]
  %87 = phi %"class.v8::internal::Map"** [ %4, %63 ], [ %79, %82 ]
  %88 = icmp ult i64 %64, 56
  br i1 %88, label %135, label %89

89:                                               ; preds = %84, %89
  %90 = phi %"class.v8::internal::Map"** [ %131, %89 ], [ %85, %84 ]
  %91 = phi i64 [ %132, %89 ], [ %86, %84 ]
  %92 = phi %"class.v8::internal::Map"** [ %133, %89 ], [ %87, %84 ]
  %93 = bitcast %"class.v8::internal::Map"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = inttoptr i64 %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %90, i64 1
  %97 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %92, i64 1
  %98 = bitcast %"class.v8::internal::Map"** %97 to i64*
  %99 = load i64, i64* %98, align 8
  %100 = bitcast %"class.v8::internal::Map"** %96 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %90, i64 2
  %102 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %92, i64 2
  %103 = bitcast %"class.v8::internal::Map"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.v8::internal::Map"** %101 to i64*
  store i64 %104, i64* %105, align 8
  %106 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %90, i64 3
  %107 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %92, i64 3
  %108 = bitcast %"class.v8::internal::Map"** %107 to i64*
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::internal::Map"** %106 to i64*
  store i64 %109, i64* %110, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %90, i64 4
  %112 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %92, i64 4
  %113 = bitcast %"class.v8::internal::Map"** %112 to i64*
  %114 = load i64, i64* %113, align 8
  %115 = bitcast %"class.v8::internal::Map"** %111 to i64*
  store i64 %114, i64* %115, align 8
  %116 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %90, i64 5
  %117 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %92, i64 5
  %118 = bitcast %"class.v8::internal::Map"** %117 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.v8::internal::Map"** %116 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %90, i64 6
  %122 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %92, i64 6
  %123 = bitcast %"class.v8::internal::Map"** %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.v8::internal::Map"** %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %90, i64 7
  %127 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %92, i64 7
  %128 = bitcast %"class.v8::internal::Map"** %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = bitcast %"class.v8::internal::Map"** %126 to i64*
  store i64 %129, i64* %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %90, i64 8
  %132 = ptrtoint %"class.v8::internal::Map"** %131 to i64
  %133 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %92, i64 8
  %134 = icmp eq %"class.v8::internal::Map"** %61, %131
  br i1 %134, label %135, label %89

135:                                              ; preds = %89, %84
  %136 = ptrtoint %"class.v8::internal::Map"** %61 to i64
  %137 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %5, align 8
  br label %138

138:                                              ; preds = %46, %135
  %139 = phi %"class.v8::internal::Map"** [ %137, %135 ], [ %4, %46 ]
  %140 = phi i64 [ %136, %135 ], [ %54, %46 ]
  store i64 %52, i64* %39, align 8
  %141 = bitcast %"class.v8::internal::Map"*** %3 to i64*
  store i64 %54, i64* %141, align 8
  %142 = bitcast %"class.v8::internal::Map"*** %10 to i64*
  store i64 %140, i64* %142, align 8
  store i64 %56, i64* %15, align 8
  %143 = icmp eq %"class.v8::internal::Map"** %139, null
  br i1 %143, label %147, label %144

144:                                              ; preds = %138
  %145 = bitcast %"class.v8::internal::Map"** %139 to i8*
  tail call void @_ZdlPv(i8* %145) #12
  %146 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %3, align 8
  br label %147

147:                                              ; preds = %144, %138, %34, %2
  %148 = phi %"class.v8::internal::Map"** [ %146, %144 ], [ %53, %138 ], [ %36, %34 ], [ %4, %2 ]
  %149 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %148, i64 -1
  %150 = bitcast %"class.v8::internal::Map"** %1 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast %"class.v8::internal::Map"** %149 to i64*
  store i64 %151, i64* %152, align 8
  %153 = load %"class.v8::internal::Map"**, %"class.v8::internal::Map"*** %3, align 8
  %154 = getelementptr inbounds %"class.v8::internal::Map"*, %"class.v8::internal::Map"** %153, i64 -1
  store %"class.v8::internal::Map"** %154, %"class.v8::internal::Map"*** %3, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{!"branch_weights", i32 1, i32 2000}
!5 = distinct !{!5, !6}
!6 = !{!"llvm.loop.unroll.disable"}
!7 = distinct !{!7, !6}
!8 = distinct !{!8, !6}
!9 = distinct !{!9, !6}
!10 = distinct !{!10, !6}
