; ModuleID = '../../third_party/blink/common/messaging/message_port_channel.cc'
source_filename = "../../third_party/blink/common/messaging/message_port_channel.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::MessagePortChannel" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type { %"class.base::RefCountedThreadSafe", %"class.base::Lock", %"class.blink::MessagePortDescriptor" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.blink::MessagePortDescriptor" = type { %"class.mojo::ScopedHandleBase", %"class.base::UnguessableToken", i64 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.std::__1::vector.2" = type { %"class.std::__1::__vector_base.3" }
%"class.std::__1::__vector_base.3" = type { %"class.blink::MessagePortDescriptor"*, %"class.blink::MessagePortDescriptor"*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.blink::MessagePortDescriptor"* }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::MessagePortChannel"*, %"class.blink::MessagePortChannel"*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::MessagePortChannel"* }
%"class.std::__1::__vector_base_common" = type { i8 }

@_ZN5blink18MessagePortChannelD1Ev = hidden unnamed_addr alias void (%"class.blink::MessagePortChannel"*), void (%"class.blink::MessagePortChannel"*)* @_ZN5blink18MessagePortChannelD2Ev
@_ZN5blink18MessagePortChannelC1Ev = hidden unnamed_addr alias void (%"class.blink::MessagePortChannel"*), void (%"class.blink::MessagePortChannel"*)* @_ZN5blink18MessagePortChannelC2Ev
@_ZN5blink18MessagePortChannelC1ERKS0_ = hidden unnamed_addr alias void (%"class.blink::MessagePortChannel"*, %"class.blink::MessagePortChannel"*), void (%"class.blink::MessagePortChannel"*, %"class.blink::MessagePortChannel"*)* @_ZN5blink18MessagePortChannelC2ERKS0_
@_ZN5blink18MessagePortChannelC1ENS_21MessagePortDescriptorE = hidden unnamed_addr alias void (%"class.blink::MessagePortChannel"*, %"class.blink::MessagePortDescriptor"*), void (%"class.blink::MessagePortChannel"*, %"class.blink::MessagePortDescriptor"*)* @_ZN5blink18MessagePortChannelC2ENS_21MessagePortDescriptorE
@_ZN5blink18MessagePortChannel5StateC1Ev = hidden unnamed_addr alias void (%"class.blink::MessagePortChannel::State"*), void (%"class.blink::MessagePortChannel::State"*)* @_ZN5blink18MessagePortChannel5StateC2Ev
@_ZN5blink18MessagePortChannel5StateC1ENS_21MessagePortDescriptorE = hidden unnamed_addr alias void (%"class.blink::MessagePortChannel::State"*, %"class.blink::MessagePortDescriptor"*), void (%"class.blink::MessagePortChannel::State"*, %"class.blink::MessagePortDescriptor"*)* @_ZN5blink18MessagePortChannel5StateC2ENS_21MessagePortDescriptorE
@_ZN5blink18MessagePortChannel5StateD1Ev = hidden unnamed_addr alias void (%"class.blink::MessagePortChannel::State"*), void (%"class.blink::MessagePortChannel::State"*)* @_ZN5blink18MessagePortChannel5StateD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18MessagePortChannelD2Ev(%"class.blink::MessagePortChannel"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.blink::MessagePortChannel::State"*, %"class.blink::MessagePortChannel::State"** %2, align 8
  %4 = icmp eq %"class.blink::MessagePortChannel::State"* %3, null
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::MessagePortChannel::State", %"class.blink::MessagePortChannel::State"* %3, i64 0, i32 0
  %7 = getelementptr inbounds %"class.blink::MessagePortChannel::State", %"class.blink::MessagePortChannel::State"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw sub i32* %7, i32 1 acq_rel
  %9 = icmp eq i32 %8, 1
  br i1 %9, label %10, label %16

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 12
  %12 = bitcast %"class.base::RefCountedThreadSafe"* %11 to %"class.blink::MessagePortDescriptor"*
  tail call void @_ZN5blink21MessagePortDescriptorD1Ev(%"class.blink::MessagePortDescriptor"* %12) #9
  %13 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %6, i64 2
  %14 = bitcast %"class.base::RefCountedThreadSafe"* %13 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %14) #9
  %15 = bitcast %"class.blink::MessagePortChannel::State"* %3 to i8*
  tail call void @_ZdlPv(i8* %15) #10
  br label %16

16:                                               ; preds = %1, %5, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18MessagePortChannelC2Ev(%"class.blink::MessagePortChannel"* nocapture) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 80) #10
  %3 = bitcast i8* %2 to i32*
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds i8, i8* %2, i64 8
  %5 = bitcast i8* %4 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %5) #9
  %6 = getelementptr inbounds i8, i8* %2, i64 48
  %7 = bitcast i8* %6 to %"class.blink::MessagePortDescriptor"*
  tail call void @_ZN5blink21MessagePortDescriptorC1Ev(%"class.blink::MessagePortDescriptor"* %7) #9
  %8 = bitcast %"class.blink::MessagePortChannel"* %0 to i8**
  store i8* %2, i8** %8, align 8
  %9 = atomicrmw add i32* %3, i32 1 monotonic
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink18MessagePortChannelC2ERKS0_(%"class.blink::MessagePortChannel"* nocapture, %"class.blink::MessagePortChannel"* nocapture readonly dereferenceable(8)) unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.blink::MessagePortChannel::State"*, %"class.blink::MessagePortChannel::State"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %0, i64 0, i32 0, i32 0
  store %"class.blink::MessagePortChannel::State"* %4, %"class.blink::MessagePortChannel::State"** %5, align 8
  %6 = icmp eq %"class.blink::MessagePortChannel::State"* %4, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::MessagePortChannel::State", %"class.blink::MessagePortChannel::State"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = atomicrmw add i32* %8, i32 1 monotonic
  br label %10

10:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(8) %"class.blink::MessagePortChannel"* @_ZN5blink18MessagePortChannelaSERKS0_(%"class.blink::MessagePortChannel"* returned, %"class.blink::MessagePortChannel"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.blink::MessagePortChannel::State"*, %"class.blink::MessagePortChannel::State"** %3, align 8
  %5 = icmp eq %"class.blink::MessagePortChannel::State"* %4, null
  br i1 %5, label %9, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::MessagePortChannel::State", %"class.blink::MessagePortChannel::State"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = atomicrmw add i32* %7, i32 1 monotonic
  br label %9

9:                                                ; preds = %2, %6
  %10 = ptrtoint %"class.blink::MessagePortChannel::State"* %4 to i64
  %11 = bitcast %"class.blink::MessagePortChannel"* %0 to i64*
  %12 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %0, i64 0, i32 0, i32 0
  %13 = load %"class.blink::MessagePortChannel::State"*, %"class.blink::MessagePortChannel::State"** %12, align 8
  store i64 %10, i64* %11, align 8
  %14 = icmp eq %"class.blink::MessagePortChannel::State"* %13, null
  br i1 %14, label %26, label %15

15:                                               ; preds = %9
  %16 = getelementptr inbounds %"class.blink::MessagePortChannel::State", %"class.blink::MessagePortChannel::State"* %13, i64 0, i32 0
  %17 = getelementptr inbounds %"class.blink::MessagePortChannel::State", %"class.blink::MessagePortChannel::State"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = atomicrmw sub i32* %17, i32 1 acq_rel
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %20, label %26

20:                                               ; preds = %15
  %21 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %16, i64 12
  %22 = bitcast %"class.base::RefCountedThreadSafe"* %21 to %"class.blink::MessagePortDescriptor"*
  tail call void @_ZN5blink21MessagePortDescriptorD1Ev(%"class.blink::MessagePortDescriptor"* %22) #9
  %23 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %16, i64 2
  %24 = bitcast %"class.base::RefCountedThreadSafe"* %23 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %24) #9
  %25 = bitcast %"class.blink::MessagePortChannel::State"* %13 to i8*
  tail call void @_ZdlPv(i8* %25) #10
  br label %26

26:                                               ; preds = %9, %15, %20
  ret %"class.blink::MessagePortChannel"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18MessagePortChannelC2ENS_21MessagePortDescriptorE(%"class.blink::MessagePortChannel"* nocapture, %"class.blink::MessagePortDescriptor"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::MessagePortDescriptor", align 8
  %4 = tail call i8* @_Znwm(i64 80) #10
  call void @_ZN5blink21MessagePortDescriptorC1EOS0_(%"class.blink::MessagePortDescriptor"* nonnull %3, %"class.blink::MessagePortDescriptor"* dereferenceable(32) %1) #9
  %5 = bitcast i8* %4 to i32*
  store i32 0, i32* %5, align 4
  %6 = getelementptr inbounds i8, i8* %4, i64 8
  %7 = bitcast i8* %6 to %"class.base::internal::LockImpl"*
  call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %7) #9
  %8 = getelementptr inbounds i8, i8* %4, i64 48
  %9 = bitcast i8* %8 to %"class.blink::MessagePortDescriptor"*
  call void @_ZN5blink21MessagePortDescriptorC1EOS0_(%"class.blink::MessagePortDescriptor"* %9, %"class.blink::MessagePortDescriptor"* nonnull dereferenceable(32) %3) #9
  %10 = bitcast %"class.blink::MessagePortChannel"* %0 to i8**
  store i8* %4, i8** %10, align 8
  %11 = atomicrmw add i32* %5, i32 1 monotonic
  call void @_ZN5blink21MessagePortDescriptorD1Ev(%"class.blink::MessagePortDescriptor"* nonnull %3) #9
  ret void
}

declare void @_ZN5blink21MessagePortDescriptorC1EOS0_(%"class.blink::MessagePortDescriptor"*, %"class.blink::MessagePortDescriptor"* dereferenceable(32)) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5blink21MessagePortDescriptorD1Ev(%"class.blink::MessagePortDescriptor"*) unnamed_addr #4

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden dereferenceable(32) %"class.blink::MessagePortDescriptor"* @_ZNK5blink18MessagePortChannel9GetHandleEv(%"class.blink::MessagePortChannel"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %0, i64 0, i32 0, i32 0
  %3 = load %"class.blink::MessagePortChannel::State"*, %"class.blink::MessagePortChannel::State"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::MessagePortChannel::State", %"class.blink::MessagePortChannel::State"* %3, i64 0, i32 2
  ret %"class.blink::MessagePortDescriptor"* %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink18MessagePortChannel13ReleaseHandleEv(%"class.blink::MessagePortDescriptor"* noalias sret, %"class.blink::MessagePortChannel"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %1, i64 0, i32 0, i32 0
  %4 = load %"class.blink::MessagePortChannel::State"*, %"class.blink::MessagePortChannel::State"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::MessagePortChannel::State", %"class.blink::MessagePortChannel::State"* %4, i64 0, i32 1
  %6 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0, i32 0
  %7 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %6) #9, !noalias !2
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9, !prof !5

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %5, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %10) #9
  br label %11

11:                                               ; preds = %2, %9
  %12 = getelementptr inbounds %"class.blink::MessagePortChannel::State", %"class.blink::MessagePortChannel::State"* %4, i64 0, i32 2
  tail call void @_ZN5blink21MessagePortDescriptorC1EOS0_(%"class.blink::MessagePortDescriptor"* %0, %"class.blink::MessagePortDescriptor"* dereferenceable(32) %12) #9
  %13 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %6) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18MessagePortChannel5State10TakeHandleEv(%"class.blink::MessagePortDescriptor"* noalias sret, %"class.blink::MessagePortChannel::State"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MessagePortChannel::State", %"class.blink::MessagePortChannel::State"* %1, i64 0, i32 1
  %4 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %4) #9
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !5

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %3, i64 0, i32 0
  tail call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %8) #9
  br label %9

9:                                                ; preds = %2, %7
  %10 = getelementptr inbounds %"class.blink::MessagePortChannel::State", %"class.blink::MessagePortChannel::State"* %1, i64 0, i32 2
  tail call void @_ZN5blink21MessagePortDescriptorC1EOS0_(%"class.blink::MessagePortDescriptor"* %0, %"class.blink::MessagePortDescriptor"* dereferenceable(32) %10) #9
  %11 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18MessagePortChannel14ReleaseHandlesERKNSt3__16vectorIS0_NS1_9allocatorIS0_EEEE(%"class.std::__1::vector.2"* noalias sret, %"class.std::__1::vector"* nocapture readonly dereferenceable(24)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::MessagePortDescriptor", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 1
  %6 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.blink::MessagePortChannel"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %1 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  %14 = bitcast %"class.std::__1::vector.2"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #9
  %15 = icmp eq i64 %12, 0
  br i1 %15, label %36, label %16

16:                                               ; preds = %2
  %17 = icmp ugt i64 %13, 576460752303423487
  br i1 %17, label %18, label %20

18:                                               ; preds = %16
  %19 = bitcast %"class.std::__1::vector.2"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %19) #11
  unreachable

20:                                               ; preds = %16
  %21 = shl i64 %12, 2
  %22 = tail call i8* @_Znwm(i64 %21) #10
  %23 = bitcast i8* %22 to %"class.blink::MessagePortDescriptor"*
  %24 = bitcast %"class.blink::MessagePortDescriptor"** %5 to i8**
  store i8* %22, i8** %24, align 8
  %25 = bitcast %"class.std::__1::vector.2"* %0 to i8**
  store i8* %22, i8** %25, align 8
  %26 = getelementptr inbounds %"class.blink::MessagePortDescriptor", %"class.blink::MessagePortDescriptor"* %23, i64 %13
  store %"class.blink::MessagePortDescriptor"* %26, %"class.blink::MessagePortDescriptor"** %6, align 8
  br label %27

27:                                               ; preds = %27, %20
  %28 = phi %"class.blink::MessagePortDescriptor"* [ %29, %27 ], [ %23, %20 ]
  tail call void @_ZN5blink21MessagePortDescriptorC1Ev(%"class.blink::MessagePortDescriptor"* %28) #9
  %29 = getelementptr inbounds %"class.blink::MessagePortDescriptor", %"class.blink::MessagePortDescriptor"* %28, i64 1
  %30 = icmp eq %"class.blink::MessagePortDescriptor"* %29, %26
  br i1 %30, label %31, label %27

31:                                               ; preds = %27
  %32 = bitcast %"class.blink::MessagePortDescriptor"** %5 to i64*
  %33 = ptrtoint %"class.blink::MessagePortDescriptor"* %26 to i64
  store i64 %33, i64* %32, align 8
  %34 = load i64, i64* %8, align 8
  %35 = load i64, i64* %10, align 8
  br label %36

36:                                               ; preds = %2, %31
  %37 = phi i64 [ %11, %2 ], [ %35, %31 ]
  %38 = phi i64 [ %9, %2 ], [ %34, %31 ]
  %39 = icmp eq i64 %38, %37
  br i1 %39, label %66, label %40

40:                                               ; preds = %36
  %41 = bitcast %"class.blink::MessagePortDescriptor"* %3 to i8*
  br label %42

42:                                               ; preds = %40, %54
  %43 = phi i64 [ %37, %40 ], [ %62, %54 ]
  %44 = phi i64 [ 0, %40 ], [ %60, %54 ]
  %45 = inttoptr i64 %43 to %"class.blink::MessagePortChannel"*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #9
  %46 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %45, i64 %44, i32 0, i32 0
  %47 = load %"class.blink::MessagePortChannel::State"*, %"class.blink::MessagePortChannel::State"** %46, align 8, !noalias !6
  %48 = getelementptr inbounds %"class.blink::MessagePortChannel::State", %"class.blink::MessagePortChannel::State"* %47, i64 0, i32 1
  %49 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %48, i64 0, i32 0, i32 0
  %50 = call i32 @pthread_mutex_trylock(%union.pthread_mutex_t* %49) #9, !noalias !9
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %54, label %52, !prof !5

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.base::Lock", %"class.base::Lock"* %48, i64 0, i32 0
  call void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"* %53) #9
  br label %54

54:                                               ; preds = %42, %52
  %55 = getelementptr inbounds %"class.blink::MessagePortChannel::State", %"class.blink::MessagePortChannel::State"* %47, i64 0, i32 2
  call void @_ZN5blink21MessagePortDescriptorC1EOS0_(%"class.blink::MessagePortDescriptor"* nonnull %3, %"class.blink::MessagePortDescriptor"* dereferenceable(32) %55) #9
  %56 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %49) #9
  %57 = load %"class.blink::MessagePortDescriptor"*, %"class.blink::MessagePortDescriptor"** %4, align 8
  %58 = getelementptr inbounds %"class.blink::MessagePortDescriptor", %"class.blink::MessagePortDescriptor"* %57, i64 %44
  %59 = call dereferenceable(32) %"class.blink::MessagePortDescriptor"* @_ZN5blink21MessagePortDescriptoraSEOS0_(%"class.blink::MessagePortDescriptor"* %58, %"class.blink::MessagePortDescriptor"* nonnull dereferenceable(32) %3) #9
  call void @_ZN5blink21MessagePortDescriptorD1Ev(%"class.blink::MessagePortDescriptor"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #9
  %60 = add nuw i64 %44, 1
  %61 = load i64, i64* %8, align 8
  %62 = load i64, i64* %10, align 8
  %63 = sub i64 %61, %62
  %64 = ashr exact i64 %63, 3
  %65 = icmp ult i64 %60, %64
  br i1 %65, label %42, label %66

66:                                               ; preds = %54, %36
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #6

declare dereferenceable(32) %"class.blink::MessagePortDescriptor"* @_ZN5blink21MessagePortDescriptoraSEOS0_(%"class.blink::MessagePortDescriptor"*, %"class.blink::MessagePortDescriptor"* dereferenceable(32)) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18MessagePortChannel17CreateFromHandlesENSt3__16vectorINS_21MessagePortDescriptorENS1_9allocatorIS3_EEEE(%"class.std::__1::vector"* noalias sret, %"class.std::__1::vector.2"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::MessagePortDescriptor", align 8
  %4 = alloca %"class.blink::MessagePortDescriptor", align 8
  %5 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %6 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::vector.2", %"class.std::__1::vector.2"* %1, i64 0, i32 0, i32 1
  %9 = bitcast %"class.blink::MessagePortDescriptor"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.2"* %1 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 5
  %15 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 24, i1 false) #9
  %16 = icmp eq i64 %13, 0
  br i1 %16, label %45, label %17

17:                                               ; preds = %2
  %18 = icmp ugt i64 %14, 2305843009213693951
  br i1 %18, label %19, label %21

19:                                               ; preds = %17
  %20 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %20) #11
  unreachable

21:                                               ; preds = %17
  %22 = ashr exact i64 %13, 2
  %23 = tail call i8* @_Znwm(i64 %22) #10
  %24 = bitcast i8* %23 to %"class.blink::MessagePortChannel"*
  %25 = bitcast %"class.blink::MessagePortChannel"** %6 to i8**
  store i8* %23, i8** %25, align 8
  %26 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %23, i8** %26, align 8
  %27 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %24, i64 %14
  store %"class.blink::MessagePortChannel"* %27, %"class.blink::MessagePortChannel"** %7, align 8
  br label %28

28:                                               ; preds = %28, %21
  %29 = phi %"class.blink::MessagePortChannel"* [ %38, %28 ], [ %24, %21 ]
  %30 = tail call i8* @_Znwm(i64 80) #10
  %31 = bitcast i8* %30 to i32*
  store i32 0, i32* %31, align 4
  %32 = getelementptr inbounds i8, i8* %30, i64 8
  %33 = bitcast i8* %32 to %"class.base::internal::LockImpl"*
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %33) #9
  %34 = getelementptr inbounds i8, i8* %30, i64 48
  %35 = bitcast i8* %34 to %"class.blink::MessagePortDescriptor"*
  tail call void @_ZN5blink21MessagePortDescriptorC1Ev(%"class.blink::MessagePortDescriptor"* %35) #9
  %36 = bitcast %"class.blink::MessagePortChannel"* %29 to i8**
  store i8* %30, i8** %36, align 8
  %37 = atomicrmw add i32* %31, i32 1 monotonic
  %38 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %29, i64 1
  %39 = icmp eq %"class.blink::MessagePortChannel"* %38, %27
  br i1 %39, label %40, label %28

40:                                               ; preds = %28
  %41 = bitcast %"class.blink::MessagePortChannel"** %6 to i64*
  %42 = ptrtoint %"class.blink::MessagePortChannel"* %27 to i64
  store i64 %42, i64* %41, align 8
  %43 = load i64, i64* %9, align 8
  %44 = load i64, i64* %11, align 8
  br label %45

45:                                               ; preds = %2, %40
  %46 = phi i64 [ %12, %2 ], [ %44, %40 ]
  %47 = phi i64 [ %10, %2 ], [ %43, %40 ]
  %48 = icmp eq i64 %47, %46
  br i1 %48, label %93, label %49

49:                                               ; preds = %45
  %50 = bitcast %"class.blink::MessagePortDescriptor"* %3 to i8*
  br label %51

51:                                               ; preds = %49, %86
  %52 = phi i64 [ %46, %49 ], [ %89, %86 ]
  %53 = phi i64 [ 0, %49 ], [ %87, %86 ]
  %54 = inttoptr i64 %52 to %"class.blink::MessagePortDescriptor"*
  %55 = getelementptr inbounds %"class.blink::MessagePortDescriptor", %"class.blink::MessagePortDescriptor"* %54, i64 %53
  call void @_ZN5blink21MessagePortDescriptorC1EOS0_(%"class.blink::MessagePortDescriptor"* nonnull %4, %"class.blink::MessagePortDescriptor"* dereferenceable(32) %55) #9
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %50)
  %56 = call i8* @_Znwm(i64 80) #10
  call void @_ZN5blink21MessagePortDescriptorC1EOS0_(%"class.blink::MessagePortDescriptor"* nonnull %3, %"class.blink::MessagePortDescriptor"* nonnull dereferenceable(32) %4) #9
  %57 = bitcast i8* %56 to i32*
  store i32 0, i32* %57, align 4
  %58 = getelementptr inbounds i8, i8* %56, i64 8
  %59 = bitcast i8* %58 to %"class.base::internal::LockImpl"*
  call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %59) #9
  %60 = getelementptr inbounds i8, i8* %56, i64 48
  %61 = bitcast i8* %60 to %"class.blink::MessagePortDescriptor"*
  call void @_ZN5blink21MessagePortDescriptorC1EOS0_(%"class.blink::MessagePortDescriptor"* %61, %"class.blink::MessagePortDescriptor"* nonnull dereferenceable(32) %3) #9
  %62 = atomicrmw add i32* %57, i32 1 monotonic
  call void @_ZN5blink21MessagePortDescriptorD1Ev(%"class.blink::MessagePortDescriptor"* nonnull %3) #9
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %50)
  %63 = load %"class.blink::MessagePortChannel"*, %"class.blink::MessagePortChannel"** %5, align 8
  %64 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %63, i64 %53
  %65 = atomicrmw add i32* %57, i32 1 monotonic
  %66 = ptrtoint i8* %56 to i64
  %67 = bitcast %"class.blink::MessagePortChannel"* %64 to i64*
  %68 = getelementptr inbounds %"class.blink::MessagePortChannel", %"class.blink::MessagePortChannel"* %64, i64 0, i32 0, i32 0
  %69 = load %"class.blink::MessagePortChannel::State"*, %"class.blink::MessagePortChannel::State"** %68, align 8
  store i64 %66, i64* %67, align 8
  %70 = icmp eq %"class.blink::MessagePortChannel::State"* %69, null
  br i1 %70, label %82, label %71

71:                                               ; preds = %51
  %72 = getelementptr inbounds %"class.blink::MessagePortChannel::State", %"class.blink::MessagePortChannel::State"* %69, i64 0, i32 0
  %73 = getelementptr inbounds %"class.blink::MessagePortChannel::State", %"class.blink::MessagePortChannel::State"* %69, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %74 = atomicrmw sub i32* %73, i32 1 acq_rel
  %75 = icmp eq i32 %74, 1
  br i1 %75, label %76, label %82

76:                                               ; preds = %71
  %77 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %72, i64 12
  %78 = bitcast %"class.base::RefCountedThreadSafe"* %77 to %"class.blink::MessagePortDescriptor"*
  call void @_ZN5blink21MessagePortDescriptorD1Ev(%"class.blink::MessagePortDescriptor"* %78) #9
  %79 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %72, i64 2
  %80 = bitcast %"class.base::RefCountedThreadSafe"* %79 to %"class.base::internal::LockImpl"*
  call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %80) #9
  %81 = bitcast %"class.blink::MessagePortChannel::State"* %69 to i8*
  call void @_ZdlPv(i8* %81) #10
  br label %82

82:                                               ; preds = %76, %71, %51
  %83 = atomicrmw sub i32* %57, i32 1 acq_rel
  %84 = icmp eq i32 %83, 1
  br i1 %84, label %85, label %86

85:                                               ; preds = %82
  call void @_ZN5blink21MessagePortDescriptorD1Ev(%"class.blink::MessagePortDescriptor"* %61) #9
  call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %59) #9
  call void @_ZdlPv(i8* nonnull %56) #10
  br label %86

86:                                               ; preds = %82, %85
  call void @_ZN5blink21MessagePortDescriptorD1Ev(%"class.blink::MessagePortDescriptor"* nonnull %4) #9
  %87 = add nuw i64 %53, 1
  %88 = load i64, i64* %9, align 8
  %89 = load i64, i64* %11, align 8
  %90 = sub i64 %88, %89
  %91 = ashr exact i64 %90, 5
  %92 = icmp ult i64 %87, %91
  br i1 %92, label %51, label %93

93:                                               ; preds = %86, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18MessagePortChannel5StateC2Ev(%"class.blink::MessagePortChannel::State"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MessagePortChannel::State", %"class.blink::MessagePortChannel::State"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %2, align 4
  %3 = getelementptr inbounds %"class.blink::MessagePortChannel::State", %"class.blink::MessagePortChannel::State"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %3) #9
  %4 = getelementptr inbounds %"class.blink::MessagePortChannel::State", %"class.blink::MessagePortChannel::State"* %0, i64 0, i32 2
  tail call void @_ZN5blink21MessagePortDescriptorC1Ev(%"class.blink::MessagePortDescriptor"* %4) #9
  ret void
}

declare void @_ZN5blink21MessagePortDescriptorC1Ev(%"class.blink::MessagePortDescriptor"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18MessagePortChannel5StateC2ENS_21MessagePortDescriptorE(%"class.blink::MessagePortChannel::State"*, %"class.blink::MessagePortDescriptor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::MessagePortChannel::State", %"class.blink::MessagePortChannel::State"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 0, i32* %3, align 4
  %4 = getelementptr inbounds %"class.blink::MessagePortChannel::State", %"class.blink::MessagePortChannel::State"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"* %4) #9
  %5 = getelementptr inbounds %"class.blink::MessagePortChannel::State", %"class.blink::MessagePortChannel::State"* %0, i64 0, i32 2
  tail call void @_ZN5blink21MessagePortDescriptorC1EOS0_(%"class.blink::MessagePortDescriptor"* %5, %"class.blink::MessagePortDescriptor"* dereferenceable(32) %1) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink18MessagePortChannel5StateD2Ev(%"class.blink::MessagePortChannel::State"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::MessagePortChannel::State", %"class.blink::MessagePortChannel::State"* %0, i64 0, i32 2
  tail call void @_ZN5blink21MessagePortDescriptorD1Ev(%"class.blink::MessagePortDescriptor"* %2) #9
  %3 = getelementptr inbounds %"class.blink::MessagePortChannel::State", %"class.blink::MessagePortChannel::State"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"* %3) #9
  ret void
}

declare void @_ZN4base8internal8LockImplC1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN4base8internal8LockImplD1Ev(%"class.base::internal::LockImpl"*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare void @_ZN4base8internal8LockImpl24LockInternalWithTrackingEv(%"class.base::internal::LockImpl"*) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @pthread_mutex_trylock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { argmemonly nounwind }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN5blink18MessagePortChannel5State10TakeHandleEv: argument 0"}
!4 = distinct !{!4, !"_ZN5blink18MessagePortChannel5State10TakeHandleEv"}
!5 = !{!"branch_weights", i32 2000, i32 1}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZNK5blink18MessagePortChannel13ReleaseHandleEv: argument 0"}
!8 = distinct !{!8, !"_ZNK5blink18MessagePortChannel13ReleaseHandleEv"}
!9 = !{!10, !7}
!10 = distinct !{!10, !11, !"_ZN5blink18MessagePortChannel5State10TakeHandleEv: argument 0"}
!11 = distinct !{!11, !"_ZN5blink18MessagePortChannel5State10TakeHandleEv"}
