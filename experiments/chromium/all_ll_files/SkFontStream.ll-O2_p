; ModuleID = '../../third_party/skia/src/core/SkFontStream.cpp'
source_filename = "../../third_party/skia/src/core/SkFontStream.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkStream = type { i32 (...)** }
%union.SkSharedTTHeader = type { %struct.SkTTCFHeader }
%struct.SkTTCFHeader = type { i32, i32, i32, i32 }
%struct.SfntHeader = type { i32, %struct.SkSFNTDirEntry* }
%struct.SkSFNTDirEntry = type { i32, i32, i32, i32 }
%class.SkAutoSMalloc = type { i8*, i64, [256 x i32] }

$_ZN10SfntHeader4initEP8SkStreami = comdat any

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN12SkFontStream15CountTTCEntriesEP8SkStream(%class.SkStream*) local_unnamed_addr #0 align 2 {
  %2 = alloca %union.SkSharedTTHeader, align 4
  %3 = bitcast %class.SkStream* %0 to i1 (%class.SkStream*)***
  %4 = load i1 (%class.SkStream*)**, i1 (%class.SkStream*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%class.SkStream*)*, i1 (%class.SkStream*)** %4, i64 5
  %6 = load i1 (%class.SkStream*)*, i1 (%class.SkStream*)** %5, align 8
  %7 = tail call zeroext i1 %6(%class.SkStream* %0) #4
  %8 = bitcast %union.SkSharedTTHeader* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #4
  %9 = getelementptr inbounds %union.SkSharedTTHeader, %union.SkSharedTTHeader* %2, i64 0, i32 0, i32 2
  %10 = bitcast %class.SkStream* %0 to i64 (%class.SkStream*, i8*, i64)***
  %11 = bitcast %union.SkSharedTTHeader* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %11, i8 -86, i64 16, i1 false)
  %12 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %10, align 8
  %13 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %12, i64 2
  %14 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %13, align 8
  %15 = call i64 %14(%class.SkStream* %0, i8* nonnull %8, i64 16) #4
  %16 = icmp eq i64 %15, 16
  br i1 %16, label %17, label %24

17:                                               ; preds = %1
  %18 = getelementptr inbounds %union.SkSharedTTHeader, %union.SkSharedTTHeader* %2, i64 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 1717793908
  br i1 %20, label %21, label %24

21:                                               ; preds = %17
  %22 = load i32, i32* %9, align 4
  %23 = call i32 @llvm.bswap.i32(i32 %22) #4
  br label %24

24:                                               ; preds = %21, %17, %1
  %25 = phi i32 [ 0, %1 ], [ %23, %21 ], [ 1, %17 ]
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #4
  ret i32 %25
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN12SkFontStream12GetTableTagsEP8SkStreamiPj(%class.SkStream*, i32, i32*) local_unnamed_addr #0 align 2 {
  %4 = alloca %struct.SfntHeader, align 8
  %5 = bitcast %struct.SfntHeader* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #4
  %6 = bitcast %struct.SfntHeader* %4 to i64*
  store i64 -6148914691236517206, i64* %6, align 8
  %7 = getelementptr inbounds %struct.SfntHeader, %struct.SfntHeader* %4, i64 0, i32 0
  store i32 0, i32* %7, align 8
  %8 = getelementptr inbounds %struct.SfntHeader, %struct.SfntHeader* %4, i64 0, i32 1
  store %struct.SkSFNTDirEntry* null, %struct.SkSFNTDirEntry** %8, align 8
  %9 = call zeroext i1 @_ZN10SfntHeader4initEP8SkStreami(%struct.SfntHeader* nonnull %4, %class.SkStream* %0, i32 %1)
  br i1 %9, label %10, label %61

10:                                               ; preds = %3
  %11 = icmp ne i32* %2, null
  %12 = load i32, i32* %7, align 8
  %13 = icmp sgt i32 %12, 0
  %14 = and i1 %11, %13
  br i1 %14, label %15, label %61

15:                                               ; preds = %10
  %16 = load %struct.SkSFNTDirEntry*, %struct.SkSFNTDirEntry** %8, align 8
  %17 = sext i32 %12 to i64
  %18 = add nsw i64 %17, -1
  %19 = and i64 %17, 3
  %20 = icmp ult i64 %18, 3
  br i1 %20, label %48, label %21

21:                                               ; preds = %15
  %22 = sub nsw i64 %17, %19
  br label %23

23:                                               ; preds = %23, %21
  %24 = phi i64 [ 0, %21 ], [ %45, %23 ]
  %25 = phi i64 [ %22, %21 ], [ %46, %23 ]
  %26 = getelementptr inbounds %struct.SkSFNTDirEntry, %struct.SkSFNTDirEntry* %16, i64 %24, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = call i32 @llvm.bswap.i32(i32 %27) #4
  %29 = getelementptr inbounds i32, i32* %2, i64 %24
  store i32 %28, i32* %29, align 4
  %30 = or i64 %24, 1
  %31 = getelementptr inbounds %struct.SkSFNTDirEntry, %struct.SkSFNTDirEntry* %16, i64 %30, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = call i32 @llvm.bswap.i32(i32 %32) #4
  %34 = getelementptr inbounds i32, i32* %2, i64 %30
  store i32 %33, i32* %34, align 4
  %35 = or i64 %24, 2
  %36 = getelementptr inbounds %struct.SkSFNTDirEntry, %struct.SkSFNTDirEntry* %16, i64 %35, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = call i32 @llvm.bswap.i32(i32 %37) #4
  %39 = getelementptr inbounds i32, i32* %2, i64 %35
  store i32 %38, i32* %39, align 4
  %40 = or i64 %24, 3
  %41 = getelementptr inbounds %struct.SkSFNTDirEntry, %struct.SkSFNTDirEntry* %16, i64 %40, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = call i32 @llvm.bswap.i32(i32 %42) #4
  %44 = getelementptr inbounds i32, i32* %2, i64 %40
  store i32 %43, i32* %44, align 4
  %45 = add nuw nsw i64 %24, 4
  %46 = add i64 %25, -4
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %48, label %23

48:                                               ; preds = %23, %15
  %49 = phi i64 [ 0, %15 ], [ %45, %23 ]
  %50 = icmp eq i64 %19, 0
  br i1 %50, label %61, label %51

51:                                               ; preds = %48, %51
  %52 = phi i64 [ %58, %51 ], [ %49, %48 ]
  %53 = phi i64 [ %59, %51 ], [ %19, %48 ]
  %54 = getelementptr inbounds %struct.SkSFNTDirEntry, %struct.SkSFNTDirEntry* %16, i64 %52, i32 0
  %55 = load i32, i32* %54, align 4
  %56 = call i32 @llvm.bswap.i32(i32 %55) #4
  %57 = getelementptr inbounds i32, i32* %2, i64 %52
  store i32 %56, i32* %57, align 4
  %58 = add nuw nsw i64 %52, 1
  %59 = add i64 %53, -1
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %61, label %51, !llvm.loop !2

61:                                               ; preds = %48, %51, %10, %3
  %62 = phi i32 [ 0, %3 ], [ %12, %10 ], [ %12, %51 ], [ %12, %48 ]
  %63 = bitcast %struct.SkSFNTDirEntry** %8 to i8**
  %64 = load i8*, i8** %63, align 8
  call void @_Z7sk_freePv(i8* %64) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #4
  ret i32 %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN10SfntHeader4initEP8SkStreami(%struct.SfntHeader*, %class.SkStream*, i32) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %class.SkAutoSMalloc, align 8
  %5 = bitcast %class.SkStream* %1 to i1 (%class.SkStream*)***
  %6 = load i1 (%class.SkStream*)**, i1 (%class.SkStream*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%class.SkStream*)*, i1 (%class.SkStream*)** %6, i64 5
  %8 = load i1 (%class.SkStream*)*, i1 (%class.SkStream*)** %7, align 8
  %9 = tail call zeroext i1 %8(%class.SkStream* %1) #4
  %10 = bitcast %class.SkAutoSMalloc* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1040, i8* nonnull %10) #4
  %11 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %4, i64 0, i32 2
  %12 = bitcast [256 x i32]* %11 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 1024, i1 false) #4
  %13 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %4, i64 0, i32 2, i64 0
  %14 = bitcast %class.SkAutoSMalloc* %4 to i32**
  store i32* %13, i32** %14, align 8
  %15 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %4, i64 0, i32 1
  store i64 1024, i64* %15, align 8
  %16 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %4, i64 0, i32 0
  %17 = bitcast i32* %13 to i8*
  %18 = bitcast i32* %13 to %union.SkSharedTTHeader*
  %19 = bitcast %class.SkStream* %1 to i64 (%class.SkStream*, i8*, i64)***
  %20 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %19, align 8
  %21 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %20, i64 2
  %22 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %21, align 8
  %23 = call i64 %22(%class.SkStream* %1, i8* %17, i64 16) #4
  %24 = icmp eq i64 %23, 16
  br i1 %24, label %25, label %100

25:                                               ; preds = %3
  %26 = load i32, i32* %13, align 8
  %27 = icmp eq i32 %26, 1717793908
  br i1 %27, label %28, label %91

28:                                               ; preds = %25
  %29 = getelementptr inbounds %class.SkAutoSMalloc, %class.SkAutoSMalloc* %4, i64 0, i32 2, i64 2
  %30 = load i32, i32* %29, align 8
  %31 = call i32 @llvm.bswap.i32(i32 %30) #4
  %32 = icmp ugt i32 %31, %2
  br i1 %32, label %33, label %100

33:                                               ; preds = %28
  %34 = icmp sgt i32 %2, 0
  br i1 %34, label %37, label %35

35:                                               ; preds = %33
  %36 = sext i32 %2 to i64
  br label %67

37:                                               ; preds = %33
  %38 = load i1 (%class.SkStream*)**, i1 (%class.SkStream*)*** %5, align 8
  %39 = getelementptr inbounds i1 (%class.SkStream*)*, i1 (%class.SkStream*)** %38, i64 5
  %40 = load i1 (%class.SkStream*)*, i1 (%class.SkStream*)** %39, align 8
  %41 = call zeroext i1 %40(%class.SkStream* %1) #4
  %42 = sext i32 %2 to i64
  %43 = shl nsw i64 %42, 2
  %44 = add nuw nsw i64 %43, 16
  %45 = icmp ugt i64 %44, 1024
  %46 = select i1 %45, i64 %44, i64 1024
  %47 = load i64, i64* %15, align 8
  %48 = icmp eq i64 %46, %47
  %49 = load i8*, i8** %16, align 8
  br i1 %48, label %59, label %50

50:                                               ; preds = %37
  %51 = icmp eq i8* %49, %17
  br i1 %51, label %53, label %52

52:                                               ; preds = %50
  call void @_Z7sk_freePv(i8* %49) #4
  br label %53

53:                                               ; preds = %52, %50
  %54 = icmp ult i64 %44, 1025
  br i1 %54, label %57, label %55

55:                                               ; preds = %53
  %56 = call i8* @_Z15sk_malloc_flagsmj(i64 %46, i32 2) #4
  br label %57

57:                                               ; preds = %55, %53
  %58 = phi i8* [ %56, %55 ], [ %17, %53 ]
  store i8* %58, i8** %16, align 8
  store i64 %46, i64* %15, align 8
  br label %59

59:                                               ; preds = %57, %37
  %60 = phi i8* [ %58, %57 ], [ %49, %37 ]
  %61 = bitcast i8* %60 to %union.SkSharedTTHeader*
  %62 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %19, align 8
  %63 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %62, i64 2
  %64 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %63, align 8
  %65 = call i64 %64(%class.SkStream* %1, i8* %60, i64 %44) #4
  %66 = icmp eq i64 %65, %44
  br i1 %66, label %67, label %100

67:                                               ; preds = %59, %35
  %68 = phi i64 [ %36, %35 ], [ %42, %59 ]
  %69 = phi i8* [ %17, %35 ], [ %60, %59 ]
  %70 = phi %union.SkSharedTTHeader* [ %18, %35 ], [ %61, %59 ]
  %71 = getelementptr inbounds %union.SkSharedTTHeader, %union.SkSharedTTHeader* %70, i64 0, i32 0, i32 3
  %72 = getelementptr inbounds i32, i32* %71, i64 %68
  %73 = load i32, i32* %72, align 4
  %74 = call i32 @llvm.bswap.i32(i32 %73) #4
  %75 = zext i32 %74 to i64
  %76 = load i1 (%class.SkStream*)**, i1 (%class.SkStream*)*** %5, align 8
  %77 = getelementptr inbounds i1 (%class.SkStream*)*, i1 (%class.SkStream*)** %76, i64 5
  %78 = load i1 (%class.SkStream*)*, i1 (%class.SkStream*)** %77, align 8
  %79 = call zeroext i1 %78(%class.SkStream* %1) #4
  %80 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %19, align 8
  %81 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %80, i64 2
  %82 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %81, align 8
  %83 = call i64 %82(%class.SkStream* %1, i8* null, i64 %75) #4
  %84 = icmp eq i64 %83, %75
  br i1 %84, label %85, label %100

85:                                               ; preds = %67
  %86 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %19, align 8
  %87 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %86, i64 2
  %88 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %87, align 8
  %89 = call i64 %88(%class.SkStream* %1, i8* %69, i64 12) #4
  %90 = icmp eq i64 %89, 12
  br i1 %90, label %91, label %100

91:                                               ; preds = %85, %25
  %92 = phi i64 [ 0, %25 ], [ %75, %85 ]
  %93 = phi %union.SkSharedTTHeader* [ %18, %25 ], [ %70, %85 ]
  %94 = add nuw nsw i64 %92, 12
  %95 = getelementptr inbounds %union.SkSharedTTHeader, %union.SkSharedTTHeader* %93, i64 0, i32 0, i32 1
  %96 = bitcast i32* %95 to i16*
  %97 = load i16, i16* %96, align 4
  %98 = call i16 @llvm.bswap.i16(i16 %97) #4
  %99 = zext i16 %98 to i32
  br label %100

100:                                              ; preds = %91, %85, %67, %59, %28, %3
  %101 = phi i64 [ %94, %91 ], [ -6148914691236517206, %85 ], [ -6148914691236517206, %67 ], [ -6148914691236517206, %59 ], [ -6148914691236517206, %28 ], [ -6148914691236517206, %3 ]
  %102 = phi i32 [ %99, %91 ], [ 0, %85 ], [ 0, %67 ], [ 0, %59 ], [ 0, %28 ], [ 0, %3 ]
  %103 = load i8*, i8** %16, align 8
  %104 = icmp eq i8* %103, %17
  br i1 %104, label %106, label %105

105:                                              ; preds = %100
  call void @_Z7sk_freePv(i8* %103) #4
  br label %106

106:                                              ; preds = %100, %105
  call void @llvm.lifetime.end.p0i8(i64 1040, i8* nonnull %10) #4
  %107 = getelementptr inbounds %struct.SfntHeader, %struct.SfntHeader* %0, i64 0, i32 0
  store i32 %102, i32* %107, align 8
  %108 = icmp eq i32 %102, 0
  br i1 %108, label %131, label %109

109:                                              ; preds = %106
  %110 = load i1 (%class.SkStream*)**, i1 (%class.SkStream*)*** %5, align 8
  %111 = getelementptr inbounds i1 (%class.SkStream*)*, i1 (%class.SkStream*)** %110, i64 5
  %112 = load i1 (%class.SkStream*)*, i1 (%class.SkStream*)** %111, align 8
  %113 = call zeroext i1 %112(%class.SkStream* %1) #4
  %114 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %19, align 8
  %115 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %114, i64 2
  %116 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %115, align 8
  %117 = call i64 %116(%class.SkStream* %1, i8* null, i64 %101) #4
  %118 = icmp eq i64 %117, %101
  br i1 %118, label %119, label %131

119:                                              ; preds = %109
  %120 = load i32, i32* %107, align 8
  %121 = sext i32 %120 to i64
  %122 = shl nsw i64 %121, 4
  %123 = call i8* @_Z15sk_malloc_flagsmj(i64 %122, i32 2) #4
  %124 = getelementptr inbounds %struct.SfntHeader, %struct.SfntHeader* %0, i64 0, i32 1
  %125 = bitcast %struct.SkSFNTDirEntry** %124 to i8**
  store i8* %123, i8** %125, align 8
  %126 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %19, align 8
  %127 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %126, i64 2
  %128 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %127, align 8
  %129 = call i64 %128(%class.SkStream* %1, i8* %123, i64 %122) #4
  %130 = icmp eq i64 %129, %122
  br label %131

131:                                              ; preds = %109, %106, %119
  %132 = phi i1 [ %130, %119 ], [ false, %106 ], [ false, %109 ]
  ret i1 %132
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN12SkFontStream12GetTableDataEP8SkStreamijmmPv(%class.SkStream*, i32, i32, i64, i64, i8*) local_unnamed_addr #0 align 2 {
  %7 = alloca %struct.SfntHeader, align 8
  %8 = bitcast %struct.SfntHeader* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #4
  %9 = bitcast %struct.SfntHeader* %7 to i64*
  store i64 -6148914691236517206, i64* %9, align 8
  %10 = getelementptr inbounds %struct.SfntHeader, %struct.SfntHeader* %7, i64 0, i32 0
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds %struct.SfntHeader, %struct.SfntHeader* %7, i64 0, i32 1
  store %struct.SkSFNTDirEntry* null, %struct.SkSFNTDirEntry** %11, align 8
  %12 = call zeroext i1 @_ZN10SfntHeader4initEP8SkStreami(%struct.SfntHeader* nonnull %7, %class.SkStream* %0, i32 %1)
  %13 = load i32, i32* %10, align 8
  %14 = icmp sgt i32 %13, 0
  %15 = and i1 %12, %14
  br i1 %15, label %16, label %67

16:                                               ; preds = %6
  %17 = load %struct.SkSFNTDirEntry*, %struct.SkSFNTDirEntry** %11, align 8
  %18 = sext i32 %13 to i64
  br label %21

19:                                               ; preds = %21
  %20 = icmp slt i64 %27, %18
  br i1 %20, label %21, label %67

21:                                               ; preds = %16, %19
  %22 = phi i64 [ 0, %16 ], [ %27, %19 ]
  %23 = getelementptr inbounds %struct.SkSFNTDirEntry, %struct.SkSFNTDirEntry* %17, i64 %22, i32 0
  %24 = load i32, i32* %23, align 4
  %25 = call i32 @llvm.bswap.i32(i32 %24) #4
  %26 = icmp eq i32 %25, %2
  %27 = add nuw nsw i64 %22, 1
  br i1 %26, label %28, label %19

28:                                               ; preds = %21
  %29 = and i64 %22, 4294967295
  %30 = getelementptr inbounds %struct.SkSFNTDirEntry, %struct.SkSFNTDirEntry* %17, i64 %29, i32 2
  %31 = load i32, i32* %30, align 4
  %32 = call i32 @llvm.bswap.i32(i32 %31) #4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %struct.SkSFNTDirEntry, %struct.SkSFNTDirEntry* %17, i64 %29, i32 3
  %35 = load i32, i32* %34, align 4
  %36 = call i32 @llvm.bswap.i32(i32 %35) #4
  %37 = zext i32 %36 to i64
  %38 = icmp ule i64 %37, %3
  %39 = xor i64 %3, -1
  %40 = icmp ult i64 %39, %4
  %41 = or i1 %40, %38
  br i1 %41, label %67, label %42

42:                                               ; preds = %28
  %43 = sub i64 %37, %3
  %44 = icmp ult i64 %43, %4
  %45 = select i1 %44, i64 %43, i64 %4
  %46 = icmp eq i8* %5, null
  br i1 %46, label %67, label %47

47:                                               ; preds = %42
  %48 = bitcast %class.SkStream* %0 to i1 (%class.SkStream*)***
  %49 = load i1 (%class.SkStream*)**, i1 (%class.SkStream*)*** %48, align 8
  %50 = getelementptr inbounds i1 (%class.SkStream*)*, i1 (%class.SkStream*)** %49, i64 5
  %51 = load i1 (%class.SkStream*)*, i1 (%class.SkStream*)** %50, align 8
  %52 = call zeroext i1 %51(%class.SkStream* %0) #4
  %53 = add i64 %33, %3
  %54 = bitcast %class.SkStream* %0 to i64 (%class.SkStream*, i8*, i64)***
  %55 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %54, align 8
  %56 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %55, i64 2
  %57 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %56, align 8
  %58 = call i64 %57(%class.SkStream* %0, i8* null, i64 %53) #4
  %59 = icmp eq i64 %58, %53
  br i1 %59, label %60, label %66

60:                                               ; preds = %47
  %61 = load i64 (%class.SkStream*, i8*, i64)**, i64 (%class.SkStream*, i8*, i64)*** %54, align 8
  %62 = getelementptr inbounds i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %61, i64 2
  %63 = load i64 (%class.SkStream*, i8*, i64)*, i64 (%class.SkStream*, i8*, i64)** %62, align 8
  %64 = call i64 %63(%class.SkStream* %0, i8* nonnull %5, i64 %45) #4
  %65 = icmp eq i64 %64, %45
  br i1 %65, label %67, label %66

66:                                               ; preds = %47, %60
  br label %67

67:                                               ; preds = %19, %42, %60, %66, %28, %6
  %68 = phi i64 [ 0, %6 ], [ %45, %42 ], [ %45, %60 ], [ 0, %66 ], [ 0, %28 ], [ 0, %19 ]
  %69 = bitcast %struct.SkSFNTDirEntry** %11 to i8**
  %70 = load i8*, i8** %69, align 8
  call void @_Z7sk_freePv(i8* %70) #4
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #4
  ret i64 %68
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_Z7sk_freePv(i8*) local_unnamed_addr #2

declare i8* @_Z15sk_malloc_flagsmj(i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.bswap.i32(i32) #3

; Function Attrs: nounwind readnone speculatable
declare i16 @llvm.bswap.i16(i16) #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readnone speculatable }
attributes #4 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
