; ModuleID = '../../chrome/browser/media/router/providers/cast/cast_media_route_provider_metrics.cc'
source_filename = "../../chrome/browser/media/router/providers/cast/cast_media_route_provider_metrics.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::TimeDelta" = type { i64 }
%"class.base::HistogramBase" = type <{ i32 (...)**, i8*, %"struct.std::__1::atomic.1", [4 x i8] }>
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i32*, i32*, %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i32* }
%"class.base::Value" = type { %"class.absl::variant" }
%"class.absl::variant" = type { %"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveAssignBaseNontrivial" = type { %"class.absl::variant_internal::VariantCopyBaseNontrivial" }
%"class.absl::variant_internal::VariantCopyBaseNontrivial" = type { %"class.absl::variant_internal::VariantMoveBaseNontrivial" }
%"class.absl::variant_internal::VariantMoveBaseNontrivial" = type { %"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" }
%"class.absl::variant_internal::VariantStateBaseDestructorNontrivial" = type { %"class.absl::variant_internal::VariantStateBase" }
%"class.absl::variant_internal::VariantStateBase" = type { %"union.absl::variant_internal::DestructibleUnionImpl", i64 }
%"union.absl::variant_internal::DestructibleUnionImpl" = type { %"union.absl::variant_internal::DestructibleUnionImpl.7" }
%"union.absl::variant_internal::DestructibleUnionImpl.7" = type { %"union.absl::variant_internal::DestructibleUnionImpl.8" }
%"union.absl::variant_internal::DestructibleUnionImpl.8" = type { %"union.absl::variant_internal::DestructibleUnionImpl.9" }
%"union.absl::variant_internal::DestructibleUnionImpl.9" = type { %"union.absl::variant_internal::DestructibleUnionImpl.10" }
%"union.absl::variant_internal::DestructibleUnionImpl.10" = type { %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.cast_util::EnumTable" = type <{ %"class.std::initializer_list", i8, [47 x i8] }>
%"class.std::initializer_list" = type { %"class.cast_util::EnumTable<cast_channel::ReceiverAppType>::Entry"*, i64 }
%"class.cast_util::EnumTable<cast_channel::ReceiverAppType>::Entry" = type { %"class.cast_util::GenericEnumTableEntry" }
%"class.cast_util::GenericEnumTableEntry" = type { i8*, i32, i32 }

@_ZN12media_routerL32kHistogramAppAvailabilityFailureE = internal constant [42 x i8] c"MediaRouter.Cast.App.Availability.Failure\00", align 16
@_ZN12media_routerL32kHistogramAppAvailabilitySuccessE = internal constant [42 x i8] c"MediaRouter.Cast.App.Availability.Success\00", align 16
@_ZN12media_routerL31kHistogramCastSupportedAppTypesE = internal constant [56 x i8] c"MediaRouter.Cast.LaunchSessionRequest.SupportedAppTypes\00", align 16
@_ZN12media_routerL21kHistogramCastAppTypeE = internal constant [47 x i8] c"MediaRouter.Cast.LaunchSessionResponse.AppType\00", align 16
@_ZZN12media_router27RecordAppAvailabilityResultEN12cast_channel24GetAppAvailabilityResultEN4base9TimeDeltaEE24atomic_histogram_pointer.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8
@_ZZN12media_router27RecordAppAvailabilityResultEN12cast_channel24GetAppAvailabilityResultEN4base9TimeDeltaEE24atomic_histogram_pointer_0.0.0.0.0.0 = internal unnamed_addr global i64 0, align 8

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12media_router27RecordAppAvailabilityResultEN12cast_channel24GetAppAvailabilityResultEN4base9TimeDeltaE(i32, i64) local_unnamed_addr #0 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  store i64 %1, i64* %4, align 8
  %5 = icmp eq i32 %0, 2
  br i1 %5, label %6, label %13

6:                                                ; preds = %2
  %7 = load atomic i64, i64* @_ZZN12media_router27RecordAppAvailabilityResultEN12cast_channel24GetAppAvailabilityResultEN4base9TimeDeltaEE24atomic_histogram_pointer.0.0.0.0.0 acquire, align 8
  %8 = inttoptr i64 %7 to %"class.base::HistogramBase"*
  %9 = icmp eq i64 %7, 0
  br i1 %9, label %10, label %20

10:                                               ; preds = %6
  %11 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @_ZN12media_routerL32kHistogramAppAvailabilityFailureE, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #2
  %12 = ptrtoint %"class.base::HistogramBase"* %11 to i64
  store atomic i64 %12, i64* @_ZZN12media_router27RecordAppAvailabilityResultEN12cast_channel24GetAppAvailabilityResultEN4base9TimeDeltaEE24atomic_histogram_pointer.0.0.0.0.0 release, align 8
  br label %20

13:                                               ; preds = %2
  %14 = load atomic i64, i64* @_ZZN12media_router27RecordAppAvailabilityResultEN12cast_channel24GetAppAvailabilityResultEN4base9TimeDeltaEE24atomic_histogram_pointer_0.0.0.0.0.0 acquire, align 8
  %15 = inttoptr i64 %14 to %"class.base::HistogramBase"*
  %16 = icmp eq i64 %14, 0
  br i1 %16, label %17, label %20

17:                                               ; preds = %13
  %18 = tail call %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @_ZN12media_routerL32kHistogramAppAvailabilitySuccessE, i64 0, i64 0), i64 1000, i64 10000000, i32 50, i32 1) #2
  %19 = ptrtoint %"class.base::HistogramBase"* %18 to i64
  store atomic i64 %19, i64* @_ZZN12media_router27RecordAppAvailabilityResultEN12cast_channel24GetAppAvailabilityResultEN4base9TimeDeltaEE24atomic_histogram_pointer_0.0.0.0.0.0 release, align 8
  br label %20

20:                                               ; preds = %17, %13, %10, %6
  %21 = phi %"class.base::HistogramBase"* [ %8, %6 ], [ %11, %10 ], [ %15, %13 ], [ %18, %17 ]
  call void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"* %21, %"class.base::TimeDelta"* nonnull dereferenceable(8) %3) #2
  ret void
}

declare %"class.base::HistogramBase"* @_ZN4base9Histogram14FactoryTimeGetEPKcNS_9TimeDeltaES3_ji(i8*, i64, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN4base13HistogramBase30AddTimeMillisecondsGranularityERKNS_9TimeDeltaE(%"class.base::HistogramBase"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12media_router43RecordLaunchSessionRequestSupportedAppTypesENSt3__16vectorIN12cast_channel15ReceiverAppTypeENS0_9allocatorIS3_EEEE(%"class.std::__1::vector"* nocapture readonly) local_unnamed_addr #0 {
  %2 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %3 = load i32*, i32** %2, align 8
  %4 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %5 = load i32*, i32** %4, align 8
  %6 = icmp eq i32* %3, %5
  br i1 %6, label %37, label %7

7:                                                ; preds = %1
  %8 = ptrtoint i32* %3 to i64
  %9 = getelementptr i32, i32* %5, i64 -1
  %10 = ptrtoint i32* %9 to i64
  %11 = sub i64 %10, %8
  %12 = lshr i64 %11, 2
  %13 = add nuw nsw i64 %12, 1
  %14 = and i64 %13, 7
  %15 = icmp ult i64 %11, 28
  br i1 %15, label %18, label %16

16:                                               ; preds = %7
  %17 = sub nsw i64 %13, %14
  br label %39

18:                                               ; preds = %39, %7
  %19 = phi i8 [ undef, %7 ], [ %73, %39 ]
  %20 = phi i8 [ 0, %7 ], [ %73, %39 ]
  %21 = phi i32* [ %3, %7 ], [ %74, %39 ]
  %22 = icmp eq i64 %14, 0
  br i1 %22, label %33, label %23

23:                                               ; preds = %18, %23
  %24 = phi i8 [ %29, %23 ], [ %20, %18 ]
  %25 = phi i32* [ %30, %23 ], [ %21, %18 ]
  %26 = phi i64 [ %31, %23 ], [ %14, %18 ]
  %27 = load i32, i32* %25, align 4
  %28 = icmp eq i32 %27, 2
  %29 = select i1 %28, i8 1, i8 %24
  %30 = getelementptr inbounds i32, i32* %25, i64 1
  %31 = add i64 %26, -1
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %23, !llvm.loop !2

33:                                               ; preds = %23, %18
  %34 = phi i8 [ %19, %18 ], [ %29, %23 ]
  %35 = and i8 %34, 1
  %36 = zext i8 %35 to i32
  br label %37

37:                                               ; preds = %33, %1
  %38 = phi i32 [ 0, %1 ], [ %36, %33 ]
  tail call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([56 x i8], [56 x i8]* @_ZN12media_routerL31kHistogramCastSupportedAppTypesE, i64 0, i64 0), i32 %38, i32 2) #2
  ret void

39:                                               ; preds = %39, %16
  %40 = phi i8 [ 0, %16 ], [ %73, %39 ]
  %41 = phi i32* [ %3, %16 ], [ %74, %39 ]
  %42 = phi i64 [ %17, %16 ], [ %75, %39 ]
  %43 = load i32, i32* %41, align 4
  %44 = icmp eq i32 %43, 2
  %45 = getelementptr inbounds i32, i32* %41, i64 1
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 2
  %48 = or i1 %47, %44
  %49 = getelementptr inbounds i32, i32* %41, i64 2
  %50 = load i32, i32* %49, align 4
  %51 = icmp eq i32 %50, 2
  %52 = or i1 %51, %48
  %53 = getelementptr inbounds i32, i32* %41, i64 3
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 2
  %56 = or i1 %55, %52
  %57 = getelementptr inbounds i32, i32* %41, i64 4
  %58 = load i32, i32* %57, align 4
  %59 = icmp eq i32 %58, 2
  %60 = or i1 %59, %56
  %61 = getelementptr inbounds i32, i32* %41, i64 5
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 2
  %64 = or i1 %63, %60
  %65 = getelementptr inbounds i32, i32* %41, i64 6
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 2
  %68 = or i1 %67, %64
  %69 = getelementptr inbounds i32, i32* %41, i64 7
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 2
  %72 = or i1 %71, %68
  %73 = select i1 %72, i8 1, i8 %40
  %74 = getelementptr inbounds i32, i32* %41, i64 8
  %75 = add i64 %42, -8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %18, label %39
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN12media_router34RecordLaunchSessionResponseAppTypeEPKN4base5ValueE(%"class.base::Value"*) local_unnamed_addr #0 {
  %2 = icmp eq %"class.base::Value"* %0, null
  br i1 %2, label %30, label %3

3:                                                ; preds = %1
  %4 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4base5Value9GetStringEv(%"class.base::Value"* nonnull %0) #2
  %5 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %6 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %5, i64 0, i32 1, i32 0
  %7 = load i8, i8* %6, align 1
  %8 = icmp slt i8 %7, 0
  %9 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  %11 = bitcast %"class.std::__1::basic_string"* %4 to i8*
  %12 = select i1 %8, i8* %10, i8* %11
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %7 to i64
  %16 = select i1 %8, i64 %14, i64 %15
  %17 = tail call dereferenceable(64) %"class.cast_util::EnumTable"* @_ZN9cast_util9EnumTableIN12cast_channel15ReceiverAppTypeEE11GetInstanceEv() #2
  %18 = getelementptr inbounds %"class.cast_util::EnumTable", %"class.cast_util::EnumTable"* %17, i64 0, i32 0, i32 0
  %19 = load %"class.cast_util::EnumTable<cast_channel::ReceiverAppType>::Entry"*, %"class.cast_util::EnumTable<cast_channel::ReceiverAppType>::Entry"** %18, align 8
  %20 = getelementptr inbounds %"class.cast_util::EnumTable<cast_channel::ReceiverAppType>::Entry", %"class.cast_util::EnumTable<cast_channel::ReceiverAppType>::Entry"* %19, i64 0, i32 0
  %21 = getelementptr inbounds %"class.cast_util::EnumTable", %"class.cast_util::EnumTable"* %17, i64 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = tail call %"class.cast_util::GenericEnumTableEntry"* @_ZN9cast_util21GenericEnumTableEntry12FindByStringEPKS0_mN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.cast_util::GenericEnumTableEntry"* %20, i64 %22, i8* %12, i64 %16) #2
  %24 = icmp eq %"class.cast_util::GenericEnumTableEntry"* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %3
  %26 = getelementptr inbounds %"class.cast_util::GenericEnumTableEntry", %"class.cast_util::GenericEnumTableEntry"* %23, i64 0, i32 2
  %27 = load i32, i32* %26, align 4
  br label %28

28:                                               ; preds = %3, %25
  %29 = phi i32 [ %27, %25 ], [ 0, %3 ]
  tail call void @_ZN4base23UmaHistogramExactLinearEPKcii(i8* getelementptr inbounds ([47 x i8], [47 x i8]* @_ZN12media_routerL21kHistogramCastAppTypeE, i64 0, i64 0), i32 %29, i32 3) #2
  br label %30

30:                                               ; preds = %28, %1
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNK4base5Value9GetStringEv(%"class.base::Value"*) local_unnamed_addr #1

declare void @_ZN4base23UmaHistogramExactLinearEPKcii(i8*, i32, i32) local_unnamed_addr #1

declare dereferenceable(64) %"class.cast_util::EnumTable"* @_ZN9cast_util9EnumTableIN12cast_channel15ReceiverAppTypeEE11GetInstanceEv() local_unnamed_addr #1

declare %"class.cast_util::GenericEnumTableEntry"* @_ZN9cast_util21GenericEnumTableEntry12FindByStringEPKS0_mN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%"class.cast_util::GenericEnumTableEntry"*, i64, i8*, i64) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
