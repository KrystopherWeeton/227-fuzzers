; ModuleID = '../../services/proxy_resolver/public/cpp/proxy_resolver_mojom_traits.cc'
source_filename = "../../services/proxy_resolver/public/cpp/proxy_resolver_mojom_traits.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.proxy_resolver::mojom::internal::ProxyServer_Data" = type { %"struct.mojo::internal::StructHeader", i32, i16, [2 x i8], %"struct.mojo::internal::Pointer" }
%"struct.mojo::internal::StructHeader" = type { i32, i32 }
%"struct.mojo::internal::Pointer" = type { i64 }
%"class.mojo::Message" = type { %"class.mojo::ScopedHandleBase", %"class.mojo::internal::Buffer", %"class.std::__1::vector", %"class.std::__1::vector.7", %"class.mojo::ConnectionGroup::Ref"*, i8, i8, i8* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessageHandle" }
%"class.mojo::MessageHandle" = type { i64 }
%"class.mojo::internal::Buffer" = type { %"class.mojo::MessageHandle", i64, i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.mojo::ScopedHandleBase.1"*, %"class.mojo::ScopedHandleBase.1"*, %"class.std::__1::__compressed_pair.2" }
%"class.mojo::ScopedHandleBase.1" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.std::__1::__compressed_pair.2" = type { %"struct.std::__1::__compressed_pair_elem.3" }
%"struct.std::__1::__compressed_pair_elem.3" = type { %"class.mojo::ScopedHandleBase.1"* }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.mojo::ScopedInterfaceEndpointHandle"*, %"class.std::__1::__compressed_pair.9" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.mojo::ScopedInterfaceEndpointHandle"* }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.14 }
%class.scoped_refptr.14 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.18, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic.20", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.15" }
%"struct.std::__1::__atomic_base.15" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.17", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.17" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%class.scoped_refptr.18 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.19" }>
%"class.base::RefCountedThreadSafe.19" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"struct.std::__1::atomic.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__atomic_base.22" }
%"struct.std::__1::__atomic_base.22" = type { %"struct.std::__1::__cxx_atomic_impl.23" }
%"struct.std::__1::__cxx_atomic_impl.23" = type { %"struct.std::__1::__cxx_atomic_base_impl.24" }
%"struct.std::__1::__cxx_atomic_base_impl.24" = type { i32 }
%"class.proxy_resolver::mojom::internal::ProxyInfo_Data" = type { %"struct.mojo::internal::StructHeader", %"struct.mojo::internal::Pointer.25" }
%"struct.mojo::internal::Pointer.25" = type { i64 }
%"class.net::ProxyInfo" = type { %"class.net::ProxyList", %"class.std::__1::map", %"struct.net::MutableNetworkTrafficAnnotationTag", i8, %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.net::ProxyList" = type { %"class.std::__1::vector.26" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.net::ProxyServer"*, %"class.net::ProxyServer"*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.net::ProxyServer"* }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.33", %"class.std::__1::__compressed_pair.38" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.38" = type { %"struct.std::__1::__compressed_pair_elem.39" }
%"struct.std::__1::__compressed_pair_elem.39" = type { i64 }
%"struct.net::MutableNetworkTrafficAnnotationTag" = type { i32 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.proxy_resolver::mojom::ProxyInfoDataView" = type { %"class.proxy_resolver::mojom::internal::ProxyInfo_Data"*, %"class.mojo::Message"* }
%"class.mojo::internal::Array_Data.41" = type { %"struct.mojo::internal::ArrayHeader" }
%"struct.mojo::internal::ArrayHeader" = type { i32, i32 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN14proxy_resolver5mojom17ProxyInfoDataView16ReadProxyServersINSt3__16vectorIN3net11ProxyServerENS3_9allocatorIS6_EEEEEEbPT_ = comdat any

$_ZN4mojo11ArrayTraitsINSt3__16vectorIN3net11ProxyServerENS1_9allocatorIS4_EEEEE6ResizeERS7_m = comdat any

@switch.table._ZN4mojo12StructTraitsIN14proxy_resolver5mojom19ProxyServerDataViewEN3net11ProxyServerEE4ReadES3_PS5_ = private unnamed_addr constant [7 x i32] [i32 1, i32 2, i32 4, i32 8, i32 16, i32 32, i32 64], align 4

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN4mojo10EnumTraitsIN14proxy_resolver5mojom11ProxySchemeEN3net11ProxyServer6SchemeEE7ToMojomES6_(i32) local_unnamed_addr #0 align 2 {
  switch i32 %0, label %8 [
    i32 64, label %7
    i32 2, label %2
    i32 4, label %3
    i32 8, label %4
    i32 16, label %5
    i32 32, label %6
  ]

2:                                                ; preds = %1
  br label %8

3:                                                ; preds = %1
  br label %8

4:                                                ; preds = %1
  br label %8

5:                                                ; preds = %1
  br label %8

6:                                                ; preds = %1
  br label %8

7:                                                ; preds = %1
  br label %8

8:                                                ; preds = %1, %7, %6, %5, %4, %3, %2
  %9 = phi i32 [ 6, %7 ], [ 5, %6 ], [ 4, %5 ], [ 3, %4 ], [ 2, %3 ], [ 1, %2 ], [ 0, %1 ]
  ret i32 %9
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden zeroext i1 @_ZN4mojo10EnumTraitsIN14proxy_resolver5mojom11ProxySchemeEN3net11ProxyServer6SchemeEE9FromMojomES3_PS6_(i32, i32* nocapture) local_unnamed_addr #1 align 2 {
  %3 = icmp ult i32 %0, 7
  br i1 %3, label %4, label %8

4:                                                ; preds = %2
  %5 = sext i32 %0 to i64
  %6 = getelementptr inbounds [7 x i32], [7 x i32]* @switch.table._ZN4mojo12StructTraitsIN14proxy_resolver5mojom19ProxyServerDataViewEN3net11ProxyServerEE4ReadES3_PS5_, i64 0, i64 %5
  %7 = load i32, i32* %6, align 4
  store i32 %7, i32* %1, align 4
  br label %8

8:                                                ; preds = %2, %4
  %9 = phi i1 [ false, %2 ], [ true, %4 ]
  ret i1 %9
}

; Function Attrs: nounwind ssp uwtable
define hidden { i8*, i64 } @_ZN4mojo12StructTraitsIN14proxy_resolver5mojom19ProxyServerDataViewEN3net11ProxyServerEE4hostERKS5_(%"class.net::ProxyServer"* dereferenceable(40)) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 2
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = tail call dereferenceable(32) %"class.net::HostPortPair"* @_ZNK3net11ProxyServer14host_port_pairEv(%"class.net::ProxyServer"* %0) #10
  %8 = bitcast %"class.net::HostPortPair"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  %12 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = bitcast %"class.net::HostPortPair"* %7 to i8*
  %15 = select i1 %11, i8* %13, i8* %14
  %16 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = zext i8 %10 to i64
  %19 = select i1 %11, i64 %17, i64 %18
  br label %20

20:                                               ; preds = %1, %6
  %21 = phi i8* [ %15, %6 ], [ null, %1 ]
  %22 = phi i64 [ %19, %6 ], [ 0, %1 ]
  %23 = insertvalue { i8*, i64 } undef, i8* %21, 0
  %24 = insertvalue { i8*, i64 } %23, i64 %22, 1
  ret { i8*, i64 } %24
}

declare dereferenceable(32) %"class.net::HostPortPair"* @_ZNK3net11ProxyServer14host_port_pairEv(%"class.net::ProxyServer"*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i16 @_ZN4mojo12StructTraitsIN14proxy_resolver5mojom19ProxyServerDataViewEN3net11ProxyServerEE4portERKS5_(%"class.net::ProxyServer"* dereferenceable(40)) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = add i32 %3, -1
  %5 = icmp ult i32 %4, 2
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = tail call dereferenceable(32) %"class.net::HostPortPair"* @_ZNK3net11ProxyServer14host_port_pairEv(%"class.net::ProxyServer"* %0) #10
  %8 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %7, i64 0, i32 1
  %9 = load i16, i16* %8, align 8
  br label %10

10:                                               ; preds = %1, %6
  %11 = phi i16 [ %9, %6 ], [ 0, %1 ]
  ret i16 %11
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN14proxy_resolver5mojom19ProxyServerDataViewEN3net11ProxyServerEE4ReadES3_PS5_(%"class.proxy_resolver::mojom::internal::ProxyServer_Data"*, %"class.mojo::Message"*, %"class.net::ProxyServer"* nocapture) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.net::ProxyServer", align 8
  %5 = alloca %"class.net::HostPortPair", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = getelementptr inbounds %"class.proxy_resolver::mojom::internal::ProxyServer_Data", %"class.proxy_resolver::mojom::internal::ProxyServer_Data"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 1
  %9 = icmp ult i32 %8, 7
  br i1 %9, label %10, label %100

10:                                               ; preds = %3
  %11 = sext i32 %8 to i64
  %12 = getelementptr inbounds [7 x i32], [7 x i32]* @switch.table._ZN4mojo12StructTraitsIN14proxy_resolver5mojom19ProxyServerDataViewEN3net11ProxyServerEE4ReadES3_PS5_, i64 0, i64 %11
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.proxy_resolver::mojom::internal::ProxyServer_Data", %"class.proxy_resolver::mojom::internal::ProxyServer_Data"* %0, i64 0, i32 4
  %15 = getelementptr inbounds %"struct.mojo::internal::Pointer", %"struct.mojo::internal::Pointer"* %14, i64 0, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = icmp eq i64 %16, 0
  %18 = bitcast %"struct.mojo::internal::Pointer"* %14 to i8*
  %19 = getelementptr inbounds i8, i8* %18, i64 %16
  br i1 %17, label %28, label %20

20:                                               ; preds = %10
  %21 = getelementptr inbounds i8, i8* %19, i64 8
  %22 = getelementptr inbounds i8, i8* %19, i64 4
  %23 = bitcast i8* %22 to i32*
  %24 = load i32, i32* %23, align 1
  %25 = zext i32 %24 to i64
  %26 = tail call zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8* %21, i64 %25) #10
  br i1 %26, label %28, label %27

27:                                               ; preds = %20
  tail call void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() #10
  br label %28

28:                                               ; preds = %27, %20, %10
  %29 = phi i8* [ %21, %20 ], [ %21, %27 ], [ null, %10 ]
  %30 = phi i64 [ %25, %20 ], [ %25, %27 ], [ 0, %10 ]
  %31 = add nsw i32 %13, -1
  %32 = icmp ult i32 %31, 2
  br i1 %32, label %33, label %39

33:                                               ; preds = %28
  %34 = icmp eq i64 %30, 0
  br i1 %34, label %35, label %100

35:                                               ; preds = %33
  %36 = getelementptr inbounds %"class.proxy_resolver::mojom::internal::ProxyServer_Data", %"class.proxy_resolver::mojom::internal::ProxyServer_Data"* %0, i64 0, i32 2
  %37 = load i16, i16* %36, align 1
  %38 = icmp eq i16 %37, 0
  br i1 %38, label %39, label %100

39:                                               ; preds = %28, %35
  %40 = bitcast %"class.net::ProxyServer"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %40) #10
  %41 = bitcast %"class.net::HostPortPair"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #10
  %42 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %42) #10
  %43 = icmp ult i64 %30, 23
  br i1 %43, label %52, label %44

44:                                               ; preds = %39
  %45 = add nuw nsw i64 %30, 16
  %46 = and i64 %45, 8589934576
  %47 = tail call i8* @_Znwm(i64 %46) #11
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %47, i8** %48, align 8, !alias.scope !2
  %49 = or i64 %46, -9223372036854775808
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  store i64 %49, i64* %50, align 8, !alias.scope !2
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %30, i64* %51, align 8, !alias.scope !2
  br label %57

52:                                               ; preds = %39
  %53 = trunc i64 %30 to i8
  %54 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  store i8 %53, i8* %55, align 1, !alias.scope !2
  %56 = icmp eq i64 %30, 0
  br i1 %56, label %59, label %57

57:                                               ; preds = %52, %44
  %58 = phi i8* [ %47, %44 ], [ %42, %52 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %58, i8* align 1 %29, i64 %30, i1 false) #10
  br label %59

59:                                               ; preds = %52, %57
  %60 = phi i8* [ %42, %52 ], [ %58, %57 ]
  %61 = getelementptr inbounds i8, i8* %60, i64 %30
  store i8 0, i8* %61, align 1
  %62 = getelementptr inbounds %"class.proxy_resolver::mojom::internal::ProxyServer_Data", %"class.proxy_resolver::mojom::internal::ProxyServer_Data"* %0, i64 0, i32 2
  %63 = load i16, i16* %62, align 1
  call void @_ZN3net12HostPortPairC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEt(%"class.net::HostPortPair"* nonnull %5, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %6, i16 zeroext %63) #10
  call void @_ZN3net11ProxyServerC1ENS0_6SchemeERKNS_12HostPortPairE(%"class.net::ProxyServer"* nonnull %4, i32 %13, %"class.net::HostPortPair"* nonnull dereferenceable(32) %5) #10
  %64 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %4, i64 0, i32 0
  %65 = load i32, i32* %64, align 8
  %66 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %2, i64 0, i32 0
  store i32 %65, i32* %66, align 8
  %67 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %2, i64 0, i32 2
  %68 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %4, i64 0, i32 2
  %69 = bitcast %"class.net::HostPortPair"* %67 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %70 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %69, i64 0, i32 1, i32 0
  %71 = load i8, i8* %70, align 1
  %72 = icmp slt i8 %71, 0
  br i1 %72, label %73, label %76

73:                                               ; preds = %59
  %74 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %67, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %75) #11
  br label %76

76:                                               ; preds = %73, %59
  %77 = bitcast %"class.net::HostPortPair"* %67 to i8*
  %78 = bitcast %"class.net::HostPortPair"* %68 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %77, i8* align 8 %78, i64 24, i1 false) #10
  %79 = bitcast %"class.net::HostPortPair"* %68 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %80 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %79, i64 0, i32 1, i32 0
  store i8 0, i8* %80, align 1
  store i8 0, i8* %78, align 8
  %81 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %4, i64 0, i32 2, i32 1
  %82 = load i16, i16* %81, align 8
  %83 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %2, i64 0, i32 2, i32 1
  store i16 %82, i16* %83, align 8
  %84 = bitcast %"class.net::HostPortPair"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %85 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %84, i64 0, i32 1, i32 0
  %86 = load i8, i8* %85, align 1
  %87 = icmp slt i8 %86, 0
  br i1 %87, label %88, label %91

88:                                               ; preds = %76
  %89 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %90) #11
  br label %91

91:                                               ; preds = %76, %88
  %92 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %91
  %97 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  call void @_ZdlPv(i8* %98) #11
  br label %99

99:                                               ; preds = %91, %96
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %42) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #10
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %40) #10
  br label %100

100:                                              ; preds = %3, %99, %35, %33
  %101 = phi i1 [ false, %3 ], [ true, %99 ], [ false, %35 ], [ false, %33 ]
  ret i1 %101
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN3net12HostPortPairC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEt(%"class.net::HostPortPair"*, %"class.std::__1::basic_string"* dereferenceable(24), i16 zeroext) unnamed_addr #3

declare void @_ZN3net11ProxyServerC1ENS0_6SchemeERKNS_12HostPortPairE(%"class.net::ProxyServer"*, i32, %"class.net::HostPortPair"* dereferenceable(32)) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN4mojo12StructTraitsIN14proxy_resolver5mojom17ProxyInfoDataViewEN3net9ProxyInfoEE4ReadES3_PS5_(%"class.proxy_resolver::mojom::internal::ProxyInfo_Data"*, %"class.mojo::Message"*, %"class.net::ProxyInfo"*) local_unnamed_addr #2 align 2 {
  %4 = alloca %"class.proxy_resolver::mojom::ProxyInfoDataView", align 8
  %5 = alloca %"class.std::__1::vector.26", align 8
  %6 = alloca %"class.net::ProxyList", align 8
  %7 = getelementptr inbounds %"class.proxy_resolver::mojom::ProxyInfoDataView", %"class.proxy_resolver::mojom::ProxyInfoDataView"* %4, i64 0, i32 0
  store %"class.proxy_resolver::mojom::internal::ProxyInfo_Data"* %0, %"class.proxy_resolver::mojom::internal::ProxyInfo_Data"** %7, align 8
  %8 = getelementptr inbounds %"class.proxy_resolver::mojom::ProxyInfoDataView", %"class.proxy_resolver::mojom::ProxyInfoDataView"* %4, i64 0, i32 1
  store %"class.mojo::Message"* %1, %"class.mojo::Message"** %8, align 8
  %9 = bitcast %"class.std::__1::vector.26"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #10
  %10 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %5, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %5, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 0, i64 24, i1 false) #10
  %12 = call zeroext i1 @_ZN14proxy_resolver5mojom17ProxyInfoDataView16ReadProxyServersINSt3__16vectorIN3net11ProxyServerENS3_9allocatorIS6_EEEEEEbPT_(%"class.proxy_resolver::mojom::ProxyInfoDataView"* nonnull %4, %"class.std::__1::vector.26"* nonnull %5)
  br i1 %12, label %13, label %24

13:                                               ; preds = %3
  %14 = bitcast %"class.net::ProxyList"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #10
  %15 = bitcast %"class.net::ProxyList"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false)
  call void @_ZN3net9ProxyListC1Ev(%"class.net::ProxyList"* nonnull %6) #10
  %16 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %10, align 8
  %17 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %11, align 8
  %18 = icmp eq %"class.net::ProxyServer"* %16, %17
  br i1 %18, label %19, label %20

19:                                               ; preds = %20, %13
  call void @_ZN3net9ProxyInfo12UseProxyListERKNS_9ProxyListE(%"class.net::ProxyInfo"* %2, %"class.net::ProxyList"* nonnull dereferenceable(24) %6) #10
  call void @_ZN3net9ProxyListD1Ev(%"class.net::ProxyList"* nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #10
  br label %24

20:                                               ; preds = %13, %20
  %21 = phi %"class.net::ProxyServer"* [ %22, %20 ], [ %16, %13 ]
  call void @_ZN3net9ProxyList14AddProxyServerERKNS_11ProxyServerE(%"class.net::ProxyList"* nonnull %6, %"class.net::ProxyServer"* dereferenceable(40) %21) #10
  %22 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %21, i64 1
  %23 = icmp eq %"class.net::ProxyServer"* %22, %17
  br i1 %23, label %19, label %20

24:                                               ; preds = %3, %19
  %25 = phi i1 [ true, %19 ], [ false, %3 ]
  %26 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %10, align 8
  %27 = icmp eq %"class.net::ProxyServer"* %26, null
  br i1 %27, label %50, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.net::ProxyServer"* %26 to i8*
  %30 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %11, align 8
  %31 = icmp eq %"class.net::ProxyServer"* %30, %26
  br i1 %31, label %48, label %32

32:                                               ; preds = %28, %43
  %33 = phi %"class.net::ProxyServer"* [ %34, %43 ], [ %30, %28 ]
  %34 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %33, i64 -1
  %35 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %33, i64 -1, i32 2
  %36 = bitcast %"class.net::HostPortPair"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %43

40:                                               ; preds = %32
  %41 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  call void @_ZdlPv(i8* %42) #11
  br label %43

43:                                               ; preds = %40, %32
  %44 = icmp eq %"class.net::ProxyServer"* %34, %26
  br i1 %44, label %45, label %32

45:                                               ; preds = %43
  %46 = bitcast %"class.std::__1::vector.26"* %5 to i8**
  %47 = load i8*, i8** %46, align 8
  br label %48

48:                                               ; preds = %45, %28
  %49 = phi i8* [ %47, %45 ], [ %29, %28 ]
  store %"class.net::ProxyServer"* %26, %"class.net::ProxyServer"** %11, align 8
  call void @_ZdlPv(i8* %49) #11
  br label %50

50:                                               ; preds = %24, %48
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #10
  ret i1 %25
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN14proxy_resolver5mojom17ProxyInfoDataView16ReadProxyServersINSt3__16vectorIN3net11ProxyServerENS3_9allocatorIS6_EEEEEEbPT_(%"class.proxy_resolver::mojom::ProxyInfoDataView"*, %"class.std::__1::vector.26"*) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.proxy_resolver::mojom::ProxyInfoDataView", %"class.proxy_resolver::mojom::ProxyInfoDataView"* %0, i64 0, i32 0
  %4 = load %"class.proxy_resolver::mojom::internal::ProxyInfo_Data"*, %"class.proxy_resolver::mojom::internal::ProxyInfo_Data"** %3, align 8
  %5 = getelementptr inbounds %"class.proxy_resolver::mojom::internal::ProxyInfo_Data", %"class.proxy_resolver::mojom::internal::ProxyInfo_Data"* %4, i64 0, i32 1
  %6 = getelementptr inbounds %"struct.mojo::internal::Pointer.25", %"struct.mojo::internal::Pointer.25"* %5, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  %9 = bitcast %"struct.mojo::internal::Pointer.25"* %5 to i8*
  %10 = getelementptr inbounds i8, i8* %9, i64 %7
  %11 = getelementptr inbounds %"class.proxy_resolver::mojom::ProxyInfoDataView", %"class.proxy_resolver::mojom::ProxyInfoDataView"* %0, i64 0, i32 1
  %12 = load %"class.mojo::Message"*, %"class.mojo::Message"** %11, align 8
  %13 = icmp eq i8* %10, null
  %14 = or i1 %8, %13
  br i1 %14, label %15, label %35

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %1, i64 0, i32 0, i32 1
  %19 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %18, align 8
  %20 = icmp eq %"class.net::ProxyServer"* %19, %17
  br i1 %20, label %34, label %21

21:                                               ; preds = %15, %32
  %22 = phi %"class.net::ProxyServer"* [ %23, %32 ], [ %19, %15 ]
  %23 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %22, i64 -1
  %24 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %22, i64 -1, i32 2
  %25 = bitcast %"class.net::HostPortPair"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %21
  %30 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  tail call void @_ZdlPv(i8* %31) #11
  br label %32

32:                                               ; preds = %29, %21
  %33 = icmp eq %"class.net::ProxyServer"* %23, %17
  br i1 %33, label %34, label %21

34:                                               ; preds = %32, %15
  store %"class.net::ProxyServer"* %17, %"class.net::ProxyServer"** %18, align 8
  br label %69

35:                                               ; preds = %2
  %36 = getelementptr inbounds i8, i8* %10, i64 4
  %37 = bitcast i8* %36 to i32*
  %38 = load i32, i32* %37, align 1
  %39 = zext i32 %38 to i64
  %40 = tail call zeroext i1 @_ZN4mojo11ArrayTraitsINSt3__16vectorIN3net11ProxyServerENS1_9allocatorIS4_EEEEE6ResizeERS7_m(%"class.std::__1::vector.26"* dereferenceable(24) %1, i64 %39) #10
  br i1 %40, label %41, label %69

41:                                               ; preds = %35
  %42 = load i32, i32* %37, align 1
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %69, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds i8, i8* %10, i64 8
  %46 = bitcast i8* %45 to %"class.mojo::internal::Array_Data.41"*
  %47 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %1, i64 0, i32 0, i32 0
  br label %48

48:                                               ; preds = %65, %44
  %49 = phi i32 [ %42, %44 ], [ %66, %65 ]
  %50 = phi i64 [ 0, %44 ], [ %55, %65 ]
  %51 = getelementptr inbounds %"class.mojo::internal::Array_Data.41", %"class.mojo::internal::Array_Data.41"* %46, i64 %50
  %52 = bitcast %"class.mojo::internal::Array_Data.41"* %51 to i64*
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  %55 = add nuw nsw i64 %50, 1
  br i1 %54, label %65, label %56

56:                                               ; preds = %48
  %57 = bitcast %"class.mojo::internal::Array_Data.41"* %51 to i8*
  %58 = getelementptr inbounds i8, i8* %57, i64 %53
  %59 = bitcast i8* %58 to %"class.proxy_resolver::mojom::internal::ProxyServer_Data"*
  %60 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %47, align 8
  %61 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %60, i64 %50
  %62 = tail call zeroext i1 @_ZN4mojo12StructTraitsIN14proxy_resolver5mojom19ProxyServerDataViewEN3net11ProxyServerEE4ReadES3_PS5_(%"class.proxy_resolver::mojom::internal::ProxyServer_Data"* nonnull %59, %"class.mojo::Message"* %12, %"class.net::ProxyServer"* %61) #10
  br i1 %62, label %63, label %69

63:                                               ; preds = %56
  %64 = load i32, i32* %37, align 1
  br label %65

65:                                               ; preds = %63, %48
  %66 = phi i32 [ %64, %63 ], [ %49, %48 ]
  %67 = zext i32 %66 to i64
  %68 = icmp ult i64 %55, %67
  br i1 %68, label %48, label %69

69:                                               ; preds = %56, %65, %34, %35, %41
  %70 = phi i1 [ true, %34 ], [ false, %35 ], [ true, %41 ], [ false, %56 ], [ true, %65 ]
  ret i1 %70
}

declare void @_ZN3net9ProxyListC1Ev(%"class.net::ProxyList"*) unnamed_addr #3

declare void @_ZN3net9ProxyList14AddProxyServerERKNS_11ProxyServerE(%"class.net::ProxyList"*, %"class.net::ProxyServer"* dereferenceable(40)) local_unnamed_addr #3

declare void @_ZN3net9ProxyInfo12UseProxyListERKNS_9ProxyListE(%"class.net::ProxyInfo"*, %"class.net::ProxyList"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN3net9ProxyListD1Ev(%"class.net::ProxyList"*) unnamed_addr #5

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

declare void @_ZN4mojo8internal34RecordInvalidStringDeserializationEv() local_unnamed_addr #3

declare zeroext i1 @_ZN4base12IsStringUTF8ENS_16BasicStringPieceIcNSt3__111char_traitsIcEEEE(i8*, i64) local_unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4mojo11ArrayTraitsINSt3__16vectorIN3net11ProxyServerENS1_9allocatorIS4_EEEEE6ResizeERS7_m(%"class.std::__1::vector.26"* dereferenceable(24), i64) local_unnamed_addr #8 comdat align 2 {
  %3 = alloca %"class.std::__1::vector.26", align 8
  %4 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %0, i64 0, i32 0, i32 1
  %5 = bitcast %"class.net::ProxyServer"** %4 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.std::__1::vector.26"* %0 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = sub i64 %6, %8
  %10 = sdiv exact i64 %9, 40
  %11 = icmp eq i64 %10, %1
  br i1 %11, label %74, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.26"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13) #10
  %14 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %3, i64 0, i32 0, i32 1
  %15 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #10
  %16 = icmp eq i64 %1, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %12
  %18 = bitcast %"class.net::ProxyServer"** %14 to i64*
  br label %42

19:                                               ; preds = %12
  %20 = icmp ugt i64 %1, 461168601842738790
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector.26"* %3 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %22) #12
  unreachable

23:                                               ; preds = %19
  %24 = mul i64 %1, 40
  %25 = tail call i8* @_Znwm(i64 %24) #11
  %26 = bitcast i8* %25 to %"class.net::ProxyServer"*
  %27 = bitcast %"class.net::ProxyServer"** %14 to i8**
  store i8* %25, i8** %27, align 8
  %28 = bitcast %"class.std::__1::vector.26"* %3 to i8**
  store i8* %25, i8** %28, align 8
  %29 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %26, i64 %1
  store %"class.net::ProxyServer"* %29, %"class.net::ProxyServer"** %15, align 8
  %30 = ptrtoint i8* %25 to i64
  %31 = ptrtoint %"class.net::ProxyServer"* %29 to i64
  br label %32

32:                                               ; preds = %32, %23
  %33 = phi %"class.net::ProxyServer"* [ %36, %32 ], [ %26, %23 ]
  %34 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %33, i64 0, i32 0
  store i32 1, i32* %34, align 8
  %35 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %33, i64 0, i32 2
  tail call void @_ZN3net12HostPortPairC1Ev(%"class.net::HostPortPair"* %35) #10
  %36 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %33, i64 1
  %37 = icmp eq %"class.net::ProxyServer"* %36, %29
  br i1 %37, label %38, label %32

38:                                               ; preds = %32
  %39 = bitcast %"class.net::ProxyServer"** %14 to i64*
  store i64 %31, i64* %39, align 8
  %40 = load i64, i64* %7, align 8
  %41 = load i64, i64* %5, align 8
  br label %42

42:                                               ; preds = %17, %38
  %43 = phi i64* [ %18, %17 ], [ %39, %38 ]
  %44 = phi i64 [ 0, %17 ], [ %31, %38 ]
  %45 = phi i64 [ %6, %17 ], [ %41, %38 ]
  %46 = phi i64 [ 0, %17 ], [ %30, %38 ]
  %47 = phi i64 [ %8, %17 ], [ %40, %38 ]
  %48 = bitcast %"class.std::__1::vector.26"* %3 to i64*
  store i64 %46, i64* %7, align 8
  store i64 %47, i64* %48, align 8
  store i64 %44, i64* %5, align 8
  store i64 %45, i64* %43, align 8
  %49 = getelementptr inbounds %"class.std::__1::vector.26", %"class.std::__1::vector.26"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %50 = bitcast %"class.net::ProxyServer"** %49 to i64*
  %51 = load i64, i64* %50, align 8
  %52 = bitcast %"class.net::ProxyServer"** %15 to i64*
  store i64 %44, i64* %50, align 8
  store i64 %51, i64* %52, align 8
  %53 = inttoptr i64 %47 to %"class.net::ProxyServer"*
  %54 = icmp eq i64 %47, 0
  %55 = inttoptr i64 %45 to %"class.net::ProxyServer"*
  br i1 %54, label %73, label %56

56:                                               ; preds = %42
  %57 = icmp eq %"class.net::ProxyServer"* %55, %53
  br i1 %57, label %71, label %58

58:                                               ; preds = %56, %69
  %59 = phi %"class.net::ProxyServer"* [ %60, %69 ], [ %55, %56 ]
  %60 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %59, i64 -1
  %61 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %59, i64 -1, i32 2
  %62 = bitcast %"class.net::HostPortPair"* %61 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %63 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %62, i64 0, i32 1, i32 0
  %64 = load i8, i8* %63, align 1
  %65 = icmp slt i8 %64, 0
  br i1 %65, label %66, label %69

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %61, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load i8*, i8** %67, align 8
  tail call void @_ZdlPv(i8* %68) #11
  br label %69

69:                                               ; preds = %66, %58
  %70 = icmp eq %"class.net::ProxyServer"* %60, %53
  br i1 %70, label %71, label %58

71:                                               ; preds = %69, %56
  %72 = inttoptr i64 %47 to i8*
  store %"class.net::ProxyServer"* %53, %"class.net::ProxyServer"** %14, align 8
  tail call void @_ZdlPv(i8* %72) #11
  br label %73

73:                                               ; preds = %42, %71
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13) #10
  br label %74

74:                                               ; preds = %2, %73
  ret i1 true
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #9

declare void @_ZN3net12HostPortPairC1Ev(%"class.net::HostPortPair"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv: argument 0"}
!4 = distinct !{!4, !"_ZNK4base16BasicStringPieceIcNSt3__111char_traitsIcEEEcvNS1_12basic_stringIcS3_NS1_9allocatorIcEEEEEv"}
